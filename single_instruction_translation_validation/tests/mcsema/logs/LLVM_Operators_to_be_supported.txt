add <2 x i32> %0, %0
add   i32 %0, %0
alloca { <2 x float>, <2 x float> }
alloca <2 x i32>
alloca <4 x double>
alloca { i32, i32 }
alloca %struct.float32v8_t
alloca %struct.int32v8_t
alloca %struct.State
alloca %struct.uint16v16_t
alloca %struct.uint64v4_t
alloca %struct.uint8v32_t
and <4 x i32> %0, %0
and i32 %0, %0
ashr exact i32 %0, 16
ashr i32 %0, 7
bitcast <2 x float> %0 to <2 x i32>
bitcast <2 x i32>* %0 to { i32, i32 }*
bitcast <4 x double>* %0 to i32*
bitcast <4 x i32> %0 to <4 x float>
bitcast %"class.std::bitset"* %YMM1 to i32*
bitcast %"class.std::bitset"* %YMM2 to i32*
bitcast %"class.std::bitset"* %YMM3 to i32*
bitcast double %0 to i32
bitcast float* %0 to <4 x float>*
bitcast float %0 to i32
bitcast i32* %0 to <16 x i32>*
bitcast i32* %0 to <2 x double>*
bitcast i32* %0 to <2 x float>*
bitcast i32* %0 to <2 x i32>*
bitcast i32* %0 to <4 x float>*
bitcast i32* %0 to <4 x i32>*
bitcast i32* %0 to <8 x i32>*
bitcast i32 %0 to double
bitcast i32* %0 to double*
bitcast i32 %0 to float
bitcast i32* %0 to float*
bitcast i32* %0 to i32*
bitcast i32* %RBX to [2 x i32]*
bitcast i32* %RBX to i32*
bitcast %struct.float32v8_t* %0 to <4 x float>*
bitcast %struct.float32v8_t* %0 to i32*
bitcast %struct.int32v8_t* %0 to <4 x i32>*
bitcast %struct.int32v8_t* %0 to i32*
bitcast %struct.uint16v16_t* %0 to <8 x i32>*
bitcast %struct.uint16v16_t* %0 to i32*
bitcast %struct.uint64v4_t* %0 to i32*
bitcast %struct.uint8v32_t* %0 to <16 x i32>*
bitcast %union.anon* %0 to i32*
bitcast %union.anon* %0 to %struct.anon.2*
bitcast %union.vec128_t* %XMM1 to i32*
bitcast %union.vec128_t* %XMM2 to i32*
bitcast %union.vec128_t* %XMM3 to i32*
bitcast %union.VectorReg* %0 to %"class.std::bitset"*
bitcast %union.VectorReg* %0 to %union.vec128_t*
call <4 x double> @my.fabs.v4f64(<4 x double> %0) #14
call <4 x double> @my.nearbyint.v4f64(<4 x double> %0) #14
call <4 x double> @my.trunc.v4f64(<4 x double> %0) #14
call <4 x float> @my.fabs.v4f32(<4 x float> %0) #14
call <4 x float> @my.nearbyint.v4f32(<4 x float> %0) #14
call <4 x float> @my.trunc.v4f32(<4 x float> %0) #14
call double @my.fabs.f64(double %0) #14
call double @my.nearbyint.f64(double %0) #14
call double @my.trunc.f64(double %0) #14
call double @sqrt(double %0) #15
call float @my.fabs.f32(float %0) #14
call float @my.nearbyint.f32(float %0) #14
call float @my.trunc.f32(float %0) #14
call float @sqrtf(float %0) #15
call i32 @my.bswap.i32(i32 %0) #14
call i32 @my.ctlz.i32(i32 %0, i32 false) #14
call i32 @my.ctlz.i32(i32 %0, i32 true) #14
call i32 @my.ctpop.i32(i32 %0) #14
call i32 @my.cttz.i32(i32 %0, i32 false) #14
call i32 @my.cttz.i32(i32 %0, i32 true) #14
call %struct.Memory* @__remill_atomic_begin(%struct.Memory* %0)
call %struct.Memory* @__remill_atomic_end(%struct.Memory* %0)
call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i32 %0, %struct.Memory* %0) #15
call void @my.lifetime.end(i32 32, i32* nonnull %0) #14
call void @my.lifetime.start(i32 32, i32* nonnull %0) #14
call void @my.memcpy.p0i32.p0i32.i32(i32* nonnull %0, i32* %0, i32 32, i32 1, i32 false) #14
call void @my.memset.p0i32.i32(i32* nonnull %0, i32 0, i32 29, i32 1, i32 false) #14
extractelement <2 x float> %0, i32 0
extractelement <2 x i32> %0, i32 0
extractelement <2 x i32> %0, i32 1
fadd <2 x double> %0, %0
fadd <4 x float> %0, %0
fadd double %0, %0
fadd float %0, %0
fcmp oeq double %0, %0
fcmp oeq double %0, 0.000000e+00
fcmp oeq float %0, %0
fcmp oeq float %0, 0.000000e+00
fcmp ogt <4 x double> %0, <double 0x41DFFFFFFFC00000, double 0x41DFFFFFFFC00000, double 0x41DFFFFFFFC00000, double 0x41DFFFFFFFC00000>
fcmp ogt <4 x float> %0, <float 0x41E0000000000000, float 0x41E0000000000000, float 0x41E0000000000000, float 0x41E0000000000000>
fcmp ogt double %0, %0
fcmp ogt double %0, 0x41DFFFFFFFC00000
fcmp ogt double %0, 0x43E0000000000000
fcmp ogt float %0, %0
fcmp ogt float %0, 0x41E0000000000000
fcmp olt double %0, %0
fcmp olt float %0, %0
fcmp ult double %0, %0
fcmp ult float %0, %0
fcmp une double %0, -0.000000e+00
fcmp une float %0, -0.000000e+00
fcmp uno double %0, %0
fcmp uno double %0, 0.000000e+00
fcmp uno float %0, %0
fcmp uno float %0, 0.000000e+00
fdiv <2 x double> %0, %0
fdiv <4 x float> %0, %0
fdiv double %0, %0
fdiv float %0, %0
fmul <2 x double> %0, %0
fmul <4 x float> %0, %0
fmul double %0, %0
fmul float %0, %0
fpext float %0 to double
fptosi <4 x double> %0 to <4 x i32>
fptosi <4 x float> %0 to <4 x i32>
fptosi double %0 to i32
fptosi float %0 to i32
fptrunc <4 x double> %0 to <4 x float>
fptrunc double %0 to float
fsub <2 x double> %0, %0
fsub <4 x float> %0, %0
fsub double %0, %0
fsub float %0, %0
getelementptr inbounds [2 x i32], [2 x i32]* %0, i32 0, i32 1
getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %0, i32 0, i32 1
getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %0, i32 0, i32 2
getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %0, i32 0, i32 3
getelementptr inbounds i32, i32* %0, i32 1
getelementptr inbounds i32, i32* %0, i32 10
getelementptr inbounds i32, i32* %0, i32 11
getelementptr inbounds i32, i32* %0, i32 12
getelementptr inbounds i32, i32* %0, i32 13
getelementptr inbounds i32, i32* %0, i32 14
getelementptr inbounds i32, i32* %0, i32 15
getelementptr inbounds i32, i32* %0, i32 16
getelementptr inbounds i32, i32* %0, i32 17
getelementptr inbounds i32, i32* %0, i32 18
getelementptr inbounds i32, i32* %0, i32 19
getelementptr inbounds i32, i32* %0, i32 2
getelementptr inbounds i32, i32* %0, i32 20
getelementptr inbounds i32, i32* %0, i32 21
getelementptr inbounds i32, i32* %0, i32 22
getelementptr inbounds i32, i32* %0, i32 23
getelementptr inbounds i32, i32* %0, i32 24
getelementptr inbounds i32, i32* %0, i32 25
getelementptr inbounds i32, i32* %0, i32 26
getelementptr inbounds i32, i32* %0, i32 27
getelementptr inbounds i32, i32* %0, i32 28
getelementptr inbounds i32, i32* %0, i32 29
getelementptr inbounds i32, i32* %0, i32 3
getelementptr inbounds i32, i32* %0, i32 30
getelementptr inbounds i32, i32* %0, i32 31
getelementptr inbounds i32, i32* %0, i32 4
getelementptr inbounds i32, i32* %0, i32 5
getelementptr inbounds i32, i32* %0, i32 6
getelementptr inbounds i32, i32* %0, i32 7
getelementptr inbounds i32, i32* %0, i32 8
getelementptr inbounds i32, i32* %0, i32 9
getelementptr inbounds %struct.anon.2, %struct.anon.2* %0, i32 0, i32 0
getelementptr inbounds %struct.anon.2, %struct.anon.2* %0, i32 0, i32 1
getelementptr inbounds %struct.float32v8_t, %struct.float32v8_t* %0, i32 0, i32 0, i32 4
getelementptr inbounds %struct.GPR, %struct.GPR* %0, i32 0, i32 1
getelementptr inbounds %struct.GPR, %struct.GPR* %0, i32 0, i32 3
getelementptr inbounds %struct.GPR, %struct.GPR* %0, i32 0, i32 33
getelementptr inbounds %struct.GPR, %struct.GPR* %0, i32 0, i32 5
getelementptr inbounds %struct.int32v8_t, %struct.int32v8_t* %0, i32 0, i32 0, i32 4
getelementptr inbounds %struct.Reg, %struct.Reg* %0, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 11, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 12, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 13, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 14, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 15, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 3, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 4, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 5, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 6, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 7, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 1
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 13
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 3
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 5
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 7
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, i32 9
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, i32 1, i32 0
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, i32 1, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, i32 33, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, i32 7, i32 0
getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, i32 7, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 11, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 13, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 15, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 1, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 33, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 3, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 5, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 7, i32 0, i32 0
getelementptr inbounds %struct.State, %struct.State* %state, i32 0, i32 6, i32 9, i32 0, i32 0
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 0
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 1
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 10
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 11
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 12
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 13
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 14
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 15
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 3
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 4
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 5
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 6
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 7
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 8
getelementptr inbounds %struct.uint16v16_t, %struct.uint16v16_t* %0, i32 0, i32 0, i32 9
getelementptr inbounds %struct.uint64v4_t, %struct.uint64v4_t* %0, i32 0, i32 0, i32 0
getelementptr inbounds %struct.uint64v4_t, %struct.uint64v4_t* %0, i32 0, i32 0, i32 1
getelementptr inbounds %struct.uint64v4_t, %struct.uint64v4_t* %0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.uint64v4_t, %struct.uint64v4_t* %0, i32 0, i32 0, i32 3
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 0
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 %0
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 1
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 10
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 11
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 12
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 13
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 14
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 15
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 16
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 17
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 18
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 19
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 2
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 20
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 21
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 22
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 23
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 24
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 25
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 26
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 27
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 28
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 29
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 3
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 30
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 31
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 4
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 5
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 6
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 7
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 8
getelementptr inbounds %struct.uint8v32_t, %struct.uint8v32_t* %0, i32 0, i32 0, i32 9
getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
icmp eq <16 x i32> %0, %0
icmp eq <4 x i32> %0, %0
icmp eq <8 x i32> %0, %0
icmp eq i32 %0, 0
icmp ne i32 0, 0
icmp sgt <16 x i32> %0, %0
icmp sgt <4 x i32> %0, %0
icmp sgt <8 x i32> %0, %0
icmp sgt i32 %0, 0
icmp slt i32 %0, 0
icmp slt i32 %0, 255
icmp uge i32 %0, %0
icmp ugt i32 %0, 63
icmp ult <8 x i32> %0, %0
icmp ult i32 %0, %0
insertelement <4 x i32> %0, i32 %0, i32 1
insertelement <4 x i32> undef, i32 %0, i32 0
load <2 x double>, <2 x double>* %0
load <2 x float>, <2 x float>* %0
load <2 x i32>, <2 x i32>* %0
load <4 x double>, <4 x double>* %0
load <4 x float>, <4 x float>* %0
load <4 x i32>, <4 x i32>* %0
load <8 x i32>, <8 x i32>* %0
load double, double* %0
load i32, i32* %0
lshr exact i32 %0, 32
lshr i32 %0, %0
mul  i32 %0, %0
or <2 x i32> %0, %0
or <4 x i32> %0, %0
or i32 %0, %0
phi double [ %0, %0 ], [ %0, %0 ], [ %0, %0 ], [ 0xFFF8000000000000, %0 ]
phi float [ %0, %0 ], [ %0, %0 ], [ %0, %0 ], [ 0xFFF8000000000000, %0 ]
phi i32 [ %0, %0 ], [ %0, %0 ]
phi i32 [ %0, %0 ], [ 0, %0 ]
phi %struct.Memory* [ %0, %0 ], [ %0, %0 ]
ret i32 %add91
sdiv i32 %0, %0
select <4 x i32> %0, <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, <4 x i32> %0
select <8 x i32> %0, <8 x i32> <i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1>, <8 x i32> %0
select i32 %0, i32 %0, i32 0
select i32 %0, i32 %0, i32 255
select i32 %0, i32 16, i32 %0
select i32 %0, i32 -2147483648, i32 %0
select i32 %0, i32 2147483648, i32 %0
select i32 %0, i32 -9223372036854775808, i32 %0
sext <16 x i32> %0 to <16 x i32>
sext i32 %0 to i32
shl i32 %0, %0
shufflevector <2 x float> %0, <2 x float> %0, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
sitofp <4 x i32> %0 to <4 x float>
sitofp i32 %0 to double
sitofp i32 %0 to float
srem i32 %0, %0
store <16 x i32> %0, <16 x i32>* %0
store <2 x double> %0, <2 x double>* %0
store <2 x double> zeroinitializer, <2 x double>* %0
store <2 x i32> %0, <2 x i32>* %0
store <2 x i32> zeroinitializer, <2 x i32>* %0
store <4 x float> %0, <4 x float>* %0
store <4 x float> zeroinitializer, <4 x float>* %0
store <4 x i32> %0, <4 x i32>* %0
store <4 x i32> zeroinitializer, <4 x i32>* %0
store <8 x i32> %0, <8 x i32>* %0
store double %0, double* %0
store float %0, float* %0
store i32 100, i32* %addr1
store i32 1, i32* %0
sub  <2 x i32> %0, %0
sub i32 %0, %0
sub  i32 16, %0
trunc <8 x i32> %0 to <8 x i32>
trunc i32 %0 to i32
udiv i32 %0, %0
urem i32 %0, %0
urem i32 %0, 9
xor <2 x i32> %0, <i32 -1, i32 -1>
xor <4 x i32> %0, %0
xor <4 x i32> %0, <i32 -1, i32 -1, i32 -1, i32 -1>
xor i32 %0, %0
zext i32 %0 to i32
