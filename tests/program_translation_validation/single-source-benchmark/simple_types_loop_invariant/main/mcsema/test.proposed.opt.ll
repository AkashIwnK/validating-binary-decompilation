; ModuleID = 'mcsema/test.proposed.inline.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%__bss_start_type = type <{ [8 x i8] }>
%G_0x61a080_type = type <{ [4 x i8] }>
%G_0x61a088_type = type <{ [16 x i8] }>
%G__0x41401a_type = type <{ [4 x i8] }>
%G__0x41401b_type = type <{ [4 x i8] }>
%G__0x41402f_type = type <{ [4 x i8] }>
%G__0x414030_type = type <{ [4 x i8] }>
%G__0x41406b_type = type <{ [4 x i8] }>
%G__0x41406c_type = type <{ [4 x i8] }>
%G__0x4140a9_type = type <{ [4 x i8] }>
%G__0x4140aa_type = type <{ [4 x i8] }>
%G__0x41410e_type = type <{ [4 x i8] }>
%G__0x41410f_type = type <{ [4 x i8] }>
%G__0x41418b_type = type <{ [4 x i8] }>
%G__0x41418c_type = type <{ [4 x i8] }>
%G__0x4141be_type = type <{ [4 x i8] }>
%G__0x4141bf_type = type <{ [4 x i8] }>
%G__0x4141ef_type = type <{ [4 x i8] }>
%G__0x4141f0_type = type <{ [4 x i8] }>
%G__0x414222_type = type <{ [4 x i8] }>
%G__0x414223_type = type <{ [4 x i8] }>
%G__0x414238_type = type <{ [4 x i8] }>
%G__0x414239_type = type <{ [4 x i8] }>
%G__0x414276_type = type <{ [4 x i8] }>
%G__0x414277_type = type <{ [4 x i8] }>
%G__0x4142b6_type = type <{ [4 x i8] }>
%G__0x4142b7_type = type <{ [4 x i8] }>
%G__0x41431e_type = type <{ [4 x i8] }>
%G__0x41431f_type = type <{ [4 x i8] }>
%G__0x41439f_type = type <{ [4 x i8] }>
%G__0x4143a0_type = type <{ [4 x i8] }>
%G__0x4143d4_type = type <{ [4 x i8] }>
%G__0x4143d5_type = type <{ [4 x i8] }>
%G__0x414407_type = type <{ [4 x i8] }>
%G__0x414408_type = type <{ [4 x i8] }>
%G__0x41443c_type = type <{ [4 x i8] }>
%G__0x41443d_type = type <{ [4 x i8] }>
%G__0x414452_type = type <{ [4 x i8] }>
%G__0x414453_type = type <{ [4 x i8] }>
%G__0x414490_type = type <{ [4 x i8] }>
%G__0x414491_type = type <{ [4 x i8] }>
%G__0x4144d0_type = type <{ [4 x i8] }>
%G__0x4144d1_type = type <{ [4 x i8] }>
%G__0x414538_type = type <{ [4 x i8] }>
%G__0x414539_type = type <{ [4 x i8] }>
%G__0x4145b9_type = type <{ [4 x i8] }>
%G__0x4145ba_type = type <{ [4 x i8] }>
%G__0x4145ee_type = type <{ [4 x i8] }>
%G__0x4145ef_type = type <{ [4 x i8] }>
%G__0x414621_type = type <{ [4 x i8] }>
%G__0x414622_type = type <{ [4 x i8] }>
%G__0x414656_type = type <{ [8 x i8] }>
%G__0x414657_type = type <{ [4 x i8] }>
%G__0x41466c_type = type <{ [8 x i8] }>
%G__0x41466d_type = type <{ [4 x i8] }>
%G__0x41468a_type = type <{ [8 x i8] }>
%G__0x4146aa_type = type <{ [8 x i8] }>
%G__0x4146ab_type = type <{ [4 x i8] }>
%G__0x4146c5_type = type <{ [8 x i8] }>
%G__0x4146ea_type = type <{ [8 x i8] }>
%G__0x4146eb_type = type <{ [4 x i8] }>
%G__0x414705_type = type <{ [8 x i8] }>
%G__0x41472b_type = type <{ [8 x i8] }>
%G__0x414752_type = type <{ [8 x i8] }>
%G__0x414753_type = type <{ [4 x i8] }>
%G__0x41476b_type = type <{ [8 x i8] }>
%G__0x41478e_type = type <{ [8 x i8] }>
%G__0x4147b2_type = type <{ [8 x i8] }>
%G__0x4147d3_type = type <{ [8 x i8] }>
%G__0x4147d4_type = type <{ [4 x i8] }>
%G__0x4147e9_type = type <{ [8 x i8] }>
%G__0x414808_type = type <{ [8 x i8] }>
%G__0x414809_type = type <{ [4 x i8] }>
%G__0x41481d_type = type <{ [8 x i8] }>
%G__0x41483b_type = type <{ [8 x i8] }>
%G__0x41483c_type = type <{ [4 x i8] }>
%G__0x414851_type = type <{ [8 x i8] }>
%G__0x414870_type = type <{ [8 x i8] }>
%G__0x414883_type = type <{ [8 x i8] }>
%G__0x41489e_type = type <{ [8 x i8] }>
%G__0x4148bb_type = type <{ [8 x i8] }>
%G__0x4148d3_type = type <{ [8 x i8] }>
%G__0x4148f5_type = type <{ [8 x i8] }>
%G__0x41490d_type = type <{ [8 x i8] }>
%G__0x414930_type = type <{ [8 x i8] }>
%G__0x414954_type = type <{ [8 x i8] }>
%G__0x41496a_type = type <{ [8 x i8] }>
%G__0x41498a_type = type <{ [8 x i8] }>
%G__0x4149ab_type = type <{ [8 x i8] }>
%G__0x4149c9_type = type <{ [8 x i8] }>
%G__0x4149dd_type = type <{ [8 x i8] }>
%G__0x4149f9_type = type <{ [8 x i8] }>
%G__0x414a17_type = type <{ [8 x i8] }>
%G__0x414a30_type = type <{ [8 x i8] }>
%G__0x414a53_type = type <{ [8 x i8] }>
%G__0x414a6c_type = type <{ [8 x i8] }>
%G__0x414a90_type = type <{ [8 x i8] }>
%G__0x414ab5_type = type <{ [8 x i8] }>
%G__0x414acc_type = type <{ [8 x i8] }>
%G__0x414aed_type = type <{ [8 x i8] }>
%G__0x414b0f_type = type <{ [8 x i8] }>
%G__0x61a0c0_type = type <{ [8 x i8] }>
%G__0x629ac0_type = type <{ [8 x i8] }>
%G__0x6317c0_type = type <{ [8 x i8] }>
%G__0x6411c0_type = type <{ [4 x i8] }>
%G__0x650bc0_type = type <{ [4 x i8] }>
%G__0x6588c0_type = type <{ [4 x i8] }>
%G__0x6605c0_type = type <{ [4 x i8] }>
%G__0x664440_type = type <{ [4 x i8] }>
%G__0x6682c0_type = type <{ [4 x i8] }>
%G__0x66a200_type = type <{ [4 x i8] }>
%G__0x66c140_type = type <{ [4 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { i64 }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@__bss_start = local_unnamed_addr global %__bss_start_type zeroinitializer
@G_0x61a080 = local_unnamed_addr global %G_0x61a080_type zeroinitializer
@G_0x61a088 = local_unnamed_addr global %G_0x61a088_type zeroinitializer
@G__0x41401a = global %G__0x41401a_type zeroinitializer
@G__0x41401b = global %G__0x41401b_type zeroinitializer
@G__0x41402f = global %G__0x41402f_type zeroinitializer
@G__0x414030 = global %G__0x414030_type zeroinitializer
@G__0x41406b = global %G__0x41406b_type zeroinitializer
@G__0x41406c = global %G__0x41406c_type zeroinitializer
@G__0x4140a9 = global %G__0x4140a9_type zeroinitializer
@G__0x4140aa = global %G__0x4140aa_type zeroinitializer
@G__0x41410e = global %G__0x41410e_type zeroinitializer
@G__0x41410f = global %G__0x41410f_type zeroinitializer
@G__0x41418b = global %G__0x41418b_type zeroinitializer
@G__0x41418c = global %G__0x41418c_type zeroinitializer
@G__0x4141be = global %G__0x4141be_type zeroinitializer
@G__0x4141bf = global %G__0x4141bf_type zeroinitializer
@G__0x4141ef = global %G__0x4141ef_type zeroinitializer
@G__0x4141f0 = global %G__0x4141f0_type zeroinitializer
@G__0x414222 = global %G__0x414222_type zeroinitializer
@G__0x414223 = global %G__0x414223_type zeroinitializer
@G__0x414238 = global %G__0x414238_type zeroinitializer
@G__0x414239 = global %G__0x414239_type zeroinitializer
@G__0x414276 = global %G__0x414276_type zeroinitializer
@G__0x414277 = global %G__0x414277_type zeroinitializer
@G__0x4142b6 = global %G__0x4142b6_type zeroinitializer
@G__0x4142b7 = global %G__0x4142b7_type zeroinitializer
@G__0x41431e = global %G__0x41431e_type zeroinitializer
@G__0x41431f = global %G__0x41431f_type zeroinitializer
@G__0x41439f = global %G__0x41439f_type zeroinitializer
@G__0x4143a0 = global %G__0x4143a0_type zeroinitializer
@G__0x4143d4 = global %G__0x4143d4_type zeroinitializer
@G__0x4143d5 = global %G__0x4143d5_type zeroinitializer
@G__0x414407 = global %G__0x414407_type zeroinitializer
@G__0x414408 = global %G__0x414408_type zeroinitializer
@G__0x41443c = global %G__0x41443c_type zeroinitializer
@G__0x41443d = global %G__0x41443d_type zeroinitializer
@G__0x414452 = global %G__0x414452_type zeroinitializer
@G__0x414453 = global %G__0x414453_type zeroinitializer
@G__0x414490 = global %G__0x414490_type zeroinitializer
@G__0x414491 = global %G__0x414491_type zeroinitializer
@G__0x4144d0 = global %G__0x4144d0_type zeroinitializer
@G__0x4144d1 = global %G__0x4144d1_type zeroinitializer
@G__0x414538 = global %G__0x414538_type zeroinitializer
@G__0x414539 = global %G__0x414539_type zeroinitializer
@G__0x4145b9 = global %G__0x4145b9_type zeroinitializer
@G__0x4145ba = global %G__0x4145ba_type zeroinitializer
@G__0x4145ee = global %G__0x4145ee_type zeroinitializer
@G__0x4145ef = global %G__0x4145ef_type zeroinitializer
@G__0x414621 = global %G__0x414621_type zeroinitializer
@G__0x414622 = global %G__0x414622_type zeroinitializer
@G__0x414656 = global %G__0x414656_type zeroinitializer
@G__0x414657 = global %G__0x414657_type zeroinitializer
@G__0x41466c = global %G__0x41466c_type zeroinitializer
@G__0x41466d = global %G__0x41466d_type zeroinitializer
@G__0x41468a = global %G__0x41468a_type zeroinitializer
@G__0x4146aa = global %G__0x4146aa_type zeroinitializer
@G__0x4146ab = global %G__0x4146ab_type zeroinitializer
@G__0x4146c5 = global %G__0x4146c5_type zeroinitializer
@G__0x4146ea = global %G__0x4146ea_type zeroinitializer
@G__0x4146eb = global %G__0x4146eb_type zeroinitializer
@G__0x414705 = global %G__0x414705_type zeroinitializer
@G__0x41472b = global %G__0x41472b_type zeroinitializer
@G__0x414752 = global %G__0x414752_type zeroinitializer
@G__0x414753 = global %G__0x414753_type zeroinitializer
@G__0x41476b = global %G__0x41476b_type zeroinitializer
@G__0x41478e = global %G__0x41478e_type zeroinitializer
@G__0x4147b2 = global %G__0x4147b2_type zeroinitializer
@G__0x4147d3 = global %G__0x4147d3_type zeroinitializer
@G__0x4147d4 = global %G__0x4147d4_type zeroinitializer
@G__0x4147e9 = global %G__0x4147e9_type zeroinitializer
@G__0x414808 = global %G__0x414808_type zeroinitializer
@G__0x414809 = global %G__0x414809_type zeroinitializer
@G__0x41481d = global %G__0x41481d_type zeroinitializer
@G__0x41483b = global %G__0x41483b_type zeroinitializer
@G__0x41483c = global %G__0x41483c_type zeroinitializer
@G__0x414851 = global %G__0x414851_type zeroinitializer
@G__0x414870 = global %G__0x414870_type zeroinitializer
@G__0x414883 = global %G__0x414883_type zeroinitializer
@G__0x41489e = global %G__0x41489e_type zeroinitializer
@G__0x4148bb = global %G__0x4148bb_type zeroinitializer
@G__0x4148d3 = global %G__0x4148d3_type zeroinitializer
@G__0x4148f5 = global %G__0x4148f5_type zeroinitializer
@G__0x41490d = global %G__0x41490d_type zeroinitializer
@G__0x414930 = global %G__0x414930_type zeroinitializer
@G__0x414954 = global %G__0x414954_type zeroinitializer
@G__0x41496a = global %G__0x41496a_type zeroinitializer
@G__0x41498a = global %G__0x41498a_type zeroinitializer
@G__0x4149ab = global %G__0x4149ab_type zeroinitializer
@G__0x4149c9 = global %G__0x4149c9_type zeroinitializer
@G__0x4149dd = global %G__0x4149dd_type zeroinitializer
@G__0x4149f9 = global %G__0x4149f9_type zeroinitializer
@G__0x414a17 = global %G__0x414a17_type zeroinitializer
@G__0x414a30 = global %G__0x414a30_type zeroinitializer
@G__0x414a53 = global %G__0x414a53_type zeroinitializer
@G__0x414a6c = global %G__0x414a6c_type zeroinitializer
@G__0x414a90 = global %G__0x414a90_type zeroinitializer
@G__0x414ab5 = global %G__0x414ab5_type zeroinitializer
@G__0x414acc = global %G__0x414acc_type zeroinitializer
@G__0x414aed = global %G__0x414aed_type zeroinitializer
@G__0x414b0f = global %G__0x414b0f_type zeroinitializer
@G__0x61a0c0 = global %G__0x61a0c0_type zeroinitializer
@G__0x629ac0 = global %G__0x629ac0_type zeroinitializer
@G__0x6317c0 = global %G__0x6317c0_type zeroinitializer
@G__0x6411c0 = global %G__0x6411c0_type zeroinitializer
@G__0x650bc0 = global %G__0x650bc0_type zeroinitializer
@G__0x6588c0 = global %G__0x6588c0_type zeroinitializer
@G__0x6605c0 = global %G__0x6605c0_type zeroinitializer
@G__0x664440 = global %G__0x664440_type zeroinitializer
@G__0x6682c0 = global %G__0x6682c0_type zeroinitializer
@G__0x66a200 = global %G__0x66a200_type zeroinitializer
@G__0x66c140 = global %G__0x66c140_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #0

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #0

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #0

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr

declare %struct.Memory* @sub_402fd0._Z4fillIPaaEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403010._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4030c0._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403180._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403290._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403340._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403450._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403500._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403610._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403720._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4037d0._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4038e0._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4039f0._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403b00._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403bb0._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403cc0._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403d70._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403e80._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_403f30._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404040._Z4fillIPhhEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404080._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404130._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4041f0._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404300._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4043b0._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4044c0._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404570._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404680._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404790._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404840._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404950._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404a60._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404b70._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404c20._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404d30._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404de0._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404ef0._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_404fa0._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4050b0._Z4fillIPssEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4050f0._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4051b0._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405270._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4053a0._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405460._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405590._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405650._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405780._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4058b0._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405970._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405aa0._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405bd0._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405d00._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405dc0._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405ef0._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_405fb0._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4060e0._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4061a0._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4062d0._Z4fillIPttEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406310._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4063d0._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406490._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4065c0._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406680._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4067b0._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406870._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4069a0._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406ad0._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406b90._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406cc0._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406df0._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406f20._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_406fe0._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407110._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4071d0._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407300._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4073c0._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4074f0._Z4fillIPiiEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407530._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4075d0._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407680._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407750._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4077f0._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4078c0._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407960._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407a30._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407b00._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407ba0._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407c70._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407d40._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407e10._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407eb0._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_407f80._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408020._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4080f0._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408190._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408260._Z4fillIPjjEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4082a0._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408340._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4083f0._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4084c0._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408560._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408630._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4086d0._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4087a0._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408870._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408910._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4089e0._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408ab0._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408b80._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408c20._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408cf0._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408d90._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408e60._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408f00._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_408fd0._Z4fillIPllEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409010._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4090c0._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409170._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409240._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4092f0._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4093c0._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409470._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409540._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409610._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4096c0._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409790._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409860._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409930._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_4099e0._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ab0._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409b60._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409c30._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ce0._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409db0._Z4fillIPmmEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409df0._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409ea0._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_409f50._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a020._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a0d0._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a1a0._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a250._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a320._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a3f0._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a4a0._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a570._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a640._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a710._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a7c0._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a890._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40a940._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aa10._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aac0._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ab90._Z4fillIPffEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40abd0._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ac80._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ad40._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ae20._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40aed0._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40afb0._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b060._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b140._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b220._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b2d0._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b3b0._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b490._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b570._Z4fillIPddEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b5b0._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b660._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b720._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b800._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b8b0._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40b990._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40ba40._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bb20._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bc00._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bcb0._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40bd90._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

declare %struct.Memory* @sub_40be70._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned) local_unnamed_addr

; Function Attrs: alwaysinline
define %struct.Memory* @main(%struct.State* noalias, i64, %struct.Memory* noalias) local_unnamed_addr #1 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP.i, align 8
  %5 = add i64 %1, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = load i64, i64* %3, align 8
  store i64 %8, i64* %RBP.i, align 8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14.i831 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %12 = load i64, i64* %R14.i831, align 8
  %13 = add i64 %10, 5
  store i64 %13, i64* %3, align 8
  %14 = add i64 %7, -16
  %15 = inttoptr i64 %14 to i64*
  store i64 %12, i64* %15, align 8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %RBX.i879 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %17 = load i64, i64* %RBX.i879, align 8
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %3, align 8
  %20 = add i64 %7, -24
  %21 = inttoptr i64 %20 to i64*
  store i64 %17, i64* %21, align 8
  %22 = load i64, i64* %3, align 8
  %23 = add i64 %7, -392
  store i64 %23, i64* %6, align 8
  %24 = icmp ult i64 %20, 368
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %25, i8* %26, align 1
  %27 = trunc i64 %23 to i32
  %28 = and i32 %27, 255
  %29 = tail call i32 @llvm.ctpop.i32(i32 %28)
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = xor i8 %31, 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %32, i8* %33, align 1
  %34 = xor i64 %20, 16
  %35 = xor i64 %34, %23
  %36 = lshr i64 %35, 4
  %37 = trunc i64 %36 to i8
  %38 = and i8 %37, 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i64 %23, 0
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %41, i8* %42, align 1
  %43 = lshr i64 %23, 63
  %44 = trunc i64 %43 to i8
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %44, i8* %45, align 1
  %46 = lshr i64 %20, 63
  %47 = xor i64 %43, %46
  %48 = add nuw nsw i64 %47, %46
  %49 = icmp eq i64 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %53 = bitcast [32 x %union.VectorReg]* %52 to i8*
  %54 = add i64 %22, 77737
  %55 = add i64 %22, 15
  store i64 %55, i64* %3, align 8
  %56 = inttoptr i64 %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast [32 x %union.VectorReg]* %52 to double*
  %59 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %52, i64 0, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %57, i64* %59, align 1
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %61 = bitcast i64* %60 to double*
  store double 0.000000e+00, double* %61, align 1
  %62 = load i64, i64* %RBP.i, align 8
  %63 = add i64 %62, -20
  %64 = add i64 %22, 22
  store i64 %64, i64* %3, align 8
  %65 = inttoptr i64 %63 to i32*
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI.i2579 = bitcast %union.anon* %66 to i32*
  %67 = load i64, i64* %RBP.i, align 8
  %68 = add i64 %67, -24
  %69 = load i32, i32* %EDI.i2579, align 4
  %70 = load i64, i64* %3, align 8
  %71 = add i64 %70, 3
  store i64 %71, i64* %3, align 8
  %72 = inttoptr i64 %68 to i32*
  store i32 %69, i32* %72, align 4
  %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %RSI.i3037 = getelementptr inbounds %union.anon, %union.anon* %73, i64 0, i32 0
  %74 = load i64, i64* %RBP.i, align 8
  %75 = add i64 %74, -32
  %76 = load i64, i64* %RSI.i3037, align 8
  %77 = load i64, i64* %3, align 8
  %78 = add i64 %77, 4
  store i64 %78, i64* %3, align 8
  %79 = inttoptr i64 %75 to i64*
  store i64 %76, i64* %79, align 8
  %80 = load i64, i64* %RBP.i, align 8
  %81 = add i64 %80, -40
  %82 = load i64, i64* %3, align 8
  %83 = add i64 %82, 5
  store i64 %83, i64* %3, align 8
  %84 = load i64, i64* %59, align 1
  %85 = inttoptr i64 %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = load i64, i64* %RBP.i, align 8
  %87 = add i64 %86, -24
  %88 = load i64, i64* %3, align 8
  %89 = add i64 %88, 4
  store i64 %89, i64* %3, align 8
  %90 = inttoptr i64 %87 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, -1
  %93 = icmp eq i32 %91, 0
  %94 = zext i1 %93 to i8
  store i8 %94, i8* %26, align 1
  %95 = and i32 %92, 255
  %96 = tail call i32 @llvm.ctpop.i32(i32 %95)
  %97 = trunc i32 %96 to i8
  %98 = and i8 %97, 1
  %99 = xor i8 %98, 1
  store i8 %99, i8* %33, align 1
  %100 = xor i32 %92, %91
  %101 = lshr i32 %100, 4
  %102 = trunc i32 %101 to i8
  %103 = and i8 %102, 1
  store i8 %103, i8* %39, align 1
  %104 = icmp eq i32 %92, 0
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %42, align 1
  %106 = lshr i32 %92, 31
  %107 = trunc i32 %106 to i8
  store i8 %107, i8* %45, align 1
  %108 = lshr i32 %91, 31
  %109 = xor i32 %106, %108
  %110 = add nuw nsw i32 %109, %108
  %111 = icmp eq i32 %110, 2
  %112 = zext i1 %111 to i8
  store i8 %112, i8* %51, align 1
  %113 = icmp ne i8 %107, 0
  %114 = xor i1 %113, %111
  %115 = or i1 %104, %114
  %.v = select i1 %115, i64 30, i64 10
  %116 = add i64 %88, %.v
  store i64 %116, i64* %3, align 8
  br i1 %115, label %block_.L_400f07, label %block_400ef3

block_400ef3:                                     ; preds = %entry
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i4050 = getelementptr inbounds %union.anon, %union.anon* %117, i64 0, i32 0
  %118 = add i64 %86, -32
  %119 = add i64 %116, 4
  store i64 %119, i64* %3, align 8
  %120 = inttoptr i64 %118 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %RAX.i4050, align 8
  %RDI.i4066 = getelementptr inbounds %union.anon, %union.anon* %66, i64 0, i32 0
  %122 = add i64 %121, 8
  %123 = add i64 %116, 8
  store i64 %123, i64* %3, align 8
  %124 = inttoptr i64 %122 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %RDI.i4066, align 8
  %126 = add i64 %116, -2019
  %127 = add i64 %116, 13
  %128 = load i64, i64* %6, align 8
  %129 = add i64 %128, -8
  %130 = inttoptr i64 %129 to i64*
  store i64 %127, i64* %130, align 8
  store i64 %129, i64* %6, align 8
  store i64 %126, i64* %3, align 8
  %131 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  %EAX.i4063 = bitcast %union.anon* %117 to i32*
  %132 = load i32, i32* %EAX.i4063, align 4
  %133 = load i64, i64* %3, align 8
  %134 = add i64 %133, 7
  store i64 %134, i64* %3, align 8
  store i32 %132, i32* bitcast (%G_0x61a080_type* @G_0x61a080 to i32*), align 8
  %.pre = load i64, i64* %RBP.i, align 8
  br label %block_.L_400f07

block_.L_400f07:                                  ; preds = %block_400ef3, %entry
  %135 = phi i64 [ %116, %entry ], [ %134, %block_400ef3 ]
  %136 = phi i64 [ %86, %entry ], [ %.pre, %block_400ef3 ]
  %MEMORY.0 = phi %struct.Memory* [ %2, %entry ], [ %131, %block_400ef3 ]
  %137 = add i64 %136, -24
  %138 = add i64 %135, 4
  store i64 %138, i64* %3, align 8
  %139 = inttoptr i64 %137 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, -2
  %142 = icmp ult i32 %140, 2
  %143 = zext i1 %142 to i8
  store i8 %143, i8* %26, align 1
  %144 = and i32 %141, 255
  %145 = tail call i32 @llvm.ctpop.i32(i32 %144)
  %146 = trunc i32 %145 to i8
  %147 = and i8 %146, 1
  %148 = xor i8 %147, 1
  store i8 %148, i8* %33, align 1
  %149 = xor i32 %141, %140
  %150 = lshr i32 %149, 4
  %151 = trunc i32 %150 to i8
  %152 = and i8 %151, 1
  store i8 %152, i8* %39, align 1
  %153 = icmp eq i32 %141, 0
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %42, align 1
  %155 = lshr i32 %141, 31
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %45, align 1
  %157 = lshr i32 %140, 31
  %158 = xor i32 %155, %157
  %159 = add nuw nsw i32 %158, %157
  %160 = icmp eq i32 %159, 2
  %161 = zext i1 %160 to i8
  store i8 %161, i8* %51, align 1
  %162 = icmp ne i8 %156, 0
  %163 = xor i1 %162, %160
  %164 = or i1 %153, %163
  %.v44 = select i1 %164, i64 32, i64 10
  %165 = add i64 %135, %.v44
  store i64 %165, i64* %3, align 8
  br i1 %164, label %block_.L_400f27, label %block_400f11

block_400f11:                                     ; preds = %block_.L_400f07
  %RAX.i4057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %166 = add i64 %136, -32
  %167 = add i64 %165, 4
  store i64 %167, i64* %3, align 8
  %168 = inttoptr i64 %166 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %RAX.i4057, align 8
  %RDI.i4055 = getelementptr inbounds %union.anon, %union.anon* %66, i64 0, i32 0
  %170 = add i64 %169, 16
  %171 = add i64 %165, 8
  store i64 %171, i64* %3, align 8
  %172 = inttoptr i64 %170 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %RDI.i4055, align 8
  %174 = add i64 %165, -2161
  %175 = add i64 %165, 13
  %176 = load i64, i64* %6, align 8
  %177 = add i64 %176, -8
  %178 = inttoptr i64 %177 to i64*
  store i64 %175, i64* %178, align 8
  store i64 %177, i64* %6, align 8
  store i64 %174, i64* %3, align 8
  %179 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %MEMORY.0)
  %180 = load i64, i64* %3, align 8
  %181 = add i64 %180, 9
  store i64 %181, i64* %3, align 8
  %182 = load i64, i64* %59, align 1
  store i64 %182, i64* bitcast (%G_0x61a088_type* @G_0x61a088 to i64*), align 8
  %.pre5 = load i64, i64* %RBP.i, align 8
  br label %block_.L_400f27

block_.L_400f27:                                  ; preds = %block_400f11, %block_.L_400f07
  %183 = phi i64 [ %165, %block_.L_400f07 ], [ %181, %block_400f11 ]
  %184 = phi i64 [ %136, %block_.L_400f07 ], [ %.pre5, %block_400f11 ]
  %MEMORY.1 = phi %struct.Memory* [ %MEMORY.0, %block_.L_400f07 ], [ %179, %block_400f11 ]
  %185 = add i64 %184, -24
  %186 = add i64 %183, 4
  store i64 %186, i64* %3, align 8
  %187 = inttoptr i64 %185 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = add i32 %188, -3
  %190 = icmp ult i32 %188, 3
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %26, align 1
  %192 = and i32 %189, 255
  %193 = tail call i32 @llvm.ctpop.i32(i32 %192)
  %194 = trunc i32 %193 to i8
  %195 = and i8 %194, 1
  %196 = xor i8 %195, 1
  store i8 %196, i8* %33, align 1
  %197 = xor i32 %189, %188
  %198 = lshr i32 %197, 4
  %199 = trunc i32 %198 to i8
  %200 = and i8 %199, 1
  store i8 %200, i8* %39, align 1
  %201 = icmp eq i32 %189, 0
  %202 = zext i1 %201 to i8
  store i8 %202, i8* %42, align 1
  %203 = lshr i32 %189, 31
  %204 = trunc i32 %203 to i8
  store i8 %204, i8* %45, align 1
  %205 = lshr i32 %188, 31
  %206 = xor i32 %203, %205
  %207 = add nuw nsw i32 %206, %205
  %208 = icmp eq i32 %207, 2
  %209 = zext i1 %208 to i8
  store i8 %209, i8* %51, align 1
  %210 = icmp ne i8 %204, 0
  %211 = xor i1 %210, %208
  %212 = or i1 %201, %211
  %.v45 = select i1 %212, i64 28, i64 10
  %213 = add i64 %183, %.v45
  store i64 %213, i64* %3, align 8
  br i1 %212, label %block_.L_400f27.block_.L_400f43_crit_edge, label %block_400f31

block_.L_400f27.block_.L_400f43_crit_edge:        ; preds = %block_.L_400f27
  %.pre42 = getelementptr inbounds %union.anon, %union.anon* %66, i64 0, i32 0
  br label %block_.L_400f43

block_400f31:                                     ; preds = %block_.L_400f27
  %RAX.i4042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %214 = add i64 %184, -32
  %215 = add i64 %213, 4
  store i64 %215, i64* %3, align 8
  %216 = inttoptr i64 %214 to i64*
  %217 = load i64, i64* %216, align 8
  store i64 %217, i64* %RAX.i4042, align 8
  %RDI.i4040 = getelementptr inbounds %union.anon, %union.anon* %66, i64 0, i32 0
  %218 = add i64 %217, 24
  %219 = add i64 %213, 8
  store i64 %219, i64* %3, align 8
  %220 = inttoptr i64 %218 to i64*
  %221 = load i64, i64* %220, align 8
  store i64 %221, i64* %RDI.i4040, align 8
  %222 = add i64 %213, -2193
  %223 = add i64 %213, 13
  %224 = load i64, i64* %6, align 8
  %225 = add i64 %224, -8
  %226 = inttoptr i64 %225 to i64*
  store i64 %223, i64* %226, align 8
  store i64 %225, i64* %6, align 8
  store i64 %222, i64* %3, align 8
  %227 = tail call %struct.Memory* @__remill_function_call(%struct.State* nonnull %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %MEMORY.1)
  %228 = load i64, i64* %RBP.i, align 8
  %229 = add i64 %228, -40
  %230 = load i64, i64* %3, align 8
  %231 = add i64 %230, 5
  store i64 %231, i64* %3, align 8
  %232 = load i64, i64* %59, align 1
  %233 = inttoptr i64 %229 to i64*
  store i64 %232, i64* %233, align 8
  %.pre6 = load i64, i64* %3, align 8
  %.pre7 = load i64, i64* %RBP.i, align 8
  br label %block_.L_400f43

block_.L_400f43:                                  ; preds = %block_.L_400f27.block_.L_400f43_crit_edge, %block_400f31
  %RDI.i4032.pre-phi = phi i64* [ %.pre42, %block_.L_400f27.block_.L_400f43_crit_edge ], [ %RDI.i4040, %block_400f31 ]
  %234 = phi i64 [ %184, %block_.L_400f27.block_.L_400f43_crit_edge ], [ %.pre7, %block_400f31 ]
  %235 = phi i64 [ %213, %block_.L_400f27.block_.L_400f43_crit_edge ], [ %.pre6, %block_400f31 ]
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.1, %block_.L_400f27.block_.L_400f43_crit_edge ], [ %227, %block_400f31 ]
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %RCX.i4028 = getelementptr inbounds %union.anon, %union.anon* %236, i64 0, i32 0
  store i64 ptrtoint (%G__0x414656_type* @G__0x414656 to i64), i64* %RCX.i4028, align 8
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %RAX.i4026 = getelementptr inbounds %union.anon, %union.anon* %237, i64 0, i32 0
  %238 = add i64 %235, 2199877
  %239 = add i64 %235, 33
  store i64 %239, i64* %3, align 8
  %240 = inttoptr i64 %238 to double*
  %241 = load double, double* %240, align 8
  %242 = tail call double @llvm.trunc.f64(double %241)
  %243 = tail call double @llvm.fabs.f64(double %242)
  %244 = fcmp ogt double %243, 0x41DFFFFFFFC00000
  %245 = fptosi double %242 to i32
  %246 = zext i32 %245 to i64
  %247 = select i1 %244, i64 2147483648, i64 %246
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %RDX.i4024 = getelementptr inbounds %union.anon, %union.anon* %248, i64 0, i32 0
  %EDX.i4021 = bitcast %union.anon* %248 to i32*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D.i4022 = bitcast %union.anon* %249 to i32*
  %250 = getelementptr inbounds %union.anon, %union.anon* %249, i64 0, i32 0
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66a200_type* @G__0x66a200 to i64), i64 4294967295) to i32) to i64), i64* %250, align 8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B.i4019 = bitcast %union.anon* %251 to i8*
  %252 = trunc i64 %247 to i8
  store i8 %252, i8* %R9B.i4019, align 1
  %sext = shl i64 %247, 56
  %253 = ashr exact i64 %sext, 56
  %254 = and i64 %253, 4294967295
  store i64 %254, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x66c140_type* @G__0x66c140 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  %EAX.i4011 = bitcast %union.anon* %237 to i32*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66c140_type* @G__0x66c140 to i64), i64 4294967295) to i32) to i64), i64* %255, align 8
  %256 = add i64 %234, -216
  %257 = add i64 %235, 63
  store i64 %257, i64* %3, align 8
  %258 = inttoptr i64 %256 to i64*
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %258, align 8
  %259 = load i64, i64* %250, align 8
  %260 = load i64, i64* %3, align 8
  store i64 %259, i64* %RDI.i4032.pre-phi, align 8
  %ESI.i4002 = bitcast %union.anon* %73 to i32*
  %261 = load i64, i64* %RBP.i, align 8
  %262 = add i64 %261, -220
  %263 = load i32, i32* %ESI.i4002, align 4
  %264 = add i64 %260, 9
  store i64 %264, i64* %3, align 8
  %265 = inttoptr i64 %262 to i32*
  store i32 %263, i32* %265, align 4
  %266 = load i64, i64* %255, align 8
  %267 = load i64, i64* %3, align 8
  store i64 %266, i64* %RSI.i3037, align 8
  %268 = load i64, i64* %RBP.i, align 8
  %269 = add i64 %268, -232
  %270 = load i64, i64* %RCX.i4028, align 8
  %271 = add i64 %267, 10
  store i64 %271, i64* %3, align 8
  %272 = inttoptr i64 %269 to i64*
  store i64 %270, i64* %272, align 8
  %273 = load i64, i64* %RBP.i, align 8
  %274 = add i64 %273, -240
  %275 = load i64, i64* %250, align 8
  %276 = load i64, i64* %3, align 8
  %277 = add i64 %276, 7
  store i64 %277, i64* %3, align 8
  %278 = inttoptr i64 %274 to i64*
  store i64 %275, i64* %278, align 8
  %279 = load i64, i64* %3, align 8
  %280 = add i64 %279, 8244
  %281 = add i64 %279, 5
  %282 = load i64, i64* %6, align 8
  %283 = add i64 %282, -8
  %284 = inttoptr i64 %283 to i64*
  store i64 %281, i64* %284, align 8
  store i64 %283, i64* %6, align 8
  store i64 %280, i64* %3, align 8
  %call2_400f9c = tail call %struct.Memory* @sub_402fd0._Z4fillIPaaEvT_S1_T0_(%struct.State* nonnull %0, i64 %280, %struct.Memory* %MEMORY.2)
  %285 = load i64, i64* %RBP.i, align 8
  %286 = add i64 %285, -40
  %287 = load i64, i64* %3, align 8
  %288 = add i64 %287, 5
  store i64 %288, i64* %3, align 8
  %289 = inttoptr i64 %286 to double*
  %290 = load double, double* %289, align 8
  %291 = tail call double @llvm.trunc.f64(double %290)
  %292 = tail call double @llvm.fabs.f64(double %291)
  %293 = fcmp ogt double %292, 0x41DFFFFFFFC00000
  %294 = fptosi double %291 to i32
  %295 = zext i32 %294 to i64
  %296 = select i1 %293, i64 2147483648, i64 %295
  store i64 %296, i64* %RAX.i4026, align 8
  %297 = trunc i64 %296 to i8
  store i8 %297, i8* %R9B.i4019, align 1
  %298 = add i64 %285, -41
  %299 = add i64 %287, 12
  store i64 %299, i64* %3, align 8
  %300 = inttoptr i64 %298 to i8*
  store i8 %297, i8* %300, align 1
  %301 = load i64, i64* %RBP.i, align 8
  %302 = add i64 %301, -41
  %303 = load i64, i64* %3, align 8
  %304 = add i64 %303, 4
  store i64 %304, i64* %3, align 8
  %305 = inttoptr i64 %302 to i8*
  %306 = load i8, i8* %305, align 1
  %307 = shl i8 %306, 1
  store i8 %307, i8* %R9B.i4019, align 1
  %308 = icmp ult i8 %307, %306
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %26, align 1
  %310 = zext i8 %307 to i32
  %311 = tail call i32 @llvm.ctpop.i32(i32 %310)
  %312 = trunc i32 %311 to i8
  %313 = and i8 %312, 1
  %314 = xor i8 %313, 1
  store i8 %314, i8* %33, align 1
  %315 = lshr i8 %306, 3
  %316 = and i8 %315, 1
  store i8 %316, i8* %39, align 1
  %317 = icmp eq i8 %307, 0
  %318 = zext i1 %317 to i8
  store i8 %318, i8* %42, align 1
  %319 = lshr i8 %306, 6
  %320 = and i8 %319, 1
  store i8 %320, i8* %45, align 1
  %321 = lshr i8 %306, 7
  %322 = xor i8 %320, %321
  store i8 %322, i8* %51, align 1
  %323 = add i64 %301, -42
  %324 = add i64 %303, 11
  store i64 %324, i64* %3, align 8
  %325 = inttoptr i64 %323 to i8*
  store i8 %307, i8* %325, align 1
  %326 = load i64, i64* %RBP.i, align 8
  %327 = add i64 %326, -41
  %328 = load i64, i64* %3, align 8
  %329 = add i64 %328, 4
  store i64 %329, i64* %3, align 8
  %330 = inttoptr i64 %327 to i8*
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i32
  %333 = add nuw nsw i32 %332, 2
  %334 = zext i32 %333 to i64
  store i64 %334, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %335 = and i32 %333, 255
  %336 = tail call i32 @llvm.ctpop.i32(i32 %335)
  %337 = trunc i32 %336 to i8
  %338 = and i8 %337, 1
  %339 = xor i8 %338, 1
  store i8 %339, i8* %33, align 1
  %340 = xor i32 %333, %332
  %341 = lshr i32 %340, 4
  %342 = trunc i32 %341 to i8
  %343 = and i8 %342, 1
  store i8 %343, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %344 = trunc i32 %333 to i8
  store i8 %344, i8* %R9B.i4019, align 1
  %345 = add i64 %326, -43
  %346 = add i64 %328, 14
  store i64 %346, i64* %3, align 8
  %347 = inttoptr i64 %345 to i8*
  store i8 %344, i8* %347, align 1
  %348 = load i64, i64* %RBP.i, align 8
  %349 = add i64 %348, -41
  %350 = load i64, i64* %3, align 8
  %351 = add i64 %350, 4
  store i64 %351, i64* %3, align 8
  %352 = inttoptr i64 %349 to i8*
  %353 = load i8, i8* %352, align 1
  %354 = zext i8 %353 to i64
  store i64 %354, i64* %RAX.i4026, align 8
  %355 = add i64 %348, -42
  %356 = add i64 %350, 8
  store i64 %356, i64* %3, align 8
  %357 = inttoptr i64 %355 to i8*
  %358 = load i8, i8* %357, align 1
  %359 = sext i8 %358 to i64
  %360 = and i64 %359, 4294967295
  store i64 %360, i64* %RDX.i4024, align 8
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0
  %R11D.i3956 = bitcast %union.anon* %361 to i32*
  %362 = getelementptr inbounds %union.anon, %union.anon* %361, i64 0, i32 0
  %363 = add i64 %348, -43
  %364 = add i64 %350, 13
  store i64 %364, i64* %3, align 8
  %365 = inttoptr i64 %363 to i8*
  %366 = load i8, i8* %365, align 1
  %367 = sext i8 %366 to i64
  %368 = and i64 %367, 4294967295
  store i64 %368, i64* %362, align 8
  %369 = add i64 %348, -244
  %370 = zext i8 %353 to i32
  %371 = add i64 %350, 19
  store i64 %371, i64* %3, align 8
  %372 = inttoptr i64 %369 to i32*
  store i32 %370, i32* %372, align 4
  %373 = load i32, i32* %EDX.i4021, align 4
  %374 = zext i32 %373 to i64
  %375 = load i64, i64* %3, align 8
  store i64 %374, i64* %RAX.i4026, align 8
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %377 = sext i32 %373 to i64
  %378 = lshr i64 %377, 32
  store i64 %378, i64* %376, align 8
  %379 = load i32, i32* %R11D.i3956, align 4
  %380 = add i64 %375, 6
  store i64 %380, i64* %3, align 8
  %381 = sext i32 %379 to i64
  %382 = shl nuw i64 %378, 32
  %383 = or i64 %382, %374
  %384 = sdiv i64 %383, %381
  %385 = shl i64 %384, 32
  %386 = ashr exact i64 %385, 32
  %387 = icmp eq i64 %384, %386
  br i1 %387, label %390, label %388

; <label>:388:                                    ; preds = %block_.L_400f43
  %389 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %380, %struct.Memory* %call2_400f9c)
  %.pre8 = load i64, i64* %3, align 8
  %.pre9 = load i32, i32* %EAX.i4011, align 4
  br label %routine_idivl__r11d.exit

; <label>:390:                                    ; preds = %block_.L_400f43
  %391 = srem i64 %383, %381
  %392 = and i64 %384, 4294967295
  store i64 %392, i64* %RAX.i4026, align 8
  %393 = and i64 %391, 4294967295
  store i64 %393, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %394 = trunc i64 %384 to i32
  br label %routine_idivl__r11d.exit

routine_idivl__r11d.exit:                         ; preds = %390, %388
  %395 = phi i32 [ %.pre9, %388 ], [ %394, %390 ]
  %396 = phi i64 [ %.pre8, %388 ], [ %380, %390 ]
  %397 = phi %struct.Memory* [ %389, %388 ], [ %call2_400f9c, %390 ]
  %398 = load i64, i64* %RBP.i, align 8
  %399 = add i64 %398, -244
  %400 = add i64 %396, 6
  store i64 %400, i64* %3, align 8
  %401 = inttoptr i64 %399 to i32*
  %402 = load i32, i32* %401, align 4
  %403 = add i32 %395, %402
  %404 = zext i32 %403 to i64
  store i64 %404, i64* %RDX.i4024, align 8
  %405 = icmp ult i32 %403, %402
  %406 = icmp ult i32 %403, %395
  %407 = or i1 %405, %406
  %408 = zext i1 %407 to i8
  store i8 %408, i8* %26, align 1
  %409 = and i32 %403, 255
  %410 = tail call i32 @llvm.ctpop.i32(i32 %409)
  %411 = trunc i32 %410 to i8
  %412 = and i8 %411, 1
  %413 = xor i8 %412, 1
  store i8 %413, i8* %33, align 1
  %414 = xor i32 %395, %402
  %415 = xor i32 %414, %403
  %416 = lshr i32 %415, 4
  %417 = trunc i32 %416 to i8
  %418 = and i8 %417, 1
  store i8 %418, i8* %39, align 1
  %419 = icmp eq i32 %403, 0
  %420 = zext i1 %419 to i8
  store i8 %420, i8* %42, align 1
  %421 = lshr i32 %403, 31
  %422 = trunc i32 %421 to i8
  store i8 %422, i8* %45, align 1
  %423 = lshr i32 %402, 31
  %424 = lshr i32 %395, 31
  %425 = xor i32 %421, %423
  %426 = xor i32 %421, %424
  %427 = add nuw nsw i32 %425, %426
  %428 = icmp eq i32 %427, 2
  %429 = zext i1 %428 to i8
  store i8 %429, i8* %51, align 1
  %430 = trunc i32 %403 to i8
  store i8 %430, i8* %R9B.i4019, align 1
  %431 = add i64 %398, -44
  %432 = add i64 %396, 15
  store i64 %432, i64* %3, align 8
  %433 = inttoptr i64 %431 to i8*
  store i8 %430, i8* %433, align 1
  %434 = load i64, i64* %RBP.i, align 8
  %435 = add i64 %434, -41
  %436 = load i64, i64* %3, align 8
  %437 = add i64 %436, 4
  store i64 %437, i64* %3, align 8
  %438 = inttoptr i64 %435 to i8*
  %439 = load i8, i8* %438, align 1
  %440 = sext i8 %439 to i64
  %441 = and i64 %440, 4294967295
  store i64 %441, i64* %RDX.i4024, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41401b_type* @G__0x41401b to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  store i64 8000, i64* %RAX.i4026, align 8
  %442 = add i64 %434, -240
  %443 = add i64 %436, 23
  store i64 %443, i64* %3, align 8
  %444 = inttoptr i64 %442 to i64*
  %445 = load i64, i64* %444, align 8
  store i64 %445, i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  %446 = add i64 %434, -248
  %447 = add i64 %436, 31
  store i64 %447, i64* %3, align 8
  %448 = inttoptr i64 %446 to i32*
  store i32 8000, i32* %448, align 4
  %449 = load i64, i64* %3, align 8
  %450 = add i64 %449, 8195
  %451 = add i64 %449, 5
  %452 = load i64, i64* %6, align 8
  %453 = add i64 %452, -8
  %454 = inttoptr i64 %453 to i64*
  store i64 %451, i64* %454, align 8
  store i64 %453, i64* %6, align 8
  store i64 %450, i64* %3, align 8
  %call2_40100d = tail call %struct.Memory* @sub_403010._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %450, %struct.Memory* %397)
  %455 = load i64, i64* %RBP.i, align 8
  %456 = add i64 %455, -41
  %457 = load i64, i64* %3, align 8
  %458 = add i64 %457, 4
  store i64 %458, i64* %3, align 8
  %459 = inttoptr i64 %456 to i8*
  %460 = load i8, i8* %459, align 1
  %461 = sext i8 %460 to i64
  %462 = and i64 %461, 4294967295
  store i64 %462, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414030_type* @G__0x414030 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414030_type* @G__0x414030 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %463 = add i64 %455, -240
  %464 = add i64 %457, 18
  store i64 %464, i64* %3, align 8
  %465 = inttoptr i64 %463 to i64*
  %466 = load i64, i64* %465, align 8
  store i64 %466, i64* %RDI.i4032.pre-phi, align 8
  %467 = add i64 %455, -248
  %468 = add i64 %457, 24
  store i64 %468, i64* %3, align 8
  %469 = inttoptr i64 %467 to i32*
  %470 = load i32, i32* %469, align 4
  %471 = zext i32 %470 to i64
  store i64 %471, i64* %RSI.i3037, align 8
  %472 = add i64 %457, 8366
  %473 = add i64 %457, 29
  %474 = load i64, i64* %6, align 8
  %475 = add i64 %474, -8
  %476 = inttoptr i64 %475 to i64*
  store i64 %473, i64* %476, align 8
  store i64 %475, i64* %6, align 8
  store i64 %472, i64* %3, align 8
  %call2_40102a = tail call %struct.Memory* @sub_4030c0._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %472, %struct.Memory* %call2_40100d)
  %477 = getelementptr inbounds %union.anon, %union.anon* %251, i64 0, i32 0
  %478 = load i64, i64* %RBP.i, align 8
  %479 = add i64 %478, -44
  %480 = load i64, i64* %3, align 8
  %481 = add i64 %480, 5
  store i64 %481, i64* %3, align 8
  %482 = inttoptr i64 %479 to i8*
  %483 = load i8, i8* %482, align 1
  %484 = sext i8 %483 to i64
  %485 = and i64 %484, 4294967295
  store i64 %485, i64* %477, align 8
  %486 = add i64 %478, -43
  %487 = add i64 %480, 10
  store i64 %487, i64* %3, align 8
  %488 = inttoptr i64 %486 to i8*
  %489 = load i8, i8* %488, align 1
  %490 = sext i8 %489 to i64
  %491 = and i64 %490, 4294967295
  store i64 %491, i64* %250, align 8
  %492 = add i64 %478, -42
  %493 = add i64 %480, 14
  store i64 %493, i64* %3, align 8
  %494 = inttoptr i64 %492 to i8*
  %495 = load i8, i8* %494, align 1
  %496 = sext i8 %495 to i64
  %497 = and i64 %496, 4294967295
  store i64 %497, i64* %RCX.i4028, align 8
  %498 = add i64 %478, -41
  %499 = add i64 %480, 18
  store i64 %499, i64* %3, align 8
  %500 = inttoptr i64 %498 to i8*
  %501 = load i8, i8* %500, align 1
  %502 = sext i8 %501 to i64
  %503 = and i64 %502, 4294967295
  store i64 %503, i64* %RDX.i4024, align 8
  %504 = load i64, i64* %6, align 8
  store i64 %504, i64* %RDI.i4032.pre-phi, align 8
  %505 = add i64 %480, 28
  store i64 %505, i64* %3, align 8
  %506 = inttoptr i64 %504 to i64*
  store i64 4276301, i64* %506, align 8
  %507 = load i64, i64* %RBP.i, align 8
  %508 = add i64 %507, -240
  %509 = load i64, i64* %3, align 8
  %510 = add i64 %509, 7
  store i64 %510, i64* %3, align 8
  %511 = inttoptr i64 %508 to i64*
  %512 = load i64, i64* %511, align 8
  store i64 %512, i64* %RDI.i4032.pre-phi, align 8
  %513 = add i64 %507, -248
  %514 = add i64 %509, 13
  store i64 %514, i64* %3, align 8
  %515 = inttoptr i64 %513 to i32*
  %516 = load i32, i32* %515, align 4
  %517 = zext i32 %516 to i64
  store i64 %517, i64* %RSI.i3037, align 8
  %518 = add i64 %509, 8501
  %519 = add i64 %509, 18
  %520 = load i64, i64* %6, align 8
  %521 = add i64 %520, -8
  %522 = inttoptr i64 %521 to i64*
  store i64 %519, i64* %522, align 8
  store i64 %521, i64* %6, align 8
  store i64 %518, i64* %3, align 8
  %call2_401058 = tail call %struct.Memory* @sub_403180._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %518, %struct.Memory* %call2_40102a)
  %523 = load i64, i64* %RBP.i, align 8
  %524 = add i64 %523, -41
  %525 = load i64, i64* %3, align 8
  %526 = add i64 %525, 4
  store i64 %526, i64* %3, align 8
  %527 = inttoptr i64 %524 to i8*
  %528 = load i8, i8* %527, align 1
  %529 = sext i8 %528 to i64
  %530 = and i64 %529, 4294967295
  store i64 %530, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41406c_type* @G__0x41406c to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41406c_type* @G__0x41406c to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %531 = add i64 %523, -240
  %532 = add i64 %525, 18
  store i64 %532, i64* %3, align 8
  %533 = inttoptr i64 %531 to i64*
  %534 = load i64, i64* %533, align 8
  store i64 %534, i64* %RDI.i4032.pre-phi, align 8
  %535 = add i64 %523, -248
  %536 = add i64 %525, 24
  store i64 %536, i64* %3, align 8
  %537 = inttoptr i64 %535 to i32*
  %538 = load i32, i32* %537, align 4
  %539 = zext i32 %538 to i64
  store i64 %539, i64* %RSI.i3037, align 8
  %540 = add i64 %525, 8755
  %541 = add i64 %525, 29
  %542 = load i64, i64* %6, align 8
  %543 = add i64 %542, -8
  %544 = inttoptr i64 %543 to i64*
  store i64 %541, i64* %544, align 8
  store i64 %543, i64* %6, align 8
  store i64 %540, i64* %3, align 8
  %call2_401075 = tail call %struct.Memory* @sub_403290._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %540, %struct.Memory* %call2_401058)
  %545 = load i64, i64* %RBP.i, align 8
  %546 = add i64 %545, -44
  %547 = load i64, i64* %3, align 8
  %548 = add i64 %547, 5
  store i64 %548, i64* %3, align 8
  %549 = inttoptr i64 %546 to i8*
  %550 = load i8, i8* %549, align 1
  %551 = sext i8 %550 to i64
  %552 = and i64 %551, 4294967295
  store i64 %552, i64* %477, align 8
  %553 = add i64 %545, -43
  %554 = add i64 %547, 10
  store i64 %554, i64* %3, align 8
  %555 = inttoptr i64 %553 to i8*
  %556 = load i8, i8* %555, align 1
  %557 = sext i8 %556 to i64
  %558 = and i64 %557, 4294967295
  store i64 %558, i64* %250, align 8
  %559 = add i64 %545, -42
  %560 = add i64 %547, 14
  store i64 %560, i64* %3, align 8
  %561 = inttoptr i64 %559 to i8*
  %562 = load i8, i8* %561, align 1
  %563 = sext i8 %562 to i64
  %564 = and i64 %563, 4294967295
  store i64 %564, i64* %RCX.i4028, align 8
  %565 = add i64 %545, -41
  %566 = add i64 %547, 18
  store i64 %566, i64* %3, align 8
  %567 = inttoptr i64 %565 to i8*
  %568 = load i8, i8* %567, align 1
  %569 = sext i8 %568 to i64
  %570 = and i64 %569, 4294967295
  store i64 %570, i64* %RDX.i4024, align 8
  %571 = load i64, i64* %6, align 8
  store i64 %571, i64* %RDI.i4032.pre-phi, align 8
  %572 = add i64 %547, 28
  store i64 %572, i64* %3, align 8
  %573 = inttoptr i64 %571 to i64*
  store i64 4276358, i64* %573, align 8
  %574 = load i64, i64* %RBP.i, align 8
  %575 = add i64 %574, -240
  %576 = load i64, i64* %3, align 8
  %577 = add i64 %576, 7
  store i64 %577, i64* %3, align 8
  %578 = inttoptr i64 %575 to i64*
  %579 = load i64, i64* %578, align 8
  store i64 %579, i64* %RDI.i4032.pre-phi, align 8
  %580 = add i64 %574, -248
  %581 = add i64 %576, 13
  store i64 %581, i64* %3, align 8
  %582 = inttoptr i64 %580 to i32*
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i64
  store i64 %584, i64* %RSI.i3037, align 8
  %585 = add i64 %576, 8874
  %586 = add i64 %576, 18
  %587 = load i64, i64* %6, align 8
  %588 = add i64 %587, -8
  %589 = inttoptr i64 %588 to i64*
  store i64 %586, i64* %589, align 8
  store i64 %588, i64* %6, align 8
  store i64 %585, i64* %3, align 8
  %call2_4010a3 = tail call %struct.Memory* @sub_403340._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %585, %struct.Memory* %call2_401075)
  %590 = load i64, i64* %RBP.i, align 8
  %591 = add i64 %590, -41
  %592 = load i64, i64* %3, align 8
  %593 = add i64 %592, 4
  store i64 %593, i64* %3, align 8
  %594 = inttoptr i64 %591 to i8*
  %595 = load i8, i8* %594, align 1
  %596 = sext i8 %595 to i64
  %597 = and i64 %596, 4294967295
  store i64 %597, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4140aa_type* @G__0x4140aa to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4140aa_type* @G__0x4140aa to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %598 = add i64 %590, -240
  %599 = add i64 %592, 18
  store i64 %599, i64* %3, align 8
  %600 = inttoptr i64 %598 to i64*
  %601 = load i64, i64* %600, align 8
  store i64 %601, i64* %RDI.i4032.pre-phi, align 8
  %602 = add i64 %590, -248
  %603 = add i64 %592, 24
  store i64 %603, i64* %3, align 8
  %604 = inttoptr i64 %602 to i32*
  %605 = load i32, i32* %604, align 4
  %606 = zext i32 %605 to i64
  store i64 %606, i64* %RSI.i3037, align 8
  %607 = add i64 %592, 9128
  %608 = add i64 %592, 29
  %609 = load i64, i64* %6, align 8
  %610 = add i64 %609, -8
  %611 = inttoptr i64 %610 to i64*
  store i64 %608, i64* %611, align 8
  store i64 %610, i64* %6, align 8
  store i64 %607, i64* %3, align 8
  %call2_4010c0 = tail call %struct.Memory* @sub_403450._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %607, %struct.Memory* %call2_4010a3)
  %612 = load i64, i64* %RBP.i, align 8
  %613 = add i64 %612, -44
  %614 = load i64, i64* %3, align 8
  %615 = add i64 %614, 5
  store i64 %615, i64* %3, align 8
  %616 = inttoptr i64 %613 to i8*
  %617 = load i8, i8* %616, align 1
  %618 = sext i8 %617 to i64
  %619 = and i64 %618, 4294967295
  store i64 %619, i64* %477, align 8
  %620 = add i64 %612, -43
  %621 = add i64 %614, 10
  store i64 %621, i64* %3, align 8
  %622 = inttoptr i64 %620 to i8*
  %623 = load i8, i8* %622, align 1
  %624 = sext i8 %623 to i64
  %625 = and i64 %624, 4294967295
  store i64 %625, i64* %250, align 8
  %626 = add i64 %612, -42
  %627 = add i64 %614, 14
  store i64 %627, i64* %3, align 8
  %628 = inttoptr i64 %626 to i8*
  %629 = load i8, i8* %628, align 1
  %630 = sext i8 %629 to i64
  %631 = and i64 %630, 4294967295
  store i64 %631, i64* %RCX.i4028, align 8
  %632 = add i64 %612, -41
  %633 = add i64 %614, 18
  store i64 %633, i64* %3, align 8
  %634 = inttoptr i64 %632 to i8*
  %635 = load i8, i8* %634, align 1
  %636 = sext i8 %635 to i64
  %637 = and i64 %636, 4294967295
  store i64 %637, i64* %RDX.i4024, align 8
  %638 = load i64, i64* %6, align 8
  store i64 %638, i64* %RDI.i4032.pre-phi, align 8
  %639 = add i64 %614, 28
  store i64 %639, i64* %3, align 8
  %640 = inttoptr i64 %638 to i64*
  store i64 4276420, i64* %640, align 8
  %641 = load i64, i64* %RBP.i, align 8
  %642 = add i64 %641, -240
  %643 = load i64, i64* %3, align 8
  %644 = add i64 %643, 7
  store i64 %644, i64* %3, align 8
  %645 = inttoptr i64 %642 to i64*
  %646 = load i64, i64* %645, align 8
  store i64 %646, i64* %RDI.i4032.pre-phi, align 8
  %647 = add i64 %641, -248
  %648 = add i64 %643, 13
  store i64 %648, i64* %3, align 8
  %649 = inttoptr i64 %647 to i32*
  %650 = load i32, i32* %649, align 4
  %651 = zext i32 %650 to i64
  store i64 %651, i64* %RSI.i3037, align 8
  %652 = add i64 %643, 9247
  %653 = add i64 %643, 18
  %654 = load i64, i64* %6, align 8
  %655 = add i64 %654, -8
  %656 = inttoptr i64 %655 to i64*
  store i64 %653, i64* %656, align 8
  store i64 %655, i64* %6, align 8
  store i64 %652, i64* %3, align 8
  %call2_4010ee = tail call %struct.Memory* @sub_403500._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %652, %struct.Memory* %call2_4010c0)
  %657 = load i64, i64* %RBP.i, align 8
  %658 = add i64 %657, -44
  %659 = load i64, i64* %3, align 8
  %660 = add i64 %659, 5
  store i64 %660, i64* %3, align 8
  %661 = inttoptr i64 %658 to i8*
  %662 = load i8, i8* %661, align 1
  %663 = sext i8 %662 to i64
  %664 = and i64 %663, 4294967295
  store i64 %664, i64* %477, align 8
  %665 = add i64 %657, -43
  %666 = add i64 %659, 10
  store i64 %666, i64* %3, align 8
  %667 = inttoptr i64 %665 to i8*
  %668 = load i8, i8* %667, align 1
  %669 = sext i8 %668 to i64
  %670 = and i64 %669, 4294967295
  store i64 %670, i64* %250, align 8
  %671 = add i64 %657, -42
  %672 = add i64 %659, 14
  store i64 %672, i64* %3, align 8
  %673 = inttoptr i64 %671 to i8*
  %674 = load i8, i8* %673, align 1
  %675 = sext i8 %674 to i64
  %676 = and i64 %675, 4294967295
  store i64 %676, i64* %RCX.i4028, align 8
  %677 = add i64 %657, -41
  %678 = add i64 %659, 18
  store i64 %678, i64* %3, align 8
  %679 = inttoptr i64 %677 to i8*
  %680 = load i8, i8* %679, align 1
  %681 = sext i8 %680 to i64
  %682 = and i64 %681, 4294967295
  store i64 %682, i64* %RDX.i4024, align 8
  %683 = load i64, i64* %6, align 8
  store i64 %683, i64* %RDI.i4032.pre-phi, align 8
  %684 = add i64 %659, 28
  store i64 %684, i64* %3, align 8
  %685 = inttoptr i64 %683 to i64*
  store i64 4276457, i64* %685, align 8
  %686 = load i64, i64* %RBP.i, align 8
  %687 = add i64 %686, -240
  %688 = load i64, i64* %3, align 8
  %689 = add i64 %688, 7
  store i64 %689, i64* %3, align 8
  %690 = inttoptr i64 %687 to i64*
  %691 = load i64, i64* %690, align 8
  store i64 %691, i64* %RDI.i4032.pre-phi, align 8
  %692 = add i64 %686, -248
  %693 = add i64 %688, 13
  store i64 %693, i64* %3, align 8
  %694 = inttoptr i64 %692 to i32*
  %695 = load i32, i32* %694, align 4
  %696 = zext i32 %695 to i64
  store i64 %696, i64* %RSI.i3037, align 8
  %697 = add i64 %688, 9473
  %698 = add i64 %688, 18
  %699 = load i64, i64* %6, align 8
  %700 = add i64 %699, -8
  %701 = inttoptr i64 %700 to i64*
  store i64 %698, i64* %701, align 8
  store i64 %700, i64* %6, align 8
  store i64 %697, i64* %3, align 8
  %call2_40111c = tail call %struct.Memory* @sub_403610._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %697, %struct.Memory* %call2_4010ee)
  %702 = load i64, i64* %RBP.i, align 8
  %703 = add i64 %702, -41
  %704 = load i64, i64* %3, align 8
  %705 = add i64 %704, 4
  store i64 %705, i64* %3, align 8
  %706 = inttoptr i64 %703 to i8*
  %707 = load i8, i8* %706, align 1
  %708 = sext i8 %707 to i64
  %709 = and i64 %708, 4294967295
  store i64 %709, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41410f_type* @G__0x41410f to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41410f_type* @G__0x41410f to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %710 = add i64 %702, -240
  %711 = add i64 %704, 18
  store i64 %711, i64* %3, align 8
  %712 = inttoptr i64 %710 to i64*
  %713 = load i64, i64* %712, align 8
  store i64 %713, i64* %RDI.i4032.pre-phi, align 8
  %714 = add i64 %702, -248
  %715 = add i64 %704, 24
  store i64 %715, i64* %3, align 8
  %716 = inttoptr i64 %714 to i32*
  %717 = load i32, i32* %716, align 4
  %718 = zext i32 %717 to i64
  store i64 %718, i64* %RSI.i3037, align 8
  %719 = add i64 %704, 9727
  %720 = add i64 %704, 29
  %721 = load i64, i64* %6, align 8
  %722 = add i64 %721, -8
  %723 = inttoptr i64 %722 to i64*
  store i64 %720, i64* %723, align 8
  store i64 %722, i64* %6, align 8
  store i64 %719, i64* %3, align 8
  %call2_401139 = tail call %struct.Memory* @sub_403720._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %719, %struct.Memory* %call2_40111c)
  %724 = load i64, i64* %RBP.i, align 8
  %725 = add i64 %724, -44
  %726 = load i64, i64* %3, align 8
  %727 = add i64 %726, 5
  store i64 %727, i64* %3, align 8
  %728 = inttoptr i64 %725 to i8*
  %729 = load i8, i8* %728, align 1
  %730 = sext i8 %729 to i64
  %731 = and i64 %730, 4294967295
  store i64 %731, i64* %477, align 8
  %732 = add i64 %724, -43
  %733 = add i64 %726, 10
  store i64 %733, i64* %3, align 8
  %734 = inttoptr i64 %732 to i8*
  %735 = load i8, i8* %734, align 1
  %736 = sext i8 %735 to i64
  %737 = and i64 %736, 4294967295
  store i64 %737, i64* %250, align 8
  %738 = add i64 %724, -42
  %739 = add i64 %726, 14
  store i64 %739, i64* %3, align 8
  %740 = inttoptr i64 %738 to i8*
  %741 = load i8, i8* %740, align 1
  %742 = sext i8 %741 to i64
  %743 = and i64 %742, 4294967295
  store i64 %743, i64* %RCX.i4028, align 8
  %744 = add i64 %724, -41
  %745 = add i64 %726, 18
  store i64 %745, i64* %3, align 8
  %746 = inttoptr i64 %744 to i8*
  %747 = load i8, i8* %746, align 1
  %748 = sext i8 %747 to i64
  %749 = and i64 %748, 4294967295
  store i64 %749, i64* %RDX.i4024, align 8
  %750 = load i64, i64* %6, align 8
  store i64 %750, i64* %RDI.i4032.pre-phi, align 8
  %751 = add i64 %726, 28
  store i64 %751, i64* %3, align 8
  %752 = inttoptr i64 %750 to i64*
  store i64 4276519, i64* %752, align 8
  %753 = load i64, i64* %RBP.i, align 8
  %754 = add i64 %753, -240
  %755 = load i64, i64* %3, align 8
  %756 = add i64 %755, 7
  store i64 %756, i64* %3, align 8
  %757 = inttoptr i64 %754 to i64*
  %758 = load i64, i64* %757, align 8
  store i64 %758, i64* %RDI.i4032.pre-phi, align 8
  %759 = add i64 %753, -248
  %760 = add i64 %755, 13
  store i64 %760, i64* %3, align 8
  %761 = inttoptr i64 %759 to i32*
  %762 = load i32, i32* %761, align 4
  %763 = zext i32 %762 to i64
  store i64 %763, i64* %RSI.i3037, align 8
  %764 = add i64 %755, 9846
  %765 = add i64 %755, 18
  %766 = load i64, i64* %6, align 8
  %767 = add i64 %766, -8
  %768 = inttoptr i64 %767 to i64*
  store i64 %765, i64* %768, align 8
  store i64 %767, i64* %6, align 8
  store i64 %764, i64* %3, align 8
  %call2_401167 = tail call %struct.Memory* @sub_4037d0._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %764, %struct.Memory* %call2_401139)
  %769 = load i64, i64* %RBP.i, align 8
  %770 = add i64 %769, -44
  %771 = load i64, i64* %3, align 8
  %772 = add i64 %771, 5
  store i64 %772, i64* %3, align 8
  %773 = inttoptr i64 %770 to i8*
  %774 = load i8, i8* %773, align 1
  %775 = sext i8 %774 to i64
  %776 = and i64 %775, 4294967295
  store i64 %776, i64* %477, align 8
  %777 = add i64 %769, -43
  %778 = add i64 %771, 10
  store i64 %778, i64* %3, align 8
  %779 = inttoptr i64 %777 to i8*
  %780 = load i8, i8* %779, align 1
  %781 = sext i8 %780 to i64
  %782 = and i64 %781, 4294967295
  store i64 %782, i64* %250, align 8
  %783 = add i64 %769, -42
  %784 = add i64 %771, 14
  store i64 %784, i64* %3, align 8
  %785 = inttoptr i64 %783 to i8*
  %786 = load i8, i8* %785, align 1
  %787 = sext i8 %786 to i64
  %788 = and i64 %787, 4294967295
  store i64 %788, i64* %RCX.i4028, align 8
  %789 = add i64 %769, -41
  %790 = add i64 %771, 18
  store i64 %790, i64* %3, align 8
  %791 = inttoptr i64 %789 to i8*
  %792 = load i8, i8* %791, align 1
  %793 = sext i8 %792 to i64
  %794 = and i64 %793, 4294967295
  store i64 %794, i64* %RDX.i4024, align 8
  %795 = load i64, i64* %6, align 8
  store i64 %795, i64* %RDI.i4032.pre-phi, align 8
  %796 = add i64 %771, 28
  store i64 %796, i64* %3, align 8
  %797 = inttoptr i64 %795 to i64*
  store i64 4276553, i64* %797, align 8
  %798 = load i64, i64* %RBP.i, align 8
  %799 = add i64 %798, -240
  %800 = load i64, i64* %3, align 8
  %801 = add i64 %800, 7
  store i64 %801, i64* %3, align 8
  %802 = inttoptr i64 %799 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %RDI.i4032.pre-phi, align 8
  %804 = add i64 %798, -248
  %805 = add i64 %800, 13
  store i64 %805, i64* %3, align 8
  %806 = inttoptr i64 %804 to i32*
  %807 = load i32, i32* %806, align 4
  %808 = zext i32 %807 to i64
  store i64 %808, i64* %RSI.i3037, align 8
  %809 = add i64 %800, 10072
  %810 = add i64 %800, 18
  %811 = load i64, i64* %6, align 8
  %812 = add i64 %811, -8
  %813 = inttoptr i64 %812 to i64*
  store i64 %810, i64* %813, align 8
  store i64 %812, i64* %6, align 8
  store i64 %809, i64* %3, align 8
  %call2_401195 = tail call %struct.Memory* @sub_4038e0._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %809, %struct.Memory* %call2_401167)
  %814 = load i64, i64* %RBP.i, align 8
  %815 = add i64 %814, -44
  %816 = load i64, i64* %3, align 8
  %817 = add i64 %816, 5
  store i64 %817, i64* %3, align 8
  %818 = inttoptr i64 %815 to i8*
  %819 = load i8, i8* %818, align 1
  %820 = sext i8 %819 to i64
  %821 = and i64 %820, 4294967295
  store i64 %821, i64* %477, align 8
  %822 = add i64 %814, -43
  %823 = add i64 %816, 10
  store i64 %823, i64* %3, align 8
  %824 = inttoptr i64 %822 to i8*
  %825 = load i8, i8* %824, align 1
  %826 = sext i8 %825 to i64
  %827 = and i64 %826, 4294967295
  store i64 %827, i64* %250, align 8
  %828 = add i64 %814, -42
  %829 = add i64 %816, 14
  store i64 %829, i64* %3, align 8
  %830 = inttoptr i64 %828 to i8*
  %831 = load i8, i8* %830, align 1
  %832 = sext i8 %831 to i64
  %833 = and i64 %832, 4294967295
  store i64 %833, i64* %RCX.i4028, align 8
  %834 = add i64 %814, -41
  %835 = add i64 %816, 18
  store i64 %835, i64* %3, align 8
  %836 = inttoptr i64 %834 to i8*
  %837 = load i8, i8* %836, align 1
  %838 = sext i8 %837 to i64
  %839 = and i64 %838, 4294967295
  store i64 %839, i64* %RDX.i4024, align 8
  %840 = load i64, i64* %6, align 8
  store i64 %840, i64* %RDI.i4032.pre-phi, align 8
  %841 = add i64 %816, 28
  store i64 %841, i64* %3, align 8
  %842 = inttoptr i64 %840 to i64*
  store i64 4276588, i64* %842, align 8
  %843 = load i64, i64* %RBP.i, align 8
  %844 = add i64 %843, -240
  %845 = load i64, i64* %3, align 8
  %846 = add i64 %845, 7
  store i64 %846, i64* %3, align 8
  %847 = inttoptr i64 %844 to i64*
  %848 = load i64, i64* %847, align 8
  store i64 %848, i64* %RDI.i4032.pre-phi, align 8
  %849 = add i64 %843, -248
  %850 = add i64 %845, 13
  store i64 %850, i64* %3, align 8
  %851 = inttoptr i64 %849 to i32*
  %852 = load i32, i32* %851, align 4
  %853 = zext i32 %852 to i64
  store i64 %853, i64* %RSI.i3037, align 8
  %854 = add i64 %845, 10298
  %855 = add i64 %845, 18
  %856 = load i64, i64* %6, align 8
  %857 = add i64 %856, -8
  %858 = inttoptr i64 %857 to i64*
  store i64 %855, i64* %858, align 8
  store i64 %857, i64* %6, align 8
  store i64 %854, i64* %3, align 8
  %call2_4011c3 = tail call %struct.Memory* @sub_4039f0._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %854, %struct.Memory* %call2_401195)
  %859 = load i64, i64* %RBP.i, align 8
  %860 = add i64 %859, -41
  %861 = load i64, i64* %3, align 8
  %862 = add i64 %861, 4
  store i64 %862, i64* %3, align 8
  %863 = inttoptr i64 %860 to i8*
  %864 = load i8, i8* %863, align 1
  %865 = sext i8 %864 to i64
  %866 = and i64 %865, 4294967295
  store i64 %866, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41418c_type* @G__0x41418c to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41418c_type* @G__0x41418c to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %867 = add i64 %859, -240
  %868 = add i64 %861, 18
  store i64 %868, i64* %3, align 8
  %869 = inttoptr i64 %867 to i64*
  %870 = load i64, i64* %869, align 8
  store i64 %870, i64* %RDI.i4032.pre-phi, align 8
  %871 = add i64 %859, -248
  %872 = add i64 %861, 24
  store i64 %872, i64* %3, align 8
  %873 = inttoptr i64 %871 to i32*
  %874 = load i32, i32* %873, align 4
  %875 = zext i32 %874 to i64
  store i64 %875, i64* %RSI.i3037, align 8
  %876 = add i64 %861, 10552
  %877 = add i64 %861, 29
  %878 = load i64, i64* %6, align 8
  %879 = add i64 %878, -8
  %880 = inttoptr i64 %879 to i64*
  store i64 %877, i64* %880, align 8
  store i64 %879, i64* %6, align 8
  store i64 %876, i64* %3, align 8
  %call2_4011e0 = tail call %struct.Memory* @sub_403b00._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %876, %struct.Memory* %call2_4011c3)
  %881 = load i64, i64* %RBP.i, align 8
  %882 = add i64 %881, -44
  %883 = load i64, i64* %3, align 8
  %884 = add i64 %883, 5
  store i64 %884, i64* %3, align 8
  %885 = inttoptr i64 %882 to i8*
  %886 = load i8, i8* %885, align 1
  %887 = sext i8 %886 to i64
  %888 = and i64 %887, 4294967295
  store i64 %888, i64* %477, align 8
  %889 = add i64 %881, -43
  %890 = add i64 %883, 10
  store i64 %890, i64* %3, align 8
  %891 = inttoptr i64 %889 to i8*
  %892 = load i8, i8* %891, align 1
  %893 = sext i8 %892 to i64
  %894 = and i64 %893, 4294967295
  store i64 %894, i64* %250, align 8
  %895 = add i64 %881, -42
  %896 = add i64 %883, 14
  store i64 %896, i64* %3, align 8
  %897 = inttoptr i64 %895 to i8*
  %898 = load i8, i8* %897, align 1
  %899 = sext i8 %898 to i64
  %900 = and i64 %899, 4294967295
  store i64 %900, i64* %RCX.i4028, align 8
  %901 = add i64 %881, -41
  %902 = add i64 %883, 18
  store i64 %902, i64* %3, align 8
  %903 = inttoptr i64 %901 to i8*
  %904 = load i8, i8* %903, align 1
  %905 = sext i8 %904 to i64
  %906 = and i64 %905, 4294967295
  store i64 %906, i64* %RDX.i4024, align 8
  %907 = load i64, i64* %6, align 8
  store i64 %907, i64* %RDI.i4032.pre-phi, align 8
  %908 = add i64 %883, 28
  store i64 %908, i64* %3, align 8
  %909 = inttoptr i64 %907 to i64*
  store i64 4276641, i64* %909, align 8
  %910 = load i64, i64* %RBP.i, align 8
  %911 = add i64 %910, -240
  %912 = load i64, i64* %3, align 8
  %913 = add i64 %912, 7
  store i64 %913, i64* %3, align 8
  %914 = inttoptr i64 %911 to i64*
  %915 = load i64, i64* %914, align 8
  store i64 %915, i64* %RDI.i4032.pre-phi, align 8
  %916 = add i64 %910, -248
  %917 = add i64 %912, 13
  store i64 %917, i64* %3, align 8
  %918 = inttoptr i64 %916 to i32*
  %919 = load i32, i32* %918, align 4
  %920 = zext i32 %919 to i64
  store i64 %920, i64* %RSI.i3037, align 8
  %921 = add i64 %912, 10671
  %922 = add i64 %912, 18
  %923 = load i64, i64* %6, align 8
  %924 = add i64 %923, -8
  %925 = inttoptr i64 %924 to i64*
  store i64 %922, i64* %925, align 8
  store i64 %924, i64* %6, align 8
  store i64 %921, i64* %3, align 8
  %call2_40120e = tail call %struct.Memory* @sub_403bb0._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %921, %struct.Memory* %call2_4011e0)
  %926 = load i64, i64* %RBP.i, align 8
  %927 = add i64 %926, -41
  %928 = load i64, i64* %3, align 8
  %929 = add i64 %928, 4
  store i64 %929, i64* %3, align 8
  %930 = inttoptr i64 %927 to i8*
  %931 = load i8, i8* %930, align 1
  %932 = sext i8 %931 to i64
  %933 = and i64 %932, 4294967295
  store i64 %933, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4141bf_type* @G__0x4141bf to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4141bf_type* @G__0x4141bf to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %934 = add i64 %926, -240
  %935 = add i64 %928, 18
  store i64 %935, i64* %3, align 8
  %936 = inttoptr i64 %934 to i64*
  %937 = load i64, i64* %936, align 8
  store i64 %937, i64* %RDI.i4032.pre-phi, align 8
  %938 = add i64 %926, -248
  %939 = add i64 %928, 24
  store i64 %939, i64* %3, align 8
  %940 = inttoptr i64 %938 to i32*
  %941 = load i32, i32* %940, align 4
  %942 = zext i32 %941 to i64
  store i64 %942, i64* %RSI.i3037, align 8
  %943 = add i64 %928, 10925
  %944 = add i64 %928, 29
  %945 = load i64, i64* %6, align 8
  %946 = add i64 %945, -8
  %947 = inttoptr i64 %946 to i64*
  store i64 %944, i64* %947, align 8
  store i64 %946, i64* %6, align 8
  store i64 %943, i64* %3, align 8
  %call2_40122b = tail call %struct.Memory* @sub_403cc0._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %943, %struct.Memory* %call2_40120e)
  %948 = load i64, i64* %RBP.i, align 8
  %949 = add i64 %948, -44
  %950 = load i64, i64* %3, align 8
  %951 = add i64 %950, 5
  store i64 %951, i64* %3, align 8
  %952 = inttoptr i64 %949 to i8*
  %953 = load i8, i8* %952, align 1
  %954 = sext i8 %953 to i64
  %955 = and i64 %954, 4294967295
  store i64 %955, i64* %477, align 8
  %956 = add i64 %948, -43
  %957 = add i64 %950, 10
  store i64 %957, i64* %3, align 8
  %958 = inttoptr i64 %956 to i8*
  %959 = load i8, i8* %958, align 1
  %960 = sext i8 %959 to i64
  %961 = and i64 %960, 4294967295
  store i64 %961, i64* %250, align 8
  %962 = add i64 %948, -42
  %963 = add i64 %950, 14
  store i64 %963, i64* %3, align 8
  %964 = inttoptr i64 %962 to i8*
  %965 = load i8, i8* %964, align 1
  %966 = sext i8 %965 to i64
  %967 = and i64 %966, 4294967295
  store i64 %967, i64* %RCX.i4028, align 8
  %968 = add i64 %948, -41
  %969 = add i64 %950, 18
  store i64 %969, i64* %3, align 8
  %970 = inttoptr i64 %968 to i8*
  %971 = load i8, i8* %970, align 1
  %972 = sext i8 %971 to i64
  %973 = and i64 %972, 4294967295
  store i64 %973, i64* %RDX.i4024, align 8
  %974 = load i64, i64* %6, align 8
  store i64 %974, i64* %RDI.i4032.pre-phi, align 8
  %975 = add i64 %950, 28
  store i64 %975, i64* %3, align 8
  %976 = inttoptr i64 %974 to i64*
  store i64 4276691, i64* %976, align 8
  %977 = load i64, i64* %RBP.i, align 8
  %978 = add i64 %977, -240
  %979 = load i64, i64* %3, align 8
  %980 = add i64 %979, 7
  store i64 %980, i64* %3, align 8
  %981 = inttoptr i64 %978 to i64*
  %982 = load i64, i64* %981, align 8
  store i64 %982, i64* %RDI.i4032.pre-phi, align 8
  %983 = add i64 %977, -248
  %984 = add i64 %979, 13
  store i64 %984, i64* %3, align 8
  %985 = inttoptr i64 %983 to i32*
  %986 = load i32, i32* %985, align 4
  %987 = zext i32 %986 to i64
  store i64 %987, i64* %RSI.i3037, align 8
  %988 = add i64 %979, 11044
  %989 = add i64 %979, 18
  %990 = load i64, i64* %6, align 8
  %991 = add i64 %990, -8
  %992 = inttoptr i64 %991 to i64*
  store i64 %989, i64* %992, align 8
  store i64 %991, i64* %6, align 8
  store i64 %988, i64* %3, align 8
  %call2_401259 = tail call %struct.Memory* @sub_403d70._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %988, %struct.Memory* %call2_40122b)
  %993 = load i64, i64* %RBP.i, align 8
  %994 = add i64 %993, -41
  %995 = load i64, i64* %3, align 8
  %996 = add i64 %995, 4
  store i64 %996, i64* %3, align 8
  %997 = inttoptr i64 %994 to i8*
  %998 = load i8, i8* %997, align 1
  %999 = sext i8 %998 to i64
  %1000 = and i64 %999, 4294967295
  store i64 %1000, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4141f0_type* @G__0x4141f0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4141f0_type* @G__0x4141f0 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1001 = add i64 %993, -240
  %1002 = add i64 %995, 18
  store i64 %1002, i64* %3, align 8
  %1003 = inttoptr i64 %1001 to i64*
  %1004 = load i64, i64* %1003, align 8
  store i64 %1004, i64* %RDI.i4032.pre-phi, align 8
  %1005 = add i64 %993, -248
  %1006 = add i64 %995, 24
  store i64 %1006, i64* %3, align 8
  %1007 = inttoptr i64 %1005 to i32*
  %1008 = load i32, i32* %1007, align 4
  %1009 = zext i32 %1008 to i64
  store i64 %1009, i64* %RSI.i3037, align 8
  %1010 = add i64 %995, 11298
  %1011 = add i64 %995, 29
  %1012 = load i64, i64* %6, align 8
  %1013 = add i64 %1012, -8
  %1014 = inttoptr i64 %1013 to i64*
  store i64 %1011, i64* %1014, align 8
  store i64 %1013, i64* %6, align 8
  store i64 %1010, i64* %3, align 8
  %call2_401276 = tail call %struct.Memory* @sub_403e80._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1010, %struct.Memory* %call2_401259)
  %1015 = load i64, i64* %RBP.i, align 8
  %1016 = add i64 %1015, -44
  %1017 = load i64, i64* %3, align 8
  %1018 = add i64 %1017, 5
  store i64 %1018, i64* %3, align 8
  %1019 = inttoptr i64 %1016 to i8*
  %1020 = load i8, i8* %1019, align 1
  %1021 = sext i8 %1020 to i64
  %1022 = and i64 %1021, 4294967295
  store i64 %1022, i64* %477, align 8
  %1023 = add i64 %1015, -43
  %1024 = add i64 %1017, 10
  store i64 %1024, i64* %3, align 8
  %1025 = inttoptr i64 %1023 to i8*
  %1026 = load i8, i8* %1025, align 1
  %1027 = sext i8 %1026 to i64
  %1028 = and i64 %1027, 4294967295
  store i64 %1028, i64* %250, align 8
  %1029 = add i64 %1015, -42
  %1030 = add i64 %1017, 14
  store i64 %1030, i64* %3, align 8
  %1031 = inttoptr i64 %1029 to i8*
  %1032 = load i8, i8* %1031, align 1
  %1033 = sext i8 %1032 to i64
  %1034 = and i64 %1033, 4294967295
  store i64 %1034, i64* %RCX.i4028, align 8
  %1035 = add i64 %1015, -41
  %1036 = add i64 %1017, 18
  store i64 %1036, i64* %3, align 8
  %1037 = inttoptr i64 %1035 to i8*
  %1038 = load i8, i8* %1037, align 1
  %1039 = sext i8 %1038 to i64
  %1040 = and i64 %1039, 4294967295
  store i64 %1040, i64* %RDX.i4024, align 8
  %1041 = load i64, i64* %6, align 8
  store i64 %1041, i64* %RDI.i4032.pre-phi, align 8
  %1042 = add i64 %1017, 28
  store i64 %1042, i64* %3, align 8
  %1043 = inttoptr i64 %1041 to i64*
  store i64 4276741, i64* %1043, align 8
  %1044 = load i64, i64* %RBP.i, align 8
  %1045 = add i64 %1044, -240
  %1046 = load i64, i64* %3, align 8
  %1047 = add i64 %1046, 7
  store i64 %1047, i64* %3, align 8
  %1048 = inttoptr i64 %1045 to i64*
  %1049 = load i64, i64* %1048, align 8
  store i64 %1049, i64* %RDI.i4032.pre-phi, align 8
  %1050 = add i64 %1044, -248
  %1051 = add i64 %1046, 13
  store i64 %1051, i64* %3, align 8
  %1052 = inttoptr i64 %1050 to i32*
  %1053 = load i32, i32* %1052, align 4
  %1054 = zext i32 %1053 to i64
  store i64 %1054, i64* %RSI.i3037, align 8
  %1055 = add i64 %1046, 11417
  %1056 = add i64 %1046, 18
  %1057 = load i64, i64* %6, align 8
  %1058 = add i64 %1057, -8
  %1059 = inttoptr i64 %1058 to i64*
  store i64 %1056, i64* %1059, align 8
  store i64 %1058, i64* %6, align 8
  store i64 %1055, i64* %3, align 8
  %call2_4012a4 = tail call %struct.Memory* @sub_403f30._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1055, %struct.Memory* %call2_401276)
  %1060 = load i64, i64* %3, align 8
  %1061 = add i64 %1060, 2199007
  %1062 = add i64 %1060, 8
  store i64 %1062, i64* %3, align 8
  %1063 = inttoptr i64 %1061 to double*
  %1064 = load double, double* %1063, align 8
  %1065 = tail call double @llvm.trunc.f64(double %1064)
  %1066 = tail call double @llvm.fabs.f64(double %1065)
  %1067 = fcmp ogt double %1066, 0x41DFFFFFFFC00000
  %1068 = fptosi double %1065 to i32
  %1069 = zext i32 %1068 to i64
  %1070 = select i1 %1067, i64 2147483648, i64 %1069
  store i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295), i64* %RCX.i4028, align 8
  %ECX.i3562 = bitcast %union.anon* %236 to i32*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  %BL.i3560 = bitcast %union.anon* %16 to i8*
  %1071 = trunc i64 %1070 to i8
  store i8 %1071, i8* %BL.i3560, align 1
  %1072 = and i64 %1070, 255
  store i64 %1072, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x66a200_type* @G__0x66a200 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x66a200_type* @G__0x66a200 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %1073 = load i64, i64* %RBP.i, align 8
  %1074 = add i64 %1073, -256
  %1075 = add i64 %1060, 34
  store i64 %1075, i64* %3, align 8
  %1076 = inttoptr i64 %1074 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295) to i32) to i64), i64* %1076, align 8
  %1077 = load i64, i64* %3, align 8
  %1078 = add i64 %1077, 11637
  %1079 = add i64 %1077, 5
  %1080 = load i64, i64* %6, align 8
  %1081 = add i64 %1080, -8
  %1082 = inttoptr i64 %1081 to i64*
  store i64 %1079, i64* %1082, align 8
  store i64 %1081, i64* %6, align 8
  store i64 %1078, i64* %3, align 8
  %call2_4012cb = tail call %struct.Memory* @sub_404040._Z4fillIPhhEvT_S1_T0_(%struct.State* nonnull %0, i64 %1078, %struct.Memory* %call2_4012a4)
  %1083 = load i64, i64* %RBP.i, align 8
  %1084 = add i64 %1083, -40
  %1085 = load i64, i64* %3, align 8
  %1086 = add i64 %1085, 5
  store i64 %1086, i64* %3, align 8
  %1087 = inttoptr i64 %1084 to double*
  %1088 = load double, double* %1087, align 8
  %1089 = tail call double @llvm.trunc.f64(double %1088)
  %1090 = tail call double @llvm.fabs.f64(double %1089)
  %1091 = fcmp ogt double %1090, 0x41DFFFFFFFC00000
  %1092 = fptosi double %1089 to i32
  %1093 = zext i32 %1092 to i64
  %1094 = select i1 %1091, i64 2147483648, i64 %1093
  store i64 %1094, i64* %RAX.i4026, align 8
  %1095 = trunc i64 %1094 to i8
  store i8 %1095, i8* %BL.i3560, align 1
  %1096 = add i64 %1083, -45
  %1097 = add i64 %1085, 10
  store i64 %1097, i64* %3, align 8
  %1098 = inttoptr i64 %1096 to i8*
  store i8 %1095, i8* %1098, align 1
  %1099 = load i64, i64* %RBP.i, align 8
  %1100 = add i64 %1099, -45
  %1101 = load i64, i64* %3, align 8
  %1102 = add i64 %1101, 3
  store i64 %1102, i64* %3, align 8
  %1103 = inttoptr i64 %1100 to i8*
  %1104 = load i8, i8* %1103, align 1
  %1105 = shl i8 %1104, 1
  store i8 %1105, i8* %BL.i3560, align 1
  %1106 = icmp ult i8 %1105, %1104
  %1107 = zext i1 %1106 to i8
  store i8 %1107, i8* %26, align 1
  %1108 = zext i8 %1105 to i32
  %1109 = tail call i32 @llvm.ctpop.i32(i32 %1108)
  %1110 = trunc i32 %1109 to i8
  %1111 = and i8 %1110, 1
  %1112 = xor i8 %1111, 1
  store i8 %1112, i8* %33, align 1
  %1113 = lshr i8 %1104, 3
  %1114 = and i8 %1113, 1
  store i8 %1114, i8* %39, align 1
  %1115 = icmp eq i8 %1105, 0
  %1116 = zext i1 %1115 to i8
  store i8 %1116, i8* %42, align 1
  %1117 = lshr i8 %1104, 6
  %1118 = and i8 %1117, 1
  store i8 %1118, i8* %45, align 1
  %1119 = lshr i8 %1104, 7
  %1120 = xor i8 %1118, %1119
  store i8 %1120, i8* %51, align 1
  %1121 = add i64 %1099, -46
  %1122 = add i64 %1101, 8
  store i64 %1122, i64* %3, align 8
  %1123 = inttoptr i64 %1121 to i8*
  store i8 %1105, i8* %1123, align 1
  %1124 = load i64, i64* %RBP.i, align 8
  %1125 = add i64 %1124, -45
  %1126 = load i64, i64* %3, align 8
  %1127 = add i64 %1126, 4
  store i64 %1127, i64* %3, align 8
  %1128 = inttoptr i64 %1125 to i8*
  %1129 = load i8, i8* %1128, align 1
  %1130 = zext i8 %1129 to i32
  %1131 = add nuw nsw i32 %1130, 2
  %1132 = zext i32 %1131 to i64
  store i64 %1132, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %1133 = and i32 %1131, 255
  %1134 = tail call i32 @llvm.ctpop.i32(i32 %1133)
  %1135 = trunc i32 %1134 to i8
  %1136 = and i8 %1135, 1
  %1137 = xor i8 %1136, 1
  store i8 %1137, i8* %33, align 1
  %1138 = xor i32 %1131, %1130
  %1139 = lshr i32 %1138, 4
  %1140 = trunc i32 %1139 to i8
  %1141 = and i8 %1140, 1
  store i8 %1141, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %1142 = trunc i32 %1131 to i8
  store i8 %1142, i8* %BL.i3560, align 1
  %1143 = add i64 %1124, -47
  %1144 = add i64 %1126, 12
  store i64 %1144, i64* %3, align 8
  %1145 = inttoptr i64 %1143 to i8*
  store i8 %1142, i8* %1145, align 1
  %1146 = load i64, i64* %RBP.i, align 8
  %1147 = add i64 %1146, -45
  %1148 = load i64, i64* %3, align 8
  %1149 = add i64 %1148, 4
  store i64 %1149, i64* %3, align 8
  %1150 = inttoptr i64 %1147 to i8*
  %1151 = load i8, i8* %1150, align 1
  %1152 = zext i8 %1151 to i64
  store i64 %1152, i64* %RAX.i4026, align 8
  %1153 = add i64 %1146, -46
  %1154 = add i64 %1148, 8
  store i64 %1154, i64* %3, align 8
  %1155 = inttoptr i64 %1153 to i8*
  %1156 = load i8, i8* %1155, align 1
  %1157 = zext i8 %1156 to i64
  store i64 %1157, i64* %RCX.i4028, align 8
  %1158 = add i64 %1146, -47
  %1159 = add i64 %1148, 12
  store i64 %1159, i64* %3, align 8
  %1160 = inttoptr i64 %1158 to i8*
  %1161 = load i8, i8* %1160, align 1
  %1162 = zext i8 %1161 to i64
  store i64 %1162, i64* %RDX.i4024, align 8
  store i64 0, i64* %250, align 8
  store i8 0, i8* %26, align 1
  store i8 1, i8* %33, align 1
  store i8 1, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  store i8 0, i8* %39, align 1
  %1163 = add i64 %1146, -260
  %1164 = zext i8 %1151 to i32
  %1165 = add i64 %1148, 21
  store i64 %1165, i64* %3, align 8
  %1166 = inttoptr i64 %1163 to i32*
  store i32 %1164, i32* %1166, align 4
  %1167 = load i32, i32* %ECX.i3562, align 4
  %1168 = zext i32 %1167 to i64
  %1169 = load i64, i64* %3, align 8
  store i64 %1168, i64* %RAX.i4026, align 8
  %1170 = load i64, i64* %RBP.i, align 8
  %1171 = add i64 %1170, -264
  %1172 = load i32, i32* %EDX.i4021, align 4
  %1173 = add i64 %1169, 8
  store i64 %1173, i64* %3, align 8
  %1174 = inttoptr i64 %1171 to i32*
  store i32 %1172, i32* %1174, align 4
  %1175 = load i32, i32* %R8D.i4022, align 4
  %1176 = zext i32 %1175 to i64
  %1177 = load i64, i64* %3, align 8
  store i64 %1176, i64* %RDX.i4024, align 8
  %1178 = load i64, i64* %RBP.i, align 8
  %1179 = add i64 %1178, -264
  %1180 = add i64 %1177, 9
  store i64 %1180, i64* %3, align 8
  %1181 = inttoptr i64 %1179 to i32*
  %1182 = load i32, i32* %1181, align 4
  %1183 = zext i32 %1182 to i64
  store i64 %1183, i64* %RCX.i4028, align 8
  %1184 = add i64 %1177, 11
  store i64 %1184, i64* %3, align 8
  %1185 = load i32, i32* %EAX.i4011, align 8
  %1186 = zext i32 %1185 to i64
  %1187 = shl nuw i64 %1176, 32
  %1188 = or i64 %1187, %1186
  %1189 = udiv i64 %1188, %1183
  %1190 = and i64 %1189, 4294967295
  %1191 = icmp eq i64 %1189, %1190
  br i1 %1191, label %1194, label %1192

; <label>:1192:                                   ; preds = %routine_idivl__r11d.exit
  %1193 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1184, %struct.Memory* %call2_4012cb)
  %.pre10 = load i64, i64* %RBP.i, align 8
  %.pre11 = load i64, i64* %3, align 8
  %.pre12 = load i32, i32* %EAX.i4011, align 4
  br label %routine_divl__ecx.exit

; <label>:1194:                                   ; preds = %routine_idivl__r11d.exit
  %1195 = urem i64 %1188, %1183
  store i64 %1189, i64* %RAX.i4026, align 8
  store i64 %1195, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %1196 = trunc i64 %1189 to i32
  br label %routine_divl__ecx.exit

routine_divl__ecx.exit:                           ; preds = %1194, %1192
  %1197 = phi i32 [ %.pre12, %1192 ], [ %1196, %1194 ]
  %1198 = phi i64 [ %.pre11, %1192 ], [ %1184, %1194 ]
  %1199 = phi i64 [ %.pre10, %1192 ], [ %1178, %1194 ]
  %1200 = phi %struct.Memory* [ %1193, %1192 ], [ %call2_4012cb, %1194 ]
  %1201 = add i64 %1199, -260
  %1202 = add i64 %1198, 6
  store i64 %1202, i64* %3, align 8
  %1203 = inttoptr i64 %1201 to i32*
  %1204 = load i32, i32* %1203, align 4
  %1205 = add i32 %1197, %1204
  %1206 = zext i32 %1205 to i64
  store i64 %1206, i64* %RDX.i4024, align 8
  %1207 = icmp ult i32 %1205, %1204
  %1208 = icmp ult i32 %1205, %1197
  %1209 = or i1 %1207, %1208
  %1210 = zext i1 %1209 to i8
  store i8 %1210, i8* %26, align 1
  %1211 = and i32 %1205, 255
  %1212 = tail call i32 @llvm.ctpop.i32(i32 %1211)
  %1213 = trunc i32 %1212 to i8
  %1214 = and i8 %1213, 1
  %1215 = xor i8 %1214, 1
  store i8 %1215, i8* %33, align 1
  %1216 = xor i32 %1197, %1204
  %1217 = xor i32 %1216, %1205
  %1218 = lshr i32 %1217, 4
  %1219 = trunc i32 %1218 to i8
  %1220 = and i8 %1219, 1
  store i8 %1220, i8* %39, align 1
  %1221 = icmp eq i32 %1205, 0
  %1222 = zext i1 %1221 to i8
  store i8 %1222, i8* %42, align 1
  %1223 = lshr i32 %1205, 31
  %1224 = trunc i32 %1223 to i8
  store i8 %1224, i8* %45, align 1
  %1225 = lshr i32 %1204, 31
  %1226 = lshr i32 %1197, 31
  %1227 = xor i32 %1223, %1225
  %1228 = xor i32 %1223, %1226
  %1229 = add nuw nsw i32 %1227, %1228
  %1230 = icmp eq i32 %1229, 2
  %1231 = zext i1 %1230 to i8
  store i8 %1231, i8* %51, align 1
  %1232 = trunc i32 %1205 to i8
  store i8 %1232, i8* %BL.i3560, align 1
  %1233 = add i64 %1199, -48
  %1234 = add i64 %1198, 13
  store i64 %1234, i64* %3, align 8
  %1235 = inttoptr i64 %1233 to i8*
  store i8 %1232, i8* %1235, align 1
  %1236 = load i64, i64* %RBP.i, align 8
  %1237 = add i64 %1236, -45
  %1238 = load i64, i64* %3, align 8
  %1239 = add i64 %1238, 4
  store i64 %1239, i64* %3, align 8
  %1240 = inttoptr i64 %1237 to i8*
  %1241 = load i8, i8* %1240, align 1
  %1242 = zext i8 %1241 to i64
  store i64 %1242, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41401a_type* @G__0x41401a to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41401a_type* @G__0x41401a to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1243 = add i64 %1236, -256
  %1244 = add i64 %1238, 18
  store i64 %1244, i64* %3, align 8
  %1245 = inttoptr i64 %1243 to i64*
  %1246 = load i64, i64* %1245, align 8
  store i64 %1246, i64* %RDI.i4032.pre-phi, align 8
  %1247 = add i64 %1236, -248
  %1248 = add i64 %1238, 24
  store i64 %1248, i64* %3, align 8
  %1249 = inttoptr i64 %1247 to i32*
  %1250 = load i32, i32* %1249, align 4
  %1251 = zext i32 %1250 to i64
  store i64 %1251, i64* %RSI.i3037, align 8
  %1252 = add i64 %1236, -268
  %1253 = load i32, i32* %R8D.i4022, align 4
  %1254 = add i64 %1238, 31
  store i64 %1254, i64* %3, align 8
  %1255 = inttoptr i64 %1252 to i32*
  store i32 %1253, i32* %1255, align 4
  %1256 = load i64, i64* %3, align 8
  %1257 = add i64 %1256, 11582
  %1258 = add i64 %1256, 5
  %1259 = load i64, i64* %6, align 8
  %1260 = add i64 %1259, -8
  %1261 = inttoptr i64 %1260 to i64*
  store i64 %1258, i64* %1261, align 8
  store i64 %1260, i64* %6, align 8
  store i64 %1257, i64* %3, align 8
  %call2_401342 = tail call %struct.Memory* @sub_404080._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1257, %struct.Memory* %1200)
  %1262 = load i64, i64* %RBP.i, align 8
  %1263 = add i64 %1262, -45
  %1264 = load i64, i64* %3, align 8
  %1265 = add i64 %1264, 4
  store i64 %1265, i64* %3, align 8
  %1266 = inttoptr i64 %1263 to i8*
  %1267 = load i8, i8* %1266, align 1
  %1268 = zext i8 %1267 to i64
  store i64 %1268, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41402f_type* @G__0x41402f to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41402f_type* @G__0x41402f to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1269 = add i64 %1262, -256
  %1270 = add i64 %1264, 18
  store i64 %1270, i64* %3, align 8
  %1271 = inttoptr i64 %1269 to i64*
  %1272 = load i64, i64* %1271, align 8
  store i64 %1272, i64* %RDI.i4032.pre-phi, align 8
  %1273 = add i64 %1262, -248
  %1274 = add i64 %1264, 24
  store i64 %1274, i64* %3, align 8
  %1275 = inttoptr i64 %1273 to i32*
  %1276 = load i32, i32* %1275, align 4
  %1277 = zext i32 %1276 to i64
  store i64 %1277, i64* %RSI.i3037, align 8
  %1278 = add i64 %1264, 11753
  %1279 = add i64 %1264, 29
  %1280 = load i64, i64* %6, align 8
  %1281 = add i64 %1280, -8
  %1282 = inttoptr i64 %1281 to i64*
  store i64 %1279, i64* %1282, align 8
  store i64 %1281, i64* %6, align 8
  store i64 %1278, i64* %3, align 8
  %call2_40135f = tail call %struct.Memory* @sub_404130._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1278, %struct.Memory* %call2_401342)
  %1283 = load i64, i64* %RBP.i, align 8
  %1284 = add i64 %1283, -48
  %1285 = load i64, i64* %3, align 8
  %1286 = add i64 %1285, 5
  store i64 %1286, i64* %3, align 8
  %1287 = inttoptr i64 %1284 to i8*
  %1288 = load i8, i8* %1287, align 1
  %1289 = zext i8 %1288 to i64
  store i64 %1289, i64* %477, align 8
  %1290 = add i64 %1283, -47
  %1291 = add i64 %1285, 10
  store i64 %1291, i64* %3, align 8
  %1292 = inttoptr i64 %1290 to i8*
  %1293 = load i8, i8* %1292, align 1
  %1294 = zext i8 %1293 to i64
  store i64 %1294, i64* %250, align 8
  %1295 = add i64 %1283, -46
  %1296 = add i64 %1285, 14
  store i64 %1296, i64* %3, align 8
  %1297 = inttoptr i64 %1295 to i8*
  %1298 = load i8, i8* %1297, align 1
  %1299 = zext i8 %1298 to i64
  store i64 %1299, i64* %RCX.i4028, align 8
  %1300 = add i64 %1283, -45
  %1301 = add i64 %1285, 18
  store i64 %1301, i64* %3, align 8
  %1302 = inttoptr i64 %1300 to i8*
  %1303 = load i8, i8* %1302, align 1
  %1304 = zext i8 %1303 to i64
  store i64 %1304, i64* %RDX.i4024, align 8
  %1305 = load i64, i64* %6, align 8
  store i64 %1305, i64* %RDI.i4032.pre-phi, align 8
  %1306 = add i64 %1285, 28
  store i64 %1306, i64* %3, align 8
  %1307 = inttoptr i64 %1305 to i64*
  store i64 4276300, i64* %1307, align 8
  %1308 = load i64, i64* %RBP.i, align 8
  %1309 = add i64 %1308, -256
  %1310 = load i64, i64* %3, align 8
  %1311 = add i64 %1310, 7
  store i64 %1311, i64* %3, align 8
  %1312 = inttoptr i64 %1309 to i64*
  %1313 = load i64, i64* %1312, align 8
  store i64 %1313, i64* %RDI.i4032.pre-phi, align 8
  %1314 = add i64 %1308, -248
  %1315 = add i64 %1310, 13
  store i64 %1315, i64* %3, align 8
  %1316 = inttoptr i64 %1314 to i32*
  %1317 = load i32, i32* %1316, align 4
  %1318 = zext i32 %1317 to i64
  store i64 %1318, i64* %RSI.i3037, align 8
  %1319 = add i64 %1310, 11888
  %1320 = add i64 %1310, 18
  %1321 = load i64, i64* %6, align 8
  %1322 = add i64 %1321, -8
  %1323 = inttoptr i64 %1322 to i64*
  store i64 %1320, i64* %1323, align 8
  store i64 %1322, i64* %6, align 8
  store i64 %1319, i64* %3, align 8
  %call2_40138d = tail call %struct.Memory* @sub_4041f0._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1319, %struct.Memory* %call2_40135f)
  %1324 = load i64, i64* %RBP.i, align 8
  %1325 = add i64 %1324, -45
  %1326 = load i64, i64* %3, align 8
  %1327 = add i64 %1326, 4
  store i64 %1327, i64* %3, align 8
  %1328 = inttoptr i64 %1325 to i8*
  %1329 = load i8, i8* %1328, align 1
  %1330 = zext i8 %1329 to i64
  store i64 %1330, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41406b_type* @G__0x41406b to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41406b_type* @G__0x41406b to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1331 = add i64 %1324, -256
  %1332 = add i64 %1326, 18
  store i64 %1332, i64* %3, align 8
  %1333 = inttoptr i64 %1331 to i64*
  %1334 = load i64, i64* %1333, align 8
  store i64 %1334, i64* %RDI.i4032.pre-phi, align 8
  %1335 = add i64 %1324, -248
  %1336 = add i64 %1326, 24
  store i64 %1336, i64* %3, align 8
  %1337 = inttoptr i64 %1335 to i32*
  %1338 = load i32, i32* %1337, align 4
  %1339 = zext i32 %1338 to i64
  store i64 %1339, i64* %RSI.i3037, align 8
  %1340 = add i64 %1326, 12142
  %1341 = add i64 %1326, 29
  %1342 = load i64, i64* %6, align 8
  %1343 = add i64 %1342, -8
  %1344 = inttoptr i64 %1343 to i64*
  store i64 %1341, i64* %1344, align 8
  store i64 %1343, i64* %6, align 8
  store i64 %1340, i64* %3, align 8
  %call2_4013aa = tail call %struct.Memory* @sub_404300._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1340, %struct.Memory* %call2_40138d)
  %1345 = load i64, i64* %RBP.i, align 8
  %1346 = add i64 %1345, -48
  %1347 = load i64, i64* %3, align 8
  %1348 = add i64 %1347, 5
  store i64 %1348, i64* %3, align 8
  %1349 = inttoptr i64 %1346 to i8*
  %1350 = load i8, i8* %1349, align 1
  %1351 = zext i8 %1350 to i64
  store i64 %1351, i64* %477, align 8
  %1352 = add i64 %1345, -47
  %1353 = add i64 %1347, 10
  store i64 %1353, i64* %3, align 8
  %1354 = inttoptr i64 %1352 to i8*
  %1355 = load i8, i8* %1354, align 1
  %1356 = zext i8 %1355 to i64
  store i64 %1356, i64* %250, align 8
  %1357 = add i64 %1345, -46
  %1358 = add i64 %1347, 14
  store i64 %1358, i64* %3, align 8
  %1359 = inttoptr i64 %1357 to i8*
  %1360 = load i8, i8* %1359, align 1
  %1361 = zext i8 %1360 to i64
  store i64 %1361, i64* %RCX.i4028, align 8
  %1362 = add i64 %1345, -45
  %1363 = add i64 %1347, 18
  store i64 %1363, i64* %3, align 8
  %1364 = inttoptr i64 %1362 to i8*
  %1365 = load i8, i8* %1364, align 1
  %1366 = zext i8 %1365 to i64
  store i64 %1366, i64* %RDX.i4024, align 8
  %1367 = load i64, i64* %6, align 8
  store i64 %1367, i64* %RDI.i4032.pre-phi, align 8
  %1368 = add i64 %1347, 28
  store i64 %1368, i64* %3, align 8
  %1369 = inttoptr i64 %1367 to i64*
  store i64 4276357, i64* %1369, align 8
  %1370 = load i64, i64* %RBP.i, align 8
  %1371 = add i64 %1370, -256
  %1372 = load i64, i64* %3, align 8
  %1373 = add i64 %1372, 7
  store i64 %1373, i64* %3, align 8
  %1374 = inttoptr i64 %1371 to i64*
  %1375 = load i64, i64* %1374, align 8
  store i64 %1375, i64* %RDI.i4032.pre-phi, align 8
  %1376 = add i64 %1370, -248
  %1377 = add i64 %1372, 13
  store i64 %1377, i64* %3, align 8
  %1378 = inttoptr i64 %1376 to i32*
  %1379 = load i32, i32* %1378, align 4
  %1380 = zext i32 %1379 to i64
  store i64 %1380, i64* %RSI.i3037, align 8
  %1381 = add i64 %1372, 12261
  %1382 = add i64 %1372, 18
  %1383 = load i64, i64* %6, align 8
  %1384 = add i64 %1383, -8
  %1385 = inttoptr i64 %1384 to i64*
  store i64 %1382, i64* %1385, align 8
  store i64 %1384, i64* %6, align 8
  store i64 %1381, i64* %3, align 8
  %call2_4013d8 = tail call %struct.Memory* @sub_4043b0._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1381, %struct.Memory* %call2_4013aa)
  %1386 = load i64, i64* %RBP.i, align 8
  %1387 = add i64 %1386, -45
  %1388 = load i64, i64* %3, align 8
  %1389 = add i64 %1388, 4
  store i64 %1389, i64* %3, align 8
  %1390 = inttoptr i64 %1387 to i8*
  %1391 = load i8, i8* %1390, align 1
  %1392 = zext i8 %1391 to i64
  store i64 %1392, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4140a9_type* @G__0x4140a9 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4140a9_type* @G__0x4140a9 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1393 = add i64 %1386, -256
  %1394 = add i64 %1388, 18
  store i64 %1394, i64* %3, align 8
  %1395 = inttoptr i64 %1393 to i64*
  %1396 = load i64, i64* %1395, align 8
  store i64 %1396, i64* %RDI.i4032.pre-phi, align 8
  %1397 = add i64 %1386, -248
  %1398 = add i64 %1388, 24
  store i64 %1398, i64* %3, align 8
  %1399 = inttoptr i64 %1397 to i32*
  %1400 = load i32, i32* %1399, align 4
  %1401 = zext i32 %1400 to i64
  store i64 %1401, i64* %RSI.i3037, align 8
  %1402 = add i64 %1388, 12515
  %1403 = add i64 %1388, 29
  %1404 = load i64, i64* %6, align 8
  %1405 = add i64 %1404, -8
  %1406 = inttoptr i64 %1405 to i64*
  store i64 %1403, i64* %1406, align 8
  store i64 %1405, i64* %6, align 8
  store i64 %1402, i64* %3, align 8
  %call2_4013f5 = tail call %struct.Memory* @sub_4044c0._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1402, %struct.Memory* %call2_4013d8)
  %1407 = load i64, i64* %RBP.i, align 8
  %1408 = add i64 %1407, -48
  %1409 = load i64, i64* %3, align 8
  %1410 = add i64 %1409, 5
  store i64 %1410, i64* %3, align 8
  %1411 = inttoptr i64 %1408 to i8*
  %1412 = load i8, i8* %1411, align 1
  %1413 = zext i8 %1412 to i64
  store i64 %1413, i64* %477, align 8
  %1414 = add i64 %1407, -47
  %1415 = add i64 %1409, 10
  store i64 %1415, i64* %3, align 8
  %1416 = inttoptr i64 %1414 to i8*
  %1417 = load i8, i8* %1416, align 1
  %1418 = zext i8 %1417 to i64
  store i64 %1418, i64* %250, align 8
  %1419 = add i64 %1407, -46
  %1420 = add i64 %1409, 14
  store i64 %1420, i64* %3, align 8
  %1421 = inttoptr i64 %1419 to i8*
  %1422 = load i8, i8* %1421, align 1
  %1423 = zext i8 %1422 to i64
  store i64 %1423, i64* %RCX.i4028, align 8
  %1424 = add i64 %1407, -45
  %1425 = add i64 %1409, 18
  store i64 %1425, i64* %3, align 8
  %1426 = inttoptr i64 %1424 to i8*
  %1427 = load i8, i8* %1426, align 1
  %1428 = zext i8 %1427 to i64
  store i64 %1428, i64* %RDX.i4024, align 8
  %1429 = load i64, i64* %6, align 8
  store i64 %1429, i64* %RDI.i4032.pre-phi, align 8
  %1430 = add i64 %1409, 28
  store i64 %1430, i64* %3, align 8
  %1431 = inttoptr i64 %1429 to i64*
  store i64 4276419, i64* %1431, align 8
  %1432 = load i64, i64* %RBP.i, align 8
  %1433 = add i64 %1432, -256
  %1434 = load i64, i64* %3, align 8
  %1435 = add i64 %1434, 7
  store i64 %1435, i64* %3, align 8
  %1436 = inttoptr i64 %1433 to i64*
  %1437 = load i64, i64* %1436, align 8
  store i64 %1437, i64* %RDI.i4032.pre-phi, align 8
  %1438 = add i64 %1432, -248
  %1439 = add i64 %1434, 13
  store i64 %1439, i64* %3, align 8
  %1440 = inttoptr i64 %1438 to i32*
  %1441 = load i32, i32* %1440, align 4
  %1442 = zext i32 %1441 to i64
  store i64 %1442, i64* %RSI.i3037, align 8
  %1443 = add i64 %1434, 12634
  %1444 = add i64 %1434, 18
  %1445 = load i64, i64* %6, align 8
  %1446 = add i64 %1445, -8
  %1447 = inttoptr i64 %1446 to i64*
  store i64 %1444, i64* %1447, align 8
  store i64 %1446, i64* %6, align 8
  store i64 %1443, i64* %3, align 8
  %call2_401423 = tail call %struct.Memory* @sub_404570._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1443, %struct.Memory* %call2_4013f5)
  %1448 = load i64, i64* %RBP.i, align 8
  %1449 = add i64 %1448, -48
  %1450 = load i64, i64* %3, align 8
  %1451 = add i64 %1450, 5
  store i64 %1451, i64* %3, align 8
  %1452 = inttoptr i64 %1449 to i8*
  %1453 = load i8, i8* %1452, align 1
  %1454 = zext i8 %1453 to i64
  store i64 %1454, i64* %477, align 8
  %1455 = add i64 %1448, -47
  %1456 = add i64 %1450, 10
  store i64 %1456, i64* %3, align 8
  %1457 = inttoptr i64 %1455 to i8*
  %1458 = load i8, i8* %1457, align 1
  %1459 = zext i8 %1458 to i64
  store i64 %1459, i64* %250, align 8
  %1460 = add i64 %1448, -46
  %1461 = add i64 %1450, 14
  store i64 %1461, i64* %3, align 8
  %1462 = inttoptr i64 %1460 to i8*
  %1463 = load i8, i8* %1462, align 1
  %1464 = zext i8 %1463 to i64
  store i64 %1464, i64* %RCX.i4028, align 8
  %1465 = add i64 %1448, -45
  %1466 = add i64 %1450, 18
  store i64 %1466, i64* %3, align 8
  %1467 = inttoptr i64 %1465 to i8*
  %1468 = load i8, i8* %1467, align 1
  %1469 = zext i8 %1468 to i64
  store i64 %1469, i64* %RDX.i4024, align 8
  %1470 = load i64, i64* %6, align 8
  store i64 %1470, i64* %RDI.i4032.pre-phi, align 8
  %1471 = add i64 %1450, 28
  store i64 %1471, i64* %3, align 8
  %1472 = inttoptr i64 %1470 to i64*
  store i64 4276456, i64* %1472, align 8
  %1473 = load i64, i64* %RBP.i, align 8
  %1474 = add i64 %1473, -256
  %1475 = load i64, i64* %3, align 8
  %1476 = add i64 %1475, 7
  store i64 %1476, i64* %3, align 8
  %1477 = inttoptr i64 %1474 to i64*
  %1478 = load i64, i64* %1477, align 8
  store i64 %1478, i64* %RDI.i4032.pre-phi, align 8
  %1479 = add i64 %1473, -248
  %1480 = add i64 %1475, 13
  store i64 %1480, i64* %3, align 8
  %1481 = inttoptr i64 %1479 to i32*
  %1482 = load i32, i32* %1481, align 4
  %1483 = zext i32 %1482 to i64
  store i64 %1483, i64* %RSI.i3037, align 8
  %1484 = add i64 %1475, 12860
  %1485 = add i64 %1475, 18
  %1486 = load i64, i64* %6, align 8
  %1487 = add i64 %1486, -8
  %1488 = inttoptr i64 %1487 to i64*
  store i64 %1485, i64* %1488, align 8
  store i64 %1487, i64* %6, align 8
  store i64 %1484, i64* %3, align 8
  %call2_401451 = tail call %struct.Memory* @sub_404680._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1484, %struct.Memory* %call2_401423)
  %1489 = load i64, i64* %RBP.i, align 8
  %1490 = add i64 %1489, -45
  %1491 = load i64, i64* %3, align 8
  %1492 = add i64 %1491, 4
  store i64 %1492, i64* %3, align 8
  %1493 = inttoptr i64 %1490 to i8*
  %1494 = load i8, i8* %1493, align 1
  %1495 = zext i8 %1494 to i64
  store i64 %1495, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41410e_type* @G__0x41410e to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41410e_type* @G__0x41410e to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1496 = add i64 %1489, -256
  %1497 = add i64 %1491, 18
  store i64 %1497, i64* %3, align 8
  %1498 = inttoptr i64 %1496 to i64*
  %1499 = load i64, i64* %1498, align 8
  store i64 %1499, i64* %RDI.i4032.pre-phi, align 8
  %1500 = add i64 %1489, -248
  %1501 = add i64 %1491, 24
  store i64 %1501, i64* %3, align 8
  %1502 = inttoptr i64 %1500 to i32*
  %1503 = load i32, i32* %1502, align 4
  %1504 = zext i32 %1503 to i64
  store i64 %1504, i64* %RSI.i3037, align 8
  %1505 = add i64 %1491, 13114
  %1506 = add i64 %1491, 29
  %1507 = load i64, i64* %6, align 8
  %1508 = add i64 %1507, -8
  %1509 = inttoptr i64 %1508 to i64*
  store i64 %1506, i64* %1509, align 8
  store i64 %1508, i64* %6, align 8
  store i64 %1505, i64* %3, align 8
  %call2_40146e = tail call %struct.Memory* @sub_404790._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1505, %struct.Memory* %call2_401451)
  %1510 = load i64, i64* %RBP.i, align 8
  %1511 = add i64 %1510, -48
  %1512 = load i64, i64* %3, align 8
  %1513 = add i64 %1512, 5
  store i64 %1513, i64* %3, align 8
  %1514 = inttoptr i64 %1511 to i8*
  %1515 = load i8, i8* %1514, align 1
  %1516 = zext i8 %1515 to i64
  store i64 %1516, i64* %477, align 8
  %1517 = add i64 %1510, -47
  %1518 = add i64 %1512, 10
  store i64 %1518, i64* %3, align 8
  %1519 = inttoptr i64 %1517 to i8*
  %1520 = load i8, i8* %1519, align 1
  %1521 = zext i8 %1520 to i64
  store i64 %1521, i64* %250, align 8
  %1522 = add i64 %1510, -46
  %1523 = add i64 %1512, 14
  store i64 %1523, i64* %3, align 8
  %1524 = inttoptr i64 %1522 to i8*
  %1525 = load i8, i8* %1524, align 1
  %1526 = zext i8 %1525 to i64
  store i64 %1526, i64* %RCX.i4028, align 8
  %1527 = add i64 %1510, -45
  %1528 = add i64 %1512, 18
  store i64 %1528, i64* %3, align 8
  %1529 = inttoptr i64 %1527 to i8*
  %1530 = load i8, i8* %1529, align 1
  %1531 = zext i8 %1530 to i64
  store i64 %1531, i64* %RDX.i4024, align 8
  %1532 = load i64, i64* %6, align 8
  store i64 %1532, i64* %RDI.i4032.pre-phi, align 8
  %1533 = add i64 %1512, 28
  store i64 %1533, i64* %3, align 8
  %1534 = inttoptr i64 %1532 to i64*
  store i64 4276518, i64* %1534, align 8
  %1535 = load i64, i64* %RBP.i, align 8
  %1536 = add i64 %1535, -256
  %1537 = load i64, i64* %3, align 8
  %1538 = add i64 %1537, 7
  store i64 %1538, i64* %3, align 8
  %1539 = inttoptr i64 %1536 to i64*
  %1540 = load i64, i64* %1539, align 8
  store i64 %1540, i64* %RDI.i4032.pre-phi, align 8
  %1541 = add i64 %1535, -248
  %1542 = add i64 %1537, 13
  store i64 %1542, i64* %3, align 8
  %1543 = inttoptr i64 %1541 to i32*
  %1544 = load i32, i32* %1543, align 4
  %1545 = zext i32 %1544 to i64
  store i64 %1545, i64* %RSI.i3037, align 8
  %1546 = add i64 %1537, 13233
  %1547 = add i64 %1537, 18
  %1548 = load i64, i64* %6, align 8
  %1549 = add i64 %1548, -8
  %1550 = inttoptr i64 %1549 to i64*
  store i64 %1547, i64* %1550, align 8
  store i64 %1549, i64* %6, align 8
  store i64 %1546, i64* %3, align 8
  %call2_40149c = tail call %struct.Memory* @sub_404840._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1546, %struct.Memory* %call2_40146e)
  %1551 = load i64, i64* %RBP.i, align 8
  %1552 = add i64 %1551, -48
  %1553 = load i64, i64* %3, align 8
  %1554 = add i64 %1553, 5
  store i64 %1554, i64* %3, align 8
  %1555 = inttoptr i64 %1552 to i8*
  %1556 = load i8, i8* %1555, align 1
  %1557 = zext i8 %1556 to i64
  store i64 %1557, i64* %477, align 8
  %1558 = add i64 %1551, -47
  %1559 = add i64 %1553, 10
  store i64 %1559, i64* %3, align 8
  %1560 = inttoptr i64 %1558 to i8*
  %1561 = load i8, i8* %1560, align 1
  %1562 = zext i8 %1561 to i64
  store i64 %1562, i64* %250, align 8
  %1563 = add i64 %1551, -46
  %1564 = add i64 %1553, 14
  store i64 %1564, i64* %3, align 8
  %1565 = inttoptr i64 %1563 to i8*
  %1566 = load i8, i8* %1565, align 1
  %1567 = zext i8 %1566 to i64
  store i64 %1567, i64* %RCX.i4028, align 8
  %1568 = add i64 %1551, -45
  %1569 = add i64 %1553, 18
  store i64 %1569, i64* %3, align 8
  %1570 = inttoptr i64 %1568 to i8*
  %1571 = load i8, i8* %1570, align 1
  %1572 = zext i8 %1571 to i64
  store i64 %1572, i64* %RDX.i4024, align 8
  %1573 = load i64, i64* %6, align 8
  store i64 %1573, i64* %RDI.i4032.pre-phi, align 8
  %1574 = add i64 %1553, 28
  store i64 %1574, i64* %3, align 8
  %1575 = inttoptr i64 %1573 to i64*
  store i64 4276552, i64* %1575, align 8
  %1576 = load i64, i64* %RBP.i, align 8
  %1577 = add i64 %1576, -256
  %1578 = load i64, i64* %3, align 8
  %1579 = add i64 %1578, 7
  store i64 %1579, i64* %3, align 8
  %1580 = inttoptr i64 %1577 to i64*
  %1581 = load i64, i64* %1580, align 8
  store i64 %1581, i64* %RDI.i4032.pre-phi, align 8
  %1582 = add i64 %1576, -248
  %1583 = add i64 %1578, 13
  store i64 %1583, i64* %3, align 8
  %1584 = inttoptr i64 %1582 to i32*
  %1585 = load i32, i32* %1584, align 4
  %1586 = zext i32 %1585 to i64
  store i64 %1586, i64* %RSI.i3037, align 8
  %1587 = add i64 %1578, 13459
  %1588 = add i64 %1578, 18
  %1589 = load i64, i64* %6, align 8
  %1590 = add i64 %1589, -8
  %1591 = inttoptr i64 %1590 to i64*
  store i64 %1588, i64* %1591, align 8
  store i64 %1590, i64* %6, align 8
  store i64 %1587, i64* %3, align 8
  %call2_4014ca = tail call %struct.Memory* @sub_404950._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1587, %struct.Memory* %call2_40149c)
  %1592 = load i64, i64* %RBP.i, align 8
  %1593 = add i64 %1592, -48
  %1594 = load i64, i64* %3, align 8
  %1595 = add i64 %1594, 5
  store i64 %1595, i64* %3, align 8
  %1596 = inttoptr i64 %1593 to i8*
  %1597 = load i8, i8* %1596, align 1
  %1598 = zext i8 %1597 to i64
  store i64 %1598, i64* %477, align 8
  %1599 = add i64 %1592, -47
  %1600 = add i64 %1594, 10
  store i64 %1600, i64* %3, align 8
  %1601 = inttoptr i64 %1599 to i8*
  %1602 = load i8, i8* %1601, align 1
  %1603 = zext i8 %1602 to i64
  store i64 %1603, i64* %250, align 8
  %1604 = add i64 %1592, -46
  %1605 = add i64 %1594, 14
  store i64 %1605, i64* %3, align 8
  %1606 = inttoptr i64 %1604 to i8*
  %1607 = load i8, i8* %1606, align 1
  %1608 = zext i8 %1607 to i64
  store i64 %1608, i64* %RCX.i4028, align 8
  %1609 = add i64 %1592, -45
  %1610 = add i64 %1594, 18
  store i64 %1610, i64* %3, align 8
  %1611 = inttoptr i64 %1609 to i8*
  %1612 = load i8, i8* %1611, align 1
  %1613 = zext i8 %1612 to i64
  store i64 %1613, i64* %RDX.i4024, align 8
  %1614 = load i64, i64* %6, align 8
  store i64 %1614, i64* %RDI.i4032.pre-phi, align 8
  %1615 = add i64 %1594, 28
  store i64 %1615, i64* %3, align 8
  %1616 = inttoptr i64 %1614 to i64*
  store i64 4276587, i64* %1616, align 8
  %1617 = load i64, i64* %RBP.i, align 8
  %1618 = add i64 %1617, -256
  %1619 = load i64, i64* %3, align 8
  %1620 = add i64 %1619, 7
  store i64 %1620, i64* %3, align 8
  %1621 = inttoptr i64 %1618 to i64*
  %1622 = load i64, i64* %1621, align 8
  store i64 %1622, i64* %RDI.i4032.pre-phi, align 8
  %1623 = add i64 %1617, -248
  %1624 = add i64 %1619, 13
  store i64 %1624, i64* %3, align 8
  %1625 = inttoptr i64 %1623 to i32*
  %1626 = load i32, i32* %1625, align 4
  %1627 = zext i32 %1626 to i64
  store i64 %1627, i64* %RSI.i3037, align 8
  %1628 = add i64 %1619, 13685
  %1629 = add i64 %1619, 18
  %1630 = load i64, i64* %6, align 8
  %1631 = add i64 %1630, -8
  %1632 = inttoptr i64 %1631 to i64*
  store i64 %1629, i64* %1632, align 8
  store i64 %1631, i64* %6, align 8
  store i64 %1628, i64* %3, align 8
  %call2_4014f8 = tail call %struct.Memory* @sub_404a60._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1628, %struct.Memory* %call2_4014ca)
  %1633 = load i64, i64* %RBP.i, align 8
  %1634 = add i64 %1633, -45
  %1635 = load i64, i64* %3, align 8
  %1636 = add i64 %1635, 4
  store i64 %1636, i64* %3, align 8
  %1637 = inttoptr i64 %1634 to i8*
  %1638 = load i8, i8* %1637, align 1
  %1639 = zext i8 %1638 to i64
  store i64 %1639, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41418b_type* @G__0x41418b to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41418b_type* @G__0x41418b to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1640 = add i64 %1633, -256
  %1641 = add i64 %1635, 18
  store i64 %1641, i64* %3, align 8
  %1642 = inttoptr i64 %1640 to i64*
  %1643 = load i64, i64* %1642, align 8
  store i64 %1643, i64* %RDI.i4032.pre-phi, align 8
  %1644 = add i64 %1633, -248
  %1645 = add i64 %1635, 24
  store i64 %1645, i64* %3, align 8
  %1646 = inttoptr i64 %1644 to i32*
  %1647 = load i32, i32* %1646, align 4
  %1648 = zext i32 %1647 to i64
  store i64 %1648, i64* %RSI.i3037, align 8
  %1649 = add i64 %1635, 13939
  %1650 = add i64 %1635, 29
  %1651 = load i64, i64* %6, align 8
  %1652 = add i64 %1651, -8
  %1653 = inttoptr i64 %1652 to i64*
  store i64 %1650, i64* %1653, align 8
  store i64 %1652, i64* %6, align 8
  store i64 %1649, i64* %3, align 8
  %call2_401515 = tail call %struct.Memory* @sub_404b70._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1649, %struct.Memory* %call2_4014f8)
  %1654 = load i64, i64* %RBP.i, align 8
  %1655 = add i64 %1654, -48
  %1656 = load i64, i64* %3, align 8
  %1657 = add i64 %1656, 5
  store i64 %1657, i64* %3, align 8
  %1658 = inttoptr i64 %1655 to i8*
  %1659 = load i8, i8* %1658, align 1
  %1660 = zext i8 %1659 to i64
  store i64 %1660, i64* %477, align 8
  %1661 = add i64 %1654, -47
  %1662 = add i64 %1656, 10
  store i64 %1662, i64* %3, align 8
  %1663 = inttoptr i64 %1661 to i8*
  %1664 = load i8, i8* %1663, align 1
  %1665 = zext i8 %1664 to i64
  store i64 %1665, i64* %250, align 8
  %1666 = add i64 %1654, -46
  %1667 = add i64 %1656, 14
  store i64 %1667, i64* %3, align 8
  %1668 = inttoptr i64 %1666 to i8*
  %1669 = load i8, i8* %1668, align 1
  %1670 = zext i8 %1669 to i64
  store i64 %1670, i64* %RCX.i4028, align 8
  %1671 = add i64 %1654, -45
  %1672 = add i64 %1656, 18
  store i64 %1672, i64* %3, align 8
  %1673 = inttoptr i64 %1671 to i8*
  %1674 = load i8, i8* %1673, align 1
  %1675 = zext i8 %1674 to i64
  store i64 %1675, i64* %RDX.i4024, align 8
  %1676 = load i64, i64* %6, align 8
  store i64 %1676, i64* %RDI.i4032.pre-phi, align 8
  %1677 = add i64 %1656, 28
  store i64 %1677, i64* %3, align 8
  %1678 = inttoptr i64 %1676 to i64*
  store i64 4276640, i64* %1678, align 8
  %1679 = load i64, i64* %RBP.i, align 8
  %1680 = add i64 %1679, -256
  %1681 = load i64, i64* %3, align 8
  %1682 = add i64 %1681, 7
  store i64 %1682, i64* %3, align 8
  %1683 = inttoptr i64 %1680 to i64*
  %1684 = load i64, i64* %1683, align 8
  store i64 %1684, i64* %RDI.i4032.pre-phi, align 8
  %1685 = add i64 %1679, -248
  %1686 = add i64 %1681, 13
  store i64 %1686, i64* %3, align 8
  %1687 = inttoptr i64 %1685 to i32*
  %1688 = load i32, i32* %1687, align 4
  %1689 = zext i32 %1688 to i64
  store i64 %1689, i64* %RSI.i3037, align 8
  %1690 = add i64 %1681, 14058
  %1691 = add i64 %1681, 18
  %1692 = load i64, i64* %6, align 8
  %1693 = add i64 %1692, -8
  %1694 = inttoptr i64 %1693 to i64*
  store i64 %1691, i64* %1694, align 8
  store i64 %1693, i64* %6, align 8
  store i64 %1690, i64* %3, align 8
  %call2_401543 = tail call %struct.Memory* @sub_404c20._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1690, %struct.Memory* %call2_401515)
  %1695 = load i64, i64* %RBP.i, align 8
  %1696 = add i64 %1695, -45
  %1697 = load i64, i64* %3, align 8
  %1698 = add i64 %1697, 4
  store i64 %1698, i64* %3, align 8
  %1699 = inttoptr i64 %1696 to i8*
  %1700 = load i8, i8* %1699, align 1
  %1701 = zext i8 %1700 to i64
  store i64 %1701, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4141be_type* @G__0x4141be to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4141be_type* @G__0x4141be to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1702 = add i64 %1695, -256
  %1703 = add i64 %1697, 18
  store i64 %1703, i64* %3, align 8
  %1704 = inttoptr i64 %1702 to i64*
  %1705 = load i64, i64* %1704, align 8
  store i64 %1705, i64* %RDI.i4032.pre-phi, align 8
  %1706 = add i64 %1695, -248
  %1707 = add i64 %1697, 24
  store i64 %1707, i64* %3, align 8
  %1708 = inttoptr i64 %1706 to i32*
  %1709 = load i32, i32* %1708, align 4
  %1710 = zext i32 %1709 to i64
  store i64 %1710, i64* %RSI.i3037, align 8
  %1711 = add i64 %1697, 14312
  %1712 = add i64 %1697, 29
  %1713 = load i64, i64* %6, align 8
  %1714 = add i64 %1713, -8
  %1715 = inttoptr i64 %1714 to i64*
  store i64 %1712, i64* %1715, align 8
  store i64 %1714, i64* %6, align 8
  store i64 %1711, i64* %3, align 8
  %call2_401560 = tail call %struct.Memory* @sub_404d30._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1711, %struct.Memory* %call2_401543)
  %1716 = load i64, i64* %RBP.i, align 8
  %1717 = add i64 %1716, -48
  %1718 = load i64, i64* %3, align 8
  %1719 = add i64 %1718, 5
  store i64 %1719, i64* %3, align 8
  %1720 = inttoptr i64 %1717 to i8*
  %1721 = load i8, i8* %1720, align 1
  %1722 = zext i8 %1721 to i64
  store i64 %1722, i64* %477, align 8
  %1723 = add i64 %1716, -47
  %1724 = add i64 %1718, 10
  store i64 %1724, i64* %3, align 8
  %1725 = inttoptr i64 %1723 to i8*
  %1726 = load i8, i8* %1725, align 1
  %1727 = zext i8 %1726 to i64
  store i64 %1727, i64* %250, align 8
  %1728 = add i64 %1716, -46
  %1729 = add i64 %1718, 14
  store i64 %1729, i64* %3, align 8
  %1730 = inttoptr i64 %1728 to i8*
  %1731 = load i8, i8* %1730, align 1
  %1732 = zext i8 %1731 to i64
  store i64 %1732, i64* %RCX.i4028, align 8
  %1733 = add i64 %1716, -45
  %1734 = add i64 %1718, 18
  store i64 %1734, i64* %3, align 8
  %1735 = inttoptr i64 %1733 to i8*
  %1736 = load i8, i8* %1735, align 1
  %1737 = zext i8 %1736 to i64
  store i64 %1737, i64* %RDX.i4024, align 8
  %1738 = load i64, i64* %6, align 8
  store i64 %1738, i64* %RDI.i4032.pre-phi, align 8
  %1739 = add i64 %1718, 28
  store i64 %1739, i64* %3, align 8
  %1740 = inttoptr i64 %1738 to i64*
  store i64 4276690, i64* %1740, align 8
  %1741 = load i64, i64* %RBP.i, align 8
  %1742 = add i64 %1741, -256
  %1743 = load i64, i64* %3, align 8
  %1744 = add i64 %1743, 7
  store i64 %1744, i64* %3, align 8
  %1745 = inttoptr i64 %1742 to i64*
  %1746 = load i64, i64* %1745, align 8
  store i64 %1746, i64* %RDI.i4032.pre-phi, align 8
  %1747 = add i64 %1741, -248
  %1748 = add i64 %1743, 13
  store i64 %1748, i64* %3, align 8
  %1749 = inttoptr i64 %1747 to i32*
  %1750 = load i32, i32* %1749, align 4
  %1751 = zext i32 %1750 to i64
  store i64 %1751, i64* %RSI.i3037, align 8
  %1752 = add i64 %1743, 14431
  %1753 = add i64 %1743, 18
  %1754 = load i64, i64* %6, align 8
  %1755 = add i64 %1754, -8
  %1756 = inttoptr i64 %1755 to i64*
  store i64 %1753, i64* %1756, align 8
  store i64 %1755, i64* %6, align 8
  store i64 %1752, i64* %3, align 8
  %call2_40158e = tail call %struct.Memory* @sub_404de0._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1752, %struct.Memory* %call2_401560)
  %1757 = load i64, i64* %RBP.i, align 8
  %1758 = add i64 %1757, -45
  %1759 = load i64, i64* %3, align 8
  %1760 = add i64 %1759, 4
  store i64 %1760, i64* %3, align 8
  %1761 = inttoptr i64 %1758 to i8*
  %1762 = load i8, i8* %1761, align 1
  %1763 = zext i8 %1762 to i64
  store i64 %1763, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4141ef_type* @G__0x4141ef to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4141ef_type* @G__0x4141ef to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %1764 = add i64 %1757, -256
  %1765 = add i64 %1759, 18
  store i64 %1765, i64* %3, align 8
  %1766 = inttoptr i64 %1764 to i64*
  %1767 = load i64, i64* %1766, align 8
  store i64 %1767, i64* %RDI.i4032.pre-phi, align 8
  %1768 = add i64 %1757, -248
  %1769 = add i64 %1759, 24
  store i64 %1769, i64* %3, align 8
  %1770 = inttoptr i64 %1768 to i32*
  %1771 = load i32, i32* %1770, align 4
  %1772 = zext i32 %1771 to i64
  store i64 %1772, i64* %RSI.i3037, align 8
  %1773 = add i64 %1759, 14685
  %1774 = add i64 %1759, 29
  %1775 = load i64, i64* %6, align 8
  %1776 = add i64 %1775, -8
  %1777 = inttoptr i64 %1776 to i64*
  store i64 %1774, i64* %1777, align 8
  store i64 %1776, i64* %6, align 8
  store i64 %1773, i64* %3, align 8
  %call2_4015ab = tail call %struct.Memory* @sub_404ef0._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %1773, %struct.Memory* %call2_40158e)
  %1778 = load i64, i64* %RBP.i, align 8
  %1779 = add i64 %1778, -48
  %1780 = load i64, i64* %3, align 8
  %1781 = add i64 %1780, 5
  store i64 %1781, i64* %3, align 8
  %1782 = inttoptr i64 %1779 to i8*
  %1783 = load i8, i8* %1782, align 1
  %1784 = zext i8 %1783 to i64
  store i64 %1784, i64* %477, align 8
  %1785 = add i64 %1778, -47
  %1786 = add i64 %1780, 10
  store i64 %1786, i64* %3, align 8
  %1787 = inttoptr i64 %1785 to i8*
  %1788 = load i8, i8* %1787, align 1
  %1789 = zext i8 %1788 to i64
  store i64 %1789, i64* %250, align 8
  %1790 = add i64 %1778, -46
  %1791 = add i64 %1780, 14
  store i64 %1791, i64* %3, align 8
  %1792 = inttoptr i64 %1790 to i8*
  %1793 = load i8, i8* %1792, align 1
  %1794 = zext i8 %1793 to i64
  store i64 %1794, i64* %RCX.i4028, align 8
  %1795 = add i64 %1778, -45
  %1796 = add i64 %1780, 18
  store i64 %1796, i64* %3, align 8
  %1797 = inttoptr i64 %1795 to i8*
  %1798 = load i8, i8* %1797, align 1
  %1799 = zext i8 %1798 to i64
  store i64 %1799, i64* %RDX.i4024, align 8
  %1800 = load i64, i64* %6, align 8
  store i64 %1800, i64* %RDI.i4032.pre-phi, align 8
  %1801 = add i64 %1780, 28
  store i64 %1801, i64* %3, align 8
  %1802 = inttoptr i64 %1800 to i64*
  store i64 4276740, i64* %1802, align 8
  %1803 = load i64, i64* %RBP.i, align 8
  %1804 = add i64 %1803, -256
  %1805 = load i64, i64* %3, align 8
  %1806 = add i64 %1805, 7
  store i64 %1806, i64* %3, align 8
  %1807 = inttoptr i64 %1804 to i64*
  %1808 = load i64, i64* %1807, align 8
  store i64 %1808, i64* %RDI.i4032.pre-phi, align 8
  %1809 = add i64 %1803, -248
  %1810 = add i64 %1805, 13
  store i64 %1810, i64* %3, align 8
  %1811 = inttoptr i64 %1809 to i32*
  %1812 = load i32, i32* %1811, align 4
  %1813 = zext i32 %1812 to i64
  store i64 %1813, i64* %RSI.i3037, align 8
  %1814 = add i64 %1805, 14804
  %1815 = add i64 %1805, 18
  %1816 = load i64, i64* %6, align 8
  %1817 = add i64 %1816, -8
  %1818 = inttoptr i64 %1817 to i64*
  store i64 %1815, i64* %1818, align 8
  store i64 %1817, i64* %6, align 8
  store i64 %1814, i64* %3, align 8
  %call2_4015d9 = tail call %struct.Memory* @sub_404fa0._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %1814, %struct.Memory* %call2_4015ab)
  %1819 = load i64, i64* %3, align 8
  %1820 = add i64 %1819, 2198186
  %1821 = add i64 %1819, 8
  store i64 %1821, i64* %3, align 8
  %1822 = inttoptr i64 %1820 to double*
  %1823 = load double, double* %1822, align 8
  %1824 = tail call double @llvm.trunc.f64(double %1823)
  %1825 = tail call double @llvm.fabs.f64(double %1824)
  %1826 = fcmp ogt double %1825, 0x41DFFFFFFFC00000
  %1827 = fptosi double %1824 to i32
  %1828 = zext i32 %1827 to i64
  %1829 = select i1 %1826, i64 2147483648, i64 %1828
  store i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295), i64* %RCX.i4028, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  %R14W.i3107 = bitcast %union.anon* %11 to i16*
  %1830 = trunc i64 %1829 to i16
  store i16 %1830, i16* %R14W.i3107, align 2
  %sext43 = shl i64 %1829, 48
  %1831 = ashr exact i64 %sext43, 48
  %1832 = and i64 %1831, 4294967295
  store i64 %1832, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %1833 = load i64, i64* %RBP.i, align 8
  %1834 = add i64 %1833, -280
  %1835 = add i64 %1819, 37
  store i64 %1835, i64* %3, align 8
  %1836 = inttoptr i64 %1834 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295) to i32) to i64), i64* %1836, align 8
  %1837 = load i64, i64* %3, align 8
  %1838 = add i64 %1837, 15021
  %1839 = add i64 %1837, 5
  %1840 = load i64, i64* %6, align 8
  %1841 = add i64 %1840, -8
  %1842 = inttoptr i64 %1841 to i64*
  store i64 %1839, i64* %1842, align 8
  store i64 %1841, i64* %6, align 8
  store i64 %1838, i64* %3, align 8
  %call2_401603 = tail call %struct.Memory* @sub_4050b0._Z4fillIPssEvT_S1_T0_(%struct.State* nonnull %0, i64 %1838, %struct.Memory* %call2_4015d9)
  %1843 = load i64, i64* %RBP.i, align 8
  %1844 = add i64 %1843, -40
  %1845 = load i64, i64* %3, align 8
  %1846 = add i64 %1845, 5
  store i64 %1846, i64* %3, align 8
  %1847 = inttoptr i64 %1844 to double*
  %1848 = load double, double* %1847, align 8
  %1849 = tail call double @llvm.trunc.f64(double %1848)
  %1850 = tail call double @llvm.fabs.f64(double %1849)
  %1851 = fcmp ogt double %1850, 0x41DFFFFFFFC00000
  %1852 = fptosi double %1849 to i32
  %1853 = zext i32 %1852 to i64
  %1854 = select i1 %1851, i64 2147483648, i64 %1853
  store i64 %1854, i64* %RAX.i4026, align 8
  %1855 = trunc i64 %1854 to i16
  store i16 %1855, i16* %R14W.i3107, align 2
  %1856 = add i64 %1843, -50
  %1857 = add i64 %1845, 14
  store i64 %1857, i64* %3, align 8
  %1858 = inttoptr i64 %1856 to i16*
  store i16 %1855, i16* %1858, align 2
  %1859 = load i64, i64* %RBP.i, align 8
  %1860 = add i64 %1859, -50
  %1861 = load i64, i64* %3, align 8
  %1862 = add i64 %1861, 4
  store i64 %1862, i64* %3, align 8
  %1863 = inttoptr i64 %1860 to i16*
  %1864 = load i16, i16* %1863, align 2
  %1865 = zext i16 %1864 to i32
  %1866 = zext i16 %1864 to i32
  %1867 = add nuw nsw i32 %1865, %1866
  %1868 = zext i32 %1867 to i64
  store i64 %1868, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %1869 = and i32 %1867, 255
  %1870 = tail call i32 @llvm.ctpop.i32(i32 %1869)
  %1871 = trunc i32 %1870 to i8
  %1872 = and i8 %1871, 1
  %1873 = xor i8 %1872, 1
  store i8 %1873, i8* %33, align 1
  %1874 = lshr i32 %1867, 4
  %1875 = trunc i32 %1874 to i8
  %1876 = and i8 %1875, 1
  store i8 %1876, i8* %39, align 1
  %1877 = icmp eq i32 %1867, 0
  %1878 = zext i1 %1877 to i8
  store i8 %1878, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %1879 = trunc i32 %1867 to i16
  store i16 %1879, i16* %R14W.i3107, align 2
  %1880 = add i64 %1859, -52
  %1881 = add i64 %1861, 15
  store i64 %1881, i64* %3, align 8
  %1882 = inttoptr i64 %1880 to i16*
  store i16 %1879, i16* %1882, align 2
  %1883 = load i64, i64* %RBP.i, align 8
  %1884 = add i64 %1883, -50
  %1885 = load i64, i64* %3, align 8
  %1886 = add i64 %1885, 4
  store i64 %1886, i64* %3, align 8
  %1887 = inttoptr i64 %1884 to i16*
  %1888 = load i16, i16* %1887, align 2
  %1889 = zext i16 %1888 to i32
  %1890 = add nuw nsw i32 %1889, 2
  %1891 = zext i32 %1890 to i64
  store i64 %1891, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %1892 = and i32 %1890, 255
  %1893 = tail call i32 @llvm.ctpop.i32(i32 %1892)
  %1894 = trunc i32 %1893 to i8
  %1895 = and i8 %1894, 1
  %1896 = xor i8 %1895, 1
  store i8 %1896, i8* %33, align 1
  %1897 = xor i32 %1890, %1889
  %1898 = lshr i32 %1897, 4
  %1899 = trunc i32 %1898 to i8
  %1900 = and i8 %1899, 1
  store i8 %1900, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %1901 = trunc i32 %1890 to i16
  store i16 %1901, i16* %R14W.i3107, align 2
  %1902 = add i64 %1883, -54
  %1903 = add i64 %1885, 16
  store i64 %1903, i64* %3, align 8
  %1904 = inttoptr i64 %1902 to i16*
  store i16 %1901, i16* %1904, align 2
  %1905 = load i64, i64* %RBP.i, align 8
  %1906 = add i64 %1905, -50
  %1907 = load i64, i64* %3, align 8
  %1908 = add i64 %1907, 4
  store i64 %1908, i64* %3, align 8
  %1909 = inttoptr i64 %1906 to i16*
  %1910 = load i16, i16* %1909, align 2
  %1911 = zext i16 %1910 to i64
  store i64 %1911, i64* %RAX.i4026, align 8
  %1912 = add i64 %1905, -52
  %1913 = add i64 %1907, 8
  store i64 %1913, i64* %3, align 8
  %1914 = inttoptr i64 %1912 to i16*
  %1915 = load i16, i16* %1914, align 2
  %1916 = sext i16 %1915 to i64
  %1917 = and i64 %1916, 4294967295
  store i64 %1917, i64* %RCX.i4028, align 8
  %1918 = add i64 %1905, -54
  %1919 = add i64 %1907, 12
  store i64 %1919, i64* %3, align 8
  %1920 = inttoptr i64 %1918 to i16*
  %1921 = load i16, i16* %1920, align 2
  %1922 = sext i16 %1921 to i64
  %1923 = and i64 %1922, 4294967295
  store i64 %1923, i64* %RDX.i4024, align 8
  %1924 = add i64 %1905, -284
  %1925 = zext i16 %1910 to i32
  %1926 = add i64 %1907, 18
  store i64 %1926, i64* %3, align 8
  %1927 = inttoptr i64 %1924 to i32*
  store i32 %1925, i32* %1927, align 4
  %1928 = load i32, i32* %ECX.i3562, align 4
  %1929 = zext i32 %1928 to i64
  %1930 = load i64, i64* %3, align 8
  store i64 %1929, i64* %RAX.i4026, align 8
  %1931 = load i64, i64* %RBP.i, align 8
  %1932 = add i64 %1931, -288
  %1933 = load i32, i32* %EDX.i4021, align 4
  %1934 = add i64 %1930, 8
  store i64 %1934, i64* %3, align 8
  %1935 = inttoptr i64 %1932 to i32*
  store i32 %1933, i32* %1935, align 4
  %1936 = load i64, i64* %3, align 8
  %1937 = load i32, i32* %EAX.i4011, align 8
  %1938 = sext i32 %1937 to i64
  %1939 = lshr i64 %1938, 32
  store i64 %1939, i64* %376, align 8
  %1940 = load i64, i64* %RBP.i, align 8
  %1941 = add i64 %1940, -288
  %1942 = add i64 %1936, 7
  store i64 %1942, i64* %3, align 8
  %1943 = inttoptr i64 %1941 to i32*
  %1944 = load i32, i32* %1943, align 4
  %1945 = zext i32 %1944 to i64
  store i64 %1945, i64* %RCX.i4028, align 8
  %1946 = add i64 %1936, 9
  store i64 %1946, i64* %3, align 8
  %1947 = zext i32 %1937 to i64
  %1948 = sext i32 %1944 to i64
  %1949 = shl nuw i64 %1939, 32
  %1950 = or i64 %1949, %1947
  %1951 = sdiv i64 %1950, %1948
  %1952 = shl i64 %1951, 32
  %1953 = ashr exact i64 %1952, 32
  %1954 = icmp eq i64 %1951, %1953
  br i1 %1954, label %1957, label %1955

; <label>:1955:                                   ; preds = %routine_divl__ecx.exit
  %1956 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1946, %struct.Memory* %call2_401603)
  %.pre13 = load i64, i64* %RBP.i, align 8
  %.pre14 = load i64, i64* %3, align 8
  %.pre15 = load i32, i32* %EAX.i4011, align 4
  br label %routine_idivl__ecx.exit3035

; <label>:1957:                                   ; preds = %routine_divl__ecx.exit
  %1958 = srem i64 %1950, %1948
  %1959 = and i64 %1951, 4294967295
  store i64 %1959, i64* %RAX.i4026, align 8
  %1960 = and i64 %1958, 4294967295
  store i64 %1960, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %1961 = trunc i64 %1951 to i32
  br label %routine_idivl__ecx.exit3035

routine_idivl__ecx.exit3035:                      ; preds = %1957, %1955
  %1962 = phi i32 [ %.pre15, %1955 ], [ %1961, %1957 ]
  %1963 = phi i64 [ %.pre14, %1955 ], [ %1946, %1957 ]
  %1964 = phi i64 [ %.pre13, %1955 ], [ %1940, %1957 ]
  %1965 = phi %struct.Memory* [ %1956, %1955 ], [ %call2_401603, %1957 ]
  %1966 = add i64 %1964, -284
  %1967 = add i64 %1963, 6
  store i64 %1967, i64* %3, align 8
  %1968 = inttoptr i64 %1966 to i32*
  %1969 = load i32, i32* %1968, align 4
  %1970 = add i32 %1962, %1969
  %1971 = zext i32 %1970 to i64
  store i64 %1971, i64* %RDX.i4024, align 8
  %1972 = icmp ult i32 %1970, %1969
  %1973 = icmp ult i32 %1970, %1962
  %1974 = or i1 %1972, %1973
  %1975 = zext i1 %1974 to i8
  store i8 %1975, i8* %26, align 1
  %1976 = and i32 %1970, 255
  %1977 = tail call i32 @llvm.ctpop.i32(i32 %1976)
  %1978 = trunc i32 %1977 to i8
  %1979 = and i8 %1978, 1
  %1980 = xor i8 %1979, 1
  store i8 %1980, i8* %33, align 1
  %1981 = xor i32 %1962, %1969
  %1982 = xor i32 %1981, %1970
  %1983 = lshr i32 %1982, 4
  %1984 = trunc i32 %1983 to i8
  %1985 = and i8 %1984, 1
  store i8 %1985, i8* %39, align 1
  %1986 = icmp eq i32 %1970, 0
  %1987 = zext i1 %1986 to i8
  store i8 %1987, i8* %42, align 1
  %1988 = lshr i32 %1970, 31
  %1989 = trunc i32 %1988 to i8
  store i8 %1989, i8* %45, align 1
  %1990 = lshr i32 %1969, 31
  %1991 = lshr i32 %1962, 31
  %1992 = xor i32 %1988, %1990
  %1993 = xor i32 %1988, %1991
  %1994 = add nuw nsw i32 %1992, %1993
  %1995 = icmp eq i32 %1994, 2
  %1996 = zext i1 %1995 to i8
  store i8 %1996, i8* %51, align 1
  %1997 = trunc i32 %1970 to i16
  store i16 %1997, i16* %R14W.i3107, align 2
  %1998 = add i64 %1964, -56
  %1999 = add i64 %1963, 17
  store i64 %1999, i64* %3, align 8
  %2000 = inttoptr i64 %1998 to i16*
  store i16 %1997, i16* %2000, align 2
  %2001 = load i64, i64* %RBP.i, align 8
  %2002 = add i64 %2001, -50
  %2003 = load i64, i64* %3, align 8
  %2004 = add i64 %2003, 4
  store i64 %2004, i64* %3, align 8
  %2005 = inttoptr i64 %2002 to i16*
  %2006 = load i16, i16* %2005, align 2
  %2007 = sext i16 %2006 to i64
  %2008 = and i64 %2007, 4294967295
  store i64 %2008, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414223_type* @G__0x414223 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414223_type* @G__0x414223 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2009 = add i64 %2001, -280
  %2010 = add i64 %2003, 18
  store i64 %2010, i64* %3, align 8
  %2011 = inttoptr i64 %2009 to i64*
  %2012 = load i64, i64* %2011, align 8
  store i64 %2012, i64* %RDI.i4032.pre-phi, align 8
  %2013 = add i64 %2001, -248
  %2014 = add i64 %2003, 24
  store i64 %2014, i64* %3, align 8
  %2015 = inttoptr i64 %2013 to i32*
  %2016 = load i32, i32* %2015, align 4
  %2017 = zext i32 %2016 to i64
  store i64 %2017, i64* %RSI.i3037, align 8
  %2018 = add i64 %2003, 14983
  %2019 = add i64 %2003, 29
  %2020 = load i64, i64* %6, align 8
  %2021 = add i64 %2020, -8
  %2022 = inttoptr i64 %2021 to i64*
  store i64 %2019, i64* %2022, align 8
  store i64 %2021, i64* %6, align 8
  store i64 %2018, i64* %3, align 8
  %call2_401681 = tail call %struct.Memory* @sub_4050f0._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2018, %struct.Memory* %1965)
  %2023 = load i64, i64* %RBP.i, align 8
  %2024 = add i64 %2023, -50
  %2025 = load i64, i64* %3, align 8
  %2026 = add i64 %2025, 4
  store i64 %2026, i64* %3, align 8
  %2027 = inttoptr i64 %2024 to i16*
  %2028 = load i16, i16* %2027, align 2
  %2029 = sext i16 %2028 to i64
  %2030 = and i64 %2029, 4294967295
  store i64 %2030, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414239_type* @G__0x414239 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414239_type* @G__0x414239 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2031 = add i64 %2023, -280
  %2032 = add i64 %2025, 18
  store i64 %2032, i64* %3, align 8
  %2033 = inttoptr i64 %2031 to i64*
  %2034 = load i64, i64* %2033, align 8
  store i64 %2034, i64* %RDI.i4032.pre-phi, align 8
  %2035 = add i64 %2023, -248
  %2036 = add i64 %2025, 24
  store i64 %2036, i64* %3, align 8
  %2037 = inttoptr i64 %2035 to i32*
  %2038 = load i32, i32* %2037, align 4
  %2039 = zext i32 %2038 to i64
  store i64 %2039, i64* %RSI.i3037, align 8
  %2040 = add i64 %2025, 15146
  %2041 = add i64 %2025, 29
  %2042 = load i64, i64* %6, align 8
  %2043 = add i64 %2042, -8
  %2044 = inttoptr i64 %2043 to i64*
  store i64 %2041, i64* %2044, align 8
  store i64 %2043, i64* %6, align 8
  store i64 %2040, i64* %3, align 8
  %call2_40169e = tail call %struct.Memory* @sub_4051b0._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2040, %struct.Memory* %call2_401681)
  %2045 = load i64, i64* %RBP.i, align 8
  %2046 = add i64 %2045, -56
  %2047 = load i64, i64* %3, align 8
  %2048 = add i64 %2047, 5
  store i64 %2048, i64* %3, align 8
  %2049 = inttoptr i64 %2046 to i16*
  %2050 = load i16, i16* %2049, align 2
  %2051 = sext i16 %2050 to i64
  %2052 = and i64 %2051, 4294967295
  store i64 %2052, i64* %477, align 8
  %2053 = add i64 %2045, -54
  %2054 = add i64 %2047, 10
  store i64 %2054, i64* %3, align 8
  %2055 = inttoptr i64 %2053 to i16*
  %2056 = load i16, i16* %2055, align 2
  %2057 = sext i16 %2056 to i64
  %2058 = and i64 %2057, 4294967295
  store i64 %2058, i64* %250, align 8
  %2059 = add i64 %2045, -52
  %2060 = add i64 %2047, 14
  store i64 %2060, i64* %3, align 8
  %2061 = inttoptr i64 %2059 to i16*
  %2062 = load i16, i16* %2061, align 2
  %2063 = sext i16 %2062 to i64
  %2064 = and i64 %2063, 4294967295
  store i64 %2064, i64* %RCX.i4028, align 8
  %2065 = add i64 %2045, -50
  %2066 = add i64 %2047, 18
  store i64 %2066, i64* %3, align 8
  %2067 = inttoptr i64 %2065 to i16*
  %2068 = load i16, i16* %2067, align 2
  %2069 = sext i16 %2068 to i64
  %2070 = and i64 %2069, 4294967295
  store i64 %2070, i64* %RDX.i4024, align 8
  %2071 = load i64, i64* %6, align 8
  store i64 %2071, i64* %RDI.i4032.pre-phi, align 8
  %2072 = add i64 %2047, 28
  store i64 %2072, i64* %3, align 8
  %2073 = inttoptr i64 %2071 to i64*
  store i64 4276823, i64* %2073, align 8
  %2074 = load i64, i64* %RBP.i, align 8
  %2075 = add i64 %2074, -280
  %2076 = load i64, i64* %3, align 8
  %2077 = add i64 %2076, 7
  store i64 %2077, i64* %3, align 8
  %2078 = inttoptr i64 %2075 to i64*
  %2079 = load i64, i64* %2078, align 8
  store i64 %2079, i64* %RDI.i4032.pre-phi, align 8
  %2080 = add i64 %2074, -248
  %2081 = add i64 %2076, 13
  store i64 %2081, i64* %3, align 8
  %2082 = inttoptr i64 %2080 to i32*
  %2083 = load i32, i32* %2082, align 4
  %2084 = zext i32 %2083 to i64
  store i64 %2084, i64* %RSI.i3037, align 8
  %2085 = add i64 %2076, 15281
  %2086 = add i64 %2076, 18
  %2087 = load i64, i64* %6, align 8
  %2088 = add i64 %2087, -8
  %2089 = inttoptr i64 %2088 to i64*
  store i64 %2086, i64* %2089, align 8
  store i64 %2088, i64* %6, align 8
  store i64 %2085, i64* %3, align 8
  %call2_4016cc = tail call %struct.Memory* @sub_405270._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2085, %struct.Memory* %call2_40169e)
  %2090 = load i64, i64* %RBP.i, align 8
  %2091 = add i64 %2090, -50
  %2092 = load i64, i64* %3, align 8
  %2093 = add i64 %2092, 4
  store i64 %2093, i64* %3, align 8
  %2094 = inttoptr i64 %2091 to i16*
  %2095 = load i16, i16* %2094, align 2
  %2096 = sext i16 %2095 to i64
  %2097 = and i64 %2096, 4294967295
  store i64 %2097, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414277_type* @G__0x414277 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414277_type* @G__0x414277 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2098 = add i64 %2090, -280
  %2099 = add i64 %2092, 18
  store i64 %2099, i64* %3, align 8
  %2100 = inttoptr i64 %2098 to i64*
  %2101 = load i64, i64* %2100, align 8
  store i64 %2101, i64* %RDI.i4032.pre-phi, align 8
  %2102 = add i64 %2090, -248
  %2103 = add i64 %2092, 24
  store i64 %2103, i64* %3, align 8
  %2104 = inttoptr i64 %2102 to i32*
  %2105 = load i32, i32* %2104, align 4
  %2106 = zext i32 %2105 to i64
  store i64 %2106, i64* %RSI.i3037, align 8
  %2107 = add i64 %2092, 15567
  %2108 = add i64 %2092, 29
  %2109 = load i64, i64* %6, align 8
  %2110 = add i64 %2109, -8
  %2111 = inttoptr i64 %2110 to i64*
  store i64 %2108, i64* %2111, align 8
  store i64 %2110, i64* %6, align 8
  store i64 %2107, i64* %3, align 8
  %call2_4016e9 = tail call %struct.Memory* @sub_4053a0._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2107, %struct.Memory* %call2_4016cc)
  %2112 = load i64, i64* %RBP.i, align 8
  %2113 = add i64 %2112, -56
  %2114 = load i64, i64* %3, align 8
  %2115 = add i64 %2114, 5
  store i64 %2115, i64* %3, align 8
  %2116 = inttoptr i64 %2113 to i16*
  %2117 = load i16, i16* %2116, align 2
  %2118 = sext i16 %2117 to i64
  %2119 = and i64 %2118, 4294967295
  store i64 %2119, i64* %477, align 8
  %2120 = add i64 %2112, -54
  %2121 = add i64 %2114, 10
  store i64 %2121, i64* %3, align 8
  %2122 = inttoptr i64 %2120 to i16*
  %2123 = load i16, i16* %2122, align 2
  %2124 = sext i16 %2123 to i64
  %2125 = and i64 %2124, 4294967295
  store i64 %2125, i64* %250, align 8
  %2126 = add i64 %2112, -52
  %2127 = add i64 %2114, 14
  store i64 %2127, i64* %3, align 8
  %2128 = inttoptr i64 %2126 to i16*
  %2129 = load i16, i16* %2128, align 2
  %2130 = sext i16 %2129 to i64
  %2131 = and i64 %2130, 4294967295
  store i64 %2131, i64* %RCX.i4028, align 8
  %2132 = add i64 %2112, -50
  %2133 = add i64 %2114, 18
  store i64 %2133, i64* %3, align 8
  %2134 = inttoptr i64 %2132 to i16*
  %2135 = load i16, i16* %2134, align 2
  %2136 = sext i16 %2135 to i64
  %2137 = and i64 %2136, 4294967295
  store i64 %2137, i64* %RDX.i4024, align 8
  %2138 = load i64, i64* %6, align 8
  store i64 %2138, i64* %RDI.i4032.pre-phi, align 8
  %2139 = add i64 %2114, 28
  store i64 %2139, i64* %3, align 8
  %2140 = inttoptr i64 %2138 to i64*
  store i64 4276882, i64* %2140, align 8
  %2141 = load i64, i64* %RBP.i, align 8
  %2142 = add i64 %2141, -280
  %2143 = load i64, i64* %3, align 8
  %2144 = add i64 %2143, 7
  store i64 %2144, i64* %3, align 8
  %2145 = inttoptr i64 %2142 to i64*
  %2146 = load i64, i64* %2145, align 8
  store i64 %2146, i64* %RDI.i4032.pre-phi, align 8
  %2147 = add i64 %2141, -248
  %2148 = add i64 %2143, 13
  store i64 %2148, i64* %3, align 8
  %2149 = inttoptr i64 %2147 to i32*
  %2150 = load i32, i32* %2149, align 4
  %2151 = zext i32 %2150 to i64
  store i64 %2151, i64* %RSI.i3037, align 8
  %2152 = add i64 %2143, 15702
  %2153 = add i64 %2143, 18
  %2154 = load i64, i64* %6, align 8
  %2155 = add i64 %2154, -8
  %2156 = inttoptr i64 %2155 to i64*
  store i64 %2153, i64* %2156, align 8
  store i64 %2155, i64* %6, align 8
  store i64 %2152, i64* %3, align 8
  %call2_401717 = tail call %struct.Memory* @sub_405460._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2152, %struct.Memory* %call2_4016e9)
  %2157 = load i64, i64* %RBP.i, align 8
  %2158 = add i64 %2157, -50
  %2159 = load i64, i64* %3, align 8
  %2160 = add i64 %2159, 4
  store i64 %2160, i64* %3, align 8
  %2161 = inttoptr i64 %2158 to i16*
  %2162 = load i16, i16* %2161, align 2
  %2163 = sext i16 %2162 to i64
  %2164 = and i64 %2163, 4294967295
  store i64 %2164, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4142b7_type* @G__0x4142b7 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4142b7_type* @G__0x4142b7 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2165 = add i64 %2157, -280
  %2166 = add i64 %2159, 18
  store i64 %2166, i64* %3, align 8
  %2167 = inttoptr i64 %2165 to i64*
  %2168 = load i64, i64* %2167, align 8
  store i64 %2168, i64* %RDI.i4032.pre-phi, align 8
  %2169 = add i64 %2157, -248
  %2170 = add i64 %2159, 24
  store i64 %2170, i64* %3, align 8
  %2171 = inttoptr i64 %2169 to i32*
  %2172 = load i32, i32* %2171, align 4
  %2173 = zext i32 %2172 to i64
  store i64 %2173, i64* %RSI.i3037, align 8
  %2174 = add i64 %2159, 15988
  %2175 = add i64 %2159, 29
  %2176 = load i64, i64* %6, align 8
  %2177 = add i64 %2176, -8
  %2178 = inttoptr i64 %2177 to i64*
  store i64 %2175, i64* %2178, align 8
  store i64 %2177, i64* %6, align 8
  store i64 %2174, i64* %3, align 8
  %call2_401734 = tail call %struct.Memory* @sub_405590._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2174, %struct.Memory* %call2_401717)
  %2179 = load i64, i64* %RBP.i, align 8
  %2180 = add i64 %2179, -56
  %2181 = load i64, i64* %3, align 8
  %2182 = add i64 %2181, 5
  store i64 %2182, i64* %3, align 8
  %2183 = inttoptr i64 %2180 to i16*
  %2184 = load i16, i16* %2183, align 2
  %2185 = sext i16 %2184 to i64
  %2186 = and i64 %2185, 4294967295
  store i64 %2186, i64* %477, align 8
  %2187 = add i64 %2179, -54
  %2188 = add i64 %2181, 10
  store i64 %2188, i64* %3, align 8
  %2189 = inttoptr i64 %2187 to i16*
  %2190 = load i16, i16* %2189, align 2
  %2191 = sext i16 %2190 to i64
  %2192 = and i64 %2191, 4294967295
  store i64 %2192, i64* %250, align 8
  %2193 = add i64 %2179, -52
  %2194 = add i64 %2181, 14
  store i64 %2194, i64* %3, align 8
  %2195 = inttoptr i64 %2193 to i16*
  %2196 = load i16, i16* %2195, align 2
  %2197 = sext i16 %2196 to i64
  %2198 = and i64 %2197, 4294967295
  store i64 %2198, i64* %RCX.i4028, align 8
  %2199 = add i64 %2179, -50
  %2200 = add i64 %2181, 18
  store i64 %2200, i64* %3, align 8
  %2201 = inttoptr i64 %2199 to i16*
  %2202 = load i16, i16* %2201, align 2
  %2203 = sext i16 %2202 to i64
  %2204 = and i64 %2203, 4294967295
  store i64 %2204, i64* %RDX.i4024, align 8
  %2205 = load i64, i64* %6, align 8
  store i64 %2205, i64* %RDI.i4032.pre-phi, align 8
  %2206 = add i64 %2181, 28
  store i64 %2206, i64* %3, align 8
  %2207 = inttoptr i64 %2205 to i64*
  store i64 4276946, i64* %2207, align 8
  %2208 = load i64, i64* %RBP.i, align 8
  %2209 = add i64 %2208, -280
  %2210 = load i64, i64* %3, align 8
  %2211 = add i64 %2210, 7
  store i64 %2211, i64* %3, align 8
  %2212 = inttoptr i64 %2209 to i64*
  %2213 = load i64, i64* %2212, align 8
  store i64 %2213, i64* %RDI.i4032.pre-phi, align 8
  %2214 = add i64 %2208, -248
  %2215 = add i64 %2210, 13
  store i64 %2215, i64* %3, align 8
  %2216 = inttoptr i64 %2214 to i32*
  %2217 = load i32, i32* %2216, align 4
  %2218 = zext i32 %2217 to i64
  store i64 %2218, i64* %RSI.i3037, align 8
  %2219 = add i64 %2210, 16123
  %2220 = add i64 %2210, 18
  %2221 = load i64, i64* %6, align 8
  %2222 = add i64 %2221, -8
  %2223 = inttoptr i64 %2222 to i64*
  store i64 %2220, i64* %2223, align 8
  store i64 %2222, i64* %6, align 8
  store i64 %2219, i64* %3, align 8
  %call2_401762 = tail call %struct.Memory* @sub_405650._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2219, %struct.Memory* %call2_401734)
  %2224 = load i64, i64* %RBP.i, align 8
  %2225 = add i64 %2224, -56
  %2226 = load i64, i64* %3, align 8
  %2227 = add i64 %2226, 5
  store i64 %2227, i64* %3, align 8
  %2228 = inttoptr i64 %2225 to i16*
  %2229 = load i16, i16* %2228, align 2
  %2230 = sext i16 %2229 to i64
  %2231 = and i64 %2230, 4294967295
  store i64 %2231, i64* %477, align 8
  %2232 = add i64 %2224, -54
  %2233 = add i64 %2226, 10
  store i64 %2233, i64* %3, align 8
  %2234 = inttoptr i64 %2232 to i16*
  %2235 = load i16, i16* %2234, align 2
  %2236 = sext i16 %2235 to i64
  %2237 = and i64 %2236, 4294967295
  store i64 %2237, i64* %250, align 8
  %2238 = add i64 %2224, -52
  %2239 = add i64 %2226, 14
  store i64 %2239, i64* %3, align 8
  %2240 = inttoptr i64 %2238 to i16*
  %2241 = load i16, i16* %2240, align 2
  %2242 = sext i16 %2241 to i64
  %2243 = and i64 %2242, 4294967295
  store i64 %2243, i64* %RCX.i4028, align 8
  %2244 = add i64 %2224, -50
  %2245 = add i64 %2226, 18
  store i64 %2245, i64* %3, align 8
  %2246 = inttoptr i64 %2244 to i16*
  %2247 = load i16, i16* %2246, align 2
  %2248 = sext i16 %2247 to i64
  %2249 = and i64 %2248, 4294967295
  store i64 %2249, i64* %RDX.i4024, align 8
  %2250 = load i64, i64* %6, align 8
  store i64 %2250, i64* %RDI.i4032.pre-phi, align 8
  %2251 = add i64 %2226, 28
  store i64 %2251, i64* %3, align 8
  %2252 = inttoptr i64 %2250 to i64*
  store i64 4276984, i64* %2252, align 8
  %2253 = load i64, i64* %RBP.i, align 8
  %2254 = add i64 %2253, -280
  %2255 = load i64, i64* %3, align 8
  %2256 = add i64 %2255, 7
  store i64 %2256, i64* %3, align 8
  %2257 = inttoptr i64 %2254 to i64*
  %2258 = load i64, i64* %2257, align 8
  store i64 %2258, i64* %RDI.i4032.pre-phi, align 8
  %2259 = add i64 %2253, -248
  %2260 = add i64 %2255, 13
  store i64 %2260, i64* %3, align 8
  %2261 = inttoptr i64 %2259 to i32*
  %2262 = load i32, i32* %2261, align 4
  %2263 = zext i32 %2262 to i64
  store i64 %2263, i64* %RSI.i3037, align 8
  %2264 = add i64 %2255, 16381
  %2265 = add i64 %2255, 18
  %2266 = load i64, i64* %6, align 8
  %2267 = add i64 %2266, -8
  %2268 = inttoptr i64 %2267 to i64*
  store i64 %2265, i64* %2268, align 8
  store i64 %2267, i64* %6, align 8
  store i64 %2264, i64* %3, align 8
  %call2_401790 = tail call %struct.Memory* @sub_405780._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2264, %struct.Memory* %call2_401762)
  %2269 = load i64, i64* %RBP.i, align 8
  %2270 = add i64 %2269, -50
  %2271 = load i64, i64* %3, align 8
  %2272 = add i64 %2271, 4
  store i64 %2272, i64* %3, align 8
  %2273 = inttoptr i64 %2270 to i16*
  %2274 = load i16, i16* %2273, align 2
  %2275 = sext i16 %2274 to i64
  %2276 = and i64 %2275, 4294967295
  store i64 %2276, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41431f_type* @G__0x41431f to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41431f_type* @G__0x41431f to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2277 = add i64 %2269, -280
  %2278 = add i64 %2271, 18
  store i64 %2278, i64* %3, align 8
  %2279 = inttoptr i64 %2277 to i64*
  %2280 = load i64, i64* %2279, align 8
  store i64 %2280, i64* %RDI.i4032.pre-phi, align 8
  %2281 = add i64 %2269, -248
  %2282 = add i64 %2271, 24
  store i64 %2282, i64* %3, align 8
  %2283 = inttoptr i64 %2281 to i32*
  %2284 = load i32, i32* %2283, align 4
  %2285 = zext i32 %2284 to i64
  store i64 %2285, i64* %RSI.i3037, align 8
  %2286 = add i64 %2271, 16667
  %2287 = add i64 %2271, 29
  %2288 = load i64, i64* %6, align 8
  %2289 = add i64 %2288, -8
  %2290 = inttoptr i64 %2289 to i64*
  store i64 %2287, i64* %2290, align 8
  store i64 %2289, i64* %6, align 8
  store i64 %2286, i64* %3, align 8
  %call2_4017ad = tail call %struct.Memory* @sub_4058b0._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2286, %struct.Memory* %call2_401790)
  %2291 = load i64, i64* %RBP.i, align 8
  %2292 = add i64 %2291, -56
  %2293 = load i64, i64* %3, align 8
  %2294 = add i64 %2293, 5
  store i64 %2294, i64* %3, align 8
  %2295 = inttoptr i64 %2292 to i16*
  %2296 = load i16, i16* %2295, align 2
  %2297 = sext i16 %2296 to i64
  %2298 = and i64 %2297, 4294967295
  store i64 %2298, i64* %477, align 8
  %2299 = add i64 %2291, -54
  %2300 = add i64 %2293, 10
  store i64 %2300, i64* %3, align 8
  %2301 = inttoptr i64 %2299 to i16*
  %2302 = load i16, i16* %2301, align 2
  %2303 = sext i16 %2302 to i64
  %2304 = and i64 %2303, 4294967295
  store i64 %2304, i64* %250, align 8
  %2305 = add i64 %2291, -52
  %2306 = add i64 %2293, 14
  store i64 %2306, i64* %3, align 8
  %2307 = inttoptr i64 %2305 to i16*
  %2308 = load i16, i16* %2307, align 2
  %2309 = sext i16 %2308 to i64
  %2310 = and i64 %2309, 4294967295
  store i64 %2310, i64* %RCX.i4028, align 8
  %2311 = add i64 %2291, -50
  %2312 = add i64 %2293, 18
  store i64 %2312, i64* %3, align 8
  %2313 = inttoptr i64 %2311 to i16*
  %2314 = load i16, i16* %2313, align 2
  %2315 = sext i16 %2314 to i64
  %2316 = and i64 %2315, 4294967295
  store i64 %2316, i64* %RDX.i4024, align 8
  %2317 = load i64, i64* %6, align 8
  store i64 %2317, i64* %RDI.i4032.pre-phi, align 8
  %2318 = add i64 %2293, 28
  store i64 %2318, i64* %3, align 8
  %2319 = inttoptr i64 %2317 to i64*
  store i64 4277048, i64* %2319, align 8
  %2320 = load i64, i64* %RBP.i, align 8
  %2321 = add i64 %2320, -280
  %2322 = load i64, i64* %3, align 8
  %2323 = add i64 %2322, 7
  store i64 %2323, i64* %3, align 8
  %2324 = inttoptr i64 %2321 to i64*
  %2325 = load i64, i64* %2324, align 8
  store i64 %2325, i64* %RDI.i4032.pre-phi, align 8
  %2326 = add i64 %2320, -248
  %2327 = add i64 %2322, 13
  store i64 %2327, i64* %3, align 8
  %2328 = inttoptr i64 %2326 to i32*
  %2329 = load i32, i32* %2328, align 4
  %2330 = zext i32 %2329 to i64
  store i64 %2330, i64* %RSI.i3037, align 8
  %2331 = add i64 %2322, 16802
  %2332 = add i64 %2322, 18
  %2333 = load i64, i64* %6, align 8
  %2334 = add i64 %2333, -8
  %2335 = inttoptr i64 %2334 to i64*
  store i64 %2332, i64* %2335, align 8
  store i64 %2334, i64* %6, align 8
  store i64 %2331, i64* %3, align 8
  %call2_4017db = tail call %struct.Memory* @sub_405970._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2331, %struct.Memory* %call2_4017ad)
  %2336 = load i64, i64* %RBP.i, align 8
  %2337 = add i64 %2336, -56
  %2338 = load i64, i64* %3, align 8
  %2339 = add i64 %2338, 5
  store i64 %2339, i64* %3, align 8
  %2340 = inttoptr i64 %2337 to i16*
  %2341 = load i16, i16* %2340, align 2
  %2342 = sext i16 %2341 to i64
  %2343 = and i64 %2342, 4294967295
  store i64 %2343, i64* %477, align 8
  %2344 = add i64 %2336, -54
  %2345 = add i64 %2338, 10
  store i64 %2345, i64* %3, align 8
  %2346 = inttoptr i64 %2344 to i16*
  %2347 = load i16, i16* %2346, align 2
  %2348 = sext i16 %2347 to i64
  %2349 = and i64 %2348, 4294967295
  store i64 %2349, i64* %250, align 8
  %2350 = add i64 %2336, -52
  %2351 = add i64 %2338, 14
  store i64 %2351, i64* %3, align 8
  %2352 = inttoptr i64 %2350 to i16*
  %2353 = load i16, i16* %2352, align 2
  %2354 = sext i16 %2353 to i64
  %2355 = and i64 %2354, 4294967295
  store i64 %2355, i64* %RCX.i4028, align 8
  %2356 = add i64 %2336, -50
  %2357 = add i64 %2338, 18
  store i64 %2357, i64* %3, align 8
  %2358 = inttoptr i64 %2356 to i16*
  %2359 = load i16, i16* %2358, align 2
  %2360 = sext i16 %2359 to i64
  %2361 = and i64 %2360, 4294967295
  store i64 %2361, i64* %RDX.i4024, align 8
  %2362 = load i64, i64* %6, align 8
  store i64 %2362, i64* %RDI.i4032.pre-phi, align 8
  %2363 = add i64 %2338, 28
  store i64 %2363, i64* %3, align 8
  %2364 = inttoptr i64 %2362 to i64*
  store i64 4277083, i64* %2364, align 8
  %2365 = load i64, i64* %RBP.i, align 8
  %2366 = add i64 %2365, -280
  %2367 = load i64, i64* %3, align 8
  %2368 = add i64 %2367, 7
  store i64 %2368, i64* %3, align 8
  %2369 = inttoptr i64 %2366 to i64*
  %2370 = load i64, i64* %2369, align 8
  store i64 %2370, i64* %RDI.i4032.pre-phi, align 8
  %2371 = add i64 %2365, -248
  %2372 = add i64 %2367, 13
  store i64 %2372, i64* %3, align 8
  %2373 = inttoptr i64 %2371 to i32*
  %2374 = load i32, i32* %2373, align 4
  %2375 = zext i32 %2374 to i64
  store i64 %2375, i64* %RSI.i3037, align 8
  %2376 = add i64 %2367, 17060
  %2377 = add i64 %2367, 18
  %2378 = load i64, i64* %6, align 8
  %2379 = add i64 %2378, -8
  %2380 = inttoptr i64 %2379 to i64*
  store i64 %2377, i64* %2380, align 8
  store i64 %2379, i64* %6, align 8
  store i64 %2376, i64* %3, align 8
  %call2_401809 = tail call %struct.Memory* @sub_405aa0._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2376, %struct.Memory* %call2_4017db)
  %2381 = load i64, i64* %RBP.i, align 8
  %2382 = add i64 %2381, -56
  %2383 = load i64, i64* %3, align 8
  %2384 = add i64 %2383, 5
  store i64 %2384, i64* %3, align 8
  %2385 = inttoptr i64 %2382 to i16*
  %2386 = load i16, i16* %2385, align 2
  %2387 = sext i16 %2386 to i64
  %2388 = and i64 %2387, 4294967295
  store i64 %2388, i64* %477, align 8
  %2389 = add i64 %2381, -54
  %2390 = add i64 %2383, 10
  store i64 %2390, i64* %3, align 8
  %2391 = inttoptr i64 %2389 to i16*
  %2392 = load i16, i16* %2391, align 2
  %2393 = sext i16 %2392 to i64
  %2394 = and i64 %2393, 4294967295
  store i64 %2394, i64* %250, align 8
  %2395 = add i64 %2381, -52
  %2396 = add i64 %2383, 14
  store i64 %2396, i64* %3, align 8
  %2397 = inttoptr i64 %2395 to i16*
  %2398 = load i16, i16* %2397, align 2
  %2399 = sext i16 %2398 to i64
  %2400 = and i64 %2399, 4294967295
  store i64 %2400, i64* %RCX.i4028, align 8
  %2401 = add i64 %2381, -50
  %2402 = add i64 %2383, 18
  store i64 %2402, i64* %3, align 8
  %2403 = inttoptr i64 %2401 to i16*
  %2404 = load i16, i16* %2403, align 2
  %2405 = sext i16 %2404 to i64
  %2406 = and i64 %2405, 4294967295
  store i64 %2406, i64* %RDX.i4024, align 8
  %2407 = load i64, i64* %6, align 8
  store i64 %2407, i64* %RDI.i4032.pre-phi, align 8
  %2408 = add i64 %2383, 28
  store i64 %2408, i64* %3, align 8
  %2409 = inttoptr i64 %2407 to i64*
  store i64 4277119, i64* %2409, align 8
  %2410 = load i64, i64* %RBP.i, align 8
  %2411 = add i64 %2410, -280
  %2412 = load i64, i64* %3, align 8
  %2413 = add i64 %2412, 7
  store i64 %2413, i64* %3, align 8
  %2414 = inttoptr i64 %2411 to i64*
  %2415 = load i64, i64* %2414, align 8
  store i64 %2415, i64* %RDI.i4032.pre-phi, align 8
  %2416 = add i64 %2410, -248
  %2417 = add i64 %2412, 13
  store i64 %2417, i64* %3, align 8
  %2418 = inttoptr i64 %2416 to i32*
  %2419 = load i32, i32* %2418, align 4
  %2420 = zext i32 %2419 to i64
  store i64 %2420, i64* %RSI.i3037, align 8
  %2421 = add i64 %2412, 17318
  %2422 = add i64 %2412, 18
  %2423 = load i64, i64* %6, align 8
  %2424 = add i64 %2423, -8
  %2425 = inttoptr i64 %2424 to i64*
  store i64 %2422, i64* %2425, align 8
  store i64 %2424, i64* %6, align 8
  store i64 %2421, i64* %3, align 8
  %call2_401837 = tail call %struct.Memory* @sub_405bd0._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2421, %struct.Memory* %call2_401809)
  %2426 = load i64, i64* %RBP.i, align 8
  %2427 = add i64 %2426, -50
  %2428 = load i64, i64* %3, align 8
  %2429 = add i64 %2428, 4
  store i64 %2429, i64* %3, align 8
  %2430 = inttoptr i64 %2427 to i16*
  %2431 = load i16, i16* %2430, align 2
  %2432 = sext i16 %2431 to i64
  %2433 = and i64 %2432, 4294967295
  store i64 %2433, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4143a0_type* @G__0x4143a0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4143a0_type* @G__0x4143a0 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2434 = add i64 %2426, -280
  %2435 = add i64 %2428, 18
  store i64 %2435, i64* %3, align 8
  %2436 = inttoptr i64 %2434 to i64*
  %2437 = load i64, i64* %2436, align 8
  store i64 %2437, i64* %RDI.i4032.pre-phi, align 8
  %2438 = add i64 %2426, -248
  %2439 = add i64 %2428, 24
  store i64 %2439, i64* %3, align 8
  %2440 = inttoptr i64 %2438 to i32*
  %2441 = load i32, i32* %2440, align 4
  %2442 = zext i32 %2441 to i64
  store i64 %2442, i64* %RSI.i3037, align 8
  %2443 = add i64 %2428, 17604
  %2444 = add i64 %2428, 29
  %2445 = load i64, i64* %6, align 8
  %2446 = add i64 %2445, -8
  %2447 = inttoptr i64 %2446 to i64*
  store i64 %2444, i64* %2447, align 8
  store i64 %2446, i64* %6, align 8
  store i64 %2443, i64* %3, align 8
  %call2_401854 = tail call %struct.Memory* @sub_405d00._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2443, %struct.Memory* %call2_401837)
  %2448 = load i64, i64* %RBP.i, align 8
  %2449 = add i64 %2448, -56
  %2450 = load i64, i64* %3, align 8
  %2451 = add i64 %2450, 5
  store i64 %2451, i64* %3, align 8
  %2452 = inttoptr i64 %2449 to i16*
  %2453 = load i16, i16* %2452, align 2
  %2454 = sext i16 %2453 to i64
  %2455 = and i64 %2454, 4294967295
  store i64 %2455, i64* %477, align 8
  %2456 = add i64 %2448, -54
  %2457 = add i64 %2450, 10
  store i64 %2457, i64* %3, align 8
  %2458 = inttoptr i64 %2456 to i16*
  %2459 = load i16, i16* %2458, align 2
  %2460 = sext i16 %2459 to i64
  %2461 = and i64 %2460, 4294967295
  store i64 %2461, i64* %250, align 8
  %2462 = add i64 %2448, -52
  %2463 = add i64 %2450, 14
  store i64 %2463, i64* %3, align 8
  %2464 = inttoptr i64 %2462 to i16*
  %2465 = load i16, i16* %2464, align 2
  %2466 = sext i16 %2465 to i64
  %2467 = and i64 %2466, 4294967295
  store i64 %2467, i64* %RCX.i4028, align 8
  %2468 = add i64 %2448, -50
  %2469 = add i64 %2450, 18
  store i64 %2469, i64* %3, align 8
  %2470 = inttoptr i64 %2468 to i16*
  %2471 = load i16, i16* %2470, align 2
  %2472 = sext i16 %2471 to i64
  %2473 = and i64 %2472, 4294967295
  store i64 %2473, i64* %RDX.i4024, align 8
  %2474 = load i64, i64* %6, align 8
  store i64 %2474, i64* %RDI.i4032.pre-phi, align 8
  %2475 = add i64 %2450, 28
  store i64 %2475, i64* %3, align 8
  %2476 = inttoptr i64 %2474 to i64*
  store i64 4277174, i64* %2476, align 8
  %2477 = load i64, i64* %RBP.i, align 8
  %2478 = add i64 %2477, -280
  %2479 = load i64, i64* %3, align 8
  %2480 = add i64 %2479, 7
  store i64 %2480, i64* %3, align 8
  %2481 = inttoptr i64 %2478 to i64*
  %2482 = load i64, i64* %2481, align 8
  store i64 %2482, i64* %RDI.i4032.pre-phi, align 8
  %2483 = add i64 %2477, -248
  %2484 = add i64 %2479, 13
  store i64 %2484, i64* %3, align 8
  %2485 = inttoptr i64 %2483 to i32*
  %2486 = load i32, i32* %2485, align 4
  %2487 = zext i32 %2486 to i64
  store i64 %2487, i64* %RSI.i3037, align 8
  %2488 = add i64 %2479, 17739
  %2489 = add i64 %2479, 18
  %2490 = load i64, i64* %6, align 8
  %2491 = add i64 %2490, -8
  %2492 = inttoptr i64 %2491 to i64*
  store i64 %2489, i64* %2492, align 8
  store i64 %2491, i64* %6, align 8
  store i64 %2488, i64* %3, align 8
  %call2_401882 = tail call %struct.Memory* @sub_405dc0._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2488, %struct.Memory* %call2_401854)
  %2493 = load i64, i64* %RBP.i, align 8
  %2494 = add i64 %2493, -50
  %2495 = load i64, i64* %3, align 8
  %2496 = add i64 %2495, 4
  store i64 %2496, i64* %3, align 8
  %2497 = inttoptr i64 %2494 to i16*
  %2498 = load i16, i16* %2497, align 2
  %2499 = sext i16 %2498 to i64
  %2500 = and i64 %2499, 4294967295
  store i64 %2500, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4143d5_type* @G__0x4143d5 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4143d5_type* @G__0x4143d5 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2501 = add i64 %2493, -280
  %2502 = add i64 %2495, 18
  store i64 %2502, i64* %3, align 8
  %2503 = inttoptr i64 %2501 to i64*
  %2504 = load i64, i64* %2503, align 8
  store i64 %2504, i64* %RDI.i4032.pre-phi, align 8
  %2505 = add i64 %2493, -248
  %2506 = add i64 %2495, 24
  store i64 %2506, i64* %3, align 8
  %2507 = inttoptr i64 %2505 to i32*
  %2508 = load i32, i32* %2507, align 4
  %2509 = zext i32 %2508 to i64
  store i64 %2509, i64* %RSI.i3037, align 8
  %2510 = add i64 %2495, 18025
  %2511 = add i64 %2495, 29
  %2512 = load i64, i64* %6, align 8
  %2513 = add i64 %2512, -8
  %2514 = inttoptr i64 %2513 to i64*
  store i64 %2511, i64* %2514, align 8
  store i64 %2513, i64* %6, align 8
  store i64 %2510, i64* %3, align 8
  %call2_40189f = tail call %struct.Memory* @sub_405ef0._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2510, %struct.Memory* %call2_401882)
  %2515 = load i64, i64* %RBP.i, align 8
  %2516 = add i64 %2515, -56
  %2517 = load i64, i64* %3, align 8
  %2518 = add i64 %2517, 5
  store i64 %2518, i64* %3, align 8
  %2519 = inttoptr i64 %2516 to i16*
  %2520 = load i16, i16* %2519, align 2
  %2521 = sext i16 %2520 to i64
  %2522 = and i64 %2521, 4294967295
  store i64 %2522, i64* %477, align 8
  %2523 = add i64 %2515, -54
  %2524 = add i64 %2517, 10
  store i64 %2524, i64* %3, align 8
  %2525 = inttoptr i64 %2523 to i16*
  %2526 = load i16, i16* %2525, align 2
  %2527 = sext i16 %2526 to i64
  %2528 = and i64 %2527, 4294967295
  store i64 %2528, i64* %250, align 8
  %2529 = add i64 %2515, -52
  %2530 = add i64 %2517, 14
  store i64 %2530, i64* %3, align 8
  %2531 = inttoptr i64 %2529 to i16*
  %2532 = load i16, i16* %2531, align 2
  %2533 = sext i16 %2532 to i64
  %2534 = and i64 %2533, 4294967295
  store i64 %2534, i64* %RCX.i4028, align 8
  %2535 = add i64 %2515, -50
  %2536 = add i64 %2517, 18
  store i64 %2536, i64* %3, align 8
  %2537 = inttoptr i64 %2535 to i16*
  %2538 = load i16, i16* %2537, align 2
  %2539 = sext i16 %2538 to i64
  %2540 = and i64 %2539, 4294967295
  store i64 %2540, i64* %RDX.i4024, align 8
  %2541 = load i64, i64* %6, align 8
  store i64 %2541, i64* %RDI.i4032.pre-phi, align 8
  %2542 = add i64 %2517, 28
  store i64 %2542, i64* %3, align 8
  %2543 = inttoptr i64 %2541 to i64*
  store i64 4277226, i64* %2543, align 8
  %2544 = load i64, i64* %RBP.i, align 8
  %2545 = add i64 %2544, -280
  %2546 = load i64, i64* %3, align 8
  %2547 = add i64 %2546, 7
  store i64 %2547, i64* %3, align 8
  %2548 = inttoptr i64 %2545 to i64*
  %2549 = load i64, i64* %2548, align 8
  store i64 %2549, i64* %RDI.i4032.pre-phi, align 8
  %2550 = add i64 %2544, -248
  %2551 = add i64 %2546, 13
  store i64 %2551, i64* %3, align 8
  %2552 = inttoptr i64 %2550 to i32*
  %2553 = load i32, i32* %2552, align 4
  %2554 = zext i32 %2553 to i64
  store i64 %2554, i64* %RSI.i3037, align 8
  %2555 = add i64 %2546, 18160
  %2556 = add i64 %2546, 18
  %2557 = load i64, i64* %6, align 8
  %2558 = add i64 %2557, -8
  %2559 = inttoptr i64 %2558 to i64*
  store i64 %2556, i64* %2559, align 8
  store i64 %2558, i64* %6, align 8
  store i64 %2555, i64* %3, align 8
  %call2_4018cd = tail call %struct.Memory* @sub_405fb0._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2555, %struct.Memory* %call2_40189f)
  %2560 = load i64, i64* %RBP.i, align 8
  %2561 = add i64 %2560, -50
  %2562 = load i64, i64* %3, align 8
  %2563 = add i64 %2562, 4
  store i64 %2563, i64* %3, align 8
  %2564 = inttoptr i64 %2561 to i16*
  %2565 = load i16, i16* %2564, align 2
  %2566 = sext i16 %2565 to i64
  %2567 = and i64 %2566, 4294967295
  store i64 %2567, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414408_type* @G__0x414408 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414408_type* @G__0x414408 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2568 = add i64 %2560, -280
  %2569 = add i64 %2562, 18
  store i64 %2569, i64* %3, align 8
  %2570 = inttoptr i64 %2568 to i64*
  %2571 = load i64, i64* %2570, align 8
  store i64 %2571, i64* %RDI.i4032.pre-phi, align 8
  %2572 = add i64 %2560, -248
  %2573 = add i64 %2562, 24
  store i64 %2573, i64* %3, align 8
  %2574 = inttoptr i64 %2572 to i32*
  %2575 = load i32, i32* %2574, align 4
  %2576 = zext i32 %2575 to i64
  store i64 %2576, i64* %RSI.i3037, align 8
  %2577 = add i64 %2562, 18446
  %2578 = add i64 %2562, 29
  %2579 = load i64, i64* %6, align 8
  %2580 = add i64 %2579, -8
  %2581 = inttoptr i64 %2580 to i64*
  store i64 %2578, i64* %2581, align 8
  store i64 %2580, i64* %6, align 8
  store i64 %2577, i64* %3, align 8
  %call2_4018ea = tail call %struct.Memory* @sub_4060e0._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2577, %struct.Memory* %call2_4018cd)
  %2582 = load i64, i64* %RBP.i, align 8
  %2583 = add i64 %2582, -56
  %2584 = load i64, i64* %3, align 8
  %2585 = add i64 %2584, 5
  store i64 %2585, i64* %3, align 8
  %2586 = inttoptr i64 %2583 to i16*
  %2587 = load i16, i16* %2586, align 2
  %2588 = sext i16 %2587 to i64
  %2589 = and i64 %2588, 4294967295
  store i64 %2589, i64* %477, align 8
  %2590 = add i64 %2582, -54
  %2591 = add i64 %2584, 10
  store i64 %2591, i64* %3, align 8
  %2592 = inttoptr i64 %2590 to i16*
  %2593 = load i16, i16* %2592, align 2
  %2594 = sext i16 %2593 to i64
  %2595 = and i64 %2594, 4294967295
  store i64 %2595, i64* %250, align 8
  %2596 = add i64 %2582, -52
  %2597 = add i64 %2584, 14
  store i64 %2597, i64* %3, align 8
  %2598 = inttoptr i64 %2596 to i16*
  %2599 = load i16, i16* %2598, align 2
  %2600 = sext i16 %2599 to i64
  %2601 = and i64 %2600, 4294967295
  store i64 %2601, i64* %RCX.i4028, align 8
  %2602 = add i64 %2582, -50
  %2603 = add i64 %2584, 18
  store i64 %2603, i64* %3, align 8
  %2604 = inttoptr i64 %2602 to i16*
  %2605 = load i16, i16* %2604, align 2
  %2606 = sext i16 %2605 to i64
  %2607 = and i64 %2606, 4294967295
  store i64 %2607, i64* %RDX.i4024, align 8
  %2608 = load i64, i64* %6, align 8
  store i64 %2608, i64* %RDI.i4032.pre-phi, align 8
  %2609 = add i64 %2584, 28
  store i64 %2609, i64* %3, align 8
  %2610 = inttoptr i64 %2608 to i64*
  store i64 4277278, i64* %2610, align 8
  %2611 = load i64, i64* %RBP.i, align 8
  %2612 = add i64 %2611, -280
  %2613 = load i64, i64* %3, align 8
  %2614 = add i64 %2613, 7
  store i64 %2614, i64* %3, align 8
  %2615 = inttoptr i64 %2612 to i64*
  %2616 = load i64, i64* %2615, align 8
  store i64 %2616, i64* %RDI.i4032.pre-phi, align 8
  %2617 = add i64 %2611, -248
  %2618 = add i64 %2613, 13
  store i64 %2618, i64* %3, align 8
  %2619 = inttoptr i64 %2617 to i32*
  %2620 = load i32, i32* %2619, align 4
  %2621 = zext i32 %2620 to i64
  store i64 %2621, i64* %RSI.i3037, align 8
  %2622 = add i64 %2613, 18581
  %2623 = add i64 %2613, 18
  %2624 = load i64, i64* %6, align 8
  %2625 = add i64 %2624, -8
  %2626 = inttoptr i64 %2625 to i64*
  store i64 %2623, i64* %2626, align 8
  store i64 %2625, i64* %6, align 8
  store i64 %2622, i64* %3, align 8
  %call2_401918 = tail call %struct.Memory* @sub_4061a0._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2622, %struct.Memory* %call2_4018ea)
  %2627 = load i64, i64* %3, align 8
  %2628 = add i64 %2627, 2197355
  %2629 = add i64 %2627, 8
  store i64 %2629, i64* %3, align 8
  %2630 = inttoptr i64 %2628 to double*
  %2631 = load double, double* %2630, align 8
  %2632 = tail call double @llvm.trunc.f64(double %2631)
  %2633 = tail call double @llvm.fabs.f64(double %2632)
  %2634 = fcmp ogt double %2633, 0x41DFFFFFFFC00000
  %2635 = fptosi double %2632 to i32
  %2636 = zext i32 %2635 to i64
  %2637 = select i1 %2634, i64 2147483648, i64 %2636
  store i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295), i64* %RCX.i4028, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  %2638 = trunc i64 %2637 to i16
  store i16 %2638, i16* %R14W.i3107, align 2
  %2639 = and i64 %2637, 65535
  store i64 %2639, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %2640 = load i64, i64* %RBP.i, align 8
  %2641 = add i64 %2640, -296
  %2642 = add i64 %2627, 37
  store i64 %2642, i64* %3, align 8
  %2643 = inttoptr i64 %2641 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295) to i32) to i64), i64* %2643, align 8
  %2644 = load i64, i64* %3, align 8
  %2645 = add i64 %2644, 18830
  %2646 = add i64 %2644, 5
  %2647 = load i64, i64* %6, align 8
  %2648 = add i64 %2647, -8
  %2649 = inttoptr i64 %2648 to i64*
  store i64 %2646, i64* %2649, align 8
  store i64 %2648, i64* %6, align 8
  store i64 %2645, i64* %3, align 8
  %call2_401942 = tail call %struct.Memory* @sub_4062d0._Z4fillIPttEvT_S1_T0_(%struct.State* nonnull %0, i64 %2645, %struct.Memory* %call2_401918)
  %2650 = load i64, i64* %RBP.i, align 8
  %2651 = add i64 %2650, -40
  %2652 = load i64, i64* %3, align 8
  %2653 = add i64 %2652, 5
  store i64 %2653, i64* %3, align 8
  %2654 = inttoptr i64 %2651 to double*
  %2655 = load double, double* %2654, align 8
  %2656 = tail call double @llvm.trunc.f64(double %2655)
  %2657 = tail call double @llvm.fabs.f64(double %2656)
  %2658 = fcmp ogt double %2657, 0x41DFFFFFFFC00000
  %2659 = fptosi double %2656 to i32
  %2660 = zext i32 %2659 to i64
  %2661 = select i1 %2658, i64 2147483648, i64 %2660
  store i64 %2661, i64* %RAX.i4026, align 8
  %2662 = trunc i64 %2661 to i16
  store i16 %2662, i16* %R14W.i3107, align 2
  %2663 = add i64 %2650, -58
  %2664 = add i64 %2652, 14
  store i64 %2664, i64* %3, align 8
  %2665 = inttoptr i64 %2663 to i16*
  store i16 %2662, i16* %2665, align 2
  %2666 = load i64, i64* %RBP.i, align 8
  %2667 = add i64 %2666, -58
  %2668 = load i64, i64* %3, align 8
  %2669 = add i64 %2668, 4
  store i64 %2669, i64* %3, align 8
  %2670 = inttoptr i64 %2667 to i16*
  %2671 = load i16, i16* %2670, align 2
  %2672 = zext i16 %2671 to i32
  %2673 = zext i16 %2671 to i32
  %2674 = add nuw nsw i32 %2672, %2673
  %2675 = zext i32 %2674 to i64
  store i64 %2675, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %2676 = and i32 %2674, 255
  %2677 = tail call i32 @llvm.ctpop.i32(i32 %2676)
  %2678 = trunc i32 %2677 to i8
  %2679 = and i8 %2678, 1
  %2680 = xor i8 %2679, 1
  store i8 %2680, i8* %33, align 1
  %2681 = lshr i32 %2674, 4
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  store i8 %2683, i8* %39, align 1
  %2684 = icmp eq i32 %2674, 0
  %2685 = zext i1 %2684 to i8
  store i8 %2685, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %2686 = trunc i32 %2674 to i16
  store i16 %2686, i16* %R14W.i3107, align 2
  %2687 = add i64 %2666, -60
  %2688 = add i64 %2668, 15
  store i64 %2688, i64* %3, align 8
  %2689 = inttoptr i64 %2687 to i16*
  store i16 %2686, i16* %2689, align 2
  %2690 = load i64, i64* %RBP.i, align 8
  %2691 = add i64 %2690, -58
  %2692 = load i64, i64* %3, align 8
  %2693 = add i64 %2692, 4
  store i64 %2693, i64* %3, align 8
  %2694 = inttoptr i64 %2691 to i16*
  %2695 = load i16, i16* %2694, align 2
  %2696 = zext i16 %2695 to i32
  %2697 = add nuw nsw i32 %2696, 2
  %2698 = zext i32 %2697 to i64
  store i64 %2698, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %2699 = and i32 %2697, 255
  %2700 = tail call i32 @llvm.ctpop.i32(i32 %2699)
  %2701 = trunc i32 %2700 to i8
  %2702 = and i8 %2701, 1
  %2703 = xor i8 %2702, 1
  store i8 %2703, i8* %33, align 1
  %2704 = xor i32 %2697, %2696
  %2705 = lshr i32 %2704, 4
  %2706 = trunc i32 %2705 to i8
  %2707 = and i8 %2706, 1
  store i8 %2707, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %2708 = trunc i32 %2697 to i16
  store i16 %2708, i16* %R14W.i3107, align 2
  %2709 = add i64 %2690, -62
  %2710 = add i64 %2692, 16
  store i64 %2710, i64* %3, align 8
  %2711 = inttoptr i64 %2709 to i16*
  store i16 %2708, i16* %2711, align 2
  %2712 = load i64, i64* %RBP.i, align 8
  %2713 = add i64 %2712, -58
  %2714 = load i64, i64* %3, align 8
  %2715 = add i64 %2714, 4
  store i64 %2715, i64* %3, align 8
  %2716 = inttoptr i64 %2713 to i16*
  %2717 = load i16, i16* %2716, align 2
  %2718 = zext i16 %2717 to i64
  store i64 %2718, i64* %RAX.i4026, align 8
  %2719 = add i64 %2712, -60
  %2720 = add i64 %2714, 8
  store i64 %2720, i64* %3, align 8
  %2721 = inttoptr i64 %2719 to i16*
  %2722 = load i16, i16* %2721, align 2
  %2723 = zext i16 %2722 to i64
  store i64 %2723, i64* %RCX.i4028, align 8
  %2724 = add i64 %2712, -62
  %2725 = add i64 %2714, 12
  store i64 %2725, i64* %3, align 8
  %2726 = inttoptr i64 %2724 to i16*
  %2727 = load i16, i16* %2726, align 2
  %2728 = zext i16 %2727 to i64
  store i64 %2728, i64* %RDX.i4024, align 8
  %2729 = add i64 %2712, -300
  %2730 = zext i16 %2717 to i32
  %2731 = add i64 %2714, 18
  store i64 %2731, i64* %3, align 8
  %2732 = inttoptr i64 %2729 to i32*
  store i32 %2730, i32* %2732, align 4
  %2733 = load i32, i32* %ECX.i3562, align 4
  %2734 = zext i32 %2733 to i64
  %2735 = load i64, i64* %3, align 8
  store i64 %2734, i64* %RAX.i4026, align 8
  %2736 = load i64, i64* %RBP.i, align 8
  %2737 = add i64 %2736, -268
  %2738 = add i64 %2735, 8
  store i64 %2738, i64* %3, align 8
  %2739 = inttoptr i64 %2737 to i32*
  %2740 = load i32, i32* %2739, align 4
  %2741 = zext i32 %2740 to i64
  store i64 %2741, i64* %RCX.i4028, align 8
  %2742 = add i64 %2736, -304
  %2743 = load i32, i32* %EDX.i4021, align 4
  %2744 = add i64 %2735, 14
  store i64 %2744, i64* %3, align 8
  %2745 = inttoptr i64 %2742 to i32*
  store i32 %2743, i32* %2745, align 4
  %2746 = load i32, i32* %ECX.i3562, align 4
  %2747 = zext i32 %2746 to i64
  %2748 = load i64, i64* %3, align 8
  store i64 %2747, i64* %RDX.i4024, align 8
  %2749 = load i64, i64* %RBP.i, align 8
  %2750 = add i64 %2749, -304
  %2751 = add i64 %2748, 9
  store i64 %2751, i64* %3, align 8
  %2752 = inttoptr i64 %2750 to i32*
  %2753 = load i32, i32* %2752, align 4
  %2754 = zext i32 %2753 to i64
  store i64 %2754, i64* %250, align 8
  %2755 = add i64 %2748, 12
  store i64 %2755, i64* %3, align 8
  %2756 = load i32, i32* %EAX.i4011, align 8
  %2757 = zext i32 %2756 to i64
  %2758 = shl nuw i64 %2747, 32
  %2759 = or i64 %2758, %2757
  %2760 = udiv i64 %2759, %2754
  %2761 = and i64 %2760, 4294967295
  %2762 = icmp eq i64 %2760, %2761
  br i1 %2762, label %2765, label %2763

; <label>:2763:                                   ; preds = %routine_idivl__ecx.exit3035
  %2764 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2755, %struct.Memory* %call2_401942)
  %.pre16 = load i64, i64* %RBP.i, align 8
  %.pre17 = load i64, i64* %3, align 8
  %.pre18 = load i32, i32* %EAX.i4011, align 4
  br label %routine_divl__r8d.exit2577

; <label>:2765:                                   ; preds = %routine_idivl__ecx.exit3035
  %2766 = urem i64 %2759, %2754
  store i64 %2760, i64* %RAX.i4026, align 8
  store i64 %2766, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %2767 = trunc i64 %2760 to i32
  br label %routine_divl__r8d.exit2577

routine_divl__r8d.exit2577:                       ; preds = %2765, %2763
  %2768 = phi i32 [ %.pre18, %2763 ], [ %2767, %2765 ]
  %2769 = phi i64 [ %.pre17, %2763 ], [ %2755, %2765 ]
  %2770 = phi i64 [ %.pre16, %2763 ], [ %2749, %2765 ]
  %2771 = phi %struct.Memory* [ %2764, %2763 ], [ %call2_401942, %2765 ]
  %2772 = add i64 %2770, -300
  %2773 = add i64 %2769, 6
  store i64 %2773, i64* %3, align 8
  %2774 = inttoptr i64 %2772 to i32*
  %2775 = load i32, i32* %2774, align 4
  %2776 = add i32 %2768, %2775
  %2777 = zext i32 %2776 to i64
  store i64 %2777, i64* %RDX.i4024, align 8
  %2778 = icmp ult i32 %2776, %2775
  %2779 = icmp ult i32 %2776, %2768
  %2780 = or i1 %2778, %2779
  %2781 = zext i1 %2780 to i8
  store i8 %2781, i8* %26, align 1
  %2782 = and i32 %2776, 255
  %2783 = tail call i32 @llvm.ctpop.i32(i32 %2782)
  %2784 = trunc i32 %2783 to i8
  %2785 = and i8 %2784, 1
  %2786 = xor i8 %2785, 1
  store i8 %2786, i8* %33, align 1
  %2787 = xor i32 %2768, %2775
  %2788 = xor i32 %2787, %2776
  %2789 = lshr i32 %2788, 4
  %2790 = trunc i32 %2789 to i8
  %2791 = and i8 %2790, 1
  store i8 %2791, i8* %39, align 1
  %2792 = icmp eq i32 %2776, 0
  %2793 = zext i1 %2792 to i8
  store i8 %2793, i8* %42, align 1
  %2794 = lshr i32 %2776, 31
  %2795 = trunc i32 %2794 to i8
  store i8 %2795, i8* %45, align 1
  %2796 = lshr i32 %2775, 31
  %2797 = lshr i32 %2768, 31
  %2798 = xor i32 %2794, %2796
  %2799 = xor i32 %2794, %2797
  %2800 = add nuw nsw i32 %2798, %2799
  %2801 = icmp eq i32 %2800, 2
  %2802 = zext i1 %2801 to i8
  store i8 %2802, i8* %51, align 1
  %2803 = trunc i32 %2776 to i16
  store i16 %2803, i16* %R14W.i3107, align 2
  %2804 = add i64 %2770, -64
  %2805 = add i64 %2769, 17
  store i64 %2805, i64* %3, align 8
  %2806 = inttoptr i64 %2804 to i16*
  store i16 %2803, i16* %2806, align 2
  %2807 = load i64, i64* %RBP.i, align 8
  %2808 = add i64 %2807, -58
  %2809 = load i64, i64* %3, align 8
  %2810 = add i64 %2809, 4
  store i64 %2810, i64* %3, align 8
  %2811 = inttoptr i64 %2808 to i16*
  %2812 = load i16, i16* %2811, align 2
  %2813 = zext i16 %2812 to i64
  store i64 %2813, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414222_type* @G__0x414222 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414222_type* @G__0x414222 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2814 = add i64 %2807, -296
  %2815 = add i64 %2809, 18
  store i64 %2815, i64* %3, align 8
  %2816 = inttoptr i64 %2814 to i64*
  %2817 = load i64, i64* %2816, align 8
  store i64 %2817, i64* %RDI.i4032.pre-phi, align 8
  %2818 = add i64 %2807, -248
  %2819 = add i64 %2809, 24
  store i64 %2819, i64* %3, align 8
  %2820 = inttoptr i64 %2818 to i32*
  %2821 = load i32, i32* %2820, align 4
  %2822 = zext i32 %2821 to i64
  store i64 %2822, i64* %RSI.i3037, align 8
  %2823 = add i64 %2809, 18783
  %2824 = add i64 %2809, 29
  %2825 = load i64, i64* %6, align 8
  %2826 = add i64 %2825, -8
  %2827 = inttoptr i64 %2826 to i64*
  store i64 %2824, i64* %2827, align 8
  store i64 %2826, i64* %6, align 8
  store i64 %2823, i64* %3, align 8
  %call2_4019c9 = tail call %struct.Memory* @sub_406310._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2823, %struct.Memory* %2771)
  %2828 = load i64, i64* %RBP.i, align 8
  %2829 = add i64 %2828, -58
  %2830 = load i64, i64* %3, align 8
  %2831 = add i64 %2830, 4
  store i64 %2831, i64* %3, align 8
  %2832 = inttoptr i64 %2829 to i16*
  %2833 = load i16, i16* %2832, align 2
  %2834 = zext i16 %2833 to i64
  store i64 %2834, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414238_type* @G__0x414238 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414238_type* @G__0x414238 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2835 = add i64 %2828, -296
  %2836 = add i64 %2830, 18
  store i64 %2836, i64* %3, align 8
  %2837 = inttoptr i64 %2835 to i64*
  %2838 = load i64, i64* %2837, align 8
  store i64 %2838, i64* %RDI.i4032.pre-phi, align 8
  %2839 = add i64 %2828, -248
  %2840 = add i64 %2830, 24
  store i64 %2840, i64* %3, align 8
  %2841 = inttoptr i64 %2839 to i32*
  %2842 = load i32, i32* %2841, align 4
  %2843 = zext i32 %2842 to i64
  store i64 %2843, i64* %RSI.i3037, align 8
  %2844 = add i64 %2830, 18946
  %2845 = add i64 %2830, 29
  %2846 = load i64, i64* %6, align 8
  %2847 = add i64 %2846, -8
  %2848 = inttoptr i64 %2847 to i64*
  store i64 %2845, i64* %2848, align 8
  store i64 %2847, i64* %6, align 8
  store i64 %2844, i64* %3, align 8
  %call2_4019e6 = tail call %struct.Memory* @sub_4063d0._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2844, %struct.Memory* %call2_4019c9)
  %2849 = load i64, i64* %RBP.i, align 8
  %2850 = add i64 %2849, -64
  %2851 = load i64, i64* %3, align 8
  %2852 = add i64 %2851, 5
  store i64 %2852, i64* %3, align 8
  %2853 = inttoptr i64 %2850 to i16*
  %2854 = load i16, i16* %2853, align 2
  %2855 = zext i16 %2854 to i64
  store i64 %2855, i64* %477, align 8
  %2856 = add i64 %2849, -62
  %2857 = add i64 %2851, 10
  store i64 %2857, i64* %3, align 8
  %2858 = inttoptr i64 %2856 to i16*
  %2859 = load i16, i16* %2858, align 2
  %2860 = zext i16 %2859 to i64
  store i64 %2860, i64* %250, align 8
  %2861 = add i64 %2849, -60
  %2862 = add i64 %2851, 14
  store i64 %2862, i64* %3, align 8
  %2863 = inttoptr i64 %2861 to i16*
  %2864 = load i16, i16* %2863, align 2
  %2865 = zext i16 %2864 to i64
  store i64 %2865, i64* %RCX.i4028, align 8
  %2866 = add i64 %2849, -58
  %2867 = add i64 %2851, 18
  store i64 %2867, i64* %3, align 8
  %2868 = inttoptr i64 %2866 to i16*
  %2869 = load i16, i16* %2868, align 2
  %2870 = zext i16 %2869 to i64
  store i64 %2870, i64* %RDX.i4024, align 8
  %2871 = load i64, i64* %6, align 8
  store i64 %2871, i64* %RDI.i4032.pre-phi, align 8
  %2872 = add i64 %2851, 28
  store i64 %2872, i64* %3, align 8
  %2873 = inttoptr i64 %2871 to i64*
  store i64 4276822, i64* %2873, align 8
  %2874 = load i64, i64* %RBP.i, align 8
  %2875 = add i64 %2874, -296
  %2876 = load i64, i64* %3, align 8
  %2877 = add i64 %2876, 7
  store i64 %2877, i64* %3, align 8
  %2878 = inttoptr i64 %2875 to i64*
  %2879 = load i64, i64* %2878, align 8
  store i64 %2879, i64* %RDI.i4032.pre-phi, align 8
  %2880 = add i64 %2874, -248
  %2881 = add i64 %2876, 13
  store i64 %2881, i64* %3, align 8
  %2882 = inttoptr i64 %2880 to i32*
  %2883 = load i32, i32* %2882, align 4
  %2884 = zext i32 %2883 to i64
  store i64 %2884, i64* %RSI.i3037, align 8
  %2885 = add i64 %2876, 19081
  %2886 = add i64 %2876, 18
  %2887 = load i64, i64* %6, align 8
  %2888 = add i64 %2887, -8
  %2889 = inttoptr i64 %2888 to i64*
  store i64 %2886, i64* %2889, align 8
  store i64 %2888, i64* %6, align 8
  store i64 %2885, i64* %3, align 8
  %call2_401a14 = tail call %struct.Memory* @sub_406490._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2885, %struct.Memory* %call2_4019e6)
  %2890 = load i64, i64* %RBP.i, align 8
  %2891 = add i64 %2890, -58
  %2892 = load i64, i64* %3, align 8
  %2893 = add i64 %2892, 4
  store i64 %2893, i64* %3, align 8
  %2894 = inttoptr i64 %2891 to i16*
  %2895 = load i16, i16* %2894, align 2
  %2896 = zext i16 %2895 to i64
  store i64 %2896, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414276_type* @G__0x414276 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414276_type* @G__0x414276 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2897 = add i64 %2890, -296
  %2898 = add i64 %2892, 18
  store i64 %2898, i64* %3, align 8
  %2899 = inttoptr i64 %2897 to i64*
  %2900 = load i64, i64* %2899, align 8
  store i64 %2900, i64* %RDI.i4032.pre-phi, align 8
  %2901 = add i64 %2890, -248
  %2902 = add i64 %2892, 24
  store i64 %2902, i64* %3, align 8
  %2903 = inttoptr i64 %2901 to i32*
  %2904 = load i32, i32* %2903, align 4
  %2905 = zext i32 %2904 to i64
  store i64 %2905, i64* %RSI.i3037, align 8
  %2906 = add i64 %2892, 19367
  %2907 = add i64 %2892, 29
  %2908 = load i64, i64* %6, align 8
  %2909 = add i64 %2908, -8
  %2910 = inttoptr i64 %2909 to i64*
  store i64 %2907, i64* %2910, align 8
  store i64 %2909, i64* %6, align 8
  store i64 %2906, i64* %3, align 8
  %call2_401a31 = tail call %struct.Memory* @sub_4065c0._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2906, %struct.Memory* %call2_401a14)
  %2911 = load i64, i64* %RBP.i, align 8
  %2912 = add i64 %2911, -64
  %2913 = load i64, i64* %3, align 8
  %2914 = add i64 %2913, 5
  store i64 %2914, i64* %3, align 8
  %2915 = inttoptr i64 %2912 to i16*
  %2916 = load i16, i16* %2915, align 2
  %2917 = zext i16 %2916 to i64
  store i64 %2917, i64* %477, align 8
  %2918 = add i64 %2911, -62
  %2919 = add i64 %2913, 10
  store i64 %2919, i64* %3, align 8
  %2920 = inttoptr i64 %2918 to i16*
  %2921 = load i16, i16* %2920, align 2
  %2922 = zext i16 %2921 to i64
  store i64 %2922, i64* %250, align 8
  %2923 = add i64 %2911, -60
  %2924 = add i64 %2913, 14
  store i64 %2924, i64* %3, align 8
  %2925 = inttoptr i64 %2923 to i16*
  %2926 = load i16, i16* %2925, align 2
  %2927 = zext i16 %2926 to i64
  store i64 %2927, i64* %RCX.i4028, align 8
  %2928 = add i64 %2911, -58
  %2929 = add i64 %2913, 18
  store i64 %2929, i64* %3, align 8
  %2930 = inttoptr i64 %2928 to i16*
  %2931 = load i16, i16* %2930, align 2
  %2932 = zext i16 %2931 to i64
  store i64 %2932, i64* %RDX.i4024, align 8
  %2933 = load i64, i64* %6, align 8
  store i64 %2933, i64* %RDI.i4032.pre-phi, align 8
  %2934 = add i64 %2913, 28
  store i64 %2934, i64* %3, align 8
  %2935 = inttoptr i64 %2933 to i64*
  store i64 4276881, i64* %2935, align 8
  %2936 = load i64, i64* %RBP.i, align 8
  %2937 = add i64 %2936, -296
  %2938 = load i64, i64* %3, align 8
  %2939 = add i64 %2938, 7
  store i64 %2939, i64* %3, align 8
  %2940 = inttoptr i64 %2937 to i64*
  %2941 = load i64, i64* %2940, align 8
  store i64 %2941, i64* %RDI.i4032.pre-phi, align 8
  %2942 = add i64 %2936, -248
  %2943 = add i64 %2938, 13
  store i64 %2943, i64* %3, align 8
  %2944 = inttoptr i64 %2942 to i32*
  %2945 = load i32, i32* %2944, align 4
  %2946 = zext i32 %2945 to i64
  store i64 %2946, i64* %RSI.i3037, align 8
  %2947 = add i64 %2938, 19502
  %2948 = add i64 %2938, 18
  %2949 = load i64, i64* %6, align 8
  %2950 = add i64 %2949, -8
  %2951 = inttoptr i64 %2950 to i64*
  store i64 %2948, i64* %2951, align 8
  store i64 %2950, i64* %6, align 8
  store i64 %2947, i64* %3, align 8
  %call2_401a5f = tail call %struct.Memory* @sub_406680._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %2947, %struct.Memory* %call2_401a31)
  %2952 = load i64, i64* %RBP.i, align 8
  %2953 = add i64 %2952, -58
  %2954 = load i64, i64* %3, align 8
  %2955 = add i64 %2954, 4
  store i64 %2955, i64* %3, align 8
  %2956 = inttoptr i64 %2953 to i16*
  %2957 = load i16, i16* %2956, align 2
  %2958 = zext i16 %2957 to i64
  store i64 %2958, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4142b6_type* @G__0x4142b6 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4142b6_type* @G__0x4142b6 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %2959 = add i64 %2952, -296
  %2960 = add i64 %2954, 18
  store i64 %2960, i64* %3, align 8
  %2961 = inttoptr i64 %2959 to i64*
  %2962 = load i64, i64* %2961, align 8
  store i64 %2962, i64* %RDI.i4032.pre-phi, align 8
  %2963 = add i64 %2952, -248
  %2964 = add i64 %2954, 24
  store i64 %2964, i64* %3, align 8
  %2965 = inttoptr i64 %2963 to i32*
  %2966 = load i32, i32* %2965, align 4
  %2967 = zext i32 %2966 to i64
  store i64 %2967, i64* %RSI.i3037, align 8
  %2968 = add i64 %2954, 19788
  %2969 = add i64 %2954, 29
  %2970 = load i64, i64* %6, align 8
  %2971 = add i64 %2970, -8
  %2972 = inttoptr i64 %2971 to i64*
  store i64 %2969, i64* %2972, align 8
  store i64 %2971, i64* %6, align 8
  store i64 %2968, i64* %3, align 8
  %call2_401a7c = tail call %struct.Memory* @sub_4067b0._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %2968, %struct.Memory* %call2_401a5f)
  %2973 = load i64, i64* %RBP.i, align 8
  %2974 = add i64 %2973, -64
  %2975 = load i64, i64* %3, align 8
  %2976 = add i64 %2975, 5
  store i64 %2976, i64* %3, align 8
  %2977 = inttoptr i64 %2974 to i16*
  %2978 = load i16, i16* %2977, align 2
  %2979 = zext i16 %2978 to i64
  store i64 %2979, i64* %477, align 8
  %2980 = add i64 %2973, -62
  %2981 = add i64 %2975, 10
  store i64 %2981, i64* %3, align 8
  %2982 = inttoptr i64 %2980 to i16*
  %2983 = load i16, i16* %2982, align 2
  %2984 = zext i16 %2983 to i64
  store i64 %2984, i64* %250, align 8
  %2985 = add i64 %2973, -60
  %2986 = add i64 %2975, 14
  store i64 %2986, i64* %3, align 8
  %2987 = inttoptr i64 %2985 to i16*
  %2988 = load i16, i16* %2987, align 2
  %2989 = zext i16 %2988 to i64
  store i64 %2989, i64* %RCX.i4028, align 8
  %2990 = add i64 %2973, -58
  %2991 = add i64 %2975, 18
  store i64 %2991, i64* %3, align 8
  %2992 = inttoptr i64 %2990 to i16*
  %2993 = load i16, i16* %2992, align 2
  %2994 = zext i16 %2993 to i64
  store i64 %2994, i64* %RDX.i4024, align 8
  %2995 = load i64, i64* %6, align 8
  store i64 %2995, i64* %RDI.i4032.pre-phi, align 8
  %2996 = add i64 %2975, 28
  store i64 %2996, i64* %3, align 8
  %2997 = inttoptr i64 %2995 to i64*
  store i64 4276945, i64* %2997, align 8
  %2998 = load i64, i64* %RBP.i, align 8
  %2999 = add i64 %2998, -296
  %3000 = load i64, i64* %3, align 8
  %3001 = add i64 %3000, 7
  store i64 %3001, i64* %3, align 8
  %3002 = inttoptr i64 %2999 to i64*
  %3003 = load i64, i64* %3002, align 8
  store i64 %3003, i64* %RDI.i4032.pre-phi, align 8
  %3004 = add i64 %2998, -248
  %3005 = add i64 %3000, 13
  store i64 %3005, i64* %3, align 8
  %3006 = inttoptr i64 %3004 to i32*
  %3007 = load i32, i32* %3006, align 4
  %3008 = zext i32 %3007 to i64
  store i64 %3008, i64* %RSI.i3037, align 8
  %3009 = add i64 %3000, 19923
  %3010 = add i64 %3000, 18
  %3011 = load i64, i64* %6, align 8
  %3012 = add i64 %3011, -8
  %3013 = inttoptr i64 %3012 to i64*
  store i64 %3010, i64* %3013, align 8
  store i64 %3012, i64* %6, align 8
  store i64 %3009, i64* %3, align 8
  %call2_401aaa = tail call %struct.Memory* @sub_406870._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3009, %struct.Memory* %call2_401a7c)
  %3014 = load i64, i64* %RBP.i, align 8
  %3015 = add i64 %3014, -64
  %3016 = load i64, i64* %3, align 8
  %3017 = add i64 %3016, 5
  store i64 %3017, i64* %3, align 8
  %3018 = inttoptr i64 %3015 to i16*
  %3019 = load i16, i16* %3018, align 2
  %3020 = zext i16 %3019 to i64
  store i64 %3020, i64* %477, align 8
  %3021 = add i64 %3014, -62
  %3022 = add i64 %3016, 10
  store i64 %3022, i64* %3, align 8
  %3023 = inttoptr i64 %3021 to i16*
  %3024 = load i16, i16* %3023, align 2
  %3025 = zext i16 %3024 to i64
  store i64 %3025, i64* %250, align 8
  %3026 = add i64 %3014, -60
  %3027 = add i64 %3016, 14
  store i64 %3027, i64* %3, align 8
  %3028 = inttoptr i64 %3026 to i16*
  %3029 = load i16, i16* %3028, align 2
  %3030 = zext i16 %3029 to i64
  store i64 %3030, i64* %RCX.i4028, align 8
  %3031 = add i64 %3014, -58
  %3032 = add i64 %3016, 18
  store i64 %3032, i64* %3, align 8
  %3033 = inttoptr i64 %3031 to i16*
  %3034 = load i16, i16* %3033, align 2
  %3035 = zext i16 %3034 to i64
  store i64 %3035, i64* %RDX.i4024, align 8
  %3036 = load i64, i64* %6, align 8
  store i64 %3036, i64* %RDI.i4032.pre-phi, align 8
  %3037 = add i64 %3016, 28
  store i64 %3037, i64* %3, align 8
  %3038 = inttoptr i64 %3036 to i64*
  store i64 4276983, i64* %3038, align 8
  %3039 = load i64, i64* %RBP.i, align 8
  %3040 = add i64 %3039, -296
  %3041 = load i64, i64* %3, align 8
  %3042 = add i64 %3041, 7
  store i64 %3042, i64* %3, align 8
  %3043 = inttoptr i64 %3040 to i64*
  %3044 = load i64, i64* %3043, align 8
  store i64 %3044, i64* %RDI.i4032.pre-phi, align 8
  %3045 = add i64 %3039, -248
  %3046 = add i64 %3041, 13
  store i64 %3046, i64* %3, align 8
  %3047 = inttoptr i64 %3045 to i32*
  %3048 = load i32, i32* %3047, align 4
  %3049 = zext i32 %3048 to i64
  store i64 %3049, i64* %RSI.i3037, align 8
  %3050 = add i64 %3041, 20181
  %3051 = add i64 %3041, 18
  %3052 = load i64, i64* %6, align 8
  %3053 = add i64 %3052, -8
  %3054 = inttoptr i64 %3053 to i64*
  store i64 %3051, i64* %3054, align 8
  store i64 %3053, i64* %6, align 8
  store i64 %3050, i64* %3, align 8
  %call2_401ad8 = tail call %struct.Memory* @sub_4069a0._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3050, %struct.Memory* %call2_401aaa)
  %3055 = load i64, i64* %RBP.i, align 8
  %3056 = add i64 %3055, -58
  %3057 = load i64, i64* %3, align 8
  %3058 = add i64 %3057, 4
  store i64 %3058, i64* %3, align 8
  %3059 = inttoptr i64 %3056 to i16*
  %3060 = load i16, i16* %3059, align 2
  %3061 = zext i16 %3060 to i64
  store i64 %3061, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41431e_type* @G__0x41431e to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41431e_type* @G__0x41431e to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3062 = add i64 %3055, -296
  %3063 = add i64 %3057, 18
  store i64 %3063, i64* %3, align 8
  %3064 = inttoptr i64 %3062 to i64*
  %3065 = load i64, i64* %3064, align 8
  store i64 %3065, i64* %RDI.i4032.pre-phi, align 8
  %3066 = add i64 %3055, -248
  %3067 = add i64 %3057, 24
  store i64 %3067, i64* %3, align 8
  %3068 = inttoptr i64 %3066 to i32*
  %3069 = load i32, i32* %3068, align 4
  %3070 = zext i32 %3069 to i64
  store i64 %3070, i64* %RSI.i3037, align 8
  %3071 = add i64 %3057, 20467
  %3072 = add i64 %3057, 29
  %3073 = load i64, i64* %6, align 8
  %3074 = add i64 %3073, -8
  %3075 = inttoptr i64 %3074 to i64*
  store i64 %3072, i64* %3075, align 8
  store i64 %3074, i64* %6, align 8
  store i64 %3071, i64* %3, align 8
  %call2_401af5 = tail call %struct.Memory* @sub_406ad0._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3071, %struct.Memory* %call2_401ad8)
  %3076 = load i64, i64* %RBP.i, align 8
  %3077 = add i64 %3076, -64
  %3078 = load i64, i64* %3, align 8
  %3079 = add i64 %3078, 5
  store i64 %3079, i64* %3, align 8
  %3080 = inttoptr i64 %3077 to i16*
  %3081 = load i16, i16* %3080, align 2
  %3082 = zext i16 %3081 to i64
  store i64 %3082, i64* %477, align 8
  %3083 = add i64 %3076, -62
  %3084 = add i64 %3078, 10
  store i64 %3084, i64* %3, align 8
  %3085 = inttoptr i64 %3083 to i16*
  %3086 = load i16, i16* %3085, align 2
  %3087 = zext i16 %3086 to i64
  store i64 %3087, i64* %250, align 8
  %3088 = add i64 %3076, -60
  %3089 = add i64 %3078, 14
  store i64 %3089, i64* %3, align 8
  %3090 = inttoptr i64 %3088 to i16*
  %3091 = load i16, i16* %3090, align 2
  %3092 = zext i16 %3091 to i64
  store i64 %3092, i64* %RCX.i4028, align 8
  %3093 = add i64 %3076, -58
  %3094 = add i64 %3078, 18
  store i64 %3094, i64* %3, align 8
  %3095 = inttoptr i64 %3093 to i16*
  %3096 = load i16, i16* %3095, align 2
  %3097 = zext i16 %3096 to i64
  store i64 %3097, i64* %RDX.i4024, align 8
  %3098 = load i64, i64* %6, align 8
  store i64 %3098, i64* %RDI.i4032.pre-phi, align 8
  %3099 = add i64 %3078, 28
  store i64 %3099, i64* %3, align 8
  %3100 = inttoptr i64 %3098 to i64*
  store i64 4277047, i64* %3100, align 8
  %3101 = load i64, i64* %RBP.i, align 8
  %3102 = add i64 %3101, -296
  %3103 = load i64, i64* %3, align 8
  %3104 = add i64 %3103, 7
  store i64 %3104, i64* %3, align 8
  %3105 = inttoptr i64 %3102 to i64*
  %3106 = load i64, i64* %3105, align 8
  store i64 %3106, i64* %RDI.i4032.pre-phi, align 8
  %3107 = add i64 %3101, -248
  %3108 = add i64 %3103, 13
  store i64 %3108, i64* %3, align 8
  %3109 = inttoptr i64 %3107 to i32*
  %3110 = load i32, i32* %3109, align 4
  %3111 = zext i32 %3110 to i64
  store i64 %3111, i64* %RSI.i3037, align 8
  %3112 = add i64 %3103, 20602
  %3113 = add i64 %3103, 18
  %3114 = load i64, i64* %6, align 8
  %3115 = add i64 %3114, -8
  %3116 = inttoptr i64 %3115 to i64*
  store i64 %3113, i64* %3116, align 8
  store i64 %3115, i64* %6, align 8
  store i64 %3112, i64* %3, align 8
  %call2_401b23 = tail call %struct.Memory* @sub_406b90._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3112, %struct.Memory* %call2_401af5)
  %3117 = load i64, i64* %RBP.i, align 8
  %3118 = add i64 %3117, -64
  %3119 = load i64, i64* %3, align 8
  %3120 = add i64 %3119, 5
  store i64 %3120, i64* %3, align 8
  %3121 = inttoptr i64 %3118 to i16*
  %3122 = load i16, i16* %3121, align 2
  %3123 = zext i16 %3122 to i64
  store i64 %3123, i64* %477, align 8
  %3124 = add i64 %3117, -62
  %3125 = add i64 %3119, 10
  store i64 %3125, i64* %3, align 8
  %3126 = inttoptr i64 %3124 to i16*
  %3127 = load i16, i16* %3126, align 2
  %3128 = zext i16 %3127 to i64
  store i64 %3128, i64* %250, align 8
  %3129 = add i64 %3117, -60
  %3130 = add i64 %3119, 14
  store i64 %3130, i64* %3, align 8
  %3131 = inttoptr i64 %3129 to i16*
  %3132 = load i16, i16* %3131, align 2
  %3133 = zext i16 %3132 to i64
  store i64 %3133, i64* %RCX.i4028, align 8
  %3134 = add i64 %3117, -58
  %3135 = add i64 %3119, 18
  store i64 %3135, i64* %3, align 8
  %3136 = inttoptr i64 %3134 to i16*
  %3137 = load i16, i16* %3136, align 2
  %3138 = zext i16 %3137 to i64
  store i64 %3138, i64* %RDX.i4024, align 8
  %3139 = load i64, i64* %6, align 8
  store i64 %3139, i64* %RDI.i4032.pre-phi, align 8
  %3140 = add i64 %3119, 28
  store i64 %3140, i64* %3, align 8
  %3141 = inttoptr i64 %3139 to i64*
  store i64 4277082, i64* %3141, align 8
  %3142 = load i64, i64* %RBP.i, align 8
  %3143 = add i64 %3142, -296
  %3144 = load i64, i64* %3, align 8
  %3145 = add i64 %3144, 7
  store i64 %3145, i64* %3, align 8
  %3146 = inttoptr i64 %3143 to i64*
  %3147 = load i64, i64* %3146, align 8
  store i64 %3147, i64* %RDI.i4032.pre-phi, align 8
  %3148 = add i64 %3142, -248
  %3149 = add i64 %3144, 13
  store i64 %3149, i64* %3, align 8
  %3150 = inttoptr i64 %3148 to i32*
  %3151 = load i32, i32* %3150, align 4
  %3152 = zext i32 %3151 to i64
  store i64 %3152, i64* %RSI.i3037, align 8
  %3153 = add i64 %3144, 20860
  %3154 = add i64 %3144, 18
  %3155 = load i64, i64* %6, align 8
  %3156 = add i64 %3155, -8
  %3157 = inttoptr i64 %3156 to i64*
  store i64 %3154, i64* %3157, align 8
  store i64 %3156, i64* %6, align 8
  store i64 %3153, i64* %3, align 8
  %call2_401b51 = tail call %struct.Memory* @sub_406cc0._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3153, %struct.Memory* %call2_401b23)
  %3158 = load i64, i64* %RBP.i, align 8
  %3159 = add i64 %3158, -64
  %3160 = load i64, i64* %3, align 8
  %3161 = add i64 %3160, 5
  store i64 %3161, i64* %3, align 8
  %3162 = inttoptr i64 %3159 to i16*
  %3163 = load i16, i16* %3162, align 2
  %3164 = zext i16 %3163 to i64
  store i64 %3164, i64* %477, align 8
  %3165 = add i64 %3158, -62
  %3166 = add i64 %3160, 10
  store i64 %3166, i64* %3, align 8
  %3167 = inttoptr i64 %3165 to i16*
  %3168 = load i16, i16* %3167, align 2
  %3169 = zext i16 %3168 to i64
  store i64 %3169, i64* %250, align 8
  %3170 = add i64 %3158, -60
  %3171 = add i64 %3160, 14
  store i64 %3171, i64* %3, align 8
  %3172 = inttoptr i64 %3170 to i16*
  %3173 = load i16, i16* %3172, align 2
  %3174 = zext i16 %3173 to i64
  store i64 %3174, i64* %RCX.i4028, align 8
  %3175 = add i64 %3158, -58
  %3176 = add i64 %3160, 18
  store i64 %3176, i64* %3, align 8
  %3177 = inttoptr i64 %3175 to i16*
  %3178 = load i16, i16* %3177, align 2
  %3179 = zext i16 %3178 to i64
  store i64 %3179, i64* %RDX.i4024, align 8
  %3180 = load i64, i64* %6, align 8
  store i64 %3180, i64* %RDI.i4032.pre-phi, align 8
  %3181 = add i64 %3160, 28
  store i64 %3181, i64* %3, align 8
  %3182 = inttoptr i64 %3180 to i64*
  store i64 4277118, i64* %3182, align 8
  %3183 = load i64, i64* %RBP.i, align 8
  %3184 = add i64 %3183, -296
  %3185 = load i64, i64* %3, align 8
  %3186 = add i64 %3185, 7
  store i64 %3186, i64* %3, align 8
  %3187 = inttoptr i64 %3184 to i64*
  %3188 = load i64, i64* %3187, align 8
  store i64 %3188, i64* %RDI.i4032.pre-phi, align 8
  %3189 = add i64 %3183, -248
  %3190 = add i64 %3185, 13
  store i64 %3190, i64* %3, align 8
  %3191 = inttoptr i64 %3189 to i32*
  %3192 = load i32, i32* %3191, align 4
  %3193 = zext i32 %3192 to i64
  store i64 %3193, i64* %RSI.i3037, align 8
  %3194 = add i64 %3185, 21118
  %3195 = add i64 %3185, 18
  %3196 = load i64, i64* %6, align 8
  %3197 = add i64 %3196, -8
  %3198 = inttoptr i64 %3197 to i64*
  store i64 %3195, i64* %3198, align 8
  store i64 %3197, i64* %6, align 8
  store i64 %3194, i64* %3, align 8
  %call2_401b7f = tail call %struct.Memory* @sub_406df0._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3194, %struct.Memory* %call2_401b51)
  %3199 = load i64, i64* %RBP.i, align 8
  %3200 = add i64 %3199, -58
  %3201 = load i64, i64* %3, align 8
  %3202 = add i64 %3201, 4
  store i64 %3202, i64* %3, align 8
  %3203 = inttoptr i64 %3200 to i16*
  %3204 = load i16, i16* %3203, align 2
  %3205 = zext i16 %3204 to i64
  store i64 %3205, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41439f_type* @G__0x41439f to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41439f_type* @G__0x41439f to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3206 = add i64 %3199, -296
  %3207 = add i64 %3201, 18
  store i64 %3207, i64* %3, align 8
  %3208 = inttoptr i64 %3206 to i64*
  %3209 = load i64, i64* %3208, align 8
  store i64 %3209, i64* %RDI.i4032.pre-phi, align 8
  %3210 = add i64 %3199, -248
  %3211 = add i64 %3201, 24
  store i64 %3211, i64* %3, align 8
  %3212 = inttoptr i64 %3210 to i32*
  %3213 = load i32, i32* %3212, align 4
  %3214 = zext i32 %3213 to i64
  store i64 %3214, i64* %RSI.i3037, align 8
  %3215 = add i64 %3201, 21404
  %3216 = add i64 %3201, 29
  %3217 = load i64, i64* %6, align 8
  %3218 = add i64 %3217, -8
  %3219 = inttoptr i64 %3218 to i64*
  store i64 %3216, i64* %3219, align 8
  store i64 %3218, i64* %6, align 8
  store i64 %3215, i64* %3, align 8
  %call2_401b9c = tail call %struct.Memory* @sub_406f20._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3215, %struct.Memory* %call2_401b7f)
  %3220 = load i64, i64* %RBP.i, align 8
  %3221 = add i64 %3220, -64
  %3222 = load i64, i64* %3, align 8
  %3223 = add i64 %3222, 5
  store i64 %3223, i64* %3, align 8
  %3224 = inttoptr i64 %3221 to i16*
  %3225 = load i16, i16* %3224, align 2
  %3226 = zext i16 %3225 to i64
  store i64 %3226, i64* %477, align 8
  %3227 = add i64 %3220, -62
  %3228 = add i64 %3222, 10
  store i64 %3228, i64* %3, align 8
  %3229 = inttoptr i64 %3227 to i16*
  %3230 = load i16, i16* %3229, align 2
  %3231 = zext i16 %3230 to i64
  store i64 %3231, i64* %250, align 8
  %3232 = add i64 %3220, -60
  %3233 = add i64 %3222, 14
  store i64 %3233, i64* %3, align 8
  %3234 = inttoptr i64 %3232 to i16*
  %3235 = load i16, i16* %3234, align 2
  %3236 = zext i16 %3235 to i64
  store i64 %3236, i64* %RCX.i4028, align 8
  %3237 = add i64 %3220, -58
  %3238 = add i64 %3222, 18
  store i64 %3238, i64* %3, align 8
  %3239 = inttoptr i64 %3237 to i16*
  %3240 = load i16, i16* %3239, align 2
  %3241 = zext i16 %3240 to i64
  store i64 %3241, i64* %RDX.i4024, align 8
  %3242 = load i64, i64* %6, align 8
  store i64 %3242, i64* %RDI.i4032.pre-phi, align 8
  %3243 = add i64 %3222, 28
  store i64 %3243, i64* %3, align 8
  %3244 = inttoptr i64 %3242 to i64*
  store i64 4277173, i64* %3244, align 8
  %3245 = load i64, i64* %RBP.i, align 8
  %3246 = add i64 %3245, -296
  %3247 = load i64, i64* %3, align 8
  %3248 = add i64 %3247, 7
  store i64 %3248, i64* %3, align 8
  %3249 = inttoptr i64 %3246 to i64*
  %3250 = load i64, i64* %3249, align 8
  store i64 %3250, i64* %RDI.i4032.pre-phi, align 8
  %3251 = add i64 %3245, -248
  %3252 = add i64 %3247, 13
  store i64 %3252, i64* %3, align 8
  %3253 = inttoptr i64 %3251 to i32*
  %3254 = load i32, i32* %3253, align 4
  %3255 = zext i32 %3254 to i64
  store i64 %3255, i64* %RSI.i3037, align 8
  %3256 = add i64 %3247, 21539
  %3257 = add i64 %3247, 18
  %3258 = load i64, i64* %6, align 8
  %3259 = add i64 %3258, -8
  %3260 = inttoptr i64 %3259 to i64*
  store i64 %3257, i64* %3260, align 8
  store i64 %3259, i64* %6, align 8
  store i64 %3256, i64* %3, align 8
  %call2_401bca = tail call %struct.Memory* @sub_406fe0._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3256, %struct.Memory* %call2_401b9c)
  %3261 = load i64, i64* %RBP.i, align 8
  %3262 = add i64 %3261, -58
  %3263 = load i64, i64* %3, align 8
  %3264 = add i64 %3263, 4
  store i64 %3264, i64* %3, align 8
  %3265 = inttoptr i64 %3262 to i16*
  %3266 = load i16, i16* %3265, align 2
  %3267 = zext i16 %3266 to i64
  store i64 %3267, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4143d4_type* @G__0x4143d4 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4143d4_type* @G__0x4143d4 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3268 = add i64 %3261, -296
  %3269 = add i64 %3263, 18
  store i64 %3269, i64* %3, align 8
  %3270 = inttoptr i64 %3268 to i64*
  %3271 = load i64, i64* %3270, align 8
  store i64 %3271, i64* %RDI.i4032.pre-phi, align 8
  %3272 = add i64 %3261, -248
  %3273 = add i64 %3263, 24
  store i64 %3273, i64* %3, align 8
  %3274 = inttoptr i64 %3272 to i32*
  %3275 = load i32, i32* %3274, align 4
  %3276 = zext i32 %3275 to i64
  store i64 %3276, i64* %RSI.i3037, align 8
  %3277 = add i64 %3263, 21825
  %3278 = add i64 %3263, 29
  %3279 = load i64, i64* %6, align 8
  %3280 = add i64 %3279, -8
  %3281 = inttoptr i64 %3280 to i64*
  store i64 %3278, i64* %3281, align 8
  store i64 %3280, i64* %6, align 8
  store i64 %3277, i64* %3, align 8
  %call2_401be7 = tail call %struct.Memory* @sub_407110._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3277, %struct.Memory* %call2_401bca)
  %3282 = load i64, i64* %RBP.i, align 8
  %3283 = add i64 %3282, -64
  %3284 = load i64, i64* %3, align 8
  %3285 = add i64 %3284, 5
  store i64 %3285, i64* %3, align 8
  %3286 = inttoptr i64 %3283 to i16*
  %3287 = load i16, i16* %3286, align 2
  %3288 = zext i16 %3287 to i64
  store i64 %3288, i64* %477, align 8
  %3289 = add i64 %3282, -62
  %3290 = add i64 %3284, 10
  store i64 %3290, i64* %3, align 8
  %3291 = inttoptr i64 %3289 to i16*
  %3292 = load i16, i16* %3291, align 2
  %3293 = zext i16 %3292 to i64
  store i64 %3293, i64* %250, align 8
  %3294 = add i64 %3282, -60
  %3295 = add i64 %3284, 14
  store i64 %3295, i64* %3, align 8
  %3296 = inttoptr i64 %3294 to i16*
  %3297 = load i16, i16* %3296, align 2
  %3298 = zext i16 %3297 to i64
  store i64 %3298, i64* %RCX.i4028, align 8
  %3299 = add i64 %3282, -58
  %3300 = add i64 %3284, 18
  store i64 %3300, i64* %3, align 8
  %3301 = inttoptr i64 %3299 to i16*
  %3302 = load i16, i16* %3301, align 2
  %3303 = zext i16 %3302 to i64
  store i64 %3303, i64* %RDX.i4024, align 8
  %3304 = load i64, i64* %6, align 8
  store i64 %3304, i64* %RDI.i4032.pre-phi, align 8
  %3305 = add i64 %3284, 28
  store i64 %3305, i64* %3, align 8
  %3306 = inttoptr i64 %3304 to i64*
  store i64 4277225, i64* %3306, align 8
  %3307 = load i64, i64* %RBP.i, align 8
  %3308 = add i64 %3307, -296
  %3309 = load i64, i64* %3, align 8
  %3310 = add i64 %3309, 7
  store i64 %3310, i64* %3, align 8
  %3311 = inttoptr i64 %3308 to i64*
  %3312 = load i64, i64* %3311, align 8
  store i64 %3312, i64* %RDI.i4032.pre-phi, align 8
  %3313 = add i64 %3307, -248
  %3314 = add i64 %3309, 13
  store i64 %3314, i64* %3, align 8
  %3315 = inttoptr i64 %3313 to i32*
  %3316 = load i32, i32* %3315, align 4
  %3317 = zext i32 %3316 to i64
  store i64 %3317, i64* %RSI.i3037, align 8
  %3318 = add i64 %3309, 21960
  %3319 = add i64 %3309, 18
  %3320 = load i64, i64* %6, align 8
  %3321 = add i64 %3320, -8
  %3322 = inttoptr i64 %3321 to i64*
  store i64 %3319, i64* %3322, align 8
  store i64 %3321, i64* %6, align 8
  store i64 %3318, i64* %3, align 8
  %call2_401c15 = tail call %struct.Memory* @sub_4071d0._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3318, %struct.Memory* %call2_401be7)
  %3323 = load i64, i64* %RBP.i, align 8
  %3324 = add i64 %3323, -58
  %3325 = load i64, i64* %3, align 8
  %3326 = add i64 %3325, 4
  store i64 %3326, i64* %3, align 8
  %3327 = inttoptr i64 %3324 to i16*
  %3328 = load i16, i16* %3327, align 2
  %3329 = zext i16 %3328 to i64
  store i64 %3329, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414407_type* @G__0x414407 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414407_type* @G__0x414407 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3330 = add i64 %3323, -296
  %3331 = add i64 %3325, 18
  store i64 %3331, i64* %3, align 8
  %3332 = inttoptr i64 %3330 to i64*
  %3333 = load i64, i64* %3332, align 8
  store i64 %3333, i64* %RDI.i4032.pre-phi, align 8
  %3334 = add i64 %3323, -248
  %3335 = add i64 %3325, 24
  store i64 %3335, i64* %3, align 8
  %3336 = inttoptr i64 %3334 to i32*
  %3337 = load i32, i32* %3336, align 4
  %3338 = zext i32 %3337 to i64
  store i64 %3338, i64* %RSI.i3037, align 8
  %3339 = add i64 %3325, 22246
  %3340 = add i64 %3325, 29
  %3341 = load i64, i64* %6, align 8
  %3342 = add i64 %3341, -8
  %3343 = inttoptr i64 %3342 to i64*
  store i64 %3340, i64* %3343, align 8
  store i64 %3342, i64* %6, align 8
  store i64 %3339, i64* %3, align 8
  %call2_401c32 = tail call %struct.Memory* @sub_407300._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3339, %struct.Memory* %call2_401c15)
  %3344 = load i64, i64* %RBP.i, align 8
  %3345 = add i64 %3344, -64
  %3346 = load i64, i64* %3, align 8
  %3347 = add i64 %3346, 5
  store i64 %3347, i64* %3, align 8
  %3348 = inttoptr i64 %3345 to i16*
  %3349 = load i16, i16* %3348, align 2
  %3350 = zext i16 %3349 to i64
  store i64 %3350, i64* %477, align 8
  %3351 = add i64 %3344, -62
  %3352 = add i64 %3346, 10
  store i64 %3352, i64* %3, align 8
  %3353 = inttoptr i64 %3351 to i16*
  %3354 = load i16, i16* %3353, align 2
  %3355 = zext i16 %3354 to i64
  store i64 %3355, i64* %250, align 8
  %3356 = add i64 %3344, -60
  %3357 = add i64 %3346, 14
  store i64 %3357, i64* %3, align 8
  %3358 = inttoptr i64 %3356 to i16*
  %3359 = load i16, i16* %3358, align 2
  %3360 = zext i16 %3359 to i64
  store i64 %3360, i64* %RCX.i4028, align 8
  %3361 = add i64 %3344, -58
  %3362 = add i64 %3346, 18
  store i64 %3362, i64* %3, align 8
  %3363 = inttoptr i64 %3361 to i16*
  %3364 = load i16, i16* %3363, align 2
  %3365 = zext i16 %3364 to i64
  store i64 %3365, i64* %RDX.i4024, align 8
  %3366 = load i64, i64* %6, align 8
  store i64 %3366, i64* %RDI.i4032.pre-phi, align 8
  %3367 = add i64 %3346, 28
  store i64 %3367, i64* %3, align 8
  %3368 = inttoptr i64 %3366 to i64*
  store i64 4277277, i64* %3368, align 8
  %3369 = load i64, i64* %RBP.i, align 8
  %3370 = add i64 %3369, -296
  %3371 = load i64, i64* %3, align 8
  %3372 = add i64 %3371, 7
  store i64 %3372, i64* %3, align 8
  %3373 = inttoptr i64 %3370 to i64*
  %3374 = load i64, i64* %3373, align 8
  store i64 %3374, i64* %RDI.i4032.pre-phi, align 8
  %3375 = add i64 %3369, -248
  %3376 = add i64 %3371, 13
  store i64 %3376, i64* %3, align 8
  %3377 = inttoptr i64 %3375 to i32*
  %3378 = load i32, i32* %3377, align 4
  %3379 = zext i32 %3378 to i64
  store i64 %3379, i64* %RSI.i3037, align 8
  %3380 = add i64 %3371, 22381
  %3381 = add i64 %3371, 18
  %3382 = load i64, i64* %6, align 8
  %3383 = add i64 %3382, -8
  %3384 = inttoptr i64 %3383 to i64*
  store i64 %3381, i64* %3384, align 8
  store i64 %3383, i64* %6, align 8
  store i64 %3380, i64* %3, align 8
  %call2_401c60 = tail call %struct.Memory* @sub_4073c0._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3380, %struct.Memory* %call2_401c32)
  %3385 = load i64, i64* %3, align 8
  %3386 = add i64 %3385, 2196515
  %3387 = add i64 %3385, 8
  store i64 %3387, i64* %3, align 8
  %3388 = inttoptr i64 %3386 to i64*
  %3389 = load i64, i64* %3388, align 8
  store i64 %3389, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %.cast = bitcast i64 %3389 to double
  %3390 = tail call double @llvm.trunc.f64(double %.cast)
  %3391 = tail call double @llvm.fabs.f64(double %3390)
  %3392 = fcmp ogt double %3391, 0x41DFFFFFFFC00000
  %3393 = fptosi double %3390 to i32
  %3394 = zext i32 %3393 to i64
  %3395 = select i1 %3392, i64 2147483648, i64 %3394
  store i64 %3395, i64* %RDX.i4024, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %3396 = load i64, i64* %RBP.i, align 8
  %3397 = add i64 %3396, -312
  %3398 = add i64 %3385, 33
  store i64 %3398, i64* %3, align 8
  %3399 = inttoptr i64 %3397 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295) to i32) to i64), i64* %3399, align 8
  %3400 = load i64, i64* %3, align 8
  %3401 = add i64 %3400, 22634
  %3402 = add i64 %3400, 5
  %3403 = load i64, i64* %6, align 8
  %3404 = add i64 %3403, -8
  %3405 = inttoptr i64 %3404 to i64*
  store i64 %3402, i64* %3405, align 8
  store i64 %3404, i64* %6, align 8
  store i64 %3401, i64* %3, align 8
  %call2_401c86 = tail call %struct.Memory* @sub_4074f0._Z4fillIPiiEvT_S1_T0_(%struct.State* nonnull %0, i64 %3401, %struct.Memory* %call2_401c60)
  %3406 = load i64, i64* %RBP.i, align 8
  %3407 = add i64 %3406, -40
  %3408 = load i64, i64* %3, align 8
  %3409 = add i64 %3408, 5
  store i64 %3409, i64* %3, align 8
  %3410 = inttoptr i64 %3407 to double*
  %3411 = load double, double* %3410, align 8
  %3412 = tail call double @llvm.trunc.f64(double %3411)
  %3413 = tail call double @llvm.fabs.f64(double %3412)
  %3414 = fcmp ogt double %3413, 0x41DFFFFFFFC00000
  %3415 = fptosi double %3412 to i32
  %3416 = zext i32 %3415 to i64
  %3417 = select i1 %3414, i64 2147483648, i64 %3416
  store i64 %3417, i64* %RAX.i4026, align 8
  %3418 = add i64 %3406, -68
  %3419 = trunc i64 %3417 to i32
  %3420 = add i64 %3408, 8
  store i64 %3420, i64* %3, align 8
  %3421 = inttoptr i64 %3418 to i32*
  store i32 %3419, i32* %3421, align 4
  %3422 = load i64, i64* %RBP.i, align 8
  %3423 = add i64 %3422, -68
  %3424 = load i64, i64* %3, align 8
  %3425 = add i64 %3424, 3
  store i64 %3425, i64* %3, align 8
  %3426 = inttoptr i64 %3423 to i32*
  %3427 = load i32, i32* %3426, align 4
  %3428 = shl i32 %3427, 1
  %3429 = zext i32 %3428 to i64
  store i64 %3429, i64* %RAX.i4026, align 8
  %3430 = icmp ult i32 %3428, %3427
  %3431 = zext i1 %3430 to i8
  store i8 %3431, i8* %26, align 1
  %3432 = and i32 %3428, 254
  %3433 = tail call i32 @llvm.ctpop.i32(i32 %3432)
  %3434 = trunc i32 %3433 to i8
  %3435 = and i8 %3434, 1
  %3436 = xor i8 %3435, 1
  store i8 %3436, i8* %33, align 1
  %3437 = lshr i32 %3427, 3
  %3438 = trunc i32 %3437 to i8
  %3439 = and i8 %3438, 1
  store i8 %3439, i8* %39, align 1
  %3440 = icmp eq i32 %3428, 0
  %3441 = zext i1 %3440 to i8
  store i8 %3441, i8* %42, align 1
  %3442 = lshr i32 %3427, 30
  %3443 = and i32 %3442, 1
  %3444 = trunc i32 %3443 to i8
  store i8 %3444, i8* %45, align 1
  %3445 = lshr i32 %3427, 31
  %3446 = xor i32 %3443, %3445
  %3447 = trunc i32 %3446 to i8
  store i8 %3447, i8* %51, align 1
  %3448 = add i64 %3422, -72
  %3449 = add i64 %3424, 8
  store i64 %3449, i64* %3, align 8
  %3450 = inttoptr i64 %3448 to i32*
  store i32 %3428, i32* %3450, align 4
  %3451 = load i64, i64* %RBP.i, align 8
  %3452 = add i64 %3451, -68
  %3453 = load i64, i64* %3, align 8
  %3454 = add i64 %3453, 3
  store i64 %3454, i64* %3, align 8
  %3455 = inttoptr i64 %3452 to i32*
  %3456 = load i32, i32* %3455, align 4
  %3457 = add i32 %3456, 2
  %3458 = zext i32 %3457 to i64
  store i64 %3458, i64* %RAX.i4026, align 8
  %3459 = icmp ugt i32 %3456, -3
  %3460 = zext i1 %3459 to i8
  store i8 %3460, i8* %26, align 1
  %3461 = and i32 %3457, 255
  %3462 = tail call i32 @llvm.ctpop.i32(i32 %3461)
  %3463 = trunc i32 %3462 to i8
  %3464 = and i8 %3463, 1
  %3465 = xor i8 %3464, 1
  store i8 %3465, i8* %33, align 1
  %3466 = xor i32 %3457, %3456
  %3467 = lshr i32 %3466, 4
  %3468 = trunc i32 %3467 to i8
  %3469 = and i8 %3468, 1
  store i8 %3469, i8* %39, align 1
  %3470 = icmp eq i32 %3457, 0
  %3471 = zext i1 %3470 to i8
  store i8 %3471, i8* %42, align 1
  %3472 = lshr i32 %3457, 31
  %3473 = trunc i32 %3472 to i8
  store i8 %3473, i8* %45, align 1
  %3474 = lshr i32 %3456, 31
  %3475 = xor i32 %3472, %3474
  %3476 = add nuw nsw i32 %3475, %3472
  %3477 = icmp eq i32 %3476, 2
  %3478 = zext i1 %3477 to i8
  store i8 %3478, i8* %51, align 1
  %3479 = add i64 %3451, -76
  %3480 = add i64 %3453, 9
  store i64 %3480, i64* %3, align 8
  %3481 = inttoptr i64 %3479 to i32*
  store i32 %3457, i32* %3481, align 4
  %3482 = load i64, i64* %RBP.i, align 8
  %3483 = add i64 %3482, -68
  %3484 = load i64, i64* %3, align 8
  %3485 = add i64 %3484, 3
  store i64 %3485, i64* %3, align 8
  %3486 = inttoptr i64 %3483 to i32*
  %3487 = load i32, i32* %3486, align 4
  %3488 = zext i32 %3487 to i64
  store i64 %3488, i64* %RAX.i4026, align 8
  %3489 = add i64 %3482, -72
  %3490 = add i64 %3484, 6
  store i64 %3490, i64* %3, align 8
  %3491 = inttoptr i64 %3489 to i32*
  %3492 = load i32, i32* %3491, align 4
  %3493 = zext i32 %3492 to i64
  store i64 %3493, i64* %RCX.i4028, align 8
  %3494 = add i64 %3482, -76
  %3495 = add i64 %3484, 9
  store i64 %3495, i64* %3, align 8
  %3496 = inttoptr i64 %3494 to i32*
  %3497 = load i32, i32* %3496, align 4
  %3498 = zext i32 %3497 to i64
  store i64 %3498, i64* %RDX.i4024, align 8
  %3499 = add i64 %3482, -316
  %3500 = add i64 %3484, 15
  store i64 %3500, i64* %3, align 8
  %3501 = inttoptr i64 %3499 to i32*
  store i32 %3487, i32* %3501, align 4
  %3502 = load i32, i32* %ECX.i3562, align 4
  %3503 = zext i32 %3502 to i64
  %3504 = load i64, i64* %3, align 8
  store i64 %3503, i64* %RAX.i4026, align 8
  %3505 = load i64, i64* %RBP.i, align 8
  %3506 = add i64 %3505, -320
  %3507 = load i32, i32* %EDX.i4021, align 4
  %3508 = add i64 %3504, 8
  store i64 %3508, i64* %3, align 8
  %3509 = inttoptr i64 %3506 to i32*
  store i32 %3507, i32* %3509, align 4
  %3510 = load i64, i64* %3, align 8
  %3511 = load i32, i32* %EAX.i4011, align 8
  %3512 = sext i32 %3511 to i64
  %3513 = lshr i64 %3512, 32
  store i64 %3513, i64* %376, align 8
  %3514 = load i64, i64* %RBP.i, align 8
  %3515 = add i64 %3514, -320
  %3516 = add i64 %3510, 7
  store i64 %3516, i64* %3, align 8
  %3517 = inttoptr i64 %3515 to i32*
  %3518 = load i32, i32* %3517, align 4
  %3519 = zext i32 %3518 to i64
  store i64 %3519, i64* %RCX.i4028, align 8
  %3520 = add i64 %3510, 9
  store i64 %3520, i64* %3, align 8
  %3521 = zext i32 %3511 to i64
  %3522 = sext i32 %3518 to i64
  %3523 = shl nuw i64 %3513, 32
  %3524 = or i64 %3523, %3521
  %3525 = sdiv i64 %3524, %3522
  %3526 = shl i64 %3525, 32
  %3527 = ashr exact i64 %3526, 32
  %3528 = icmp eq i64 %3525, %3527
  br i1 %3528, label %3531, label %3529

; <label>:3529:                                   ; preds = %routine_divl__r8d.exit2577
  %3530 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3520, %struct.Memory* %call2_401c86)
  %.pre19 = load i64, i64* %RBP.i, align 8
  %.pre20 = load i64, i64* %3, align 8
  %.pre21 = load i32, i32* %EAX.i4011, align 4
  br label %routine_idivl__ecx.exit

; <label>:3531:                                   ; preds = %routine_divl__r8d.exit2577
  %3532 = srem i64 %3524, %3522
  %3533 = and i64 %3525, 4294967295
  store i64 %3533, i64* %RAX.i4026, align 8
  %3534 = and i64 %3532, 4294967295
  store i64 %3534, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %3535 = trunc i64 %3525 to i32
  br label %routine_idivl__ecx.exit

routine_idivl__ecx.exit:                          ; preds = %3531, %3529
  %3536 = phi i32 [ %.pre21, %3529 ], [ %3535, %3531 ]
  %3537 = phi i64 [ %.pre20, %3529 ], [ %3520, %3531 ]
  %3538 = phi i64 [ %.pre19, %3529 ], [ %3514, %3531 ]
  %3539 = phi %struct.Memory* [ %3530, %3529 ], [ %call2_401c86, %3531 ]
  %3540 = add i64 %3538, -316
  %3541 = add i64 %3537, 6
  store i64 %3541, i64* %3, align 8
  %3542 = inttoptr i64 %3540 to i32*
  %3543 = load i32, i32* %3542, align 4
  %3544 = add i32 %3536, %3543
  %3545 = zext i32 %3544 to i64
  store i64 %3545, i64* %RDX.i4024, align 8
  %3546 = icmp ult i32 %3544, %3543
  %3547 = icmp ult i32 %3544, %3536
  %3548 = or i1 %3546, %3547
  %3549 = zext i1 %3548 to i8
  store i8 %3549, i8* %26, align 1
  %3550 = and i32 %3544, 255
  %3551 = tail call i32 @llvm.ctpop.i32(i32 %3550)
  %3552 = trunc i32 %3551 to i8
  %3553 = and i8 %3552, 1
  %3554 = xor i8 %3553, 1
  store i8 %3554, i8* %33, align 1
  %3555 = xor i32 %3536, %3543
  %3556 = xor i32 %3555, %3544
  %3557 = lshr i32 %3556, 4
  %3558 = trunc i32 %3557 to i8
  %3559 = and i8 %3558, 1
  store i8 %3559, i8* %39, align 1
  %3560 = icmp eq i32 %3544, 0
  %3561 = zext i1 %3560 to i8
  store i8 %3561, i8* %42, align 1
  %3562 = lshr i32 %3544, 31
  %3563 = trunc i32 %3562 to i8
  store i8 %3563, i8* %45, align 1
  %3564 = lshr i32 %3543, 31
  %3565 = lshr i32 %3536, 31
  %3566 = xor i32 %3562, %3564
  %3567 = xor i32 %3562, %3565
  %3568 = add nuw nsw i32 %3566, %3567
  %3569 = icmp eq i32 %3568, 2
  %3570 = zext i1 %3569 to i8
  store i8 %3570, i8* %51, align 1
  %3571 = add i64 %3538, -80
  %3572 = add i64 %3537, 11
  store i64 %3572, i64* %3, align 8
  %3573 = inttoptr i64 %3571 to i32*
  store i32 %3544, i32* %3573, align 4
  %3574 = load i64, i64* %RBP.i, align 8
  %3575 = add i64 %3574, -68
  %3576 = load i64, i64* %3, align 8
  %3577 = add i64 %3576, 3
  store i64 %3577, i64* %3, align 8
  %3578 = inttoptr i64 %3575 to i32*
  %3579 = load i32, i32* %3578, align 4
  %3580 = zext i32 %3579 to i64
  store i64 %3580, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41443d_type* @G__0x41443d to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41443d_type* @G__0x41443d to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3581 = add i64 %3574, -312
  %3582 = add i64 %3576, 17
  store i64 %3582, i64* %3, align 8
  %3583 = inttoptr i64 %3581 to i64*
  %3584 = load i64, i64* %3583, align 8
  store i64 %3584, i64* %RDI.i4032.pre-phi, align 8
  %3585 = add i64 %3574, -248
  %3586 = add i64 %3576, 23
  store i64 %3586, i64* %3, align 8
  %3587 = inttoptr i64 %3585 to i32*
  %3588 = load i32, i32* %3587, align 4
  %3589 = zext i32 %3588 to i64
  store i64 %3589, i64* %RSI.i3037, align 8
  %3590 = add i64 %3576, 22625
  %3591 = add i64 %3576, 28
  %3592 = load i64, i64* %6, align 8
  %3593 = add i64 %3592, -8
  %3594 = inttoptr i64 %3593 to i64*
  store i64 %3591, i64* %3594, align 8
  store i64 %3593, i64* %6, align 8
  store i64 %3590, i64* %3, align 8
  %call2_401ce6 = tail call %struct.Memory* @sub_407530._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3590, %struct.Memory* %3539)
  %3595 = load i64, i64* %RBP.i, align 8
  %3596 = add i64 %3595, -68
  %3597 = load i64, i64* %3, align 8
  %3598 = add i64 %3597, 3
  store i64 %3598, i64* %3, align 8
  %3599 = inttoptr i64 %3596 to i32*
  %3600 = load i32, i32* %3599, align 4
  %3601 = zext i32 %3600 to i64
  store i64 %3601, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414453_type* @G__0x414453 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414453_type* @G__0x414453 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3602 = add i64 %3595, -312
  %3603 = add i64 %3597, 17
  store i64 %3603, i64* %3, align 8
  %3604 = inttoptr i64 %3602 to i64*
  %3605 = load i64, i64* %3604, align 8
  store i64 %3605, i64* %RDI.i4032.pre-phi, align 8
  %3606 = add i64 %3595, -248
  %3607 = add i64 %3597, 23
  store i64 %3607, i64* %3, align 8
  %3608 = inttoptr i64 %3606 to i32*
  %3609 = load i32, i32* %3608, align 4
  %3610 = zext i32 %3609 to i64
  store i64 %3610, i64* %RSI.i3037, align 8
  %3611 = add i64 %3597, 22757
  %3612 = add i64 %3597, 28
  %3613 = load i64, i64* %6, align 8
  %3614 = add i64 %3613, -8
  %3615 = inttoptr i64 %3614 to i64*
  store i64 %3612, i64* %3615, align 8
  store i64 %3614, i64* %6, align 8
  store i64 %3611, i64* %3, align 8
  %call2_401d02 = tail call %struct.Memory* @sub_4075d0._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3611, %struct.Memory* %call2_401ce6)
  %3616 = load i64, i64* %RBP.i, align 8
  %3617 = add i64 %3616, -68
  %3618 = load i64, i64* %3, align 8
  %3619 = add i64 %3618, 3
  store i64 %3619, i64* %3, align 8
  %3620 = inttoptr i64 %3617 to i32*
  %3621 = load i32, i32* %3620, align 4
  %3622 = zext i32 %3621 to i64
  store i64 %3622, i64* %RDX.i4024, align 8
  %3623 = add i64 %3616, -72
  %3624 = add i64 %3618, 6
  store i64 %3624, i64* %3, align 8
  %3625 = inttoptr i64 %3623 to i32*
  %3626 = load i32, i32* %3625, align 4
  %3627 = zext i32 %3626 to i64
  store i64 %3627, i64* %RCX.i4028, align 8
  %3628 = add i64 %3616, -76
  %3629 = add i64 %3618, 10
  store i64 %3629, i64* %3, align 8
  %3630 = inttoptr i64 %3628 to i32*
  %3631 = load i32, i32* %3630, align 4
  %3632 = zext i32 %3631 to i64
  store i64 %3632, i64* %250, align 8
  %3633 = add i64 %3616, -80
  %3634 = add i64 %3618, 14
  store i64 %3634, i64* %3, align 8
  %3635 = inttoptr i64 %3633 to i32*
  %3636 = load i32, i32* %3635, align 4
  %3637 = zext i32 %3636 to i64
  store i64 %3637, i64* %477, align 8
  %3638 = load i64, i64* %6, align 8
  store i64 %3638, i64* %RDI.i4032.pre-phi, align 8
  %3639 = add i64 %3618, 24
  store i64 %3639, i64* %3, align 8
  %3640 = inttoptr i64 %3638 to i64*
  store i64 4277361, i64* %3640, align 8
  %3641 = load i64, i64* %RBP.i, align 8
  %3642 = add i64 %3641, -312
  %3643 = load i64, i64* %3, align 8
  %3644 = add i64 %3643, 7
  store i64 %3644, i64* %3, align 8
  %3645 = inttoptr i64 %3642 to i64*
  %3646 = load i64, i64* %3645, align 8
  store i64 %3646, i64* %RDI.i4032.pre-phi, align 8
  %3647 = add i64 %3641, -248
  %3648 = add i64 %3643, 13
  store i64 %3648, i64* %3, align 8
  %3649 = inttoptr i64 %3647 to i32*
  %3650 = load i32, i32* %3649, align 4
  %3651 = zext i32 %3650 to i64
  store i64 %3651, i64* %RSI.i3037, align 8
  %3652 = add i64 %3643, 22881
  %3653 = add i64 %3643, 18
  %3654 = load i64, i64* %6, align 8
  %3655 = add i64 %3654, -8
  %3656 = inttoptr i64 %3655 to i64*
  store i64 %3653, i64* %3656, align 8
  store i64 %3655, i64* %6, align 8
  store i64 %3652, i64* %3, align 8
  %call2_401d2c = tail call %struct.Memory* @sub_407680._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3652, %struct.Memory* %call2_401d02)
  %3657 = load i64, i64* %RBP.i, align 8
  %3658 = add i64 %3657, -68
  %3659 = load i64, i64* %3, align 8
  %3660 = add i64 %3659, 3
  store i64 %3660, i64* %3, align 8
  %3661 = inttoptr i64 %3658 to i32*
  %3662 = load i32, i32* %3661, align 4
  %3663 = zext i32 %3662 to i64
  store i64 %3663, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414491_type* @G__0x414491 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414491_type* @G__0x414491 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3664 = add i64 %3657, -312
  %3665 = add i64 %3659, 17
  store i64 %3665, i64* %3, align 8
  %3666 = inttoptr i64 %3664 to i64*
  %3667 = load i64, i64* %3666, align 8
  store i64 %3667, i64* %RDI.i4032.pre-phi, align 8
  %3668 = add i64 %3657, -248
  %3669 = add i64 %3659, 23
  store i64 %3669, i64* %3, align 8
  %3670 = inttoptr i64 %3668 to i32*
  %3671 = load i32, i32* %3670, align 4
  %3672 = zext i32 %3671 to i64
  store i64 %3672, i64* %RSI.i3037, align 8
  %3673 = add i64 %3659, 23071
  %3674 = add i64 %3659, 28
  %3675 = load i64, i64* %6, align 8
  %3676 = add i64 %3675, -8
  %3677 = inttoptr i64 %3676 to i64*
  store i64 %3674, i64* %3677, align 8
  store i64 %3676, i64* %6, align 8
  store i64 %3673, i64* %3, align 8
  %call2_401d48 = tail call %struct.Memory* @sub_407750._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3673, %struct.Memory* %call2_401d2c)
  %3678 = load i64, i64* %RBP.i, align 8
  %3679 = add i64 %3678, -68
  %3680 = load i64, i64* %3, align 8
  %3681 = add i64 %3680, 3
  store i64 %3681, i64* %3, align 8
  %3682 = inttoptr i64 %3679 to i32*
  %3683 = load i32, i32* %3682, align 4
  %3684 = zext i32 %3683 to i64
  store i64 %3684, i64* %RDX.i4024, align 8
  %3685 = add i64 %3678, -72
  %3686 = add i64 %3680, 6
  store i64 %3686, i64* %3, align 8
  %3687 = inttoptr i64 %3685 to i32*
  %3688 = load i32, i32* %3687, align 4
  %3689 = zext i32 %3688 to i64
  store i64 %3689, i64* %RCX.i4028, align 8
  %3690 = add i64 %3678, -76
  %3691 = add i64 %3680, 10
  store i64 %3691, i64* %3, align 8
  %3692 = inttoptr i64 %3690 to i32*
  %3693 = load i32, i32* %3692, align 4
  %3694 = zext i32 %3693 to i64
  store i64 %3694, i64* %250, align 8
  %3695 = add i64 %3678, -80
  %3696 = add i64 %3680, 14
  store i64 %3696, i64* %3, align 8
  %3697 = inttoptr i64 %3695 to i32*
  %3698 = load i32, i32* %3697, align 4
  %3699 = zext i32 %3698 to i64
  store i64 %3699, i64* %477, align 8
  %3700 = load i64, i64* %6, align 8
  store i64 %3700, i64* %RDI.i4032.pre-phi, align 8
  %3701 = add i64 %3680, 24
  store i64 %3701, i64* %3, align 8
  %3702 = inttoptr i64 %3700 to i64*
  store i64 4277420, i64* %3702, align 8
  %3703 = load i64, i64* %RBP.i, align 8
  %3704 = add i64 %3703, -312
  %3705 = load i64, i64* %3, align 8
  %3706 = add i64 %3705, 7
  store i64 %3706, i64* %3, align 8
  %3707 = inttoptr i64 %3704 to i64*
  %3708 = load i64, i64* %3707, align 8
  store i64 %3708, i64* %RDI.i4032.pre-phi, align 8
  %3709 = add i64 %3703, -248
  %3710 = add i64 %3705, 13
  store i64 %3710, i64* %3, align 8
  %3711 = inttoptr i64 %3709 to i32*
  %3712 = load i32, i32* %3711, align 4
  %3713 = zext i32 %3712 to i64
  store i64 %3713, i64* %RSI.i3037, align 8
  %3714 = add i64 %3705, 23179
  %3715 = add i64 %3705, 18
  %3716 = load i64, i64* %6, align 8
  %3717 = add i64 %3716, -8
  %3718 = inttoptr i64 %3717 to i64*
  store i64 %3715, i64* %3718, align 8
  store i64 %3717, i64* %6, align 8
  store i64 %3714, i64* %3, align 8
  %call2_401d72 = tail call %struct.Memory* @sub_4077f0._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3714, %struct.Memory* %call2_401d48)
  %3719 = load i64, i64* %RBP.i, align 8
  %3720 = add i64 %3719, -68
  %3721 = load i64, i64* %3, align 8
  %3722 = add i64 %3721, 3
  store i64 %3722, i64* %3, align 8
  %3723 = inttoptr i64 %3720 to i32*
  %3724 = load i32, i32* %3723, align 4
  %3725 = zext i32 %3724 to i64
  store i64 %3725, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4144d1_type* @G__0x4144d1 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4144d1_type* @G__0x4144d1 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3726 = add i64 %3719, -312
  %3727 = add i64 %3721, 17
  store i64 %3727, i64* %3, align 8
  %3728 = inttoptr i64 %3726 to i64*
  %3729 = load i64, i64* %3728, align 8
  store i64 %3729, i64* %RDI.i4032.pre-phi, align 8
  %3730 = add i64 %3719, -248
  %3731 = add i64 %3721, 23
  store i64 %3731, i64* %3, align 8
  %3732 = inttoptr i64 %3730 to i32*
  %3733 = load i32, i32* %3732, align 4
  %3734 = zext i32 %3733 to i64
  store i64 %3734, i64* %RSI.i3037, align 8
  %3735 = add i64 %3721, 23369
  %3736 = add i64 %3721, 28
  %3737 = load i64, i64* %6, align 8
  %3738 = add i64 %3737, -8
  %3739 = inttoptr i64 %3738 to i64*
  store i64 %3736, i64* %3739, align 8
  store i64 %3738, i64* %6, align 8
  store i64 %3735, i64* %3, align 8
  %call2_401d8e = tail call %struct.Memory* @sub_4078c0._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3735, %struct.Memory* %call2_401d72)
  %3740 = load i64, i64* %RBP.i, align 8
  %3741 = add i64 %3740, -68
  %3742 = load i64, i64* %3, align 8
  %3743 = add i64 %3742, 3
  store i64 %3743, i64* %3, align 8
  %3744 = inttoptr i64 %3741 to i32*
  %3745 = load i32, i32* %3744, align 4
  %3746 = zext i32 %3745 to i64
  store i64 %3746, i64* %RDX.i4024, align 8
  %3747 = add i64 %3740, -72
  %3748 = add i64 %3742, 6
  store i64 %3748, i64* %3, align 8
  %3749 = inttoptr i64 %3747 to i32*
  %3750 = load i32, i32* %3749, align 4
  %3751 = zext i32 %3750 to i64
  store i64 %3751, i64* %RCX.i4028, align 8
  %3752 = add i64 %3740, -76
  %3753 = add i64 %3742, 10
  store i64 %3753, i64* %3, align 8
  %3754 = inttoptr i64 %3752 to i32*
  %3755 = load i32, i32* %3754, align 4
  %3756 = zext i32 %3755 to i64
  store i64 %3756, i64* %250, align 8
  %3757 = add i64 %3740, -80
  %3758 = add i64 %3742, 14
  store i64 %3758, i64* %3, align 8
  %3759 = inttoptr i64 %3757 to i32*
  %3760 = load i32, i32* %3759, align 4
  %3761 = zext i32 %3760 to i64
  store i64 %3761, i64* %477, align 8
  %3762 = load i64, i64* %6, align 8
  store i64 %3762, i64* %RDI.i4032.pre-phi, align 8
  %3763 = add i64 %3742, 24
  store i64 %3763, i64* %3, align 8
  %3764 = inttoptr i64 %3762 to i64*
  store i64 4277484, i64* %3764, align 8
  %3765 = load i64, i64* %RBP.i, align 8
  %3766 = add i64 %3765, -312
  %3767 = load i64, i64* %3, align 8
  %3768 = add i64 %3767, 7
  store i64 %3768, i64* %3, align 8
  %3769 = inttoptr i64 %3766 to i64*
  %3770 = load i64, i64* %3769, align 8
  store i64 %3770, i64* %RDI.i4032.pre-phi, align 8
  %3771 = add i64 %3765, -248
  %3772 = add i64 %3767, 13
  store i64 %3772, i64* %3, align 8
  %3773 = inttoptr i64 %3771 to i32*
  %3774 = load i32, i32* %3773, align 4
  %3775 = zext i32 %3774 to i64
  store i64 %3775, i64* %RSI.i3037, align 8
  %3776 = add i64 %3767, 23477
  %3777 = add i64 %3767, 18
  %3778 = load i64, i64* %6, align 8
  %3779 = add i64 %3778, -8
  %3780 = inttoptr i64 %3779 to i64*
  store i64 %3777, i64* %3780, align 8
  store i64 %3779, i64* %6, align 8
  store i64 %3776, i64* %3, align 8
  %call2_401db8 = tail call %struct.Memory* @sub_407960._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3776, %struct.Memory* %call2_401d8e)
  %3781 = load i64, i64* %RBP.i, align 8
  %3782 = add i64 %3781, -68
  %3783 = load i64, i64* %3, align 8
  %3784 = add i64 %3783, 3
  store i64 %3784, i64* %3, align 8
  %3785 = inttoptr i64 %3782 to i32*
  %3786 = load i32, i32* %3785, align 4
  %3787 = zext i32 %3786 to i64
  store i64 %3787, i64* %RDX.i4024, align 8
  %3788 = add i64 %3781, -72
  %3789 = add i64 %3783, 6
  store i64 %3789, i64* %3, align 8
  %3790 = inttoptr i64 %3788 to i32*
  %3791 = load i32, i32* %3790, align 4
  %3792 = zext i32 %3791 to i64
  store i64 %3792, i64* %RCX.i4028, align 8
  %3793 = add i64 %3781, -76
  %3794 = add i64 %3783, 10
  store i64 %3794, i64* %3, align 8
  %3795 = inttoptr i64 %3793 to i32*
  %3796 = load i32, i32* %3795, align 4
  %3797 = zext i32 %3796 to i64
  store i64 %3797, i64* %250, align 8
  %3798 = add i64 %3781, -80
  %3799 = add i64 %3783, 14
  store i64 %3799, i64* %3, align 8
  %3800 = inttoptr i64 %3798 to i32*
  %3801 = load i32, i32* %3800, align 4
  %3802 = zext i32 %3801 to i64
  store i64 %3802, i64* %477, align 8
  %3803 = load i64, i64* %6, align 8
  store i64 %3803, i64* %RDI.i4032.pre-phi, align 8
  %3804 = add i64 %3783, 24
  store i64 %3804, i64* %3, align 8
  %3805 = inttoptr i64 %3803 to i64*
  store i64 4277522, i64* %3805, align 8
  %3806 = load i64, i64* %RBP.i, align 8
  %3807 = add i64 %3806, -312
  %3808 = load i64, i64* %3, align 8
  %3809 = add i64 %3808, 7
  store i64 %3809, i64* %3, align 8
  %3810 = inttoptr i64 %3807 to i64*
  %3811 = load i64, i64* %3810, align 8
  store i64 %3811, i64* %RDI.i4032.pre-phi, align 8
  %3812 = add i64 %3806, -248
  %3813 = add i64 %3808, 13
  store i64 %3813, i64* %3, align 8
  %3814 = inttoptr i64 %3812 to i32*
  %3815 = load i32, i32* %3814, align 4
  %3816 = zext i32 %3815 to i64
  store i64 %3816, i64* %RSI.i3037, align 8
  %3817 = add i64 %3808, 23643
  %3818 = add i64 %3808, 18
  %3819 = load i64, i64* %6, align 8
  %3820 = add i64 %3819, -8
  %3821 = inttoptr i64 %3820 to i64*
  store i64 %3818, i64* %3821, align 8
  store i64 %3820, i64* %6, align 8
  store i64 %3817, i64* %3, align 8
  %call2_401de2 = tail call %struct.Memory* @sub_407a30._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3817, %struct.Memory* %call2_401db8)
  %3822 = load i64, i64* %RBP.i, align 8
  %3823 = add i64 %3822, -68
  %3824 = load i64, i64* %3, align 8
  %3825 = add i64 %3824, 3
  store i64 %3825, i64* %3, align 8
  %3826 = inttoptr i64 %3823 to i32*
  %3827 = load i32, i32* %3826, align 4
  %3828 = zext i32 %3827 to i64
  store i64 %3828, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414539_type* @G__0x414539 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414539_type* @G__0x414539 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3829 = add i64 %3822, -312
  %3830 = add i64 %3824, 17
  store i64 %3830, i64* %3, align 8
  %3831 = inttoptr i64 %3829 to i64*
  %3832 = load i64, i64* %3831, align 8
  store i64 %3832, i64* %RDI.i4032.pre-phi, align 8
  %3833 = add i64 %3822, -248
  %3834 = add i64 %3824, 23
  store i64 %3834, i64* %3, align 8
  %3835 = inttoptr i64 %3833 to i32*
  %3836 = load i32, i32* %3835, align 4
  %3837 = zext i32 %3836 to i64
  store i64 %3837, i64* %RSI.i3037, align 8
  %3838 = add i64 %3824, 23833
  %3839 = add i64 %3824, 28
  %3840 = load i64, i64* %6, align 8
  %3841 = add i64 %3840, -8
  %3842 = inttoptr i64 %3841 to i64*
  store i64 %3839, i64* %3842, align 8
  store i64 %3841, i64* %6, align 8
  store i64 %3838, i64* %3, align 8
  %call2_401dfe = tail call %struct.Memory* @sub_407b00._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3838, %struct.Memory* %call2_401de2)
  %3843 = load i64, i64* %RBP.i, align 8
  %3844 = add i64 %3843, -68
  %3845 = load i64, i64* %3, align 8
  %3846 = add i64 %3845, 3
  store i64 %3846, i64* %3, align 8
  %3847 = inttoptr i64 %3844 to i32*
  %3848 = load i32, i32* %3847, align 4
  %3849 = zext i32 %3848 to i64
  store i64 %3849, i64* %RDX.i4024, align 8
  %3850 = add i64 %3843, -72
  %3851 = add i64 %3845, 6
  store i64 %3851, i64* %3, align 8
  %3852 = inttoptr i64 %3850 to i32*
  %3853 = load i32, i32* %3852, align 4
  %3854 = zext i32 %3853 to i64
  store i64 %3854, i64* %RCX.i4028, align 8
  %3855 = add i64 %3843, -76
  %3856 = add i64 %3845, 10
  store i64 %3856, i64* %3, align 8
  %3857 = inttoptr i64 %3855 to i32*
  %3858 = load i32, i32* %3857, align 4
  %3859 = zext i32 %3858 to i64
  store i64 %3859, i64* %250, align 8
  %3860 = add i64 %3843, -80
  %3861 = add i64 %3845, 14
  store i64 %3861, i64* %3, align 8
  %3862 = inttoptr i64 %3860 to i32*
  %3863 = load i32, i32* %3862, align 4
  %3864 = zext i32 %3863 to i64
  store i64 %3864, i64* %477, align 8
  %3865 = load i64, i64* %6, align 8
  store i64 %3865, i64* %RDI.i4032.pre-phi, align 8
  %3866 = add i64 %3845, 24
  store i64 %3866, i64* %3, align 8
  %3867 = inttoptr i64 %3865 to i64*
  store i64 4277586, i64* %3867, align 8
  %3868 = load i64, i64* %RBP.i, align 8
  %3869 = add i64 %3868, -312
  %3870 = load i64, i64* %3, align 8
  %3871 = add i64 %3870, 7
  store i64 %3871, i64* %3, align 8
  %3872 = inttoptr i64 %3869 to i64*
  %3873 = load i64, i64* %3872, align 8
  store i64 %3873, i64* %RDI.i4032.pre-phi, align 8
  %3874 = add i64 %3868, -248
  %3875 = add i64 %3870, 13
  store i64 %3875, i64* %3, align 8
  %3876 = inttoptr i64 %3874 to i32*
  %3877 = load i32, i32* %3876, align 4
  %3878 = zext i32 %3877 to i64
  store i64 %3878, i64* %RSI.i3037, align 8
  %3879 = add i64 %3870, 23941
  %3880 = add i64 %3870, 18
  %3881 = load i64, i64* %6, align 8
  %3882 = add i64 %3881, -8
  %3883 = inttoptr i64 %3882 to i64*
  store i64 %3880, i64* %3883, align 8
  store i64 %3882, i64* %6, align 8
  store i64 %3879, i64* %3, align 8
  %call2_401e28 = tail call %struct.Memory* @sub_407ba0._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3879, %struct.Memory* %call2_401dfe)
  %3884 = load i64, i64* %RBP.i, align 8
  %3885 = add i64 %3884, -68
  %3886 = load i64, i64* %3, align 8
  %3887 = add i64 %3886, 3
  store i64 %3887, i64* %3, align 8
  %3888 = inttoptr i64 %3885 to i32*
  %3889 = load i32, i32* %3888, align 4
  %3890 = zext i32 %3889 to i64
  store i64 %3890, i64* %RDX.i4024, align 8
  %3891 = add i64 %3884, -72
  %3892 = add i64 %3886, 6
  store i64 %3892, i64* %3, align 8
  %3893 = inttoptr i64 %3891 to i32*
  %3894 = load i32, i32* %3893, align 4
  %3895 = zext i32 %3894 to i64
  store i64 %3895, i64* %RCX.i4028, align 8
  %3896 = add i64 %3884, -76
  %3897 = add i64 %3886, 10
  store i64 %3897, i64* %3, align 8
  %3898 = inttoptr i64 %3896 to i32*
  %3899 = load i32, i32* %3898, align 4
  %3900 = zext i32 %3899 to i64
  store i64 %3900, i64* %250, align 8
  %3901 = add i64 %3884, -80
  %3902 = add i64 %3886, 14
  store i64 %3902, i64* %3, align 8
  %3903 = inttoptr i64 %3901 to i32*
  %3904 = load i32, i32* %3903, align 4
  %3905 = zext i32 %3904 to i64
  store i64 %3905, i64* %477, align 8
  %3906 = load i64, i64* %6, align 8
  store i64 %3906, i64* %RDI.i4032.pre-phi, align 8
  %3907 = add i64 %3886, 24
  store i64 %3907, i64* %3, align 8
  %3908 = inttoptr i64 %3906 to i64*
  store i64 4277621, i64* %3908, align 8
  %3909 = load i64, i64* %RBP.i, align 8
  %3910 = add i64 %3909, -312
  %3911 = load i64, i64* %3, align 8
  %3912 = add i64 %3911, 7
  store i64 %3912, i64* %3, align 8
  %3913 = inttoptr i64 %3910 to i64*
  %3914 = load i64, i64* %3913, align 8
  store i64 %3914, i64* %RDI.i4032.pre-phi, align 8
  %3915 = add i64 %3909, -248
  %3916 = add i64 %3911, 13
  store i64 %3916, i64* %3, align 8
  %3917 = inttoptr i64 %3915 to i32*
  %3918 = load i32, i32* %3917, align 4
  %3919 = zext i32 %3918 to i64
  store i64 %3919, i64* %RSI.i3037, align 8
  %3920 = add i64 %3911, 24107
  %3921 = add i64 %3911, 18
  %3922 = load i64, i64* %6, align 8
  %3923 = add i64 %3922, -8
  %3924 = inttoptr i64 %3923 to i64*
  store i64 %3921, i64* %3924, align 8
  store i64 %3923, i64* %6, align 8
  store i64 %3920, i64* %3, align 8
  %call2_401e52 = tail call %struct.Memory* @sub_407c70._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3920, %struct.Memory* %call2_401e28)
  %3925 = load i64, i64* %RBP.i, align 8
  %3926 = add i64 %3925, -68
  %3927 = load i64, i64* %3, align 8
  %3928 = add i64 %3927, 3
  store i64 %3928, i64* %3, align 8
  %3929 = inttoptr i64 %3926 to i32*
  %3930 = load i32, i32* %3929, align 4
  %3931 = zext i32 %3930 to i64
  store i64 %3931, i64* %RDX.i4024, align 8
  %3932 = add i64 %3925, -72
  %3933 = add i64 %3927, 6
  store i64 %3933, i64* %3, align 8
  %3934 = inttoptr i64 %3932 to i32*
  %3935 = load i32, i32* %3934, align 4
  %3936 = zext i32 %3935 to i64
  store i64 %3936, i64* %RCX.i4028, align 8
  %3937 = add i64 %3925, -76
  %3938 = add i64 %3927, 10
  store i64 %3938, i64* %3, align 8
  %3939 = inttoptr i64 %3937 to i32*
  %3940 = load i32, i32* %3939, align 4
  %3941 = zext i32 %3940 to i64
  store i64 %3941, i64* %250, align 8
  %3942 = add i64 %3925, -80
  %3943 = add i64 %3927, 14
  store i64 %3943, i64* %3, align 8
  %3944 = inttoptr i64 %3942 to i32*
  %3945 = load i32, i32* %3944, align 4
  %3946 = zext i32 %3945 to i64
  store i64 %3946, i64* %477, align 8
  %3947 = load i64, i64* %6, align 8
  store i64 %3947, i64* %RDI.i4032.pre-phi, align 8
  %3948 = add i64 %3927, 24
  store i64 %3948, i64* %3, align 8
  %3949 = inttoptr i64 %3947 to i64*
  store i64 4277657, i64* %3949, align 8
  %3950 = load i64, i64* %RBP.i, align 8
  %3951 = add i64 %3950, -312
  %3952 = load i64, i64* %3, align 8
  %3953 = add i64 %3952, 7
  store i64 %3953, i64* %3, align 8
  %3954 = inttoptr i64 %3951 to i64*
  %3955 = load i64, i64* %3954, align 8
  store i64 %3955, i64* %RDI.i4032.pre-phi, align 8
  %3956 = add i64 %3950, -248
  %3957 = add i64 %3952, 13
  store i64 %3957, i64* %3, align 8
  %3958 = inttoptr i64 %3956 to i32*
  %3959 = load i32, i32* %3958, align 4
  %3960 = zext i32 %3959 to i64
  store i64 %3960, i64* %RSI.i3037, align 8
  %3961 = add i64 %3952, 24273
  %3962 = add i64 %3952, 18
  %3963 = load i64, i64* %6, align 8
  %3964 = add i64 %3963, -8
  %3965 = inttoptr i64 %3964 to i64*
  store i64 %3962, i64* %3965, align 8
  store i64 %3964, i64* %6, align 8
  store i64 %3961, i64* %3, align 8
  %call2_401e7c = tail call %struct.Memory* @sub_407d40._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %3961, %struct.Memory* %call2_401e52)
  %3966 = load i64, i64* %RBP.i, align 8
  %3967 = add i64 %3966, -68
  %3968 = load i64, i64* %3, align 8
  %3969 = add i64 %3968, 3
  store i64 %3969, i64* %3, align 8
  %3970 = inttoptr i64 %3967 to i32*
  %3971 = load i32, i32* %3970, align 4
  %3972 = zext i32 %3971 to i64
  store i64 %3972, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ba_type* @G__0x4145ba to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4145ba_type* @G__0x4145ba to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %3973 = add i64 %3966, -312
  %3974 = add i64 %3968, 17
  store i64 %3974, i64* %3, align 8
  %3975 = inttoptr i64 %3973 to i64*
  %3976 = load i64, i64* %3975, align 8
  store i64 %3976, i64* %RDI.i4032.pre-phi, align 8
  %3977 = add i64 %3966, -248
  %3978 = add i64 %3968, 23
  store i64 %3978, i64* %3, align 8
  %3979 = inttoptr i64 %3977 to i32*
  %3980 = load i32, i32* %3979, align 4
  %3981 = zext i32 %3980 to i64
  store i64 %3981, i64* %RSI.i3037, align 8
  %3982 = add i64 %3968, 24463
  %3983 = add i64 %3968, 28
  %3984 = load i64, i64* %6, align 8
  %3985 = add i64 %3984, -8
  %3986 = inttoptr i64 %3985 to i64*
  store i64 %3983, i64* %3986, align 8
  store i64 %3985, i64* %6, align 8
  store i64 %3982, i64* %3, align 8
  %call2_401e98 = tail call %struct.Memory* @sub_407e10._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %3982, %struct.Memory* %call2_401e7c)
  %3987 = load i64, i64* %RBP.i, align 8
  %3988 = add i64 %3987, -68
  %3989 = load i64, i64* %3, align 8
  %3990 = add i64 %3989, 3
  store i64 %3990, i64* %3, align 8
  %3991 = inttoptr i64 %3988 to i32*
  %3992 = load i32, i32* %3991, align 4
  %3993 = zext i32 %3992 to i64
  store i64 %3993, i64* %RDX.i4024, align 8
  %3994 = add i64 %3987, -72
  %3995 = add i64 %3989, 6
  store i64 %3995, i64* %3, align 8
  %3996 = inttoptr i64 %3994 to i32*
  %3997 = load i32, i32* %3996, align 4
  %3998 = zext i32 %3997 to i64
  store i64 %3998, i64* %RCX.i4028, align 8
  %3999 = add i64 %3987, -76
  %4000 = add i64 %3989, 10
  store i64 %4000, i64* %3, align 8
  %4001 = inttoptr i64 %3999 to i32*
  %4002 = load i32, i32* %4001, align 4
  %4003 = zext i32 %4002 to i64
  store i64 %4003, i64* %250, align 8
  %4004 = add i64 %3987, -80
  %4005 = add i64 %3989, 14
  store i64 %4005, i64* %3, align 8
  %4006 = inttoptr i64 %4004 to i32*
  %4007 = load i32, i32* %4006, align 4
  %4008 = zext i32 %4007 to i64
  store i64 %4008, i64* %477, align 8
  %4009 = load i64, i64* %6, align 8
  store i64 %4009, i64* %RDI.i4032.pre-phi, align 8
  %4010 = add i64 %3989, 24
  store i64 %4010, i64* %3, align 8
  %4011 = inttoptr i64 %4009 to i64*
  store i64 4277712, i64* %4011, align 8
  %4012 = load i64, i64* %RBP.i, align 8
  %4013 = add i64 %4012, -312
  %4014 = load i64, i64* %3, align 8
  %4015 = add i64 %4014, 7
  store i64 %4015, i64* %3, align 8
  %4016 = inttoptr i64 %4013 to i64*
  %4017 = load i64, i64* %4016, align 8
  store i64 %4017, i64* %RDI.i4032.pre-phi, align 8
  %4018 = add i64 %4012, -248
  %4019 = add i64 %4014, 13
  store i64 %4019, i64* %3, align 8
  %4020 = inttoptr i64 %4018 to i32*
  %4021 = load i32, i32* %4020, align 4
  %4022 = zext i32 %4021 to i64
  store i64 %4022, i64* %RSI.i3037, align 8
  %4023 = add i64 %4014, 24571
  %4024 = add i64 %4014, 18
  %4025 = load i64, i64* %6, align 8
  %4026 = add i64 %4025, -8
  %4027 = inttoptr i64 %4026 to i64*
  store i64 %4024, i64* %4027, align 8
  store i64 %4026, i64* %6, align 8
  store i64 %4023, i64* %3, align 8
  %call2_401ec2 = tail call %struct.Memory* @sub_407eb0._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4023, %struct.Memory* %call2_401e98)
  %4028 = load i64, i64* %RBP.i, align 8
  %4029 = add i64 %4028, -68
  %4030 = load i64, i64* %3, align 8
  %4031 = add i64 %4030, 3
  store i64 %4031, i64* %3, align 8
  %4032 = inttoptr i64 %4029 to i32*
  %4033 = load i32, i32* %4032, align 4
  %4034 = zext i32 %4033 to i64
  store i64 %4034, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ef_type* @G__0x4145ef to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4145ef_type* @G__0x4145ef to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4035 = add i64 %4028, -312
  %4036 = add i64 %4030, 17
  store i64 %4036, i64* %3, align 8
  %4037 = inttoptr i64 %4035 to i64*
  %4038 = load i64, i64* %4037, align 8
  store i64 %4038, i64* %RDI.i4032.pre-phi, align 8
  %4039 = add i64 %4028, -248
  %4040 = add i64 %4030, 23
  store i64 %4040, i64* %3, align 8
  %4041 = inttoptr i64 %4039 to i32*
  %4042 = load i32, i32* %4041, align 4
  %4043 = zext i32 %4042 to i64
  store i64 %4043, i64* %RSI.i3037, align 8
  %4044 = add i64 %4030, 24761
  %4045 = add i64 %4030, 28
  %4046 = load i64, i64* %6, align 8
  %4047 = add i64 %4046, -8
  %4048 = inttoptr i64 %4047 to i64*
  store i64 %4045, i64* %4048, align 8
  store i64 %4047, i64* %6, align 8
  store i64 %4044, i64* %3, align 8
  %call2_401ede = tail call %struct.Memory* @sub_407f80._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4044, %struct.Memory* %call2_401ec2)
  %4049 = load i64, i64* %RBP.i, align 8
  %4050 = add i64 %4049, -68
  %4051 = load i64, i64* %3, align 8
  %4052 = add i64 %4051, 3
  store i64 %4052, i64* %3, align 8
  %4053 = inttoptr i64 %4050 to i32*
  %4054 = load i32, i32* %4053, align 4
  %4055 = zext i32 %4054 to i64
  store i64 %4055, i64* %RDX.i4024, align 8
  %4056 = add i64 %4049, -72
  %4057 = add i64 %4051, 6
  store i64 %4057, i64* %3, align 8
  %4058 = inttoptr i64 %4056 to i32*
  %4059 = load i32, i32* %4058, align 4
  %4060 = zext i32 %4059 to i64
  store i64 %4060, i64* %RCX.i4028, align 8
  %4061 = add i64 %4049, -76
  %4062 = add i64 %4051, 10
  store i64 %4062, i64* %3, align 8
  %4063 = inttoptr i64 %4061 to i32*
  %4064 = load i32, i32* %4063, align 4
  %4065 = zext i32 %4064 to i64
  store i64 %4065, i64* %250, align 8
  %4066 = add i64 %4049, -80
  %4067 = add i64 %4051, 14
  store i64 %4067, i64* %3, align 8
  %4068 = inttoptr i64 %4066 to i32*
  %4069 = load i32, i32* %4068, align 4
  %4070 = zext i32 %4069 to i64
  store i64 %4070, i64* %477, align 8
  %4071 = load i64, i64* %6, align 8
  store i64 %4071, i64* %RDI.i4032.pre-phi, align 8
  %4072 = add i64 %4051, 24
  store i64 %4072, i64* %3, align 8
  %4073 = inttoptr i64 %4071 to i64*
  store i64 4277764, i64* %4073, align 8
  %4074 = load i64, i64* %RBP.i, align 8
  %4075 = add i64 %4074, -312
  %4076 = load i64, i64* %3, align 8
  %4077 = add i64 %4076, 7
  store i64 %4077, i64* %3, align 8
  %4078 = inttoptr i64 %4075 to i64*
  %4079 = load i64, i64* %4078, align 8
  store i64 %4079, i64* %RDI.i4032.pre-phi, align 8
  %4080 = add i64 %4074, -248
  %4081 = add i64 %4076, 13
  store i64 %4081, i64* %3, align 8
  %4082 = inttoptr i64 %4080 to i32*
  %4083 = load i32, i32* %4082, align 4
  %4084 = zext i32 %4083 to i64
  store i64 %4084, i64* %RSI.i3037, align 8
  %4085 = add i64 %4076, 24869
  %4086 = add i64 %4076, 18
  %4087 = load i64, i64* %6, align 8
  %4088 = add i64 %4087, -8
  %4089 = inttoptr i64 %4088 to i64*
  store i64 %4086, i64* %4089, align 8
  store i64 %4088, i64* %6, align 8
  store i64 %4085, i64* %3, align 8
  %call2_401f08 = tail call %struct.Memory* @sub_408020._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4085, %struct.Memory* %call2_401ede)
  %4090 = load i64, i64* %RBP.i, align 8
  %4091 = add i64 %4090, -68
  %4092 = load i64, i64* %3, align 8
  %4093 = add i64 %4092, 3
  store i64 %4093, i64* %3, align 8
  %4094 = inttoptr i64 %4091 to i32*
  %4095 = load i32, i32* %4094, align 4
  %4096 = zext i32 %4095 to i64
  store i64 %4096, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414622_type* @G__0x414622 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414622_type* @G__0x414622 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4097 = add i64 %4090, -312
  %4098 = add i64 %4092, 17
  store i64 %4098, i64* %3, align 8
  %4099 = inttoptr i64 %4097 to i64*
  %4100 = load i64, i64* %4099, align 8
  store i64 %4100, i64* %RDI.i4032.pre-phi, align 8
  %4101 = add i64 %4090, -248
  %4102 = add i64 %4092, 23
  store i64 %4102, i64* %3, align 8
  %4103 = inttoptr i64 %4101 to i32*
  %4104 = load i32, i32* %4103, align 4
  %4105 = zext i32 %4104 to i64
  store i64 %4105, i64* %RSI.i3037, align 8
  %4106 = add i64 %4092, 25059
  %4107 = add i64 %4092, 28
  %4108 = load i64, i64* %6, align 8
  %4109 = add i64 %4108, -8
  %4110 = inttoptr i64 %4109 to i64*
  store i64 %4107, i64* %4110, align 8
  store i64 %4109, i64* %6, align 8
  store i64 %4106, i64* %3, align 8
  %call2_401f24 = tail call %struct.Memory* @sub_4080f0._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4106, %struct.Memory* %call2_401f08)
  %4111 = load i64, i64* %RBP.i, align 8
  %4112 = add i64 %4111, -68
  %4113 = load i64, i64* %3, align 8
  %4114 = add i64 %4113, 3
  store i64 %4114, i64* %3, align 8
  %4115 = inttoptr i64 %4112 to i32*
  %4116 = load i32, i32* %4115, align 4
  %4117 = zext i32 %4116 to i64
  store i64 %4117, i64* %RDX.i4024, align 8
  %4118 = add i64 %4111, -72
  %4119 = add i64 %4113, 6
  store i64 %4119, i64* %3, align 8
  %4120 = inttoptr i64 %4118 to i32*
  %4121 = load i32, i32* %4120, align 4
  %4122 = zext i32 %4121 to i64
  store i64 %4122, i64* %RCX.i4028, align 8
  %4123 = add i64 %4111, -76
  %4124 = add i64 %4113, 10
  store i64 %4124, i64* %3, align 8
  %4125 = inttoptr i64 %4123 to i32*
  %4126 = load i32, i32* %4125, align 4
  %4127 = zext i32 %4126 to i64
  store i64 %4127, i64* %250, align 8
  %4128 = add i64 %4111, -80
  %4129 = add i64 %4113, 14
  store i64 %4129, i64* %3, align 8
  %4130 = inttoptr i64 %4128 to i32*
  %4131 = load i32, i32* %4130, align 4
  %4132 = zext i32 %4131 to i64
  store i64 %4132, i64* %477, align 8
  %4133 = load i64, i64* %6, align 8
  store i64 %4133, i64* %RDI.i4032.pre-phi, align 8
  %4134 = add i64 %4113, 24
  store i64 %4134, i64* %3, align 8
  %4135 = inttoptr i64 %4133 to i64*
  store i64 4277816, i64* %4135, align 8
  %4136 = load i64, i64* %RBP.i, align 8
  %4137 = add i64 %4136, -312
  %4138 = load i64, i64* %3, align 8
  %4139 = add i64 %4138, 7
  store i64 %4139, i64* %3, align 8
  %4140 = inttoptr i64 %4137 to i64*
  %4141 = load i64, i64* %4140, align 8
  store i64 %4141, i64* %RDI.i4032.pre-phi, align 8
  %4142 = add i64 %4136, -248
  %4143 = add i64 %4138, 13
  store i64 %4143, i64* %3, align 8
  %4144 = inttoptr i64 %4142 to i32*
  %4145 = load i32, i32* %4144, align 4
  %4146 = zext i32 %4145 to i64
  store i64 %4146, i64* %RSI.i3037, align 8
  %4147 = add i64 %4138, 25167
  %4148 = add i64 %4138, 18
  %4149 = load i64, i64* %6, align 8
  %4150 = add i64 %4149, -8
  %4151 = inttoptr i64 %4150 to i64*
  store i64 %4148, i64* %4151, align 8
  store i64 %4150, i64* %6, align 8
  store i64 %4147, i64* %3, align 8
  %call2_401f4e = tail call %struct.Memory* @sub_408190._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4147, %struct.Memory* %call2_401f24)
  %4152 = load i64, i64* %3, align 8
  %4153 = add i64 %4152, 2195765
  %4154 = add i64 %4152, 9
  store i64 %4154, i64* %3, align 8
  %4155 = inttoptr i64 %4153 to double*
  %4156 = load double, double* %4155, align 8
  %4157 = tail call double @llvm.trunc.f64(double %4156)
  %4158 = tail call double @llvm.fabs.f64(double %4157)
  %4159 = fcmp ogt double %4158, 0x43E0000000000000
  %4160 = fptosi double %4157 to i64
  %.op = and i64 %4160, 4294967295
  %4161 = select i1 %4159, i64 0, i64 %.op
  store i64 %4161, i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295), i64* %RCX.i4028, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %4162 = load i64, i64* %RBP.i, align 8
  %4163 = add i64 %4162, -328
  %4164 = add i64 %4152, 32
  store i64 %4164, i64* %3, align 8
  %4165 = inttoptr i64 %4163 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295) to i32) to i64), i64* %4165, align 8
  %4166 = load i32, i32* %EAX.i4011, align 4
  %4167 = zext i32 %4166 to i64
  %4168 = load i64, i64* %3, align 8
  store i64 %4167, i64* %RDX.i4024, align 8
  %4169 = add i64 %4168, 25325
  %4170 = add i64 %4168, 7
  %4171 = load i64, i64* %6, align 8
  %4172 = add i64 %4171, -8
  %4173 = inttoptr i64 %4172 to i64*
  store i64 %4170, i64* %4173, align 8
  store i64 %4172, i64* %6, align 8
  store i64 %4169, i64* %3, align 8
  %call2_401f75 = tail call %struct.Memory* @sub_408260._Z4fillIPjjEvT_S1_T0_(%struct.State* nonnull %0, i64 %4169, %struct.Memory* %call2_401f4e)
  %4174 = load i64, i64* %RBP.i, align 8
  %4175 = add i64 %4174, -40
  %4176 = load i64, i64* %3, align 8
  %4177 = add i64 %4176, 6
  store i64 %4177, i64* %3, align 8
  %4178 = inttoptr i64 %4175 to double*
  %4179 = load double, double* %4178, align 8
  %4180 = tail call double @llvm.trunc.f64(double %4179)
  %4181 = tail call double @llvm.fabs.f64(double %4180)
  %4182 = fcmp ogt double %4181, 0x43E0000000000000
  %4183 = fptosi double %4180 to i64
  %4184 = select i1 %4182, i64 -9223372036854775808, i64 %4183
  store i64 %4184, i64* %RSI.i3037, align 8
  %4185 = trunc i64 %4184 to i32
  %4186 = and i64 %4184, 4294967295
  store i64 %4186, i64* %RAX.i4026, align 8
  %4187 = add i64 %4174, -84
  %4188 = add i64 %4176, 11
  store i64 %4188, i64* %3, align 8
  %4189 = inttoptr i64 %4187 to i32*
  store i32 %4185, i32* %4189, align 4
  %4190 = load i64, i64* %RBP.i, align 8
  %4191 = add i64 %4190, -84
  %4192 = load i64, i64* %3, align 8
  %4193 = add i64 %4192, 3
  store i64 %4193, i64* %3, align 8
  %4194 = inttoptr i64 %4191 to i32*
  %4195 = load i32, i32* %4194, align 4
  %4196 = shl i32 %4195, 1
  %4197 = zext i32 %4196 to i64
  store i64 %4197, i64* %RAX.i4026, align 8
  %4198 = icmp ult i32 %4196, %4195
  %4199 = zext i1 %4198 to i8
  store i8 %4199, i8* %26, align 1
  %4200 = and i32 %4196, 254
  %4201 = tail call i32 @llvm.ctpop.i32(i32 %4200)
  %4202 = trunc i32 %4201 to i8
  %4203 = and i8 %4202, 1
  %4204 = xor i8 %4203, 1
  store i8 %4204, i8* %33, align 1
  %4205 = lshr i32 %4195, 3
  %4206 = trunc i32 %4205 to i8
  %4207 = and i8 %4206, 1
  store i8 %4207, i8* %39, align 1
  %4208 = icmp eq i32 %4196, 0
  %4209 = zext i1 %4208 to i8
  store i8 %4209, i8* %42, align 1
  %4210 = lshr i32 %4195, 30
  %4211 = and i32 %4210, 1
  %4212 = trunc i32 %4211 to i8
  store i8 %4212, i8* %45, align 1
  %4213 = lshr i32 %4195, 31
  %4214 = xor i32 %4211, %4213
  %4215 = trunc i32 %4214 to i8
  store i8 %4215, i8* %51, align 1
  %4216 = add i64 %4190, -88
  %4217 = add i64 %4192, 8
  store i64 %4217, i64* %3, align 8
  %4218 = inttoptr i64 %4216 to i32*
  store i32 %4196, i32* %4218, align 4
  %4219 = load i64, i64* %RBP.i, align 8
  %4220 = add i64 %4219, -84
  %4221 = load i64, i64* %3, align 8
  %4222 = add i64 %4221, 3
  store i64 %4222, i64* %3, align 8
  %4223 = inttoptr i64 %4220 to i32*
  %4224 = load i32, i32* %4223, align 4
  %4225 = add i32 %4224, 2
  %4226 = zext i32 %4225 to i64
  store i64 %4226, i64* %RAX.i4026, align 8
  %4227 = icmp ugt i32 %4224, -3
  %4228 = zext i1 %4227 to i8
  store i8 %4228, i8* %26, align 1
  %4229 = and i32 %4225, 255
  %4230 = tail call i32 @llvm.ctpop.i32(i32 %4229)
  %4231 = trunc i32 %4230 to i8
  %4232 = and i8 %4231, 1
  %4233 = xor i8 %4232, 1
  store i8 %4233, i8* %33, align 1
  %4234 = xor i32 %4225, %4224
  %4235 = lshr i32 %4234, 4
  %4236 = trunc i32 %4235 to i8
  %4237 = and i8 %4236, 1
  store i8 %4237, i8* %39, align 1
  %4238 = icmp eq i32 %4225, 0
  %4239 = zext i1 %4238 to i8
  store i8 %4239, i8* %42, align 1
  %4240 = lshr i32 %4225, 31
  %4241 = trunc i32 %4240 to i8
  store i8 %4241, i8* %45, align 1
  %4242 = lshr i32 %4224, 31
  %4243 = xor i32 %4240, %4242
  %4244 = add nuw nsw i32 %4243, %4240
  %4245 = icmp eq i32 %4244, 2
  %4246 = zext i1 %4245 to i8
  store i8 %4246, i8* %51, align 1
  %4247 = add i64 %4219, -92
  %4248 = add i64 %4221, 9
  store i64 %4248, i64* %3, align 8
  %4249 = inttoptr i64 %4247 to i32*
  store i32 %4225, i32* %4249, align 4
  %4250 = load i64, i64* %RBP.i, align 8
  %4251 = add i64 %4250, -84
  %4252 = load i64, i64* %3, align 8
  %4253 = add i64 %4252, 3
  store i64 %4253, i64* %3, align 8
  %4254 = inttoptr i64 %4251 to i32*
  %4255 = load i32, i32* %4254, align 4
  %4256 = zext i32 %4255 to i64
  store i64 %4256, i64* %RAX.i4026, align 8
  %4257 = add i64 %4250, -88
  %4258 = add i64 %4252, 6
  store i64 %4258, i64* %3, align 8
  %4259 = inttoptr i64 %4257 to i32*
  %4260 = load i32, i32* %4259, align 4
  %4261 = zext i32 %4260 to i64
  store i64 %4261, i64* %RCX.i4028, align 8
  %4262 = add i64 %4250, -92
  %4263 = add i64 %4252, 9
  store i64 %4263, i64* %3, align 8
  %4264 = inttoptr i64 %4262 to i32*
  %4265 = load i32, i32* %4264, align 4
  %4266 = zext i32 %4265 to i64
  store i64 %4266, i64* %RDX.i4024, align 8
  %4267 = add i64 %4250, -332
  %4268 = add i64 %4252, 15
  store i64 %4268, i64* %3, align 8
  %4269 = inttoptr i64 %4267 to i32*
  store i32 %4255, i32* %4269, align 4
  %4270 = load i32, i32* %ECX.i3562, align 4
  %4271 = zext i32 %4270 to i64
  %4272 = load i64, i64* %3, align 8
  store i64 %4271, i64* %RAX.i4026, align 8
  %4273 = load i64, i64* %RBP.i, align 8
  %4274 = add i64 %4273, -268
  %4275 = add i64 %4272, 8
  store i64 %4275, i64* %3, align 8
  %4276 = inttoptr i64 %4274 to i32*
  %4277 = load i32, i32* %4276, align 4
  %4278 = zext i32 %4277 to i64
  store i64 %4278, i64* %RCX.i4028, align 8
  %4279 = add i64 %4273, -336
  %4280 = load i32, i32* %EDX.i4021, align 4
  %4281 = add i64 %4272, 14
  store i64 %4281, i64* %3, align 8
  %4282 = inttoptr i64 %4279 to i32*
  store i32 %4280, i32* %4282, align 4
  %4283 = load i32, i32* %ECX.i3562, align 4
  %4284 = zext i32 %4283 to i64
  %4285 = load i64, i64* %3, align 8
  store i64 %4284, i64* %RDX.i4024, align 8
  %4286 = load i64, i64* %RBP.i, align 8
  %4287 = add i64 %4286, -336
  %4288 = add i64 %4285, 9
  store i64 %4288, i64* %3, align 8
  %4289 = inttoptr i64 %4287 to i32*
  %4290 = load i32, i32* %4289, align 4
  %4291 = zext i32 %4290 to i64
  store i64 %4291, i64* %250, align 8
  %4292 = add i64 %4285, 12
  store i64 %4292, i64* %3, align 8
  %4293 = load i32, i32* %EAX.i4011, align 8
  %4294 = zext i32 %4293 to i64
  %4295 = shl nuw i64 %4284, 32
  %4296 = or i64 %4295, %4294
  %4297 = udiv i64 %4296, %4291
  %4298 = and i64 %4297, 4294967295
  %4299 = icmp eq i64 %4297, %4298
  br i1 %4299, label %4302, label %4300

; <label>:4300:                                   ; preds = %routine_idivl__ecx.exit
  %4301 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %4292, %struct.Memory* %call2_401f75)
  %.pre22 = load i64, i64* %RBP.i, align 8
  %.pre23 = load i64, i64* %3, align 8
  %.pre24 = load i32, i32* %EAX.i4011, align 4
  br label %routine_divl__r8d.exit

; <label>:4302:                                   ; preds = %routine_idivl__ecx.exit
  %4303 = urem i64 %4296, %4291
  store i64 %4297, i64* %RAX.i4026, align 8
  store i64 %4303, i64* %RDX.i4024, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %4304 = trunc i64 %4297 to i32
  br label %routine_divl__r8d.exit

routine_divl__r8d.exit:                           ; preds = %4302, %4300
  %4305 = phi i32 [ %.pre24, %4300 ], [ %4304, %4302 ]
  %4306 = phi i64 [ %.pre23, %4300 ], [ %4292, %4302 ]
  %4307 = phi i64 [ %.pre22, %4300 ], [ %4286, %4302 ]
  %4308 = phi %struct.Memory* [ %4301, %4300 ], [ %call2_401f75, %4302 ]
  %4309 = add i64 %4307, -332
  %4310 = add i64 %4306, 6
  store i64 %4310, i64* %3, align 8
  %4311 = inttoptr i64 %4309 to i32*
  %4312 = load i32, i32* %4311, align 4
  %4313 = add i32 %4305, %4312
  %4314 = zext i32 %4313 to i64
  store i64 %4314, i64* %RDX.i4024, align 8
  %4315 = icmp ult i32 %4313, %4312
  %4316 = icmp ult i32 %4313, %4305
  %4317 = or i1 %4315, %4316
  %4318 = zext i1 %4317 to i8
  store i8 %4318, i8* %26, align 1
  %4319 = and i32 %4313, 255
  %4320 = tail call i32 @llvm.ctpop.i32(i32 %4319)
  %4321 = trunc i32 %4320 to i8
  %4322 = and i8 %4321, 1
  %4323 = xor i8 %4322, 1
  store i8 %4323, i8* %33, align 1
  %4324 = xor i32 %4305, %4312
  %4325 = xor i32 %4324, %4313
  %4326 = lshr i32 %4325, 4
  %4327 = trunc i32 %4326 to i8
  %4328 = and i8 %4327, 1
  store i8 %4328, i8* %39, align 1
  %4329 = icmp eq i32 %4313, 0
  %4330 = zext i1 %4329 to i8
  store i8 %4330, i8* %42, align 1
  %4331 = lshr i32 %4313, 31
  %4332 = trunc i32 %4331 to i8
  store i8 %4332, i8* %45, align 1
  %4333 = lshr i32 %4312, 31
  %4334 = lshr i32 %4305, 31
  %4335 = xor i32 %4331, %4333
  %4336 = xor i32 %4331, %4334
  %4337 = add nuw nsw i32 %4335, %4336
  %4338 = icmp eq i32 %4337, 2
  %4339 = zext i1 %4338 to i8
  store i8 %4339, i8* %51, align 1
  %4340 = add i64 %4307, -96
  %4341 = add i64 %4306, 11
  store i64 %4341, i64* %3, align 8
  %4342 = inttoptr i64 %4340 to i32*
  store i32 %4313, i32* %4342, align 4
  %4343 = load i64, i64* %RBP.i, align 8
  %4344 = add i64 %4343, -84
  %4345 = load i64, i64* %3, align 8
  %4346 = add i64 %4345, 3
  store i64 %4346, i64* %3, align 8
  %4347 = inttoptr i64 %4344 to i32*
  %4348 = load i32, i32* %4347, align 4
  %4349 = zext i32 %4348 to i64
  store i64 %4349, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41443c_type* @G__0x41443c to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41443c_type* @G__0x41443c to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4350 = add i64 %4343, -328
  %4351 = add i64 %4345, 17
  store i64 %4351, i64* %3, align 8
  %4352 = inttoptr i64 %4350 to i64*
  %4353 = load i64, i64* %4352, align 8
  store i64 %4353, i64* %RDI.i4032.pre-phi, align 8
  %4354 = add i64 %4343, -248
  %4355 = add i64 %4345, 23
  store i64 %4355, i64* %3, align 8
  %4356 = inttoptr i64 %4354 to i32*
  %4357 = load i32, i32* %4356, align 4
  %4358 = zext i32 %4357 to i64
  store i64 %4358, i64* %RSI.i3037, align 8
  %4359 = add i64 %4345, 25302
  %4360 = add i64 %4345, 28
  %4361 = load i64, i64* %6, align 8
  %4362 = add i64 %4361, -8
  %4363 = inttoptr i64 %4362 to i64*
  store i64 %4360, i64* %4363, align 8
  store i64 %4362, i64* %6, align 8
  store i64 %4359, i64* %3, align 8
  %call2_401fe1 = tail call %struct.Memory* @sub_4082a0._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4359, %struct.Memory* %4308)
  %4364 = load i64, i64* %RBP.i, align 8
  %4365 = add i64 %4364, -84
  %4366 = load i64, i64* %3, align 8
  %4367 = add i64 %4366, 3
  store i64 %4367, i64* %3, align 8
  %4368 = inttoptr i64 %4365 to i32*
  %4369 = load i32, i32* %4368, align 4
  %4370 = zext i32 %4369 to i64
  store i64 %4370, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414452_type* @G__0x414452 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414452_type* @G__0x414452 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4371 = add i64 %4364, -328
  %4372 = add i64 %4366, 17
  store i64 %4372, i64* %3, align 8
  %4373 = inttoptr i64 %4371 to i64*
  %4374 = load i64, i64* %4373, align 8
  store i64 %4374, i64* %RDI.i4032.pre-phi, align 8
  %4375 = add i64 %4364, -248
  %4376 = add i64 %4366, 23
  store i64 %4376, i64* %3, align 8
  %4377 = inttoptr i64 %4375 to i32*
  %4378 = load i32, i32* %4377, align 4
  %4379 = zext i32 %4378 to i64
  store i64 %4379, i64* %RSI.i3037, align 8
  %4380 = add i64 %4366, 25434
  %4381 = add i64 %4366, 28
  %4382 = load i64, i64* %6, align 8
  %4383 = add i64 %4382, -8
  %4384 = inttoptr i64 %4383 to i64*
  store i64 %4381, i64* %4384, align 8
  store i64 %4383, i64* %6, align 8
  store i64 %4380, i64* %3, align 8
  %call2_401ffd = tail call %struct.Memory* @sub_408340._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4380, %struct.Memory* %call2_401fe1)
  %4385 = load i64, i64* %RBP.i, align 8
  %4386 = add i64 %4385, -84
  %4387 = load i64, i64* %3, align 8
  %4388 = add i64 %4387, 3
  store i64 %4388, i64* %3, align 8
  %4389 = inttoptr i64 %4386 to i32*
  %4390 = load i32, i32* %4389, align 4
  %4391 = zext i32 %4390 to i64
  store i64 %4391, i64* %RDX.i4024, align 8
  %4392 = add i64 %4385, -88
  %4393 = add i64 %4387, 6
  store i64 %4393, i64* %3, align 8
  %4394 = inttoptr i64 %4392 to i32*
  %4395 = load i32, i32* %4394, align 4
  %4396 = zext i32 %4395 to i64
  store i64 %4396, i64* %RCX.i4028, align 8
  %4397 = add i64 %4385, -92
  %4398 = add i64 %4387, 10
  store i64 %4398, i64* %3, align 8
  %4399 = inttoptr i64 %4397 to i32*
  %4400 = load i32, i32* %4399, align 4
  %4401 = zext i32 %4400 to i64
  store i64 %4401, i64* %250, align 8
  %4402 = add i64 %4385, -96
  %4403 = add i64 %4387, 14
  store i64 %4403, i64* %3, align 8
  %4404 = inttoptr i64 %4402 to i32*
  %4405 = load i32, i32* %4404, align 4
  %4406 = zext i32 %4405 to i64
  store i64 %4406, i64* %477, align 8
  %4407 = load i64, i64* %6, align 8
  store i64 %4407, i64* %RDI.i4032.pre-phi, align 8
  %4408 = add i64 %4387, 24
  store i64 %4408, i64* %3, align 8
  %4409 = inttoptr i64 %4407 to i64*
  store i64 4277360, i64* %4409, align 8
  %4410 = load i64, i64* %RBP.i, align 8
  %4411 = add i64 %4410, -328
  %4412 = load i64, i64* %3, align 8
  %4413 = add i64 %4412, 7
  store i64 %4413, i64* %3, align 8
  %4414 = inttoptr i64 %4411 to i64*
  %4415 = load i64, i64* %4414, align 8
  store i64 %4415, i64* %RDI.i4032.pre-phi, align 8
  %4416 = add i64 %4410, -248
  %4417 = add i64 %4412, 13
  store i64 %4417, i64* %3, align 8
  %4418 = inttoptr i64 %4416 to i32*
  %4419 = load i32, i32* %4418, align 4
  %4420 = zext i32 %4419 to i64
  store i64 %4420, i64* %RSI.i3037, align 8
  %4421 = add i64 %4412, 25558
  %4422 = add i64 %4412, 18
  %4423 = load i64, i64* %6, align 8
  %4424 = add i64 %4423, -8
  %4425 = inttoptr i64 %4424 to i64*
  store i64 %4422, i64* %4425, align 8
  store i64 %4424, i64* %6, align 8
  store i64 %4421, i64* %3, align 8
  %call2_402027 = tail call %struct.Memory* @sub_4083f0._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4421, %struct.Memory* %call2_401ffd)
  %4426 = load i64, i64* %RBP.i, align 8
  %4427 = add i64 %4426, -84
  %4428 = load i64, i64* %3, align 8
  %4429 = add i64 %4428, 3
  store i64 %4429, i64* %3, align 8
  %4430 = inttoptr i64 %4427 to i32*
  %4431 = load i32, i32* %4430, align 4
  %4432 = zext i32 %4431 to i64
  store i64 %4432, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414490_type* @G__0x414490 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414490_type* @G__0x414490 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4433 = add i64 %4426, -328
  %4434 = add i64 %4428, 17
  store i64 %4434, i64* %3, align 8
  %4435 = inttoptr i64 %4433 to i64*
  %4436 = load i64, i64* %4435, align 8
  store i64 %4436, i64* %RDI.i4032.pre-phi, align 8
  %4437 = add i64 %4426, -248
  %4438 = add i64 %4428, 23
  store i64 %4438, i64* %3, align 8
  %4439 = inttoptr i64 %4437 to i32*
  %4440 = load i32, i32* %4439, align 4
  %4441 = zext i32 %4440 to i64
  store i64 %4441, i64* %RSI.i3037, align 8
  %4442 = add i64 %4428, 25748
  %4443 = add i64 %4428, 28
  %4444 = load i64, i64* %6, align 8
  %4445 = add i64 %4444, -8
  %4446 = inttoptr i64 %4445 to i64*
  store i64 %4443, i64* %4446, align 8
  store i64 %4445, i64* %6, align 8
  store i64 %4442, i64* %3, align 8
  %call2_402043 = tail call %struct.Memory* @sub_4084c0._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4442, %struct.Memory* %call2_402027)
  %4447 = load i64, i64* %RBP.i, align 8
  %4448 = add i64 %4447, -84
  %4449 = load i64, i64* %3, align 8
  %4450 = add i64 %4449, 3
  store i64 %4450, i64* %3, align 8
  %4451 = inttoptr i64 %4448 to i32*
  %4452 = load i32, i32* %4451, align 4
  %4453 = zext i32 %4452 to i64
  store i64 %4453, i64* %RDX.i4024, align 8
  %4454 = add i64 %4447, -88
  %4455 = add i64 %4449, 6
  store i64 %4455, i64* %3, align 8
  %4456 = inttoptr i64 %4454 to i32*
  %4457 = load i32, i32* %4456, align 4
  %4458 = zext i32 %4457 to i64
  store i64 %4458, i64* %RCX.i4028, align 8
  %4459 = add i64 %4447, -92
  %4460 = add i64 %4449, 10
  store i64 %4460, i64* %3, align 8
  %4461 = inttoptr i64 %4459 to i32*
  %4462 = load i32, i32* %4461, align 4
  %4463 = zext i32 %4462 to i64
  store i64 %4463, i64* %250, align 8
  %4464 = add i64 %4447, -96
  %4465 = add i64 %4449, 14
  store i64 %4465, i64* %3, align 8
  %4466 = inttoptr i64 %4464 to i32*
  %4467 = load i32, i32* %4466, align 4
  %4468 = zext i32 %4467 to i64
  store i64 %4468, i64* %477, align 8
  %4469 = load i64, i64* %6, align 8
  store i64 %4469, i64* %RDI.i4032.pre-phi, align 8
  %4470 = add i64 %4449, 24
  store i64 %4470, i64* %3, align 8
  %4471 = inttoptr i64 %4469 to i64*
  store i64 4277419, i64* %4471, align 8
  %4472 = load i64, i64* %RBP.i, align 8
  %4473 = add i64 %4472, -328
  %4474 = load i64, i64* %3, align 8
  %4475 = add i64 %4474, 7
  store i64 %4475, i64* %3, align 8
  %4476 = inttoptr i64 %4473 to i64*
  %4477 = load i64, i64* %4476, align 8
  store i64 %4477, i64* %RDI.i4032.pre-phi, align 8
  %4478 = add i64 %4472, -248
  %4479 = add i64 %4474, 13
  store i64 %4479, i64* %3, align 8
  %4480 = inttoptr i64 %4478 to i32*
  %4481 = load i32, i32* %4480, align 4
  %4482 = zext i32 %4481 to i64
  store i64 %4482, i64* %RSI.i3037, align 8
  %4483 = add i64 %4474, 25856
  %4484 = add i64 %4474, 18
  %4485 = load i64, i64* %6, align 8
  %4486 = add i64 %4485, -8
  %4487 = inttoptr i64 %4486 to i64*
  store i64 %4484, i64* %4487, align 8
  store i64 %4486, i64* %6, align 8
  store i64 %4483, i64* %3, align 8
  %call2_40206d = tail call %struct.Memory* @sub_408560._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4483, %struct.Memory* %call2_402043)
  %4488 = load i64, i64* %RBP.i, align 8
  %4489 = add i64 %4488, -84
  %4490 = load i64, i64* %3, align 8
  %4491 = add i64 %4490, 3
  store i64 %4491, i64* %3, align 8
  %4492 = inttoptr i64 %4489 to i32*
  %4493 = load i32, i32* %4492, align 4
  %4494 = zext i32 %4493 to i64
  store i64 %4494, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4144d0_type* @G__0x4144d0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4144d0_type* @G__0x4144d0 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4495 = add i64 %4488, -328
  %4496 = add i64 %4490, 17
  store i64 %4496, i64* %3, align 8
  %4497 = inttoptr i64 %4495 to i64*
  %4498 = load i64, i64* %4497, align 8
  store i64 %4498, i64* %RDI.i4032.pre-phi, align 8
  %4499 = add i64 %4488, -248
  %4500 = add i64 %4490, 23
  store i64 %4500, i64* %3, align 8
  %4501 = inttoptr i64 %4499 to i32*
  %4502 = load i32, i32* %4501, align 4
  %4503 = zext i32 %4502 to i64
  store i64 %4503, i64* %RSI.i3037, align 8
  %4504 = add i64 %4490, 26046
  %4505 = add i64 %4490, 28
  %4506 = load i64, i64* %6, align 8
  %4507 = add i64 %4506, -8
  %4508 = inttoptr i64 %4507 to i64*
  store i64 %4505, i64* %4508, align 8
  store i64 %4507, i64* %6, align 8
  store i64 %4504, i64* %3, align 8
  %call2_402089 = tail call %struct.Memory* @sub_408630._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4504, %struct.Memory* %call2_40206d)
  %4509 = load i64, i64* %RBP.i, align 8
  %4510 = add i64 %4509, -84
  %4511 = load i64, i64* %3, align 8
  %4512 = add i64 %4511, 3
  store i64 %4512, i64* %3, align 8
  %4513 = inttoptr i64 %4510 to i32*
  %4514 = load i32, i32* %4513, align 4
  %4515 = zext i32 %4514 to i64
  store i64 %4515, i64* %RDX.i4024, align 8
  %4516 = add i64 %4509, -88
  %4517 = add i64 %4511, 6
  store i64 %4517, i64* %3, align 8
  %4518 = inttoptr i64 %4516 to i32*
  %4519 = load i32, i32* %4518, align 4
  %4520 = zext i32 %4519 to i64
  store i64 %4520, i64* %RCX.i4028, align 8
  %4521 = add i64 %4509, -92
  %4522 = add i64 %4511, 10
  store i64 %4522, i64* %3, align 8
  %4523 = inttoptr i64 %4521 to i32*
  %4524 = load i32, i32* %4523, align 4
  %4525 = zext i32 %4524 to i64
  store i64 %4525, i64* %250, align 8
  %4526 = add i64 %4509, -96
  %4527 = add i64 %4511, 14
  store i64 %4527, i64* %3, align 8
  %4528 = inttoptr i64 %4526 to i32*
  %4529 = load i32, i32* %4528, align 4
  %4530 = zext i32 %4529 to i64
  store i64 %4530, i64* %477, align 8
  %4531 = load i64, i64* %6, align 8
  store i64 %4531, i64* %RDI.i4032.pre-phi, align 8
  %4532 = add i64 %4511, 24
  store i64 %4532, i64* %3, align 8
  %4533 = inttoptr i64 %4531 to i64*
  store i64 4277483, i64* %4533, align 8
  %4534 = load i64, i64* %RBP.i, align 8
  %4535 = add i64 %4534, -328
  %4536 = load i64, i64* %3, align 8
  %4537 = add i64 %4536, 7
  store i64 %4537, i64* %3, align 8
  %4538 = inttoptr i64 %4535 to i64*
  %4539 = load i64, i64* %4538, align 8
  store i64 %4539, i64* %RDI.i4032.pre-phi, align 8
  %4540 = add i64 %4534, -248
  %4541 = add i64 %4536, 13
  store i64 %4541, i64* %3, align 8
  %4542 = inttoptr i64 %4540 to i32*
  %4543 = load i32, i32* %4542, align 4
  %4544 = zext i32 %4543 to i64
  store i64 %4544, i64* %RSI.i3037, align 8
  %4545 = add i64 %4536, 26154
  %4546 = add i64 %4536, 18
  %4547 = load i64, i64* %6, align 8
  %4548 = add i64 %4547, -8
  %4549 = inttoptr i64 %4548 to i64*
  store i64 %4546, i64* %4549, align 8
  store i64 %4548, i64* %6, align 8
  store i64 %4545, i64* %3, align 8
  %call2_4020b3 = tail call %struct.Memory* @sub_4086d0._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4545, %struct.Memory* %call2_402089)
  %4550 = load i64, i64* %RBP.i, align 8
  %4551 = add i64 %4550, -84
  %4552 = load i64, i64* %3, align 8
  %4553 = add i64 %4552, 3
  store i64 %4553, i64* %3, align 8
  %4554 = inttoptr i64 %4551 to i32*
  %4555 = load i32, i32* %4554, align 4
  %4556 = zext i32 %4555 to i64
  store i64 %4556, i64* %RDX.i4024, align 8
  %4557 = add i64 %4550, -88
  %4558 = add i64 %4552, 6
  store i64 %4558, i64* %3, align 8
  %4559 = inttoptr i64 %4557 to i32*
  %4560 = load i32, i32* %4559, align 4
  %4561 = zext i32 %4560 to i64
  store i64 %4561, i64* %RCX.i4028, align 8
  %4562 = add i64 %4550, -92
  %4563 = add i64 %4552, 10
  store i64 %4563, i64* %3, align 8
  %4564 = inttoptr i64 %4562 to i32*
  %4565 = load i32, i32* %4564, align 4
  %4566 = zext i32 %4565 to i64
  store i64 %4566, i64* %250, align 8
  %4567 = add i64 %4550, -96
  %4568 = add i64 %4552, 14
  store i64 %4568, i64* %3, align 8
  %4569 = inttoptr i64 %4567 to i32*
  %4570 = load i32, i32* %4569, align 4
  %4571 = zext i32 %4570 to i64
  store i64 %4571, i64* %477, align 8
  %4572 = load i64, i64* %6, align 8
  store i64 %4572, i64* %RDI.i4032.pre-phi, align 8
  %4573 = add i64 %4552, 24
  store i64 %4573, i64* %3, align 8
  %4574 = inttoptr i64 %4572 to i64*
  store i64 4277521, i64* %4574, align 8
  %4575 = load i64, i64* %RBP.i, align 8
  %4576 = add i64 %4575, -328
  %4577 = load i64, i64* %3, align 8
  %4578 = add i64 %4577, 7
  store i64 %4578, i64* %3, align 8
  %4579 = inttoptr i64 %4576 to i64*
  %4580 = load i64, i64* %4579, align 8
  store i64 %4580, i64* %RDI.i4032.pre-phi, align 8
  %4581 = add i64 %4575, -248
  %4582 = add i64 %4577, 13
  store i64 %4582, i64* %3, align 8
  %4583 = inttoptr i64 %4581 to i32*
  %4584 = load i32, i32* %4583, align 4
  %4585 = zext i32 %4584 to i64
  store i64 %4585, i64* %RSI.i3037, align 8
  %4586 = add i64 %4577, 26320
  %4587 = add i64 %4577, 18
  %4588 = load i64, i64* %6, align 8
  %4589 = add i64 %4588, -8
  %4590 = inttoptr i64 %4589 to i64*
  store i64 %4587, i64* %4590, align 8
  store i64 %4589, i64* %6, align 8
  store i64 %4586, i64* %3, align 8
  %call2_4020dd = tail call %struct.Memory* @sub_4087a0._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4586, %struct.Memory* %call2_4020b3)
  %4591 = load i64, i64* %RBP.i, align 8
  %4592 = add i64 %4591, -84
  %4593 = load i64, i64* %3, align 8
  %4594 = add i64 %4593, 3
  store i64 %4594, i64* %3, align 8
  %4595 = inttoptr i64 %4592 to i32*
  %4596 = load i32, i32* %4595, align 4
  %4597 = zext i32 %4596 to i64
  store i64 %4597, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414538_type* @G__0x414538 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414538_type* @G__0x414538 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4598 = add i64 %4591, -328
  %4599 = add i64 %4593, 17
  store i64 %4599, i64* %3, align 8
  %4600 = inttoptr i64 %4598 to i64*
  %4601 = load i64, i64* %4600, align 8
  store i64 %4601, i64* %RDI.i4032.pre-phi, align 8
  %4602 = add i64 %4591, -248
  %4603 = add i64 %4593, 23
  store i64 %4603, i64* %3, align 8
  %4604 = inttoptr i64 %4602 to i32*
  %4605 = load i32, i32* %4604, align 4
  %4606 = zext i32 %4605 to i64
  store i64 %4606, i64* %RSI.i3037, align 8
  %4607 = add i64 %4593, 26510
  %4608 = add i64 %4593, 28
  %4609 = load i64, i64* %6, align 8
  %4610 = add i64 %4609, -8
  %4611 = inttoptr i64 %4610 to i64*
  store i64 %4608, i64* %4611, align 8
  store i64 %4610, i64* %6, align 8
  store i64 %4607, i64* %3, align 8
  %call2_4020f9 = tail call %struct.Memory* @sub_408870._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4607, %struct.Memory* %call2_4020dd)
  %4612 = load i64, i64* %RBP.i, align 8
  %4613 = add i64 %4612, -84
  %4614 = load i64, i64* %3, align 8
  %4615 = add i64 %4614, 3
  store i64 %4615, i64* %3, align 8
  %4616 = inttoptr i64 %4613 to i32*
  %4617 = load i32, i32* %4616, align 4
  %4618 = zext i32 %4617 to i64
  store i64 %4618, i64* %RDX.i4024, align 8
  %4619 = add i64 %4612, -88
  %4620 = add i64 %4614, 6
  store i64 %4620, i64* %3, align 8
  %4621 = inttoptr i64 %4619 to i32*
  %4622 = load i32, i32* %4621, align 4
  %4623 = zext i32 %4622 to i64
  store i64 %4623, i64* %RCX.i4028, align 8
  %4624 = add i64 %4612, -92
  %4625 = add i64 %4614, 10
  store i64 %4625, i64* %3, align 8
  %4626 = inttoptr i64 %4624 to i32*
  %4627 = load i32, i32* %4626, align 4
  %4628 = zext i32 %4627 to i64
  store i64 %4628, i64* %250, align 8
  %4629 = add i64 %4612, -96
  %4630 = add i64 %4614, 14
  store i64 %4630, i64* %3, align 8
  %4631 = inttoptr i64 %4629 to i32*
  %4632 = load i32, i32* %4631, align 4
  %4633 = zext i32 %4632 to i64
  store i64 %4633, i64* %477, align 8
  %4634 = load i64, i64* %6, align 8
  store i64 %4634, i64* %RDI.i4032.pre-phi, align 8
  %4635 = add i64 %4614, 24
  store i64 %4635, i64* %3, align 8
  %4636 = inttoptr i64 %4634 to i64*
  store i64 4277585, i64* %4636, align 8
  %4637 = load i64, i64* %RBP.i, align 8
  %4638 = add i64 %4637, -328
  %4639 = load i64, i64* %3, align 8
  %4640 = add i64 %4639, 7
  store i64 %4640, i64* %3, align 8
  %4641 = inttoptr i64 %4638 to i64*
  %4642 = load i64, i64* %4641, align 8
  store i64 %4642, i64* %RDI.i4032.pre-phi, align 8
  %4643 = add i64 %4637, -248
  %4644 = add i64 %4639, 13
  store i64 %4644, i64* %3, align 8
  %4645 = inttoptr i64 %4643 to i32*
  %4646 = load i32, i32* %4645, align 4
  %4647 = zext i32 %4646 to i64
  store i64 %4647, i64* %RSI.i3037, align 8
  %4648 = add i64 %4639, 26618
  %4649 = add i64 %4639, 18
  %4650 = load i64, i64* %6, align 8
  %4651 = add i64 %4650, -8
  %4652 = inttoptr i64 %4651 to i64*
  store i64 %4649, i64* %4652, align 8
  store i64 %4651, i64* %6, align 8
  store i64 %4648, i64* %3, align 8
  %call2_402123 = tail call %struct.Memory* @sub_408910._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4648, %struct.Memory* %call2_4020f9)
  %4653 = load i64, i64* %RBP.i, align 8
  %4654 = add i64 %4653, -84
  %4655 = load i64, i64* %3, align 8
  %4656 = add i64 %4655, 3
  store i64 %4656, i64* %3, align 8
  %4657 = inttoptr i64 %4654 to i32*
  %4658 = load i32, i32* %4657, align 4
  %4659 = zext i32 %4658 to i64
  store i64 %4659, i64* %RDX.i4024, align 8
  %4660 = add i64 %4653, -88
  %4661 = add i64 %4655, 6
  store i64 %4661, i64* %3, align 8
  %4662 = inttoptr i64 %4660 to i32*
  %4663 = load i32, i32* %4662, align 4
  %4664 = zext i32 %4663 to i64
  store i64 %4664, i64* %RCX.i4028, align 8
  %4665 = add i64 %4653, -92
  %4666 = add i64 %4655, 10
  store i64 %4666, i64* %3, align 8
  %4667 = inttoptr i64 %4665 to i32*
  %4668 = load i32, i32* %4667, align 4
  %4669 = zext i32 %4668 to i64
  store i64 %4669, i64* %250, align 8
  %4670 = add i64 %4653, -96
  %4671 = add i64 %4655, 14
  store i64 %4671, i64* %3, align 8
  %4672 = inttoptr i64 %4670 to i32*
  %4673 = load i32, i32* %4672, align 4
  %4674 = zext i32 %4673 to i64
  store i64 %4674, i64* %477, align 8
  %4675 = load i64, i64* %6, align 8
  store i64 %4675, i64* %RDI.i4032.pre-phi, align 8
  %4676 = add i64 %4655, 24
  store i64 %4676, i64* %3, align 8
  %4677 = inttoptr i64 %4675 to i64*
  store i64 4277620, i64* %4677, align 8
  %4678 = load i64, i64* %RBP.i, align 8
  %4679 = add i64 %4678, -328
  %4680 = load i64, i64* %3, align 8
  %4681 = add i64 %4680, 7
  store i64 %4681, i64* %3, align 8
  %4682 = inttoptr i64 %4679 to i64*
  %4683 = load i64, i64* %4682, align 8
  store i64 %4683, i64* %RDI.i4032.pre-phi, align 8
  %4684 = add i64 %4678, -248
  %4685 = add i64 %4680, 13
  store i64 %4685, i64* %3, align 8
  %4686 = inttoptr i64 %4684 to i32*
  %4687 = load i32, i32* %4686, align 4
  %4688 = zext i32 %4687 to i64
  store i64 %4688, i64* %RSI.i3037, align 8
  %4689 = add i64 %4680, 26784
  %4690 = add i64 %4680, 18
  %4691 = load i64, i64* %6, align 8
  %4692 = add i64 %4691, -8
  %4693 = inttoptr i64 %4692 to i64*
  store i64 %4690, i64* %4693, align 8
  store i64 %4692, i64* %6, align 8
  store i64 %4689, i64* %3, align 8
  %call2_40214d = tail call %struct.Memory* @sub_4089e0._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4689, %struct.Memory* %call2_402123)
  %4694 = load i64, i64* %RBP.i, align 8
  %4695 = add i64 %4694, -84
  %4696 = load i64, i64* %3, align 8
  %4697 = add i64 %4696, 3
  store i64 %4697, i64* %3, align 8
  %4698 = inttoptr i64 %4695 to i32*
  %4699 = load i32, i32* %4698, align 4
  %4700 = zext i32 %4699 to i64
  store i64 %4700, i64* %RDX.i4024, align 8
  %4701 = add i64 %4694, -88
  %4702 = add i64 %4696, 6
  store i64 %4702, i64* %3, align 8
  %4703 = inttoptr i64 %4701 to i32*
  %4704 = load i32, i32* %4703, align 4
  %4705 = zext i32 %4704 to i64
  store i64 %4705, i64* %RCX.i4028, align 8
  %4706 = add i64 %4694, -92
  %4707 = add i64 %4696, 10
  store i64 %4707, i64* %3, align 8
  %4708 = inttoptr i64 %4706 to i32*
  %4709 = load i32, i32* %4708, align 4
  %4710 = zext i32 %4709 to i64
  store i64 %4710, i64* %250, align 8
  %4711 = add i64 %4694, -96
  %4712 = add i64 %4696, 14
  store i64 %4712, i64* %3, align 8
  %4713 = inttoptr i64 %4711 to i32*
  %4714 = load i32, i32* %4713, align 4
  %4715 = zext i32 %4714 to i64
  store i64 %4715, i64* %477, align 8
  %4716 = load i64, i64* %6, align 8
  store i64 %4716, i64* %RDI.i4032.pre-phi, align 8
  %4717 = add i64 %4696, 24
  store i64 %4717, i64* %3, align 8
  %4718 = inttoptr i64 %4716 to i64*
  store i64 4277656, i64* %4718, align 8
  %4719 = load i64, i64* %RBP.i, align 8
  %4720 = add i64 %4719, -328
  %4721 = load i64, i64* %3, align 8
  %4722 = add i64 %4721, 7
  store i64 %4722, i64* %3, align 8
  %4723 = inttoptr i64 %4720 to i64*
  %4724 = load i64, i64* %4723, align 8
  store i64 %4724, i64* %RDI.i4032.pre-phi, align 8
  %4725 = add i64 %4719, -248
  %4726 = add i64 %4721, 13
  store i64 %4726, i64* %3, align 8
  %4727 = inttoptr i64 %4725 to i32*
  %4728 = load i32, i32* %4727, align 4
  %4729 = zext i32 %4728 to i64
  store i64 %4729, i64* %RSI.i3037, align 8
  %4730 = add i64 %4721, 26950
  %4731 = add i64 %4721, 18
  %4732 = load i64, i64* %6, align 8
  %4733 = add i64 %4732, -8
  %4734 = inttoptr i64 %4733 to i64*
  store i64 %4731, i64* %4734, align 8
  store i64 %4733, i64* %6, align 8
  store i64 %4730, i64* %3, align 8
  %call2_402177 = tail call %struct.Memory* @sub_408ab0._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4730, %struct.Memory* %call2_40214d)
  %4735 = load i64, i64* %RBP.i, align 8
  %4736 = add i64 %4735, -84
  %4737 = load i64, i64* %3, align 8
  %4738 = add i64 %4737, 3
  store i64 %4738, i64* %3, align 8
  %4739 = inttoptr i64 %4736 to i32*
  %4740 = load i32, i32* %4739, align 4
  %4741 = zext i32 %4740 to i64
  store i64 %4741, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4145b9_type* @G__0x4145b9 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4145b9_type* @G__0x4145b9 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4742 = add i64 %4735, -328
  %4743 = add i64 %4737, 17
  store i64 %4743, i64* %3, align 8
  %4744 = inttoptr i64 %4742 to i64*
  %4745 = load i64, i64* %4744, align 8
  store i64 %4745, i64* %RDI.i4032.pre-phi, align 8
  %4746 = add i64 %4735, -248
  %4747 = add i64 %4737, 23
  store i64 %4747, i64* %3, align 8
  %4748 = inttoptr i64 %4746 to i32*
  %4749 = load i32, i32* %4748, align 4
  %4750 = zext i32 %4749 to i64
  store i64 %4750, i64* %RSI.i3037, align 8
  %4751 = add i64 %4737, 27140
  %4752 = add i64 %4737, 28
  %4753 = load i64, i64* %6, align 8
  %4754 = add i64 %4753, -8
  %4755 = inttoptr i64 %4754 to i64*
  store i64 %4752, i64* %4755, align 8
  store i64 %4754, i64* %6, align 8
  store i64 %4751, i64* %3, align 8
  %call2_402193 = tail call %struct.Memory* @sub_408b80._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4751, %struct.Memory* %call2_402177)
  %4756 = load i64, i64* %RBP.i, align 8
  %4757 = add i64 %4756, -84
  %4758 = load i64, i64* %3, align 8
  %4759 = add i64 %4758, 3
  store i64 %4759, i64* %3, align 8
  %4760 = inttoptr i64 %4757 to i32*
  %4761 = load i32, i32* %4760, align 4
  %4762 = zext i32 %4761 to i64
  store i64 %4762, i64* %RDX.i4024, align 8
  %4763 = add i64 %4756, -88
  %4764 = add i64 %4758, 6
  store i64 %4764, i64* %3, align 8
  %4765 = inttoptr i64 %4763 to i32*
  %4766 = load i32, i32* %4765, align 4
  %4767 = zext i32 %4766 to i64
  store i64 %4767, i64* %RCX.i4028, align 8
  %4768 = add i64 %4756, -92
  %4769 = add i64 %4758, 10
  store i64 %4769, i64* %3, align 8
  %4770 = inttoptr i64 %4768 to i32*
  %4771 = load i32, i32* %4770, align 4
  %4772 = zext i32 %4771 to i64
  store i64 %4772, i64* %250, align 8
  %4773 = add i64 %4756, -96
  %4774 = add i64 %4758, 14
  store i64 %4774, i64* %3, align 8
  %4775 = inttoptr i64 %4773 to i32*
  %4776 = load i32, i32* %4775, align 4
  %4777 = zext i32 %4776 to i64
  store i64 %4777, i64* %477, align 8
  %4778 = load i64, i64* %6, align 8
  store i64 %4778, i64* %RDI.i4032.pre-phi, align 8
  %4779 = add i64 %4758, 24
  store i64 %4779, i64* %3, align 8
  %4780 = inttoptr i64 %4778 to i64*
  store i64 4277711, i64* %4780, align 8
  %4781 = load i64, i64* %RBP.i, align 8
  %4782 = add i64 %4781, -328
  %4783 = load i64, i64* %3, align 8
  %4784 = add i64 %4783, 7
  store i64 %4784, i64* %3, align 8
  %4785 = inttoptr i64 %4782 to i64*
  %4786 = load i64, i64* %4785, align 8
  store i64 %4786, i64* %RDI.i4032.pre-phi, align 8
  %4787 = add i64 %4781, -248
  %4788 = add i64 %4783, 13
  store i64 %4788, i64* %3, align 8
  %4789 = inttoptr i64 %4787 to i32*
  %4790 = load i32, i32* %4789, align 4
  %4791 = zext i32 %4790 to i64
  store i64 %4791, i64* %RSI.i3037, align 8
  %4792 = add i64 %4783, 27248
  %4793 = add i64 %4783, 18
  %4794 = load i64, i64* %6, align 8
  %4795 = add i64 %4794, -8
  %4796 = inttoptr i64 %4795 to i64*
  store i64 %4793, i64* %4796, align 8
  store i64 %4795, i64* %6, align 8
  store i64 %4792, i64* %3, align 8
  %call2_4021bd = tail call %struct.Memory* @sub_408c20._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4792, %struct.Memory* %call2_402193)
  %4797 = load i64, i64* %RBP.i, align 8
  %4798 = add i64 %4797, -84
  %4799 = load i64, i64* %3, align 8
  %4800 = add i64 %4799, 3
  store i64 %4800, i64* %3, align 8
  %4801 = inttoptr i64 %4798 to i32*
  %4802 = load i32, i32* %4801, align 4
  %4803 = zext i32 %4802 to i64
  store i64 %4803, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ee_type* @G__0x4145ee to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4145ee_type* @G__0x4145ee to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4804 = add i64 %4797, -328
  %4805 = add i64 %4799, 17
  store i64 %4805, i64* %3, align 8
  %4806 = inttoptr i64 %4804 to i64*
  %4807 = load i64, i64* %4806, align 8
  store i64 %4807, i64* %RDI.i4032.pre-phi, align 8
  %4808 = add i64 %4797, -248
  %4809 = add i64 %4799, 23
  store i64 %4809, i64* %3, align 8
  %4810 = inttoptr i64 %4808 to i32*
  %4811 = load i32, i32* %4810, align 4
  %4812 = zext i32 %4811 to i64
  store i64 %4812, i64* %RSI.i3037, align 8
  %4813 = add i64 %4799, 27438
  %4814 = add i64 %4799, 28
  %4815 = load i64, i64* %6, align 8
  %4816 = add i64 %4815, -8
  %4817 = inttoptr i64 %4816 to i64*
  store i64 %4814, i64* %4817, align 8
  store i64 %4816, i64* %6, align 8
  store i64 %4813, i64* %3, align 8
  %call2_4021d9 = tail call %struct.Memory* @sub_408cf0._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4813, %struct.Memory* %call2_4021bd)
  %4818 = load i64, i64* %RBP.i, align 8
  %4819 = add i64 %4818, -84
  %4820 = load i64, i64* %3, align 8
  %4821 = add i64 %4820, 3
  store i64 %4821, i64* %3, align 8
  %4822 = inttoptr i64 %4819 to i32*
  %4823 = load i32, i32* %4822, align 4
  %4824 = zext i32 %4823 to i64
  store i64 %4824, i64* %RDX.i4024, align 8
  %4825 = add i64 %4818, -88
  %4826 = add i64 %4820, 6
  store i64 %4826, i64* %3, align 8
  %4827 = inttoptr i64 %4825 to i32*
  %4828 = load i32, i32* %4827, align 4
  %4829 = zext i32 %4828 to i64
  store i64 %4829, i64* %RCX.i4028, align 8
  %4830 = add i64 %4818, -92
  %4831 = add i64 %4820, 10
  store i64 %4831, i64* %3, align 8
  %4832 = inttoptr i64 %4830 to i32*
  %4833 = load i32, i32* %4832, align 4
  %4834 = zext i32 %4833 to i64
  store i64 %4834, i64* %250, align 8
  %4835 = add i64 %4818, -96
  %4836 = add i64 %4820, 14
  store i64 %4836, i64* %3, align 8
  %4837 = inttoptr i64 %4835 to i32*
  %4838 = load i32, i32* %4837, align 4
  %4839 = zext i32 %4838 to i64
  store i64 %4839, i64* %477, align 8
  %4840 = load i64, i64* %6, align 8
  store i64 %4840, i64* %RDI.i4032.pre-phi, align 8
  %4841 = add i64 %4820, 24
  store i64 %4841, i64* %3, align 8
  %4842 = inttoptr i64 %4840 to i64*
  store i64 4277763, i64* %4842, align 8
  %4843 = load i64, i64* %RBP.i, align 8
  %4844 = add i64 %4843, -328
  %4845 = load i64, i64* %3, align 8
  %4846 = add i64 %4845, 7
  store i64 %4846, i64* %3, align 8
  %4847 = inttoptr i64 %4844 to i64*
  %4848 = load i64, i64* %4847, align 8
  store i64 %4848, i64* %RDI.i4032.pre-phi, align 8
  %4849 = add i64 %4843, -248
  %4850 = add i64 %4845, 13
  store i64 %4850, i64* %3, align 8
  %4851 = inttoptr i64 %4849 to i32*
  %4852 = load i32, i32* %4851, align 4
  %4853 = zext i32 %4852 to i64
  store i64 %4853, i64* %RSI.i3037, align 8
  %4854 = add i64 %4845, 27546
  %4855 = add i64 %4845, 18
  %4856 = load i64, i64* %6, align 8
  %4857 = add i64 %4856, -8
  %4858 = inttoptr i64 %4857 to i64*
  store i64 %4855, i64* %4858, align 8
  store i64 %4857, i64* %6, align 8
  store i64 %4854, i64* %3, align 8
  %call2_402203 = tail call %struct.Memory* @sub_408d90._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4854, %struct.Memory* %call2_4021d9)
  %4859 = load i64, i64* %RBP.i, align 8
  %4860 = add i64 %4859, -84
  %4861 = load i64, i64* %3, align 8
  %4862 = add i64 %4861, 3
  store i64 %4862, i64* %3, align 8
  %4863 = inttoptr i64 %4860 to i32*
  %4864 = load i32, i32* %4863, align 4
  %4865 = zext i32 %4864 to i64
  store i64 %4865, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414621_type* @G__0x414621 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414621_type* @G__0x414621 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %4866 = add i64 %4859, -328
  %4867 = add i64 %4861, 17
  store i64 %4867, i64* %3, align 8
  %4868 = inttoptr i64 %4866 to i64*
  %4869 = load i64, i64* %4868, align 8
  store i64 %4869, i64* %RDI.i4032.pre-phi, align 8
  %4870 = add i64 %4859, -248
  %4871 = add i64 %4861, 23
  store i64 %4871, i64* %3, align 8
  %4872 = inttoptr i64 %4870 to i32*
  %4873 = load i32, i32* %4872, align 4
  %4874 = zext i32 %4873 to i64
  store i64 %4874, i64* %RSI.i3037, align 8
  %4875 = add i64 %4861, 27736
  %4876 = add i64 %4861, 28
  %4877 = load i64, i64* %6, align 8
  %4878 = add i64 %4877, -8
  %4879 = inttoptr i64 %4878 to i64*
  store i64 %4876, i64* %4879, align 8
  store i64 %4878, i64* %6, align 8
  store i64 %4875, i64* %3, align 8
  %call2_40221f = tail call %struct.Memory* @sub_408e60._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %4875, %struct.Memory* %call2_402203)
  %4880 = load i64, i64* %RBP.i, align 8
  %4881 = add i64 %4880, -84
  %4882 = load i64, i64* %3, align 8
  %4883 = add i64 %4882, 3
  store i64 %4883, i64* %3, align 8
  %4884 = inttoptr i64 %4881 to i32*
  %4885 = load i32, i32* %4884, align 4
  %4886 = zext i32 %4885 to i64
  store i64 %4886, i64* %RDX.i4024, align 8
  %4887 = add i64 %4880, -88
  %4888 = add i64 %4882, 6
  store i64 %4888, i64* %3, align 8
  %4889 = inttoptr i64 %4887 to i32*
  %4890 = load i32, i32* %4889, align 4
  %4891 = zext i32 %4890 to i64
  store i64 %4891, i64* %RCX.i4028, align 8
  %4892 = add i64 %4880, -92
  %4893 = add i64 %4882, 10
  store i64 %4893, i64* %3, align 8
  %4894 = inttoptr i64 %4892 to i32*
  %4895 = load i32, i32* %4894, align 4
  %4896 = zext i32 %4895 to i64
  store i64 %4896, i64* %250, align 8
  %4897 = add i64 %4880, -96
  %4898 = add i64 %4882, 14
  store i64 %4898, i64* %3, align 8
  %4899 = inttoptr i64 %4897 to i32*
  %4900 = load i32, i32* %4899, align 4
  %4901 = zext i32 %4900 to i64
  store i64 %4901, i64* %477, align 8
  %4902 = load i64, i64* %6, align 8
  store i64 %4902, i64* %RDI.i4032.pre-phi, align 8
  %4903 = add i64 %4882, 24
  store i64 %4903, i64* %3, align 8
  %4904 = inttoptr i64 %4902 to i64*
  store i64 4277815, i64* %4904, align 8
  %4905 = load i64, i64* %RBP.i, align 8
  %4906 = add i64 %4905, -328
  %4907 = load i64, i64* %3, align 8
  %4908 = add i64 %4907, 7
  store i64 %4908, i64* %3, align 8
  %4909 = inttoptr i64 %4906 to i64*
  %4910 = load i64, i64* %4909, align 8
  store i64 %4910, i64* %RDI.i4032.pre-phi, align 8
  %4911 = add i64 %4905, -248
  %4912 = add i64 %4907, 13
  store i64 %4912, i64* %3, align 8
  %4913 = inttoptr i64 %4911 to i32*
  %4914 = load i32, i32* %4913, align 4
  %4915 = zext i32 %4914 to i64
  store i64 %4915, i64* %RSI.i3037, align 8
  %4916 = add i64 %4907, 27844
  %4917 = add i64 %4907, 18
  %4918 = load i64, i64* %6, align 8
  %4919 = add i64 %4918, -8
  %4920 = inttoptr i64 %4919 to i64*
  store i64 %4917, i64* %4920, align 8
  store i64 %4919, i64* %6, align 8
  store i64 %4916, i64* %3, align 8
  %call2_402249 = tail call %struct.Memory* @sub_408f00._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %4916, %struct.Memory* %call2_40221f)
  %4921 = load i64, i64* %3, align 8
  %4922 = add i64 %4921, 2195002
  %4923 = add i64 %4921, 8
  store i64 %4923, i64* %3, align 8
  %4924 = inttoptr i64 %4922 to i64*
  %4925 = load i64, i64* %4924, align 8
  store i64 %4925, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %.cast3 = bitcast i64 %4925 to double
  %4926 = tail call double @llvm.trunc.f64(double %.cast3)
  %4927 = tail call double @llvm.fabs.f64(double %4926)
  %4928 = fcmp ogt double %4927, 0x43E0000000000000
  %4929 = fptosi double %4926 to i64
  %4930 = select i1 %4928, i64 -9223372036854775808, i64 %4929
  store i64 %4930, i64* %RDX.i4024, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6411c0_type* @G__0x6411c0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295), i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295) to i32) to i64), i64* %RSI.i3037, align 8
  %4931 = load i64, i64* %RBP.i, align 8
  %4932 = add i64 %4931, -344
  %4933 = add i64 %4921, 34
  store i64 %4933, i64* %3, align 8
  %4934 = inttoptr i64 %4932 to i64*
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6411c0_type* @G__0x6411c0 to i64), i64 4294967295) to i32) to i64), i64* %4934, align 8
  %4935 = load i64, i64* %3, align 8
  %4936 = add i64 %4935, 28000
  %4937 = add i64 %4935, 5
  %4938 = load i64, i64* %6, align 8
  %4939 = add i64 %4938, -8
  %4940 = inttoptr i64 %4939 to i64*
  store i64 %4937, i64* %4940, align 8
  store i64 %4939, i64* %6, align 8
  store i64 %4936, i64* %3, align 8
  %call2_402270 = tail call %struct.Memory* @sub_408fd0._Z4fillIPllEvT_S1_T0_(%struct.State* nonnull %0, i64 %4936, %struct.Memory* %call2_402249)
  %4941 = load i64, i64* %RBP.i, align 8
  %4942 = add i64 %4941, -40
  %4943 = load i64, i64* %3, align 8
  %4944 = add i64 %4943, 6
  store i64 %4944, i64* %3, align 8
  %4945 = inttoptr i64 %4942 to double*
  %4946 = load double, double* %4945, align 8
  %4947 = tail call double @llvm.trunc.f64(double %4946)
  %4948 = tail call double @llvm.fabs.f64(double %4947)
  %4949 = fcmp ogt double %4948, 0x43E0000000000000
  %4950 = fptosi double %4947 to i64
  %4951 = select i1 %4949, i64 -9223372036854775808, i64 %4950
  store i64 %4951, i64* %RDX.i4024, align 8
  %4952 = add i64 %4941, -104
  %4953 = add i64 %4943, 10
  store i64 %4953, i64* %3, align 8
  %4954 = inttoptr i64 %4952 to i64*
  store i64 %4951, i64* %4954, align 8
  %4955 = load i64, i64* %RBP.i, align 8
  %4956 = add i64 %4955, -104
  %4957 = load i64, i64* %3, align 8
  %4958 = add i64 %4957, 4
  store i64 %4958, i64* %3, align 8
  %4959 = inttoptr i64 %4956 to i64*
  %4960 = load i64, i64* %4959, align 8
  %4961 = shl i64 %4960, 1
  store i64 %4961, i64* %RDX.i4024, align 8
  %4962 = icmp ult i64 %4961, %4960
  %4963 = zext i1 %4962 to i8
  store i8 %4963, i8* %26, align 1
  %4964 = trunc i64 %4961 to i32
  %4965 = and i32 %4964, 254
  %4966 = tail call i32 @llvm.ctpop.i32(i32 %4965)
  %4967 = trunc i32 %4966 to i8
  %4968 = and i8 %4967, 1
  %4969 = xor i8 %4968, 1
  store i8 %4969, i8* %33, align 1
  %4970 = lshr i64 %4960, 3
  %4971 = trunc i64 %4970 to i8
  %4972 = and i8 %4971, 1
  store i8 %4972, i8* %39, align 1
  %4973 = icmp eq i64 %4961, 0
  %4974 = zext i1 %4973 to i8
  store i8 %4974, i8* %42, align 1
  %4975 = lshr i64 %4960, 62
  %4976 = and i64 %4975, 1
  %4977 = trunc i64 %4976 to i8
  store i8 %4977, i8* %45, align 1
  %4978 = lshr i64 %4960, 63
  %4979 = xor i64 %4976, %4978
  %4980 = trunc i64 %4979 to i8
  store i8 %4980, i8* %51, align 1
  %4981 = add i64 %4955, -112
  %4982 = add i64 %4957, 11
  store i64 %4982, i64* %3, align 8
  %4983 = inttoptr i64 %4981 to i64*
  store i64 %4961, i64* %4983, align 8
  %4984 = load i64, i64* %RBP.i, align 8
  %4985 = add i64 %4984, -104
  %4986 = load i64, i64* %3, align 8
  %4987 = add i64 %4986, 4
  store i64 %4987, i64* %3, align 8
  %4988 = inttoptr i64 %4985 to i64*
  %4989 = load i64, i64* %4988, align 8
  %4990 = add i64 %4989, 2
  store i64 %4990, i64* %RDX.i4024, align 8
  %4991 = icmp ugt i64 %4989, -3
  %4992 = zext i1 %4991 to i8
  store i8 %4992, i8* %26, align 1
  %4993 = trunc i64 %4990 to i32
  %4994 = and i32 %4993, 255
  %4995 = tail call i32 @llvm.ctpop.i32(i32 %4994)
  %4996 = trunc i32 %4995 to i8
  %4997 = and i8 %4996, 1
  %4998 = xor i8 %4997, 1
  store i8 %4998, i8* %33, align 1
  %4999 = xor i64 %4990, %4989
  %5000 = lshr i64 %4999, 4
  %5001 = trunc i64 %5000 to i8
  %5002 = and i8 %5001, 1
  store i8 %5002, i8* %39, align 1
  %5003 = icmp eq i64 %4990, 0
  %5004 = zext i1 %5003 to i8
  store i8 %5004, i8* %42, align 1
  %5005 = lshr i64 %4990, 63
  %5006 = trunc i64 %5005 to i8
  store i8 %5006, i8* %45, align 1
  %5007 = lshr i64 %4989, 63
  %5008 = xor i64 %5005, %5007
  %5009 = add nuw nsw i64 %5008, %5005
  %5010 = icmp eq i64 %5009, 2
  %5011 = zext i1 %5010 to i8
  store i8 %5011, i8* %51, align 1
  %5012 = add i64 %4984, -120
  %5013 = add i64 %4986, 12
  store i64 %5013, i64* %3, align 8
  %5014 = inttoptr i64 %5012 to i64*
  store i64 %4990, i64* %5014, align 8
  %5015 = load i64, i64* %RBP.i, align 8
  %5016 = add i64 %5015, -104
  %5017 = load i64, i64* %3, align 8
  %5018 = add i64 %5017, 4
  store i64 %5018, i64* %3, align 8
  %5019 = inttoptr i64 %5016 to i64*
  %5020 = load i64, i64* %5019, align 8
  store i64 %5020, i64* %RDX.i4024, align 8
  %5021 = add i64 %5015, -112
  %5022 = add i64 %5017, 8
  store i64 %5022, i64* %3, align 8
  %5023 = inttoptr i64 %5021 to i64*
  %5024 = load i64, i64* %5023, align 8
  store i64 %5024, i64* %RAX.i4026, align 8
  %5025 = add i64 %5015, -120
  %5026 = add i64 %5017, 12
  store i64 %5026, i64* %3, align 8
  %5027 = inttoptr i64 %5025 to i64*
  %5028 = load i64, i64* %5027, align 8
  store i64 %5028, i64* %RSI.i3037, align 8
  %5029 = add i64 %5015, -352
  %5030 = add i64 %5017, 19
  store i64 %5030, i64* %3, align 8
  %5031 = inttoptr i64 %5029 to i64*
  store i64 %5020, i64* %5031, align 8
  %5032 = load i64, i64* %3, align 8
  %5033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %5034 = load i64, i64* %5033, align 8
  %5035 = ashr i64 %5034, 63
  store i64 %5035, i64* %376, align 8
  %5036 = load i64, i64* %RSI.i3037, align 8
  %5037 = add i64 %5032, 5
  store i64 %5037, i64* %3, align 8
  %5038 = sext i64 %5036 to i128
  %5039 = and i128 %5038, -18446744073709551616
  %5040 = zext i64 %5035 to i128
  %5041 = shl nuw i128 %5040, 64
  %5042 = zext i64 %5034 to i128
  %5043 = or i128 %5041, %5042
  %5044 = zext i64 %5036 to i128
  %5045 = or i128 %5039, %5044
  %5046 = sdiv i128 %5043, %5045
  %5047 = trunc i128 %5046 to i64
  %5048 = and i128 %5046, 18446744073709551615
  %5049 = sext i64 %5047 to i128
  %5050 = and i128 %5049, -18446744073709551616
  %5051 = or i128 %5050, %5048
  %5052 = icmp eq i128 %5046, %5051
  br i1 %5052, label %5055, label %5053

; <label>:5053:                                   ; preds = %routine_divl__r8d.exit
  %5054 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5037, %struct.Memory* %call2_402270)
  %.pre25 = load i64, i64* %3, align 8
  %.pre26 = load i64, i64* %RAX.i4026, align 8
  br label %routine_idivq__rsi.exit

; <label>:5055:                                   ; preds = %routine_divl__r8d.exit
  %5056 = srem i128 %5043, %5045
  %5057 = trunc i128 %5056 to i64
  store i64 %5047, i64* %5033, align 8
  store i64 %5057, i64* %376, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  br label %routine_idivq__rsi.exit

routine_idivq__rsi.exit:                          ; preds = %5055, %5053
  %5058 = phi i64 [ %.pre26, %5053 ], [ %5047, %5055 ]
  %5059 = phi i64 [ %.pre25, %5053 ], [ %5037, %5055 ]
  %5060 = phi %struct.Memory* [ %5054, %5053 ], [ %call2_402270, %5055 ]
  %5061 = load i64, i64* %RBP.i, align 8
  %5062 = add i64 %5061, -352
  %5063 = add i64 %5059, 7
  store i64 %5063, i64* %3, align 8
  %5064 = inttoptr i64 %5062 to i64*
  %5065 = load i64, i64* %5064, align 8
  %5066 = add i64 %5058, %5065
  store i64 %5066, i64* %RDX.i4024, align 8
  %5067 = icmp ult i64 %5066, %5065
  %5068 = icmp ult i64 %5066, %5058
  %5069 = or i1 %5067, %5068
  %5070 = zext i1 %5069 to i8
  store i8 %5070, i8* %26, align 1
  %5071 = trunc i64 %5066 to i32
  %5072 = and i32 %5071, 255
  %5073 = tail call i32 @llvm.ctpop.i32(i32 %5072)
  %5074 = trunc i32 %5073 to i8
  %5075 = and i8 %5074, 1
  %5076 = xor i8 %5075, 1
  store i8 %5076, i8* %33, align 1
  %5077 = xor i64 %5058, %5065
  %5078 = xor i64 %5077, %5066
  %5079 = lshr i64 %5078, 4
  %5080 = trunc i64 %5079 to i8
  %5081 = and i8 %5080, 1
  store i8 %5081, i8* %39, align 1
  %5082 = icmp eq i64 %5066, 0
  %5083 = zext i1 %5082 to i8
  store i8 %5083, i8* %42, align 1
  %5084 = lshr i64 %5066, 63
  %5085 = trunc i64 %5084 to i8
  store i8 %5085, i8* %45, align 1
  %5086 = lshr i64 %5065, 63
  %5087 = lshr i64 %5058, 63
  %5088 = xor i64 %5084, %5086
  %5089 = xor i64 %5084, %5087
  %5090 = add nuw nsw i64 %5088, %5089
  %5091 = icmp eq i64 %5090, 2
  %5092 = zext i1 %5091 to i8
  store i8 %5092, i8* %51, align 1
  %5093 = add i64 %5061, -128
  %5094 = add i64 %5059, 14
  store i64 %5094, i64* %3, align 8
  %5095 = inttoptr i64 %5093 to i64*
  store i64 %5066, i64* %5095, align 8
  %5096 = load i64, i64* %RBP.i, align 8
  %5097 = add i64 %5096, -104
  %5098 = load i64, i64* %3, align 8
  %5099 = add i64 %5098, 4
  store i64 %5099, i64* %3, align 8
  %5100 = inttoptr i64 %5097 to i64*
  %5101 = load i64, i64* %5100, align 8
  store i64 %5101, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414657_type* @G__0x414657 to i64), i64 4294967295), i64* %RCX.i4028, align 8
  %5102 = add i64 %5096, -344
  %5103 = add i64 %5098, 16
  store i64 %5103, i64* %3, align 8
  %5104 = inttoptr i64 %5102 to i64*
  %5105 = load i64, i64* %5104, align 8
  store i64 %5105, i64* %RDI.i4032.pre-phi, align 8
  %5106 = add i64 %5096, -248
  %5107 = add i64 %5098, 22
  store i64 %5107, i64* %3, align 8
  %5108 = inttoptr i64 %5106 to i32*
  %5109 = load i32, i32* %5108, align 4
  %5110 = zext i32 %5109 to i64
  store i64 %5110, i64* %RSI.i3037, align 8
  %5111 = add i64 %5098, 27988
  %5112 = add i64 %5098, 27
  %5113 = load i64, i64* %6, align 8
  %5114 = add i64 %5113, -8
  %5115 = inttoptr i64 %5114 to i64*
  store i64 %5112, i64* %5115, align 8
  store i64 %5114, i64* %6, align 8
  store i64 %5111, i64* %3, align 8
  %call2_4022d2 = tail call %struct.Memory* @sub_409010._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5111, %struct.Memory* %5060)
  %5116 = load i64, i64* %RBP.i, align 8
  %5117 = add i64 %5116, -104
  %5118 = load i64, i64* %3, align 8
  %5119 = add i64 %5118, 4
  store i64 %5119, i64* %3, align 8
  %5120 = inttoptr i64 %5117 to i64*
  %5121 = load i64, i64* %5120, align 8
  store i64 %5121, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41466d_type* @G__0x41466d to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41466d_type* @G__0x41466d to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5122 = add i64 %5116, -344
  %5123 = add i64 %5118, 18
  store i64 %5123, i64* %3, align 8
  %5124 = inttoptr i64 %5122 to i64*
  %5125 = load i64, i64* %5124, align 8
  store i64 %5125, i64* %RDI.i4032.pre-phi, align 8
  %5126 = add i64 %5116, -248
  %5127 = add i64 %5118, 24
  store i64 %5127, i64* %3, align 8
  %5128 = inttoptr i64 %5126 to i32*
  %5129 = load i32, i32* %5128, align 4
  %5130 = zext i32 %5129 to i64
  store i64 %5130, i64* %RSI.i3037, align 8
  %5131 = add i64 %5118, 28137
  %5132 = add i64 %5118, 29
  %5133 = load i64, i64* %6, align 8
  %5134 = add i64 %5133, -8
  %5135 = inttoptr i64 %5134 to i64*
  store i64 %5132, i64* %5135, align 8
  store i64 %5134, i64* %6, align 8
  store i64 %5131, i64* %3, align 8
  %call2_4022ef = tail call %struct.Memory* @sub_4090c0._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5131, %struct.Memory* %call2_4022d2)
  %5136 = load i64, i64* %RBP.i, align 8
  %5137 = add i64 %5136, -104
  %5138 = load i64, i64* %3, align 8
  %5139 = add i64 %5138, 4
  store i64 %5139, i64* %3, align 8
  %5140 = inttoptr i64 %5137 to i64*
  %5141 = load i64, i64* %5140, align 8
  store i64 %5141, i64* %RDX.i4024, align 8
  %5142 = add i64 %5136, -112
  %5143 = add i64 %5138, 8
  store i64 %5143, i64* %3, align 8
  %5144 = inttoptr i64 %5142 to i64*
  %5145 = load i64, i64* %5144, align 8
  store i64 %5145, i64* %RCX.i4028, align 8
  %5146 = add i64 %5136, -120
  %5147 = add i64 %5138, 12
  store i64 %5147, i64* %3, align 8
  %5148 = inttoptr i64 %5146 to i64*
  %5149 = load i64, i64* %5148, align 8
  store i64 %5149, i64* %250, align 8
  %5150 = add i64 %5136, -128
  %5151 = add i64 %5138, 16
  store i64 %5151, i64* %3, align 8
  %5152 = inttoptr i64 %5150 to i64*
  %5153 = load i64, i64* %5152, align 8
  store i64 %5153, i64* %477, align 8
  %5154 = load i64, i64* %6, align 8
  store i64 %5154, i64* %RAX.i4026, align 8
  %5155 = add i64 %5138, 26
  store i64 %5155, i64* %3, align 8
  %5156 = inttoptr i64 %5154 to i64*
  store i64 4277899, i64* %5156, align 8
  %5157 = load i64, i64* %RBP.i, align 8
  %5158 = add i64 %5157, -344
  %5159 = load i64, i64* %3, align 8
  %5160 = add i64 %5159, 7
  store i64 %5160, i64* %3, align 8
  %5161 = inttoptr i64 %5158 to i64*
  %5162 = load i64, i64* %5161, align 8
  store i64 %5162, i64* %RDI.i4032.pre-phi, align 8
  %5163 = add i64 %5157, -248
  %5164 = add i64 %5159, 13
  store i64 %5164, i64* %3, align 8
  %5165 = inttoptr i64 %5163 to i32*
  %5166 = load i32, i32* %5165, align 4
  %5167 = zext i32 %5166 to i64
  store i64 %5167, i64* %RSI.i3037, align 8
  %5168 = add i64 %5159, 28258
  %5169 = add i64 %5159, 18
  %5170 = load i64, i64* %6, align 8
  %5171 = add i64 %5170, -8
  %5172 = inttoptr i64 %5171 to i64*
  store i64 %5169, i64* %5172, align 8
  store i64 %5171, i64* %6, align 8
  store i64 %5168, i64* %3, align 8
  %call2_40231b = tail call %struct.Memory* @sub_409170._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5168, %struct.Memory* %call2_4022ef)
  %5173 = load i64, i64* %RBP.i, align 8
  %5174 = add i64 %5173, -104
  %5175 = load i64, i64* %3, align 8
  %5176 = add i64 %5175, 4
  store i64 %5176, i64* %3, align 8
  %5177 = inttoptr i64 %5174 to i64*
  %5178 = load i64, i64* %5177, align 8
  store i64 %5178, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4146ab_type* @G__0x4146ab to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4146ab_type* @G__0x4146ab to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5179 = add i64 %5173, -344
  %5180 = add i64 %5175, 18
  store i64 %5180, i64* %3, align 8
  %5181 = inttoptr i64 %5179 to i64*
  %5182 = load i64, i64* %5181, align 8
  store i64 %5182, i64* %RDI.i4032.pre-phi, align 8
  %5183 = add i64 %5173, -248
  %5184 = add i64 %5175, 24
  store i64 %5184, i64* %3, align 8
  %5185 = inttoptr i64 %5183 to i32*
  %5186 = load i32, i32* %5185, align 4
  %5187 = zext i32 %5186 to i64
  store i64 %5187, i64* %RSI.i3037, align 8
  %5188 = add i64 %5175, 28448
  %5189 = add i64 %5175, 29
  %5190 = load i64, i64* %6, align 8
  %5191 = add i64 %5190, -8
  %5192 = inttoptr i64 %5191 to i64*
  store i64 %5189, i64* %5192, align 8
  store i64 %5191, i64* %6, align 8
  store i64 %5188, i64* %3, align 8
  %call2_402338 = tail call %struct.Memory* @sub_409240._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5188, %struct.Memory* %call2_40231b)
  %5193 = load i64, i64* %RBP.i, align 8
  %5194 = add i64 %5193, -104
  %5195 = load i64, i64* %3, align 8
  %5196 = add i64 %5195, 4
  store i64 %5196, i64* %3, align 8
  %5197 = inttoptr i64 %5194 to i64*
  %5198 = load i64, i64* %5197, align 8
  store i64 %5198, i64* %RDX.i4024, align 8
  %5199 = add i64 %5193, -112
  %5200 = add i64 %5195, 8
  store i64 %5200, i64* %3, align 8
  %5201 = inttoptr i64 %5199 to i64*
  %5202 = load i64, i64* %5201, align 8
  store i64 %5202, i64* %RCX.i4028, align 8
  %5203 = add i64 %5193, -120
  %5204 = add i64 %5195, 12
  store i64 %5204, i64* %3, align 8
  %5205 = inttoptr i64 %5203 to i64*
  %5206 = load i64, i64* %5205, align 8
  store i64 %5206, i64* %250, align 8
  %5207 = add i64 %5193, -128
  %5208 = add i64 %5195, 16
  store i64 %5208, i64* %3, align 8
  %5209 = inttoptr i64 %5207 to i64*
  %5210 = load i64, i64* %5209, align 8
  store i64 %5210, i64* %477, align 8
  %5211 = load i64, i64* %6, align 8
  store i64 %5211, i64* %RAX.i4026, align 8
  %5212 = add i64 %5195, 26
  store i64 %5212, i64* %3, align 8
  %5213 = inttoptr i64 %5211 to i64*
  store i64 4277958, i64* %5213, align 8
  %5214 = load i64, i64* %RBP.i, align 8
  %5215 = add i64 %5214, -344
  %5216 = load i64, i64* %3, align 8
  %5217 = add i64 %5216, 7
  store i64 %5217, i64* %3, align 8
  %5218 = inttoptr i64 %5215 to i64*
  %5219 = load i64, i64* %5218, align 8
  store i64 %5219, i64* %RDI.i4032.pre-phi, align 8
  %5220 = add i64 %5214, -248
  %5221 = add i64 %5216, 13
  store i64 %5221, i64* %3, align 8
  %5222 = inttoptr i64 %5220 to i32*
  %5223 = load i32, i32* %5222, align 4
  %5224 = zext i32 %5223 to i64
  store i64 %5224, i64* %RSI.i3037, align 8
  %5225 = add i64 %5216, 28569
  %5226 = add i64 %5216, 18
  %5227 = load i64, i64* %6, align 8
  %5228 = add i64 %5227, -8
  %5229 = inttoptr i64 %5228 to i64*
  store i64 %5226, i64* %5229, align 8
  store i64 %5228, i64* %6, align 8
  store i64 %5225, i64* %3, align 8
  %call2_402364 = tail call %struct.Memory* @sub_4092f0._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5225, %struct.Memory* %call2_402338)
  %5230 = load i64, i64* %RBP.i, align 8
  %5231 = add i64 %5230, -104
  %5232 = load i64, i64* %3, align 8
  %5233 = add i64 %5232, 4
  store i64 %5233, i64* %3, align 8
  %5234 = inttoptr i64 %5231 to i64*
  %5235 = load i64, i64* %5234, align 8
  store i64 %5235, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4146eb_type* @G__0x4146eb to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4146eb_type* @G__0x4146eb to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5236 = add i64 %5230, -344
  %5237 = add i64 %5232, 18
  store i64 %5237, i64* %3, align 8
  %5238 = inttoptr i64 %5236 to i64*
  %5239 = load i64, i64* %5238, align 8
  store i64 %5239, i64* %RDI.i4032.pre-phi, align 8
  %5240 = add i64 %5230, -248
  %5241 = add i64 %5232, 24
  store i64 %5241, i64* %3, align 8
  %5242 = inttoptr i64 %5240 to i32*
  %5243 = load i32, i32* %5242, align 4
  %5244 = zext i32 %5243 to i64
  store i64 %5244, i64* %RSI.i3037, align 8
  %5245 = add i64 %5232, 28759
  %5246 = add i64 %5232, 29
  %5247 = load i64, i64* %6, align 8
  %5248 = add i64 %5247, -8
  %5249 = inttoptr i64 %5248 to i64*
  store i64 %5246, i64* %5249, align 8
  store i64 %5248, i64* %6, align 8
  store i64 %5245, i64* %3, align 8
  %call2_402381 = tail call %struct.Memory* @sub_4093c0._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5245, %struct.Memory* %call2_402364)
  %5250 = load i64, i64* %RBP.i, align 8
  %5251 = add i64 %5250, -104
  %5252 = load i64, i64* %3, align 8
  %5253 = add i64 %5252, 4
  store i64 %5253, i64* %3, align 8
  %5254 = inttoptr i64 %5251 to i64*
  %5255 = load i64, i64* %5254, align 8
  store i64 %5255, i64* %RDX.i4024, align 8
  %5256 = add i64 %5250, -112
  %5257 = add i64 %5252, 8
  store i64 %5257, i64* %3, align 8
  %5258 = inttoptr i64 %5256 to i64*
  %5259 = load i64, i64* %5258, align 8
  store i64 %5259, i64* %RCX.i4028, align 8
  %5260 = add i64 %5250, -120
  %5261 = add i64 %5252, 12
  store i64 %5261, i64* %3, align 8
  %5262 = inttoptr i64 %5260 to i64*
  %5263 = load i64, i64* %5262, align 8
  store i64 %5263, i64* %250, align 8
  %5264 = add i64 %5250, -128
  %5265 = add i64 %5252, 16
  store i64 %5265, i64* %3, align 8
  %5266 = inttoptr i64 %5264 to i64*
  %5267 = load i64, i64* %5266, align 8
  store i64 %5267, i64* %477, align 8
  %5268 = load i64, i64* %6, align 8
  store i64 %5268, i64* %RAX.i4026, align 8
  %5269 = add i64 %5252, 26
  store i64 %5269, i64* %3, align 8
  %5270 = inttoptr i64 %5268 to i64*
  store i64 4278022, i64* %5270, align 8
  %5271 = load i64, i64* %RBP.i, align 8
  %5272 = add i64 %5271, -344
  %5273 = load i64, i64* %3, align 8
  %5274 = add i64 %5273, 7
  store i64 %5274, i64* %3, align 8
  %5275 = inttoptr i64 %5272 to i64*
  %5276 = load i64, i64* %5275, align 8
  store i64 %5276, i64* %RDI.i4032.pre-phi, align 8
  %5277 = add i64 %5271, -248
  %5278 = add i64 %5273, 13
  store i64 %5278, i64* %3, align 8
  %5279 = inttoptr i64 %5277 to i32*
  %5280 = load i32, i32* %5279, align 4
  %5281 = zext i32 %5280 to i64
  store i64 %5281, i64* %RSI.i3037, align 8
  %5282 = add i64 %5273, 28880
  %5283 = add i64 %5273, 18
  %5284 = load i64, i64* %6, align 8
  %5285 = add i64 %5284, -8
  %5286 = inttoptr i64 %5285 to i64*
  store i64 %5283, i64* %5286, align 8
  store i64 %5285, i64* %6, align 8
  store i64 %5282, i64* %3, align 8
  %call2_4023ad = tail call %struct.Memory* @sub_409470._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5282, %struct.Memory* %call2_402381)
  %5287 = load i64, i64* %RBP.i, align 8
  %5288 = add i64 %5287, -104
  %5289 = load i64, i64* %3, align 8
  %5290 = add i64 %5289, 4
  store i64 %5290, i64* %3, align 8
  %5291 = inttoptr i64 %5288 to i64*
  %5292 = load i64, i64* %5291, align 8
  store i64 %5292, i64* %RDX.i4024, align 8
  %5293 = add i64 %5287, -112
  %5294 = add i64 %5289, 8
  store i64 %5294, i64* %3, align 8
  %5295 = inttoptr i64 %5293 to i64*
  %5296 = load i64, i64* %5295, align 8
  store i64 %5296, i64* %RCX.i4028, align 8
  %5297 = add i64 %5287, -120
  %5298 = add i64 %5289, 12
  store i64 %5298, i64* %3, align 8
  %5299 = inttoptr i64 %5297 to i64*
  %5300 = load i64, i64* %5299, align 8
  store i64 %5300, i64* %250, align 8
  %5301 = add i64 %5287, -128
  %5302 = add i64 %5289, 16
  store i64 %5302, i64* %3, align 8
  %5303 = inttoptr i64 %5301 to i64*
  %5304 = load i64, i64* %5303, align 8
  store i64 %5304, i64* %477, align 8
  %5305 = load i64, i64* %6, align 8
  store i64 %5305, i64* %RAX.i4026, align 8
  %5306 = add i64 %5289, 26
  store i64 %5306, i64* %3, align 8
  %5307 = inttoptr i64 %5305 to i64*
  store i64 4278060, i64* %5307, align 8
  %5308 = load i64, i64* %RBP.i, align 8
  %5309 = add i64 %5308, -344
  %5310 = load i64, i64* %3, align 8
  %5311 = add i64 %5310, 7
  store i64 %5311, i64* %3, align 8
  %5312 = inttoptr i64 %5309 to i64*
  %5313 = load i64, i64* %5312, align 8
  store i64 %5313, i64* %RDI.i4032.pre-phi, align 8
  %5314 = add i64 %5308, -248
  %5315 = add i64 %5310, 13
  store i64 %5315, i64* %3, align 8
  %5316 = inttoptr i64 %5314 to i32*
  %5317 = load i32, i32* %5316, align 4
  %5318 = zext i32 %5317 to i64
  store i64 %5318, i64* %RSI.i3037, align 8
  %5319 = add i64 %5310, 29044
  %5320 = add i64 %5310, 18
  %5321 = load i64, i64* %6, align 8
  %5322 = add i64 %5321, -8
  %5323 = inttoptr i64 %5322 to i64*
  store i64 %5320, i64* %5323, align 8
  store i64 %5322, i64* %6, align 8
  store i64 %5319, i64* %3, align 8
  %call2_4023d9 = tail call %struct.Memory* @sub_409540._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5319, %struct.Memory* %call2_4023ad)
  %5324 = load i64, i64* %RBP.i, align 8
  %5325 = add i64 %5324, -104
  %5326 = load i64, i64* %3, align 8
  %5327 = add i64 %5326, 4
  store i64 %5327, i64* %3, align 8
  %5328 = inttoptr i64 %5325 to i64*
  %5329 = load i64, i64* %5328, align 8
  store i64 %5329, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414753_type* @G__0x414753 to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414753_type* @G__0x414753 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5330 = add i64 %5324, -344
  %5331 = add i64 %5326, 18
  store i64 %5331, i64* %3, align 8
  %5332 = inttoptr i64 %5330 to i64*
  %5333 = load i64, i64* %5332, align 8
  store i64 %5333, i64* %RDI.i4032.pre-phi, align 8
  %5334 = add i64 %5324, -248
  %5335 = add i64 %5326, 24
  store i64 %5335, i64* %3, align 8
  %5336 = inttoptr i64 %5334 to i32*
  %5337 = load i32, i32* %5336, align 4
  %5338 = zext i32 %5337 to i64
  store i64 %5338, i64* %RSI.i3037, align 8
  %5339 = add i64 %5326, 29234
  %5340 = add i64 %5326, 29
  %5341 = load i64, i64* %6, align 8
  %5342 = add i64 %5341, -8
  %5343 = inttoptr i64 %5342 to i64*
  store i64 %5340, i64* %5343, align 8
  store i64 %5342, i64* %6, align 8
  store i64 %5339, i64* %3, align 8
  %call2_4023f6 = tail call %struct.Memory* @sub_409610._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5339, %struct.Memory* %call2_4023d9)
  %5344 = load i64, i64* %RBP.i, align 8
  %5345 = add i64 %5344, -104
  %5346 = load i64, i64* %3, align 8
  %5347 = add i64 %5346, 4
  store i64 %5347, i64* %3, align 8
  %5348 = inttoptr i64 %5345 to i64*
  %5349 = load i64, i64* %5348, align 8
  store i64 %5349, i64* %RDX.i4024, align 8
  %5350 = add i64 %5344, -112
  %5351 = add i64 %5346, 8
  store i64 %5351, i64* %3, align 8
  %5352 = inttoptr i64 %5350 to i64*
  %5353 = load i64, i64* %5352, align 8
  store i64 %5353, i64* %RCX.i4028, align 8
  %5354 = add i64 %5344, -120
  %5355 = add i64 %5346, 12
  store i64 %5355, i64* %3, align 8
  %5356 = inttoptr i64 %5354 to i64*
  %5357 = load i64, i64* %5356, align 8
  store i64 %5357, i64* %250, align 8
  %5358 = add i64 %5344, -128
  %5359 = add i64 %5346, 16
  store i64 %5359, i64* %3, align 8
  %5360 = inttoptr i64 %5358 to i64*
  %5361 = load i64, i64* %5360, align 8
  store i64 %5361, i64* %477, align 8
  %5362 = load i64, i64* %6, align 8
  store i64 %5362, i64* %RAX.i4026, align 8
  %5363 = add i64 %5346, 26
  store i64 %5363, i64* %3, align 8
  %5364 = inttoptr i64 %5362 to i64*
  store i64 4278124, i64* %5364, align 8
  %5365 = load i64, i64* %RBP.i, align 8
  %5366 = add i64 %5365, -344
  %5367 = load i64, i64* %3, align 8
  %5368 = add i64 %5367, 7
  store i64 %5368, i64* %3, align 8
  %5369 = inttoptr i64 %5366 to i64*
  %5370 = load i64, i64* %5369, align 8
  store i64 %5370, i64* %RDI.i4032.pre-phi, align 8
  %5371 = add i64 %5365, -248
  %5372 = add i64 %5367, 13
  store i64 %5372, i64* %3, align 8
  %5373 = inttoptr i64 %5371 to i32*
  %5374 = load i32, i32* %5373, align 4
  %5375 = zext i32 %5374 to i64
  store i64 %5375, i64* %RSI.i3037, align 8
  %5376 = add i64 %5367, 29355
  %5377 = add i64 %5367, 18
  %5378 = load i64, i64* %6, align 8
  %5379 = add i64 %5378, -8
  %5380 = inttoptr i64 %5379 to i64*
  store i64 %5377, i64* %5380, align 8
  store i64 %5379, i64* %6, align 8
  store i64 %5376, i64* %3, align 8
  %call2_402422 = tail call %struct.Memory* @sub_4096c0._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5376, %struct.Memory* %call2_4023f6)
  %5381 = load i64, i64* %RBP.i, align 8
  %5382 = add i64 %5381, -104
  %5383 = load i64, i64* %3, align 8
  %5384 = add i64 %5383, 4
  store i64 %5384, i64* %3, align 8
  %5385 = inttoptr i64 %5382 to i64*
  %5386 = load i64, i64* %5385, align 8
  store i64 %5386, i64* %RDX.i4024, align 8
  %5387 = add i64 %5381, -112
  %5388 = add i64 %5383, 8
  store i64 %5388, i64* %3, align 8
  %5389 = inttoptr i64 %5387 to i64*
  %5390 = load i64, i64* %5389, align 8
  store i64 %5390, i64* %RCX.i4028, align 8
  %5391 = add i64 %5381, -120
  %5392 = add i64 %5383, 12
  store i64 %5392, i64* %3, align 8
  %5393 = inttoptr i64 %5391 to i64*
  %5394 = load i64, i64* %5393, align 8
  store i64 %5394, i64* %250, align 8
  %5395 = add i64 %5381, -128
  %5396 = add i64 %5383, 16
  store i64 %5396, i64* %3, align 8
  %5397 = inttoptr i64 %5395 to i64*
  %5398 = load i64, i64* %5397, align 8
  store i64 %5398, i64* %477, align 8
  %5399 = load i64, i64* %6, align 8
  store i64 %5399, i64* %RAX.i4026, align 8
  %5400 = add i64 %5383, 26
  store i64 %5400, i64* %3, align 8
  %5401 = inttoptr i64 %5399 to i64*
  store i64 4278159, i64* %5401, align 8
  %5402 = load i64, i64* %RBP.i, align 8
  %5403 = add i64 %5402, -344
  %5404 = load i64, i64* %3, align 8
  %5405 = add i64 %5404, 7
  store i64 %5405, i64* %3, align 8
  %5406 = inttoptr i64 %5403 to i64*
  %5407 = load i64, i64* %5406, align 8
  store i64 %5407, i64* %RDI.i4032.pre-phi, align 8
  %5408 = add i64 %5402, -248
  %5409 = add i64 %5404, 13
  store i64 %5409, i64* %3, align 8
  %5410 = inttoptr i64 %5408 to i32*
  %5411 = load i32, i32* %5410, align 4
  %5412 = zext i32 %5411 to i64
  store i64 %5412, i64* %RSI.i3037, align 8
  %5413 = add i64 %5404, 29519
  %5414 = add i64 %5404, 18
  %5415 = load i64, i64* %6, align 8
  %5416 = add i64 %5415, -8
  %5417 = inttoptr i64 %5416 to i64*
  store i64 %5414, i64* %5417, align 8
  store i64 %5416, i64* %6, align 8
  store i64 %5413, i64* %3, align 8
  %call2_40244e = tail call %struct.Memory* @sub_409790._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5413, %struct.Memory* %call2_402422)
  %5418 = load i64, i64* %RBP.i, align 8
  %5419 = add i64 %5418, -104
  %5420 = load i64, i64* %3, align 8
  %5421 = add i64 %5420, 4
  store i64 %5421, i64* %3, align 8
  %5422 = inttoptr i64 %5419 to i64*
  %5423 = load i64, i64* %5422, align 8
  store i64 %5423, i64* %RDX.i4024, align 8
  %5424 = add i64 %5418, -112
  %5425 = add i64 %5420, 8
  store i64 %5425, i64* %3, align 8
  %5426 = inttoptr i64 %5424 to i64*
  %5427 = load i64, i64* %5426, align 8
  store i64 %5427, i64* %RCX.i4028, align 8
  %5428 = add i64 %5418, -120
  %5429 = add i64 %5420, 12
  store i64 %5429, i64* %3, align 8
  %5430 = inttoptr i64 %5428 to i64*
  %5431 = load i64, i64* %5430, align 8
  store i64 %5431, i64* %250, align 8
  %5432 = add i64 %5418, -128
  %5433 = add i64 %5420, 16
  store i64 %5433, i64* %3, align 8
  %5434 = inttoptr i64 %5432 to i64*
  %5435 = load i64, i64* %5434, align 8
  store i64 %5435, i64* %477, align 8
  %5436 = load i64, i64* %6, align 8
  store i64 %5436, i64* %RAX.i4026, align 8
  %5437 = add i64 %5420, 26
  store i64 %5437, i64* %3, align 8
  %5438 = inttoptr i64 %5436 to i64*
  store i64 4278195, i64* %5438, align 8
  %5439 = load i64, i64* %RBP.i, align 8
  %5440 = add i64 %5439, -344
  %5441 = load i64, i64* %3, align 8
  %5442 = add i64 %5441, 7
  store i64 %5442, i64* %3, align 8
  %5443 = inttoptr i64 %5440 to i64*
  %5444 = load i64, i64* %5443, align 8
  store i64 %5444, i64* %RDI.i4032.pre-phi, align 8
  %5445 = add i64 %5439, -248
  %5446 = add i64 %5441, 13
  store i64 %5446, i64* %3, align 8
  %5447 = inttoptr i64 %5445 to i32*
  %5448 = load i32, i32* %5447, align 4
  %5449 = zext i32 %5448 to i64
  store i64 %5449, i64* %RSI.i3037, align 8
  %5450 = add i64 %5441, 29683
  %5451 = add i64 %5441, 18
  %5452 = load i64, i64* %6, align 8
  %5453 = add i64 %5452, -8
  %5454 = inttoptr i64 %5453 to i64*
  store i64 %5451, i64* %5454, align 8
  store i64 %5453, i64* %6, align 8
  store i64 %5450, i64* %3, align 8
  %call2_40247a = tail call %struct.Memory* @sub_409860._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5450, %struct.Memory* %call2_40244e)
  %5455 = load i64, i64* %RBP.i, align 8
  %5456 = add i64 %5455, -104
  %5457 = load i64, i64* %3, align 8
  %5458 = add i64 %5457, 4
  store i64 %5458, i64* %3, align 8
  %5459 = inttoptr i64 %5456 to i64*
  %5460 = load i64, i64* %5459, align 8
  store i64 %5460, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x4147d4_type* @G__0x4147d4 to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x4147d4_type* @G__0x4147d4 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5461 = add i64 %5455, -344
  %5462 = add i64 %5457, 18
  store i64 %5462, i64* %3, align 8
  %5463 = inttoptr i64 %5461 to i64*
  %5464 = load i64, i64* %5463, align 8
  store i64 %5464, i64* %RDI.i4032.pre-phi, align 8
  %5465 = add i64 %5455, -248
  %5466 = add i64 %5457, 24
  store i64 %5466, i64* %3, align 8
  %5467 = inttoptr i64 %5465 to i32*
  %5468 = load i32, i32* %5467, align 4
  %5469 = zext i32 %5468 to i64
  store i64 %5469, i64* %RSI.i3037, align 8
  %5470 = add i64 %5457, 29873
  %5471 = add i64 %5457, 29
  %5472 = load i64, i64* %6, align 8
  %5473 = add i64 %5472, -8
  %5474 = inttoptr i64 %5473 to i64*
  store i64 %5471, i64* %5474, align 8
  store i64 %5473, i64* %6, align 8
  store i64 %5470, i64* %3, align 8
  %call2_402497 = tail call %struct.Memory* @sub_409930._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5470, %struct.Memory* %call2_40247a)
  %5475 = load i64, i64* %RBP.i, align 8
  %5476 = add i64 %5475, -104
  %5477 = load i64, i64* %3, align 8
  %5478 = add i64 %5477, 4
  store i64 %5478, i64* %3, align 8
  %5479 = inttoptr i64 %5476 to i64*
  %5480 = load i64, i64* %5479, align 8
  store i64 %5480, i64* %RDX.i4024, align 8
  %5481 = add i64 %5475, -112
  %5482 = add i64 %5477, 8
  store i64 %5482, i64* %3, align 8
  %5483 = inttoptr i64 %5481 to i64*
  %5484 = load i64, i64* %5483, align 8
  store i64 %5484, i64* %RCX.i4028, align 8
  %5485 = add i64 %5475, -120
  %5486 = add i64 %5477, 12
  store i64 %5486, i64* %3, align 8
  %5487 = inttoptr i64 %5485 to i64*
  %5488 = load i64, i64* %5487, align 8
  store i64 %5488, i64* %250, align 8
  %5489 = add i64 %5475, -128
  %5490 = add i64 %5477, 16
  store i64 %5490, i64* %3, align 8
  %5491 = inttoptr i64 %5489 to i64*
  %5492 = load i64, i64* %5491, align 8
  store i64 %5492, i64* %477, align 8
  %5493 = load i64, i64* %6, align 8
  store i64 %5493, i64* %RAX.i4026, align 8
  %5494 = add i64 %5477, 26
  store i64 %5494, i64* %3, align 8
  %5495 = inttoptr i64 %5493 to i64*
  store i64 4278250, i64* %5495, align 8
  %5496 = load i64, i64* %RBP.i, align 8
  %5497 = add i64 %5496, -344
  %5498 = load i64, i64* %3, align 8
  %5499 = add i64 %5498, 7
  store i64 %5499, i64* %3, align 8
  %5500 = inttoptr i64 %5497 to i64*
  %5501 = load i64, i64* %5500, align 8
  store i64 %5501, i64* %RDI.i4032.pre-phi, align 8
  %5502 = add i64 %5496, -248
  %5503 = add i64 %5498, 13
  store i64 %5503, i64* %3, align 8
  %5504 = inttoptr i64 %5502 to i32*
  %5505 = load i32, i32* %5504, align 4
  %5506 = zext i32 %5505 to i64
  store i64 %5506, i64* %RSI.i3037, align 8
  %5507 = add i64 %5498, 29994
  %5508 = add i64 %5498, 18
  %5509 = load i64, i64* %6, align 8
  %5510 = add i64 %5509, -8
  %5511 = inttoptr i64 %5510 to i64*
  store i64 %5508, i64* %5511, align 8
  store i64 %5510, i64* %6, align 8
  store i64 %5507, i64* %3, align 8
  %call2_4024c3 = tail call %struct.Memory* @sub_4099e0._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5507, %struct.Memory* %call2_402497)
  %5512 = load i64, i64* %RBP.i, align 8
  %5513 = add i64 %5512, -104
  %5514 = load i64, i64* %3, align 8
  %5515 = add i64 %5514, 4
  store i64 %5515, i64* %3, align 8
  %5516 = inttoptr i64 %5513 to i64*
  %5517 = load i64, i64* %5516, align 8
  store i64 %5517, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x414809_type* @G__0x414809 to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x414809_type* @G__0x414809 to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5518 = add i64 %5512, -344
  %5519 = add i64 %5514, 18
  store i64 %5519, i64* %3, align 8
  %5520 = inttoptr i64 %5518 to i64*
  %5521 = load i64, i64* %5520, align 8
  store i64 %5521, i64* %RDI.i4032.pre-phi, align 8
  %5522 = add i64 %5512, -248
  %5523 = add i64 %5514, 24
  store i64 %5523, i64* %3, align 8
  %5524 = inttoptr i64 %5522 to i32*
  %5525 = load i32, i32* %5524, align 4
  %5526 = zext i32 %5525 to i64
  store i64 %5526, i64* %RSI.i3037, align 8
  %5527 = add i64 %5514, 30184
  %5528 = add i64 %5514, 29
  %5529 = load i64, i64* %6, align 8
  %5530 = add i64 %5529, -8
  %5531 = inttoptr i64 %5530 to i64*
  store i64 %5528, i64* %5531, align 8
  store i64 %5530, i64* %6, align 8
  store i64 %5527, i64* %3, align 8
  %call2_4024e0 = tail call %struct.Memory* @sub_409ab0._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5527, %struct.Memory* %call2_4024c3)
  %5532 = load i64, i64* %RBP.i, align 8
  %5533 = add i64 %5532, -104
  %5534 = load i64, i64* %3, align 8
  %5535 = add i64 %5534, 4
  store i64 %5535, i64* %3, align 8
  %5536 = inttoptr i64 %5533 to i64*
  %5537 = load i64, i64* %5536, align 8
  store i64 %5537, i64* %RDX.i4024, align 8
  %5538 = add i64 %5532, -112
  %5539 = add i64 %5534, 8
  store i64 %5539, i64* %3, align 8
  %5540 = inttoptr i64 %5538 to i64*
  %5541 = load i64, i64* %5540, align 8
  store i64 %5541, i64* %RCX.i4028, align 8
  %5542 = add i64 %5532, -120
  %5543 = add i64 %5534, 12
  store i64 %5543, i64* %3, align 8
  %5544 = inttoptr i64 %5542 to i64*
  %5545 = load i64, i64* %5544, align 8
  store i64 %5545, i64* %250, align 8
  %5546 = add i64 %5532, -128
  %5547 = add i64 %5534, 16
  store i64 %5547, i64* %3, align 8
  %5548 = inttoptr i64 %5546 to i64*
  %5549 = load i64, i64* %5548, align 8
  store i64 %5549, i64* %477, align 8
  %5550 = load i64, i64* %6, align 8
  store i64 %5550, i64* %RAX.i4026, align 8
  %5551 = add i64 %5534, 26
  store i64 %5551, i64* %3, align 8
  %5552 = inttoptr i64 %5550 to i64*
  store i64 4278302, i64* %5552, align 8
  %5553 = load i64, i64* %RBP.i, align 8
  %5554 = add i64 %5553, -344
  %5555 = load i64, i64* %3, align 8
  %5556 = add i64 %5555, 7
  store i64 %5556, i64* %3, align 8
  %5557 = inttoptr i64 %5554 to i64*
  %5558 = load i64, i64* %5557, align 8
  store i64 %5558, i64* %RDI.i4032.pre-phi, align 8
  %5559 = add i64 %5553, -248
  %5560 = add i64 %5555, 13
  store i64 %5560, i64* %3, align 8
  %5561 = inttoptr i64 %5559 to i32*
  %5562 = load i32, i32* %5561, align 4
  %5563 = zext i32 %5562 to i64
  store i64 %5563, i64* %RSI.i3037, align 8
  %5564 = add i64 %5555, 30305
  %5565 = add i64 %5555, 18
  %5566 = load i64, i64* %6, align 8
  %5567 = add i64 %5566, -8
  %5568 = inttoptr i64 %5567 to i64*
  store i64 %5565, i64* %5568, align 8
  store i64 %5567, i64* %6, align 8
  store i64 %5564, i64* %3, align 8
  %call2_40250c = tail call %struct.Memory* @sub_409b60._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5564, %struct.Memory* %call2_4024e0)
  %5569 = load i64, i64* %RBP.i, align 8
  %5570 = add i64 %5569, -104
  %5571 = load i64, i64* %3, align 8
  %5572 = add i64 %5571, 4
  store i64 %5572, i64* %3, align 8
  %5573 = inttoptr i64 %5570 to i64*
  %5574 = load i64, i64* %5573, align 8
  store i64 %5574, i64* %RDX.i4024, align 8
  store i64 and (i64 ptrtoint (%G__0x41483c_type* @G__0x41483c to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x41483c_type* @G__0x41483c to i64), i64 4294967295) to i32) to i64), i64* %RCX.i4028, align 8
  %5575 = add i64 %5569, -344
  %5576 = add i64 %5571, 18
  store i64 %5576, i64* %3, align 8
  %5577 = inttoptr i64 %5575 to i64*
  %5578 = load i64, i64* %5577, align 8
  store i64 %5578, i64* %RDI.i4032.pre-phi, align 8
  %5579 = add i64 %5569, -248
  %5580 = add i64 %5571, 24
  store i64 %5580, i64* %3, align 8
  %5581 = inttoptr i64 %5579 to i32*
  %5582 = load i32, i32* %5581, align 4
  %5583 = zext i32 %5582 to i64
  store i64 %5583, i64* %RSI.i3037, align 8
  %5584 = add i64 %5571, 30495
  %5585 = add i64 %5571, 29
  %5586 = load i64, i64* %6, align 8
  %5587 = add i64 %5586, -8
  %5588 = inttoptr i64 %5587 to i64*
  store i64 %5585, i64* %5588, align 8
  store i64 %5587, i64* %6, align 8
  store i64 %5584, i64* %3, align 8
  %call2_402529 = tail call %struct.Memory* @sub_409c30._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5584, %struct.Memory* %call2_40250c)
  %5589 = load i64, i64* %RBP.i, align 8
  %5590 = add i64 %5589, -104
  %5591 = load i64, i64* %3, align 8
  %5592 = add i64 %5591, 4
  store i64 %5592, i64* %3, align 8
  %5593 = inttoptr i64 %5590 to i64*
  %5594 = load i64, i64* %5593, align 8
  store i64 %5594, i64* %RDX.i4024, align 8
  %5595 = add i64 %5589, -112
  %5596 = add i64 %5591, 8
  store i64 %5596, i64* %3, align 8
  %5597 = inttoptr i64 %5595 to i64*
  %5598 = load i64, i64* %5597, align 8
  store i64 %5598, i64* %RCX.i4028, align 8
  %5599 = add i64 %5589, -120
  %5600 = add i64 %5591, 12
  store i64 %5600, i64* %3, align 8
  %5601 = inttoptr i64 %5599 to i64*
  %5602 = load i64, i64* %5601, align 8
  store i64 %5602, i64* %250, align 8
  %5603 = add i64 %5589, -128
  %5604 = add i64 %5591, 16
  store i64 %5604, i64* %3, align 8
  %5605 = inttoptr i64 %5603 to i64*
  %5606 = load i64, i64* %5605, align 8
  store i64 %5606, i64* %477, align 8
  %5607 = load i64, i64* %6, align 8
  store i64 %5607, i64* %RAX.i4026, align 8
  %5608 = add i64 %5591, 26
  store i64 %5608, i64* %3, align 8
  %5609 = inttoptr i64 %5607 to i64*
  store i64 4278354, i64* %5609, align 8
  %5610 = load i64, i64* %RBP.i, align 8
  %5611 = add i64 %5610, -344
  %5612 = load i64, i64* %3, align 8
  %5613 = add i64 %5612, 7
  store i64 %5613, i64* %3, align 8
  %5614 = inttoptr i64 %5611 to i64*
  %5615 = load i64, i64* %5614, align 8
  store i64 %5615, i64* %RDI.i4032.pre-phi, align 8
  %5616 = add i64 %5610, -248
  %5617 = add i64 %5612, 13
  store i64 %5617, i64* %3, align 8
  %5618 = inttoptr i64 %5616 to i32*
  %5619 = load i32, i32* %5618, align 4
  %5620 = zext i32 %5619 to i64
  store i64 %5620, i64* %RSI.i3037, align 8
  %5621 = add i64 %5612, 30616
  %5622 = add i64 %5612, 18
  %5623 = load i64, i64* %6, align 8
  %5624 = add i64 %5623, -8
  %5625 = inttoptr i64 %5624 to i64*
  store i64 %5622, i64* %5625, align 8
  store i64 %5624, i64* %6, align 8
  store i64 %5621, i64* %3, align 8
  %call2_402555 = tail call %struct.Memory* @sub_409ce0._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5621, %struct.Memory* %call2_402529)
  %5626 = load i64, i64* %3, align 8
  %5627 = add i64 %5626, 2194222
  %5628 = add i64 %5626, 8
  store i64 %5628, i64* %3, align 8
  %5629 = inttoptr i64 %5627 to i64*
  %5630 = load i64, i64* %5629, align 8
  store i64 %5630, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %5631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5632 = bitcast %union.VectorReg* %5631 to i8*
  %5633 = add i64 %5626, 71974
  %5634 = add i64 %5626, 16
  store i64 %5634, i64* %3, align 8
  %5635 = inttoptr i64 %5633 to i64*
  %5636 = load i64, i64* %5635, align 8
  %5637 = bitcast %union.VectorReg* %5631 to double*
  %5638 = getelementptr inbounds %union.VectorReg, %union.VectorReg* %5631, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5636, i64* %5638, align 1
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %5640 = bitcast i64* %5639 to double*
  store double 0.000000e+00, double* %5640, align 1
  %5641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5642 = bitcast %union.VectorReg* %5641 to i8*
  %5643 = bitcast [32 x %union.VectorReg]* %52 to <2 x i32>*
  %5644 = bitcast i64 %5630 to <2 x i32>
  %5645 = bitcast i64* %60 to <2 x i32>*
  %5646 = extractelement <2 x i32> %5644, i32 0
  %5647 = bitcast %union.VectorReg* %5641 to i32*
  store i32 %5646, i32* %5647, align 1
  %5648 = extractelement <2 x i32> %5644, i32 1
  %5649 = getelementptr inbounds i8, i8* %5642, i64 4
  %5650 = bitcast i8* %5649 to i32*
  store i32 %5648, i32* %5650, align 1
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %5652 = bitcast i64* %5651 to i32*
  store i32 0, i32* %5652, align 1
  %5653 = getelementptr inbounds i8, i8* %5642, i64 12
  %5654 = bitcast i8* %5653 to i32*
  store i32 0, i32* %5654, align 1
  %5655 = bitcast %union.VectorReg* %5641 to double*
  %5656 = load double, double* %5655, align 1
  %5657 = bitcast i64 %5636 to double
  %5658 = fsub double %5656, %5657
  store double %5658, double* %5655, align 1
  %5659 = tail call double @llvm.trunc.f64(double %5658)
  %5660 = tail call double @llvm.fabs.f64(double %5659)
  %5661 = fcmp ogt double %5660, 0x43E0000000000000
  %5662 = fptosi double %5659 to i64
  %5663 = select i1 %5661, i64 -9223372036854775808, i64 %5662
  store i64 -9223372036854775808, i64* %RCX.i4028, align 8
  %5664 = xor i64 %5663, -9223372036854775808
  store i64 %5664, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %5665 = trunc i64 %5663 to i32
  %5666 = and i32 %5665, 255
  %5667 = tail call i32 @llvm.ctpop.i32(i32 %5666)
  %5668 = trunc i32 %5667 to i8
  %5669 = and i8 %5668, 1
  %5670 = xor i8 %5669, 1
  store i8 %5670, i8* %33, align 1
  %5671 = icmp eq i64 %5664, 0
  %5672 = zext i1 %5671 to i8
  store i8 %5672, i8* %42, align 1
  %5673 = lshr i64 %5664, 63
  %5674 = trunc i64 %5673 to i8
  store i8 %5674, i8* %45, align 1
  store i8 0, i8* %51, align 1
  store i8 0, i8* %39, align 1
  %5675 = bitcast i64 %5630 to double
  %5676 = tail call double @llvm.trunc.f64(double %5675)
  %5677 = tail call double @llvm.fabs.f64(double %5676)
  %5678 = fcmp ogt double %5677, 0x43E0000000000000
  %5679 = fptosi double %5676 to i64
  %5680 = select i1 %5678, i64 -9223372036854775808, i64 %5679
  store i64 %5680, i64* %RDX.i4024, align 8
  %5681 = add i64 %5626, 50
  store i64 %5681, i64* %3, align 8
  %5682 = fcmp uno double %5657, %5675
  br i1 %5682, label %5683, label %5693

; <label>:5683:                                   ; preds = %routine_idivq__rsi.exit
  %5684 = fadd double %5657, %5675
  %5685 = bitcast double %5684 to i64
  %5686 = and i64 %5685, 9221120237041090560
  %5687 = icmp eq i64 %5686, 9218868437227405312
  %5688 = and i64 %5685, 2251799813685247
  %5689 = icmp ne i64 %5688, 0
  %5690 = and i1 %5687, %5689
  br i1 %5690, label %5691, label %5699

; <label>:5691:                                   ; preds = %5683
  %5692 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5681, %struct.Memory* %call2_402555)
  %.pre27 = load i64, i64* %RDX.i4024, align 8
  %.pre28 = load i64, i64* %3, align 8
  %.pre29 = load i8, i8* %26, align 1
  %.pre30 = load i8, i8* %42, align 1
  %.pre31 = load i64, i64* %RAX.i4026, align 8
  %.pre32 = load i64, i64* %RCX.i4028, align 8
  br label %routine_ucomisd__xmm0___xmm1.exit

; <label>:5693:                                   ; preds = %routine_idivq__rsi.exit
  %5694 = fcmp ogt double %5657, %5675
  br i1 %5694, label %5699, label %5695

; <label>:5695:                                   ; preds = %5693
  %5696 = fcmp olt double %5657, %5675
  br i1 %5696, label %5699, label %5697

; <label>:5697:                                   ; preds = %5695
  %5698 = fcmp oeq double %5657, %5675
  br i1 %5698, label %5699, label %5703

; <label>:5699:                                   ; preds = %5697, %5695, %5693, %5683
  %5700 = phi i8 [ 0, %5693 ], [ 0, %5695 ], [ 1, %5697 ], [ 1, %5683 ]
  %5701 = phi i8 [ 0, %5693 ], [ 0, %5695 ], [ 0, %5697 ], [ 1, %5683 ]
  %5702 = phi i8 [ 0, %5693 ], [ 1, %5695 ], [ 0, %5697 ], [ 1, %5683 ]
  store i8 %5700, i8* %42, align 1
  store i8 %5701, i8* %33, align 1
  store i8 %5702, i8* %26, align 1
  br label %5703

; <label>:5703:                                   ; preds = %5699, %5697
  %5704 = phi i8 [ %5700, %5699 ], [ %5672, %5697 ]
  %5705 = phi i8 [ %5702, %5699 ], [ 0, %5697 ]
  store i8 0, i8* %51, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %39, align 1
  br label %routine_ucomisd__xmm0___xmm1.exit

routine_ucomisd__xmm0___xmm1.exit:                ; preds = %5703, %5691
  %5706 = phi i64 [ %.pre32, %5691 ], [ -9223372036854775808, %5703 ]
  %5707 = phi i64 [ %.pre31, %5691 ], [ %5664, %5703 ]
  %5708 = phi i8 [ %.pre30, %5691 ], [ %5704, %5703 ]
  %5709 = phi i8 [ %.pre29, %5691 ], [ %5705, %5703 ]
  %5710 = phi i64 [ %.pre28, %5691 ], [ %5681, %5703 ]
  %5711 = phi i64 [ %.pre27, %5691 ], [ %5680, %5703 ]
  %5712 = phi %struct.Memory* [ %5692, %5691 ], [ %call2_402555, %5703 ]
  %5713 = or i8 %5708, %5709
  %5714 = icmp eq i8 %5713, 0
  %5715 = select i1 %5714, i64 %5711, i64 %5707
  store i64 %5715, i64* %RAX.i4026, align 8
  store i64 zext (i32 trunc (i64 and (i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64 4294967295) to i32) to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 and (i64 ptrtoint (%G__0x6411c0_type* @G__0x6411c0 to i64), i64 4294967295), i64* %RSI.i3037, align 8
  store i64 %5715, i64* %RDX.i4024, align 8
  %5716 = load i64, i64* %RBP.i, align 8
  %5717 = add i64 %5716, -360
  %5718 = add i64 %5710, 26
  store i64 %5718, i64* %3, align 8
  %5719 = inttoptr i64 %5717 to i64*
  store i64 %5706, i64* %5719, align 8
  %5720 = load i64, i64* %RBP.i, align 8
  %5721 = add i64 %5720, -368
  %5722 = load i64, i64* %3, align 8
  %5723 = add i64 %5722, 8
  store i64 %5723, i64* %3, align 8
  %5724 = load i64, i64* %5638, align 1
  %5725 = inttoptr i64 %5721 to i64*
  store i64 %5724, i64* %5725, align 8
  %5726 = load i64, i64* %3, align 8
  %5727 = add i64 %5726, 30722
  %5728 = add i64 %5726, 5
  %5729 = load i64, i64* %6, align 8
  %5730 = add i64 %5729, -8
  %5731 = inttoptr i64 %5730 to i64*
  store i64 %5728, i64* %5731, align 8
  store i64 %5730, i64* %6, align 8
  store i64 %5727, i64* %3, align 8
  %call2_4025ae = tail call %struct.Memory* @sub_409db0._Z4fillIPmmEvT_S1_T0_(%struct.State* nonnull %0, i64 %5727, %struct.Memory* %5712)
  %5732 = load i64, i64* %RBP.i, align 8
  %5733 = add i64 %5732, -40
  %5734 = load i64, i64* %3, align 8
  %5735 = add i64 %5734, 5
  store i64 %5735, i64* %3, align 8
  %5736 = inttoptr i64 %5733 to i64*
  %5737 = load i64, i64* %5736, align 8
  store i64 %5737, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %.cast4 = bitcast i64 %5737 to <2 x i32>
  %5738 = extractelement <2 x i32> %.cast4, i32 0
  %5739 = bitcast %union.VectorReg* %5631 to i32*
  store i32 %5738, i32* %5739, align 1
  %5740 = extractelement <2 x i32> %.cast4, i32 1
  %5741 = getelementptr inbounds i8, i8* %5632, i64 4
  %5742 = bitcast i8* %5741 to i32*
  store i32 %5740, i32* %5742, align 1
  %5743 = bitcast i64* %5639 to i32*
  store i32 0, i32* %5743, align 1
  %5744 = getelementptr inbounds i8, i8* %5632, i64 12
  %5745 = bitcast i8* %5744 to i32*
  store i32 0, i32* %5745, align 1
  %5746 = add i64 %5732, -368
  %5747 = add i64 %5734, 16
  store i64 %5747, i64* %3, align 8
  %5748 = inttoptr i64 %5746 to i64*
  %5749 = load i64, i64* %5748, align 8
  %5750 = getelementptr inbounds %union.VectorReg, %union.VectorReg* %5641, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5749, i64* %5750, align 1
  %5751 = bitcast i64* %5651 to double*
  store double 0.000000e+00, double* %5751, align 1
  %5752 = load double, double* %5637, align 1
  %5753 = bitcast i64 %5749 to double
  %5754 = fsub double %5752, %5753
  store double %5754, double* %5637, align 1
  %5755 = tail call double @llvm.trunc.f64(double %5754)
  %5756 = tail call double @llvm.fabs.f64(double %5755)
  %5757 = fcmp ogt double %5756, 0x43E0000000000000
  %5758 = fptosi double %5755 to i64
  %5759 = select i1 %5757, i64 -9223372036854775808, i64 %5758
  store i64 %5759, i64* %RAX.i4026, align 8
  %5760 = add i64 %5732, -360
  %5761 = add i64 %5734, 32
  store i64 %5761, i64* %3, align 8
  %5762 = inttoptr i64 %5760 to i64*
  %5763 = load i64, i64* %5762, align 8
  store i64 %5763, i64* %RCX.i4028, align 8
  %5764 = xor i64 %5759, %5763
  store i64 %5764, i64* %RAX.i4026, align 8
  store i8 0, i8* %26, align 1
  %5765 = trunc i64 %5764 to i32
  %5766 = and i32 %5765, 255
  %5767 = tail call i32 @llvm.ctpop.i32(i32 %5766)
  %5768 = trunc i32 %5767 to i8
  %5769 = and i8 %5768, 1
  %5770 = xor i8 %5769, 1
  store i8 %5770, i8* %33, align 1
  %5771 = icmp eq i64 %5764, 0
  %5772 = zext i1 %5771 to i8
  store i8 %5772, i8* %42, align 1
  %5773 = lshr i64 %5764, 63
  %5774 = trunc i64 %5773 to i8
  store i8 %5774, i8* %45, align 1
  store i8 0, i8* %51, align 1
  store i8 0, i8* %39, align 1
  %5775 = bitcast i64 %5737 to double
  %5776 = tail call double @llvm.trunc.f64(double %5775)
  %5777 = tail call double @llvm.fabs.f64(double %5776)
  %5778 = fcmp ogt double %5777, 0x43E0000000000000
  %5779 = fptosi double %5776 to i64
  %5780 = select i1 %5778, i64 -9223372036854775808, i64 %5779
  store i64 %5780, i64* %RDX.i4024, align 8
  %5781 = add i64 %5734, 44
  store i64 %5781, i64* %3, align 8
  %5782 = fcmp uno double %5753, %5775
  br i1 %5782, label %5783, label %5793

; <label>:5783:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %5784 = fadd double %5753, %5775
  %5785 = bitcast double %5784 to i64
  %5786 = and i64 %5785, 9221120237041090560
  %5787 = icmp eq i64 %5786, 9218868437227405312
  %5788 = and i64 %5785, 2251799813685247
  %5789 = icmp ne i64 %5788, 0
  %5790 = and i1 %5787, %5789
  br i1 %5790, label %5791, label %5799

; <label>:5791:                                   ; preds = %5783
  %5792 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5781, %struct.Memory* %call2_4025ae)
  %.pre33 = load i64, i64* %RDX.i4024, align 8
  %.pre34 = load i64, i64* %3, align 8
  %.pre35 = load i8, i8* %26, align 1
  %.pre36 = load i8, i8* %42, align 1
  %.pre37 = load i64, i64* %RAX.i4026, align 8
  %.pre38 = load i64, i64* %RBP.i, align 8
  br label %routine_divq_MINUS0x98__rbp_.exit

; <label>:5793:                                   ; preds = %routine_ucomisd__xmm0___xmm1.exit
  %5794 = fcmp ogt double %5753, %5775
  br i1 %5794, label %5799, label %5795

; <label>:5795:                                   ; preds = %5793
  %5796 = fcmp olt double %5753, %5775
  br i1 %5796, label %5799, label %5797

; <label>:5797:                                   ; preds = %5795
  %5798 = fcmp oeq double %5753, %5775
  br i1 %5798, label %5799, label %5803

; <label>:5799:                                   ; preds = %5797, %5795, %5793, %5783
  %5800 = phi i8 [ 0, %5793 ], [ 0, %5795 ], [ 1, %5797 ], [ 1, %5783 ]
  %5801 = phi i8 [ 0, %5793 ], [ 0, %5795 ], [ 0, %5797 ], [ 1, %5783 ]
  %5802 = phi i8 [ 0, %5793 ], [ 1, %5795 ], [ 0, %5797 ], [ 1, %5783 ]
  store i8 %5800, i8* %42, align 1
  store i8 %5801, i8* %33, align 1
  store i8 %5802, i8* %26, align 1
  br label %5803

; <label>:5803:                                   ; preds = %5799, %5797
  %5804 = phi i8 [ %5800, %5799 ], [ %5772, %5797 ]
  %5805 = phi i8 [ %5802, %5799 ], [ 0, %5797 ]
  store i8 0, i8* %51, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %39, align 1
  br label %routine_divq_MINUS0x98__rbp_.exit

routine_divq_MINUS0x98__rbp_.exit:                ; preds = %5803, %5791
  %5806 = phi i64 [ %.pre38, %5791 ], [ %5732, %5803 ]
  %5807 = phi i64 [ %.pre37, %5791 ], [ %5764, %5803 ]
  %5808 = phi i8 [ %.pre36, %5791 ], [ %5804, %5803 ]
  %5809 = phi i8 [ %.pre35, %5791 ], [ %5805, %5803 ]
  %5810 = phi i64 [ %.pre34, %5791 ], [ %5781, %5803 ]
  %5811 = phi i64 [ %.pre33, %5791 ], [ %5780, %5803 ]
  %5812 = phi %struct.Memory* [ %5792, %5791 ], [ %call2_4025ae, %5803 ]
  %5813 = or i8 %5808, %5809
  %5814 = icmp eq i8 %5813, 0
  %5815 = select i1 %5814, i64 %5811, i64 %5807
  store i64 %5815, i64* %RAX.i4026, align 8
  %5816 = add i64 %5806, -136
  %5817 = add i64 %5810, 11
  store i64 %5817, i64* %3, align 8
  %5818 = inttoptr i64 %5816 to i64*
  store i64 %5815, i64* %5818, align 8
  %5819 = load i64, i64* %RBP.i, align 8
  %5820 = add i64 %5819, -136
  %5821 = load i64, i64* %3, align 8
  %5822 = add i64 %5821, 7
  store i64 %5822, i64* %3, align 8
  %5823 = inttoptr i64 %5820 to i64*
  %5824 = load i64, i64* %5823, align 8
  %5825 = shl i64 %5824, 1
  %5826 = icmp slt i64 %5824, 0
  %5827 = icmp slt i64 %5825, 0
  %5828 = xor i1 %5826, %5827
  store i64 %5825, i64* %RAX.i4026, align 8
  %.lobit = lshr i64 %5824, 63
  %5829 = trunc i64 %.lobit to i8
  store i8 %5829, i8* %26, align 1
  %5830 = trunc i64 %5825 to i32
  %5831 = and i32 %5830, 254
  %5832 = tail call i32 @llvm.ctpop.i32(i32 %5831)
  %5833 = trunc i32 %5832 to i8
  %5834 = and i8 %5833, 1
  %5835 = xor i8 %5834, 1
  store i8 %5835, i8* %33, align 1
  store i8 0, i8* %39, align 1
  %5836 = icmp eq i64 %5825, 0
  %5837 = zext i1 %5836 to i8
  store i8 %5837, i8* %42, align 1
  %5838 = lshr i64 %5824, 62
  %5839 = trunc i64 %5838 to i8
  %5840 = and i8 %5839, 1
  store i8 %5840, i8* %45, align 1
  %5841 = zext i1 %5828 to i8
  store i8 %5841, i8* %51, align 1
  %5842 = add i64 %5819, -144
  %5843 = add i64 %5821, 17
  store i64 %5843, i64* %3, align 8
  %5844 = inttoptr i64 %5842 to i64*
  store i64 %5825, i64* %5844, align 8
  %5845 = load i64, i64* %RBP.i, align 8
  %5846 = add i64 %5845, -136
  %5847 = load i64, i64* %3, align 8
  %5848 = add i64 %5847, 7
  store i64 %5848, i64* %3, align 8
  %5849 = inttoptr i64 %5846 to i64*
  %5850 = load i64, i64* %5849, align 8
  %5851 = add i64 %5850, 2
  store i64 %5851, i64* %RAX.i4026, align 8
  %5852 = icmp ugt i64 %5850, -3
  %5853 = zext i1 %5852 to i8
  store i8 %5853, i8* %26, align 1
  %5854 = trunc i64 %5851 to i32
  %5855 = and i32 %5854, 255
  %5856 = tail call i32 @llvm.ctpop.i32(i32 %5855)
  %5857 = trunc i32 %5856 to i8
  %5858 = and i8 %5857, 1
  %5859 = xor i8 %5858, 1
  store i8 %5859, i8* %33, align 1
  %5860 = xor i64 %5851, %5850
  %5861 = lshr i64 %5860, 4
  %5862 = trunc i64 %5861 to i8
  %5863 = and i8 %5862, 1
  store i8 %5863, i8* %39, align 1
  %5864 = icmp eq i64 %5851, 0
  %5865 = zext i1 %5864 to i8
  store i8 %5865, i8* %42, align 1
  %5866 = lshr i64 %5851, 63
  %5867 = trunc i64 %5866 to i8
  store i8 %5867, i8* %45, align 1
  %5868 = lshr i64 %5850, 63
  %5869 = xor i64 %5866, %5868
  %5870 = add nuw nsw i64 %5869, %5866
  %5871 = icmp eq i64 %5870, 2
  %5872 = zext i1 %5871 to i8
  store i8 %5872, i8* %51, align 1
  %5873 = add i64 %5845, -152
  %5874 = add i64 %5847, 18
  store i64 %5874, i64* %3, align 8
  %5875 = inttoptr i64 %5873 to i64*
  store i64 %5851, i64* %5875, align 8
  %5876 = load i64, i64* %RBP.i, align 8
  %5877 = add i64 %5876, -136
  %5878 = load i64, i64* %3, align 8
  %5879 = add i64 %5878, 7
  store i64 %5879, i64* %3, align 8
  %5880 = inttoptr i64 %5877 to i64*
  %5881 = load i64, i64* %5880, align 8
  store i64 %5881, i64* %RAX.i4026, align 8
  %5882 = add i64 %5876, -144
  %5883 = add i64 %5878, 14
  store i64 %5883, i64* %3, align 8
  %5884 = inttoptr i64 %5882 to i64*
  %5885 = load i64, i64* %5884, align 8
  store i64 %5885, i64* %RDX.i4024, align 8
  %5886 = add i64 %5876, -376
  %5887 = add i64 %5878, 21
  store i64 %5887, i64* %3, align 8
  %5888 = inttoptr i64 %5886 to i64*
  store i64 %5881, i64* %5888, align 8
  %5889 = load i64, i64* %RDX.i4024, align 8
  %5890 = load i64, i64* %3, align 8
  store i64 %5889, i64* %RAX.i4026, align 8
  store i64 0, i64* %362, align 8
  store i8 0, i8* %26, align 1
  store i8 1, i8* %33, align 1
  store i8 1, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  store i8 0, i8* %39, align 1
  store i64 0, i64* %RDX.i4024, align 8
  %5891 = load i64, i64* %RBP.i, align 8
  %5892 = add i64 %5891, -152
  %5893 = add i64 %5890, 16
  store i64 %5893, i64* %3, align 8
  %5894 = inttoptr i64 %5892 to i64*
  %5895 = load i64, i64* %5894, align 8
  %div = udiv i64 %5889, %5895
  %5896 = urem i64 %5889, %5895
  store i64 %div, i64* %5033, align 8
  store i64 %5896, i64* %376, align 8
  store i8 0, i8* %26, align 1
  store i8 0, i8* %33, align 1
  store i8 0, i8* %39, align 1
  store i8 0, i8* %42, align 1
  store i8 0, i8* %45, align 1
  store i8 0, i8* %51, align 1
  %5897 = add i64 %5891, -376
  %5898 = add i64 %5890, 23
  store i64 %5898, i64* %3, align 8
  %5899 = inttoptr i64 %5897 to i64*
  %5900 = load i64, i64* %5899, align 8
  %5901 = add i64 %div, %5900
  store i64 %5901, i64* %RSI.i3037, align 8
  %5902 = icmp ult i64 %5901, %5900
  %5903 = icmp ult i64 %5901, %div
  %5904 = or i1 %5902, %5903
  %5905 = zext i1 %5904 to i8
  store i8 %5905, i8* %26, align 1
  %5906 = trunc i64 %5901 to i32
  %5907 = and i32 %5906, 255
  %5908 = tail call i32 @llvm.ctpop.i32(i32 %5907)
  %5909 = trunc i32 %5908 to i8
  %5910 = and i8 %5909, 1
  %5911 = xor i8 %5910, 1
  store i8 %5911, i8* %33, align 1
  %5912 = xor i64 %div, %5900
  %5913 = xor i64 %5912, %5901
  %5914 = lshr i64 %5913, 4
  %5915 = trunc i64 %5914 to i8
  %5916 = and i8 %5915, 1
  store i8 %5916, i8* %39, align 1
  %5917 = icmp eq i64 %5901, 0
  %5918 = zext i1 %5917 to i8
  store i8 %5918, i8* %42, align 1
  %5919 = lshr i64 %5901, 63
  %5920 = trunc i64 %5919 to i8
  store i8 %5920, i8* %45, align 1
  %5921 = lshr i64 %5900, 63
  %5922 = lshr i64 %div, 63
  %5923 = xor i64 %5919, %5921
  %5924 = xor i64 %5919, %5922
  %5925 = add nuw nsw i64 %5923, %5924
  %5926 = icmp eq i64 %5925, 2
  %5927 = zext i1 %5926 to i8
  store i8 %5927, i8* %51, align 1
  %5928 = add i64 %5891, -160
  %5929 = add i64 %5890, 33
  store i64 %5929, i64* %3, align 8
  %5930 = inttoptr i64 %5928 to i64*
  store i64 %5901, i64* %5930, align 8
  %5931 = load i64, i64* %RBP.i, align 8
  %5932 = add i64 %5931, -136
  %5933 = load i64, i64* %3, align 8
  %5934 = add i64 %5933, 7
  store i64 %5934, i64* %3, align 8
  %5935 = inttoptr i64 %5932 to i64*
  %5936 = load i64, i64* %5935, align 8
  store i64 %5936, i64* %RAX.i4026, align 8
  %5937 = add i64 %5931, -216
  %5938 = add i64 %5933, 14
  store i64 %5938, i64* %3, align 8
  %5939 = inttoptr i64 %5937 to i64*
  %5940 = load i64, i64* %5939, align 8
  store i64 %5940, i64* %RDI.i4032.pre-phi, align 8
  %5941 = add i64 %5931, -220
  %5942 = add i64 %5933, 20
  store i64 %5942, i64* %3, align 8
  %5943 = inttoptr i64 %5941 to i32*
  %5944 = load i32, i32* %5943, align 4
  %5945 = zext i32 %5944 to i64
  store i64 %5945, i64* %RSI.i3037, align 8
  store i64 %5936, i64* %RDX.i4024, align 8
  %5946 = add i64 %5931, -232
  %5947 = add i64 %5933, 30
  store i64 %5947, i64* %3, align 8
  %5948 = inttoptr i64 %5946 to i64*
  %5949 = load i64, i64* %5948, align 8
  store i64 %5949, i64* %RCX.i4028, align 8
  %5950 = add i64 %5933, 30636
  %5951 = add i64 %5933, 35
  %5952 = load i64, i64* %6, align 8
  %5953 = add i64 %5952, -8
  %5954 = inttoptr i64 %5953 to i64*
  store i64 %5951, i64* %5954, align 8
  store i64 %5953, i64* %6, align 8
  store i64 %5950, i64* %3, align 8
  %call2_402662 = tail call %struct.Memory* @sub_409df0._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5950, %struct.Memory* %5812)
  %5955 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41466c_type* @G__0x41466c to i64), i64* %RCX.i4028, align 8
  %5956 = load i64, i64* %RBP.i, align 8
  %5957 = add i64 %5956, -136
  %5958 = add i64 %5955, 32
  store i64 %5958, i64* %3, align 8
  %5959 = inttoptr i64 %5957 to i64*
  %5960 = load i64, i64* %5959, align 8
  store i64 %5960, i64* %RDX.i4024, align 8
  %5961 = add i64 %5955, 30777
  %5962 = add i64 %5955, 37
  %5963 = load i64, i64* %6, align 8
  %5964 = add i64 %5963, -8
  %5965 = inttoptr i64 %5964 to i64*
  store i64 %5962, i64* %5965, align 8
  store i64 %5964, i64* %6, align 8
  store i64 %5961, i64* %3, align 8
  %call2_402687 = tail call %struct.Memory* @sub_409ea0._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5961, %struct.Memory* %call2_402662)
  %5966 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41468a_type* @G__0x41468a to i64), i64* %RAX.i4026, align 8
  %5967 = load i64, i64* %RBP.i, align 8
  %5968 = add i64 %5967, -136
  %5969 = add i64 %5966, 32
  store i64 %5969, i64* %3, align 8
  %5970 = inttoptr i64 %5968 to i64*
  %5971 = load i64, i64* %5970, align 8
  store i64 %5971, i64* %RDX.i4024, align 8
  %5972 = add i64 %5967, -144
  %5973 = add i64 %5966, 39
  store i64 %5973, i64* %3, align 8
  %5974 = inttoptr i64 %5972 to i64*
  %5975 = load i64, i64* %5974, align 8
  store i64 %5975, i64* %RCX.i4028, align 8
  %5976 = add i64 %5967, -152
  %5977 = add i64 %5966, 46
  store i64 %5977, i64* %3, align 8
  %5978 = inttoptr i64 %5976 to i64*
  %5979 = load i64, i64* %5978, align 8
  store i64 %5979, i64* %250, align 8
  %5980 = add i64 %5967, -160
  %5981 = add i64 %5966, 53
  store i64 %5981, i64* %3, align 8
  %5982 = inttoptr i64 %5980 to i64*
  %5983 = load i64, i64* %5982, align 8
  store i64 %5983, i64* %477, align 8
  %5984 = bitcast i64* %6 to i64**
  %5985 = load i64*, i64** %5984, align 8
  %5986 = add i64 %5966, 57
  store i64 %5986, i64* %3, align 8
  store i64 ptrtoint (%G__0x41468a_type* @G__0x41468a to i64), i64* %5985, align 8
  %5987 = load i64, i64* %3, align 8
  %5988 = add i64 %5987, 30859
  %5989 = add i64 %5987, 5
  %5990 = load i64, i64* %6, align 8
  %5991 = add i64 %5990, -8
  %5992 = inttoptr i64 %5991 to i64*
  store i64 %5989, i64* %5992, align 8
  store i64 %5991, i64* %6, align 8
  store i64 %5988, i64* %3, align 8
  %call2_4026c5 = tail call %struct.Memory* @sub_409f50._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %5988, %struct.Memory* %call2_402687)
  %5993 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4146aa_type* @G__0x4146aa to i64), i64* %RCX.i4028, align 8
  %5994 = load i64, i64* %RBP.i, align 8
  %5995 = add i64 %5994, -136
  %5996 = add i64 %5993, 32
  store i64 %5996, i64* %3, align 8
  %5997 = inttoptr i64 %5995 to i64*
  %5998 = load i64, i64* %5997, align 8
  store i64 %5998, i64* %RDX.i4024, align 8
  %5999 = add i64 %5993, 31062
  %6000 = add i64 %5993, 37
  %6001 = load i64, i64* %6, align 8
  %6002 = add i64 %6001, -8
  %6003 = inttoptr i64 %6002 to i64*
  store i64 %6000, i64* %6003, align 8
  store i64 %6002, i64* %6, align 8
  store i64 %5999, i64* %3, align 8
  %call2_4026ea = tail call %struct.Memory* @sub_40a020._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %5999, %struct.Memory* %call2_4026c5)
  %6004 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4146c5_type* @G__0x4146c5 to i64), i64* %RAX.i4026, align 8
  %6005 = load i64, i64* %RBP.i, align 8
  %6006 = add i64 %6005, -136
  %6007 = add i64 %6004, 32
  store i64 %6007, i64* %3, align 8
  %6008 = inttoptr i64 %6006 to i64*
  %6009 = load i64, i64* %6008, align 8
  store i64 %6009, i64* %RDX.i4024, align 8
  %6010 = add i64 %6005, -144
  %6011 = add i64 %6004, 39
  store i64 %6011, i64* %3, align 8
  %6012 = inttoptr i64 %6010 to i64*
  %6013 = load i64, i64* %6012, align 8
  store i64 %6013, i64* %RCX.i4028, align 8
  %6014 = add i64 %6005, -152
  %6015 = add i64 %6004, 46
  store i64 %6015, i64* %3, align 8
  %6016 = inttoptr i64 %6014 to i64*
  %6017 = load i64, i64* %6016, align 8
  store i64 %6017, i64* %250, align 8
  %6018 = add i64 %6005, -160
  %6019 = add i64 %6004, 53
  store i64 %6019, i64* %3, align 8
  %6020 = inttoptr i64 %6018 to i64*
  %6021 = load i64, i64* %6020, align 8
  store i64 %6021, i64* %477, align 8
  %6022 = load i64*, i64** %5984, align 8
  %6023 = add i64 %6004, 57
  store i64 %6023, i64* %3, align 8
  store i64 ptrtoint (%G__0x4146c5_type* @G__0x4146c5 to i64), i64* %6022, align 8
  %6024 = load i64, i64* %3, align 8
  %6025 = add i64 %6024, 31144
  %6026 = add i64 %6024, 5
  %6027 = load i64, i64* %6, align 8
  %6028 = add i64 %6027, -8
  %6029 = inttoptr i64 %6028 to i64*
  store i64 %6026, i64* %6029, align 8
  store i64 %6028, i64* %6, align 8
  store i64 %6025, i64* %3, align 8
  %call2_402728 = tail call %struct.Memory* @sub_40a0d0._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6025, %struct.Memory* %call2_4026ea)
  %6030 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4146ea_type* @G__0x4146ea to i64), i64* %RCX.i4028, align 8
  %6031 = load i64, i64* %RBP.i, align 8
  %6032 = add i64 %6031, -136
  %6033 = add i64 %6030, 32
  store i64 %6033, i64* %3, align 8
  %6034 = inttoptr i64 %6032 to i64*
  %6035 = load i64, i64* %6034, align 8
  store i64 %6035, i64* %RDX.i4024, align 8
  %6036 = add i64 %6030, 31347
  %6037 = add i64 %6030, 37
  %6038 = load i64, i64* %6, align 8
  %6039 = add i64 %6038, -8
  %6040 = inttoptr i64 %6039 to i64*
  store i64 %6037, i64* %6040, align 8
  store i64 %6039, i64* %6, align 8
  store i64 %6036, i64* %3, align 8
  %call2_40274d = tail call %struct.Memory* @sub_40a1a0._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6036, %struct.Memory* %call2_402728)
  %6041 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414705_type* @G__0x414705 to i64), i64* %RAX.i4026, align 8
  %6042 = load i64, i64* %RBP.i, align 8
  %6043 = add i64 %6042, -136
  %6044 = add i64 %6041, 32
  store i64 %6044, i64* %3, align 8
  %6045 = inttoptr i64 %6043 to i64*
  %6046 = load i64, i64* %6045, align 8
  store i64 %6046, i64* %RDX.i4024, align 8
  %6047 = add i64 %6042, -144
  %6048 = add i64 %6041, 39
  store i64 %6048, i64* %3, align 8
  %6049 = inttoptr i64 %6047 to i64*
  %6050 = load i64, i64* %6049, align 8
  store i64 %6050, i64* %RCX.i4028, align 8
  %6051 = add i64 %6042, -152
  %6052 = add i64 %6041, 46
  store i64 %6052, i64* %3, align 8
  %6053 = inttoptr i64 %6051 to i64*
  %6054 = load i64, i64* %6053, align 8
  store i64 %6054, i64* %250, align 8
  %6055 = add i64 %6042, -160
  %6056 = add i64 %6041, 53
  store i64 %6056, i64* %3, align 8
  %6057 = inttoptr i64 %6055 to i64*
  %6058 = load i64, i64* %6057, align 8
  store i64 %6058, i64* %477, align 8
  %6059 = load i64*, i64** %5984, align 8
  %6060 = add i64 %6041, 57
  store i64 %6060, i64* %3, align 8
  store i64 ptrtoint (%G__0x414705_type* @G__0x414705 to i64), i64* %6059, align 8
  %6061 = load i64, i64* %3, align 8
  %6062 = add i64 %6061, 31429
  %6063 = add i64 %6061, 5
  %6064 = load i64, i64* %6, align 8
  %6065 = add i64 %6064, -8
  %6066 = inttoptr i64 %6065 to i64*
  store i64 %6063, i64* %6066, align 8
  store i64 %6065, i64* %6, align 8
  store i64 %6062, i64* %3, align 8
  %call2_40278b = tail call %struct.Memory* @sub_40a250._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6062, %struct.Memory* %call2_40274d)
  %6067 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41472b_type* @G__0x41472b to i64), i64* %RAX.i4026, align 8
  %6068 = load i64, i64* %RBP.i, align 8
  %6069 = add i64 %6068, -136
  %6070 = add i64 %6067, 32
  store i64 %6070, i64* %3, align 8
  %6071 = inttoptr i64 %6069 to i64*
  %6072 = load i64, i64* %6071, align 8
  store i64 %6072, i64* %RDX.i4024, align 8
  %6073 = add i64 %6068, -144
  %6074 = add i64 %6067, 39
  store i64 %6074, i64* %3, align 8
  %6075 = inttoptr i64 %6073 to i64*
  %6076 = load i64, i64* %6075, align 8
  store i64 %6076, i64* %RCX.i4028, align 8
  %6077 = add i64 %6068, -152
  %6078 = add i64 %6067, 46
  store i64 %6078, i64* %3, align 8
  %6079 = inttoptr i64 %6077 to i64*
  %6080 = load i64, i64* %6079, align 8
  store i64 %6080, i64* %250, align 8
  %6081 = add i64 %6068, -160
  %6082 = add i64 %6067, 53
  store i64 %6082, i64* %3, align 8
  %6083 = inttoptr i64 %6081 to i64*
  %6084 = load i64, i64* %6083, align 8
  store i64 %6084, i64* %477, align 8
  %6085 = load i64*, i64** %5984, align 8
  %6086 = add i64 %6067, 57
  store i64 %6086, i64* %3, align 8
  store i64 ptrtoint (%G__0x41472b_type* @G__0x41472b to i64), i64* %6085, align 8
  %6087 = load i64, i64* %3, align 8
  %6088 = add i64 %6087, 31575
  %6089 = add i64 %6087, 5
  %6090 = load i64, i64* %6, align 8
  %6091 = add i64 %6090, -8
  %6092 = inttoptr i64 %6091 to i64*
  store i64 %6089, i64* %6092, align 8
  store i64 %6091, i64* %6, align 8
  store i64 %6088, i64* %3, align 8
  %call2_4027c9 = tail call %struct.Memory* @sub_40a320._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6088, %struct.Memory* %call2_40278b)
  %6093 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414752_type* @G__0x414752 to i64), i64* %RCX.i4028, align 8
  %6094 = load i64, i64* %RBP.i, align 8
  %6095 = add i64 %6094, -136
  %6096 = add i64 %6093, 32
  store i64 %6096, i64* %3, align 8
  %6097 = inttoptr i64 %6095 to i64*
  %6098 = load i64, i64* %6097, align 8
  store i64 %6098, i64* %RDX.i4024, align 8
  %6099 = add i64 %6093, 31778
  %6100 = add i64 %6093, 37
  %6101 = load i64, i64* %6, align 8
  %6102 = add i64 %6101, -8
  %6103 = inttoptr i64 %6102 to i64*
  store i64 %6100, i64* %6103, align 8
  store i64 %6102, i64* %6, align 8
  store i64 %6099, i64* %3, align 8
  %call2_4027ee = tail call %struct.Memory* @sub_40a3f0._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6099, %struct.Memory* %call2_4027c9)
  %6104 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41476b_type* @G__0x41476b to i64), i64* %RAX.i4026, align 8
  %6105 = load i64, i64* %RBP.i, align 8
  %6106 = add i64 %6105, -136
  %6107 = add i64 %6104, 32
  store i64 %6107, i64* %3, align 8
  %6108 = inttoptr i64 %6106 to i64*
  %6109 = load i64, i64* %6108, align 8
  store i64 %6109, i64* %RDX.i4024, align 8
  %6110 = add i64 %6105, -144
  %6111 = add i64 %6104, 39
  store i64 %6111, i64* %3, align 8
  %6112 = inttoptr i64 %6110 to i64*
  %6113 = load i64, i64* %6112, align 8
  store i64 %6113, i64* %RCX.i4028, align 8
  %6114 = add i64 %6105, -152
  %6115 = add i64 %6104, 46
  store i64 %6115, i64* %3, align 8
  %6116 = inttoptr i64 %6114 to i64*
  %6117 = load i64, i64* %6116, align 8
  store i64 %6117, i64* %250, align 8
  %6118 = add i64 %6105, -160
  %6119 = add i64 %6104, 53
  store i64 %6119, i64* %3, align 8
  %6120 = inttoptr i64 %6118 to i64*
  %6121 = load i64, i64* %6120, align 8
  store i64 %6121, i64* %477, align 8
  %6122 = load i64*, i64** %5984, align 8
  %6123 = add i64 %6104, 57
  store i64 %6123, i64* %3, align 8
  store i64 ptrtoint (%G__0x41476b_type* @G__0x41476b to i64), i64* %6122, align 8
  %6124 = load i64, i64* %3, align 8
  %6125 = add i64 %6124, 31860
  %6126 = add i64 %6124, 5
  %6127 = load i64, i64* %6, align 8
  %6128 = add i64 %6127, -8
  %6129 = inttoptr i64 %6128 to i64*
  store i64 %6126, i64* %6129, align 8
  store i64 %6128, i64* %6, align 8
  store i64 %6125, i64* %3, align 8
  %call2_40282c = tail call %struct.Memory* @sub_40a4a0._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6125, %struct.Memory* %call2_4027ee)
  %6130 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41478e_type* @G__0x41478e to i64), i64* %RAX.i4026, align 8
  %6131 = load i64, i64* %RBP.i, align 8
  %6132 = add i64 %6131, -136
  %6133 = add i64 %6130, 32
  store i64 %6133, i64* %3, align 8
  %6134 = inttoptr i64 %6132 to i64*
  %6135 = load i64, i64* %6134, align 8
  store i64 %6135, i64* %RDX.i4024, align 8
  %6136 = add i64 %6131, -144
  %6137 = add i64 %6130, 39
  store i64 %6137, i64* %3, align 8
  %6138 = inttoptr i64 %6136 to i64*
  %6139 = load i64, i64* %6138, align 8
  store i64 %6139, i64* %RCX.i4028, align 8
  %6140 = add i64 %6131, -152
  %6141 = add i64 %6130, 46
  store i64 %6141, i64* %3, align 8
  %6142 = inttoptr i64 %6140 to i64*
  %6143 = load i64, i64* %6142, align 8
  store i64 %6143, i64* %250, align 8
  %6144 = add i64 %6131, -160
  %6145 = add i64 %6130, 53
  store i64 %6145, i64* %3, align 8
  %6146 = inttoptr i64 %6144 to i64*
  %6147 = load i64, i64* %6146, align 8
  store i64 %6147, i64* %477, align 8
  %6148 = load i64*, i64** %5984, align 8
  %6149 = add i64 %6130, 57
  store i64 %6149, i64* %3, align 8
  store i64 ptrtoint (%G__0x41478e_type* @G__0x41478e to i64), i64* %6148, align 8
  %6150 = load i64, i64* %3, align 8
  %6151 = add i64 %6150, 32006
  %6152 = add i64 %6150, 5
  %6153 = load i64, i64* %6, align 8
  %6154 = add i64 %6153, -8
  %6155 = inttoptr i64 %6154 to i64*
  store i64 %6152, i64* %6155, align 8
  store i64 %6154, i64* %6, align 8
  store i64 %6151, i64* %3, align 8
  %call2_40286a = tail call %struct.Memory* @sub_40a570._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6151, %struct.Memory* %call2_40282c)
  %6156 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4147b2_type* @G__0x4147b2 to i64), i64* %RAX.i4026, align 8
  %6157 = load i64, i64* %RBP.i, align 8
  %6158 = add i64 %6157, -136
  %6159 = add i64 %6156, 32
  store i64 %6159, i64* %3, align 8
  %6160 = inttoptr i64 %6158 to i64*
  %6161 = load i64, i64* %6160, align 8
  store i64 %6161, i64* %RDX.i4024, align 8
  %6162 = add i64 %6157, -144
  %6163 = add i64 %6156, 39
  store i64 %6163, i64* %3, align 8
  %6164 = inttoptr i64 %6162 to i64*
  %6165 = load i64, i64* %6164, align 8
  store i64 %6165, i64* %RCX.i4028, align 8
  %6166 = add i64 %6157, -152
  %6167 = add i64 %6156, 46
  store i64 %6167, i64* %3, align 8
  %6168 = inttoptr i64 %6166 to i64*
  %6169 = load i64, i64* %6168, align 8
  store i64 %6169, i64* %250, align 8
  %6170 = add i64 %6157, -160
  %6171 = add i64 %6156, 53
  store i64 %6171, i64* %3, align 8
  %6172 = inttoptr i64 %6170 to i64*
  %6173 = load i64, i64* %6172, align 8
  store i64 %6173, i64* %477, align 8
  %6174 = load i64*, i64** %5984, align 8
  %6175 = add i64 %6156, 57
  store i64 %6175, i64* %3, align 8
  store i64 ptrtoint (%G__0x4147b2_type* @G__0x4147b2 to i64), i64* %6174, align 8
  %6176 = load i64, i64* %3, align 8
  %6177 = add i64 %6176, 32152
  %6178 = add i64 %6176, 5
  %6179 = load i64, i64* %6, align 8
  %6180 = add i64 %6179, -8
  %6181 = inttoptr i64 %6180 to i64*
  store i64 %6178, i64* %6181, align 8
  store i64 %6180, i64* %6, align 8
  store i64 %6177, i64* %3, align 8
  %call2_4028a8 = tail call %struct.Memory* @sub_40a640._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6177, %struct.Memory* %call2_40286a)
  %6182 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4147d3_type* @G__0x4147d3 to i64), i64* %RCX.i4028, align 8
  %6183 = load i64, i64* %RBP.i, align 8
  %6184 = add i64 %6183, -136
  %6185 = add i64 %6182, 32
  store i64 %6185, i64* %3, align 8
  %6186 = inttoptr i64 %6184 to i64*
  %6187 = load i64, i64* %6186, align 8
  store i64 %6187, i64* %RDX.i4024, align 8
  %6188 = add i64 %6182, 32355
  %6189 = add i64 %6182, 37
  %6190 = load i64, i64* %6, align 8
  %6191 = add i64 %6190, -8
  %6192 = inttoptr i64 %6191 to i64*
  store i64 %6189, i64* %6192, align 8
  store i64 %6191, i64* %6, align 8
  store i64 %6188, i64* %3, align 8
  %call2_4028cd = tail call %struct.Memory* @sub_40a710._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6188, %struct.Memory* %call2_4028a8)
  %6193 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4147e9_type* @G__0x4147e9 to i64), i64* %RAX.i4026, align 8
  %6194 = load i64, i64* %RBP.i, align 8
  %6195 = add i64 %6194, -136
  %6196 = add i64 %6193, 32
  store i64 %6196, i64* %3, align 8
  %6197 = inttoptr i64 %6195 to i64*
  %6198 = load i64, i64* %6197, align 8
  store i64 %6198, i64* %RDX.i4024, align 8
  %6199 = add i64 %6194, -144
  %6200 = add i64 %6193, 39
  store i64 %6200, i64* %3, align 8
  %6201 = inttoptr i64 %6199 to i64*
  %6202 = load i64, i64* %6201, align 8
  store i64 %6202, i64* %RCX.i4028, align 8
  %6203 = add i64 %6194, -152
  %6204 = add i64 %6193, 46
  store i64 %6204, i64* %3, align 8
  %6205 = inttoptr i64 %6203 to i64*
  %6206 = load i64, i64* %6205, align 8
  store i64 %6206, i64* %250, align 8
  %6207 = add i64 %6194, -160
  %6208 = add i64 %6193, 53
  store i64 %6208, i64* %3, align 8
  %6209 = inttoptr i64 %6207 to i64*
  %6210 = load i64, i64* %6209, align 8
  store i64 %6210, i64* %477, align 8
  %6211 = load i64*, i64** %5984, align 8
  %6212 = add i64 %6193, 57
  store i64 %6212, i64* %3, align 8
  store i64 ptrtoint (%G__0x4147e9_type* @G__0x4147e9 to i64), i64* %6211, align 8
  %6213 = load i64, i64* %3, align 8
  %6214 = add i64 %6213, 32437
  %6215 = add i64 %6213, 5
  %6216 = load i64, i64* %6, align 8
  %6217 = add i64 %6216, -8
  %6218 = inttoptr i64 %6217 to i64*
  store i64 %6215, i64* %6218, align 8
  store i64 %6217, i64* %6, align 8
  store i64 %6214, i64* %3, align 8
  %call2_40290b = tail call %struct.Memory* @sub_40a7c0._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6214, %struct.Memory* %call2_4028cd)
  %6219 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414808_type* @G__0x414808 to i64), i64* %RCX.i4028, align 8
  %6220 = load i64, i64* %RBP.i, align 8
  %6221 = add i64 %6220, -136
  %6222 = add i64 %6219, 32
  store i64 %6222, i64* %3, align 8
  %6223 = inttoptr i64 %6221 to i64*
  %6224 = load i64, i64* %6223, align 8
  store i64 %6224, i64* %RDX.i4024, align 8
  %6225 = add i64 %6219, 32640
  %6226 = add i64 %6219, 37
  %6227 = load i64, i64* %6, align 8
  %6228 = add i64 %6227, -8
  %6229 = inttoptr i64 %6228 to i64*
  store i64 %6226, i64* %6229, align 8
  store i64 %6228, i64* %6, align 8
  store i64 %6225, i64* %3, align 8
  %call2_402930 = tail call %struct.Memory* @sub_40a890._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6225, %struct.Memory* %call2_40290b)
  %6230 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41481d_type* @G__0x41481d to i64), i64* %RAX.i4026, align 8
  %6231 = load i64, i64* %RBP.i, align 8
  %6232 = add i64 %6231, -136
  %6233 = add i64 %6230, 32
  store i64 %6233, i64* %3, align 8
  %6234 = inttoptr i64 %6232 to i64*
  %6235 = load i64, i64* %6234, align 8
  store i64 %6235, i64* %RDX.i4024, align 8
  %6236 = add i64 %6231, -144
  %6237 = add i64 %6230, 39
  store i64 %6237, i64* %3, align 8
  %6238 = inttoptr i64 %6236 to i64*
  %6239 = load i64, i64* %6238, align 8
  store i64 %6239, i64* %RCX.i4028, align 8
  %6240 = add i64 %6231, -152
  %6241 = add i64 %6230, 46
  store i64 %6241, i64* %3, align 8
  %6242 = inttoptr i64 %6240 to i64*
  %6243 = load i64, i64* %6242, align 8
  store i64 %6243, i64* %250, align 8
  %6244 = add i64 %6231, -160
  %6245 = add i64 %6230, 53
  store i64 %6245, i64* %3, align 8
  %6246 = inttoptr i64 %6244 to i64*
  %6247 = load i64, i64* %6246, align 8
  store i64 %6247, i64* %477, align 8
  %6248 = load i64*, i64** %5984, align 8
  %6249 = add i64 %6230, 57
  store i64 %6249, i64* %3, align 8
  store i64 ptrtoint (%G__0x41481d_type* @G__0x41481d to i64), i64* %6248, align 8
  %6250 = load i64, i64* %3, align 8
  %6251 = add i64 %6250, 32722
  %6252 = add i64 %6250, 5
  %6253 = load i64, i64* %6, align 8
  %6254 = add i64 %6253, -8
  %6255 = inttoptr i64 %6254 to i64*
  store i64 %6252, i64* %6255, align 8
  store i64 %6254, i64* %6, align 8
  store i64 %6251, i64* %3, align 8
  %call2_40296e = tail call %struct.Memory* @sub_40a940._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6251, %struct.Memory* %call2_402930)
  %6256 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41483b_type* @G__0x41483b to i64), i64* %RCX.i4028, align 8
  %6257 = load i64, i64* %RBP.i, align 8
  %6258 = add i64 %6257, -136
  %6259 = add i64 %6256, 32
  store i64 %6259, i64* %3, align 8
  %6260 = inttoptr i64 %6258 to i64*
  %6261 = load i64, i64* %6260, align 8
  store i64 %6261, i64* %RDX.i4024, align 8
  %6262 = add i64 %6256, 32925
  %6263 = add i64 %6256, 37
  %6264 = load i64, i64* %6, align 8
  %6265 = add i64 %6264, -8
  %6266 = inttoptr i64 %6265 to i64*
  store i64 %6263, i64* %6266, align 8
  store i64 %6265, i64* %6, align 8
  store i64 %6262, i64* %3, align 8
  %call2_402993 = tail call %struct.Memory* @sub_40aa10._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6262, %struct.Memory* %call2_40296e)
  %6267 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414851_type* @G__0x414851 to i64), i64* %RAX.i4026, align 8
  %6268 = load i64, i64* %RBP.i, align 8
  %6269 = add i64 %6268, -136
  %6270 = add i64 %6267, 32
  store i64 %6270, i64* %3, align 8
  %6271 = inttoptr i64 %6269 to i64*
  %6272 = load i64, i64* %6271, align 8
  store i64 %6272, i64* %RDX.i4024, align 8
  %6273 = add i64 %6268, -144
  %6274 = add i64 %6267, 39
  store i64 %6274, i64* %3, align 8
  %6275 = inttoptr i64 %6273 to i64*
  %6276 = load i64, i64* %6275, align 8
  store i64 %6276, i64* %RCX.i4028, align 8
  %6277 = add i64 %6268, -152
  %6278 = add i64 %6267, 46
  store i64 %6278, i64* %3, align 8
  %6279 = inttoptr i64 %6277 to i64*
  %6280 = load i64, i64* %6279, align 8
  store i64 %6280, i64* %250, align 8
  %6281 = add i64 %6268, -160
  %6282 = add i64 %6267, 53
  store i64 %6282, i64* %3, align 8
  %6283 = inttoptr i64 %6281 to i64*
  %6284 = load i64, i64* %6283, align 8
  store i64 %6284, i64* %477, align 8
  %6285 = load i64*, i64** %5984, align 8
  %6286 = add i64 %6267, 57
  store i64 %6286, i64* %3, align 8
  store i64 ptrtoint (%G__0x414851_type* @G__0x414851 to i64), i64* %6285, align 8
  %6287 = load i64, i64* %3, align 8
  %6288 = add i64 %6287, 33007
  %6289 = add i64 %6287, 5
  %6290 = load i64, i64* %6, align 8
  %6291 = add i64 %6290, -8
  %6292 = inttoptr i64 %6291 to i64*
  store i64 %6289, i64* %6292, align 8
  store i64 %6291, i64* %6, align 8
  store i64 %6288, i64* %3, align 8
  %call2_4029d1 = tail call %struct.Memory* @sub_40aac0._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6288, %struct.Memory* %call2_402993)
  %6293 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RAX.i4026, align 8
  store i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64* %RCX.i4028, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 32000)) to i8), i8* %26, align 1
  %6294 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000) to i32), i32 255))
  %6295 = trunc i32 %6294 to i8
  %6296 = and i8 %6295, 1
  %6297 = xor i8 %6296, 1
  store i8 %6297, i8* %33, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000)), i64 4) to i8), i8 1), i8* %39, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 0) to i8), i8* %42, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 63) to i8), i8* %45, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 63), i64 lshr (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64 63)), i64 2) to i8), i8* %51, align 1
  %6298 = load <2 x i32>, <2 x i32>* %5643, align 1
  %6299 = load <2 x i32>, <2 x i32>* %5645, align 1
  %6300 = load double, double* bitcast (%G_0x61a088_type* @G_0x61a088 to double*), align 8
  %6301 = fptrunc double %6300 to float
  %6302 = bitcast [32 x %union.VectorReg]* %52 to float*
  store float %6301, float* %6302, align 1
  %6303 = extractelement <2 x i32> %6298, i32 1
  %6304 = getelementptr inbounds i8, i8* %53, i64 4
  %6305 = bitcast i8* %6304 to i32*
  store i32 %6303, i32* %6305, align 1
  %6306 = extractelement <2 x i32> %6299, i32 0
  %6307 = bitcast i64* %60 to i32*
  store i32 %6306, i32* %6307, align 1
  %6308 = extractelement <2 x i32> %6299, i32 1
  %6309 = getelementptr inbounds i8, i8* %53, i64 12
  %6310 = bitcast i8* %6309 to i32*
  store i32 %6308, i32* %6310, align 1
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64 32000), i64* %RSI.i3037, align 8
  %6311 = add i64 %6293, 33210
  %6312 = add i64 %6293, 40
  %6313 = load i64, i64* %6, align 8
  %6314 = add i64 %6313, -8
  %6315 = inttoptr i64 %6314 to i64*
  store i64 %6312, i64* %6315, align 8
  store i64 %6314, i64* %6, align 8
  store i64 %6311, i64* %3, align 8
  %call2_4029f9 = tail call %struct.Memory* @sub_40ab90._Z4fillIPffEvT_S1_T0_(%struct.State* nonnull %0, i64 %6311, %struct.Memory* %call2_4029d1)
  %6316 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414870_type* @G__0x414870 to i64), i64* %RDX.i4024, align 8
  %6317 = add i64 %6316, 70834
  %6318 = add i64 %6316, 33
  store i64 %6318, i64* %3, align 8
  %6319 = inttoptr i64 %6317 to i32*
  %6320 = load i32, i32* %6319, align 4
  %6321 = bitcast [32 x %union.VectorReg]* %52 to i32*
  store i32 %6320, i32* %6321, align 1
  %6322 = bitcast i8* %6304 to float*
  store float 0.000000e+00, float* %6322, align 1
  %6323 = bitcast i64* %60 to float*
  store float 0.000000e+00, float* %6323, align 1
  %6324 = bitcast i8* %6309 to float*
  store float 0.000000e+00, float* %6324, align 1
  %6325 = load i64, i64* %RBP.i, align 8
  %6326 = add i64 %6325, -40
  %6327 = add i64 %6316, 38
  store i64 %6327, i64* %3, align 8
  %6328 = bitcast %union.VectorReg* %5631 to <2 x i32>*
  %6329 = load <2 x i32>, <2 x i32>* %6328, align 1
  %6330 = bitcast i64* %5639 to <2 x i32>*
  %6331 = inttoptr i64 %6326 to double*
  %6332 = load double, double* %6331, align 8
  %6333 = fptrunc double %6332 to float
  %6334 = bitcast %union.VectorReg* %5631 to float*
  store float %6333, float* %6334, align 1
  %6335 = extractelement <2 x i32> %6329, i32 1
  store i32 %6335, i32* %5742, align 1
  %6336 = add i64 %6325, -164
  %6337 = add i64 %6316, 46
  store i64 %6337, i64* %3, align 8
  %6338 = bitcast %union.VectorReg* %5631 to <2 x float>*
  %6339 = load <2 x float>, <2 x float>* %6338, align 1
  %6340 = extractelement <2 x float> %6339, i32 0
  %6341 = inttoptr i64 %6336 to float*
  store float %6340, float* %6341, align 4
  %6342 = load i64, i64* %3, align 8
  %6343 = load <2 x i32>, <2 x i32>* %5643, align 1
  %6344 = load <2 x i32>, <2 x i32>* %5645, align 1
  %6345 = extractelement <2 x i32> %6343, i32 0
  store i32 %6345, i32* %5739, align 1
  %6346 = extractelement <2 x i32> %6343, i32 1
  store i32 %6346, i32* %5742, align 1
  %6347 = extractelement <2 x i32> %6344, i32 0
  store i32 %6347, i32* %5743, align 1
  %6348 = extractelement <2 x i32> %6344, i32 1
  store i32 %6348, i32* %5745, align 1
  %6349 = load i64, i64* %RBP.i, align 8
  %6350 = add i64 %6349, -164
  %6351 = add i64 %6342, 11
  store i64 %6351, i64* %3, align 8
  %6352 = load <2 x float>, <2 x float>* %6338, align 1
  %6353 = load <2 x i32>, <2 x i32>* %6330, align 1
  %6354 = inttoptr i64 %6350 to float*
  %6355 = load float, float* %6354, align 4
  %6356 = extractelement <2 x float> %6352, i32 0
  %6357 = fmul float %6356, %6355
  store float %6357, float* %6334, align 1
  %6358 = bitcast <2 x float> %6352 to <2 x i32>
  %6359 = extractelement <2 x i32> %6358, i32 1
  store i32 %6359, i32* %5742, align 1
  %6360 = extractelement <2 x i32> %6353, i32 0
  store i32 %6360, i32* %5743, align 1
  %6361 = extractelement <2 x i32> %6353, i32 1
  store i32 %6361, i32* %5745, align 1
  %6362 = add i64 %6349, -168
  %6363 = add i64 %6342, 19
  store i64 %6363, i64* %3, align 8
  %6364 = load <2 x float>, <2 x float>* %6338, align 1
  %6365 = extractelement <2 x float> %6364, i32 0
  %6366 = inttoptr i64 %6362 to float*
  store float %6365, float* %6366, align 4
  %6367 = load i64, i64* %RBP.i, align 8
  %6368 = add i64 %6367, -164
  %6369 = load i64, i64* %3, align 8
  %6370 = add i64 %6369, 8
  store i64 %6370, i64* %3, align 8
  %6371 = bitcast [32 x %union.VectorReg]* %52 to <2 x float>*
  %6372 = load <2 x float>, <2 x float>* %6371, align 1
  %6373 = load <2 x i32>, <2 x i32>* %5645, align 1
  %6374 = inttoptr i64 %6368 to float*
  %6375 = load float, float* %6374, align 4
  %6376 = extractelement <2 x float> %6372, i32 0
  %6377 = fadd float %6376, %6375
  store float %6377, float* %6302, align 1
  %6378 = bitcast <2 x float> %6372 to <2 x i32>
  %6379 = extractelement <2 x i32> %6378, i32 1
  store i32 %6379, i32* %6305, align 1
  %6380 = extractelement <2 x i32> %6373, i32 0
  store i32 %6380, i32* %6307, align 1
  %6381 = extractelement <2 x i32> %6373, i32 1
  store i32 %6381, i32* %6310, align 1
  %6382 = add i64 %6367, -172
  %6383 = add i64 %6369, 16
  store i64 %6383, i64* %3, align 8
  %6384 = load <2 x float>, <2 x float>* %6371, align 1
  %6385 = extractelement <2 x float> %6384, i32 0
  %6386 = inttoptr i64 %6382 to float*
  store float %6385, float* %6386, align 4
  %6387 = load i64, i64* %RBP.i, align 8
  %6388 = add i64 %6387, -164
  %6389 = load i64, i64* %3, align 8
  %6390 = add i64 %6389, 8
  store i64 %6390, i64* %3, align 8
  %6391 = inttoptr i64 %6388 to i32*
  %6392 = load i32, i32* %6391, align 4
  store i32 %6392, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6393 = add i64 %6387, -168
  %6394 = add i64 %6389, 16
  store i64 %6394, i64* %3, align 8
  %6395 = inttoptr i64 %6393 to i32*
  %6396 = load i32, i32* %6395, align 4
  store i32 %6396, i32* %5739, align 1
  %6397 = bitcast i8* %5741 to float*
  store float 0.000000e+00, float* %6397, align 1
  %6398 = bitcast i64* %5639 to float*
  store float 0.000000e+00, float* %6398, align 1
  %6399 = bitcast i8* %5744 to float*
  store float 0.000000e+00, float* %6399, align 1
  %6400 = add i64 %6387, -172
  %6401 = add i64 %6389, 24
  store i64 %6401, i64* %3, align 8
  %6402 = load <2 x float>, <2 x float>* %6338, align 1
  %6403 = load <2 x i32>, <2 x i32>* %6330, align 1
  %6404 = inttoptr i64 %6400 to float*
  %6405 = load float, float* %6404, align 4
  %6406 = extractelement <2 x float> %6402, i32 0
  %6407 = fdiv float %6406, %6405
  store float %6407, float* %6334, align 1
  %6408 = bitcast <2 x float> %6402 to <2 x i32>
  %6409 = extractelement <2 x i32> %6408, i32 1
  store i32 %6409, i32* %5742, align 1
  %6410 = extractelement <2 x i32> %6403, i32 0
  store i32 %6410, i32* %5743, align 1
  %6411 = extractelement <2 x i32> %6403, i32 1
  store i32 %6411, i32* %5745, align 1
  %6412 = load <2 x float>, <2 x float>* %6371, align 1
  %6413 = load <2 x i32>, <2 x i32>* %5645, align 1
  %6414 = load <2 x float>, <2 x float>* %6338, align 1
  %6415 = extractelement <2 x float> %6412, i32 0
  %6416 = extractelement <2 x float> %6414, i32 0
  %6417 = fadd float %6415, %6416
  store float %6417, float* %6302, align 1
  %6418 = bitcast <2 x float> %6412 to <2 x i32>
  %6419 = extractelement <2 x i32> %6418, i32 1
  store i32 %6419, i32* %6305, align 1
  %6420 = extractelement <2 x i32> %6413, i32 0
  store i32 %6420, i32* %6307, align 1
  %6421 = extractelement <2 x i32> %6413, i32 1
  store i32 %6421, i32* %6310, align 1
  %6422 = add i64 %6387, -176
  %6423 = add i64 %6389, 36
  store i64 %6423, i64* %3, align 8
  %6424 = load <2 x float>, <2 x float>* %6371, align 1
  %6425 = extractelement <2 x float> %6424, i32 0
  %6426 = inttoptr i64 %6422 to float*
  store float %6425, float* %6426, align 4
  %6427 = load i64, i64* %RBP.i, align 8
  %6428 = add i64 %6427, -164
  %6429 = load i64, i64* %3, align 8
  %6430 = add i64 %6429, 8
  store i64 %6430, i64* %3, align 8
  %6431 = inttoptr i64 %6428 to i32*
  %6432 = load i32, i32* %6431, align 4
  store i32 %6432, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6433 = add i64 %6429, 33117
  %6434 = add i64 %6429, 13
  %6435 = load i64, i64* %6, align 8
  %6436 = add i64 %6435, -8
  %6437 = inttoptr i64 %6436 to i64*
  store i64 %6434, i64* %6437, align 8
  store i64 %6436, i64* %6, align 8
  store i64 %6433, i64* %3, align 8
  %call2_402a7b = tail call %struct.Memory* @sub_40abd0._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6433, %struct.Memory* %call2_4029f9)
  %6438 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414883_type* @G__0x414883 to i64), i64* %RDX.i4024, align 8
  %6439 = load i64, i64* %RBP.i, align 8
  %6440 = add i64 %6439, -164
  %6441 = add i64 %6438, 33
  store i64 %6441, i64* %3, align 8
  %6442 = inttoptr i64 %6440 to i32*
  %6443 = load i32, i32* %6442, align 4
  store i32 %6443, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6444 = add i64 %6438, 33280
  %6445 = add i64 %6438, 38
  %6446 = load i64, i64* %6, align 8
  %6447 = add i64 %6446, -8
  %6448 = inttoptr i64 %6447 to i64*
  store i64 %6445, i64* %6448, align 8
  store i64 %6447, i64* %6, align 8
  store i64 %6444, i64* %3, align 8
  %call2_402aa1 = tail call %struct.Memory* @sub_40ac80._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6444, %struct.Memory* %call2_402a7b)
  %6449 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41489e_type* @G__0x41489e to i64), i64* %RDX.i4024, align 8
  %6450 = load i64, i64* %RBP.i, align 8
  %6451 = add i64 %6450, -164
  %6452 = add i64 %6449, 33
  store i64 %6452, i64* %3, align 8
  %6453 = inttoptr i64 %6451 to i32*
  %6454 = load i32, i32* %6453, align 4
  store i32 %6454, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6455 = add i64 %6450, -168
  %6456 = add i64 %6449, 41
  store i64 %6456, i64* %3, align 8
  %6457 = inttoptr i64 %6455 to i32*
  %6458 = load i32, i32* %6457, align 4
  store i32 %6458, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6459 = add i64 %6450, -172
  %6460 = add i64 %6449, 49
  store i64 %6460, i64* %3, align 8
  %6461 = inttoptr i64 %6459 to i32*
  %6462 = load i32, i32* %6461, align 4
  store i32 %6462, i32* %5647, align 1
  %6463 = bitcast i8* %5649 to float*
  store float 0.000000e+00, float* %6463, align 1
  %6464 = bitcast i64* %5651 to float*
  store float 0.000000e+00, float* %6464, align 1
  %6465 = bitcast i8* %5653 to float*
  store float 0.000000e+00, float* %6465, align 1
  %6466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3
  %6467 = bitcast %union.VectorReg* %6466 to i8*
  %6468 = add i64 %6450, -176
  %6469 = add i64 %6449, 57
  store i64 %6469, i64* %3, align 8
  %6470 = inttoptr i64 %6468 to i32*
  %6471 = load i32, i32* %6470, align 4
  %6472 = bitcast %union.VectorReg* %6466 to i32*
  store i32 %6471, i32* %6472, align 1
  %6473 = getelementptr inbounds i8, i8* %6467, i64 4
  %6474 = bitcast i8* %6473 to float*
  store float 0.000000e+00, float* %6474, align 1
  %6475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 1
  %6476 = bitcast i64* %6475 to float*
  store float 0.000000e+00, float* %6476, align 1
  %6477 = getelementptr inbounds i8, i8* %6467, i64 12
  %6478 = bitcast i8* %6477 to float*
  store float 0.000000e+00, float* %6478, align 1
  %6479 = add i64 %6449, 33434
  %6480 = add i64 %6449, 62
  %6481 = load i64, i64* %6, align 8
  %6482 = add i64 %6481, -8
  %6483 = inttoptr i64 %6482 to i64*
  store i64 %6480, i64* %6483, align 8
  store i64 %6482, i64* %6, align 8
  store i64 %6479, i64* %3, align 8
  %call2_402adf = tail call %struct.Memory* @sub_40ad40._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6479, %struct.Memory* %call2_402aa1)
  %6484 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4148bb_type* @G__0x4148bb to i64), i64* %RDX.i4024, align 8
  %6485 = load i64, i64* %RBP.i, align 8
  %6486 = add i64 %6485, -164
  %6487 = add i64 %6484, 33
  store i64 %6487, i64* %3, align 8
  %6488 = inttoptr i64 %6486 to i32*
  %6489 = load i32, i32* %6488, align 4
  store i32 %6489, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6490 = add i64 %6484, 33596
  %6491 = add i64 %6484, 38
  %6492 = load i64, i64* %6, align 8
  %6493 = add i64 %6492, -8
  %6494 = inttoptr i64 %6493 to i64*
  store i64 %6491, i64* %6494, align 8
  store i64 %6493, i64* %6, align 8
  store i64 %6490, i64* %3, align 8
  %call2_402b05 = tail call %struct.Memory* @sub_40ae20._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6490, %struct.Memory* %call2_402adf)
  %6495 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4148d3_type* @G__0x4148d3 to i64), i64* %RDX.i4024, align 8
  %6496 = load i64, i64* %RBP.i, align 8
  %6497 = add i64 %6496, -164
  %6498 = add i64 %6495, 33
  store i64 %6498, i64* %3, align 8
  %6499 = inttoptr i64 %6497 to i32*
  %6500 = load i32, i32* %6499, align 4
  store i32 %6500, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6501 = add i64 %6496, -168
  %6502 = add i64 %6495, 41
  store i64 %6502, i64* %3, align 8
  %6503 = inttoptr i64 %6501 to i32*
  %6504 = load i32, i32* %6503, align 4
  store i32 %6504, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6505 = add i64 %6496, -172
  %6506 = add i64 %6495, 49
  store i64 %6506, i64* %3, align 8
  %6507 = inttoptr i64 %6505 to i32*
  %6508 = load i32, i32* %6507, align 4
  store i32 %6508, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6509 = add i64 %6496, -176
  %6510 = add i64 %6495, 57
  store i64 %6510, i64* %3, align 8
  %6511 = inttoptr i64 %6509 to i32*
  %6512 = load i32, i32* %6511, align 4
  store i32 %6512, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6513 = add i64 %6495, 33734
  %6514 = add i64 %6495, 62
  %6515 = load i64, i64* %6, align 8
  %6516 = add i64 %6515, -8
  %6517 = inttoptr i64 %6516 to i64*
  store i64 %6514, i64* %6517, align 8
  store i64 %6516, i64* %6, align 8
  store i64 %6513, i64* %3, align 8
  %call2_402b43 = tail call %struct.Memory* @sub_40aed0._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6513, %struct.Memory* %call2_402b05)
  %6518 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4148f5_type* @G__0x4148f5 to i64), i64* %RDX.i4024, align 8
  %6519 = load i64, i64* %RBP.i, align 8
  %6520 = add i64 %6519, -164
  %6521 = add i64 %6518, 33
  store i64 %6521, i64* %3, align 8
  %6522 = inttoptr i64 %6520 to i32*
  %6523 = load i32, i32* %6522, align 4
  store i32 %6523, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6524 = add i64 %6518, 33896
  %6525 = add i64 %6518, 38
  %6526 = load i64, i64* %6, align 8
  %6527 = add i64 %6526, -8
  %6528 = inttoptr i64 %6527 to i64*
  store i64 %6525, i64* %6528, align 8
  store i64 %6527, i64* %6, align 8
  store i64 %6524, i64* %3, align 8
  %call2_402b69 = tail call %struct.Memory* @sub_40afb0._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6524, %struct.Memory* %call2_402b43)
  %6529 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41490d_type* @G__0x41490d to i64), i64* %RDX.i4024, align 8
  %6530 = load i64, i64* %RBP.i, align 8
  %6531 = add i64 %6530, -164
  %6532 = add i64 %6529, 33
  store i64 %6532, i64* %3, align 8
  %6533 = inttoptr i64 %6531 to i32*
  %6534 = load i32, i32* %6533, align 4
  store i32 %6534, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6535 = add i64 %6530, -168
  %6536 = add i64 %6529, 41
  store i64 %6536, i64* %3, align 8
  %6537 = inttoptr i64 %6535 to i32*
  %6538 = load i32, i32* %6537, align 4
  store i32 %6538, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6539 = add i64 %6530, -172
  %6540 = add i64 %6529, 49
  store i64 %6540, i64* %3, align 8
  %6541 = inttoptr i64 %6539 to i32*
  %6542 = load i32, i32* %6541, align 4
  store i32 %6542, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6543 = add i64 %6530, -176
  %6544 = add i64 %6529, 57
  store i64 %6544, i64* %3, align 8
  %6545 = inttoptr i64 %6543 to i32*
  %6546 = load i32, i32* %6545, align 4
  store i32 %6546, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6547 = add i64 %6529, 34034
  %6548 = add i64 %6529, 62
  %6549 = load i64, i64* %6, align 8
  %6550 = add i64 %6549, -8
  %6551 = inttoptr i64 %6550 to i64*
  store i64 %6548, i64* %6551, align 8
  store i64 %6550, i64* %6, align 8
  store i64 %6547, i64* %3, align 8
  %call2_402ba7 = tail call %struct.Memory* @sub_40b060._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6547, %struct.Memory* %call2_402b69)
  %6552 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414930_type* @G__0x414930 to i64), i64* %RDX.i4024, align 8
  %6553 = load i64, i64* %RBP.i, align 8
  %6554 = add i64 %6553, -164
  %6555 = add i64 %6552, 33
  store i64 %6555, i64* %3, align 8
  %6556 = inttoptr i64 %6554 to i32*
  %6557 = load i32, i32* %6556, align 4
  store i32 %6557, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6558 = add i64 %6553, -168
  %6559 = add i64 %6552, 41
  store i64 %6559, i64* %3, align 8
  %6560 = inttoptr i64 %6558 to i32*
  %6561 = load i32, i32* %6560, align 4
  store i32 %6561, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6562 = add i64 %6553, -172
  %6563 = add i64 %6552, 49
  store i64 %6563, i64* %3, align 8
  %6564 = inttoptr i64 %6562 to i32*
  %6565 = load i32, i32* %6564, align 4
  store i32 %6565, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6566 = add i64 %6553, -176
  %6567 = add i64 %6552, 57
  store i64 %6567, i64* %3, align 8
  %6568 = inttoptr i64 %6566 to i32*
  %6569 = load i32, i32* %6568, align 4
  store i32 %6569, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6570 = add i64 %6552, 34196
  %6571 = add i64 %6552, 62
  %6572 = load i64, i64* %6, align 8
  %6573 = add i64 %6572, -8
  %6574 = inttoptr i64 %6573 to i64*
  store i64 %6571, i64* %6574, align 8
  store i64 %6573, i64* %6, align 8
  store i64 %6570, i64* %3, align 8
  %call2_402be5 = tail call %struct.Memory* @sub_40b140._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6570, %struct.Memory* %call2_402ba7)
  %6575 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414954_type* @G__0x414954 to i64), i64* %RDX.i4024, align 8
  %6576 = load i64, i64* %RBP.i, align 8
  %6577 = add i64 %6576, -164
  %6578 = add i64 %6575, 33
  store i64 %6578, i64* %3, align 8
  %6579 = inttoptr i64 %6577 to i32*
  %6580 = load i32, i32* %6579, align 4
  store i32 %6580, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6581 = add i64 %6575, 34358
  %6582 = add i64 %6575, 38
  %6583 = load i64, i64* %6, align 8
  %6584 = add i64 %6583, -8
  %6585 = inttoptr i64 %6584 to i64*
  store i64 %6582, i64* %6585, align 8
  store i64 %6584, i64* %6, align 8
  store i64 %6581, i64* %3, align 8
  %call2_402c0b = tail call %struct.Memory* @sub_40b220._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6581, %struct.Memory* %call2_402be5)
  %6586 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41496a_type* @G__0x41496a to i64), i64* %RDX.i4024, align 8
  %6587 = load i64, i64* %RBP.i, align 8
  %6588 = add i64 %6587, -164
  %6589 = add i64 %6586, 33
  store i64 %6589, i64* %3, align 8
  %6590 = inttoptr i64 %6588 to i32*
  %6591 = load i32, i32* %6590, align 4
  store i32 %6591, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6592 = add i64 %6587, -168
  %6593 = add i64 %6586, 41
  store i64 %6593, i64* %3, align 8
  %6594 = inttoptr i64 %6592 to i32*
  %6595 = load i32, i32* %6594, align 4
  store i32 %6595, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6596 = add i64 %6587, -172
  %6597 = add i64 %6586, 49
  store i64 %6597, i64* %3, align 8
  %6598 = inttoptr i64 %6596 to i32*
  %6599 = load i32, i32* %6598, align 4
  store i32 %6599, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6600 = add i64 %6587, -176
  %6601 = add i64 %6586, 57
  store i64 %6601, i64* %3, align 8
  %6602 = inttoptr i64 %6600 to i32*
  %6603 = load i32, i32* %6602, align 4
  store i32 %6603, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6604 = add i64 %6586, 34496
  %6605 = add i64 %6586, 62
  %6606 = load i64, i64* %6, align 8
  %6607 = add i64 %6606, -8
  %6608 = inttoptr i64 %6607 to i64*
  store i64 %6605, i64* %6608, align 8
  store i64 %6607, i64* %6, align 8
  store i64 %6604, i64* %3, align 8
  %call2_402c49 = tail call %struct.Memory* @sub_40b2d0._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6604, %struct.Memory* %call2_402c0b)
  %6609 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x41498a_type* @G__0x41498a to i64), i64* %RDX.i4024, align 8
  %6610 = load i64, i64* %RBP.i, align 8
  %6611 = add i64 %6610, -164
  %6612 = add i64 %6609, 33
  store i64 %6612, i64* %3, align 8
  %6613 = inttoptr i64 %6611 to i32*
  %6614 = load i32, i32* %6613, align 4
  store i32 %6614, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6615 = add i64 %6610, -168
  %6616 = add i64 %6609, 41
  store i64 %6616, i64* %3, align 8
  %6617 = inttoptr i64 %6615 to i32*
  %6618 = load i32, i32* %6617, align 4
  store i32 %6618, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6619 = add i64 %6610, -172
  %6620 = add i64 %6609, 49
  store i64 %6620, i64* %3, align 8
  %6621 = inttoptr i64 %6619 to i32*
  %6622 = load i32, i32* %6621, align 4
  store i32 %6622, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6623 = add i64 %6610, -176
  %6624 = add i64 %6609, 57
  store i64 %6624, i64* %3, align 8
  %6625 = inttoptr i64 %6623 to i32*
  %6626 = load i32, i32* %6625, align 4
  store i32 %6626, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6627 = add i64 %6609, 34658
  %6628 = add i64 %6609, 62
  %6629 = load i64, i64* %6, align 8
  %6630 = add i64 %6629, -8
  %6631 = inttoptr i64 %6630 to i64*
  store i64 %6628, i64* %6631, align 8
  store i64 %6630, i64* %6, align 8
  store i64 %6627, i64* %3, align 8
  %call2_402c87 = tail call %struct.Memory* @sub_40b3b0._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6627, %struct.Memory* %call2_402c49)
  %6632 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4149ab_type* @G__0x4149ab to i64), i64* %RDX.i4024, align 8
  %6633 = load i64, i64* %RBP.i, align 8
  %6634 = add i64 %6633, -164
  %6635 = add i64 %6632, 33
  store i64 %6635, i64* %3, align 8
  %6636 = inttoptr i64 %6634 to i32*
  %6637 = load i32, i32* %6636, align 4
  store i32 %6637, i32* %6321, align 1
  store float 0.000000e+00, float* %6322, align 1
  store float 0.000000e+00, float* %6323, align 1
  store float 0.000000e+00, float* %6324, align 1
  %6638 = add i64 %6633, -168
  %6639 = add i64 %6632, 41
  store i64 %6639, i64* %3, align 8
  %6640 = inttoptr i64 %6638 to i32*
  %6641 = load i32, i32* %6640, align 4
  store i32 %6641, i32* %5739, align 1
  store float 0.000000e+00, float* %6397, align 1
  store float 0.000000e+00, float* %6398, align 1
  store float 0.000000e+00, float* %6399, align 1
  %6642 = add i64 %6633, -172
  %6643 = add i64 %6632, 49
  store i64 %6643, i64* %3, align 8
  %6644 = inttoptr i64 %6642 to i32*
  %6645 = load i32, i32* %6644, align 4
  store i32 %6645, i32* %5647, align 1
  store float 0.000000e+00, float* %6463, align 1
  store float 0.000000e+00, float* %6464, align 1
  store float 0.000000e+00, float* %6465, align 1
  %6646 = add i64 %6633, -176
  %6647 = add i64 %6632, 57
  store i64 %6647, i64* %3, align 8
  %6648 = inttoptr i64 %6646 to i32*
  %6649 = load i32, i32* %6648, align 4
  store i32 %6649, i32* %6472, align 1
  store float 0.000000e+00, float* %6474, align 1
  store float 0.000000e+00, float* %6476, align 1
  store float 0.000000e+00, float* %6478, align 1
  %6650 = add i64 %6632, 34820
  %6651 = add i64 %6632, 62
  %6652 = load i64, i64* %6, align 8
  %6653 = add i64 %6652, -8
  %6654 = inttoptr i64 %6653 to i64*
  store i64 %6651, i64* %6654, align 8
  store i64 %6653, i64* %6, align 8
  store i64 %6650, i64* %3, align 8
  %call2_402cc5 = tail call %struct.Memory* @sub_40b490._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6650, %struct.Memory* %call2_402c87)
  %6655 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RAX.i4026, align 8
  store i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64* %RCX.i4028, align 8
  store i8 zext (i1 or (i1 icmp ult (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64)), i1 icmp ult (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 64000)) to i8), i8* %26, align 1
  %6656 = tail call i32 @llvm.ctpop.i32(i32 and (i32 trunc (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000) to i32), i32 255))
  %6657 = trunc i32 %6656 to i8
  %6658 = and i8 %6657, 1
  %6659 = xor i8 %6658, 1
  store i8 %6659, i8* %33, align 1
  store i8 and (i8 trunc (i64 lshr (i64 xor (i64 xor (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000)), i64 4) to i8), i8 1), i8* %39, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 0) to i8), i8* %42, align 1
  store i8 trunc (i64 lshr (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 63) to i8), i8* %45, align 1
  store i8 zext (i1 icmp eq (i64 add (i64 xor (i64 lshr (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 63), i64 lshr (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 63)), i64 lshr (i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64 63)), i64 2) to i8), i8* %51, align 1
  %6660 = load i64, i64* bitcast (%G_0x61a088_type* @G_0x61a088 to i64*), align 8
  store i64 %6660, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 add (i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64 64000), i64* %RSI.i3037, align 8
  %6661 = add i64 %6655, 34982
  %6662 = add i64 %6655, 40
  %6663 = load i64, i64* %6, align 8
  %6664 = add i64 %6663, -8
  %6665 = inttoptr i64 %6664 to i64*
  store i64 %6662, i64* %6665, align 8
  store i64 %6664, i64* %6, align 8
  store i64 %6661, i64* %3, align 8
  %call2_402ced = tail call %struct.Memory* @sub_40b570._Z4fillIPddEvT_S1_T0_(%struct.State* nonnull %0, i64 %6661, %struct.Memory* %call2_402cc5)
  %6666 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4149c9_type* @G__0x4149c9 to i64), i64* %RDX.i4024, align 8
  %6667 = add i64 %6666, 70022
  %6668 = add i64 %6666, 33
  store i64 %6668, i64* %3, align 8
  %6669 = inttoptr i64 %6667 to i64*
  %6670 = load i64, i64* %6669, align 8
  store i64 %6670, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6671 = load i64, i64* %RBP.i, align 8
  %6672 = add i64 %6671, -40
  %6673 = add i64 %6666, 38
  store i64 %6673, i64* %3, align 8
  %6674 = inttoptr i64 %6672 to i64*
  %6675 = load i64, i64* %6674, align 8
  %6676 = add i64 %6671, -184
  %6677 = add i64 %6666, 46
  store i64 %6677, i64* %3, align 8
  %6678 = inttoptr i64 %6676 to i64*
  store i64 %6675, i64* %6678, align 8
  %6679 = load i64, i64* %3, align 8
  %6680 = load <2 x i32>, <2 x i32>* %5643, align 1
  %6681 = load <2 x i32>, <2 x i32>* %5645, align 1
  %6682 = extractelement <2 x i32> %6680, i32 0
  store i32 %6682, i32* %5739, align 1
  %6683 = extractelement <2 x i32> %6680, i32 1
  store i32 %6683, i32* %5742, align 1
  %6684 = extractelement <2 x i32> %6681, i32 0
  store i32 %6684, i32* %5743, align 1
  %6685 = extractelement <2 x i32> %6681, i32 1
  store i32 %6685, i32* %5745, align 1
  %6686 = load i64, i64* %RBP.i, align 8
  %6687 = add i64 %6686, -184
  %6688 = add i64 %6679, 11
  store i64 %6688, i64* %3, align 8
  %6689 = load double, double* %5637, align 1
  %6690 = inttoptr i64 %6687 to double*
  %6691 = load double, double* %6690, align 8
  %6692 = fmul double %6689, %6691
  store double %6692, double* %5637, align 1
  %6693 = add i64 %6686, -192
  %6694 = add i64 %6679, 19
  store i64 %6694, i64* %3, align 8
  %6695 = inttoptr i64 %6693 to double*
  store double %6692, double* %6695, align 8
  %6696 = load i64, i64* %RBP.i, align 8
  %6697 = add i64 %6696, -184
  %6698 = load i64, i64* %3, align 8
  %6699 = add i64 %6698, 8
  store i64 %6699, i64* %3, align 8
  %6700 = load double, double* %58, align 1
  %6701 = inttoptr i64 %6697 to double*
  %6702 = load double, double* %6701, align 8
  %6703 = fadd double %6700, %6702
  store double %6703, double* %58, align 1
  %6704 = add i64 %6696, -200
  %6705 = add i64 %6698, 16
  store i64 %6705, i64* %3, align 8
  %6706 = inttoptr i64 %6704 to double*
  store double %6703, double* %6706, align 8
  %6707 = load i64, i64* %RBP.i, align 8
  %6708 = add i64 %6707, -184
  %6709 = load i64, i64* %3, align 8
  %6710 = add i64 %6709, 8
  store i64 %6710, i64* %3, align 8
  %6711 = inttoptr i64 %6708 to i64*
  %6712 = load i64, i64* %6711, align 8
  store i64 %6712, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6713 = add i64 %6707, -192
  %6714 = add i64 %6709, 16
  store i64 %6714, i64* %3, align 8
  %6715 = inttoptr i64 %6713 to i64*
  %6716 = load i64, i64* %6715, align 8
  store i64 %6716, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6717 = add i64 %6707, -200
  %6718 = add i64 %6709, 24
  store i64 %6718, i64* %3, align 8
  %6719 = bitcast i64 %6716 to double
  %6720 = inttoptr i64 %6717 to double*
  %6721 = load double, double* %6720, align 8
  %6722 = fdiv double %6719, %6721
  store double %6722, double* %5637, align 1
  store i64 0, i64* %5639, align 1
  %6723 = bitcast i64 %6712 to double
  %6724 = fadd double %6723, %6722
  store double %6724, double* %58, align 1
  store i64 0, i64* %60, align 1
  %6725 = add i64 %6707, -208
  %6726 = add i64 %6709, 36
  store i64 %6726, i64* %3, align 8
  %6727 = inttoptr i64 %6725 to double*
  store double %6724, double* %6727, align 8
  %6728 = load i64, i64* %RBP.i, align 8
  %6729 = add i64 %6728, -184
  %6730 = load i64, i64* %3, align 8
  %6731 = add i64 %6730, 8
  store i64 %6731, i64* %3, align 8
  %6732 = inttoptr i64 %6729 to i64*
  %6733 = load i64, i64* %6732, align 8
  store i64 %6733, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6734 = add i64 %6730, 34889
  %6735 = add i64 %6730, 13
  %6736 = load i64, i64* %6, align 8
  %6737 = add i64 %6736, -8
  %6738 = inttoptr i64 %6737 to i64*
  store i64 %6735, i64* %6738, align 8
  store i64 %6737, i64* %6, align 8
  store i64 %6734, i64* %3, align 8
  %call2_402d6f = tail call %struct.Memory* @sub_40b5b0._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6734, %struct.Memory* %call2_402ced)
  %6739 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4149dd_type* @G__0x4149dd to i64), i64* %RDX.i4024, align 8
  %6740 = load i64, i64* %RBP.i, align 8
  %6741 = add i64 %6740, -184
  %6742 = add i64 %6739, 33
  store i64 %6742, i64* %3, align 8
  %6743 = inttoptr i64 %6741 to i64*
  %6744 = load i64, i64* %6743, align 8
  store i64 %6744, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6745 = add i64 %6739, 35052
  %6746 = add i64 %6739, 38
  %6747 = load i64, i64* %6, align 8
  %6748 = add i64 %6747, -8
  %6749 = inttoptr i64 %6748 to i64*
  store i64 %6746, i64* %6749, align 8
  store i64 %6748, i64* %6, align 8
  store i64 %6745, i64* %3, align 8
  %call2_402d95 = tail call %struct.Memory* @sub_40b660._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6745, %struct.Memory* %call2_402d6f)
  %6750 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x4149f9_type* @G__0x4149f9 to i64), i64* %RDX.i4024, align 8
  %6751 = load i64, i64* %RBP.i, align 8
  %6752 = add i64 %6751, -184
  %6753 = add i64 %6750, 33
  store i64 %6753, i64* %3, align 8
  %6754 = inttoptr i64 %6752 to i64*
  %6755 = load i64, i64* %6754, align 8
  store i64 %6755, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6756 = add i64 %6751, -192
  %6757 = add i64 %6750, 41
  store i64 %6757, i64* %3, align 8
  %6758 = inttoptr i64 %6756 to i64*
  %6759 = load i64, i64* %6758, align 8
  store i64 %6759, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6760 = add i64 %6751, -200
  %6761 = add i64 %6750, 49
  store i64 %6761, i64* %3, align 8
  %6762 = inttoptr i64 %6760 to i64*
  %6763 = load i64, i64* %6762, align 8
  store i64 %6763, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6764 = add i64 %6751, -208
  %6765 = add i64 %6750, 57
  store i64 %6765, i64* %3, align 8
  %6766 = inttoptr i64 %6764 to i64*
  %6767 = load i64, i64* %6766, align 8
  %6768 = getelementptr inbounds %union.VectorReg, %union.VectorReg* %6466, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %6767, i64* %6768, align 1
  %6769 = bitcast i64* %6475 to double*
  store double 0.000000e+00, double* %6769, align 1
  %6770 = add i64 %6750, 35206
  %6771 = add i64 %6750, 62
  %6772 = load i64, i64* %6, align 8
  %6773 = add i64 %6772, -8
  %6774 = inttoptr i64 %6773 to i64*
  store i64 %6771, i64* %6774, align 8
  store i64 %6773, i64* %6, align 8
  store i64 %6770, i64* %3, align 8
  %call2_402dd3 = tail call %struct.Memory* @sub_40b720._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6770, %struct.Memory* %call2_402d95)
  %6775 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414a17_type* @G__0x414a17 to i64), i64* %RDX.i4024, align 8
  %6776 = load i64, i64* %RBP.i, align 8
  %6777 = add i64 %6776, -184
  %6778 = add i64 %6775, 33
  store i64 %6778, i64* %3, align 8
  %6779 = inttoptr i64 %6777 to i64*
  %6780 = load i64, i64* %6779, align 8
  store i64 %6780, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6781 = add i64 %6775, 35368
  %6782 = add i64 %6775, 38
  %6783 = load i64, i64* %6, align 8
  %6784 = add i64 %6783, -8
  %6785 = inttoptr i64 %6784 to i64*
  store i64 %6782, i64* %6785, align 8
  store i64 %6784, i64* %6, align 8
  store i64 %6781, i64* %3, align 8
  %call2_402df9 = tail call %struct.Memory* @sub_40b800._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6781, %struct.Memory* %call2_402dd3)
  %6786 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414a30_type* @G__0x414a30 to i64), i64* %RDX.i4024, align 8
  %6787 = load i64, i64* %RBP.i, align 8
  %6788 = add i64 %6787, -184
  %6789 = add i64 %6786, 33
  store i64 %6789, i64* %3, align 8
  %6790 = inttoptr i64 %6788 to i64*
  %6791 = load i64, i64* %6790, align 8
  store i64 %6791, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6792 = add i64 %6787, -192
  %6793 = add i64 %6786, 41
  store i64 %6793, i64* %3, align 8
  %6794 = inttoptr i64 %6792 to i64*
  %6795 = load i64, i64* %6794, align 8
  store i64 %6795, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6796 = add i64 %6787, -200
  %6797 = add i64 %6786, 49
  store i64 %6797, i64* %3, align 8
  %6798 = inttoptr i64 %6796 to i64*
  %6799 = load i64, i64* %6798, align 8
  store i64 %6799, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6800 = add i64 %6787, -208
  %6801 = add i64 %6786, 57
  store i64 %6801, i64* %3, align 8
  %6802 = inttoptr i64 %6800 to i64*
  %6803 = load i64, i64* %6802, align 8
  store i64 %6803, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6804 = add i64 %6786, 35506
  %6805 = add i64 %6786, 62
  %6806 = load i64, i64* %6, align 8
  %6807 = add i64 %6806, -8
  %6808 = inttoptr i64 %6807 to i64*
  store i64 %6805, i64* %6808, align 8
  store i64 %6807, i64* %6, align 8
  store i64 %6804, i64* %3, align 8
  %call2_402e37 = tail call %struct.Memory* @sub_40b8b0._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6804, %struct.Memory* %call2_402df9)
  %6809 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414a53_type* @G__0x414a53 to i64), i64* %RDX.i4024, align 8
  %6810 = load i64, i64* %RBP.i, align 8
  %6811 = add i64 %6810, -184
  %6812 = add i64 %6809, 33
  store i64 %6812, i64* %3, align 8
  %6813 = inttoptr i64 %6811 to i64*
  %6814 = load i64, i64* %6813, align 8
  store i64 %6814, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6815 = add i64 %6809, 35668
  %6816 = add i64 %6809, 38
  %6817 = load i64, i64* %6, align 8
  %6818 = add i64 %6817, -8
  %6819 = inttoptr i64 %6818 to i64*
  store i64 %6816, i64* %6819, align 8
  store i64 %6818, i64* %6, align 8
  store i64 %6815, i64* %3, align 8
  %call2_402e5d = tail call %struct.Memory* @sub_40b990._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6815, %struct.Memory* %call2_402e37)
  %6820 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414a6c_type* @G__0x414a6c to i64), i64* %RDX.i4024, align 8
  %6821 = load i64, i64* %RBP.i, align 8
  %6822 = add i64 %6821, -184
  %6823 = add i64 %6820, 33
  store i64 %6823, i64* %3, align 8
  %6824 = inttoptr i64 %6822 to i64*
  %6825 = load i64, i64* %6824, align 8
  store i64 %6825, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6826 = add i64 %6821, -192
  %6827 = add i64 %6820, 41
  store i64 %6827, i64* %3, align 8
  %6828 = inttoptr i64 %6826 to i64*
  %6829 = load i64, i64* %6828, align 8
  store i64 %6829, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6830 = add i64 %6821, -200
  %6831 = add i64 %6820, 49
  store i64 %6831, i64* %3, align 8
  %6832 = inttoptr i64 %6830 to i64*
  %6833 = load i64, i64* %6832, align 8
  store i64 %6833, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6834 = add i64 %6821, -208
  %6835 = add i64 %6820, 57
  store i64 %6835, i64* %3, align 8
  %6836 = inttoptr i64 %6834 to i64*
  %6837 = load i64, i64* %6836, align 8
  store i64 %6837, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6838 = add i64 %6820, 35806
  %6839 = add i64 %6820, 62
  %6840 = load i64, i64* %6, align 8
  %6841 = add i64 %6840, -8
  %6842 = inttoptr i64 %6841 to i64*
  store i64 %6839, i64* %6842, align 8
  store i64 %6841, i64* %6, align 8
  store i64 %6838, i64* %3, align 8
  %call2_402e9b = tail call %struct.Memory* @sub_40ba40._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6838, %struct.Memory* %call2_402e5d)
  %6843 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414a90_type* @G__0x414a90 to i64), i64* %RDX.i4024, align 8
  %6844 = load i64, i64* %RBP.i, align 8
  %6845 = add i64 %6844, -184
  %6846 = add i64 %6843, 33
  store i64 %6846, i64* %3, align 8
  %6847 = inttoptr i64 %6845 to i64*
  %6848 = load i64, i64* %6847, align 8
  store i64 %6848, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6849 = add i64 %6844, -192
  %6850 = add i64 %6843, 41
  store i64 %6850, i64* %3, align 8
  %6851 = inttoptr i64 %6849 to i64*
  %6852 = load i64, i64* %6851, align 8
  store i64 %6852, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6853 = add i64 %6844, -200
  %6854 = add i64 %6843, 49
  store i64 %6854, i64* %3, align 8
  %6855 = inttoptr i64 %6853 to i64*
  %6856 = load i64, i64* %6855, align 8
  store i64 %6856, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6857 = add i64 %6844, -208
  %6858 = add i64 %6843, 57
  store i64 %6858, i64* %3, align 8
  %6859 = inttoptr i64 %6857 to i64*
  %6860 = load i64, i64* %6859, align 8
  store i64 %6860, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6861 = add i64 %6843, 35968
  %6862 = add i64 %6843, 62
  %6863 = load i64, i64* %6, align 8
  %6864 = add i64 %6863, -8
  %6865 = inttoptr i64 %6864 to i64*
  store i64 %6862, i64* %6865, align 8
  store i64 %6864, i64* %6, align 8
  store i64 %6861, i64* %3, align 8
  %call2_402ed9 = tail call %struct.Memory* @sub_40bb20._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6861, %struct.Memory* %call2_402e9b)
  %6866 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414ab5_type* @G__0x414ab5 to i64), i64* %RDX.i4024, align 8
  %6867 = load i64, i64* %RBP.i, align 8
  %6868 = add i64 %6867, -184
  %6869 = add i64 %6866, 33
  store i64 %6869, i64* %3, align 8
  %6870 = inttoptr i64 %6868 to i64*
  %6871 = load i64, i64* %6870, align 8
  store i64 %6871, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6872 = add i64 %6866, 36130
  %6873 = add i64 %6866, 38
  %6874 = load i64, i64* %6, align 8
  %6875 = add i64 %6874, -8
  %6876 = inttoptr i64 %6875 to i64*
  store i64 %6873, i64* %6876, align 8
  store i64 %6875, i64* %6, align 8
  store i64 %6872, i64* %3, align 8
  %call2_402eff = tail call %struct.Memory* @sub_40bc00._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* nonnull %0, i64 %6872, %struct.Memory* %call2_402ed9)
  %6877 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414acc_type* @G__0x414acc to i64), i64* %RDX.i4024, align 8
  %6878 = load i64, i64* %RBP.i, align 8
  %6879 = add i64 %6878, -184
  %6880 = add i64 %6877, 33
  store i64 %6880, i64* %3, align 8
  %6881 = inttoptr i64 %6879 to i64*
  %6882 = load i64, i64* %6881, align 8
  store i64 %6882, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6883 = add i64 %6878, -192
  %6884 = add i64 %6877, 41
  store i64 %6884, i64* %3, align 8
  %6885 = inttoptr i64 %6883 to i64*
  %6886 = load i64, i64* %6885, align 8
  store i64 %6886, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6887 = add i64 %6878, -200
  %6888 = add i64 %6877, 49
  store i64 %6888, i64* %3, align 8
  %6889 = inttoptr i64 %6887 to i64*
  %6890 = load i64, i64* %6889, align 8
  store i64 %6890, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6891 = add i64 %6878, -208
  %6892 = add i64 %6877, 57
  store i64 %6892, i64* %3, align 8
  %6893 = inttoptr i64 %6891 to i64*
  %6894 = load i64, i64* %6893, align 8
  store i64 %6894, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6895 = add i64 %6877, 36268
  %6896 = add i64 %6877, 62
  %6897 = load i64, i64* %6, align 8
  %6898 = add i64 %6897, -8
  %6899 = inttoptr i64 %6898 to i64*
  store i64 %6896, i64* %6899, align 8
  store i64 %6898, i64* %6, align 8
  store i64 %6895, i64* %3, align 8
  %call2_402f3d = tail call %struct.Memory* @sub_40bcb0._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6895, %struct.Memory* %call2_402eff)
  %6900 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414aed_type* @G__0x414aed to i64), i64* %RDX.i4024, align 8
  %6901 = load i64, i64* %RBP.i, align 8
  %6902 = add i64 %6901, -184
  %6903 = add i64 %6900, 33
  store i64 %6903, i64* %3, align 8
  %6904 = inttoptr i64 %6902 to i64*
  %6905 = load i64, i64* %6904, align 8
  store i64 %6905, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6906 = add i64 %6901, -192
  %6907 = add i64 %6900, 41
  store i64 %6907, i64* %3, align 8
  %6908 = inttoptr i64 %6906 to i64*
  %6909 = load i64, i64* %6908, align 8
  store i64 %6909, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6910 = add i64 %6901, -200
  %6911 = add i64 %6900, 49
  store i64 %6911, i64* %3, align 8
  %6912 = inttoptr i64 %6910 to i64*
  %6913 = load i64, i64* %6912, align 8
  store i64 %6913, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6914 = add i64 %6901, -208
  %6915 = add i64 %6900, 57
  store i64 %6915, i64* %3, align 8
  %6916 = inttoptr i64 %6914 to i64*
  %6917 = load i64, i64* %6916, align 8
  store i64 %6917, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6918 = add i64 %6900, 36430
  %6919 = add i64 %6900, 62
  %6920 = load i64, i64* %6, align 8
  %6921 = add i64 %6920, -8
  %6922 = inttoptr i64 %6921 to i64*
  store i64 %6919, i64* %6922, align 8
  store i64 %6921, i64* %6, align 8
  store i64 %6918, i64* %3, align 8
  %call2_402f7b = tail call %struct.Memory* @sub_40bd90._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6918, %struct.Memory* %call2_402f3d)
  %6923 = load i64, i64* %3, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI.i4032.pre-phi, align 8
  store i64 8000, i64* %RSI.i3037, align 8
  store i64 ptrtoint (%G__0x414b0f_type* @G__0x414b0f to i64), i64* %RDX.i4024, align 8
  %6924 = load i64, i64* %RBP.i, align 8
  %6925 = add i64 %6924, -184
  %6926 = add i64 %6923, 33
  store i64 %6926, i64* %3, align 8
  %6927 = inttoptr i64 %6925 to i64*
  %6928 = load i64, i64* %6927, align 8
  store i64 %6928, i64* %59, align 1
  store double 0.000000e+00, double* %61, align 1
  %6929 = add i64 %6924, -192
  %6930 = add i64 %6923, 41
  store i64 %6930, i64* %3, align 8
  %6931 = inttoptr i64 %6929 to i64*
  %6932 = load i64, i64* %6931, align 8
  store i64 %6932, i64* %5638, align 1
  store double 0.000000e+00, double* %5640, align 1
  %6933 = add i64 %6924, -200
  %6934 = add i64 %6923, 49
  store i64 %6934, i64* %3, align 8
  %6935 = inttoptr i64 %6933 to i64*
  %6936 = load i64, i64* %6935, align 8
  store i64 %6936, i64* %5750, align 1
  store double 0.000000e+00, double* %5751, align 1
  %6937 = add i64 %6924, -208
  %6938 = add i64 %6923, 57
  store i64 %6938, i64* %3, align 8
  %6939 = inttoptr i64 %6937 to i64*
  %6940 = load i64, i64* %6939, align 8
  store i64 %6940, i64* %6768, align 1
  store double 0.000000e+00, double* %6769, align 1
  %6941 = add i64 %6923, 36592
  %6942 = add i64 %6923, 62
  %6943 = load i64, i64* %6, align 8
  %6944 = add i64 %6943, -8
  %6945 = inttoptr i64 %6944 to i64*
  store i64 %6942, i64* %6945, align 8
  store i64 %6944, i64* %6, align 8
  store i64 %6941, i64* %3, align 8
  %call2_402fb9 = tail call %struct.Memory* @sub_40be70._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nonnull %0, i64 %6941, %struct.Memory* %call2_402f7b)
  %6946 = load i64, i64* %3, align 8
  store i64 0, i64* %RAX.i4026, align 8
  %6947 = load i64, i64* %6, align 8
  %6948 = add i64 %6947, 368
  store i64 %6948, i64* %6, align 8
  %6949 = icmp ugt i64 %6947, -369
  %6950 = zext i1 %6949 to i8
  store i8 %6950, i8* %26, align 1
  %6951 = trunc i64 %6948 to i32
  %6952 = and i32 %6951, 255
  %6953 = tail call i32 @llvm.ctpop.i32(i32 %6952)
  %6954 = trunc i32 %6953 to i8
  %6955 = and i8 %6954, 1
  %6956 = xor i8 %6955, 1
  store i8 %6956, i8* %33, align 1
  %6957 = xor i64 %6947, 16
  %6958 = xor i64 %6957, %6948
  %6959 = lshr i64 %6958, 4
  %6960 = trunc i64 %6959 to i8
  %6961 = and i8 %6960, 1
  store i8 %6961, i8* %39, align 1
  %6962 = icmp eq i64 %6948, 0
  %6963 = zext i1 %6962 to i8
  store i8 %6963, i8* %42, align 1
  %6964 = lshr i64 %6948, 63
  %6965 = trunc i64 %6964 to i8
  store i8 %6965, i8* %45, align 1
  %6966 = lshr i64 %6947, 63
  %6967 = xor i64 %6964, %6966
  %6968 = add nuw nsw i64 %6967, %6964
  %6969 = icmp eq i64 %6968, 2
  %6970 = zext i1 %6969 to i8
  store i8 %6970, i8* %51, align 1
  %6971 = add i64 %6946, 10
  store i64 %6971, i64* %3, align 8
  %6972 = add i64 %6947, 376
  %6973 = inttoptr i64 %6948 to i64*
  %6974 = load i64, i64* %6973, align 8
  store i64 %6974, i64* %RBX.i879, align 8
  store i64 %6972, i64* %6, align 8
  %6975 = add i64 %6946, 12
  store i64 %6975, i64* %3, align 8
  %6976 = add i64 %6947, 384
  %6977 = inttoptr i64 %6972 to i64*
  %6978 = load i64, i64* %6977, align 8
  store i64 %6978, i64* %R14.i831, align 8
  store i64 %6976, i64* %6, align 8
  %6979 = add i64 %6946, 13
  store i64 %6979, i64* %3, align 8
  %6980 = add i64 %6947, 392
  %6981 = inttoptr i64 %6976 to i64*
  %6982 = load i64, i64* %6981, align 8
  store i64 %6982, i64* %RBP.i, align 8
  store i64 %6980, i64* %6, align 8
  %6983 = add i64 %6946, 14
  store i64 %6983, i64* %3, align 8
  %6984 = inttoptr i64 %6980 to i64*
  %6985 = load i64, i64* %6984, align 8
  store i64 %6985, i64* %3, align 8
  %6986 = add i64 %6947, 400
  store i64 %6986, i64* %6, align 8
  ret %struct.Memory* %call2_402fb9
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_pushq__rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RBP, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_pushq__r14(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0, i32 0
  %3 = load i64, i64* %R14, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 2
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_pushq__rbx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0, i32 0
  %3 = load i64, i64* %RBX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %3, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_subq__0x170___rsp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, -368
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ult i64 %3, 368
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %29
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x12f9a__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 77730
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -20
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  store i32 0, i32* %7, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi__MINUS0x18__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -24
  %6 = load i32, i32* %EDI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm0__MINUS0x28__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 5
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp eq i32 %8, 0
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_400f07(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -32
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x8__rax____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.atoi_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__0x61a080(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %EAX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i32 %4, i32* bitcast (%G_0x61a080_type* @G_0x61a080 to i32*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %8, 2
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_400f27(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 16
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_.atof_plt(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm0__0x61a088(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %6 = load i64, i64* %5, align 1
  store i64 %6, i64* bitcast (%G_0x61a088_type* @G_0x61a088 to i64*), align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cmpl__0x3__MINUS0x18__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -3
  %10 = icmp ult i32 %8, 3
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %9, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13)
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i32 %9, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %9, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %8, 31
  %31 = xor i32 %27, %30
  %32 = add nuw nsw i32 %31, %30
  %33 = icmp eq i32 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_jle_.L_400f43(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i8* nocapture %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %11 = load i8, i8* %10, align 1
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = or i1 %6, %13
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %.v = select i1 %14, i64 %rel_off1, i64 %rel_off2
  %16 = add i64 %.v, %3
  store i64 %16, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_0x18__rax____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = add i64 %3, 24
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 8000, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414656___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414656_type* @G__0x414656 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_0x219124__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2199852
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x66a200___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66a200_type* @G__0x66a200 to i64), i64 4294967295), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %5 = load i32, i32* %EDX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__al___r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %AL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R9B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl__r9b___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %R9B, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i8 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x66c140___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66c140_type* @G__0x66c140 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___r10d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %5 = load i32, i32* %EAX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0xd8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -216
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__r8___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %R8, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -220
  %6 = load i32, i32* %ESI, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__r10___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %R10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 21, i32 0, i32 0
  %3 = load i64, i64* %R10, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__MINUS0xe8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -232
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__r8__MINUS0xf0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -240
  %5 = load i64, i64* %R8, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPaaEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 5
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to double*
  %8 = load double, double* %7, align 8
  %9 = tail call double @llvm.trunc.f64(double %8)
  %10 = tail call double @llvm.fabs.f64(double %9)
  %11 = fcmp ogt double %10, 0x41DFFFFFFFC00000
  %12 = fptosi double %9 to i32
  %13 = zext i32 %12 to i64
  %14 = select i1 %11, i64 2147483648, i64 %13
  store i64 %14, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r9b__MINUS0x29__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -41
  %6 = load i8, i8* %R9B, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x29__rbp____r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -41
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %R9B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addb__r9b___r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %4 = load i8, i8* %R9B, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = shl i8 %4, 1
  store i8 %7, i8* %R9B, align 1
  %8 = icmp ult i8 %7, %4
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = zext i8 %7 to i32
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = lshr i8 %4, 3
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i8 %7, 0
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21, i8* %22, align 1
  %23 = lshr i8 %4, 6
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %4, 7
  %27 = xor i8 %24, %26
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r9b__MINUS0x2a__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -42
  %6 = load i8, i8* %R9B, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x29__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -41
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__0x2___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = trunc i64 %3 to i32
  %7 = add i32 %6, 2
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  %9 = icmp ugt i32 %6, -3
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %7, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %6
  %19 = lshr i32 %18, 4
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i32 %7, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i32 %7, 31
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %6, 31
  %30 = xor i32 %26, %29
  %31 = add nuw nsw i32 %30, %26
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r9b__MINUS0x2b__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -43
  %6 = load i8, i8* %R9B, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -42
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r11d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -43
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i64
  %11 = and i64 %10, 4294967295
  store i64 %11, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -244
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %EDX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cltd(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %7 = bitcast %union.anon* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = lshr i64 %9, 32
  store i64 %10, i64* %5, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__r11d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0
  %R11D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R11D, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12 = bitcast %union.anon* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = sext i32 %4 to i64
  %16 = shl nuw i64 %14, 32
  %17 = or i64 %16, %10
  %18 = sdiv i64 %17, %15
  %19 = shl i64 %18, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %24, label %22

; <label>:22:                                     ; preds = %block_400488
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:24:                                     ; preds = %block_400488
  %25 = srem i64 %17, %15
  %26 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  %27 = and i64 %18, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %24, %22
  %36 = phi %struct.Memory* [ %23, %22 ], [ %2, %24 ]
  ret %struct.Memory* %36
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0xf4__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -244
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__eax___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i64, i64* %RDX, align 8
  %5 = load i32, i32* %EAX, align 4
  %6 = zext i32 %5 to i64
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 2
  store i64 %8, i64* %PC, align 8
  %9 = trunc i64 %4 to i32
  %10 = add i32 %5, %9
  %11 = zext i32 %10 to i64
  store i64 %11, i64* %RDX, align 8
  %12 = icmp ult i32 %10, %9
  %13 = icmp ult i32 %10, %5
  %14 = or i1 %12, %13
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %10, 255
  %18 = tail call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 %6, %4
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %10
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %10, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %10, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %5, 31
  %38 = xor i32 %33, %36
  %39 = xor i32 %33, %37
  %40 = add nuw nsw i32 %38, %39
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__dl___r9b(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %DL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %DL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %R9B, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__r9b__MINUS0x2c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0
  %R9B = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -44
  %6 = load i8, i8* %R9B, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 4
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -41
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41401b___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41401b_type* @G__0x41401b to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x1f40___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 8000, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -240
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -248
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414030___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414030_type* @G__0x414030 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -248
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -44
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i64
  %11 = and i64 %10, 4294967295
  store i64 %11, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -43
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i64
  %11 = and i64 %10, 4294967295
  store i64 %11, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -42
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsp___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41404d____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276301, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41406c___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41406c_type* @G__0x41406c to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414086____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276358, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4140aa___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4140aa_type* @G__0x4140aa to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4140c4____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276420, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4140e9____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276457, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41410f___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41410f_type* @G__0x41410f to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414127____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276519, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414149____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276553, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41416c____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276588, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41418c___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41418c_type* @G__0x41418c to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4141a1____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276641, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4141bf___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4141bf_type* @G__0x4141bf to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4141d3____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276691, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4141f0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4141f0_type* @G__0x4141f0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414205____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276741, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_0x218dd7__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2199007
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6682c0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__al___bl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %AL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %BL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl__bl___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i8, i8* %BL, align 1
  %5 = zext i8 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x66a200___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x66a200_type* @G__0x66a200 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x100__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -256
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPhhEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__bl__MINUS0x2d__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -45
  %6 = load i8, i8* %BL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb_MINUS0x2d__rbp____bl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -45
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  store i8 %9, i8* %BL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addb__bl___bl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %4 = load i8, i8* %BL, align 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %PC, align 8
  %7 = shl i8 %4, 1
  store i8 %7, i8* %BL, align 1
  %8 = icmp ult i8 %7, %4
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = zext i8 %7 to i32
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = lshr i8 %4, 3
  %18 = and i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %18, i8* %19, align 1
  %20 = icmp eq i8 %7, 0
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %21, i8* %22, align 1
  %23 = lshr i8 %4, 6
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %4, 7
  %27 = xor i8 %24, %26
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %27, i8* %28, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__bl__MINUS0x2e__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -46
  %6 = load i8, i8* %BL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -45
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__bl__MINUS0x2f__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -47
  %6 = load i8, i8* %BL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -46
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -47
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -260
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -264
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r8d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R8D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x108__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -264
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13 = bitcast %union.anon* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl nuw i64 %15, 32
  %17 = or i64 %16, %11
  %18 = udiv i64 %17, %5
  %19 = and i64 %18, 4294967295
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %23, label %21

; <label>:21:                                     ; preds = %block_400488
  %22 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:23:                                     ; preds = %block_400488
  %24 = urem i64 %17, %5
  %25 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  store i64 %18, i64* %25, align 8
  %26 = getelementptr inbounds %union.anon, %union.anon* %12, i64 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %23, %21
  %33 = phi %struct.Memory* [ %22, %21 ], [ %2, %23 ]
  ret %struct.Memory* %33
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x104__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -260
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__dl___bl(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %DL = bitcast %union.anon* %4 to i8*
  %5 = load i8, i8* %DL, align 1
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i8 %5, i8* %BL, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movb__bl__MINUS0x30__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0
  %BL = bitcast %union.anon* %3 to i8*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -48
  %6 = load i8, i8* %BL, align 1
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i8*
  store i8 %6, i8* %9, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -45
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i8*
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41401a___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41401a_type* @G__0x41401a to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -256
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r8d__MINUS0x10c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -268
  %6 = load i32, i32* %R8D, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 7
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41402f___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41402f_type* @G__0x41402f to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -48
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -47
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41404c____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276300, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41406b___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41406b_type* @G__0x41406b to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414085____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276357, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4140a9___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4140a9_type* @G__0x4140a9 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4140c3____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276419, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4140e8____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276456, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41410e___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41410e_type* @G__0x41410e to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414126____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276518, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414148____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276552, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41416b____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276587, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41418b___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41418b_type* @G__0x41418b to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4141a0____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276640, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4141be___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4141be_type* @G__0x4141be to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4141d2____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276690, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4141ef___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4141ef_type* @G__0x4141ef to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414204____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276740, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_0x218aa2__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2198186
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x664440___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__ax___r14w(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %AX = bitcast %union.anon* %3 to i16*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %4 to i16*
  %5 = load i16, i16* %AX, align 2
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i16 %5, i16* %R14W, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl__r14w___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R14W, align 2
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = sext i16 %4 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6682c0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6682c0_type* @G__0x6682c0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x118__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -280
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPssEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x32__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -50
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x32__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -50
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addl__eax___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = trunc i64 %3 to i32
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %PC, align 8
  %7 = shl i32 %4, 1
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %RAX, align 8
  %9 = icmp ult i32 %7, %4
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %7, 254
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12)
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = lshr i32 %4, 3
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i32 %7, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i32 %4, 30
  %26 = and i32 %25, 1
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %4, 31
  %30 = xor i32 %26, %29
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x34__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -52
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x36__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -54
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -52
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl_MINUS0x36__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -54
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -284
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x120__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -288
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -288
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivl__ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %ECX, align 4
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %8 = bitcast %union.anon* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %12 = bitcast %union.anon* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = sext i32 %4 to i64
  %16 = shl nuw i64 %14, 32
  %17 = or i64 %16, %10
  %18 = sdiv i64 %17, %15
  %19 = shl i64 %18, 32
  %20 = ashr exact i64 %19, 32
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %24, label %22

; <label>:22:                                     ; preds = %block_400488
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:24:                                     ; preds = %block_400488
  %25 = srem i64 %17, %15
  %26 = getelementptr inbounds %union.anon, %union.anon* %7, i64 0, i32 0
  %27 = and i64 %18, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %11, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %24, %22
  %36 = phi %struct.Memory* [ %23, %22 ], [ %2, %24 ]
  ret %struct.Memory* %36
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x11c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -284
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__dx___r14w(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %DX = bitcast %union.anon* %3 to i16*
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %4 to i16*
  %5 = load i16, i16* %DX, align 2
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i16 %5, i16* %R14W, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x38__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -56
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -50
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = sext i16 %8 to i64
  %10 = and i64 %9, 4294967295
  store i64 %10, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414223___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414223_type* @G__0x414223 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -280
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414239___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414239_type* @G__0x414239 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -56
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = sext i16 %9 to i64
  %11 = and i64 %10, 4294967295
  store i64 %11, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -54
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = sext i16 %9 to i64
  %11 = and i64 %10, 4294967295
  store i64 %11, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414257____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276823, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414277___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414277_type* @G__0x414277 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414292____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276882, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4142b7___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4142b7_type* @G__0x4142b7 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4142d2____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276946, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4142f8____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276984, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41431f___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41431f_type* @G__0x41431f to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414338____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277048, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41435b____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277083, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41437f____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277119, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4143a0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4143a0_type* @G__0x4143a0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4143b6____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277174, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4143d5___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4143d5_type* @G__0x4143d5 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4143ea____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277226, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414408___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414408_type* @G__0x414408 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41441e____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277278, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_0x218763__rip____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2197355
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6605c0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl__r14w___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i16, i16* %R14W, align 2
  %5 = zext i16 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x664440___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x664440_type* @G__0x664440 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x128__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -296
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPttEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x3a__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -58
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -58
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x3c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -60
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x3e__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -62
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -60
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -62
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -300
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x10c__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -268
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -304
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x130__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -304
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divl__r8d(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0
  %R8D = bitcast %union.anon* %3 to i32*
  %4 = load i32, i32* %R8D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %13 = bitcast %union.anon* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = shl nuw i64 %15, 32
  %17 = or i64 %16, %11
  %18 = udiv i64 %17, %5
  %19 = and i64 %18, 4294967295
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %23, label %21

; <label>:21:                                     ; preds = %block_400488
  %22 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %7, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

; <label>:23:                                     ; preds = %block_400488
  %24 = urem i64 %17, %5
  %25 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  store i64 %18, i64* %25, align 8
  %26 = getelementptr inbounds %union.anon, %union.anon* %12, i64 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  br label %_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_.exit: ; preds = %23, %21
  %33 = phi %struct.Memory* [ %22, %21 ], [ %2, %23 ]
  ret %struct.Memory* %33
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x12c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -300
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movw__r14w__MINUS0x40__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0
  %R14W = bitcast %union.anon* %3 to i16*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -64
  %6 = load i16, i16* %R14W, align 2
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i16*
  store i16 %6, i16* %9, align 2
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -58
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414222___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414222_type* @G__0x414222 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -296
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414238___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414238_type* @G__0x414238 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -62
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 5
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414256____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276822, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414276___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414276_type* @G__0x414276 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414291____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276881, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4142b6___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4142b6_type* @G__0x4142b6 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4142d1____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276945, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4142f7____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4276983, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41431e___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41431e_type* @G__0x41431e to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414337____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277047, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41435a____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277082, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41437e____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277118, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41439f___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41439f_type* @G__0x41439f to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4143b5____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277173, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4143d4___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4143d4_type* @G__0x4143d4 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4143e9____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277225, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414407___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414407_type* @G__0x414407 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41441d____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277277, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x21841b__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2196515
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si__xmm0___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x41DFFFFFFFC00000
  %11 = fptosi double %8 to i32
  %12 = zext i32 %11 to i64
  %13 = select i1 %10, i64 2147483648, i64 %12
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6588c0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6605c0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6605c0_type* @G__0x6605c0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x138__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -312
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPiiEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -68
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -68
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -72
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -76
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -72
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -76
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -316
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -320
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x140__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -320
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x13c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -316
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x50__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -80
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -68
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41443d___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41443d_type* @G__0x41443d to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -312
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414453___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414453_type* @G__0x414453 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -76
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -80
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414471____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277361, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414491___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414491_type* @G__0x414491 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4144ac____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277420, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4144d1___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4144d1_type* @G__0x4144d1 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4144ec____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277484, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414512____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277522, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414539___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414539_type* @G__0x414539 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414552____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277586, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414575____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277621, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414599____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277657, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4145ba___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ba_type* @G__0x4145ba to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4145d0____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277712, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4145ef___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ef_type* @G__0x4145ef to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414604____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277764, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414622___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414622_type* @G__0x414622 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414638____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277816, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_0x21812c__rip____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2195765
  %5 = add i64 %3, 9
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to double*
  %7 = load double, double* %6, align 8
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edi___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0
  %EDI = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %EDI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x650bc0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6588c0___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6588c0_type* @G__0x6588c0 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__ecx___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0
  %ECX = bitcast %union.anon* %3 to i32*
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %4 = load i32, i32* %ECX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x148__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -328
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %EAX, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPjjEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to double*
  %8 = load double, double* %7, align 8
  %9 = tail call double @llvm.trunc.f64(double %8)
  %10 = tail call double @llvm.fabs.f64(double %9)
  %11 = fcmp ogt double %10, 0x43E0000000000000
  %12 = fptosi double %9 to i64
  %13 = select i1 %11, i64 -9223372036854775808, i64 %12
  store i64 %13, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -84
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -84
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -88
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -92
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -88
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -92
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0
  %EAX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -332
  %6 = load i32, i32* %EAX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -336
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 6
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x150__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -336
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x14c__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -332
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__edx__MINUS0x60__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0
  %EDX = bitcast %union.anon* %3 to i32*
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -96
  %6 = load i32, i32* %EDX, align 4
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 3
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %5 to i32*
  store i32 %6, i32* %9, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -84
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41443c___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41443c_type* @G__0x41443c to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -328
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414452___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414452_type* @G__0x414452 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -92
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -96
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %3, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414470____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277360, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414490___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414490_type* @G__0x414490 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4144ab____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277419, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4144d0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4144d0_type* @G__0x4144d0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4144eb____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277483, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414511____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277521, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414538___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414538_type* @G__0x414538 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414551____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277585, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414574____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277620, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414598____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277656, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4145b9___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4145b9_type* @G__0x4145b9 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4145cf____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277711, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4145ee___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4145ee_type* @G__0x4145ee to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414603____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277763, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414621___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414621_type* @G__0x414621 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414637____rdi_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = bitcast i64* %RDI to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277815, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x217e32__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2195002
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6411c0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6411c0_type* @G__0x6411c0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x650bc0___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x650bc0_type* @G__0x650bc0 to i64), i64 4294967295), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdi__MINUS0x158__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -344
  %5 = load i64, i64* %RDI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPllEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to double*
  %8 = load double, double* %7, align 8
  %9 = tail call double @llvm.trunc.f64(double %8)
  %10 = tail call double @llvm.fabs.f64(double %9)
  %11 = fcmp ogt double %10, 0x43E0000000000000
  %12 = fptosi double %9 to i64
  %13 = select i1 %11, i64 -9223372036854775808, i64 %12
  store i64 %13, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x68__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -104
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__rdx___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = shl i64 %3, 1
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ult i64 %6, %3
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 254
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = lshr i64 %3, 3
  %18 = trunc i64 %17 to i8
  %19 = and i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %19, i8* %20, align 1
  %21 = icmp eq i64 %6, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i64 %3, 62
  %25 = and i64 %24, 1
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %30, i8* %31, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x2___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 2
  store i64 %6, i64* %RDX, align 8
  %7 = icmp ugt i64 %3, -3
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x78__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -120
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x78__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -120
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x160__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -352
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cqto(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = ashr i64 %7, 63
  store i64 %8, i64* %5, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_idivq__rsi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RSI, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sext i64 %3 to i128
  %11 = and i128 %10, -18446744073709551616
  %12 = zext i64 %9 to i128
  %13 = shl nuw i128 %12, 64
  %14 = zext i64 %7 to i128
  %15 = or i128 %13, %14
  %16 = zext i64 %3 to i128
  %17 = or i128 %11, %16
  %18 = sdiv i128 %15, %17
  %19 = trunc i128 %18 to i64
  %20 = and i128 %18, 18446744073709551615
  %21 = sext i64 %19 to i128
  %22 = and i128 %21, -18446744073709551616
  %23 = or i128 %22, %20
  %24 = icmp eq i128 %18, %23
  br i1 %24, label %27, label %25

; <label>:25:                                     ; preds = %block_400488
  %26 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %5, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit

; <label>:27:                                     ; preds = %block_400488
  %28 = srem i128 %15, %17
  %29 = trunc i128 %28 to i64
  store i64 %19, i64* %6, align 8
  store i64 %29, i64* %8, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_.exit: ; preds = %27, %25
  %36 = phi %struct.Memory* [ %26, %25 ], [ %2, %27 ]
  ret %struct.Memory* %36
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x160__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -352
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__rax___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %RAX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = add i64 %4, %3
  store i64 %7, i64* %RDX, align 8
  %8 = icmp ult i64 %7, %3
  %9 = icmp ult i64 %7, %4
  %10 = or i1 %8, %9
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = trunc i64 %7 to i32
  %14 = and i32 %13, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = xor i64 %20, %7
  %22 = lshr i64 %21, 4
  %23 = trunc i64 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i64 %7, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %7, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %3, 63
  %33 = lshr i64 %4, 63
  %34 = xor i64 %29, %32
  %35 = xor i64 %29, %33
  %36 = add nuw nsw i64 %34, %35
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %RDX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414657___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414657_type* @G__0x414657 to i64), i64 4294967295), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -344
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41466d___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41466d_type* @G__0x41466d to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi___ecx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -112
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -120
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %R8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -128
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %R9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsp___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41468b____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277899, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4146ab___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4146ab_type* @G__0x4146ab to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4146c6____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4277958, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4146eb___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4146eb_type* @G__0x4146eb to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414706____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278022, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41472c____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278060, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414753___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414753_type* @G__0x414753 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41476c____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278124, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41478f____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278159, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4147b3____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278195, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x4147d4___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x4147d4_type* @G__0x4147d4 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4147ea____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278250, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x414809___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x414809_type* @G__0x414809 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41481e____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278302, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x41483c___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x41483c_type* @G__0x41483c to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414852____rax_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = bitcast i64* %RAX to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  store i64 4278354, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x217b26__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2194222
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x11916__rip____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 71966
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = extractelement <2 x i32> %9, i32 0
  %14 = bitcast %union.VectorReg* %3 to i32*
  store i32 %13, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %20 = bitcast i64* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %12, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_subsd__xmm1___xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fsub double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si__xmm2___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x8000000000000000___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 -9223372036854775808, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorq__rcx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %RCX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = xor i64 %4, %3
  store i64 %7, i64* %RAX, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %7 to i32
  %10 = and i32 %9, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10)
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i64 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i64 %7, 63
  %20 = trunc i64 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %4 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast [32 x %union.VectorReg]* %3 to double*
  %10 = load double, double* %9, align 1
  %11 = fcmp uno double %8, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %block_400488
  %13 = fadd double %8, %10
  %14 = bitcast double %13 to i64
  %15 = and i64 %14, 9221120237041090560
  %16 = icmp eq i64 %15, 9218868437227405312
  %17 = and i64 %14, 2251799813685247
  %18 = icmp ne i64 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %12
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:22:                                     ; preds = %block_400488
  %23 = fcmp ogt double %8, %10
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %8, %10
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %8, %10
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %12
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %12 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %12 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %12 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %35, %20
  %39 = phi %struct.Memory* [ %21, %20 ], [ %2, %35 ]
  ret %struct.Memory* %39
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cmovaq__rdx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9 = load i8, i8* %8, align 1
  %10 = or i8 %9, %7
  %11 = icmp eq i8 %10, 0
  %12 = load i64, i64* %RAX, align 8
  %13 = select i1 %11, i64 %3, i64 %12
  store i64 %13, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6317c0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6317c0_type* @G__0x6317c0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__esi___edi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0
  %ESI = bitcast %union.anon* %3 to i32*
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %4 = load i32, i32* %ESI, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__0x6411c0___esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 5
  store i64 %4, i64* %PC, align 8
  store i64 and (i64 ptrtoint (%G__0x6411c0_type* @G__0x6411c0 to i64), i64 4294967295), i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -360
  %5 = load i64, i64* %RCX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm1__MINUS0x170__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -368
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPmmEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 5
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movaps__xmm0___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %5 = bitcast %union.VectorReg* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %4 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = extractelement <2 x i32> %9, i32 0
  %14 = bitcast %union.VectorReg* %3 to i32*
  store i32 %13, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 1
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %12, i32 0
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %20 = bitcast i64* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %12, i32 1
  %22 = getelementptr inbounds i8, i8* %5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0x170__rbp____xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -368
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_subsd__xmm2___xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fsub double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_cvttsd2si__xmm1___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 5
  store i64 %5, i64* %PC, align 8
  %6 = bitcast %union.VectorReg* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = tail call double @llvm.trunc.f64(double %7)
  %9 = tail call double @llvm.fabs.f64(double %8)
  %10 = fcmp ogt double %9, 0x43E0000000000000
  %11 = fptosi double %8 to i64
  %12 = select i1 %10, i64 -9223372036854775808, i64 %11
  store i64 %12, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x168__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -360
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm2(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %4 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast [32 x %union.VectorReg]* %3 to double*
  %10 = load double, double* %9, align 1
  %11 = fcmp uno double %8, %10
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %block_400488
  %13 = fadd double %8, %10
  %14 = bitcast double %13 to i64
  %15 = and i64 %14, 9221120237041090560
  %16 = icmp eq i64 %15, 9218868437227405312
  %17 = and i64 %14, 2251799813685247
  %18 = icmp ne i64 %17, 0
  %19 = and i1 %16, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %12
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:22:                                     ; preds = %block_400488
  %23 = fcmp ogt double %8, %10
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %8, %10
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %8, %10
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %12
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %12 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %12 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %12 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %35, %20
  %39 = phi %struct.Memory* [ %21, %20 ], [ %2, %35 ]
  ret %struct.Memory* %39
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x88__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -136
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -136
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_shlq__0x1___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  %6 = shl i64 %3, 1
  %7 = icmp slt i64 %3, 0
  %8 = icmp slt i64 %6, 0
  %9 = xor i1 %7, %8
  store i64 %6, i64* %RAX, align 8
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %.lobit = lshr i64 %3, 63
  %11 = trunc i64 %.lobit to i8
  store i8 %11, i8* %10, align 1
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %13 = trunc i64 %6 to i32
  %14 = and i32 %13, 254
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  store i8 %18, i8* %12, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %21 = icmp eq i64 %6, 0
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %24 = lshr i64 %3, 62
  %25 = trunc i64 %24 to i8
  %26 = and i8 %25, 1
  store i8 %26, i8* %23, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %28 = zext i1 %9 to i8
  store i8 %28, i8* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x90__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x2___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 4
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 2
  store i64 %6, i64* %RAX, align 8
  %7 = icmp ugt i64 %3, -3
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x98__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -152
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x90__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax__MINUS0x178__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -376
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rdx___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %RDX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_xorl__r11d___r11d(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0, i32 0
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl__r11d___edx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 23, i32 0
  %R11D = bitcast %union.anon* %3 to i32*
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = load i32, i32* %R11D, align 4
  %5 = zext i32 %4 to i64
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 3
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_divq_MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) local_unnamed_addr {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -152
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = zext i64 %10 to i128
  %14 = shl nuw i128 %13, 64
  %15 = zext i64 %8 to i128
  %16 = or i128 %14, %15
  %17 = zext i64 %12 to i128
  %18 = udiv i128 %16, %17
  %19 = and i128 %18, 18446744073709551615
  %20 = icmp eq i128 %18, %19
  br i1 %20, label %23, label %21

; <label>:21:                                     ; preds = %block_400488
  %22 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %6, %struct.Memory* %2)
  br label %_ZN12_GLOBAL__N_1L9DIVrdxraxI2MnImEEEP6MemoryS4_R5StateT_.exit

; <label>:23:                                     ; preds = %block_400488
  %24 = urem i128 %16, %17
  %25 = trunc i128 %24 to i64
  %26 = trunc i128 %18 to i64
  store i64 %26, i64* %7, align 8
  store i64 %25, i64* %9, align 8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %32, align 1
  br label %_ZN12_GLOBAL__N_1L9DIVrdxraxI2MnImEEEP6MemoryS4_R5StateT_.exit

_ZN12_GLOBAL__N_1L9DIVrdxraxI2MnImEEEP6MemoryS4_R5StateT_.exit: ; preds = %23, %21
  %33 = phi %struct.Memory* [ %22, %21 ], [ %2, %23 ]
  ret %struct.Memory* %33
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x178__rbp____rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -376
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__rax___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RSI, align 8
  %4 = load i64, i64* %RAX, align 8
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 3
  store i64 %6, i64* %PC, align 8
  %7 = add i64 %4, %3
  store i64 %7, i64* %RSI, align 8
  %8 = icmp ult i64 %7, %3
  %9 = icmp ult i64 %7, %4
  %10 = or i1 %8, %9
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = trunc i64 %7 to i32
  %14 = and i32 %13, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = xor i64 %20, %7
  %22 = lshr i64 %21, 4
  %23 = trunc i64 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i64 %7, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %7, 63
  %30 = trunc i64 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %3, 63
  %33 = lshr i64 %4, 63
  %34 = xor i64 %29, %32
  %35 = xor i64 %29, %33
  %36 = add nuw nsw i64 %34, %35
  %37 = icmp eq i64 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rsi__MINUS0xa0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -160
  %5 = load i64, i64* %RSI, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 7
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %4 to i64*
  store i64 %5, i64* %8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0xd8__rbp____rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -216
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -220
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 6
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -232
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41466c___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41466c_type* @G__0x41466c to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -136
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41468a___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41468a_type* @G__0x41468a to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -144
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 17, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -152
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %R8, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %R9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 19, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -160
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 7
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %R9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax____rsp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = bitcast i64* %RSP to i64**
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %RAX, align 8
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  store i64 %5, i64* %4, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4146aa___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4146aa_type* @G__0x4146aa to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4146c5___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4146c5_type* @G__0x4146c5 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4146ea___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4146ea_type* @G__0x4146ea to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414705___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414705_type* @G__0x414705 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41472b___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41472b_type* @G__0x41472b to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414752___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414752_type* @G__0x414752 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41476b___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41476b_type* @G__0x41476b to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41478e___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41478e_type* @G__0x41478e to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4147b2___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4147b2_type* @G__0x4147b2 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4147d3___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4147d3_type* @G__0x4147d3 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4147e9___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4147e9_type* @G__0x4147e9 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414808___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414808_type* @G__0x414808 to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41481d___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41481d_type* @G__0x41481d to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41483b___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41483b_type* @G__0x41483b to i64), i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414851___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414851_type* @G__0x414851 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x629ac0___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RCX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x7d00___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 32000
  store i64 %6, i64* %RCX, align 8
  %7 = icmp ugt i64 %3, -32001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsd2ss_0x61a088___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 9
  store i64 %6, i64* %PC, align 8
  %7 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %8 = load <2 x i32>, <2 x i32>* %7, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to <2 x i32>*
  %11 = load <2 x i32>, <2 x i32>* %10, align 1
  %12 = load double, double* bitcast (%G_0x61a088_type* @G_0x61a088 to double*), align 8
  %13 = fptrunc double %12 to float
  %14 = bitcast %union.VectorReg* %3 to float*
  store float %13, float* %14, align 1
  %15 = extractelement <2 x i32> %8, i32 1
  %16 = getelementptr inbounds i8, i8* %4, i64 4
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %11, i32 0
  %19 = bitcast i64* %9 to i32*
  store i32 %18, i32* %19, align 1
  %20 = extractelement <2 x i32> %11, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 12
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rax___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %RAX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__rcx___rsi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 3
  store i64 %5, i64* %PC, align 8
  store i64 %3, i64* %RSI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPffEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x629ac0_type* @G__0x629ac0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414870___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414870_type* @G__0x414870 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_0x11491__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 70809
  %7 = add i64 %5, 8
  store i64 %7, i64* %PC, align 8
  %8 = inttoptr i64 %6 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %union.VectorReg* %3 to i32*
  store i32 %9, i32* %10, align 1
  %11 = getelementptr inbounds i8, i8* %4, i64 4
  %12 = bitcast i8* %11 to float*
  store float 0.000000e+00, float* %12, align 1
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %14 = bitcast i64* %13 to float*
  store float 0.000000e+00, float* %14, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 12
  %16 = bitcast i8* %15 to float*
  store float 0.000000e+00, float* %16, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_cvtsd2ss_MINUS0x28__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -40
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 5
  store i64 %8, i64* %PC, align 8
  %9 = bitcast %union.VectorReg* %3 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %12 = bitcast i64* %11 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 1
  %14 = inttoptr i64 %6 to double*
  %15 = load double, double* %14, align 8
  %16 = fptrunc double %15 to float
  %17 = bitcast %union.VectorReg* %3 to float*
  store float %16, float* %17, align 1
  %18 = extractelement <2 x i32> %10, i32 1
  %19 = getelementptr inbounds i8, i8* %4, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %13, i32 0
  %22 = bitcast i64* %11 to i32*
  store i32 %21, i32* %22, align 1
  %23 = extractelement <2 x i32> %13, i32 1
  %24 = getelementptr inbounds i8, i8* %4, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm1__MINUS0xa4__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -164
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_mulss_MINUS0xa4__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -164
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = bitcast %union.VectorReg* %3 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %12 = bitcast i64* %11 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 1
  %14 = inttoptr i64 %6 to float*
  %15 = load float, float* %14, align 4
  %16 = extractelement <2 x float> %10, i32 0
  %17 = fmul float %16, %15
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %10 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %13, i32 0
  %24 = bitcast i64* %11 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %13, i32 1
  %26 = getelementptr inbounds i8, i8* %4, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm1__MINUS0xa8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -168
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addss_MINUS0xa4__rbp____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -164
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = bitcast %union.VectorReg* %3 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %12 = bitcast i64* %11 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 1
  %14 = inttoptr i64 %6 to float*
  %15 = load float, float* %14, align 4
  %16 = extractelement <2 x float> %10, i32 0
  %17 = fadd float %16, %15
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %10 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %13, i32 0
  %24 = bitcast i64* %11 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %13, i32 1
  %26 = getelementptr inbounds i8, i8* %4, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm0__MINUS0xac__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -172
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -164
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -168
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divss_MINUS0xac__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -172
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = bitcast %union.VectorReg* %3 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %12 = bitcast i64* %11 to <2 x i32>*
  %13 = load <2 x i32>, <2 x i32>* %12, align 1
  %14 = inttoptr i64 %6 to float*
  %15 = load float, float* %14, align 4
  %16 = extractelement <2 x float> %10, i32 0
  %17 = fdiv float %16, %15
  %18 = bitcast %union.VectorReg* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %10 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %4, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %13, i32 0
  %24 = bitcast i64* %11 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %13, i32 1
  %26 = getelementptr inbounds i8, i8* %4, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addss__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = bitcast [32 x %union.VectorReg]* %3 to i8*
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 4
  store i64 %7, i64* %PC, align 8
  %8 = bitcast [32 x %union.VectorReg]* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to <2 x i32>*
  %12 = load <2 x i32>, <2 x i32>* %11, align 1
  %13 = bitcast %union.VectorReg* %4 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 1
  %15 = extractelement <2 x float> %9, i32 0
  %16 = extractelement <2 x float> %14, i32 0
  %17 = fadd float %15, %16
  %18 = bitcast [32 x %union.VectorReg]* %3 to float*
  store float %17, float* %18, align 1
  %19 = bitcast <2 x float> %9 to <2 x i32>
  %20 = extractelement <2 x i32> %19, i32 1
  %21 = getelementptr inbounds i8, i8* %5, i64 4
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %12, i32 0
  %24 = bitcast i64* %10 to i32*
  store i32 %23, i32* %24, align 1
  %25 = extractelement <2 x i32> %12, i32 1
  %26 = getelementptr inbounds i8, i8* %5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss__xmm0__MINUS0xb0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -176
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 1
  %10 = extractelement <2 x float> %9, i32 0
  %11 = inttoptr i64 %5 to float*
  store float %10, float* %11, align 4
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414883___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414883_type* @G__0x414883 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41489e___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41489e_type* @G__0x41489e to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -172
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3
  %4 = bitcast %union.VectorReg* %3 to i8*
  %5 = load i64, i64* %RBP, align 8
  %6 = add i64 %5, -176
  %7 = load i64, i64* %PC, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %PC, align 8
  %9 = inttoptr i64 %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %union.VectorReg* %3 to i32*
  store i32 %10, i32* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 1
  %15 = bitcast i64* %14 to float*
  store float 0.000000e+00, float* %15, align 1
  %16 = getelementptr inbounds i8, i8* %4, i64 12
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4148bb___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4148bb_type* @G__0x4148bb to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4148d3___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4148d3_type* @G__0x4148d3 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4148f5___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4148f5_type* @G__0x4148f5 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41490d___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41490d_type* @G__0x41490d to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414930___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414930_type* @G__0x414930 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414954___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414954_type* @G__0x414954 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41496a___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41496a_type* @G__0x41496a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x41498a___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x41498a_type* @G__0x41498a to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4149ab___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4149ab_type* @G__0x4149ab to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x61a0c0___rax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0xfa00___rcx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0
  %3 = load i64, i64* %RCX, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 64000
  store i64 %6, i64* %RCX, align 8
  %7 = icmp ugt i64 %3, -64001
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %6, %3
  %18 = lshr i64 %17, 4
  %19 = trunc i64 %18 to i8
  %20 = and i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %20, i8* %21, align 1
  %22 = icmp eq i64 %6, 0
  %23 = zext i1 %22 to i8
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %23, i8* %24, align 1
  %25 = lshr i64 %6, 63
  %26 = trunc i64 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %3, 63
  %29 = xor i64 %25, %28
  %30 = add nuw nsw i64 %29, %25
  %31 = icmp eq i64 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x61a088___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 9
  store i64 %4, i64* %PC, align 8
  %5 = load i64, i64* bitcast (%G_0x61a088_type* @G_0x61a088 to i64*), align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %5, i64* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %8 = bitcast i64* %7 to double*
  store double 0.000000e+00, double* %8, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z4fillIPddEvT_S1_T0_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x61a0c0_type* @G__0x61a0c0 to i64), i64* %RDI, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4149c9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4149c9_type* @G__0x4149c9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_0x11165__rip____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 69997
  %5 = add i64 %3, 8
  store i64 %5, i64* %PC, align 8
  %6 = inttoptr i64 %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %7, i64* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %10 = bitcast i64* %9 to double*
  store double 0.000000e+00, double* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -40
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 5
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm1__MINUS0xb8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -184
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_mulsd_MINUS0xb8__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -184
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to double*
  %9 = load double, double* %8, align 1
  %10 = inttoptr i64 %5 to double*
  %11 = load double, double* %10, align 8
  %12 = fmul double %9, %11
  store double %12, double* %8, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm1__MINUS0xc0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -192
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addsd_MINUS0xb8__rbp____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -184
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to double*
  %9 = load double, double* %8, align 1
  %10 = inttoptr i64 %5 to double*
  %11 = load double, double* %10, align 8
  %12 = fadd double %9, %11
  store double %12, double* %8, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm0__MINUS0xc8__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -200
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -184
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -192
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_divsd_MINUS0xc8__rbp____xmm1(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %4 = load i64, i64* %RBP, align 8
  %5 = add i64 %4, -200
  %6 = load i64, i64* %PC, align 8
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC, align 8
  %8 = bitcast %union.VectorReg* %3 to double*
  %9 = load double, double* %8, align 1
  %10 = inttoptr i64 %5 to double*
  %11 = load double, double* %10, align 8
  %12 = fdiv double %9, %11
  store double %12, double* %8, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 1
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 4
  store i64 %6, i64* %PC, align 8
  %7 = bitcast [32 x %union.VectorReg]* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = bitcast %union.VectorReg* %4 to double*
  %10 = load double, double* %9, align 1
  %11 = fadd double %8, %10
  store double %11, double* %7, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd__xmm0__MINUS0xd0__rbp_(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -208
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = load i64, i64* %7, align 1
  %9 = inttoptr i64 %4 to i64*
  store i64 %8, i64* %9, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4149dd___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4149dd_type* @G__0x4149dd to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x4149f9___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x4149f9_type* @G__0x4149f9 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -200
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 2, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %RBP, align 8
  %4 = add i64 %3, -208
  %5 = load i64, i64* %PC, align 8
  %6 = add i64 %5, 8
  store i64 %6, i64* %PC, align 8
  %7 = inttoptr i64 %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 0
  store i64 %8, i64* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 1, i64 3, i32 0, i32 0, i32 0, i64 1
  %11 = bitcast i64* %10 to double*
  store double 0.000000e+00, double* %11, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414a17___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414a17_type* @G__0x414a17 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414a30___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414a30_type* @G__0x414a30 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414a53___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414a53_type* @G__0x414a53 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414a6c___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414a6c_type* @G__0x414a6c to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414a90___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414a90_type* @G__0x414a90 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414ab5___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414ab5_type* @G__0x414ab5 to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414acc___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414acc_type* @G__0x414acc to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414aed___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414aed_type* @G__0x414aed to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_movq__0x414b0f___rdx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 10
  store i64 %4, i64* %PC, align 8
  store i64 ptrtoint (%G__0x414b0f_type* @G__0x414b0f to i64), i64* %RDX, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_callq_._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, %rel_off1
  %5 = add i64 %3, %rel_off2
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -8
  %9 = inttoptr i64 %8 to i64*
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %6, align 8
  store i64 %4, i64* %PC, align 8
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_xorl__eax___eax(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  store i64 0, i64* %RAX, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10, align 1
  ret %struct.Memory* %2
}

; Function Attrs: nounwind
define %struct.Memory* @routine_addq__0x170___rsp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #3 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3 = load i64, i64* %RSP, align 8
  %4 = load i64, i64* %PC, align 8
  %5 = add i64 %4, 7
  store i64 %5, i64* %PC, align 8
  %6 = add i64 %3, 368
  store i64 %6, i64* %RSP, align 8
  %7 = icmp ugt i64 %3, -369
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11)
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, 16
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = xor i64 %26, %29
  %31 = add nuw nsw i64 %30, %26
  %32 = icmp eq i64 %31, 2
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %33, i8* %34, align 1
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_popq__rbx(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 3, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %RBX, align 8
  store i64 %7, i64* %5, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_popq__r14(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %R14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 29, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 2
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %R14, align 8
  store i64 %7, i64* %5, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_popq__rbp(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %6 to i64*
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %RBP, align 8
  store i64 %7, i64* %5, align 8
  ret %struct.Memory* %2
}

; Function Attrs: norecurse nounwind
define %struct.Memory* @routine_retq(%struct.State* nocapture dereferenceable(3376), i64, %struct.Memory* readnone returned) local_unnamed_addr #2 {
block_400488:
  %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3 = load i64, i64* %PC, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %PC, align 8
  %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %PC, align 8
  %9 = add i64 %6, 8
  store i64 %9, i64* %5, align 8
  ret %struct.Memory* %2
}

attributes #0 = { nounwind readnone }
attributes #1 = { alwaysinline }
attributes #2 = { norecurse nounwind }
attributes #3 = { nounwind }
