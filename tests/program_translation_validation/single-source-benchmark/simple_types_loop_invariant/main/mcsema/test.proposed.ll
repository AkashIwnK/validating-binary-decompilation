; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400370__init_type = type <{ [23 x i8] }>
%seg_400390__text_type = type <{ [354 x i8] }>
%seg_4004f4__fini_type = type <{ [9 x i8] }>
%seg_400500__rodata_type = type <{ [4 x i8] }>
%seg_400504__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400538__eh_frame_type = type <{ [208 x i8] }>
%seg_600e50__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400370__init = internal constant %seg_400370__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05}\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_400390__text = internal constant %seg_400390__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\F0\04@\00H\C7\C1\80\04@\00H\C7\C7x\04@\00\FF\156\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\E1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\CF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\BE\09 \00UH\8D-\BE\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\BF\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4004f4__fini = internal constant %seg_4004f4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400500__rodata = internal constant %seg_400500__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400504__eh_frame_hdr = internal constant %seg_400504__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400538__eh_frame = internal constant %seg_400538__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_402f90._Z4fillIPaaEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_402fd0._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403080._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403140._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403250._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403300._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403410._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4034c0._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4035d0._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4036e0._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403790._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4038a0._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4039b0._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403ac0._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403b70._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403c80._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403d30._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403e40._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_403ef0._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404000._Z4fillIPhhEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404040._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4040f0._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4041b0._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4042c0._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404370._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404480._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404530._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404640._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404750._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404800._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404910._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404a20._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404b30._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404be0._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404cf0._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404da0._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404eb0._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_404f60._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405070._Z4fillIPssEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4050b0._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405170._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405230._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405360._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405420._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405550._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405610._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405740._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405870._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405930._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405a60._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405b90._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405cc0._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405d80._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405eb0._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_405f70._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4060a0._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406160._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406290._Z4fillIPttEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4062d0._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406390._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406450._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406580._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406640._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406770._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406830._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406960._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406a90._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406b50._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406c80._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406db0._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406ee0._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_406fa0._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4070d0._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407190._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4072c0._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407380._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4074b0._Z4fillIPiiEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4074f0._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407590._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407640._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407710._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4077b0._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407880._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407920._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4079f0._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407ac0._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407b60._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407c30._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407d00._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407dd0._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407e70._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407f40._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_407fe0._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4080b0._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408150._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408220._Z4fillIPjjEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408260._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408300._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4083b0._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408480._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408520._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4085f0._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408690._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408760._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408830._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4088d0._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4089a0._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408a70._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408b40._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408be0._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408cb0._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408d50._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408e20._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408ec0._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408f90._Z4fillIPllEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_408fd0._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409080._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409130._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409200._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4092b0._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409380._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409430._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409500._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4095d0._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409680._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409750._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409820._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4098f0._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4099a0._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409a70._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409b20._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409bf0._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409ca0._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409d70._Z4fillIPmmEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409db0._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409e60._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409f10._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409fe0._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a090._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a160._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a210._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a2e0._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a3b0._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a460._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a530._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a600._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a6d0._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a780._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a850._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a900._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40a9d0._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40aa80._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ab50._Z4fillIPffEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ab90._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ac40._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ad00._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ade0._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ae90._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40af70._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b020._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b100._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b1e0._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b290._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b370._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b450._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b530._Z4fillIPddEvT_S1_T0_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b570._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b620._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b6e0._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b7c0._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b870._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40b950._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40ba00._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40bae0._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40bbc0._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40bc70._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40bd50._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40be30._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x1116d__rip__4205771__type = type <{ [16 x i8] }>
@G_0x1116d__rip__4205771_= global %G_0x1116d__rip__4205771__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x1149d__rip__4205011__type = type <{ [16 x i8] }>
@G_0x1149d__rip__4205011_= global %G_0x1149d__rip__4205011__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x11926__rip__4203802__type = type <{ [16 x i8] }>
@G_0x11926__rip__4203802_= global %G_0x11926__rip__4203802__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x12faa__rip__4198022__type = type <{ [16 x i8] }>
@G_0x12faa__rip__4198022_= global %G_0x12faa__rip__4198022__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x217b76__rip__4203794__type = type <{ [16 x i8] }>
@G_0x217b76__rip__4203794_= global %G_0x217b76__rip__4203794__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x217e82__rip__4203014__type = type <{ [16 x i8] }>
@G_0x217e82__rip__4203014_= global %G_0x217e82__rip__4203014__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x21817c__rip__4202252__type = type <{ [8 x i8] }>
@G_0x21817c__rip__4202252_= global %G_0x21817c__rip__4202252__type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0x21846b__rip__4201501__type = type <{ [16 x i8] }>
@G_0x21846b__rip__4201501_= global %G_0x21846b__rip__4201501__type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G_0x2187b3__rip__4200661__type = type <{ [4 x i8] }>
@G_0x2187b3__rip__4200661_= global %G_0x2187b3__rip__4200661__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x218af2__rip__4199830__type = type <{ [4 x i8] }>
@G_0x218af2__rip__4199830_= global %G_0x218af2__rip__4199830__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x218e27__rip__4199009__type = type <{ [4 x i8] }>
@G_0x218e27__rip__4199009_= global %G_0x218e27__rip__4199009__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x219174__rip__4198164__type = type <{ [4 x i8] }>
@G_0x219174__rip__4198164_= global %G_0x219174__rip__4198164__type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x61a080_type = type <{ [4 x i8] }>
@G_0x61a080= global %G_0x61a080_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x61a088_type = type <{ [16 x i8] }>
@G_0x61a088= global %G_0x61a088_type <{ [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>
%G__0x413fda_type = type <{ [4 x i8] }>
@G__0x413fda= global %G__0x413fda_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x413fdb_type = type <{ [4 x i8] }>
@G__0x413fdb= global %G__0x413fdb_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x413fef_type = type <{ [4 x i8] }>
@G__0x413fef= global %G__0x413fef_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x413ff0_type = type <{ [4 x i8] }>
@G__0x413ff0= global %G__0x413ff0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41402b_type = type <{ [4 x i8] }>
@G__0x41402b= global %G__0x41402b_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41402c_type = type <{ [4 x i8] }>
@G__0x41402c= global %G__0x41402c_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414069_type = type <{ [4 x i8] }>
@G__0x414069= global %G__0x414069_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41406a_type = type <{ [4 x i8] }>
@G__0x41406a= global %G__0x41406a_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4140ce_type = type <{ [4 x i8] }>
@G__0x4140ce= global %G__0x4140ce_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4140cf_type = type <{ [4 x i8] }>
@G__0x4140cf= global %G__0x4140cf_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41414b_type = type <{ [4 x i8] }>
@G__0x41414b= global %G__0x41414b_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41414c_type = type <{ [4 x i8] }>
@G__0x41414c= global %G__0x41414c_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41417e_type = type <{ [4 x i8] }>
@G__0x41417e= global %G__0x41417e_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41417f_type = type <{ [4 x i8] }>
@G__0x41417f= global %G__0x41417f_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141af_type = type <{ [4 x i8] }>
@G__0x4141af= global %G__0x4141af_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141b0_type = type <{ [4 x i8] }>
@G__0x4141b0= global %G__0x4141b0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141e2_type = type <{ [4 x i8] }>
@G__0x4141e2= global %G__0x4141e2_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141e3_type = type <{ [4 x i8] }>
@G__0x4141e3= global %G__0x4141e3_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141f8_type = type <{ [4 x i8] }>
@G__0x4141f8= global %G__0x4141f8_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4141f9_type = type <{ [4 x i8] }>
@G__0x4141f9= global %G__0x4141f9_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414236_type = type <{ [4 x i8] }>
@G__0x414236= global %G__0x414236_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414237_type = type <{ [4 x i8] }>
@G__0x414237= global %G__0x414237_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414276_type = type <{ [4 x i8] }>
@G__0x414276= global %G__0x414276_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414277_type = type <{ [4 x i8] }>
@G__0x414277= global %G__0x414277_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4142de_type = type <{ [4 x i8] }>
@G__0x4142de= global %G__0x4142de_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4142df_type = type <{ [4 x i8] }>
@G__0x4142df= global %G__0x4142df_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41435f_type = type <{ [4 x i8] }>
@G__0x41435f= global %G__0x41435f_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414360_type = type <{ [4 x i8] }>
@G__0x414360= global %G__0x414360_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414394_type = type <{ [4 x i8] }>
@G__0x414394= global %G__0x414394_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414395_type = type <{ [4 x i8] }>
@G__0x414395= global %G__0x414395_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4143c7_type = type <{ [4 x i8] }>
@G__0x4143c7= global %G__0x4143c7_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4143c8_type = type <{ [4 x i8] }>
@G__0x4143c8= global %G__0x4143c8_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4143fc_type = type <{ [4 x i8] }>
@G__0x4143fc= global %G__0x4143fc_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4143fd_type = type <{ [4 x i8] }>
@G__0x4143fd= global %G__0x4143fd_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414412_type = type <{ [4 x i8] }>
@G__0x414412= global %G__0x414412_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414413_type = type <{ [4 x i8] }>
@G__0x414413= global %G__0x414413_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414450_type = type <{ [4 x i8] }>
@G__0x414450= global %G__0x414450_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414451_type = type <{ [4 x i8] }>
@G__0x414451= global %G__0x414451_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414490_type = type <{ [4 x i8] }>
@G__0x414490= global %G__0x414490_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414491_type = type <{ [4 x i8] }>
@G__0x414491= global %G__0x414491_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4144f8_type = type <{ [4 x i8] }>
@G__0x4144f8= global %G__0x4144f8_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4144f9_type = type <{ [4 x i8] }>
@G__0x4144f9= global %G__0x4144f9_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414579_type = type <{ [4 x i8] }>
@G__0x414579= global %G__0x414579_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41457a_type = type <{ [4 x i8] }>
@G__0x41457a= global %G__0x41457a_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4145ae_type = type <{ [4 x i8] }>
@G__0x4145ae= global %G__0x4145ae_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4145af_type = type <{ [4 x i8] }>
@G__0x4145af= global %G__0x4145af_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4145e1_type = type <{ [4 x i8] }>
@G__0x4145e1= global %G__0x4145e1_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4145e2_type = type <{ [4 x i8] }>
@G__0x4145e2= global %G__0x4145e2_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414616_type = type <{ [8 x i8] }>
@G__0x414616= global %G__0x414616_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414617_type = type <{ [4 x i8] }>
@G__0x414617= global %G__0x414617_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41462c_type = type <{ [8 x i8] }>
@G__0x41462c= global %G__0x41462c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41462d_type = type <{ [4 x i8] }>
@G__0x41462d= global %G__0x41462d_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41464a_type = type <{ [8 x i8] }>
@G__0x41464a= global %G__0x41464a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41466a_type = type <{ [8 x i8] }>
@G__0x41466a= global %G__0x41466a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41466b_type = type <{ [4 x i8] }>
@G__0x41466b= global %G__0x41466b_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414685_type = type <{ [8 x i8] }>
@G__0x414685= global %G__0x414685_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4146aa_type = type <{ [8 x i8] }>
@G__0x4146aa= global %G__0x4146aa_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4146ab_type = type <{ [4 x i8] }>
@G__0x4146ab= global %G__0x4146ab_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4146c5_type = type <{ [8 x i8] }>
@G__0x4146c5= global %G__0x4146c5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4146eb_type = type <{ [8 x i8] }>
@G__0x4146eb= global %G__0x4146eb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414712_type = type <{ [8 x i8] }>
@G__0x414712= global %G__0x414712_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414713_type = type <{ [4 x i8] }>
@G__0x414713= global %G__0x414713_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x41472b_type = type <{ [8 x i8] }>
@G__0x41472b= global %G__0x41472b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41474e_type = type <{ [8 x i8] }>
@G__0x41474e= global %G__0x41474e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414772_type = type <{ [8 x i8] }>
@G__0x414772= global %G__0x414772_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414793_type = type <{ [8 x i8] }>
@G__0x414793= global %G__0x414793_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414794_type = type <{ [4 x i8] }>
@G__0x414794= global %G__0x414794_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4147a9_type = type <{ [8 x i8] }>
@G__0x4147a9= global %G__0x4147a9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4147c8_type = type <{ [8 x i8] }>
@G__0x4147c8= global %G__0x4147c8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4147c9_type = type <{ [4 x i8] }>
@G__0x4147c9= global %G__0x4147c9_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x4147dd_type = type <{ [8 x i8] }>
@G__0x4147dd= global %G__0x4147dd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4147fb_type = type <{ [8 x i8] }>
@G__0x4147fb= global %G__0x4147fb_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4147fc_type = type <{ [4 x i8] }>
@G__0x4147fc= global %G__0x4147fc_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x414811_type = type <{ [8 x i8] }>
@G__0x414811= global %G__0x414811_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414830_type = type <{ [8 x i8] }>
@G__0x414830= global %G__0x414830_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414843_type = type <{ [8 x i8] }>
@G__0x414843= global %G__0x414843_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41485e_type = type <{ [8 x i8] }>
@G__0x41485e= global %G__0x41485e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41487b_type = type <{ [8 x i8] }>
@G__0x41487b= global %G__0x41487b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414893_type = type <{ [8 x i8] }>
@G__0x414893= global %G__0x414893_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4148b5_type = type <{ [8 x i8] }>
@G__0x4148b5= global %G__0x4148b5_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4148cd_type = type <{ [8 x i8] }>
@G__0x4148cd= global %G__0x4148cd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4148f0_type = type <{ [8 x i8] }>
@G__0x4148f0= global %G__0x4148f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414914_type = type <{ [8 x i8] }>
@G__0x414914= global %G__0x414914_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41492a_type = type <{ [8 x i8] }>
@G__0x41492a= global %G__0x41492a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41494a_type = type <{ [8 x i8] }>
@G__0x41494a= global %G__0x41494a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41496b_type = type <{ [8 x i8] }>
@G__0x41496b= global %G__0x41496b_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414989_type = type <{ [8 x i8] }>
@G__0x414989= global %G__0x414989_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x41499d_type = type <{ [8 x i8] }>
@G__0x41499d= global %G__0x41499d_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4149b9_type = type <{ [8 x i8] }>
@G__0x4149b9= global %G__0x4149b9_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4149d7_type = type <{ [8 x i8] }>
@G__0x4149d7= global %G__0x4149d7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x4149f0_type = type <{ [8 x i8] }>
@G__0x4149f0= global %G__0x4149f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414a13_type = type <{ [8 x i8] }>
@G__0x414a13= global %G__0x414a13_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414a2c_type = type <{ [8 x i8] }>
@G__0x414a2c= global %G__0x414a2c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414a50_type = type <{ [8 x i8] }>
@G__0x414a50= global %G__0x414a50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414a75_type = type <{ [8 x i8] }>
@G__0x414a75= global %G__0x414a75_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414a8c_type = type <{ [8 x i8] }>
@G__0x414a8c= global %G__0x414a8c_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414aad_type = type <{ [8 x i8] }>
@G__0x414aad= global %G__0x414aad_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x414acf_type = type <{ [8 x i8] }>
@G__0x414acf= global %G__0x414acf_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x61a0c0_type = type <{ [8 x i8] }>
@G__0x61a0c0= global %G__0x61a0c0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x629ac0_type = type <{ [8 x i8] }>
@G__0x629ac0= global %G__0x629ac0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6317c0_type = type <{ [8 x i8] }>
@G__0x6317c0= global %G__0x6317c0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x6411c0_type = type <{ [4 x i8] }>
@G__0x6411c0= global %G__0x6411c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x650bc0_type = type <{ [4 x i8] }>
@G__0x650bc0= global %G__0x650bc0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x6588c0_type = type <{ [4 x i8] }>
@G__0x6588c0= global %G__0x6588c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x6605c0_type = type <{ [4 x i8] }>
@G__0x6605c0= global %G__0x6605c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x664440_type = type <{ [4 x i8] }>
@G__0x664440= global %G__0x664440_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x6682c0_type = type <{ [4 x i8] }>
@G__0x6682c0= global %G__0x6682c0_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x66a200_type = type <{ [4 x i8] }>
@G__0x66a200= global %G__0x66a200_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x66c140_type = type <{ [4 x i8] }>
@G__0x66c140= global %G__0x66c140_type <{ [4 x i8] c"\00\00\00\00" }>


define %struct.Memory* @main(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .main:	 RIP: 400e70	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 400e70	 Bytes: 1
  %loadMem_400e70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e70 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e70)
  store %struct.Memory* %call_400e70, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 400e71	 Bytes: 3
  %loadMem_400e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e71 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e71)
  store %struct.Memory* %call_400e71, %struct.Memory** %MEMORY

  ; Code: pushq %r14	 RIP: 400e74	 Bytes: 2
  %loadMem_400e74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e74 = call %struct.Memory* @routine_pushq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e74)
  store %struct.Memory* %call_400e74, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 400e76	 Bytes: 1
  %loadMem_400e76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e76 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e76)
  store %struct.Memory* %call_400e76, %struct.Memory** %MEMORY

  ; Code: subq $0x170, %rsp	 RIP: 400e77	 Bytes: 7
  %loadMem_400e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e77 = call %struct.Memory* @routine_subq__0x170___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e77)
  store %struct.Memory* %call_400e77, %struct.Memory** %MEMORY

  ; Code: movsd 0x12faa(%rip), %xmm0	 RIP: 400e7e	 Bytes: 8
  %loadMem_400e7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e7e = call %struct.Memory* @routine_movsd_0x12faa__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e7e)
  store %struct.Memory* %call_400e7e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x14(%rbp)	 RIP: 400e86	 Bytes: 7
  %loadMem_400e86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e86 = call %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e86)
  store %struct.Memory* %call_400e86, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x18(%rbp)	 RIP: 400e8d	 Bytes: 3
  %loadMem_400e8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e8d = call %struct.Memory* @routine_movl__edi__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e8d)
  store %struct.Memory* %call_400e8d, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0x20(%rbp)	 RIP: 400e90	 Bytes: 4
  %loadMem_400e90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e90 = call %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e90)
  store %struct.Memory* %call_400e90, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x28(%rbp)	 RIP: 400e94	 Bytes: 5
  %loadMem_400e94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e94 = call %struct.Memory* @routine_movsd__xmm0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e94)
  store %struct.Memory* %call_400e94, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, -0x18(%rbp)	 RIP: 400e99	 Bytes: 4
  %loadMem_400e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e99 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e99)
  store %struct.Memory* %call_400e99, %struct.Memory** %MEMORY

  ; Code: jle .L_400eb7	 RIP: 400e9d	 Bytes: 6
  %loadMem_400e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400e9d = call %struct.Memory* @routine_jle_.L_400eb7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400e9d, i8* %BRANCH_TAKEN, i64 26, i64 6, i64 6)
  store %struct.Memory* %call_400e9d, %struct.Memory** %MEMORY

  %loadBr_400e9d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400e9d = icmp eq i8 %loadBr_400e9d, 1
  br i1 %cmpBr_400e9d, label %block_.L_400eb7, label %block_400ea3

block_400ea3:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 400ea3	 Bytes: 4
  %loadMem_400ea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ea3 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ea3)
  store %struct.Memory* %call_400ea3, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %rdi	 RIP: 400ea7	 Bytes: 4
  %loadMem_400ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ea7 = call %struct.Memory* @routine_movq_0x8__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ea7)
  store %struct.Memory* %call_400ea7, %struct.Memory** %MEMORY

  ; Code: callq .atoi_plt	 RIP: 400eab	 Bytes: 5
  %loadMem1_400eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400eab = call %struct.Memory* @routine_callq_.atoi_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400eab, i64 -2027, i64 5, i64 5)
  store %struct.Memory* %call1_400eab, %struct.Memory** %MEMORY

  %loadMem2_400eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400eab = load i64, i64* %3
  %call2_400eab = call %struct.Memory* @ext_atoi(%struct.State* %0, i64  %loadPC_400eab, %struct.Memory* %loadMem2_400eab)
  store %struct.Memory* %call2_400eab, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0x61a080	 RIP: 400eb0	 Bytes: 7
  %loadMem_400eb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400eb0 = call %struct.Memory* @routine_movl__eax__0x61a080(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400eb0)
  store %struct.Memory* %call_400eb0, %struct.Memory** %MEMORY

  ; Code: .L_400eb7:	 RIP: 400eb7	 Bytes: 0
  br label %block_.L_400eb7
block_.L_400eb7:

  ; Code: cmpl $0x2, -0x18(%rbp)	 RIP: 400eb7	 Bytes: 4
  %loadMem_400eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400eb7 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400eb7)
  store %struct.Memory* %call_400eb7, %struct.Memory** %MEMORY

  ; Code: jle .L_400ed7	 RIP: 400ebb	 Bytes: 6
  %loadMem_400ebb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ebb = call %struct.Memory* @routine_jle_.L_400ed7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ebb, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_400ebb, %struct.Memory** %MEMORY

  %loadBr_400ebb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400ebb = icmp eq i8 %loadBr_400ebb, 1
  br i1 %cmpBr_400ebb, label %block_.L_400ed7, label %block_400ec1

block_400ec1:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 400ec1	 Bytes: 4
  %loadMem_400ec1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ec1 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ec1)
  store %struct.Memory* %call_400ec1, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rax), %rdi	 RIP: 400ec5	 Bytes: 4
  %loadMem_400ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ec5 = call %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ec5)
  store %struct.Memory* %call_400ec5, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 400ec9	 Bytes: 5
  %loadMem1_400ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400ec9 = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400ec9, i64 -2169, i64 5, i64 5)
  store %struct.Memory* %call1_400ec9, %struct.Memory** %MEMORY

  %loadMem2_400ec9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400ec9 = load i64, i64* %3
  %call2_400ec9 = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_400ec9, %struct.Memory* %loadMem2_400ec9)
  store %struct.Memory* %call2_400ec9, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, 0x61a088	 RIP: 400ece	 Bytes: 9
  %loadMem_400ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ece = call %struct.Memory* @routine_movsd__xmm0__0x61a088(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ece)
  store %struct.Memory* %call_400ece, %struct.Memory** %MEMORY

  ; Code: .L_400ed7:	 RIP: 400ed7	 Bytes: 0
  br label %block_.L_400ed7
block_.L_400ed7:

  ; Code: cmpl $0x3, -0x18(%rbp)	 RIP: 400ed7	 Bytes: 4
  %loadMem_400ed7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ed7 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x18__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ed7)
  store %struct.Memory* %call_400ed7, %struct.Memory** %MEMORY

  ; Code: jle .L_400ef3	 RIP: 400edb	 Bytes: 6
  %loadMem_400edb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400edb = call %struct.Memory* @routine_jle_.L_400ef3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400edb, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_400edb, %struct.Memory** %MEMORY

  %loadBr_400edb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_400edb = icmp eq i8 %loadBr_400edb, 1
  br i1 %cmpBr_400edb, label %block_.L_400ef3, label %block_400ee1

block_400ee1:
  ; Code: movq -0x20(%rbp), %rax	 RIP: 400ee1	 Bytes: 4
  %loadMem_400ee1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ee1 = call %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ee1)
  store %struct.Memory* %call_400ee1, %struct.Memory** %MEMORY

  ; Code: movq 0x18(%rax), %rdi	 RIP: 400ee5	 Bytes: 4
  %loadMem_400ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ee5 = call %struct.Memory* @routine_movq_0x18__rax____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ee5)
  store %struct.Memory* %call_400ee5, %struct.Memory** %MEMORY

  ; Code: callq .atof_plt	 RIP: 400ee9	 Bytes: 5
  %loadMem1_400ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400ee9 = call %struct.Memory* @routine_callq_.atof_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400ee9, i64 -2201, i64 5, i64 5)
  store %struct.Memory* %call1_400ee9, %struct.Memory** %MEMORY

  %loadMem2_400ee9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400ee9 = load i64, i64* %3
  %call2_400ee9 = call %struct.Memory* @ext_atof(%struct.State* %0, i64  %loadPC_400ee9, %struct.Memory* %loadMem2_400ee9)
  store %struct.Memory* %call2_400ee9, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0x28(%rbp)	 RIP: 400eee	 Bytes: 5
  %loadMem_400eee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400eee = call %struct.Memory* @routine_movsd__xmm0__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400eee)
  store %struct.Memory* %call_400eee, %struct.Memory** %MEMORY

  ; Code: .L_400ef3:	 RIP: 400ef3	 Bytes: 0
  br label %block_.L_400ef3
block_.L_400ef3:

  ; Code: movq $0x6317c0, %rdi	 RIP: 400ef3	 Bytes: 10
  %loadMem_400ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ef3 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ef3)
  store %struct.Memory* %call_400ef3, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 400efd	 Bytes: 5
  %loadMem_400efd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400efd = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400efd)
  store %struct.Memory* %call_400efd, %struct.Memory** %MEMORY

  ; Code: movq $0x414616, %rcx	 RIP: 400f02	 Bytes: 10
  %loadMem_400f02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f02 = call %struct.Memory* @routine_movq__0x414616___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f02)
  store %struct.Memory* %call_400f02, %struct.Memory** %MEMORY

  ; Code: cvttsd2si 0x219174(%rip), %eax	 RIP: 400f0c	 Bytes: 8
  %loadMem_400f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f0c = call %struct.Memory* @routine_cvttsd2si_0x219174__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f0c)
  store %struct.Memory* %call_400f0c, %struct.Memory** %MEMORY

  ; Code: movl $0x66a200, %edx	 RIP: 400f14	 Bytes: 5
  %loadMem_400f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f14 = call %struct.Memory* @routine_movl__0x66a200___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f14)
  store %struct.Memory* %call_400f14, %struct.Memory** %MEMORY

  ; Code: movl %edx, %r8d	 RIP: 400f19	 Bytes: 3
  %loadMem_400f19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f19 = call %struct.Memory* @routine_movl__edx___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f19)
  store %struct.Memory* %call_400f19, %struct.Memory** %MEMORY

  ; Code: movb %al, %r9b	 RIP: 400f1c	 Bytes: 3
  %loadMem_400f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f1c = call %struct.Memory* @routine_movb__al___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f1c)
  store %struct.Memory* %call_400f1c, %struct.Memory** %MEMORY

  ; Code: movsbl %r9b, %edx	 RIP: 400f1f	 Bytes: 4
  %loadMem_400f1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f1f = call %struct.Memory* @routine_movsbl__r9b___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f1f)
  store %struct.Memory* %call_400f1f, %struct.Memory** %MEMORY

  ; Code: movl $0x66c140, %eax	 RIP: 400f23	 Bytes: 5
  %loadMem_400f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f23 = call %struct.Memory* @routine_movl__0x66c140___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f23)
  store %struct.Memory* %call_400f23, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r10d	 RIP: 400f28	 Bytes: 3
  %loadMem_400f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f28 = call %struct.Memory* @routine_movl__eax___r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f28)
  store %struct.Memory* %call_400f28, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0xd8(%rbp)	 RIP: 400f2b	 Bytes: 7
  %loadMem_400f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f2b = call %struct.Memory* @routine_movq__rdi__MINUS0xd8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f2b)
  store %struct.Memory* %call_400f2b, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rdi	 RIP: 400f32	 Bytes: 3
  %loadMem_400f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f32 = call %struct.Memory* @routine_movq__r8___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f32)
  store %struct.Memory* %call_400f32, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0xdc(%rbp)	 RIP: 400f35	 Bytes: 6
  %loadMem_400f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f35 = call %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f35)
  store %struct.Memory* %call_400f35, %struct.Memory** %MEMORY

  ; Code: movq %r10, %rsi	 RIP: 400f3b	 Bytes: 3
  %loadMem_400f3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f3b = call %struct.Memory* @routine_movq__r10___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f3b)
  store %struct.Memory* %call_400f3b, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xe8(%rbp)	 RIP: 400f3e	 Bytes: 7
  %loadMem_400f3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f3e = call %struct.Memory* @routine_movq__rcx__MINUS0xe8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f3e)
  store %struct.Memory* %call_400f3e, %struct.Memory** %MEMORY

  ; Code: movq %r8, -0xf0(%rbp)	 RIP: 400f45	 Bytes: 7
  %loadMem_400f45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f45 = call %struct.Memory* @routine_movq__r8__MINUS0xf0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f45)
  store %struct.Memory* %call_400f45, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPaaEvT_S1_T0_	 RIP: 400f4c	 Bytes: 5
  %loadMem1_400f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400f4c = call %struct.Memory* @routine_callq_._Z4fillIPaaEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400f4c, i64 8260, i64 5, i64 5)
  store %struct.Memory* %call1_400f4c, %struct.Memory** %MEMORY

  %loadMem2_400f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400f4c = load i64, i64* %3
  %call2_400f4c = call %struct.Memory* @sub_402f90._Z4fillIPaaEvT_S1_T0_(%struct.State* %0, i64  %loadPC_400f4c, %struct.Memory* %loadMem2_400f4c)
  store %struct.Memory* %call2_400f4c, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %eax	 RIP: 400f51	 Bytes: 5
  %loadMem_400f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f51 = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f51)
  store %struct.Memory* %call_400f51, %struct.Memory** %MEMORY

  ; Code: movb %al, %r9b	 RIP: 400f56	 Bytes: 3
  %loadMem_400f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f56 = call %struct.Memory* @routine_movb__al___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f56)
  store %struct.Memory* %call_400f56, %struct.Memory** %MEMORY

  ; Code: movb %r9b, -0x29(%rbp)	 RIP: 400f59	 Bytes: 4
  %loadMem_400f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f59 = call %struct.Memory* @routine_movb__r9b__MINUS0x29__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f59)
  store %struct.Memory* %call_400f59, %struct.Memory** %MEMORY

  ; Code: movb -0x29(%rbp), %r9b	 RIP: 400f5d	 Bytes: 4
  %loadMem_400f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f5d = call %struct.Memory* @routine_movb_MINUS0x29__rbp____r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f5d)
  store %struct.Memory* %call_400f5d, %struct.Memory** %MEMORY

  ; Code: addb %r9b, %r9b	 RIP: 400f61	 Bytes: 3
  %loadMem_400f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f61 = call %struct.Memory* @routine_addb__r9b___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f61)
  store %struct.Memory* %call_400f61, %struct.Memory** %MEMORY

  ; Code: movb %r9b, -0x2a(%rbp)	 RIP: 400f64	 Bytes: 4
  %loadMem_400f64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f64 = call %struct.Memory* @routine_movb__r9b__MINUS0x2a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f64)
  store %struct.Memory* %call_400f64, %struct.Memory** %MEMORY

  ; Code: movzbl -0x29(%rbp), %eax	 RIP: 400f68	 Bytes: 4
  %loadMem_400f68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f68 = call %struct.Memory* @routine_movzbl_MINUS0x29__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f68)
  store %struct.Memory* %call_400f68, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 400f6c	 Bytes: 3
  %loadMem_400f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f6c = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f6c)
  store %struct.Memory* %call_400f6c, %struct.Memory** %MEMORY

  ; Code: movb %al, %r9b	 RIP: 400f6f	 Bytes: 3
  %loadMem_400f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f6f = call %struct.Memory* @routine_movb__al___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f6f)
  store %struct.Memory* %call_400f6f, %struct.Memory** %MEMORY

  ; Code: movb %r9b, -0x2b(%rbp)	 RIP: 400f72	 Bytes: 4
  %loadMem_400f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f72 = call %struct.Memory* @routine_movb__r9b__MINUS0x2b__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f72)
  store %struct.Memory* %call_400f72, %struct.Memory** %MEMORY

  ; Code: movzbl -0x29(%rbp), %eax	 RIP: 400f76	 Bytes: 4
  %loadMem_400f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f76 = call %struct.Memory* @routine_movzbl_MINUS0x29__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f76)
  store %struct.Memory* %call_400f76, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %edx	 RIP: 400f7a	 Bytes: 4
  %loadMem_400f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f7a = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f7a)
  store %struct.Memory* %call_400f7a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r11d	 RIP: 400f7e	 Bytes: 5
  %loadMem_400f7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f7e = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f7e)
  store %struct.Memory* %call_400f7e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf4(%rbp)	 RIP: 400f83	 Bytes: 6
  %loadMem_400f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f83 = call %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f83)
  store %struct.Memory* %call_400f83, %struct.Memory** %MEMORY

  ; Code: movl %edx, %eax	 RIP: 400f89	 Bytes: 2
  %loadMem_400f89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f89 = call %struct.Memory* @routine_movl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f89)
  store %struct.Memory* %call_400f89, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 400f8b	 Bytes: 1
  %loadMem_400f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f8b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f8b)
  store %struct.Memory* %call_400f8b, %struct.Memory** %MEMORY

  ; Code: idivl %r11d	 RIP: 400f8c	 Bytes: 3
  %loadMem_400f8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f8c = call %struct.Memory* @routine_idivl__r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f8c)
  store %struct.Memory* %call_400f8c, %struct.Memory** %MEMORY

  ; Code: movl -0xf4(%rbp), %edx	 RIP: 400f8f	 Bytes: 6
  %loadMem_400f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f8f = call %struct.Memory* @routine_movl_MINUS0xf4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f8f)
  store %struct.Memory* %call_400f8f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edx	 RIP: 400f95	 Bytes: 2
  %loadMem_400f95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f95 = call %struct.Memory* @routine_addl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f95)
  store %struct.Memory* %call_400f95, %struct.Memory** %MEMORY

  ; Code: movb %dl, %r9b	 RIP: 400f97	 Bytes: 3
  %loadMem_400f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f97 = call %struct.Memory* @routine_movb__dl___r9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f97)
  store %struct.Memory* %call_400f97, %struct.Memory** %MEMORY

  ; Code: movb %r9b, -0x2c(%rbp)	 RIP: 400f9a	 Bytes: 4
  %loadMem_400f9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f9a = call %struct.Memory* @routine_movb__r9b__MINUS0x2c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f9a)
  store %struct.Memory* %call_400f9a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 400f9e	 Bytes: 4
  %loadMem_400f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400f9e = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400f9e)
  store %struct.Memory* %call_400f9e, %struct.Memory** %MEMORY

  ; Code: movl $0x413fdb, %eax	 RIP: 400fa2	 Bytes: 5
  %loadMem_400fa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fa2 = call %struct.Memory* @routine_movl__0x413fdb___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fa2)
  store %struct.Memory* %call_400fa2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 400fa7	 Bytes: 2
  %loadMem_400fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fa7 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fa7)
  store %struct.Memory* %call_400fa7, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %eax	 RIP: 400fa9	 Bytes: 5
  %loadMem_400fa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fa9 = call %struct.Memory* @routine_movl__0x1f40___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fa9)
  store %struct.Memory* %call_400fa9, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 400fae	 Bytes: 7
  %loadMem_400fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fae = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fae)
  store %struct.Memory* %call_400fae, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 400fb5	 Bytes: 2
  %loadMem_400fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fb5 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fb5)
  store %struct.Memory* %call_400fb5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xf8(%rbp)	 RIP: 400fb7	 Bytes: 6
  %loadMem_400fb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fb7 = call %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fb7)
  store %struct.Memory* %call_400fb7, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc	 RIP: 400fbd	 Bytes: 5
  %loadMem1_400fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400fbd = call %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400fbd, i64 8211, i64 5, i64 5)
  store %struct.Memory* %call1_400fbd, %struct.Memory** %MEMORY

  %loadMem2_400fbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400fbd = load i64, i64* %3
  %call2_400fbd = call %struct.Memory* @sub_402fd0._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_400fbd, %struct.Memory* %loadMem2_400fbd)
  store %struct.Memory* %call2_400fbd, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 400fc2	 Bytes: 4
  %loadMem_400fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fc2 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fc2)
  store %struct.Memory* %call_400fc2, %struct.Memory** %MEMORY

  ; Code: movl $0x413ff0, %eax	 RIP: 400fc6	 Bytes: 5
  %loadMem_400fc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fc6 = call %struct.Memory* @routine_movl__0x413ff0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fc6)
  store %struct.Memory* %call_400fc6, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 400fcb	 Bytes: 2
  %loadMem_400fcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fcb = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fcb)
  store %struct.Memory* %call_400fcb, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 400fcd	 Bytes: 7
  %loadMem_400fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fcd = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fcd)
  store %struct.Memory* %call_400fcd, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 400fd4	 Bytes: 6
  %loadMem_400fd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fd4 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fd4)
  store %struct.Memory* %call_400fd4, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc	 RIP: 400fda	 Bytes: 5
  %loadMem1_400fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_400fda = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_400fda, i64 8358, i64 5, i64 5)
  store %struct.Memory* %call1_400fda, %struct.Memory** %MEMORY

  %loadMem2_400fda = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_400fda = load i64, i64* %3
  %call2_400fda = call %struct.Memory* @sub_403080._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_400fda, %struct.Memory* %loadMem2_400fda)
  store %struct.Memory* %call2_400fda, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 400fdf	 Bytes: 5
  %loadMem_400fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fdf = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fdf)
  store %struct.Memory* %call_400fdf, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 400fe4	 Bytes: 5
  %loadMem_400fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fe4 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fe4)
  store %struct.Memory* %call_400fe4, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 400fe9	 Bytes: 4
  %loadMem_400fe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fe9 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fe9)
  store %struct.Memory* %call_400fe9, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 400fed	 Bytes: 4
  %loadMem_400fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400fed = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400fed)
  store %struct.Memory* %call_400fed, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 400ff1	 Bytes: 3
  %loadMem_400ff1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ff1 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ff1)
  store %struct.Memory* %call_400ff1, %struct.Memory** %MEMORY

  ; Code: movq $0x41400d, (%rdi)	 RIP: 400ff4	 Bytes: 7
  %loadMem_400ff4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ff4 = call %struct.Memory* @routine_movq__0x41400d____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ff4)
  store %struct.Memory* %call_400ff4, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 400ffb	 Bytes: 7
  %loadMem_400ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_400ffb = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_400ffb)
  store %struct.Memory* %call_400ffb, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401002	 Bytes: 6
  %loadMem_401002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401002 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401002)
  store %struct.Memory* %call_401002, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401008	 Bytes: 5
  %loadMem1_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401008 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401008, i64 8504, i64 5, i64 5)
  store %struct.Memory* %call1_401008, %struct.Memory** %MEMORY

  %loadMem2_401008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401008 = load i64, i64* %3
  %call2_401008 = call %struct.Memory* @sub_403140._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401008, %struct.Memory* %loadMem2_401008)
  store %struct.Memory* %call2_401008, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 40100d	 Bytes: 4
  %loadMem_40100d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40100d = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40100d)
  store %struct.Memory* %call_40100d, %struct.Memory** %MEMORY

  ; Code: movl $0x41402c, %eax	 RIP: 401011	 Bytes: 5
  %loadMem_401011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401011 = call %struct.Memory* @routine_movl__0x41402c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401011)
  store %struct.Memory* %call_401011, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401016	 Bytes: 2
  %loadMem_401016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401016 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401016)
  store %struct.Memory* %call_401016, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401018	 Bytes: 7
  %loadMem_401018 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401018 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401018)
  store %struct.Memory* %call_401018, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40101f	 Bytes: 6
  %loadMem_40101f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40101f = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40101f)
  store %struct.Memory* %call_40101f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc	 RIP: 401025	 Bytes: 5
  %loadMem1_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401025 = call %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401025, i64 8747, i64 5, i64 5)
  store %struct.Memory* %call1_401025, %struct.Memory** %MEMORY

  %loadMem2_401025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401025 = load i64, i64* %3
  %call2_401025 = call %struct.Memory* @sub_403250._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401025, %struct.Memory* %loadMem2_401025)
  store %struct.Memory* %call2_401025, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 40102a	 Bytes: 5
  %loadMem_40102a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40102a = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40102a)
  store %struct.Memory* %call_40102a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 40102f	 Bytes: 5
  %loadMem_40102f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40102f = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40102f)
  store %struct.Memory* %call_40102f, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 401034	 Bytes: 4
  %loadMem_401034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401034 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401034)
  store %struct.Memory* %call_401034, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401038	 Bytes: 4
  %loadMem_401038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401038 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401038)
  store %struct.Memory* %call_401038, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40103c	 Bytes: 3
  %loadMem_40103c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40103c = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40103c)
  store %struct.Memory* %call_40103c, %struct.Memory** %MEMORY

  ; Code: movq $0x414046, (%rdi)	 RIP: 40103f	 Bytes: 7
  %loadMem_40103f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40103f = call %struct.Memory* @routine_movq__0x414046____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40103f)
  store %struct.Memory* %call_40103f, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401046	 Bytes: 7
  %loadMem_401046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401046 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401046)
  store %struct.Memory* %call_401046, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40104d	 Bytes: 6
  %loadMem_40104d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40104d = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40104d)
  store %struct.Memory* %call_40104d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401053	 Bytes: 5
  %loadMem1_401053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401053 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401053, i64 8877, i64 5, i64 5)
  store %struct.Memory* %call1_401053, %struct.Memory** %MEMORY

  %loadMem2_401053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401053 = load i64, i64* %3
  %call2_401053 = call %struct.Memory* @sub_403300._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401053, %struct.Memory* %loadMem2_401053)
  store %struct.Memory* %call2_401053, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401058	 Bytes: 4
  %loadMem_401058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401058 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401058)
  store %struct.Memory* %call_401058, %struct.Memory** %MEMORY

  ; Code: movl $0x41406a, %eax	 RIP: 40105c	 Bytes: 5
  %loadMem_40105c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40105c = call %struct.Memory* @routine_movl__0x41406a___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40105c)
  store %struct.Memory* %call_40105c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401061	 Bytes: 2
  %loadMem_401061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401061 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401061)
  store %struct.Memory* %call_401061, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401063	 Bytes: 7
  %loadMem_401063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401063 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401063)
  store %struct.Memory* %call_401063, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40106a	 Bytes: 6
  %loadMem_40106a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40106a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40106a)
  store %struct.Memory* %call_40106a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc	 RIP: 401070	 Bytes: 5
  %loadMem1_401070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401070 = call %struct.Memory* @routine_callq_._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401070, i64 9120, i64 5, i64 5)
  store %struct.Memory* %call1_401070, %struct.Memory** %MEMORY

  %loadMem2_401070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401070 = load i64, i64* %3
  %call2_401070 = call %struct.Memory* @sub_403410._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401070, %struct.Memory* %loadMem2_401070)
  store %struct.Memory* %call2_401070, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 401075	 Bytes: 5
  %loadMem_401075 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401075 = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401075)
  store %struct.Memory* %call_401075, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 40107a	 Bytes: 5
  %loadMem_40107a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40107a = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40107a)
  store %struct.Memory* %call_40107a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 40107f	 Bytes: 4
  %loadMem_40107f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40107f = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40107f)
  store %struct.Memory* %call_40107f, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401083	 Bytes: 4
  %loadMem_401083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401083 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401083)
  store %struct.Memory* %call_401083, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401087	 Bytes: 3
  %loadMem_401087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401087 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401087)
  store %struct.Memory* %call_401087, %struct.Memory** %MEMORY

  ; Code: movq $0x414084, (%rdi)	 RIP: 40108a	 Bytes: 7
  %loadMem_40108a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40108a = call %struct.Memory* @routine_movq__0x414084____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40108a)
  store %struct.Memory* %call_40108a, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401091	 Bytes: 7
  %loadMem_401091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401091 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401091)
  store %struct.Memory* %call_401091, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401098	 Bytes: 6
  %loadMem_401098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401098 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401098)
  store %struct.Memory* %call_401098, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40109e	 Bytes: 5
  %loadMem1_40109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40109e = call %struct.Memory* @routine_callq_._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40109e, i64 9250, i64 5, i64 5)
  store %struct.Memory* %call1_40109e, %struct.Memory** %MEMORY

  %loadMem2_40109e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40109e = load i64, i64* %3
  %call2_40109e = call %struct.Memory* @sub_4034c0._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40109e, %struct.Memory* %loadMem2_40109e)
  store %struct.Memory* %call2_40109e, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 4010a3	 Bytes: 5
  %loadMem_4010a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010a3 = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010a3)
  store %struct.Memory* %call_4010a3, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 4010a8	 Bytes: 5
  %loadMem_4010a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010a8 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010a8)
  store %struct.Memory* %call_4010a8, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 4010ad	 Bytes: 4
  %loadMem_4010ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010ad = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010ad)
  store %struct.Memory* %call_4010ad, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4010b1	 Bytes: 4
  %loadMem_4010b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010b1 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010b1)
  store %struct.Memory* %call_4010b1, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4010b5	 Bytes: 3
  %loadMem_4010b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010b5 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010b5)
  store %struct.Memory* %call_4010b5, %struct.Memory** %MEMORY

  ; Code: movq $0x4140a9, (%rdi)	 RIP: 4010b8	 Bytes: 7
  %loadMem_4010b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010b8 = call %struct.Memory* @routine_movq__0x4140a9____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010b8)
  store %struct.Memory* %call_4010b8, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 4010bf	 Bytes: 7
  %loadMem_4010bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010bf = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010bf)
  store %struct.Memory* %call_4010bf, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4010c6	 Bytes: 6
  %loadMem_4010c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010c6 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010c6)
  store %struct.Memory* %call_4010c6, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4010cc	 Bytes: 5
  %loadMem1_4010cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4010cc = call %struct.Memory* @routine_callq_._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4010cc, i64 9476, i64 5, i64 5)
  store %struct.Memory* %call1_4010cc, %struct.Memory** %MEMORY

  %loadMem2_4010cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010cc = load i64, i64* %3
  %call2_4010cc = call %struct.Memory* @sub_4035d0._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4010cc, %struct.Memory* %loadMem2_4010cc)
  store %struct.Memory* %call2_4010cc, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4010d1	 Bytes: 4
  %loadMem_4010d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010d1 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010d1)
  store %struct.Memory* %call_4010d1, %struct.Memory** %MEMORY

  ; Code: movl $0x4140cf, %eax	 RIP: 4010d5	 Bytes: 5
  %loadMem_4010d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010d5 = call %struct.Memory* @routine_movl__0x4140cf___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010d5)
  store %struct.Memory* %call_4010d5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4010da	 Bytes: 2
  %loadMem_4010da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010da = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010da)
  store %struct.Memory* %call_4010da, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 4010dc	 Bytes: 7
  %loadMem_4010dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010dc = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010dc)
  store %struct.Memory* %call_4010dc, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4010e3	 Bytes: 6
  %loadMem_4010e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010e3 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010e3)
  store %struct.Memory* %call_4010e3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc	 RIP: 4010e9	 Bytes: 5
  %loadMem1_4010e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4010e9 = call %struct.Memory* @routine_callq_._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4010e9, i64 9719, i64 5, i64 5)
  store %struct.Memory* %call1_4010e9, %struct.Memory** %MEMORY

  %loadMem2_4010e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4010e9 = load i64, i64* %3
  %call2_4010e9 = call %struct.Memory* @sub_4036e0._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4010e9, %struct.Memory* %loadMem2_4010e9)
  store %struct.Memory* %call2_4010e9, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 4010ee	 Bytes: 5
  %loadMem_4010ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010ee = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010ee)
  store %struct.Memory* %call_4010ee, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 4010f3	 Bytes: 5
  %loadMem_4010f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010f3 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010f3)
  store %struct.Memory* %call_4010f3, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 4010f8	 Bytes: 4
  %loadMem_4010f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010f8 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010f8)
  store %struct.Memory* %call_4010f8, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4010fc	 Bytes: 4
  %loadMem_4010fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4010fc = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4010fc)
  store %struct.Memory* %call_4010fc, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401100	 Bytes: 3
  %loadMem_401100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401100 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401100)
  store %struct.Memory* %call_401100, %struct.Memory** %MEMORY

  ; Code: movq $0x4140e7, (%rdi)	 RIP: 401103	 Bytes: 7
  %loadMem_401103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401103 = call %struct.Memory* @routine_movq__0x4140e7____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401103)
  store %struct.Memory* %call_401103, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 40110a	 Bytes: 7
  %loadMem_40110a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40110a = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40110a)
  store %struct.Memory* %call_40110a, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401111	 Bytes: 6
  %loadMem_401111 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401111 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401111)
  store %struct.Memory* %call_401111, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401117	 Bytes: 5
  %loadMem1_401117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401117 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401117, i64 9849, i64 5, i64 5)
  store %struct.Memory* %call1_401117, %struct.Memory** %MEMORY

  %loadMem2_401117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401117 = load i64, i64* %3
  %call2_401117 = call %struct.Memory* @sub_403790._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401117, %struct.Memory* %loadMem2_401117)
  store %struct.Memory* %call2_401117, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 40111c	 Bytes: 5
  %loadMem_40111c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40111c = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40111c)
  store %struct.Memory* %call_40111c, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 401121	 Bytes: 5
  %loadMem_401121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401121 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401121)
  store %struct.Memory* %call_401121, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 401126	 Bytes: 4
  %loadMem_401126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401126 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401126)
  store %struct.Memory* %call_401126, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 40112a	 Bytes: 4
  %loadMem_40112a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40112a = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40112a)
  store %struct.Memory* %call_40112a, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40112e	 Bytes: 3
  %loadMem_40112e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40112e = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40112e)
  store %struct.Memory* %call_40112e, %struct.Memory** %MEMORY

  ; Code: movq $0x414109, (%rdi)	 RIP: 401131	 Bytes: 7
  %loadMem_401131 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401131 = call %struct.Memory* @routine_movq__0x414109____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401131)
  store %struct.Memory* %call_401131, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401138	 Bytes: 7
  %loadMem_401138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401138 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401138)
  store %struct.Memory* %call_401138, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40113f	 Bytes: 6
  %loadMem_40113f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40113f = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40113f)
  store %struct.Memory* %call_40113f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401145	 Bytes: 5
  %loadMem1_401145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401145 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401145, i64 10075, i64 5, i64 5)
  store %struct.Memory* %call1_401145, %struct.Memory** %MEMORY

  %loadMem2_401145 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401145 = load i64, i64* %3
  %call2_401145 = call %struct.Memory* @sub_4038a0._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401145, %struct.Memory* %loadMem2_401145)
  store %struct.Memory* %call2_401145, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 40114a	 Bytes: 5
  %loadMem_40114a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40114a = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40114a)
  store %struct.Memory* %call_40114a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 40114f	 Bytes: 5
  %loadMem_40114f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40114f = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40114f)
  store %struct.Memory* %call_40114f, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 401154	 Bytes: 4
  %loadMem_401154 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401154 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401154)
  store %struct.Memory* %call_401154, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401158	 Bytes: 4
  %loadMem_401158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401158 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401158)
  store %struct.Memory* %call_401158, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40115c	 Bytes: 3
  %loadMem_40115c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40115c = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40115c)
  store %struct.Memory* %call_40115c, %struct.Memory** %MEMORY

  ; Code: movq $0x41412c, (%rdi)	 RIP: 40115f	 Bytes: 7
  %loadMem_40115f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40115f = call %struct.Memory* @routine_movq__0x41412c____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40115f)
  store %struct.Memory* %call_40115f, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401166	 Bytes: 7
  %loadMem_401166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401166 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401166)
  store %struct.Memory* %call_401166, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40116d	 Bytes: 6
  %loadMem_40116d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40116d = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40116d)
  store %struct.Memory* %call_40116d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401173	 Bytes: 5
  %loadMem1_401173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401173 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401173, i64 10301, i64 5, i64 5)
  store %struct.Memory* %call1_401173, %struct.Memory** %MEMORY

  %loadMem2_401173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401173 = load i64, i64* %3
  %call2_401173 = call %struct.Memory* @sub_4039b0._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401173, %struct.Memory* %loadMem2_401173)
  store %struct.Memory* %call2_401173, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401178	 Bytes: 4
  %loadMem_401178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401178 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401178)
  store %struct.Memory* %call_401178, %struct.Memory** %MEMORY

  ; Code: movl $0x41414c, %eax	 RIP: 40117c	 Bytes: 5
  %loadMem_40117c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40117c = call %struct.Memory* @routine_movl__0x41414c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40117c)
  store %struct.Memory* %call_40117c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401181	 Bytes: 2
  %loadMem_401181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401181 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401181)
  store %struct.Memory* %call_401181, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401183	 Bytes: 7
  %loadMem_401183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401183 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401183)
  store %struct.Memory* %call_401183, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40118a	 Bytes: 6
  %loadMem_40118a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40118a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40118a)
  store %struct.Memory* %call_40118a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc	 RIP: 401190	 Bytes: 5
  %loadMem1_401190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401190 = call %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401190, i64 10544, i64 5, i64 5)
  store %struct.Memory* %call1_401190, %struct.Memory** %MEMORY

  %loadMem2_401190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401190 = load i64, i64* %3
  %call2_401190 = call %struct.Memory* @sub_403ac0._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401190, %struct.Memory* %loadMem2_401190)
  store %struct.Memory* %call2_401190, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 401195	 Bytes: 5
  %loadMem_401195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401195 = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401195)
  store %struct.Memory* %call_401195, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 40119a	 Bytes: 5
  %loadMem_40119a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40119a = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40119a)
  store %struct.Memory* %call_40119a, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 40119f	 Bytes: 4
  %loadMem_40119f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40119f = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40119f)
  store %struct.Memory* %call_40119f, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4011a3	 Bytes: 4
  %loadMem_4011a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011a3 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011a3)
  store %struct.Memory* %call_4011a3, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4011a7	 Bytes: 3
  %loadMem_4011a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011a7 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011a7)
  store %struct.Memory* %call_4011a7, %struct.Memory** %MEMORY

  ; Code: movq $0x414161, (%rdi)	 RIP: 4011aa	 Bytes: 7
  %loadMem_4011aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011aa = call %struct.Memory* @routine_movq__0x414161____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011aa)
  store %struct.Memory* %call_4011aa, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 4011b1	 Bytes: 7
  %loadMem_4011b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011b1 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011b1)
  store %struct.Memory* %call_4011b1, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4011b8	 Bytes: 6
  %loadMem_4011b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011b8 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011b8)
  store %struct.Memory* %call_4011b8, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4011be	 Bytes: 5
  %loadMem1_4011be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4011be = call %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4011be, i64 10674, i64 5, i64 5)
  store %struct.Memory* %call1_4011be, %struct.Memory** %MEMORY

  %loadMem2_4011be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011be = load i64, i64* %3
  %call2_4011be = call %struct.Memory* @sub_403b70._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4011be, %struct.Memory* %loadMem2_4011be)
  store %struct.Memory* %call2_4011be, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4011c3	 Bytes: 4
  %loadMem_4011c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011c3 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011c3)
  store %struct.Memory* %call_4011c3, %struct.Memory** %MEMORY

  ; Code: movl $0x41417f, %eax	 RIP: 4011c7	 Bytes: 5
  %loadMem_4011c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011c7 = call %struct.Memory* @routine_movl__0x41417f___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011c7)
  store %struct.Memory* %call_4011c7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4011cc	 Bytes: 2
  %loadMem_4011cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011cc = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011cc)
  store %struct.Memory* %call_4011cc, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 4011ce	 Bytes: 7
  %loadMem_4011ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011ce = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011ce)
  store %struct.Memory* %call_4011ce, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4011d5	 Bytes: 6
  %loadMem_4011d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011d5 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011d5)
  store %struct.Memory* %call_4011d5, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc	 RIP: 4011db	 Bytes: 5
  %loadMem1_4011db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4011db = call %struct.Memory* @routine_callq_._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4011db, i64 10917, i64 5, i64 5)
  store %struct.Memory* %call1_4011db, %struct.Memory** %MEMORY

  %loadMem2_4011db = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4011db = load i64, i64* %3
  %call2_4011db = call %struct.Memory* @sub_403c80._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4011db, %struct.Memory* %loadMem2_4011db)
  store %struct.Memory* %call2_4011db, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 4011e0	 Bytes: 5
  %loadMem_4011e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011e0 = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011e0)
  store %struct.Memory* %call_4011e0, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 4011e5	 Bytes: 5
  %loadMem_4011e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011e5 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011e5)
  store %struct.Memory* %call_4011e5, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 4011ea	 Bytes: 4
  %loadMem_4011ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011ea = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011ea)
  store %struct.Memory* %call_4011ea, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 4011ee	 Bytes: 4
  %loadMem_4011ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011ee = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011ee)
  store %struct.Memory* %call_4011ee, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4011f2	 Bytes: 3
  %loadMem_4011f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011f2 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011f2)
  store %struct.Memory* %call_4011f2, %struct.Memory** %MEMORY

  ; Code: movq $0x414193, (%rdi)	 RIP: 4011f5	 Bytes: 7
  %loadMem_4011f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011f5 = call %struct.Memory* @routine_movq__0x414193____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011f5)
  store %struct.Memory* %call_4011f5, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 4011fc	 Bytes: 7
  %loadMem_4011fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4011fc = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4011fc)
  store %struct.Memory* %call_4011fc, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401203	 Bytes: 6
  %loadMem_401203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401203 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401203)
  store %struct.Memory* %call_401203, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401209	 Bytes: 5
  %loadMem1_401209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401209 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401209, i64 11047, i64 5, i64 5)
  store %struct.Memory* %call1_401209, %struct.Memory** %MEMORY

  %loadMem2_401209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401209 = load i64, i64* %3
  %call2_401209 = call %struct.Memory* @sub_403d30._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401209, %struct.Memory* %loadMem2_401209)
  store %struct.Memory* %call2_401209, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 40120e	 Bytes: 4
  %loadMem_40120e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40120e = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40120e)
  store %struct.Memory* %call_40120e, %struct.Memory** %MEMORY

  ; Code: movl $0x4141b0, %eax	 RIP: 401212	 Bytes: 5
  %loadMem_401212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401212 = call %struct.Memory* @routine_movl__0x4141b0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401212)
  store %struct.Memory* %call_401212, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401217	 Bytes: 2
  %loadMem_401217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401217 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401217)
  store %struct.Memory* %call_401217, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401219	 Bytes: 7
  %loadMem_401219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401219 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401219)
  store %struct.Memory* %call_401219, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401220	 Bytes: 6
  %loadMem_401220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401220 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401220)
  store %struct.Memory* %call_401220, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc	 RIP: 401226	 Bytes: 5
  %loadMem1_401226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401226 = call %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401226, i64 11290, i64 5, i64 5)
  store %struct.Memory* %call1_401226, %struct.Memory** %MEMORY

  %loadMem2_401226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401226 = load i64, i64* %3
  %call2_401226 = call %struct.Memory* @sub_403e40._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401226, %struct.Memory* %loadMem2_401226)
  store %struct.Memory* %call2_401226, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2c(%rbp), %r9d	 RIP: 40122b	 Bytes: 5
  %loadMem_40122b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40122b = call %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40122b)
  store %struct.Memory* %call_40122b, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2b(%rbp), %r8d	 RIP: 401230	 Bytes: 5
  %loadMem_401230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401230 = call %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401230)
  store %struct.Memory* %call_401230, %struct.Memory** %MEMORY

  ; Code: movsbl -0x2a(%rbp), %ecx	 RIP: 401235	 Bytes: 4
  %loadMem_401235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401235 = call %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401235)
  store %struct.Memory* %call_401235, %struct.Memory** %MEMORY

  ; Code: movsbl -0x29(%rbp), %edx	 RIP: 401239	 Bytes: 4
  %loadMem_401239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401239 = call %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401239)
  store %struct.Memory* %call_401239, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40123d	 Bytes: 3
  %loadMem_40123d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40123d = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40123d)
  store %struct.Memory* %call_40123d, %struct.Memory** %MEMORY

  ; Code: movq $0x4141c5, (%rdi)	 RIP: 401240	 Bytes: 7
  %loadMem_401240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401240 = call %struct.Memory* @routine_movq__0x4141c5____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401240)
  store %struct.Memory* %call_401240, %struct.Memory** %MEMORY

  ; Code: movq -0xf0(%rbp), %rdi	 RIP: 401247	 Bytes: 7
  %loadMem_401247 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401247 = call %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401247)
  store %struct.Memory* %call_401247, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40124e	 Bytes: 6
  %loadMem_40124e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40124e = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40124e)
  store %struct.Memory* %call_40124e, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401254	 Bytes: 5
  %loadMem1_401254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401254 = call %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401254, i64 11420, i64 5, i64 5)
  store %struct.Memory* %call1_401254, %struct.Memory** %MEMORY

  %loadMem2_401254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401254 = load i64, i64* %3
  %call2_401254 = call %struct.Memory* @sub_403ef0._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401254, %struct.Memory* %loadMem2_401254)
  store %struct.Memory* %call2_401254, %struct.Memory** %MEMORY

  ; Code: cvttsd2si 0x218e27(%rip), %eax	 RIP: 401259	 Bytes: 8
  %loadMem_401259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401259 = call %struct.Memory* @routine_cvttsd2si_0x218e27__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401259)
  store %struct.Memory* %call_401259, %struct.Memory** %MEMORY

  ; Code: movl $0x6682c0, %ecx	 RIP: 401261	 Bytes: 5
  %loadMem_401261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401261 = call %struct.Memory* @routine_movl__0x6682c0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401261)
  store %struct.Memory* %call_401261, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 401266	 Bytes: 2
  %loadMem_401266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401266 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401266)
  store %struct.Memory* %call_401266, %struct.Memory** %MEMORY

  ; Code: movb %al, %bl	 RIP: 401268	 Bytes: 2
  %loadMem_401268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401268 = call %struct.Memory* @routine_movb__al___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401268)
  store %struct.Memory* %call_401268, %struct.Memory** %MEMORY

  ; Code: movzbl %bl, %edx	 RIP: 40126a	 Bytes: 3
  %loadMem_40126a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40126a = call %struct.Memory* @routine_movzbl__bl___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40126a)
  store %struct.Memory* %call_40126a, %struct.Memory** %MEMORY

  ; Code: movl $0x66a200, %eax	 RIP: 40126d	 Bytes: 5
  %loadMem_40126d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40126d = call %struct.Memory* @routine_movl__0x66a200___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40126d)
  store %struct.Memory* %call_40126d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 401272	 Bytes: 2
  %loadMem_401272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401272 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401272)
  store %struct.Memory* %call_401272, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x100(%rbp)	 RIP: 401274	 Bytes: 7
  %loadMem_401274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401274 = call %struct.Memory* @routine_movq__rdi__MINUS0x100__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401274)
  store %struct.Memory* %call_401274, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPhhEvT_S1_T0_	 RIP: 40127b	 Bytes: 5
  %loadMem1_40127b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40127b = call %struct.Memory* @routine_callq_._Z4fillIPhhEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40127b, i64 11653, i64 5, i64 5)
  store %struct.Memory* %call1_40127b, %struct.Memory** %MEMORY

  %loadMem2_40127b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40127b = load i64, i64* %3
  %call2_40127b = call %struct.Memory* @sub_404000._Z4fillIPhhEvT_S1_T0_(%struct.State* %0, i64  %loadPC_40127b, %struct.Memory* %loadMem2_40127b)
  store %struct.Memory* %call2_40127b, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %eax	 RIP: 401280	 Bytes: 5
  %loadMem_401280 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401280 = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401280)
  store %struct.Memory* %call_401280, %struct.Memory** %MEMORY

  ; Code: movb %al, %bl	 RIP: 401285	 Bytes: 2
  %loadMem_401285 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401285 = call %struct.Memory* @routine_movb__al___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401285)
  store %struct.Memory* %call_401285, %struct.Memory** %MEMORY

  ; Code: movb %bl, -0x2d(%rbp)	 RIP: 401287	 Bytes: 3
  %loadMem_401287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401287 = call %struct.Memory* @routine_movb__bl__MINUS0x2d__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401287)
  store %struct.Memory* %call_401287, %struct.Memory** %MEMORY

  ; Code: movb -0x2d(%rbp), %bl	 RIP: 40128a	 Bytes: 3
  %loadMem_40128a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40128a = call %struct.Memory* @routine_movb_MINUS0x2d__rbp____bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40128a)
  store %struct.Memory* %call_40128a, %struct.Memory** %MEMORY

  ; Code: addb %bl, %bl	 RIP: 40128d	 Bytes: 2
  %loadMem_40128d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40128d = call %struct.Memory* @routine_addb__bl___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40128d)
  store %struct.Memory* %call_40128d, %struct.Memory** %MEMORY

  ; Code: movb %bl, -0x2e(%rbp)	 RIP: 40128f	 Bytes: 3
  %loadMem_40128f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40128f = call %struct.Memory* @routine_movb__bl__MINUS0x2e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40128f)
  store %struct.Memory* %call_40128f, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %eax	 RIP: 401292	 Bytes: 4
  %loadMem_401292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401292 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401292)
  store %struct.Memory* %call_401292, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 401296	 Bytes: 3
  %loadMem_401296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401296 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401296)
  store %struct.Memory* %call_401296, %struct.Memory** %MEMORY

  ; Code: movb %al, %bl	 RIP: 401299	 Bytes: 2
  %loadMem_401299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401299 = call %struct.Memory* @routine_movb__al___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401299)
  store %struct.Memory* %call_401299, %struct.Memory** %MEMORY

  ; Code: movb %bl, -0x2f(%rbp)	 RIP: 40129b	 Bytes: 3
  %loadMem_40129b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40129b = call %struct.Memory* @routine_movb__bl__MINUS0x2f__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40129b)
  store %struct.Memory* %call_40129b, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %eax	 RIP: 40129e	 Bytes: 4
  %loadMem_40129e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40129e = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40129e)
  store %struct.Memory* %call_40129e, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 4012a2	 Bytes: 4
  %loadMem_4012a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012a2 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012a2)
  store %struct.Memory* %call_4012a2, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %edx	 RIP: 4012a6	 Bytes: 4
  %loadMem_4012a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012a6 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012a6)
  store %struct.Memory* %call_4012a6, %struct.Memory** %MEMORY

  ; Code: xorl %r8d, %r8d	 RIP: 4012aa	 Bytes: 3
  %loadMem_4012aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012aa = call %struct.Memory* @routine_xorl__r8d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012aa)
  store %struct.Memory* %call_4012aa, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x104(%rbp)	 RIP: 4012ad	 Bytes: 6
  %loadMem_4012ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012ad = call %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012ad)
  store %struct.Memory* %call_4012ad, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4012b3	 Bytes: 2
  %loadMem_4012b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012b3 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012b3)
  store %struct.Memory* %call_4012b3, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x108(%rbp)	 RIP: 4012b5	 Bytes: 6
  %loadMem_4012b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012b5 = call %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012b5)
  store %struct.Memory* %call_4012b5, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %edx	 RIP: 4012bb	 Bytes: 3
  %loadMem_4012bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012bb = call %struct.Memory* @routine_movl__r8d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012bb)
  store %struct.Memory* %call_4012bb, %struct.Memory** %MEMORY

  ; Code: movl -0x108(%rbp), %ecx	 RIP: 4012be	 Bytes: 6
  %loadMem_4012be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012be = call %struct.Memory* @routine_movl_MINUS0x108__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012be)
  store %struct.Memory* %call_4012be, %struct.Memory** %MEMORY

  ; Code: divl %ecx	 RIP: 4012c4	 Bytes: 2
  %loadMem_4012c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012c4 = call %struct.Memory* @routine_divl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012c4)
  store %struct.Memory* %call_4012c4, %struct.Memory** %MEMORY

  ; Code: movl -0x104(%rbp), %ecx	 RIP: 4012c6	 Bytes: 6
  %loadMem_4012c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012c6 = call %struct.Memory* @routine_movl_MINUS0x104__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012c6)
  store %struct.Memory* %call_4012c6, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 4012cc	 Bytes: 2
  %loadMem_4012cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012cc = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012cc)
  store %struct.Memory* %call_4012cc, %struct.Memory** %MEMORY

  ; Code: movb %cl, %bl	 RIP: 4012ce	 Bytes: 2
  %loadMem_4012ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012ce = call %struct.Memory* @routine_movb__cl___bl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012ce)
  store %struct.Memory* %call_4012ce, %struct.Memory** %MEMORY

  ; Code: movb %bl, -0x30(%rbp)	 RIP: 4012d0	 Bytes: 3
  %loadMem_4012d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012d0 = call %struct.Memory* @routine_movb__bl__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012d0)
  store %struct.Memory* %call_4012d0, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4012d3	 Bytes: 4
  %loadMem_4012d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012d3 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012d3)
  store %struct.Memory* %call_4012d3, %struct.Memory** %MEMORY

  ; Code: movl $0x413fda, %eax	 RIP: 4012d7	 Bytes: 5
  %loadMem_4012d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012d7 = call %struct.Memory* @routine_movl__0x413fda___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012d7)
  store %struct.Memory* %call_4012d7, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4012dc	 Bytes: 2
  %loadMem_4012dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012dc = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012dc)
  store %struct.Memory* %call_4012dc, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 4012de	 Bytes: 7
  %loadMem_4012de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012de = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012de)
  store %struct.Memory* %call_4012de, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4012e5	 Bytes: 6
  %loadMem_4012e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012e5 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012e5)
  store %struct.Memory* %call_4012e5, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x10c(%rbp)	 RIP: 4012eb	 Bytes: 7
  %loadMem_4012eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012eb = call %struct.Memory* @routine_movl__r8d__MINUS0x10c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012eb)
  store %struct.Memory* %call_4012eb, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc	 RIP: 4012f2	 Bytes: 5
  %loadMem1_4012f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4012f2 = call %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4012f2, i64 11598, i64 5, i64 5)
  store %struct.Memory* %call1_4012f2, %struct.Memory** %MEMORY

  %loadMem2_4012f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4012f2 = load i64, i64* %3
  %call2_4012f2 = call %struct.Memory* @sub_404040._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4012f2, %struct.Memory* %loadMem2_4012f2)
  store %struct.Memory* %call2_4012f2, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4012f7	 Bytes: 4
  %loadMem_4012f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012f7 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012f7)
  store %struct.Memory* %call_4012f7, %struct.Memory** %MEMORY

  ; Code: movl $0x413fef, %eax	 RIP: 4012fb	 Bytes: 5
  %loadMem_4012fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4012fb = call %struct.Memory* @routine_movl__0x413fef___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4012fb)
  store %struct.Memory* %call_4012fb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401300	 Bytes: 2
  %loadMem_401300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401300 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401300)
  store %struct.Memory* %call_401300, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401302	 Bytes: 7
  %loadMem_401302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401302 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401302)
  store %struct.Memory* %call_401302, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401309	 Bytes: 6
  %loadMem_401309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401309 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401309)
  store %struct.Memory* %call_401309, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc	 RIP: 40130f	 Bytes: 5
  %loadMem1_40130f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40130f = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40130f, i64 11745, i64 5, i64 5)
  store %struct.Memory* %call1_40130f, %struct.Memory** %MEMORY

  %loadMem2_40130f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40130f = load i64, i64* %3
  %call2_40130f = call %struct.Memory* @sub_4040f0._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40130f, %struct.Memory* %loadMem2_40130f)
  store %struct.Memory* %call2_40130f, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 401314	 Bytes: 5
  %loadMem_401314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401314 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401314)
  store %struct.Memory* %call_401314, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401319	 Bytes: 5
  %loadMem_401319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401319 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401319)
  store %struct.Memory* %call_401319, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 40131e	 Bytes: 4
  %loadMem_40131e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40131e = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40131e)
  store %struct.Memory* %call_40131e, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401322	 Bytes: 4
  %loadMem_401322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401322 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401322)
  store %struct.Memory* %call_401322, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401326	 Bytes: 3
  %loadMem_401326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401326 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401326)
  store %struct.Memory* %call_401326, %struct.Memory** %MEMORY

  ; Code: movq $0x41400c, (%rdi)	 RIP: 401329	 Bytes: 7
  %loadMem_401329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401329 = call %struct.Memory* @routine_movq__0x41400c____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401329)
  store %struct.Memory* %call_401329, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401330	 Bytes: 7
  %loadMem_401330 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401330 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401330)
  store %struct.Memory* %call_401330, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401337	 Bytes: 6
  %loadMem_401337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401337 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401337)
  store %struct.Memory* %call_401337, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40133d	 Bytes: 5
  %loadMem1_40133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40133d = call %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40133d, i64 11891, i64 5, i64 5)
  store %struct.Memory* %call1_40133d, %struct.Memory** %MEMORY

  %loadMem2_40133d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40133d = load i64, i64* %3
  %call2_40133d = call %struct.Memory* @sub_4041b0._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40133d, %struct.Memory* %loadMem2_40133d)
  store %struct.Memory* %call2_40133d, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401342	 Bytes: 4
  %loadMem_401342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401342 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401342)
  store %struct.Memory* %call_401342, %struct.Memory** %MEMORY

  ; Code: movl $0x41402b, %eax	 RIP: 401346	 Bytes: 5
  %loadMem_401346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401346 = call %struct.Memory* @routine_movl__0x41402b___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401346)
  store %struct.Memory* %call_401346, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40134b	 Bytes: 2
  %loadMem_40134b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40134b = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40134b)
  store %struct.Memory* %call_40134b, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40134d	 Bytes: 7
  %loadMem_40134d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40134d = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40134d)
  store %struct.Memory* %call_40134d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401354	 Bytes: 6
  %loadMem_401354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401354 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401354)
  store %struct.Memory* %call_401354, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc	 RIP: 40135a	 Bytes: 5
  %loadMem1_40135a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40135a = call %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40135a, i64 12134, i64 5, i64 5)
  store %struct.Memory* %call1_40135a, %struct.Memory** %MEMORY

  %loadMem2_40135a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40135a = load i64, i64* %3
  %call2_40135a = call %struct.Memory* @sub_4042c0._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40135a, %struct.Memory* %loadMem2_40135a)
  store %struct.Memory* %call2_40135a, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 40135f	 Bytes: 5
  %loadMem_40135f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40135f = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40135f)
  store %struct.Memory* %call_40135f, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401364	 Bytes: 5
  %loadMem_401364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401364 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401364)
  store %struct.Memory* %call_401364, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 401369	 Bytes: 4
  %loadMem_401369 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401369 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401369)
  store %struct.Memory* %call_401369, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 40136d	 Bytes: 4
  %loadMem_40136d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40136d = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40136d)
  store %struct.Memory* %call_40136d, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401371	 Bytes: 3
  %loadMem_401371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401371 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401371)
  store %struct.Memory* %call_401371, %struct.Memory** %MEMORY

  ; Code: movq $0x414045, (%rdi)	 RIP: 401374	 Bytes: 7
  %loadMem_401374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401374 = call %struct.Memory* @routine_movq__0x414045____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401374)
  store %struct.Memory* %call_401374, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40137b	 Bytes: 7
  %loadMem_40137b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40137b = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40137b)
  store %struct.Memory* %call_40137b, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401382	 Bytes: 6
  %loadMem_401382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401382 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401382)
  store %struct.Memory* %call_401382, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401388	 Bytes: 5
  %loadMem1_401388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401388 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401388, i64 12264, i64 5, i64 5)
  store %struct.Memory* %call1_401388, %struct.Memory** %MEMORY

  %loadMem2_401388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401388 = load i64, i64* %3
  %call2_401388 = call %struct.Memory* @sub_404370._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401388, %struct.Memory* %loadMem2_401388)
  store %struct.Memory* %call2_401388, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 40138d	 Bytes: 4
  %loadMem_40138d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40138d = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40138d)
  store %struct.Memory* %call_40138d, %struct.Memory** %MEMORY

  ; Code: movl $0x414069, %eax	 RIP: 401391	 Bytes: 5
  %loadMem_401391 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401391 = call %struct.Memory* @routine_movl__0x414069___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401391)
  store %struct.Memory* %call_401391, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401396	 Bytes: 2
  %loadMem_401396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401396 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401396)
  store %struct.Memory* %call_401396, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401398	 Bytes: 7
  %loadMem_401398 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401398 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401398)
  store %struct.Memory* %call_401398, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40139f	 Bytes: 6
  %loadMem_40139f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40139f = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40139f)
  store %struct.Memory* %call_40139f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc	 RIP: 4013a5	 Bytes: 5
  %loadMem1_4013a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4013a5 = call %struct.Memory* @routine_callq_._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4013a5, i64 12507, i64 5, i64 5)
  store %struct.Memory* %call1_4013a5, %struct.Memory** %MEMORY

  %loadMem2_4013a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4013a5 = load i64, i64* %3
  %call2_4013a5 = call %struct.Memory* @sub_404480._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4013a5, %struct.Memory* %loadMem2_4013a5)
  store %struct.Memory* %call2_4013a5, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 4013aa	 Bytes: 5
  %loadMem_4013aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013aa = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013aa)
  store %struct.Memory* %call_4013aa, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 4013af	 Bytes: 5
  %loadMem_4013af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013af = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013af)
  store %struct.Memory* %call_4013af, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 4013b4	 Bytes: 4
  %loadMem_4013b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013b4 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013b4)
  store %struct.Memory* %call_4013b4, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4013b8	 Bytes: 4
  %loadMem_4013b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013b8 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013b8)
  store %struct.Memory* %call_4013b8, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4013bc	 Bytes: 3
  %loadMem_4013bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013bc = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013bc)
  store %struct.Memory* %call_4013bc, %struct.Memory** %MEMORY

  ; Code: movq $0x414083, (%rdi)	 RIP: 4013bf	 Bytes: 7
  %loadMem_4013bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013bf = call %struct.Memory* @routine_movq__0x414083____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013bf)
  store %struct.Memory* %call_4013bf, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 4013c6	 Bytes: 7
  %loadMem_4013c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013c6 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013c6)
  store %struct.Memory* %call_4013c6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4013cd	 Bytes: 6
  %loadMem_4013cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013cd = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013cd)
  store %struct.Memory* %call_4013cd, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4013d3	 Bytes: 5
  %loadMem1_4013d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4013d3 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4013d3, i64 12637, i64 5, i64 5)
  store %struct.Memory* %call1_4013d3, %struct.Memory** %MEMORY

  %loadMem2_4013d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4013d3 = load i64, i64* %3
  %call2_4013d3 = call %struct.Memory* @sub_404530._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4013d3, %struct.Memory* %loadMem2_4013d3)
  store %struct.Memory* %call2_4013d3, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 4013d8	 Bytes: 5
  %loadMem_4013d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013d8 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013d8)
  store %struct.Memory* %call_4013d8, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 4013dd	 Bytes: 5
  %loadMem_4013dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013dd = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013dd)
  store %struct.Memory* %call_4013dd, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 4013e2	 Bytes: 4
  %loadMem_4013e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013e2 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013e2)
  store %struct.Memory* %call_4013e2, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4013e6	 Bytes: 4
  %loadMem_4013e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013e6 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013e6)
  store %struct.Memory* %call_4013e6, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4013ea	 Bytes: 3
  %loadMem_4013ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013ea = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013ea)
  store %struct.Memory* %call_4013ea, %struct.Memory** %MEMORY

  ; Code: movq $0x4140a8, (%rdi)	 RIP: 4013ed	 Bytes: 7
  %loadMem_4013ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013ed = call %struct.Memory* @routine_movq__0x4140a8____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013ed)
  store %struct.Memory* %call_4013ed, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 4013f4	 Bytes: 7
  %loadMem_4013f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013f4 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013f4)
  store %struct.Memory* %call_4013f4, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4013fb	 Bytes: 6
  %loadMem_4013fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4013fb = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4013fb)
  store %struct.Memory* %call_4013fb, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401401	 Bytes: 5
  %loadMem1_401401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401401 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401401, i64 12863, i64 5, i64 5)
  store %struct.Memory* %call1_401401, %struct.Memory** %MEMORY

  %loadMem2_401401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401401 = load i64, i64* %3
  %call2_401401 = call %struct.Memory* @sub_404640._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401401, %struct.Memory* %loadMem2_401401)
  store %struct.Memory* %call2_401401, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401406	 Bytes: 4
  %loadMem_401406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401406 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401406)
  store %struct.Memory* %call_401406, %struct.Memory** %MEMORY

  ; Code: movl $0x4140ce, %eax	 RIP: 40140a	 Bytes: 5
  %loadMem_40140a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40140a = call %struct.Memory* @routine_movl__0x4140ce___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40140a)
  store %struct.Memory* %call_40140a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40140f	 Bytes: 2
  %loadMem_40140f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40140f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40140f)
  store %struct.Memory* %call_40140f, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401411	 Bytes: 7
  %loadMem_401411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401411 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401411)
  store %struct.Memory* %call_401411, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401418	 Bytes: 6
  %loadMem_401418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401418 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401418)
  store %struct.Memory* %call_401418, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc	 RIP: 40141e	 Bytes: 5
  %loadMem1_40141e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40141e = call %struct.Memory* @routine_callq_._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40141e, i64 13106, i64 5, i64 5)
  store %struct.Memory* %call1_40141e, %struct.Memory** %MEMORY

  %loadMem2_40141e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40141e = load i64, i64* %3
  %call2_40141e = call %struct.Memory* @sub_404750._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40141e, %struct.Memory* %loadMem2_40141e)
  store %struct.Memory* %call2_40141e, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 401423	 Bytes: 5
  %loadMem_401423 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401423 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401423)
  store %struct.Memory* %call_401423, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401428	 Bytes: 5
  %loadMem_401428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401428 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401428)
  store %struct.Memory* %call_401428, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 40142d	 Bytes: 4
  %loadMem_40142d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40142d = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40142d)
  store %struct.Memory* %call_40142d, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401431	 Bytes: 4
  %loadMem_401431 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401431 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401431)
  store %struct.Memory* %call_401431, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401435	 Bytes: 3
  %loadMem_401435 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401435 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401435)
  store %struct.Memory* %call_401435, %struct.Memory** %MEMORY

  ; Code: movq $0x4140e6, (%rdi)	 RIP: 401438	 Bytes: 7
  %loadMem_401438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401438 = call %struct.Memory* @routine_movq__0x4140e6____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401438)
  store %struct.Memory* %call_401438, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40143f	 Bytes: 7
  %loadMem_40143f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40143f = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40143f)
  store %struct.Memory* %call_40143f, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401446	 Bytes: 6
  %loadMem_401446 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401446 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401446)
  store %struct.Memory* %call_401446, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40144c	 Bytes: 5
  %loadMem1_40144c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40144c = call %struct.Memory* @routine_callq_._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40144c, i64 13236, i64 5, i64 5)
  store %struct.Memory* %call1_40144c, %struct.Memory** %MEMORY

  %loadMem2_40144c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40144c = load i64, i64* %3
  %call2_40144c = call %struct.Memory* @sub_404800._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40144c, %struct.Memory* %loadMem2_40144c)
  store %struct.Memory* %call2_40144c, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 401451	 Bytes: 5
  %loadMem_401451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401451 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401451)
  store %struct.Memory* %call_401451, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401456	 Bytes: 5
  %loadMem_401456 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401456 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401456)
  store %struct.Memory* %call_401456, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 40145b	 Bytes: 4
  %loadMem_40145b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40145b = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40145b)
  store %struct.Memory* %call_40145b, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 40145f	 Bytes: 4
  %loadMem_40145f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40145f = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40145f)
  store %struct.Memory* %call_40145f, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401463	 Bytes: 3
  %loadMem_401463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401463 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401463)
  store %struct.Memory* %call_401463, %struct.Memory** %MEMORY

  ; Code: movq $0x414108, (%rdi)	 RIP: 401466	 Bytes: 7
  %loadMem_401466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401466 = call %struct.Memory* @routine_movq__0x414108____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401466)
  store %struct.Memory* %call_401466, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40146d	 Bytes: 7
  %loadMem_40146d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40146d = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40146d)
  store %struct.Memory* %call_40146d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401474	 Bytes: 6
  %loadMem_401474 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401474 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401474)
  store %struct.Memory* %call_401474, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40147a	 Bytes: 5
  %loadMem1_40147a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40147a = call %struct.Memory* @routine_callq_._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40147a, i64 13462, i64 5, i64 5)
  store %struct.Memory* %call1_40147a, %struct.Memory** %MEMORY

  %loadMem2_40147a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40147a = load i64, i64* %3
  %call2_40147a = call %struct.Memory* @sub_404910._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40147a, %struct.Memory* %loadMem2_40147a)
  store %struct.Memory* %call2_40147a, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 40147f	 Bytes: 5
  %loadMem_40147f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40147f = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40147f)
  store %struct.Memory* %call_40147f, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401484	 Bytes: 5
  %loadMem_401484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401484 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401484)
  store %struct.Memory* %call_401484, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 401489	 Bytes: 4
  %loadMem_401489 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401489 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401489)
  store %struct.Memory* %call_401489, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 40148d	 Bytes: 4
  %loadMem_40148d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40148d = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40148d)
  store %struct.Memory* %call_40148d, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401491	 Bytes: 3
  %loadMem_401491 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401491 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401491)
  store %struct.Memory* %call_401491, %struct.Memory** %MEMORY

  ; Code: movq $0x41412b, (%rdi)	 RIP: 401494	 Bytes: 7
  %loadMem_401494 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401494 = call %struct.Memory* @routine_movq__0x41412b____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401494)
  store %struct.Memory* %call_401494, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40149b	 Bytes: 7
  %loadMem_40149b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40149b = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40149b)
  store %struct.Memory* %call_40149b, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4014a2	 Bytes: 6
  %loadMem_4014a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014a2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014a2)
  store %struct.Memory* %call_4014a2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4014a8	 Bytes: 5
  %loadMem1_4014a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4014a8 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4014a8, i64 13688, i64 5, i64 5)
  store %struct.Memory* %call1_4014a8, %struct.Memory** %MEMORY

  %loadMem2_4014a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014a8 = load i64, i64* %3
  %call2_4014a8 = call %struct.Memory* @sub_404a20._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4014a8, %struct.Memory* %loadMem2_4014a8)
  store %struct.Memory* %call2_4014a8, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4014ad	 Bytes: 4
  %loadMem_4014ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014ad = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014ad)
  store %struct.Memory* %call_4014ad, %struct.Memory** %MEMORY

  ; Code: movl $0x41414b, %eax	 RIP: 4014b1	 Bytes: 5
  %loadMem_4014b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014b1 = call %struct.Memory* @routine_movl__0x41414b___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014b1)
  store %struct.Memory* %call_4014b1, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4014b6	 Bytes: 2
  %loadMem_4014b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014b6 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014b6)
  store %struct.Memory* %call_4014b6, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 4014b8	 Bytes: 7
  %loadMem_4014b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014b8 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014b8)
  store %struct.Memory* %call_4014b8, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4014bf	 Bytes: 6
  %loadMem_4014bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014bf = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014bf)
  store %struct.Memory* %call_4014bf, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc	 RIP: 4014c5	 Bytes: 5
  %loadMem1_4014c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4014c5 = call %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4014c5, i64 13931, i64 5, i64 5)
  store %struct.Memory* %call1_4014c5, %struct.Memory** %MEMORY

  %loadMem2_4014c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014c5 = load i64, i64* %3
  %call2_4014c5 = call %struct.Memory* @sub_404b30._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4014c5, %struct.Memory* %loadMem2_4014c5)
  store %struct.Memory* %call2_4014c5, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 4014ca	 Bytes: 5
  %loadMem_4014ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014ca = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014ca)
  store %struct.Memory* %call_4014ca, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 4014cf	 Bytes: 5
  %loadMem_4014cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014cf = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014cf)
  store %struct.Memory* %call_4014cf, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 4014d4	 Bytes: 4
  %loadMem_4014d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014d4 = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014d4)
  store %struct.Memory* %call_4014d4, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4014d8	 Bytes: 4
  %loadMem_4014d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014d8 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014d8)
  store %struct.Memory* %call_4014d8, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4014dc	 Bytes: 3
  %loadMem_4014dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014dc = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014dc)
  store %struct.Memory* %call_4014dc, %struct.Memory** %MEMORY

  ; Code: movq $0x414160, (%rdi)	 RIP: 4014df	 Bytes: 7
  %loadMem_4014df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014df = call %struct.Memory* @routine_movq__0x414160____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014df)
  store %struct.Memory* %call_4014df, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 4014e6	 Bytes: 7
  %loadMem_4014e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014e6 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014e6)
  store %struct.Memory* %call_4014e6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4014ed	 Bytes: 6
  %loadMem_4014ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014ed = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014ed)
  store %struct.Memory* %call_4014ed, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4014f3	 Bytes: 5
  %loadMem1_4014f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4014f3 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4014f3, i64 14061, i64 5, i64 5)
  store %struct.Memory* %call1_4014f3, %struct.Memory** %MEMORY

  %loadMem2_4014f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4014f3 = load i64, i64* %3
  %call2_4014f3 = call %struct.Memory* @sub_404be0._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4014f3, %struct.Memory* %loadMem2_4014f3)
  store %struct.Memory* %call2_4014f3, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 4014f8	 Bytes: 4
  %loadMem_4014f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014f8 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014f8)
  store %struct.Memory* %call_4014f8, %struct.Memory** %MEMORY

  ; Code: movl $0x41417e, %eax	 RIP: 4014fc	 Bytes: 5
  %loadMem_4014fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4014fc = call %struct.Memory* @routine_movl__0x41417e___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4014fc)
  store %struct.Memory* %call_4014fc, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401501	 Bytes: 2
  %loadMem_401501 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401501 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401501)
  store %struct.Memory* %call_401501, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401503	 Bytes: 7
  %loadMem_401503 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401503 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401503)
  store %struct.Memory* %call_401503, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40150a	 Bytes: 6
  %loadMem_40150a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40150a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40150a)
  store %struct.Memory* %call_40150a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc	 RIP: 401510	 Bytes: 5
  %loadMem1_401510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401510 = call %struct.Memory* @routine_callq_._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401510, i64 14304, i64 5, i64 5)
  store %struct.Memory* %call1_401510, %struct.Memory** %MEMORY

  %loadMem2_401510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401510 = load i64, i64* %3
  %call2_401510 = call %struct.Memory* @sub_404cf0._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401510, %struct.Memory* %loadMem2_401510)
  store %struct.Memory* %call2_401510, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 401515	 Bytes: 5
  %loadMem_401515 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401515 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401515)
  store %struct.Memory* %call_401515, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 40151a	 Bytes: 5
  %loadMem_40151a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40151a = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40151a)
  store %struct.Memory* %call_40151a, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 40151f	 Bytes: 4
  %loadMem_40151f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40151f = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40151f)
  store %struct.Memory* %call_40151f, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401523	 Bytes: 4
  %loadMem_401523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401523 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401523)
  store %struct.Memory* %call_401523, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401527	 Bytes: 3
  %loadMem_401527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401527 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401527)
  store %struct.Memory* %call_401527, %struct.Memory** %MEMORY

  ; Code: movq $0x414192, (%rdi)	 RIP: 40152a	 Bytes: 7
  %loadMem_40152a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40152a = call %struct.Memory* @routine_movq__0x414192____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40152a)
  store %struct.Memory* %call_40152a, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 401531	 Bytes: 7
  %loadMem_401531 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401531 = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401531)
  store %struct.Memory* %call_401531, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401538	 Bytes: 6
  %loadMem_401538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401538 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401538)
  store %struct.Memory* %call_401538, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40153e	 Bytes: 5
  %loadMem1_40153e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40153e = call %struct.Memory* @routine_callq_._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40153e, i64 14434, i64 5, i64 5)
  store %struct.Memory* %call1_40153e, %struct.Memory** %MEMORY

  %loadMem2_40153e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40153e = load i64, i64* %3
  %call2_40153e = call %struct.Memory* @sub_404da0._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40153e, %struct.Memory* %loadMem2_40153e)
  store %struct.Memory* %call2_40153e, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 401543	 Bytes: 4
  %loadMem_401543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401543 = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401543)
  store %struct.Memory* %call_401543, %struct.Memory** %MEMORY

  ; Code: movl $0x4141af, %eax	 RIP: 401547	 Bytes: 5
  %loadMem_401547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401547 = call %struct.Memory* @routine_movl__0x4141af___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401547)
  store %struct.Memory* %call_401547, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40154c	 Bytes: 2
  %loadMem_40154c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40154c = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40154c)
  store %struct.Memory* %call_40154c, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40154e	 Bytes: 7
  %loadMem_40154e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40154e = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40154e)
  store %struct.Memory* %call_40154e, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401555	 Bytes: 6
  %loadMem_401555 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401555 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401555)
  store %struct.Memory* %call_401555, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc	 RIP: 40155b	 Bytes: 5
  %loadMem1_40155b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40155b = call %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40155b, i64 14677, i64 5, i64 5)
  store %struct.Memory* %call1_40155b, %struct.Memory** %MEMORY

  %loadMem2_40155b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40155b = load i64, i64* %3
  %call2_40155b = call %struct.Memory* @sub_404eb0._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40155b, %struct.Memory* %loadMem2_40155b)
  store %struct.Memory* %call2_40155b, %struct.Memory** %MEMORY

  ; Code: movzbl -0x30(%rbp), %r9d	 RIP: 401560	 Bytes: 5
  %loadMem_401560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401560 = call %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401560)
  store %struct.Memory* %call_401560, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2f(%rbp), %r8d	 RIP: 401565	 Bytes: 5
  %loadMem_401565 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401565 = call %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401565)
  store %struct.Memory* %call_401565, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2e(%rbp), %ecx	 RIP: 40156a	 Bytes: 4
  %loadMem_40156a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40156a = call %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40156a)
  store %struct.Memory* %call_40156a, %struct.Memory** %MEMORY

  ; Code: movzbl -0x2d(%rbp), %edx	 RIP: 40156e	 Bytes: 4
  %loadMem_40156e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40156e = call %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40156e)
  store %struct.Memory* %call_40156e, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401572	 Bytes: 3
  %loadMem_401572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401572 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401572)
  store %struct.Memory* %call_401572, %struct.Memory** %MEMORY

  ; Code: movq $0x4141c4, (%rdi)	 RIP: 401575	 Bytes: 7
  %loadMem_401575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401575 = call %struct.Memory* @routine_movq__0x4141c4____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401575)
  store %struct.Memory* %call_401575, %struct.Memory** %MEMORY

  ; Code: movq -0x100(%rbp), %rdi	 RIP: 40157c	 Bytes: 7
  %loadMem_40157c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40157c = call %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40157c)
  store %struct.Memory* %call_40157c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401583	 Bytes: 6
  %loadMem_401583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401583 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401583)
  store %struct.Memory* %call_401583, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401589	 Bytes: 5
  %loadMem1_401589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401589 = call %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401589, i64 14807, i64 5, i64 5)
  store %struct.Memory* %call1_401589, %struct.Memory** %MEMORY

  %loadMem2_401589 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401589 = load i64, i64* %3
  %call2_401589 = call %struct.Memory* @sub_404f60._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401589, %struct.Memory* %loadMem2_401589)
  store %struct.Memory* %call2_401589, %struct.Memory** %MEMORY

  ; Code: cvttsd2si 0x218af2(%rip), %eax	 RIP: 40158e	 Bytes: 8
  %loadMem_40158e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40158e = call %struct.Memory* @routine_cvttsd2si_0x218af2__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40158e)
  store %struct.Memory* %call_40158e, %struct.Memory** %MEMORY

  ; Code: movl $0x664440, %ecx	 RIP: 401596	 Bytes: 5
  %loadMem_401596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401596 = call %struct.Memory* @routine_movl__0x664440___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401596)
  store %struct.Memory* %call_401596, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 40159b	 Bytes: 2
  %loadMem_40159b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40159b = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40159b)
  store %struct.Memory* %call_40159b, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 40159d	 Bytes: 4
  %loadMem_40159d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40159d = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40159d)
  store %struct.Memory* %call_40159d, %struct.Memory** %MEMORY

  ; Code: movswl %r14w, %edx	 RIP: 4015a1	 Bytes: 4
  %loadMem_4015a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015a1 = call %struct.Memory* @routine_movswl__r14w___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015a1)
  store %struct.Memory* %call_4015a1, %struct.Memory** %MEMORY

  ; Code: movl $0x6682c0, %eax	 RIP: 4015a5	 Bytes: 5
  %loadMem_4015a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015a5 = call %struct.Memory* @routine_movl__0x6682c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015a5)
  store %struct.Memory* %call_4015a5, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 4015aa	 Bytes: 2
  %loadMem_4015aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015aa = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015aa)
  store %struct.Memory* %call_4015aa, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x118(%rbp)	 RIP: 4015ac	 Bytes: 7
  %loadMem_4015ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015ac = call %struct.Memory* @routine_movq__rdi__MINUS0x118__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015ac)
  store %struct.Memory* %call_4015ac, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPssEvT_S1_T0_	 RIP: 4015b3	 Bytes: 5
  %loadMem1_4015b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4015b3 = call %struct.Memory* @routine_callq_._Z4fillIPssEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4015b3, i64 15037, i64 5, i64 5)
  store %struct.Memory* %call1_4015b3, %struct.Memory** %MEMORY

  %loadMem2_4015b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4015b3 = load i64, i64* %3
  %call2_4015b3 = call %struct.Memory* @sub_405070._Z4fillIPssEvT_S1_T0_(%struct.State* %0, i64  %loadPC_4015b3, %struct.Memory* %loadMem2_4015b3)
  store %struct.Memory* %call2_4015b3, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %eax	 RIP: 4015b8	 Bytes: 5
  %loadMem_4015b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015b8 = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015b8)
  store %struct.Memory* %call_4015b8, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 4015bd	 Bytes: 4
  %loadMem_4015bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015bd = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015bd)
  store %struct.Memory* %call_4015bd, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x32(%rbp)	 RIP: 4015c1	 Bytes: 5
  %loadMem_4015c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015c1 = call %struct.Memory* @routine_movw__r14w__MINUS0x32__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015c1)
  store %struct.Memory* %call_4015c1, %struct.Memory** %MEMORY

  ; Code: movzwl -0x32(%rbp), %eax	 RIP: 4015c6	 Bytes: 4
  %loadMem_4015c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015c6 = call %struct.Memory* @routine_movzwl_MINUS0x32__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015c6)
  store %struct.Memory* %call_4015c6, %struct.Memory** %MEMORY

  ; Code: addl %eax, %eax	 RIP: 4015ca	 Bytes: 2
  %loadMem_4015ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015ca = call %struct.Memory* @routine_addl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015ca)
  store %struct.Memory* %call_4015ca, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 4015cc	 Bytes: 4
  %loadMem_4015cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015cc = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015cc)
  store %struct.Memory* %call_4015cc, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x34(%rbp)	 RIP: 4015d0	 Bytes: 5
  %loadMem_4015d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015d0 = call %struct.Memory* @routine_movw__r14w__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015d0)
  store %struct.Memory* %call_4015d0, %struct.Memory** %MEMORY

  ; Code: movzwl -0x32(%rbp), %eax	 RIP: 4015d5	 Bytes: 4
  %loadMem_4015d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015d5 = call %struct.Memory* @routine_movzwl_MINUS0x32__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015d5)
  store %struct.Memory* %call_4015d5, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 4015d9	 Bytes: 3
  %loadMem_4015d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015d9 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015d9)
  store %struct.Memory* %call_4015d9, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 4015dc	 Bytes: 4
  %loadMem_4015dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015dc = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015dc)
  store %struct.Memory* %call_4015dc, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x36(%rbp)	 RIP: 4015e0	 Bytes: 5
  %loadMem_4015e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015e0 = call %struct.Memory* @routine_movw__r14w__MINUS0x36__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015e0)
  store %struct.Memory* %call_4015e0, %struct.Memory** %MEMORY

  ; Code: movzwl -0x32(%rbp), %eax	 RIP: 4015e5	 Bytes: 4
  %loadMem_4015e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015e5 = call %struct.Memory* @routine_movzwl_MINUS0x32__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015e5)
  store %struct.Memory* %call_4015e5, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 4015e9	 Bytes: 4
  %loadMem_4015e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015e9 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015e9)
  store %struct.Memory* %call_4015e9, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %edx	 RIP: 4015ed	 Bytes: 4
  %loadMem_4015ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015ed = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015ed)
  store %struct.Memory* %call_4015ed, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x11c(%rbp)	 RIP: 4015f1	 Bytes: 6
  %loadMem_4015f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015f1 = call %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015f1)
  store %struct.Memory* %call_4015f1, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 4015f7	 Bytes: 2
  %loadMem_4015f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015f7 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015f7)
  store %struct.Memory* %call_4015f7, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x120(%rbp)	 RIP: 4015f9	 Bytes: 6
  %loadMem_4015f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015f9 = call %struct.Memory* @routine_movl__edx__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015f9)
  store %struct.Memory* %call_4015f9, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 4015ff	 Bytes: 1
  %loadMem_4015ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4015ff = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4015ff)
  store %struct.Memory* %call_4015ff, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %ecx	 RIP: 401600	 Bytes: 6
  %loadMem_401600 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401600 = call %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401600)
  store %struct.Memory* %call_401600, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 401606	 Bytes: 2
  %loadMem_401606 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401606 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401606)
  store %struct.Memory* %call_401606, %struct.Memory** %MEMORY

  ; Code: movl -0x11c(%rbp), %ecx	 RIP: 401608	 Bytes: 6
  %loadMem_401608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401608 = call %struct.Memory* @routine_movl_MINUS0x11c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401608)
  store %struct.Memory* %call_401608, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 40160e	 Bytes: 2
  %loadMem_40160e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40160e = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40160e)
  store %struct.Memory* %call_40160e, %struct.Memory** %MEMORY

  ; Code: movw %cx, %r14w	 RIP: 401610	 Bytes: 4
  %loadMem_401610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401610 = call %struct.Memory* @routine_movw__cx___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401610)
  store %struct.Memory* %call_401610, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x38(%rbp)	 RIP: 401614	 Bytes: 5
  %loadMem_401614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401614 = call %struct.Memory* @routine_movw__r14w__MINUS0x38__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401614)
  store %struct.Memory* %call_401614, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401619	 Bytes: 4
  %loadMem_401619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401619 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401619)
  store %struct.Memory* %call_401619, %struct.Memory** %MEMORY

  ; Code: movl $0x4141e3, %eax	 RIP: 40161d	 Bytes: 5
  %loadMem_40161d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40161d = call %struct.Memory* @routine_movl__0x4141e3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40161d)
  store %struct.Memory* %call_40161d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401622	 Bytes: 2
  %loadMem_401622 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401622 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401622)
  store %struct.Memory* %call_401622, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401624	 Bytes: 7
  %loadMem_401624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401624 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401624)
  store %struct.Memory* %call_401624, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40162b	 Bytes: 6
  %loadMem_40162b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40162b = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40162b)
  store %struct.Memory* %call_40162b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc	 RIP: 401631	 Bytes: 5
  %loadMem1_401631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401631 = call %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401631, i64 14975, i64 5, i64 5)
  store %struct.Memory* %call1_401631, %struct.Memory** %MEMORY

  %loadMem2_401631 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401631 = load i64, i64* %3
  %call2_401631 = call %struct.Memory* @sub_4050b0._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401631, %struct.Memory* %loadMem2_401631)
  store %struct.Memory* %call2_401631, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401636	 Bytes: 4
  %loadMem_401636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401636 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401636)
  store %struct.Memory* %call_401636, %struct.Memory** %MEMORY

  ; Code: movl $0x4141f9, %eax	 RIP: 40163a	 Bytes: 5
  %loadMem_40163a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40163a = call %struct.Memory* @routine_movl__0x4141f9___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40163a)
  store %struct.Memory* %call_40163a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40163f	 Bytes: 2
  %loadMem_40163f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40163f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40163f)
  store %struct.Memory* %call_40163f, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401641	 Bytes: 7
  %loadMem_401641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401641 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401641)
  store %struct.Memory* %call_401641, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401648	 Bytes: 6
  %loadMem_401648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401648 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401648)
  store %struct.Memory* %call_401648, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc	 RIP: 40164e	 Bytes: 5
  %loadMem1_40164e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40164e = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40164e, i64 15138, i64 5, i64 5)
  store %struct.Memory* %call1_40164e, %struct.Memory** %MEMORY

  %loadMem2_40164e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40164e = load i64, i64* %3
  %call2_40164e = call %struct.Memory* @sub_405170._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40164e, %struct.Memory* %loadMem2_40164e)
  store %struct.Memory* %call2_40164e, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401653	 Bytes: 5
  %loadMem_401653 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401653 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401653)
  store %struct.Memory* %call_401653, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 401658	 Bytes: 5
  %loadMem_401658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401658 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401658)
  store %struct.Memory* %call_401658, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 40165d	 Bytes: 4
  %loadMem_40165d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40165d = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40165d)
  store %struct.Memory* %call_40165d, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401661	 Bytes: 4
  %loadMem_401661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401661 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401661)
  store %struct.Memory* %call_401661, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401665	 Bytes: 3
  %loadMem_401665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401665 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401665)
  store %struct.Memory* %call_401665, %struct.Memory** %MEMORY

  ; Code: movq $0x414217, (%rdi)	 RIP: 401668	 Bytes: 7
  %loadMem_401668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401668 = call %struct.Memory* @routine_movq__0x414217____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401668)
  store %struct.Memory* %call_401668, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 40166f	 Bytes: 7
  %loadMem_40166f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40166f = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40166f)
  store %struct.Memory* %call_40166f, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401676	 Bytes: 6
  %loadMem_401676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401676 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401676)
  store %struct.Memory* %call_401676, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40167c	 Bytes: 5
  %loadMem1_40167c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40167c = call %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40167c, i64 15284, i64 5, i64 5)
  store %struct.Memory* %call1_40167c, %struct.Memory** %MEMORY

  %loadMem2_40167c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40167c = load i64, i64* %3
  %call2_40167c = call %struct.Memory* @sub_405230._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40167c, %struct.Memory* %loadMem2_40167c)
  store %struct.Memory* %call2_40167c, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401681	 Bytes: 4
  %loadMem_401681 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401681 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401681)
  store %struct.Memory* %call_401681, %struct.Memory** %MEMORY

  ; Code: movl $0x414237, %eax	 RIP: 401685	 Bytes: 5
  %loadMem_401685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401685 = call %struct.Memory* @routine_movl__0x414237___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401685)
  store %struct.Memory* %call_401685, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40168a	 Bytes: 2
  %loadMem_40168a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40168a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40168a)
  store %struct.Memory* %call_40168a, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 40168c	 Bytes: 7
  %loadMem_40168c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40168c = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40168c)
  store %struct.Memory* %call_40168c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401693	 Bytes: 6
  %loadMem_401693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401693 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401693)
  store %struct.Memory* %call_401693, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc	 RIP: 401699	 Bytes: 5
  %loadMem1_401699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401699 = call %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401699, i64 15559, i64 5, i64 5)
  store %struct.Memory* %call1_401699, %struct.Memory** %MEMORY

  %loadMem2_401699 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401699 = load i64, i64* %3
  %call2_401699 = call %struct.Memory* @sub_405360._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401699, %struct.Memory* %loadMem2_401699)
  store %struct.Memory* %call2_401699, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 40169e	 Bytes: 5
  %loadMem_40169e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40169e = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40169e)
  store %struct.Memory* %call_40169e, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 4016a3	 Bytes: 5
  %loadMem_4016a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016a3 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016a3)
  store %struct.Memory* %call_4016a3, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 4016a8	 Bytes: 4
  %loadMem_4016a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016a8 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016a8)
  store %struct.Memory* %call_4016a8, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4016ac	 Bytes: 4
  %loadMem_4016ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016ac = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016ac)
  store %struct.Memory* %call_4016ac, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4016b0	 Bytes: 3
  %loadMem_4016b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016b0 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016b0)
  store %struct.Memory* %call_4016b0, %struct.Memory** %MEMORY

  ; Code: movq $0x414252, (%rdi)	 RIP: 4016b3	 Bytes: 7
  %loadMem_4016b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016b3 = call %struct.Memory* @routine_movq__0x414252____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016b3)
  store %struct.Memory* %call_4016b3, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4016ba	 Bytes: 7
  %loadMem_4016ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016ba = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016ba)
  store %struct.Memory* %call_4016ba, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4016c1	 Bytes: 6
  %loadMem_4016c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016c1 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016c1)
  store %struct.Memory* %call_4016c1, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4016c7	 Bytes: 5
  %loadMem1_4016c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4016c7 = call %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4016c7, i64 15705, i64 5, i64 5)
  store %struct.Memory* %call1_4016c7, %struct.Memory** %MEMORY

  %loadMem2_4016c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4016c7 = load i64, i64* %3
  %call2_4016c7 = call %struct.Memory* @sub_405420._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4016c7, %struct.Memory* %loadMem2_4016c7)
  store %struct.Memory* %call2_4016c7, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4016cc	 Bytes: 4
  %loadMem_4016cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016cc = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016cc)
  store %struct.Memory* %call_4016cc, %struct.Memory** %MEMORY

  ; Code: movl $0x414277, %eax	 RIP: 4016d0	 Bytes: 5
  %loadMem_4016d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016d0 = call %struct.Memory* @routine_movl__0x414277___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016d0)
  store %struct.Memory* %call_4016d0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4016d5	 Bytes: 2
  %loadMem_4016d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016d5 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016d5)
  store %struct.Memory* %call_4016d5, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4016d7	 Bytes: 7
  %loadMem_4016d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016d7 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016d7)
  store %struct.Memory* %call_4016d7, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4016de	 Bytes: 6
  %loadMem_4016de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016de = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016de)
  store %struct.Memory* %call_4016de, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc	 RIP: 4016e4	 Bytes: 5
  %loadMem1_4016e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4016e4 = call %struct.Memory* @routine_callq_._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4016e4, i64 15980, i64 5, i64 5)
  store %struct.Memory* %call1_4016e4, %struct.Memory** %MEMORY

  %loadMem2_4016e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4016e4 = load i64, i64* %3
  %call2_4016e4 = call %struct.Memory* @sub_405550._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4016e4, %struct.Memory* %loadMem2_4016e4)
  store %struct.Memory* %call2_4016e4, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 4016e9	 Bytes: 5
  %loadMem_4016e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016e9 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016e9)
  store %struct.Memory* %call_4016e9, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 4016ee	 Bytes: 5
  %loadMem_4016ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016ee = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016ee)
  store %struct.Memory* %call_4016ee, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 4016f3	 Bytes: 4
  %loadMem_4016f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016f3 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016f3)
  store %struct.Memory* %call_4016f3, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4016f7	 Bytes: 4
  %loadMem_4016f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016f7 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016f7)
  store %struct.Memory* %call_4016f7, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4016fb	 Bytes: 3
  %loadMem_4016fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016fb = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016fb)
  store %struct.Memory* %call_4016fb, %struct.Memory** %MEMORY

  ; Code: movq $0x414292, (%rdi)	 RIP: 4016fe	 Bytes: 7
  %loadMem_4016fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4016fe = call %struct.Memory* @routine_movq__0x414292____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4016fe)
  store %struct.Memory* %call_4016fe, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401705	 Bytes: 7
  %loadMem_401705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401705 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401705)
  store %struct.Memory* %call_401705, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40170c	 Bytes: 6
  %loadMem_40170c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40170c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40170c)
  store %struct.Memory* %call_40170c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401712	 Bytes: 5
  %loadMem1_401712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401712 = call %struct.Memory* @routine_callq_._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401712, i64 16126, i64 5, i64 5)
  store %struct.Memory* %call1_401712, %struct.Memory** %MEMORY

  %loadMem2_401712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401712 = load i64, i64* %3
  %call2_401712 = call %struct.Memory* @sub_405610._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401712, %struct.Memory* %loadMem2_401712)
  store %struct.Memory* %call2_401712, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401717	 Bytes: 5
  %loadMem_401717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401717 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401717)
  store %struct.Memory* %call_401717, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 40171c	 Bytes: 5
  %loadMem_40171c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40171c = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40171c)
  store %struct.Memory* %call_40171c, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 401721	 Bytes: 4
  %loadMem_401721 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401721 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401721)
  store %struct.Memory* %call_401721, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401725	 Bytes: 4
  %loadMem_401725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401725 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401725)
  store %struct.Memory* %call_401725, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401729	 Bytes: 3
  %loadMem_401729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401729 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401729)
  store %struct.Memory* %call_401729, %struct.Memory** %MEMORY

  ; Code: movq $0x4142b8, (%rdi)	 RIP: 40172c	 Bytes: 7
  %loadMem_40172c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40172c = call %struct.Memory* @routine_movq__0x4142b8____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40172c)
  store %struct.Memory* %call_40172c, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401733	 Bytes: 7
  %loadMem_401733 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401733 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401733)
  store %struct.Memory* %call_401733, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40173a	 Bytes: 6
  %loadMem_40173a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40173a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40173a)
  store %struct.Memory* %call_40173a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401740	 Bytes: 5
  %loadMem1_401740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401740 = call %struct.Memory* @routine_callq_._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401740, i64 16384, i64 5, i64 5)
  store %struct.Memory* %call1_401740, %struct.Memory** %MEMORY

  %loadMem2_401740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401740 = load i64, i64* %3
  %call2_401740 = call %struct.Memory* @sub_405740._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401740, %struct.Memory* %loadMem2_401740)
  store %struct.Memory* %call2_401740, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401745	 Bytes: 4
  %loadMem_401745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401745 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401745)
  store %struct.Memory* %call_401745, %struct.Memory** %MEMORY

  ; Code: movl $0x4142df, %eax	 RIP: 401749	 Bytes: 5
  %loadMem_401749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401749 = call %struct.Memory* @routine_movl__0x4142df___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401749)
  store %struct.Memory* %call_401749, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40174e	 Bytes: 2
  %loadMem_40174e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40174e = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40174e)
  store %struct.Memory* %call_40174e, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401750	 Bytes: 7
  %loadMem_401750 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401750 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401750)
  store %struct.Memory* %call_401750, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401757	 Bytes: 6
  %loadMem_401757 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401757 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401757)
  store %struct.Memory* %call_401757, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc	 RIP: 40175d	 Bytes: 5
  %loadMem1_40175d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40175d = call %struct.Memory* @routine_callq_._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40175d, i64 16659, i64 5, i64 5)
  store %struct.Memory* %call1_40175d, %struct.Memory** %MEMORY

  %loadMem2_40175d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40175d = load i64, i64* %3
  %call2_40175d = call %struct.Memory* @sub_405870._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40175d, %struct.Memory* %loadMem2_40175d)
  store %struct.Memory* %call2_40175d, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401762	 Bytes: 5
  %loadMem_401762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401762 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401762)
  store %struct.Memory* %call_401762, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 401767	 Bytes: 5
  %loadMem_401767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401767 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401767)
  store %struct.Memory* %call_401767, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 40176c	 Bytes: 4
  %loadMem_40176c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40176c = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40176c)
  store %struct.Memory* %call_40176c, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401770	 Bytes: 4
  %loadMem_401770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401770 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401770)
  store %struct.Memory* %call_401770, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401774	 Bytes: 3
  %loadMem_401774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401774 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401774)
  store %struct.Memory* %call_401774, %struct.Memory** %MEMORY

  ; Code: movq $0x4142f8, (%rdi)	 RIP: 401777	 Bytes: 7
  %loadMem_401777 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401777 = call %struct.Memory* @routine_movq__0x4142f8____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401777)
  store %struct.Memory* %call_401777, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 40177e	 Bytes: 7
  %loadMem_40177e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40177e = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40177e)
  store %struct.Memory* %call_40177e, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401785	 Bytes: 6
  %loadMem_401785 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401785 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401785)
  store %struct.Memory* %call_401785, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40178b	 Bytes: 5
  %loadMem1_40178b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40178b = call %struct.Memory* @routine_callq_._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40178b, i64 16805, i64 5, i64 5)
  store %struct.Memory* %call1_40178b, %struct.Memory** %MEMORY

  %loadMem2_40178b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40178b = load i64, i64* %3
  %call2_40178b = call %struct.Memory* @sub_405930._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40178b, %struct.Memory* %loadMem2_40178b)
  store %struct.Memory* %call2_40178b, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401790	 Bytes: 5
  %loadMem_401790 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401790 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401790)
  store %struct.Memory* %call_401790, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 401795	 Bytes: 5
  %loadMem_401795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401795 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401795)
  store %struct.Memory* %call_401795, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 40179a	 Bytes: 4
  %loadMem_40179a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40179a = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40179a)
  store %struct.Memory* %call_40179a, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 40179e	 Bytes: 4
  %loadMem_40179e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40179e = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40179e)
  store %struct.Memory* %call_40179e, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4017a2	 Bytes: 3
  %loadMem_4017a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017a2 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017a2)
  store %struct.Memory* %call_4017a2, %struct.Memory** %MEMORY

  ; Code: movq $0x41431b, (%rdi)	 RIP: 4017a5	 Bytes: 7
  %loadMem_4017a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017a5 = call %struct.Memory* @routine_movq__0x41431b____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017a5)
  store %struct.Memory* %call_4017a5, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4017ac	 Bytes: 7
  %loadMem_4017ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017ac = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017ac)
  store %struct.Memory* %call_4017ac, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4017b3	 Bytes: 6
  %loadMem_4017b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017b3 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017b3)
  store %struct.Memory* %call_4017b3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4017b9	 Bytes: 5
  %loadMem1_4017b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4017b9 = call %struct.Memory* @routine_callq_._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4017b9, i64 17063, i64 5, i64 5)
  store %struct.Memory* %call1_4017b9, %struct.Memory** %MEMORY

  %loadMem2_4017b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4017b9 = load i64, i64* %3
  %call2_4017b9 = call %struct.Memory* @sub_405a60._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4017b9, %struct.Memory* %loadMem2_4017b9)
  store %struct.Memory* %call2_4017b9, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 4017be	 Bytes: 5
  %loadMem_4017be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017be = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017be)
  store %struct.Memory* %call_4017be, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 4017c3	 Bytes: 5
  %loadMem_4017c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017c3 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017c3)
  store %struct.Memory* %call_4017c3, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 4017c8	 Bytes: 4
  %loadMem_4017c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017c8 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017c8)
  store %struct.Memory* %call_4017c8, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4017cc	 Bytes: 4
  %loadMem_4017cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017cc = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017cc)
  store %struct.Memory* %call_4017cc, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4017d0	 Bytes: 3
  %loadMem_4017d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017d0 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017d0)
  store %struct.Memory* %call_4017d0, %struct.Memory** %MEMORY

  ; Code: movq $0x41433f, (%rdi)	 RIP: 4017d3	 Bytes: 7
  %loadMem_4017d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017d3 = call %struct.Memory* @routine_movq__0x41433f____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017d3)
  store %struct.Memory* %call_4017d3, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4017da	 Bytes: 7
  %loadMem_4017da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017da = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017da)
  store %struct.Memory* %call_4017da, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4017e1	 Bytes: 6
  %loadMem_4017e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017e1 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017e1)
  store %struct.Memory* %call_4017e1, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4017e7	 Bytes: 5
  %loadMem1_4017e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4017e7 = call %struct.Memory* @routine_callq_._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4017e7, i64 17321, i64 5, i64 5)
  store %struct.Memory* %call1_4017e7, %struct.Memory** %MEMORY

  %loadMem2_4017e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4017e7 = load i64, i64* %3
  %call2_4017e7 = call %struct.Memory* @sub_405b90._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4017e7, %struct.Memory* %loadMem2_4017e7)
  store %struct.Memory* %call2_4017e7, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4017ec	 Bytes: 4
  %loadMem_4017ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017ec = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017ec)
  store %struct.Memory* %call_4017ec, %struct.Memory** %MEMORY

  ; Code: movl $0x414360, %eax	 RIP: 4017f0	 Bytes: 5
  %loadMem_4017f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017f0 = call %struct.Memory* @routine_movl__0x414360___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017f0)
  store %struct.Memory* %call_4017f0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4017f5	 Bytes: 2
  %loadMem_4017f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017f5 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017f5)
  store %struct.Memory* %call_4017f5, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4017f7	 Bytes: 7
  %loadMem_4017f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017f7 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017f7)
  store %struct.Memory* %call_4017f7, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4017fe	 Bytes: 6
  %loadMem_4017fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4017fe = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4017fe)
  store %struct.Memory* %call_4017fe, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc	 RIP: 401804	 Bytes: 5
  %loadMem1_401804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401804 = call %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401804, i64 17596, i64 5, i64 5)
  store %struct.Memory* %call1_401804, %struct.Memory** %MEMORY

  %loadMem2_401804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401804 = load i64, i64* %3
  %call2_401804 = call %struct.Memory* @sub_405cc0._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401804, %struct.Memory* %loadMem2_401804)
  store %struct.Memory* %call2_401804, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401809	 Bytes: 5
  %loadMem_401809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401809 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401809)
  store %struct.Memory* %call_401809, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 40180e	 Bytes: 5
  %loadMem_40180e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40180e = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40180e)
  store %struct.Memory* %call_40180e, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 401813	 Bytes: 4
  %loadMem_401813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401813 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401813)
  store %struct.Memory* %call_401813, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401817	 Bytes: 4
  %loadMem_401817 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401817 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401817)
  store %struct.Memory* %call_401817, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40181b	 Bytes: 3
  %loadMem_40181b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40181b = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40181b)
  store %struct.Memory* %call_40181b, %struct.Memory** %MEMORY

  ; Code: movq $0x414376, (%rdi)	 RIP: 40181e	 Bytes: 7
  %loadMem_40181e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40181e = call %struct.Memory* @routine_movq__0x414376____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40181e)
  store %struct.Memory* %call_40181e, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401825	 Bytes: 7
  %loadMem_401825 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401825 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401825)
  store %struct.Memory* %call_401825, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40182c	 Bytes: 6
  %loadMem_40182c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40182c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40182c)
  store %struct.Memory* %call_40182c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401832	 Bytes: 5
  %loadMem1_401832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401832 = call %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401832, i64 17742, i64 5, i64 5)
  store %struct.Memory* %call1_401832, %struct.Memory** %MEMORY

  %loadMem2_401832 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401832 = load i64, i64* %3
  %call2_401832 = call %struct.Memory* @sub_405d80._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401832, %struct.Memory* %loadMem2_401832)
  store %struct.Memory* %call2_401832, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401837	 Bytes: 4
  %loadMem_401837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401837 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401837)
  store %struct.Memory* %call_401837, %struct.Memory** %MEMORY

  ; Code: movl $0x414395, %eax	 RIP: 40183b	 Bytes: 5
  %loadMem_40183b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40183b = call %struct.Memory* @routine_movl__0x414395___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40183b)
  store %struct.Memory* %call_40183b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401840	 Bytes: 2
  %loadMem_401840 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401840 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401840)
  store %struct.Memory* %call_401840, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401842	 Bytes: 7
  %loadMem_401842 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401842 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401842)
  store %struct.Memory* %call_401842, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401849	 Bytes: 6
  %loadMem_401849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401849 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401849)
  store %struct.Memory* %call_401849, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc	 RIP: 40184f	 Bytes: 5
  %loadMem1_40184f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40184f = call %struct.Memory* @routine_callq_._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40184f, i64 18017, i64 5, i64 5)
  store %struct.Memory* %call1_40184f, %struct.Memory** %MEMORY

  %loadMem2_40184f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40184f = load i64, i64* %3
  %call2_40184f = call %struct.Memory* @sub_405eb0._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40184f, %struct.Memory* %loadMem2_40184f)
  store %struct.Memory* %call2_40184f, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 401854	 Bytes: 5
  %loadMem_401854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401854 = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401854)
  store %struct.Memory* %call_401854, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 401859	 Bytes: 5
  %loadMem_401859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401859 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401859)
  store %struct.Memory* %call_401859, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 40185e	 Bytes: 4
  %loadMem_40185e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40185e = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40185e)
  store %struct.Memory* %call_40185e, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401862	 Bytes: 4
  %loadMem_401862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401862 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401862)
  store %struct.Memory* %call_401862, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401866	 Bytes: 3
  %loadMem_401866 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401866 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401866)
  store %struct.Memory* %call_401866, %struct.Memory** %MEMORY

  ; Code: movq $0x4143aa, (%rdi)	 RIP: 401869	 Bytes: 7
  %loadMem_401869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401869 = call %struct.Memory* @routine_movq__0x4143aa____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401869)
  store %struct.Memory* %call_401869, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 401870	 Bytes: 7
  %loadMem_401870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401870 = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401870)
  store %struct.Memory* %call_401870, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401877	 Bytes: 6
  %loadMem_401877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401877 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401877)
  store %struct.Memory* %call_401877, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40187d	 Bytes: 5
  %loadMem1_40187d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40187d = call %struct.Memory* @routine_callq_._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40187d, i64 18163, i64 5, i64 5)
  store %struct.Memory* %call1_40187d, %struct.Memory** %MEMORY

  %loadMem2_40187d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40187d = load i64, i64* %3
  %call2_40187d = call %struct.Memory* @sub_405f70._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40187d, %struct.Memory* %loadMem2_40187d)
  store %struct.Memory* %call2_40187d, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 401882	 Bytes: 4
  %loadMem_401882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401882 = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401882)
  store %struct.Memory* %call_401882, %struct.Memory** %MEMORY

  ; Code: movl $0x4143c8, %eax	 RIP: 401886	 Bytes: 5
  %loadMem_401886 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401886 = call %struct.Memory* @routine_movl__0x4143c8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401886)
  store %struct.Memory* %call_401886, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40188b	 Bytes: 2
  %loadMem_40188b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40188b = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40188b)
  store %struct.Memory* %call_40188b, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 40188d	 Bytes: 7
  %loadMem_40188d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40188d = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40188d)
  store %struct.Memory* %call_40188d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401894	 Bytes: 6
  %loadMem_401894 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401894 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401894)
  store %struct.Memory* %call_401894, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc	 RIP: 40189a	 Bytes: 5
  %loadMem1_40189a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40189a = call %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40189a, i64 18438, i64 5, i64 5)
  store %struct.Memory* %call1_40189a, %struct.Memory** %MEMORY

  %loadMem2_40189a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40189a = load i64, i64* %3
  %call2_40189a = call %struct.Memory* @sub_4060a0._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40189a, %struct.Memory* %loadMem2_40189a)
  store %struct.Memory* %call2_40189a, %struct.Memory** %MEMORY

  ; Code: movswl -0x38(%rbp), %r9d	 RIP: 40189f	 Bytes: 5
  %loadMem_40189f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40189f = call %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40189f)
  store %struct.Memory* %call_40189f, %struct.Memory** %MEMORY

  ; Code: movswl -0x36(%rbp), %r8d	 RIP: 4018a4	 Bytes: 5
  %loadMem_4018a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018a4 = call %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018a4)
  store %struct.Memory* %call_4018a4, %struct.Memory** %MEMORY

  ; Code: movswl -0x34(%rbp), %ecx	 RIP: 4018a9	 Bytes: 4
  %loadMem_4018a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018a9 = call %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018a9)
  store %struct.Memory* %call_4018a9, %struct.Memory** %MEMORY

  ; Code: movswl -0x32(%rbp), %edx	 RIP: 4018ad	 Bytes: 4
  %loadMem_4018ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018ad = call %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018ad)
  store %struct.Memory* %call_4018ad, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4018b1	 Bytes: 3
  %loadMem_4018b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018b1 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018b1)
  store %struct.Memory* %call_4018b1, %struct.Memory** %MEMORY

  ; Code: movq $0x4143de, (%rdi)	 RIP: 4018b4	 Bytes: 7
  %loadMem_4018b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018b4 = call %struct.Memory* @routine_movq__0x4143de____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018b4)
  store %struct.Memory* %call_4018b4, %struct.Memory** %MEMORY

  ; Code: movq -0x118(%rbp), %rdi	 RIP: 4018bb	 Bytes: 7
  %loadMem_4018bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018bb = call %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018bb)
  store %struct.Memory* %call_4018bb, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4018c2	 Bytes: 6
  %loadMem_4018c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018c2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018c2)
  store %struct.Memory* %call_4018c2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4018c8	 Bytes: 5
  %loadMem1_4018c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4018c8 = call %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4018c8, i64 18584, i64 5, i64 5)
  store %struct.Memory* %call1_4018c8, %struct.Memory** %MEMORY

  %loadMem2_4018c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4018c8 = load i64, i64* %3
  %call2_4018c8 = call %struct.Memory* @sub_406160._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4018c8, %struct.Memory* %loadMem2_4018c8)
  store %struct.Memory* %call2_4018c8, %struct.Memory** %MEMORY

  ; Code: cvttsd2si 0x2187b3(%rip), %eax	 RIP: 4018cd	 Bytes: 8
  %loadMem_4018cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018cd = call %struct.Memory* @routine_cvttsd2si_0x2187b3__rip____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018cd)
  store %struct.Memory* %call_4018cd, %struct.Memory** %MEMORY

  ; Code: movl $0x6605c0, %ecx	 RIP: 4018d5	 Bytes: 5
  %loadMem_4018d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018d5 = call %struct.Memory* @routine_movl__0x6605c0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018d5)
  store %struct.Memory* %call_4018d5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 4018da	 Bytes: 2
  %loadMem_4018da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018da = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018da)
  store %struct.Memory* %call_4018da, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 4018dc	 Bytes: 4
  %loadMem_4018dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018dc = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018dc)
  store %struct.Memory* %call_4018dc, %struct.Memory** %MEMORY

  ; Code: movzwl %r14w, %edx	 RIP: 4018e0	 Bytes: 4
  %loadMem_4018e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018e0 = call %struct.Memory* @routine_movzwl__r14w___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018e0)
  store %struct.Memory* %call_4018e0, %struct.Memory** %MEMORY

  ; Code: movl $0x664440, %eax	 RIP: 4018e4	 Bytes: 5
  %loadMem_4018e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018e4 = call %struct.Memory* @routine_movl__0x664440___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018e4)
  store %struct.Memory* %call_4018e4, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 4018e9	 Bytes: 2
  %loadMem_4018e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018e9 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018e9)
  store %struct.Memory* %call_4018e9, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x128(%rbp)	 RIP: 4018eb	 Bytes: 7
  %loadMem_4018eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018eb = call %struct.Memory* @routine_movq__rdi__MINUS0x128__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018eb)
  store %struct.Memory* %call_4018eb, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPttEvT_S1_T0_	 RIP: 4018f2	 Bytes: 5
  %loadMem1_4018f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4018f2 = call %struct.Memory* @routine_callq_._Z4fillIPttEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4018f2, i64 18846, i64 5, i64 5)
  store %struct.Memory* %call1_4018f2, %struct.Memory** %MEMORY

  %loadMem2_4018f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4018f2 = load i64, i64* %3
  %call2_4018f2 = call %struct.Memory* @sub_406290._Z4fillIPttEvT_S1_T0_(%struct.State* %0, i64  %loadPC_4018f2, %struct.Memory* %loadMem2_4018f2)
  store %struct.Memory* %call2_4018f2, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %eax	 RIP: 4018f7	 Bytes: 5
  %loadMem_4018f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018f7 = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018f7)
  store %struct.Memory* %call_4018f7, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 4018fc	 Bytes: 4
  %loadMem_4018fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4018fc = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4018fc)
  store %struct.Memory* %call_4018fc, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x3a(%rbp)	 RIP: 401900	 Bytes: 5
  %loadMem_401900 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401900 = call %struct.Memory* @routine_movw__r14w__MINUS0x3a__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401900)
  store %struct.Memory* %call_401900, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %eax	 RIP: 401905	 Bytes: 4
  %loadMem_401905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401905 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401905)
  store %struct.Memory* %call_401905, %struct.Memory** %MEMORY

  ; Code: addl %eax, %eax	 RIP: 401909	 Bytes: 2
  %loadMem_401909 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401909 = call %struct.Memory* @routine_addl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401909)
  store %struct.Memory* %call_401909, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 40190b	 Bytes: 4
  %loadMem_40190b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40190b = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40190b)
  store %struct.Memory* %call_40190b, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x3c(%rbp)	 RIP: 40190f	 Bytes: 5
  %loadMem_40190f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40190f = call %struct.Memory* @routine_movw__r14w__MINUS0x3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40190f)
  store %struct.Memory* %call_40190f, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %eax	 RIP: 401914	 Bytes: 4
  %loadMem_401914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401914 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401914)
  store %struct.Memory* %call_401914, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 401918	 Bytes: 3
  %loadMem_401918 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401918 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401918)
  store %struct.Memory* %call_401918, %struct.Memory** %MEMORY

  ; Code: movw %ax, %r14w	 RIP: 40191b	 Bytes: 4
  %loadMem_40191b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40191b = call %struct.Memory* @routine_movw__ax___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40191b)
  store %struct.Memory* %call_40191b, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x3e(%rbp)	 RIP: 40191f	 Bytes: 5
  %loadMem_40191f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40191f = call %struct.Memory* @routine_movw__r14w__MINUS0x3e__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40191f)
  store %struct.Memory* %call_40191f, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %eax	 RIP: 401924	 Bytes: 4
  %loadMem_401924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401924 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401924)
  store %struct.Memory* %call_401924, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401928	 Bytes: 4
  %loadMem_401928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401928 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401928)
  store %struct.Memory* %call_401928, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %edx	 RIP: 40192c	 Bytes: 4
  %loadMem_40192c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40192c = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40192c)
  store %struct.Memory* %call_40192c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x12c(%rbp)	 RIP: 401930	 Bytes: 6
  %loadMem_401930 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401930 = call %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401930)
  store %struct.Memory* %call_401930, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 401936	 Bytes: 2
  %loadMem_401936 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401936 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401936)
  store %struct.Memory* %call_401936, %struct.Memory** %MEMORY

  ; Code: movl -0x10c(%rbp), %ecx	 RIP: 401938	 Bytes: 6
  %loadMem_401938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401938 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401938)
  store %struct.Memory* %call_401938, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x130(%rbp)	 RIP: 40193e	 Bytes: 6
  %loadMem_40193e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40193e = call %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40193e)
  store %struct.Memory* %call_40193e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 401944	 Bytes: 2
  %loadMem_401944 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401944 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401944)
  store %struct.Memory* %call_401944, %struct.Memory** %MEMORY

  ; Code: movl -0x130(%rbp), %r8d	 RIP: 401946	 Bytes: 7
  %loadMem_401946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401946 = call %struct.Memory* @routine_movl_MINUS0x130__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401946)
  store %struct.Memory* %call_401946, %struct.Memory** %MEMORY

  ; Code: divl %r8d	 RIP: 40194d	 Bytes: 3
  %loadMem_40194d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40194d = call %struct.Memory* @routine_divl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40194d)
  store %struct.Memory* %call_40194d, %struct.Memory** %MEMORY

  ; Code: movl -0x12c(%rbp), %edx	 RIP: 401950	 Bytes: 6
  %loadMem_401950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401950 = call %struct.Memory* @routine_movl_MINUS0x12c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401950)
  store %struct.Memory* %call_401950, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edx	 RIP: 401956	 Bytes: 2
  %loadMem_401956 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401956 = call %struct.Memory* @routine_addl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401956)
  store %struct.Memory* %call_401956, %struct.Memory** %MEMORY

  ; Code: movw %dx, %r14w	 RIP: 401958	 Bytes: 4
  %loadMem_401958 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401958 = call %struct.Memory* @routine_movw__dx___r14w(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401958)
  store %struct.Memory* %call_401958, %struct.Memory** %MEMORY

  ; Code: movw %r14w, -0x40(%rbp)	 RIP: 40195c	 Bytes: 5
  %loadMem_40195c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40195c = call %struct.Memory* @routine_movw__r14w__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40195c)
  store %struct.Memory* %call_40195c, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401961	 Bytes: 4
  %loadMem_401961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401961 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401961)
  store %struct.Memory* %call_401961, %struct.Memory** %MEMORY

  ; Code: movl $0x4141e2, %eax	 RIP: 401965	 Bytes: 5
  %loadMem_401965 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401965 = call %struct.Memory* @routine_movl__0x4141e2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401965)
  store %struct.Memory* %call_401965, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40196a	 Bytes: 2
  %loadMem_40196a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40196a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40196a)
  store %struct.Memory* %call_40196a, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 40196c	 Bytes: 7
  %loadMem_40196c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40196c = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40196c)
  store %struct.Memory* %call_40196c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401973	 Bytes: 6
  %loadMem_401973 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401973 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401973)
  store %struct.Memory* %call_401973, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc	 RIP: 401979	 Bytes: 5
  %loadMem1_401979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401979 = call %struct.Memory* @routine_callq_._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401979, i64 18775, i64 5, i64 5)
  store %struct.Memory* %call1_401979, %struct.Memory** %MEMORY

  %loadMem2_401979 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401979 = load i64, i64* %3
  %call2_401979 = call %struct.Memory* @sub_4062d0._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401979, %struct.Memory* %loadMem2_401979)
  store %struct.Memory* %call2_401979, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 40197e	 Bytes: 4
  %loadMem_40197e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40197e = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40197e)
  store %struct.Memory* %call_40197e, %struct.Memory** %MEMORY

  ; Code: movl $0x4141f8, %eax	 RIP: 401982	 Bytes: 5
  %loadMem_401982 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401982 = call %struct.Memory* @routine_movl__0x4141f8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401982)
  store %struct.Memory* %call_401982, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401987	 Bytes: 2
  %loadMem_401987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401987 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401987)
  store %struct.Memory* %call_401987, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401989	 Bytes: 7
  %loadMem_401989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401989 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401989)
  store %struct.Memory* %call_401989, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401990	 Bytes: 6
  %loadMem_401990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401990 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401990)
  store %struct.Memory* %call_401990, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc	 RIP: 401996	 Bytes: 5
  %loadMem1_401996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401996 = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401996, i64 18938, i64 5, i64 5)
  store %struct.Memory* %call1_401996, %struct.Memory** %MEMORY

  %loadMem2_401996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401996 = load i64, i64* %3
  %call2_401996 = call %struct.Memory* @sub_406390._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401996, %struct.Memory* %loadMem2_401996)
  store %struct.Memory* %call2_401996, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 40199b	 Bytes: 5
  %loadMem_40199b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40199b = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40199b)
  store %struct.Memory* %call_40199b, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 4019a0	 Bytes: 5
  %loadMem_4019a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019a0 = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019a0)
  store %struct.Memory* %call_4019a0, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 4019a5	 Bytes: 4
  %loadMem_4019a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019a5 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019a5)
  store %struct.Memory* %call_4019a5, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 4019a9	 Bytes: 4
  %loadMem_4019a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019a9 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019a9)
  store %struct.Memory* %call_4019a9, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4019ad	 Bytes: 3
  %loadMem_4019ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019ad = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019ad)
  store %struct.Memory* %call_4019ad, %struct.Memory** %MEMORY

  ; Code: movq $0x414216, (%rdi)	 RIP: 4019b0	 Bytes: 7
  %loadMem_4019b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019b0 = call %struct.Memory* @routine_movq__0x414216____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019b0)
  store %struct.Memory* %call_4019b0, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 4019b7	 Bytes: 7
  %loadMem_4019b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019b7 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019b7)
  store %struct.Memory* %call_4019b7, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4019be	 Bytes: 6
  %loadMem_4019be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019be = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019be)
  store %struct.Memory* %call_4019be, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4019c4	 Bytes: 5
  %loadMem1_4019c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4019c4 = call %struct.Memory* @routine_callq_._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4019c4, i64 19084, i64 5, i64 5)
  store %struct.Memory* %call1_4019c4, %struct.Memory** %MEMORY

  %loadMem2_4019c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4019c4 = load i64, i64* %3
  %call2_4019c4 = call %struct.Memory* @sub_406450._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4019c4, %struct.Memory* %loadMem2_4019c4)
  store %struct.Memory* %call2_4019c4, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 4019c9	 Bytes: 4
  %loadMem_4019c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019c9 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019c9)
  store %struct.Memory* %call_4019c9, %struct.Memory** %MEMORY

  ; Code: movl $0x414236, %eax	 RIP: 4019cd	 Bytes: 5
  %loadMem_4019cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019cd = call %struct.Memory* @routine_movl__0x414236___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019cd)
  store %struct.Memory* %call_4019cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4019d2	 Bytes: 2
  %loadMem_4019d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019d2 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019d2)
  store %struct.Memory* %call_4019d2, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 4019d4	 Bytes: 7
  %loadMem_4019d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019d4 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019d4)
  store %struct.Memory* %call_4019d4, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4019db	 Bytes: 6
  %loadMem_4019db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019db = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019db)
  store %struct.Memory* %call_4019db, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc	 RIP: 4019e1	 Bytes: 5
  %loadMem1_4019e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4019e1 = call %struct.Memory* @routine_callq_._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4019e1, i64 19359, i64 5, i64 5)
  store %struct.Memory* %call1_4019e1, %struct.Memory** %MEMORY

  %loadMem2_4019e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4019e1 = load i64, i64* %3
  %call2_4019e1 = call %struct.Memory* @sub_406580._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4019e1, %struct.Memory* %loadMem2_4019e1)
  store %struct.Memory* %call2_4019e1, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 4019e6	 Bytes: 5
  %loadMem_4019e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019e6 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019e6)
  store %struct.Memory* %call_4019e6, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 4019eb	 Bytes: 5
  %loadMem_4019eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019eb = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019eb)
  store %struct.Memory* %call_4019eb, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 4019f0	 Bytes: 4
  %loadMem_4019f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019f0 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019f0)
  store %struct.Memory* %call_4019f0, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 4019f4	 Bytes: 4
  %loadMem_4019f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019f4 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019f4)
  store %struct.Memory* %call_4019f4, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4019f8	 Bytes: 3
  %loadMem_4019f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019f8 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019f8)
  store %struct.Memory* %call_4019f8, %struct.Memory** %MEMORY

  ; Code: movq $0x414251, (%rdi)	 RIP: 4019fb	 Bytes: 7
  %loadMem_4019fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4019fb = call %struct.Memory* @routine_movq__0x414251____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4019fb)
  store %struct.Memory* %call_4019fb, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401a02	 Bytes: 7
  %loadMem_401a02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a02 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a02)
  store %struct.Memory* %call_401a02, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401a09	 Bytes: 6
  %loadMem_401a09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a09 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a09)
  store %struct.Memory* %call_401a09, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401a0f	 Bytes: 5
  %loadMem1_401a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401a0f = call %struct.Memory* @routine_callq_._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401a0f, i64 19505, i64 5, i64 5)
  store %struct.Memory* %call1_401a0f, %struct.Memory** %MEMORY

  %loadMem2_401a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401a0f = load i64, i64* %3
  %call2_401a0f = call %struct.Memory* @sub_406640._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401a0f, %struct.Memory* %loadMem2_401a0f)
  store %struct.Memory* %call2_401a0f, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401a14	 Bytes: 4
  %loadMem_401a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a14 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a14)
  store %struct.Memory* %call_401a14, %struct.Memory** %MEMORY

  ; Code: movl $0x414276, %eax	 RIP: 401a18	 Bytes: 5
  %loadMem_401a18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a18 = call %struct.Memory* @routine_movl__0x414276___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a18)
  store %struct.Memory* %call_401a18, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401a1d	 Bytes: 2
  %loadMem_401a1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a1d = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a1d)
  store %struct.Memory* %call_401a1d, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401a1f	 Bytes: 7
  %loadMem_401a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a1f = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a1f)
  store %struct.Memory* %call_401a1f, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401a26	 Bytes: 6
  %loadMem_401a26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a26 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a26)
  store %struct.Memory* %call_401a26, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc	 RIP: 401a2c	 Bytes: 5
  %loadMem1_401a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401a2c = call %struct.Memory* @routine_callq_._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401a2c, i64 19780, i64 5, i64 5)
  store %struct.Memory* %call1_401a2c, %struct.Memory** %MEMORY

  %loadMem2_401a2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401a2c = load i64, i64* %3
  %call2_401a2c = call %struct.Memory* @sub_406770._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401a2c, %struct.Memory* %loadMem2_401a2c)
  store %struct.Memory* %call2_401a2c, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401a31	 Bytes: 5
  %loadMem_401a31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a31 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a31)
  store %struct.Memory* %call_401a31, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401a36	 Bytes: 5
  %loadMem_401a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a36 = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a36)
  store %struct.Memory* %call_401a36, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401a3b	 Bytes: 4
  %loadMem_401a3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a3b = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a3b)
  store %struct.Memory* %call_401a3b, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401a3f	 Bytes: 4
  %loadMem_401a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a3f = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a3f)
  store %struct.Memory* %call_401a3f, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401a43	 Bytes: 3
  %loadMem_401a43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a43 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a43)
  store %struct.Memory* %call_401a43, %struct.Memory** %MEMORY

  ; Code: movq $0x414291, (%rdi)	 RIP: 401a46	 Bytes: 7
  %loadMem_401a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a46 = call %struct.Memory* @routine_movq__0x414291____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a46)
  store %struct.Memory* %call_401a46, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401a4d	 Bytes: 7
  %loadMem_401a4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a4d = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a4d)
  store %struct.Memory* %call_401a4d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401a54	 Bytes: 6
  %loadMem_401a54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a54 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a54)
  store %struct.Memory* %call_401a54, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401a5a	 Bytes: 5
  %loadMem1_401a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401a5a = call %struct.Memory* @routine_callq_._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401a5a, i64 19926, i64 5, i64 5)
  store %struct.Memory* %call1_401a5a, %struct.Memory** %MEMORY

  %loadMem2_401a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401a5a = load i64, i64* %3
  %call2_401a5a = call %struct.Memory* @sub_406830._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401a5a, %struct.Memory* %loadMem2_401a5a)
  store %struct.Memory* %call2_401a5a, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401a5f	 Bytes: 5
  %loadMem_401a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a5f = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a5f)
  store %struct.Memory* %call_401a5f, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401a64	 Bytes: 5
  %loadMem_401a64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a64 = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a64)
  store %struct.Memory* %call_401a64, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401a69	 Bytes: 4
  %loadMem_401a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a69 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a69)
  store %struct.Memory* %call_401a69, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401a6d	 Bytes: 4
  %loadMem_401a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a6d = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a6d)
  store %struct.Memory* %call_401a6d, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401a71	 Bytes: 3
  %loadMem_401a71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a71 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a71)
  store %struct.Memory* %call_401a71, %struct.Memory** %MEMORY

  ; Code: movq $0x4142b7, (%rdi)	 RIP: 401a74	 Bytes: 7
  %loadMem_401a74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a74 = call %struct.Memory* @routine_movq__0x4142b7____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a74)
  store %struct.Memory* %call_401a74, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401a7b	 Bytes: 7
  %loadMem_401a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a7b = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a7b)
  store %struct.Memory* %call_401a7b, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401a82	 Bytes: 6
  %loadMem_401a82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a82 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a82)
  store %struct.Memory* %call_401a82, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401a88	 Bytes: 5
  %loadMem1_401a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401a88 = call %struct.Memory* @routine_callq_._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401a88, i64 20184, i64 5, i64 5)
  store %struct.Memory* %call1_401a88, %struct.Memory** %MEMORY

  %loadMem2_401a88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401a88 = load i64, i64* %3
  %call2_401a88 = call %struct.Memory* @sub_406960._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401a88, %struct.Memory* %loadMem2_401a88)
  store %struct.Memory* %call2_401a88, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401a8d	 Bytes: 4
  %loadMem_401a8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a8d = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a8d)
  store %struct.Memory* %call_401a8d, %struct.Memory** %MEMORY

  ; Code: movl $0x4142de, %eax	 RIP: 401a91	 Bytes: 5
  %loadMem_401a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a91 = call %struct.Memory* @routine_movl__0x4142de___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a91)
  store %struct.Memory* %call_401a91, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401a96	 Bytes: 2
  %loadMem_401a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a96 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a96)
  store %struct.Memory* %call_401a96, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401a98	 Bytes: 7
  %loadMem_401a98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a98 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a98)
  store %struct.Memory* %call_401a98, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401a9f	 Bytes: 6
  %loadMem_401a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401a9f = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401a9f)
  store %struct.Memory* %call_401a9f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc	 RIP: 401aa5	 Bytes: 5
  %loadMem1_401aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401aa5 = call %struct.Memory* @routine_callq_._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401aa5, i64 20459, i64 5, i64 5)
  store %struct.Memory* %call1_401aa5, %struct.Memory** %MEMORY

  %loadMem2_401aa5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401aa5 = load i64, i64* %3
  %call2_401aa5 = call %struct.Memory* @sub_406a90._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401aa5, %struct.Memory* %loadMem2_401aa5)
  store %struct.Memory* %call2_401aa5, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401aaa	 Bytes: 5
  %loadMem_401aaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401aaa = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401aaa)
  store %struct.Memory* %call_401aaa, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401aaf	 Bytes: 5
  %loadMem_401aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401aaf = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401aaf)
  store %struct.Memory* %call_401aaf, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401ab4	 Bytes: 4
  %loadMem_401ab4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ab4 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ab4)
  store %struct.Memory* %call_401ab4, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401ab8	 Bytes: 4
  %loadMem_401ab8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ab8 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ab8)
  store %struct.Memory* %call_401ab8, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401abc	 Bytes: 3
  %loadMem_401abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401abc = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401abc)
  store %struct.Memory* %call_401abc, %struct.Memory** %MEMORY

  ; Code: movq $0x4142f7, (%rdi)	 RIP: 401abf	 Bytes: 7
  %loadMem_401abf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401abf = call %struct.Memory* @routine_movq__0x4142f7____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401abf)
  store %struct.Memory* %call_401abf, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401ac6	 Bytes: 7
  %loadMem_401ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ac6 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ac6)
  store %struct.Memory* %call_401ac6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401acd	 Bytes: 6
  %loadMem_401acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401acd = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401acd)
  store %struct.Memory* %call_401acd, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401ad3	 Bytes: 5
  %loadMem1_401ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401ad3 = call %struct.Memory* @routine_callq_._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401ad3, i64 20605, i64 5, i64 5)
  store %struct.Memory* %call1_401ad3, %struct.Memory** %MEMORY

  %loadMem2_401ad3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401ad3 = load i64, i64* %3
  %call2_401ad3 = call %struct.Memory* @sub_406b50._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401ad3, %struct.Memory* %loadMem2_401ad3)
  store %struct.Memory* %call2_401ad3, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401ad8	 Bytes: 5
  %loadMem_401ad8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ad8 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ad8)
  store %struct.Memory* %call_401ad8, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401add	 Bytes: 5
  %loadMem_401add = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401add = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401add)
  store %struct.Memory* %call_401add, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401ae2	 Bytes: 4
  %loadMem_401ae2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ae2 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ae2)
  store %struct.Memory* %call_401ae2, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401ae6	 Bytes: 4
  %loadMem_401ae6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ae6 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ae6)
  store %struct.Memory* %call_401ae6, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401aea	 Bytes: 3
  %loadMem_401aea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401aea = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401aea)
  store %struct.Memory* %call_401aea, %struct.Memory** %MEMORY

  ; Code: movq $0x41431a, (%rdi)	 RIP: 401aed	 Bytes: 7
  %loadMem_401aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401aed = call %struct.Memory* @routine_movq__0x41431a____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401aed)
  store %struct.Memory* %call_401aed, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401af4	 Bytes: 7
  %loadMem_401af4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401af4 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401af4)
  store %struct.Memory* %call_401af4, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401afb	 Bytes: 6
  %loadMem_401afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401afb = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401afb)
  store %struct.Memory* %call_401afb, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401b01	 Bytes: 5
  %loadMem1_401b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401b01 = call %struct.Memory* @routine_callq_._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401b01, i64 20863, i64 5, i64 5)
  store %struct.Memory* %call1_401b01, %struct.Memory** %MEMORY

  %loadMem2_401b01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401b01 = load i64, i64* %3
  %call2_401b01 = call %struct.Memory* @sub_406c80._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401b01, %struct.Memory* %loadMem2_401b01)
  store %struct.Memory* %call2_401b01, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401b06	 Bytes: 5
  %loadMem_401b06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b06 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b06)
  store %struct.Memory* %call_401b06, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401b0b	 Bytes: 5
  %loadMem_401b0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b0b = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b0b)
  store %struct.Memory* %call_401b0b, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401b10	 Bytes: 4
  %loadMem_401b10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b10 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b10)
  store %struct.Memory* %call_401b10, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401b14	 Bytes: 4
  %loadMem_401b14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b14 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b14)
  store %struct.Memory* %call_401b14, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401b18	 Bytes: 3
  %loadMem_401b18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b18 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b18)
  store %struct.Memory* %call_401b18, %struct.Memory** %MEMORY

  ; Code: movq $0x41433e, (%rdi)	 RIP: 401b1b	 Bytes: 7
  %loadMem_401b1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b1b = call %struct.Memory* @routine_movq__0x41433e____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b1b)
  store %struct.Memory* %call_401b1b, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401b22	 Bytes: 7
  %loadMem_401b22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b22 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b22)
  store %struct.Memory* %call_401b22, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401b29	 Bytes: 6
  %loadMem_401b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b29 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b29)
  store %struct.Memory* %call_401b29, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401b2f	 Bytes: 5
  %loadMem1_401b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401b2f = call %struct.Memory* @routine_callq_._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401b2f, i64 21121, i64 5, i64 5)
  store %struct.Memory* %call1_401b2f, %struct.Memory** %MEMORY

  %loadMem2_401b2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401b2f = load i64, i64* %3
  %call2_401b2f = call %struct.Memory* @sub_406db0._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401b2f, %struct.Memory* %loadMem2_401b2f)
  store %struct.Memory* %call2_401b2f, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401b34	 Bytes: 4
  %loadMem_401b34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b34 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b34)
  store %struct.Memory* %call_401b34, %struct.Memory** %MEMORY

  ; Code: movl $0x41435f, %eax	 RIP: 401b38	 Bytes: 5
  %loadMem_401b38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b38 = call %struct.Memory* @routine_movl__0x41435f___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b38)
  store %struct.Memory* %call_401b38, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401b3d	 Bytes: 2
  %loadMem_401b3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b3d = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b3d)
  store %struct.Memory* %call_401b3d, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401b3f	 Bytes: 7
  %loadMem_401b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b3f = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b3f)
  store %struct.Memory* %call_401b3f, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401b46	 Bytes: 6
  %loadMem_401b46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b46 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b46)
  store %struct.Memory* %call_401b46, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc	 RIP: 401b4c	 Bytes: 5
  %loadMem1_401b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401b4c = call %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401b4c, i64 21396, i64 5, i64 5)
  store %struct.Memory* %call1_401b4c, %struct.Memory** %MEMORY

  %loadMem2_401b4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401b4c = load i64, i64* %3
  %call2_401b4c = call %struct.Memory* @sub_406ee0._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401b4c, %struct.Memory* %loadMem2_401b4c)
  store %struct.Memory* %call2_401b4c, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401b51	 Bytes: 5
  %loadMem_401b51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b51 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b51)
  store %struct.Memory* %call_401b51, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401b56	 Bytes: 5
  %loadMem_401b56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b56 = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b56)
  store %struct.Memory* %call_401b56, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401b5b	 Bytes: 4
  %loadMem_401b5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b5b = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b5b)
  store %struct.Memory* %call_401b5b, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401b5f	 Bytes: 4
  %loadMem_401b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b5f = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b5f)
  store %struct.Memory* %call_401b5f, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401b63	 Bytes: 3
  %loadMem_401b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b63 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b63)
  store %struct.Memory* %call_401b63, %struct.Memory** %MEMORY

  ; Code: movq $0x414375, (%rdi)	 RIP: 401b66	 Bytes: 7
  %loadMem_401b66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b66 = call %struct.Memory* @routine_movq__0x414375____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b66)
  store %struct.Memory* %call_401b66, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401b6d	 Bytes: 7
  %loadMem_401b6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b6d = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b6d)
  store %struct.Memory* %call_401b6d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401b74	 Bytes: 6
  %loadMem_401b74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b74 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b74)
  store %struct.Memory* %call_401b74, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401b7a	 Bytes: 5
  %loadMem1_401b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401b7a = call %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401b7a, i64 21542, i64 5, i64 5)
  store %struct.Memory* %call1_401b7a, %struct.Memory** %MEMORY

  %loadMem2_401b7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401b7a = load i64, i64* %3
  %call2_401b7a = call %struct.Memory* @sub_406fa0._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401b7a, %struct.Memory* %loadMem2_401b7a)
  store %struct.Memory* %call2_401b7a, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401b7f	 Bytes: 4
  %loadMem_401b7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b7f = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b7f)
  store %struct.Memory* %call_401b7f, %struct.Memory** %MEMORY

  ; Code: movl $0x414394, %eax	 RIP: 401b83	 Bytes: 5
  %loadMem_401b83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b83 = call %struct.Memory* @routine_movl__0x414394___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b83)
  store %struct.Memory* %call_401b83, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401b88	 Bytes: 2
  %loadMem_401b88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b88 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b88)
  store %struct.Memory* %call_401b88, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401b8a	 Bytes: 7
  %loadMem_401b8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b8a = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b8a)
  store %struct.Memory* %call_401b8a, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401b91	 Bytes: 6
  %loadMem_401b91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b91 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b91)
  store %struct.Memory* %call_401b91, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc	 RIP: 401b97	 Bytes: 5
  %loadMem1_401b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401b97 = call %struct.Memory* @routine_callq_._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401b97, i64 21817, i64 5, i64 5)
  store %struct.Memory* %call1_401b97, %struct.Memory** %MEMORY

  %loadMem2_401b97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401b97 = load i64, i64* %3
  %call2_401b97 = call %struct.Memory* @sub_4070d0._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401b97, %struct.Memory* %loadMem2_401b97)
  store %struct.Memory* %call2_401b97, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401b9c	 Bytes: 5
  %loadMem_401b9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401b9c = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401b9c)
  store %struct.Memory* %call_401b9c, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401ba1	 Bytes: 5
  %loadMem_401ba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ba1 = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ba1)
  store %struct.Memory* %call_401ba1, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401ba6	 Bytes: 4
  %loadMem_401ba6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ba6 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ba6)
  store %struct.Memory* %call_401ba6, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401baa	 Bytes: 4
  %loadMem_401baa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401baa = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401baa)
  store %struct.Memory* %call_401baa, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401bae	 Bytes: 3
  %loadMem_401bae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bae = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bae)
  store %struct.Memory* %call_401bae, %struct.Memory** %MEMORY

  ; Code: movq $0x4143a9, (%rdi)	 RIP: 401bb1	 Bytes: 7
  %loadMem_401bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bb1 = call %struct.Memory* @routine_movq__0x4143a9____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bb1)
  store %struct.Memory* %call_401bb1, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401bb8	 Bytes: 7
  %loadMem_401bb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bb8 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bb8)
  store %struct.Memory* %call_401bb8, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401bbf	 Bytes: 6
  %loadMem_401bbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bbf = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bbf)
  store %struct.Memory* %call_401bbf, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401bc5	 Bytes: 5
  %loadMem1_401bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401bc5 = call %struct.Memory* @routine_callq_._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401bc5, i64 21963, i64 5, i64 5)
  store %struct.Memory* %call1_401bc5, %struct.Memory** %MEMORY

  %loadMem2_401bc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401bc5 = load i64, i64* %3
  %call2_401bc5 = call %struct.Memory* @sub_407190._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401bc5, %struct.Memory* %loadMem2_401bc5)
  store %struct.Memory* %call2_401bc5, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401bca	 Bytes: 4
  %loadMem_401bca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bca = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bca)
  store %struct.Memory* %call_401bca, %struct.Memory** %MEMORY

  ; Code: movl $0x4143c7, %eax	 RIP: 401bce	 Bytes: 5
  %loadMem_401bce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bce = call %struct.Memory* @routine_movl__0x4143c7___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bce)
  store %struct.Memory* %call_401bce, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401bd3	 Bytes: 2
  %loadMem_401bd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bd3 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bd3)
  store %struct.Memory* %call_401bd3, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401bd5	 Bytes: 7
  %loadMem_401bd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bd5 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bd5)
  store %struct.Memory* %call_401bd5, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401bdc	 Bytes: 6
  %loadMem_401bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bdc = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bdc)
  store %struct.Memory* %call_401bdc, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc	 RIP: 401be2	 Bytes: 5
  %loadMem1_401be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401be2 = call %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401be2, i64 22238, i64 5, i64 5)
  store %struct.Memory* %call1_401be2, %struct.Memory** %MEMORY

  %loadMem2_401be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401be2 = load i64, i64* %3
  %call2_401be2 = call %struct.Memory* @sub_4072c0._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401be2, %struct.Memory* %loadMem2_401be2)
  store %struct.Memory* %call2_401be2, %struct.Memory** %MEMORY

  ; Code: movzwl -0x40(%rbp), %r9d	 RIP: 401be7	 Bytes: 5
  %loadMem_401be7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401be7 = call %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401be7)
  store %struct.Memory* %call_401be7, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3e(%rbp), %r8d	 RIP: 401bec	 Bytes: 5
  %loadMem_401bec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bec = call %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bec)
  store %struct.Memory* %call_401bec, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3c(%rbp), %ecx	 RIP: 401bf1	 Bytes: 4
  %loadMem_401bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bf1 = call %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bf1)
  store %struct.Memory* %call_401bf1, %struct.Memory** %MEMORY

  ; Code: movzwl -0x3a(%rbp), %edx	 RIP: 401bf5	 Bytes: 4
  %loadMem_401bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bf5 = call %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bf5)
  store %struct.Memory* %call_401bf5, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401bf9	 Bytes: 3
  %loadMem_401bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bf9 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bf9)
  store %struct.Memory* %call_401bf9, %struct.Memory** %MEMORY

  ; Code: movq $0x4143dd, (%rdi)	 RIP: 401bfc	 Bytes: 7
  %loadMem_401bfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401bfc = call %struct.Memory* @routine_movq__0x4143dd____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401bfc)
  store %struct.Memory* %call_401bfc, %struct.Memory** %MEMORY

  ; Code: movq -0x128(%rbp), %rdi	 RIP: 401c03	 Bytes: 7
  %loadMem_401c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c03 = call %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c03)
  store %struct.Memory* %call_401c03, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401c0a	 Bytes: 6
  %loadMem_401c0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c0a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c0a)
  store %struct.Memory* %call_401c0a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401c10	 Bytes: 5
  %loadMem1_401c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401c10 = call %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401c10, i64 22384, i64 5, i64 5)
  store %struct.Memory* %call1_401c10, %struct.Memory** %MEMORY

  %loadMem2_401c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401c10 = load i64, i64* %3
  %call2_401c10 = call %struct.Memory* @sub_407380._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401c10, %struct.Memory* %loadMem2_401c10)
  store %struct.Memory* %call2_401c10, %struct.Memory** %MEMORY

  ; Code: movsd 0x21846b(%rip), %xmm0	 RIP: 401c15	 Bytes: 8
  %loadMem_401c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c15 = call %struct.Memory* @routine_movsd_0x21846b__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c15)
  store %struct.Memory* %call_401c15, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %edx	 RIP: 401c1d	 Bytes: 4
  %loadMem_401c1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c1d = call %struct.Memory* @routine_cvttsd2si__xmm0___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c1d)
  store %struct.Memory* %call_401c1d, %struct.Memory** %MEMORY

  ; Code: movl $0x6588c0, %eax	 RIP: 401c21	 Bytes: 5
  %loadMem_401c21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c21 = call %struct.Memory* @routine_movl__0x6588c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c21)
  store %struct.Memory* %call_401c21, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 401c26	 Bytes: 2
  %loadMem_401c26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c26 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c26)
  store %struct.Memory* %call_401c26, %struct.Memory** %MEMORY

  ; Code: movl $0x6605c0, %eax	 RIP: 401c28	 Bytes: 5
  %loadMem_401c28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c28 = call %struct.Memory* @routine_movl__0x6605c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c28)
  store %struct.Memory* %call_401c28, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 401c2d	 Bytes: 2
  %loadMem_401c2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c2d = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c2d)
  store %struct.Memory* %call_401c2d, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x138(%rbp)	 RIP: 401c2f	 Bytes: 7
  %loadMem_401c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c2f = call %struct.Memory* @routine_movq__rdi__MINUS0x138__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c2f)
  store %struct.Memory* %call_401c2f, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPiiEvT_S1_T0_	 RIP: 401c36	 Bytes: 5
  %loadMem1_401c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401c36 = call %struct.Memory* @routine_callq_._Z4fillIPiiEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401c36, i64 22650, i64 5, i64 5)
  store %struct.Memory* %call1_401c36, %struct.Memory** %MEMORY

  %loadMem2_401c36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401c36 = load i64, i64* %3
  %call2_401c36 = call %struct.Memory* @sub_4074b0._Z4fillIPiiEvT_S1_T0_(%struct.State* %0, i64  %loadPC_401c36, %struct.Memory* %loadMem2_401c36)
  store %struct.Memory* %call2_401c36, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %eax	 RIP: 401c3b	 Bytes: 5
  %loadMem_401c3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c3b = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c3b)
  store %struct.Memory* %call_401c3b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x44(%rbp)	 RIP: 401c40	 Bytes: 3
  %loadMem_401c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c40 = call %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c40)
  store %struct.Memory* %call_401c40, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %eax	 RIP: 401c43	 Bytes: 3
  %loadMem_401c43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c43 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c43)
  store %struct.Memory* %call_401c43, %struct.Memory** %MEMORY

  ; Code: addl %eax, %eax	 RIP: 401c46	 Bytes: 2
  %loadMem_401c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c46 = call %struct.Memory* @routine_addl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c46)
  store %struct.Memory* %call_401c46, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x48(%rbp)	 RIP: 401c48	 Bytes: 3
  %loadMem_401c48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c48 = call %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c48)
  store %struct.Memory* %call_401c48, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %eax	 RIP: 401c4b	 Bytes: 3
  %loadMem_401c4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c4b = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c4b)
  store %struct.Memory* %call_401c4b, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 401c4e	 Bytes: 3
  %loadMem_401c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c4e = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c4e)
  store %struct.Memory* %call_401c4e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x4c(%rbp)	 RIP: 401c51	 Bytes: 3
  %loadMem_401c51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c51 = call %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c51)
  store %struct.Memory* %call_401c51, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %eax	 RIP: 401c54	 Bytes: 3
  %loadMem_401c54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c54 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c54)
  store %struct.Memory* %call_401c54, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401c57	 Bytes: 3
  %loadMem_401c57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c57 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c57)
  store %struct.Memory* %call_401c57, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %edx	 RIP: 401c5a	 Bytes: 3
  %loadMem_401c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c5a = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c5a)
  store %struct.Memory* %call_401c5a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x13c(%rbp)	 RIP: 401c5d	 Bytes: 6
  %loadMem_401c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c5d = call %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c5d)
  store %struct.Memory* %call_401c5d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 401c63	 Bytes: 2
  %loadMem_401c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c63 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c63)
  store %struct.Memory* %call_401c63, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x140(%rbp)	 RIP: 401c65	 Bytes: 6
  %loadMem_401c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c65 = call %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c65)
  store %struct.Memory* %call_401c65, %struct.Memory** %MEMORY

  ; Code: cltd	 RIP: 401c6b	 Bytes: 1
  %loadMem_401c6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c6b = call %struct.Memory* @routine_cltd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c6b)
  store %struct.Memory* %call_401c6b, %struct.Memory** %MEMORY

  ; Code: movl -0x140(%rbp), %ecx	 RIP: 401c6c	 Bytes: 6
  %loadMem_401c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c6c = call %struct.Memory* @routine_movl_MINUS0x140__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c6c)
  store %struct.Memory* %call_401c6c, %struct.Memory** %MEMORY

  ; Code: idivl %ecx	 RIP: 401c72	 Bytes: 2
  %loadMem_401c72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c72 = call %struct.Memory* @routine_idivl__ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c72)
  store %struct.Memory* %call_401c72, %struct.Memory** %MEMORY

  ; Code: movl -0x13c(%rbp), %ecx	 RIP: 401c74	 Bytes: 6
  %loadMem_401c74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c74 = call %struct.Memory* @routine_movl_MINUS0x13c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c74)
  store %struct.Memory* %call_401c74, %struct.Memory** %MEMORY

  ; Code: addl %eax, %ecx	 RIP: 401c7a	 Bytes: 2
  %loadMem_401c7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c7a = call %struct.Memory* @routine_addl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c7a)
  store %struct.Memory* %call_401c7a, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0x50(%rbp)	 RIP: 401c7c	 Bytes: 3
  %loadMem_401c7c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c7c = call %struct.Memory* @routine_movl__ecx__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c7c)
  store %struct.Memory* %call_401c7c, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401c7f	 Bytes: 3
  %loadMem_401c7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c7f = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c7f)
  store %struct.Memory* %call_401c7f, %struct.Memory** %MEMORY

  ; Code: movl $0x4143fd, %eax	 RIP: 401c82	 Bytes: 5
  %loadMem_401c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c82 = call %struct.Memory* @routine_movl__0x4143fd___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c82)
  store %struct.Memory* %call_401c82, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401c87	 Bytes: 2
  %loadMem_401c87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c87 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c87)
  store %struct.Memory* %call_401c87, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401c89	 Bytes: 7
  %loadMem_401c89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c89 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c89)
  store %struct.Memory* %call_401c89, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401c90	 Bytes: 6
  %loadMem_401c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c90 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c90)
  store %struct.Memory* %call_401c90, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc	 RIP: 401c96	 Bytes: 5
  %loadMem1_401c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401c96 = call %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401c96, i64 22618, i64 5, i64 5)
  store %struct.Memory* %call1_401c96, %struct.Memory** %MEMORY

  %loadMem2_401c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401c96 = load i64, i64* %3
  %call2_401c96 = call %struct.Memory* @sub_4074f0._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401c96, %struct.Memory* %loadMem2_401c96)
  store %struct.Memory* %call2_401c96, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401c9b	 Bytes: 3
  %loadMem_401c9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c9b = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c9b)
  store %struct.Memory* %call_401c9b, %struct.Memory** %MEMORY

  ; Code: movl $0x414413, %eax	 RIP: 401c9e	 Bytes: 5
  %loadMem_401c9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401c9e = call %struct.Memory* @routine_movl__0x414413___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401c9e)
  store %struct.Memory* %call_401c9e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401ca3	 Bytes: 2
  %loadMem_401ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ca3 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ca3)
  store %struct.Memory* %call_401ca3, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401ca5	 Bytes: 7
  %loadMem_401ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ca5 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ca5)
  store %struct.Memory* %call_401ca5, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401cac	 Bytes: 6
  %loadMem_401cac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cac = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cac)
  store %struct.Memory* %call_401cac, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc	 RIP: 401cb2	 Bytes: 5
  %loadMem1_401cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401cb2 = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401cb2, i64 22750, i64 5, i64 5)
  store %struct.Memory* %call1_401cb2, %struct.Memory** %MEMORY

  %loadMem2_401cb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401cb2 = load i64, i64* %3
  %call2_401cb2 = call %struct.Memory* @sub_407590._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401cb2, %struct.Memory* %loadMem2_401cb2)
  store %struct.Memory* %call2_401cb2, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401cb7	 Bytes: 3
  %loadMem_401cb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cb7 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cb7)
  store %struct.Memory* %call_401cb7, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401cba	 Bytes: 3
  %loadMem_401cba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cba = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cba)
  store %struct.Memory* %call_401cba, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401cbd	 Bytes: 4
  %loadMem_401cbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cbd = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cbd)
  store %struct.Memory* %call_401cbd, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401cc1	 Bytes: 4
  %loadMem_401cc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cc1 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cc1)
  store %struct.Memory* %call_401cc1, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401cc5	 Bytes: 3
  %loadMem_401cc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cc5 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cc5)
  store %struct.Memory* %call_401cc5, %struct.Memory** %MEMORY

  ; Code: movq $0x414431, (%rdi)	 RIP: 401cc8	 Bytes: 7
  %loadMem_401cc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cc8 = call %struct.Memory* @routine_movq__0x414431____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cc8)
  store %struct.Memory* %call_401cc8, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401ccf	 Bytes: 7
  %loadMem_401ccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ccf = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ccf)
  store %struct.Memory* %call_401ccf, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401cd6	 Bytes: 6
  %loadMem_401cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cd6 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cd6)
  store %struct.Memory* %call_401cd6, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401cdc	 Bytes: 5
  %loadMem1_401cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401cdc = call %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401cdc, i64 22884, i64 5, i64 5)
  store %struct.Memory* %call1_401cdc, %struct.Memory** %MEMORY

  %loadMem2_401cdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401cdc = load i64, i64* %3
  %call2_401cdc = call %struct.Memory* @sub_407640._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401cdc, %struct.Memory* %loadMem2_401cdc)
  store %struct.Memory* %call2_401cdc, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401ce1	 Bytes: 3
  %loadMem_401ce1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ce1 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ce1)
  store %struct.Memory* %call_401ce1, %struct.Memory** %MEMORY

  ; Code: movl $0x414451, %eax	 RIP: 401ce4	 Bytes: 5
  %loadMem_401ce4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ce4 = call %struct.Memory* @routine_movl__0x414451___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ce4)
  store %struct.Memory* %call_401ce4, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401ce9	 Bytes: 2
  %loadMem_401ce9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ce9 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ce9)
  store %struct.Memory* %call_401ce9, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401ceb	 Bytes: 7
  %loadMem_401ceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ceb = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ceb)
  store %struct.Memory* %call_401ceb, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401cf2	 Bytes: 6
  %loadMem_401cf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cf2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cf2)
  store %struct.Memory* %call_401cf2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc	 RIP: 401cf8	 Bytes: 5
  %loadMem1_401cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401cf8 = call %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401cf8, i64 23064, i64 5, i64 5)
  store %struct.Memory* %call1_401cf8, %struct.Memory** %MEMORY

  %loadMem2_401cf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401cf8 = load i64, i64* %3
  %call2_401cf8 = call %struct.Memory* @sub_407710._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401cf8, %struct.Memory* %loadMem2_401cf8)
  store %struct.Memory* %call2_401cf8, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401cfd	 Bytes: 3
  %loadMem_401cfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401cfd = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401cfd)
  store %struct.Memory* %call_401cfd, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401d00	 Bytes: 3
  %loadMem_401d00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d00 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d00)
  store %struct.Memory* %call_401d00, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401d03	 Bytes: 4
  %loadMem_401d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d03 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d03)
  store %struct.Memory* %call_401d03, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401d07	 Bytes: 4
  %loadMem_401d07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d07 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d07)
  store %struct.Memory* %call_401d07, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401d0b	 Bytes: 3
  %loadMem_401d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d0b = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d0b)
  store %struct.Memory* %call_401d0b, %struct.Memory** %MEMORY

  ; Code: movq $0x41446c, (%rdi)	 RIP: 401d0e	 Bytes: 7
  %loadMem_401d0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d0e = call %struct.Memory* @routine_movq__0x41446c____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d0e)
  store %struct.Memory* %call_401d0e, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401d15	 Bytes: 7
  %loadMem_401d15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d15 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d15)
  store %struct.Memory* %call_401d15, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401d1c	 Bytes: 6
  %loadMem_401d1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d1c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d1c)
  store %struct.Memory* %call_401d1c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401d22	 Bytes: 5
  %loadMem1_401d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401d22 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401d22, i64 23182, i64 5, i64 5)
  store %struct.Memory* %call1_401d22, %struct.Memory** %MEMORY

  %loadMem2_401d22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401d22 = load i64, i64* %3
  %call2_401d22 = call %struct.Memory* @sub_4077b0._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401d22, %struct.Memory* %loadMem2_401d22)
  store %struct.Memory* %call2_401d22, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401d27	 Bytes: 3
  %loadMem_401d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d27 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d27)
  store %struct.Memory* %call_401d27, %struct.Memory** %MEMORY

  ; Code: movl $0x414491, %eax	 RIP: 401d2a	 Bytes: 5
  %loadMem_401d2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d2a = call %struct.Memory* @routine_movl__0x414491___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d2a)
  store %struct.Memory* %call_401d2a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401d2f	 Bytes: 2
  %loadMem_401d2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d2f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d2f)
  store %struct.Memory* %call_401d2f, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401d31	 Bytes: 7
  %loadMem_401d31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d31 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d31)
  store %struct.Memory* %call_401d31, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401d38	 Bytes: 6
  %loadMem_401d38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d38 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d38)
  store %struct.Memory* %call_401d38, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc	 RIP: 401d3e	 Bytes: 5
  %loadMem1_401d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401d3e = call %struct.Memory* @routine_callq_._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401d3e, i64 23362, i64 5, i64 5)
  store %struct.Memory* %call1_401d3e, %struct.Memory** %MEMORY

  %loadMem2_401d3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401d3e = load i64, i64* %3
  %call2_401d3e = call %struct.Memory* @sub_407880._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401d3e, %struct.Memory* %loadMem2_401d3e)
  store %struct.Memory* %call2_401d3e, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401d43	 Bytes: 3
  %loadMem_401d43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d43 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d43)
  store %struct.Memory* %call_401d43, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401d46	 Bytes: 3
  %loadMem_401d46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d46 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d46)
  store %struct.Memory* %call_401d46, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401d49	 Bytes: 4
  %loadMem_401d49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d49 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d49)
  store %struct.Memory* %call_401d49, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401d4d	 Bytes: 4
  %loadMem_401d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d4d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d4d)
  store %struct.Memory* %call_401d4d, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401d51	 Bytes: 3
  %loadMem_401d51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d51 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d51)
  store %struct.Memory* %call_401d51, %struct.Memory** %MEMORY

  ; Code: movq $0x4144ac, (%rdi)	 RIP: 401d54	 Bytes: 7
  %loadMem_401d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d54 = call %struct.Memory* @routine_movq__0x4144ac____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d54)
  store %struct.Memory* %call_401d54, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401d5b	 Bytes: 7
  %loadMem_401d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d5b = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d5b)
  store %struct.Memory* %call_401d5b, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401d62	 Bytes: 6
  %loadMem_401d62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d62 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d62)
  store %struct.Memory* %call_401d62, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401d68	 Bytes: 5
  %loadMem1_401d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401d68 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401d68, i64 23480, i64 5, i64 5)
  store %struct.Memory* %call1_401d68, %struct.Memory** %MEMORY

  %loadMem2_401d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401d68 = load i64, i64* %3
  %call2_401d68 = call %struct.Memory* @sub_407920._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401d68, %struct.Memory* %loadMem2_401d68)
  store %struct.Memory* %call2_401d68, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401d6d	 Bytes: 3
  %loadMem_401d6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d6d = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d6d)
  store %struct.Memory* %call_401d6d, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401d70	 Bytes: 3
  %loadMem_401d70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d70 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d70)
  store %struct.Memory* %call_401d70, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401d73	 Bytes: 4
  %loadMem_401d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d73 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d73)
  store %struct.Memory* %call_401d73, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401d77	 Bytes: 4
  %loadMem_401d77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d77 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d77)
  store %struct.Memory* %call_401d77, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401d7b	 Bytes: 3
  %loadMem_401d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d7b = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d7b)
  store %struct.Memory* %call_401d7b, %struct.Memory** %MEMORY

  ; Code: movq $0x4144d2, (%rdi)	 RIP: 401d7e	 Bytes: 7
  %loadMem_401d7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d7e = call %struct.Memory* @routine_movq__0x4144d2____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d7e)
  store %struct.Memory* %call_401d7e, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401d85	 Bytes: 7
  %loadMem_401d85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d85 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d85)
  store %struct.Memory* %call_401d85, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401d8c	 Bytes: 6
  %loadMem_401d8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d8c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d8c)
  store %struct.Memory* %call_401d8c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401d92	 Bytes: 5
  %loadMem1_401d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401d92 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401d92, i64 23646, i64 5, i64 5)
  store %struct.Memory* %call1_401d92, %struct.Memory** %MEMORY

  %loadMem2_401d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401d92 = load i64, i64* %3
  %call2_401d92 = call %struct.Memory* @sub_4079f0._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401d92, %struct.Memory* %loadMem2_401d92)
  store %struct.Memory* %call2_401d92, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401d97	 Bytes: 3
  %loadMem_401d97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d97 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d97)
  store %struct.Memory* %call_401d97, %struct.Memory** %MEMORY

  ; Code: movl $0x4144f9, %eax	 RIP: 401d9a	 Bytes: 5
  %loadMem_401d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d9a = call %struct.Memory* @routine_movl__0x4144f9___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d9a)
  store %struct.Memory* %call_401d9a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401d9f	 Bytes: 2
  %loadMem_401d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401d9f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401d9f)
  store %struct.Memory* %call_401d9f, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401da1	 Bytes: 7
  %loadMem_401da1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401da1 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401da1)
  store %struct.Memory* %call_401da1, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401da8	 Bytes: 6
  %loadMem_401da8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401da8 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401da8)
  store %struct.Memory* %call_401da8, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc	 RIP: 401dae	 Bytes: 5
  %loadMem1_401dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401dae = call %struct.Memory* @routine_callq_._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401dae, i64 23826, i64 5, i64 5)
  store %struct.Memory* %call1_401dae, %struct.Memory** %MEMORY

  %loadMem2_401dae = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401dae = load i64, i64* %3
  %call2_401dae = call %struct.Memory* @sub_407ac0._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401dae, %struct.Memory* %loadMem2_401dae)
  store %struct.Memory* %call2_401dae, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401db3	 Bytes: 3
  %loadMem_401db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401db3 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401db3)
  store %struct.Memory* %call_401db3, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401db6	 Bytes: 3
  %loadMem_401db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401db6 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401db6)
  store %struct.Memory* %call_401db6, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401db9	 Bytes: 4
  %loadMem_401db9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401db9 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401db9)
  store %struct.Memory* %call_401db9, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401dbd	 Bytes: 4
  %loadMem_401dbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dbd = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dbd)
  store %struct.Memory* %call_401dbd, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401dc1	 Bytes: 3
  %loadMem_401dc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dc1 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dc1)
  store %struct.Memory* %call_401dc1, %struct.Memory** %MEMORY

  ; Code: movq $0x414512, (%rdi)	 RIP: 401dc4	 Bytes: 7
  %loadMem_401dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dc4 = call %struct.Memory* @routine_movq__0x414512____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dc4)
  store %struct.Memory* %call_401dc4, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401dcb	 Bytes: 7
  %loadMem_401dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dcb = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dcb)
  store %struct.Memory* %call_401dcb, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401dd2	 Bytes: 6
  %loadMem_401dd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dd2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dd2)
  store %struct.Memory* %call_401dd2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401dd8	 Bytes: 5
  %loadMem1_401dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401dd8 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401dd8, i64 23944, i64 5, i64 5)
  store %struct.Memory* %call1_401dd8, %struct.Memory** %MEMORY

  %loadMem2_401dd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401dd8 = load i64, i64* %3
  %call2_401dd8 = call %struct.Memory* @sub_407b60._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401dd8, %struct.Memory* %loadMem2_401dd8)
  store %struct.Memory* %call2_401dd8, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401ddd	 Bytes: 3
  %loadMem_401ddd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ddd = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ddd)
  store %struct.Memory* %call_401ddd, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401de0	 Bytes: 3
  %loadMem_401de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401de0 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401de0)
  store %struct.Memory* %call_401de0, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401de3	 Bytes: 4
  %loadMem_401de3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401de3 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401de3)
  store %struct.Memory* %call_401de3, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401de7	 Bytes: 4
  %loadMem_401de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401de7 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401de7)
  store %struct.Memory* %call_401de7, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401deb	 Bytes: 3
  %loadMem_401deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401deb = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401deb)
  store %struct.Memory* %call_401deb, %struct.Memory** %MEMORY

  ; Code: movq $0x414535, (%rdi)	 RIP: 401dee	 Bytes: 7
  %loadMem_401dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dee = call %struct.Memory* @routine_movq__0x414535____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dee)
  store %struct.Memory* %call_401dee, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401df5	 Bytes: 7
  %loadMem_401df5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401df5 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401df5)
  store %struct.Memory* %call_401df5, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401dfc	 Bytes: 6
  %loadMem_401dfc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401dfc = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401dfc)
  store %struct.Memory* %call_401dfc, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401e02	 Bytes: 5
  %loadMem1_401e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401e02 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401e02, i64 24110, i64 5, i64 5)
  store %struct.Memory* %call1_401e02, %struct.Memory** %MEMORY

  %loadMem2_401e02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401e02 = load i64, i64* %3
  %call2_401e02 = call %struct.Memory* @sub_407c30._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401e02, %struct.Memory* %loadMem2_401e02)
  store %struct.Memory* %call2_401e02, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401e07	 Bytes: 3
  %loadMem_401e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e07 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e07)
  store %struct.Memory* %call_401e07, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401e0a	 Bytes: 3
  %loadMem_401e0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e0a = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e0a)
  store %struct.Memory* %call_401e0a, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401e0d	 Bytes: 4
  %loadMem_401e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e0d = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e0d)
  store %struct.Memory* %call_401e0d, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401e11	 Bytes: 4
  %loadMem_401e11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e11 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e11)
  store %struct.Memory* %call_401e11, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401e15	 Bytes: 3
  %loadMem_401e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e15 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e15)
  store %struct.Memory* %call_401e15, %struct.Memory** %MEMORY

  ; Code: movq $0x414559, (%rdi)	 RIP: 401e18	 Bytes: 7
  %loadMem_401e18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e18 = call %struct.Memory* @routine_movq__0x414559____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e18)
  store %struct.Memory* %call_401e18, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401e1f	 Bytes: 7
  %loadMem_401e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e1f = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e1f)
  store %struct.Memory* %call_401e1f, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401e26	 Bytes: 6
  %loadMem_401e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e26 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e26)
  store %struct.Memory* %call_401e26, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401e2c	 Bytes: 5
  %loadMem1_401e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401e2c = call %struct.Memory* @routine_callq_._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401e2c, i64 24276, i64 5, i64 5)
  store %struct.Memory* %call1_401e2c, %struct.Memory** %MEMORY

  %loadMem2_401e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401e2c = load i64, i64* %3
  %call2_401e2c = call %struct.Memory* @sub_407d00._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401e2c, %struct.Memory* %loadMem2_401e2c)
  store %struct.Memory* %call2_401e2c, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401e31	 Bytes: 3
  %loadMem_401e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e31 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e31)
  store %struct.Memory* %call_401e31, %struct.Memory** %MEMORY

  ; Code: movl $0x41457a, %eax	 RIP: 401e34	 Bytes: 5
  %loadMem_401e34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e34 = call %struct.Memory* @routine_movl__0x41457a___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e34)
  store %struct.Memory* %call_401e34, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401e39	 Bytes: 2
  %loadMem_401e39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e39 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e39)
  store %struct.Memory* %call_401e39, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401e3b	 Bytes: 7
  %loadMem_401e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e3b = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e3b)
  store %struct.Memory* %call_401e3b, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401e42	 Bytes: 6
  %loadMem_401e42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e42 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e42)
  store %struct.Memory* %call_401e42, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc	 RIP: 401e48	 Bytes: 5
  %loadMem1_401e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401e48 = call %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401e48, i64 24456, i64 5, i64 5)
  store %struct.Memory* %call1_401e48, %struct.Memory** %MEMORY

  %loadMem2_401e48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401e48 = load i64, i64* %3
  %call2_401e48 = call %struct.Memory* @sub_407dd0._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401e48, %struct.Memory* %loadMem2_401e48)
  store %struct.Memory* %call2_401e48, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401e4d	 Bytes: 3
  %loadMem_401e4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e4d = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e4d)
  store %struct.Memory* %call_401e4d, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401e50	 Bytes: 3
  %loadMem_401e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e50 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e50)
  store %struct.Memory* %call_401e50, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401e53	 Bytes: 4
  %loadMem_401e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e53 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e53)
  store %struct.Memory* %call_401e53, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401e57	 Bytes: 4
  %loadMem_401e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e57 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e57)
  store %struct.Memory* %call_401e57, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401e5b	 Bytes: 3
  %loadMem_401e5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e5b = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e5b)
  store %struct.Memory* %call_401e5b, %struct.Memory** %MEMORY

  ; Code: movq $0x414590, (%rdi)	 RIP: 401e5e	 Bytes: 7
  %loadMem_401e5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e5e = call %struct.Memory* @routine_movq__0x414590____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e5e)
  store %struct.Memory* %call_401e5e, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401e65	 Bytes: 7
  %loadMem_401e65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e65 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e65)
  store %struct.Memory* %call_401e65, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401e6c	 Bytes: 6
  %loadMem_401e6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e6c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e6c)
  store %struct.Memory* %call_401e6c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401e72	 Bytes: 5
  %loadMem1_401e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401e72 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401e72, i64 24574, i64 5, i64 5)
  store %struct.Memory* %call1_401e72, %struct.Memory** %MEMORY

  %loadMem2_401e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401e72 = load i64, i64* %3
  %call2_401e72 = call %struct.Memory* @sub_407e70._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401e72, %struct.Memory* %loadMem2_401e72)
  store %struct.Memory* %call2_401e72, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401e77	 Bytes: 3
  %loadMem_401e77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e77 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e77)
  store %struct.Memory* %call_401e77, %struct.Memory** %MEMORY

  ; Code: movl $0x4145af, %eax	 RIP: 401e7a	 Bytes: 5
  %loadMem_401e7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e7a = call %struct.Memory* @routine_movl__0x4145af___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e7a)
  store %struct.Memory* %call_401e7a, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401e7f	 Bytes: 2
  %loadMem_401e7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e7f = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e7f)
  store %struct.Memory* %call_401e7f, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401e81	 Bytes: 7
  %loadMem_401e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e81 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e81)
  store %struct.Memory* %call_401e81, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401e88	 Bytes: 6
  %loadMem_401e88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e88 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e88)
  store %struct.Memory* %call_401e88, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc	 RIP: 401e8e	 Bytes: 5
  %loadMem1_401e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401e8e = call %struct.Memory* @routine_callq_._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401e8e, i64 24754, i64 5, i64 5)
  store %struct.Memory* %call1_401e8e, %struct.Memory** %MEMORY

  %loadMem2_401e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401e8e = load i64, i64* %3
  %call2_401e8e = call %struct.Memory* @sub_407f40._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401e8e, %struct.Memory* %loadMem2_401e8e)
  store %struct.Memory* %call2_401e8e, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401e93	 Bytes: 3
  %loadMem_401e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e93 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e93)
  store %struct.Memory* %call_401e93, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401e96	 Bytes: 3
  %loadMem_401e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e96 = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e96)
  store %struct.Memory* %call_401e96, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401e99	 Bytes: 4
  %loadMem_401e99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e99 = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e99)
  store %struct.Memory* %call_401e99, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401e9d	 Bytes: 4
  %loadMem_401e9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401e9d = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401e9d)
  store %struct.Memory* %call_401e9d, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401ea1	 Bytes: 3
  %loadMem_401ea1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ea1 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ea1)
  store %struct.Memory* %call_401ea1, %struct.Memory** %MEMORY

  ; Code: movq $0x4145c4, (%rdi)	 RIP: 401ea4	 Bytes: 7
  %loadMem_401ea4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ea4 = call %struct.Memory* @routine_movq__0x4145c4____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ea4)
  store %struct.Memory* %call_401ea4, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401eab	 Bytes: 7
  %loadMem_401eab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401eab = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401eab)
  store %struct.Memory* %call_401eab, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401eb2	 Bytes: 6
  %loadMem_401eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401eb2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401eb2)
  store %struct.Memory* %call_401eb2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401eb8	 Bytes: 5
  %loadMem1_401eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401eb8 = call %struct.Memory* @routine_callq_._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401eb8, i64 24872, i64 5, i64 5)
  store %struct.Memory* %call1_401eb8, %struct.Memory** %MEMORY

  %loadMem2_401eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401eb8 = load i64, i64* %3
  %call2_401eb8 = call %struct.Memory* @sub_407fe0._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401eb8, %struct.Memory* %loadMem2_401eb8)
  store %struct.Memory* %call2_401eb8, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401ebd	 Bytes: 3
  %loadMem_401ebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ebd = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ebd)
  store %struct.Memory* %call_401ebd, %struct.Memory** %MEMORY

  ; Code: movl $0x4145e2, %eax	 RIP: 401ec0	 Bytes: 5
  %loadMem_401ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ec0 = call %struct.Memory* @routine_movl__0x4145e2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ec0)
  store %struct.Memory* %call_401ec0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401ec5	 Bytes: 2
  %loadMem_401ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ec5 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ec5)
  store %struct.Memory* %call_401ec5, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401ec7	 Bytes: 7
  %loadMem_401ec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ec7 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ec7)
  store %struct.Memory* %call_401ec7, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401ece	 Bytes: 6
  %loadMem_401ece = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ece = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ece)
  store %struct.Memory* %call_401ece, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc	 RIP: 401ed4	 Bytes: 5
  %loadMem1_401ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401ed4 = call %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401ed4, i64 25052, i64 5, i64 5)
  store %struct.Memory* %call1_401ed4, %struct.Memory** %MEMORY

  %loadMem2_401ed4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401ed4 = load i64, i64* %3
  %call2_401ed4 = call %struct.Memory* @sub_4080b0._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401ed4, %struct.Memory* %loadMem2_401ed4)
  store %struct.Memory* %call2_401ed4, %struct.Memory** %MEMORY

  ; Code: movl -0x44(%rbp), %edx	 RIP: 401ed9	 Bytes: 3
  %loadMem_401ed9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ed9 = call %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ed9)
  store %struct.Memory* %call_401ed9, %struct.Memory** %MEMORY

  ; Code: movl -0x48(%rbp), %ecx	 RIP: 401edc	 Bytes: 3
  %loadMem_401edc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401edc = call %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401edc)
  store %struct.Memory* %call_401edc, %struct.Memory** %MEMORY

  ; Code: movl -0x4c(%rbp), %r8d	 RIP: 401edf	 Bytes: 4
  %loadMem_401edf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401edf = call %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401edf)
  store %struct.Memory* %call_401edf, %struct.Memory** %MEMORY

  ; Code: movl -0x50(%rbp), %r9d	 RIP: 401ee3	 Bytes: 4
  %loadMem_401ee3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ee3 = call %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ee3)
  store %struct.Memory* %call_401ee3, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401ee7	 Bytes: 3
  %loadMem_401ee7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ee7 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ee7)
  store %struct.Memory* %call_401ee7, %struct.Memory** %MEMORY

  ; Code: movq $0x4145f8, (%rdi)	 RIP: 401eea	 Bytes: 7
  %loadMem_401eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401eea = call %struct.Memory* @routine_movq__0x4145f8____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401eea)
  store %struct.Memory* %call_401eea, %struct.Memory** %MEMORY

  ; Code: movq -0x138(%rbp), %rdi	 RIP: 401ef1	 Bytes: 7
  %loadMem_401ef1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ef1 = call %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ef1)
  store %struct.Memory* %call_401ef1, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401ef8	 Bytes: 6
  %loadMem_401ef8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ef8 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ef8)
  store %struct.Memory* %call_401ef8, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401efe	 Bytes: 5
  %loadMem1_401efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401efe = call %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401efe, i64 25170, i64 5, i64 5)
  store %struct.Memory* %call1_401efe, %struct.Memory** %MEMORY

  %loadMem2_401efe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401efe = load i64, i64* %3
  %call2_401efe = call %struct.Memory* @sub_408150._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401efe, %struct.Memory* %loadMem2_401efe)
  store %struct.Memory* %call2_401efe, %struct.Memory** %MEMORY

  ; Code: cvttsd2si 0x21817c(%rip), %rdi	 RIP: 401f03	 Bytes: 9
  %loadMem_401f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f03 = call %struct.Memory* @routine_cvttsd2si_0x21817c__rip____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f03)
  store %struct.Memory* %call_401f03, %struct.Memory** %MEMORY

  ; Code: movl %edi, %eax	 RIP: 401f0c	 Bytes: 2
  %loadMem_401f0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f0c = call %struct.Memory* @routine_movl__edi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f0c)
  store %struct.Memory* %call_401f0c, %struct.Memory** %MEMORY

  ; Code: movl $0x650bc0, %ecx	 RIP: 401f0e	 Bytes: 5
  %loadMem_401f0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f0e = call %struct.Memory* @routine_movl__0x650bc0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f0e)
  store %struct.Memory* %call_401f0e, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edi	 RIP: 401f13	 Bytes: 2
  %loadMem_401f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f13 = call %struct.Memory* @routine_movl__ecx___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f13)
  store %struct.Memory* %call_401f13, %struct.Memory** %MEMORY

  ; Code: movl $0x6588c0, %ecx	 RIP: 401f15	 Bytes: 5
  %loadMem_401f15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f15 = call %struct.Memory* @routine_movl__0x6588c0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f15)
  store %struct.Memory* %call_401f15, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %esi	 RIP: 401f1a	 Bytes: 2
  %loadMem_401f1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f1a = call %struct.Memory* @routine_movl__ecx___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f1a)
  store %struct.Memory* %call_401f1a, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x148(%rbp)	 RIP: 401f1c	 Bytes: 7
  %loadMem_401f1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f1c = call %struct.Memory* @routine_movq__rdi__MINUS0x148__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f1c)
  store %struct.Memory* %call_401f1c, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 401f23	 Bytes: 2
  %loadMem_401f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f23 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f23)
  store %struct.Memory* %call_401f23, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPjjEvT_S1_T0_	 RIP: 401f25	 Bytes: 5
  %loadMem1_401f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401f25 = call %struct.Memory* @routine_callq_._Z4fillIPjjEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401f25, i64 25339, i64 5, i64 5)
  store %struct.Memory* %call1_401f25, %struct.Memory** %MEMORY

  %loadMem2_401f25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401f25 = load i64, i64* %3
  %call2_401f25 = call %struct.Memory* @sub_408220._Z4fillIPjjEvT_S1_T0_(%struct.State* %0, i64  %loadPC_401f25, %struct.Memory* %loadMem2_401f25)
  store %struct.Memory* %call2_401f25, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %rsi	 RIP: 401f2a	 Bytes: 6
  %loadMem_401f2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f2a = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f2a)
  store %struct.Memory* %call_401f2a, %struct.Memory** %MEMORY

  ; Code: movl %esi, %eax	 RIP: 401f30	 Bytes: 2
  %loadMem_401f30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f30 = call %struct.Memory* @routine_movl__esi___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f30)
  store %struct.Memory* %call_401f30, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x54(%rbp)	 RIP: 401f32	 Bytes: 3
  %loadMem_401f32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f32 = call %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f32)
  store %struct.Memory* %call_401f32, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 401f35	 Bytes: 3
  %loadMem_401f35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f35 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f35)
  store %struct.Memory* %call_401f35, %struct.Memory** %MEMORY

  ; Code: addl %eax, %eax	 RIP: 401f38	 Bytes: 2
  %loadMem_401f38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f38 = call %struct.Memory* @routine_addl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f38)
  store %struct.Memory* %call_401f38, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 401f3a	 Bytes: 3
  %loadMem_401f3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f3a = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f3a)
  store %struct.Memory* %call_401f3a, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 401f3d	 Bytes: 3
  %loadMem_401f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f3d = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f3d)
  store %struct.Memory* %call_401f3d, %struct.Memory** %MEMORY

  ; Code: addl $0x2, %eax	 RIP: 401f40	 Bytes: 3
  %loadMem_401f40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f40 = call %struct.Memory* @routine_addl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f40)
  store %struct.Memory* %call_401f40, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c(%rbp)	 RIP: 401f43	 Bytes: 3
  %loadMem_401f43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f43 = call %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f43)
  store %struct.Memory* %call_401f43, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %eax	 RIP: 401f46	 Bytes: 3
  %loadMem_401f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f46 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f46)
  store %struct.Memory* %call_401f46, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 401f49	 Bytes: 3
  %loadMem_401f49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f49 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f49)
  store %struct.Memory* %call_401f49, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edx	 RIP: 401f4c	 Bytes: 3
  %loadMem_401f4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f4c = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f4c)
  store %struct.Memory* %call_401f4c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x14c(%rbp)	 RIP: 401f4f	 Bytes: 6
  %loadMem_401f4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f4f = call %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f4f)
  store %struct.Memory* %call_401f4f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %eax	 RIP: 401f55	 Bytes: 2
  %loadMem_401f55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f55 = call %struct.Memory* @routine_movl__ecx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f55)
  store %struct.Memory* %call_401f55, %struct.Memory** %MEMORY

  ; Code: movl -0x10c(%rbp), %ecx	 RIP: 401f57	 Bytes: 6
  %loadMem_401f57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f57 = call %struct.Memory* @routine_movl_MINUS0x10c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f57)
  store %struct.Memory* %call_401f57, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x150(%rbp)	 RIP: 401f5d	 Bytes: 6
  %loadMem_401f5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f5d = call %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f5d)
  store %struct.Memory* %call_401f5d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 401f63	 Bytes: 2
  %loadMem_401f63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f63 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f63)
  store %struct.Memory* %call_401f63, %struct.Memory** %MEMORY

  ; Code: movl -0x150(%rbp), %r8d	 RIP: 401f65	 Bytes: 7
  %loadMem_401f65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f65 = call %struct.Memory* @routine_movl_MINUS0x150__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f65)
  store %struct.Memory* %call_401f65, %struct.Memory** %MEMORY

  ; Code: divl %r8d	 RIP: 401f6c	 Bytes: 3
  %loadMem_401f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f6c = call %struct.Memory* @routine_divl__r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f6c)
  store %struct.Memory* %call_401f6c, %struct.Memory** %MEMORY

  ; Code: movl -0x14c(%rbp), %edx	 RIP: 401f6f	 Bytes: 6
  %loadMem_401f6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f6f = call %struct.Memory* @routine_movl_MINUS0x14c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f6f)
  store %struct.Memory* %call_401f6f, %struct.Memory** %MEMORY

  ; Code: addl %eax, %edx	 RIP: 401f75	 Bytes: 2
  %loadMem_401f75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f75 = call %struct.Memory* @routine_addl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f75)
  store %struct.Memory* %call_401f75, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0x60(%rbp)	 RIP: 401f77	 Bytes: 3
  %loadMem_401f77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f77 = call %struct.Memory* @routine_movl__edx__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f77)
  store %struct.Memory* %call_401f77, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 401f7a	 Bytes: 3
  %loadMem_401f7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f7a = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f7a)
  store %struct.Memory* %call_401f7a, %struct.Memory** %MEMORY

  ; Code: movl $0x4143fc, %eax	 RIP: 401f7d	 Bytes: 5
  %loadMem_401f7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f7d = call %struct.Memory* @routine_movl__0x4143fc___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f7d)
  store %struct.Memory* %call_401f7d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401f82	 Bytes: 2
  %loadMem_401f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f82 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f82)
  store %struct.Memory* %call_401f82, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 401f84	 Bytes: 7
  %loadMem_401f84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f84 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f84)
  store %struct.Memory* %call_401f84, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401f8b	 Bytes: 6
  %loadMem_401f8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f8b = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f8b)
  store %struct.Memory* %call_401f8b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc	 RIP: 401f91	 Bytes: 5
  %loadMem1_401f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401f91 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401f91, i64 25295, i64 5, i64 5)
  store %struct.Memory* %call1_401f91, %struct.Memory** %MEMORY

  %loadMem2_401f91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401f91 = load i64, i64* %3
  %call2_401f91 = call %struct.Memory* @sub_408260._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401f91, %struct.Memory* %loadMem2_401f91)
  store %struct.Memory* %call2_401f91, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 401f96	 Bytes: 3
  %loadMem_401f96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f96 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f96)
  store %struct.Memory* %call_401f96, %struct.Memory** %MEMORY

  ; Code: movl $0x414412, %eax	 RIP: 401f99	 Bytes: 5
  %loadMem_401f99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f99 = call %struct.Memory* @routine_movl__0x414412___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f99)
  store %struct.Memory* %call_401f99, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401f9e	 Bytes: 2
  %loadMem_401f9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401f9e = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401f9e)
  store %struct.Memory* %call_401f9e, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 401fa0	 Bytes: 7
  %loadMem_401fa0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fa0 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fa0)
  store %struct.Memory* %call_401fa0, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401fa7	 Bytes: 6
  %loadMem_401fa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fa7 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fa7)
  store %struct.Memory* %call_401fa7, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc	 RIP: 401fad	 Bytes: 5
  %loadMem1_401fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401fad = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401fad, i64 25427, i64 5, i64 5)
  store %struct.Memory* %call1_401fad, %struct.Memory** %MEMORY

  %loadMem2_401fad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401fad = load i64, i64* %3
  %call2_401fad = call %struct.Memory* @sub_408300._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401fad, %struct.Memory* %loadMem2_401fad)
  store %struct.Memory* %call2_401fad, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 401fb2	 Bytes: 3
  %loadMem_401fb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fb2 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fb2)
  store %struct.Memory* %call_401fb2, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 401fb5	 Bytes: 3
  %loadMem_401fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fb5 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fb5)
  store %struct.Memory* %call_401fb5, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 401fb8	 Bytes: 4
  %loadMem_401fb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fb8 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fb8)
  store %struct.Memory* %call_401fb8, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 401fbc	 Bytes: 4
  %loadMem_401fbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fbc = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fbc)
  store %struct.Memory* %call_401fbc, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 401fc0	 Bytes: 3
  %loadMem_401fc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fc0 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fc0)
  store %struct.Memory* %call_401fc0, %struct.Memory** %MEMORY

  ; Code: movq $0x414430, (%rdi)	 RIP: 401fc3	 Bytes: 7
  %loadMem_401fc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fc3 = call %struct.Memory* @routine_movq__0x414430____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fc3)
  store %struct.Memory* %call_401fc3, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 401fca	 Bytes: 7
  %loadMem_401fca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fca = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fca)
  store %struct.Memory* %call_401fca, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401fd1	 Bytes: 6
  %loadMem_401fd1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fd1 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fd1)
  store %struct.Memory* %call_401fd1, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 401fd7	 Bytes: 5
  %loadMem1_401fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401fd7 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401fd7, i64 25561, i64 5, i64 5)
  store %struct.Memory* %call1_401fd7, %struct.Memory** %MEMORY

  %loadMem2_401fd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401fd7 = load i64, i64* %3
  %call2_401fd7 = call %struct.Memory* @sub_4083b0._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_401fd7, %struct.Memory* %loadMem2_401fd7)
  store %struct.Memory* %call2_401fd7, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 401fdc	 Bytes: 3
  %loadMem_401fdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fdc = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fdc)
  store %struct.Memory* %call_401fdc, %struct.Memory** %MEMORY

  ; Code: movl $0x414450, %eax	 RIP: 401fdf	 Bytes: 5
  %loadMem_401fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fdf = call %struct.Memory* @routine_movl__0x414450___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fdf)
  store %struct.Memory* %call_401fdf, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 401fe4	 Bytes: 2
  %loadMem_401fe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fe4 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fe4)
  store %struct.Memory* %call_401fe4, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 401fe6	 Bytes: 7
  %loadMem_401fe6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fe6 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fe6)
  store %struct.Memory* %call_401fe6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 401fed	 Bytes: 6
  %loadMem_401fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401fed = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401fed)
  store %struct.Memory* %call_401fed, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc	 RIP: 401ff3	 Bytes: 5
  %loadMem1_401ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_401ff3 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_401ff3, i64 25741, i64 5, i64 5)
  store %struct.Memory* %call1_401ff3, %struct.Memory** %MEMORY

  %loadMem2_401ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_401ff3 = load i64, i64* %3
  %call2_401ff3 = call %struct.Memory* @sub_408480._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_401ff3, %struct.Memory* %loadMem2_401ff3)
  store %struct.Memory* %call2_401ff3, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 401ff8	 Bytes: 3
  %loadMem_401ff8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ff8 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ff8)
  store %struct.Memory* %call_401ff8, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 401ffb	 Bytes: 3
  %loadMem_401ffb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ffb = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ffb)
  store %struct.Memory* %call_401ffb, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 401ffe	 Bytes: 4
  %loadMem_401ffe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_401ffe = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_401ffe)
  store %struct.Memory* %call_401ffe, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 402002	 Bytes: 4
  %loadMem_402002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402002 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402002)
  store %struct.Memory* %call_402002, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 402006	 Bytes: 3
  %loadMem_402006 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402006 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402006)
  store %struct.Memory* %call_402006, %struct.Memory** %MEMORY

  ; Code: movq $0x41446b, (%rdi)	 RIP: 402009	 Bytes: 7
  %loadMem_402009 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402009 = call %struct.Memory* @routine_movq__0x41446b____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402009)
  store %struct.Memory* %call_402009, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 402010	 Bytes: 7
  %loadMem_402010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402010 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402010)
  store %struct.Memory* %call_402010, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402017	 Bytes: 6
  %loadMem_402017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402017 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402017)
  store %struct.Memory* %call_402017, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40201d	 Bytes: 5
  %loadMem1_40201d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40201d = call %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40201d, i64 25859, i64 5, i64 5)
  store %struct.Memory* %call1_40201d, %struct.Memory** %MEMORY

  %loadMem2_40201d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40201d = load i64, i64* %3
  %call2_40201d = call %struct.Memory* @sub_408520._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40201d, %struct.Memory* %loadMem2_40201d)
  store %struct.Memory* %call2_40201d, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402022	 Bytes: 3
  %loadMem_402022 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402022 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402022)
  store %struct.Memory* %call_402022, %struct.Memory** %MEMORY

  ; Code: movl $0x414490, %eax	 RIP: 402025	 Bytes: 5
  %loadMem_402025 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402025 = call %struct.Memory* @routine_movl__0x414490___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402025)
  store %struct.Memory* %call_402025, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40202a	 Bytes: 2
  %loadMem_40202a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40202a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40202a)
  store %struct.Memory* %call_40202a, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 40202c	 Bytes: 7
  %loadMem_40202c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40202c = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40202c)
  store %struct.Memory* %call_40202c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402033	 Bytes: 6
  %loadMem_402033 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402033 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402033)
  store %struct.Memory* %call_402033, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc	 RIP: 402039	 Bytes: 5
  %loadMem1_402039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402039 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402039, i64 26039, i64 5, i64 5)
  store %struct.Memory* %call1_402039, %struct.Memory** %MEMORY

  %loadMem2_402039 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402039 = load i64, i64* %3
  %call2_402039 = call %struct.Memory* @sub_4085f0._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402039, %struct.Memory* %loadMem2_402039)
  store %struct.Memory* %call2_402039, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 40203e	 Bytes: 3
  %loadMem_40203e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40203e = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40203e)
  store %struct.Memory* %call_40203e, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 402041	 Bytes: 3
  %loadMem_402041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402041 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402041)
  store %struct.Memory* %call_402041, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 402044	 Bytes: 4
  %loadMem_402044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402044 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402044)
  store %struct.Memory* %call_402044, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 402048	 Bytes: 4
  %loadMem_402048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402048 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402048)
  store %struct.Memory* %call_402048, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40204c	 Bytes: 3
  %loadMem_40204c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40204c = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40204c)
  store %struct.Memory* %call_40204c, %struct.Memory** %MEMORY

  ; Code: movq $0x4144ab, (%rdi)	 RIP: 40204f	 Bytes: 7
  %loadMem_40204f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40204f = call %struct.Memory* @routine_movq__0x4144ab____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40204f)
  store %struct.Memory* %call_40204f, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 402056	 Bytes: 7
  %loadMem_402056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402056 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402056)
  store %struct.Memory* %call_402056, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40205d	 Bytes: 6
  %loadMem_40205d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40205d = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40205d)
  store %struct.Memory* %call_40205d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402063	 Bytes: 5
  %loadMem1_402063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402063 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402063, i64 26157, i64 5, i64 5)
  store %struct.Memory* %call1_402063, %struct.Memory** %MEMORY

  %loadMem2_402063 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402063 = load i64, i64* %3
  %call2_402063 = call %struct.Memory* @sub_408690._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402063, %struct.Memory* %loadMem2_402063)
  store %struct.Memory* %call2_402063, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402068	 Bytes: 3
  %loadMem_402068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402068 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402068)
  store %struct.Memory* %call_402068, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 40206b	 Bytes: 3
  %loadMem_40206b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40206b = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40206b)
  store %struct.Memory* %call_40206b, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 40206e	 Bytes: 4
  %loadMem_40206e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40206e = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40206e)
  store %struct.Memory* %call_40206e, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 402072	 Bytes: 4
  %loadMem_402072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402072 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402072)
  store %struct.Memory* %call_402072, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 402076	 Bytes: 3
  %loadMem_402076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402076 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402076)
  store %struct.Memory* %call_402076, %struct.Memory** %MEMORY

  ; Code: movq $0x4144d1, (%rdi)	 RIP: 402079	 Bytes: 7
  %loadMem_402079 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402079 = call %struct.Memory* @routine_movq__0x4144d1____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402079)
  store %struct.Memory* %call_402079, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 402080	 Bytes: 7
  %loadMem_402080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402080 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402080)
  store %struct.Memory* %call_402080, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402087	 Bytes: 6
  %loadMem_402087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402087 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402087)
  store %struct.Memory* %call_402087, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40208d	 Bytes: 5
  %loadMem1_40208d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40208d = call %struct.Memory* @routine_callq_._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40208d, i64 26323, i64 5, i64 5)
  store %struct.Memory* %call1_40208d, %struct.Memory** %MEMORY

  %loadMem2_40208d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40208d = load i64, i64* %3
  %call2_40208d = call %struct.Memory* @sub_408760._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40208d, %struct.Memory* %loadMem2_40208d)
  store %struct.Memory* %call2_40208d, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402092	 Bytes: 3
  %loadMem_402092 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402092 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402092)
  store %struct.Memory* %call_402092, %struct.Memory** %MEMORY

  ; Code: movl $0x4144f8, %eax	 RIP: 402095	 Bytes: 5
  %loadMem_402095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402095 = call %struct.Memory* @routine_movl__0x4144f8___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402095)
  store %struct.Memory* %call_402095, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40209a	 Bytes: 2
  %loadMem_40209a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40209a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40209a)
  store %struct.Memory* %call_40209a, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 40209c	 Bytes: 7
  %loadMem_40209c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40209c = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40209c)
  store %struct.Memory* %call_40209c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4020a3	 Bytes: 6
  %loadMem_4020a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020a3 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020a3)
  store %struct.Memory* %call_4020a3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc	 RIP: 4020a9	 Bytes: 5
  %loadMem1_4020a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4020a9 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4020a9, i64 26503, i64 5, i64 5)
  store %struct.Memory* %call1_4020a9, %struct.Memory** %MEMORY

  %loadMem2_4020a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4020a9 = load i64, i64* %3
  %call2_4020a9 = call %struct.Memory* @sub_408830._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4020a9, %struct.Memory* %loadMem2_4020a9)
  store %struct.Memory* %call2_4020a9, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 4020ae	 Bytes: 3
  %loadMem_4020ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020ae = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020ae)
  store %struct.Memory* %call_4020ae, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 4020b1	 Bytes: 3
  %loadMem_4020b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020b1 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020b1)
  store %struct.Memory* %call_4020b1, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 4020b4	 Bytes: 4
  %loadMem_4020b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020b4 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020b4)
  store %struct.Memory* %call_4020b4, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 4020b8	 Bytes: 4
  %loadMem_4020b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020b8 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020b8)
  store %struct.Memory* %call_4020b8, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4020bc	 Bytes: 3
  %loadMem_4020bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020bc = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020bc)
  store %struct.Memory* %call_4020bc, %struct.Memory** %MEMORY

  ; Code: movq $0x414511, (%rdi)	 RIP: 4020bf	 Bytes: 7
  %loadMem_4020bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020bf = call %struct.Memory* @routine_movq__0x414511____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020bf)
  store %struct.Memory* %call_4020bf, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 4020c6	 Bytes: 7
  %loadMem_4020c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020c6 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020c6)
  store %struct.Memory* %call_4020c6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4020cd	 Bytes: 6
  %loadMem_4020cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020cd = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020cd)
  store %struct.Memory* %call_4020cd, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4020d3	 Bytes: 5
  %loadMem1_4020d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4020d3 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4020d3, i64 26621, i64 5, i64 5)
  store %struct.Memory* %call1_4020d3, %struct.Memory** %MEMORY

  %loadMem2_4020d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4020d3 = load i64, i64* %3
  %call2_4020d3 = call %struct.Memory* @sub_4088d0._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4020d3, %struct.Memory* %loadMem2_4020d3)
  store %struct.Memory* %call2_4020d3, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 4020d8	 Bytes: 3
  %loadMem_4020d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020d8 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020d8)
  store %struct.Memory* %call_4020d8, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 4020db	 Bytes: 3
  %loadMem_4020db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020db = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020db)
  store %struct.Memory* %call_4020db, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 4020de	 Bytes: 4
  %loadMem_4020de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020de = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020de)
  store %struct.Memory* %call_4020de, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 4020e2	 Bytes: 4
  %loadMem_4020e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020e2 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020e2)
  store %struct.Memory* %call_4020e2, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4020e6	 Bytes: 3
  %loadMem_4020e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020e6 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020e6)
  store %struct.Memory* %call_4020e6, %struct.Memory** %MEMORY

  ; Code: movq $0x414534, (%rdi)	 RIP: 4020e9	 Bytes: 7
  %loadMem_4020e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020e9 = call %struct.Memory* @routine_movq__0x414534____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020e9)
  store %struct.Memory* %call_4020e9, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 4020f0	 Bytes: 7
  %loadMem_4020f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020f0 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020f0)
  store %struct.Memory* %call_4020f0, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4020f7	 Bytes: 6
  %loadMem_4020f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4020f7 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4020f7)
  store %struct.Memory* %call_4020f7, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4020fd	 Bytes: 5
  %loadMem1_4020fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4020fd = call %struct.Memory* @routine_callq_._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4020fd, i64 26787, i64 5, i64 5)
  store %struct.Memory* %call1_4020fd, %struct.Memory** %MEMORY

  %loadMem2_4020fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4020fd = load i64, i64* %3
  %call2_4020fd = call %struct.Memory* @sub_4089a0._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4020fd, %struct.Memory* %loadMem2_4020fd)
  store %struct.Memory* %call2_4020fd, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402102	 Bytes: 3
  %loadMem_402102 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402102 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402102)
  store %struct.Memory* %call_402102, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 402105	 Bytes: 3
  %loadMem_402105 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402105 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402105)
  store %struct.Memory* %call_402105, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 402108	 Bytes: 4
  %loadMem_402108 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402108 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402108)
  store %struct.Memory* %call_402108, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 40210c	 Bytes: 4
  %loadMem_40210c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40210c = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40210c)
  store %struct.Memory* %call_40210c, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 402110	 Bytes: 3
  %loadMem_402110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402110 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402110)
  store %struct.Memory* %call_402110, %struct.Memory** %MEMORY

  ; Code: movq $0x414558, (%rdi)	 RIP: 402113	 Bytes: 7
  %loadMem_402113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402113 = call %struct.Memory* @routine_movq__0x414558____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402113)
  store %struct.Memory* %call_402113, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 40211a	 Bytes: 7
  %loadMem_40211a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40211a = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40211a)
  store %struct.Memory* %call_40211a, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402121	 Bytes: 6
  %loadMem_402121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402121 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402121)
  store %struct.Memory* %call_402121, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402127	 Bytes: 5
  %loadMem1_402127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402127 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402127, i64 26953, i64 5, i64 5)
  store %struct.Memory* %call1_402127, %struct.Memory** %MEMORY

  %loadMem2_402127 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402127 = load i64, i64* %3
  %call2_402127 = call %struct.Memory* @sub_408a70._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402127, %struct.Memory* %loadMem2_402127)
  store %struct.Memory* %call2_402127, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 40212c	 Bytes: 3
  %loadMem_40212c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40212c = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40212c)
  store %struct.Memory* %call_40212c, %struct.Memory** %MEMORY

  ; Code: movl $0x414579, %eax	 RIP: 40212f	 Bytes: 5
  %loadMem_40212f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40212f = call %struct.Memory* @routine_movl__0x414579___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40212f)
  store %struct.Memory* %call_40212f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 402134	 Bytes: 2
  %loadMem_402134 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402134 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402134)
  store %struct.Memory* %call_402134, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 402136	 Bytes: 7
  %loadMem_402136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402136 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402136)
  store %struct.Memory* %call_402136, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40213d	 Bytes: 6
  %loadMem_40213d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40213d = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40213d)
  store %struct.Memory* %call_40213d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc	 RIP: 402143	 Bytes: 5
  %loadMem1_402143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402143 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402143, i64 27133, i64 5, i64 5)
  store %struct.Memory* %call1_402143, %struct.Memory** %MEMORY

  %loadMem2_402143 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402143 = load i64, i64* %3
  %call2_402143 = call %struct.Memory* @sub_408b40._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402143, %struct.Memory* %loadMem2_402143)
  store %struct.Memory* %call2_402143, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402148	 Bytes: 3
  %loadMem_402148 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402148 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402148)
  store %struct.Memory* %call_402148, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 40214b	 Bytes: 3
  %loadMem_40214b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40214b = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40214b)
  store %struct.Memory* %call_40214b, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 40214e	 Bytes: 4
  %loadMem_40214e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40214e = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40214e)
  store %struct.Memory* %call_40214e, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 402152	 Bytes: 4
  %loadMem_402152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402152 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402152)
  store %struct.Memory* %call_402152, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 402156	 Bytes: 3
  %loadMem_402156 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402156 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402156)
  store %struct.Memory* %call_402156, %struct.Memory** %MEMORY

  ; Code: movq $0x41458f, (%rdi)	 RIP: 402159	 Bytes: 7
  %loadMem_402159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402159 = call %struct.Memory* @routine_movq__0x41458f____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402159)
  store %struct.Memory* %call_402159, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 402160	 Bytes: 7
  %loadMem_402160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402160 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402160)
  store %struct.Memory* %call_402160, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402167	 Bytes: 6
  %loadMem_402167 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402167 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402167)
  store %struct.Memory* %call_402167, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40216d	 Bytes: 5
  %loadMem1_40216d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40216d = call %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40216d, i64 27251, i64 5, i64 5)
  store %struct.Memory* %call1_40216d, %struct.Memory** %MEMORY

  %loadMem2_40216d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40216d = load i64, i64* %3
  %call2_40216d = call %struct.Memory* @sub_408be0._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40216d, %struct.Memory* %loadMem2_40216d)
  store %struct.Memory* %call2_40216d, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 402172	 Bytes: 3
  %loadMem_402172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402172 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402172)
  store %struct.Memory* %call_402172, %struct.Memory** %MEMORY

  ; Code: movl $0x4145ae, %eax	 RIP: 402175	 Bytes: 5
  %loadMem_402175 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402175 = call %struct.Memory* @routine_movl__0x4145ae___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402175)
  store %struct.Memory* %call_402175, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 40217a	 Bytes: 2
  %loadMem_40217a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40217a = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40217a)
  store %struct.Memory* %call_40217a, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 40217c	 Bytes: 7
  %loadMem_40217c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40217c = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40217c)
  store %struct.Memory* %call_40217c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402183	 Bytes: 6
  %loadMem_402183 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402183 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402183)
  store %struct.Memory* %call_402183, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc	 RIP: 402189	 Bytes: 5
  %loadMem1_402189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402189 = call %struct.Memory* @routine_callq_._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402189, i64 27431, i64 5, i64 5)
  store %struct.Memory* %call1_402189, %struct.Memory** %MEMORY

  %loadMem2_402189 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402189 = load i64, i64* %3
  %call2_402189 = call %struct.Memory* @sub_408cb0._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402189, %struct.Memory* %loadMem2_402189)
  store %struct.Memory* %call2_402189, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 40218e	 Bytes: 3
  %loadMem_40218e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40218e = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40218e)
  store %struct.Memory* %call_40218e, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 402191	 Bytes: 3
  %loadMem_402191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402191 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402191)
  store %struct.Memory* %call_402191, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 402194	 Bytes: 4
  %loadMem_402194 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402194 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402194)
  store %struct.Memory* %call_402194, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 402198	 Bytes: 4
  %loadMem_402198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402198 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402198)
  store %struct.Memory* %call_402198, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 40219c	 Bytes: 3
  %loadMem_40219c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40219c = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40219c)
  store %struct.Memory* %call_40219c, %struct.Memory** %MEMORY

  ; Code: movq $0x4145c3, (%rdi)	 RIP: 40219f	 Bytes: 7
  %loadMem_40219f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40219f = call %struct.Memory* @routine_movq__0x4145c3____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40219f)
  store %struct.Memory* %call_40219f, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 4021a6	 Bytes: 7
  %loadMem_4021a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021a6 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021a6)
  store %struct.Memory* %call_4021a6, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4021ad	 Bytes: 6
  %loadMem_4021ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021ad = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021ad)
  store %struct.Memory* %call_4021ad, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4021b3	 Bytes: 5
  %loadMem1_4021b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4021b3 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4021b3, i64 27549, i64 5, i64 5)
  store %struct.Memory* %call1_4021b3, %struct.Memory** %MEMORY

  %loadMem2_4021b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4021b3 = load i64, i64* %3
  %call2_4021b3 = call %struct.Memory* @sub_408d50._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4021b3, %struct.Memory* %loadMem2_4021b3)
  store %struct.Memory* %call2_4021b3, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 4021b8	 Bytes: 3
  %loadMem_4021b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021b8 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021b8)
  store %struct.Memory* %call_4021b8, %struct.Memory** %MEMORY

  ; Code: movl $0x4145e1, %eax	 RIP: 4021bb	 Bytes: 5
  %loadMem_4021bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021bb = call %struct.Memory* @routine_movl__0x4145e1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021bb)
  store %struct.Memory* %call_4021bb, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4021c0	 Bytes: 2
  %loadMem_4021c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021c0 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021c0)
  store %struct.Memory* %call_4021c0, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 4021c2	 Bytes: 7
  %loadMem_4021c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021c2 = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021c2)
  store %struct.Memory* %call_4021c2, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4021c9	 Bytes: 6
  %loadMem_4021c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021c9 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021c9)
  store %struct.Memory* %call_4021c9, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc	 RIP: 4021cf	 Bytes: 5
  %loadMem1_4021cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4021cf = call %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4021cf, i64 27729, i64 5, i64 5)
  store %struct.Memory* %call1_4021cf, %struct.Memory** %MEMORY

  %loadMem2_4021cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4021cf = load i64, i64* %3
  %call2_4021cf = call %struct.Memory* @sub_408e20._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4021cf, %struct.Memory* %loadMem2_4021cf)
  store %struct.Memory* %call2_4021cf, %struct.Memory** %MEMORY

  ; Code: movl -0x54(%rbp), %edx	 RIP: 4021d4	 Bytes: 3
  %loadMem_4021d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021d4 = call %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021d4)
  store %struct.Memory* %call_4021d4, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ecx	 RIP: 4021d7	 Bytes: 3
  %loadMem_4021d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021d7 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021d7)
  store %struct.Memory* %call_4021d7, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %r8d	 RIP: 4021da	 Bytes: 4
  %loadMem_4021da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021da = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021da)
  store %struct.Memory* %call_4021da, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %r9d	 RIP: 4021de	 Bytes: 4
  %loadMem_4021de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021de = call %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021de)
  store %struct.Memory* %call_4021de, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rdi	 RIP: 4021e2	 Bytes: 3
  %loadMem_4021e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021e2 = call %struct.Memory* @routine_movq__rsp___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021e2)
  store %struct.Memory* %call_4021e2, %struct.Memory** %MEMORY

  ; Code: movq $0x4145f7, (%rdi)	 RIP: 4021e5	 Bytes: 7
  %loadMem_4021e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021e5 = call %struct.Memory* @routine_movq__0x4145f7____rdi_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021e5)
  store %struct.Memory* %call_4021e5, %struct.Memory** %MEMORY

  ; Code: movq -0x148(%rbp), %rdi	 RIP: 4021ec	 Bytes: 7
  %loadMem_4021ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021ec = call %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021ec)
  store %struct.Memory* %call_4021ec, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4021f3	 Bytes: 6
  %loadMem_4021f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021f3 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021f3)
  store %struct.Memory* %call_4021f3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4021f9	 Bytes: 5
  %loadMem1_4021f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4021f9 = call %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4021f9, i64 27847, i64 5, i64 5)
  store %struct.Memory* %call1_4021f9, %struct.Memory** %MEMORY

  %loadMem2_4021f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4021f9 = load i64, i64* %3
  %call2_4021f9 = call %struct.Memory* @sub_408ec0._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4021f9, %struct.Memory* %loadMem2_4021f9)
  store %struct.Memory* %call2_4021f9, %struct.Memory** %MEMORY

  ; Code: movsd 0x217e82(%rip), %xmm0	 RIP: 4021fe	 Bytes: 8
  %loadMem_4021fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4021fe = call %struct.Memory* @routine_movsd_0x217e82__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4021fe)
  store %struct.Memory* %call_4021fe, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %rdx	 RIP: 402206	 Bytes: 5
  %loadMem_402206 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402206 = call %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402206)
  store %struct.Memory* %call_402206, %struct.Memory** %MEMORY

  ; Code: movl $0x6411c0, %eax	 RIP: 40220b	 Bytes: 5
  %loadMem_40220b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40220b = call %struct.Memory* @routine_movl__0x6411c0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40220b)
  store %struct.Memory* %call_40220b, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edi	 RIP: 402210	 Bytes: 2
  %loadMem_402210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402210 = call %struct.Memory* @routine_movl__eax___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402210)
  store %struct.Memory* %call_402210, %struct.Memory** %MEMORY

  ; Code: movl $0x650bc0, %eax	 RIP: 402212	 Bytes: 5
  %loadMem_402212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402212 = call %struct.Memory* @routine_movl__0x650bc0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402212)
  store %struct.Memory* %call_402212, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 402217	 Bytes: 2
  %loadMem_402217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402217 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402217)
  store %struct.Memory* %call_402217, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0x158(%rbp)	 RIP: 402219	 Bytes: 7
  %loadMem_402219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402219 = call %struct.Memory* @routine_movq__rdi__MINUS0x158__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402219)
  store %struct.Memory* %call_402219, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPllEvT_S1_T0_	 RIP: 402220	 Bytes: 5
  %loadMem1_402220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402220 = call %struct.Memory* @routine_callq_._Z4fillIPllEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402220, i64 28016, i64 5, i64 5)
  store %struct.Memory* %call1_402220, %struct.Memory** %MEMORY

  %loadMem2_402220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402220 = load i64, i64* %3
  %call2_402220 = call %struct.Memory* @sub_408f90._Z4fillIPllEvT_S1_T0_(%struct.State* %0, i64  %loadPC_402220, %struct.Memory* %loadMem2_402220)
  store %struct.Memory* %call2_402220, %struct.Memory** %MEMORY

  ; Code: cvttsd2si -0x28(%rbp), %rdx	 RIP: 402225	 Bytes: 6
  %loadMem_402225 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402225 = call %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402225)
  store %struct.Memory* %call_402225, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x68(%rbp)	 RIP: 40222b	 Bytes: 4
  %loadMem_40222b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40222b = call %struct.Memory* @routine_movq__rdx__MINUS0x68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40222b)
  store %struct.Memory* %call_40222b, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40222f	 Bytes: 4
  %loadMem_40222f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40222f = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40222f)
  store %struct.Memory* %call_40222f, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rdx	 RIP: 402233	 Bytes: 3
  %loadMem_402233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402233 = call %struct.Memory* @routine_addq__rdx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402233)
  store %struct.Memory* %call_402233, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x70(%rbp)	 RIP: 402236	 Bytes: 4
  %loadMem_402236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402236 = call %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402236)
  store %struct.Memory* %call_402236, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40223a	 Bytes: 4
  %loadMem_40223a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40223a = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40223a)
  store %struct.Memory* %call_40223a, %struct.Memory** %MEMORY

  ; Code: addq $0x2, %rdx	 RIP: 40223e	 Bytes: 4
  %loadMem_40223e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40223e = call %struct.Memory* @routine_addq__0x2___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40223e)
  store %struct.Memory* %call_40223e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x78(%rbp)	 RIP: 402242	 Bytes: 4
  %loadMem_402242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402242 = call %struct.Memory* @routine_movq__rdx__MINUS0x78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402242)
  store %struct.Memory* %call_402242, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402246	 Bytes: 4
  %loadMem_402246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402246 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402246)
  store %struct.Memory* %call_402246, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rax	 RIP: 40224a	 Bytes: 4
  %loadMem_40224a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40224a = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40224a)
  store %struct.Memory* %call_40224a, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %rsi	 RIP: 40224e	 Bytes: 4
  %loadMem_40224e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40224e = call %struct.Memory* @routine_movq_MINUS0x78__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40224e)
  store %struct.Memory* %call_40224e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x160(%rbp)	 RIP: 402252	 Bytes: 7
  %loadMem_402252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402252 = call %struct.Memory* @routine_movq__rdx__MINUS0x160__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402252)
  store %struct.Memory* %call_402252, %struct.Memory** %MEMORY

  ; Code: cqto	 RIP: 402259	 Bytes: 2
  %loadMem_402259 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402259 = call %struct.Memory* @routine_cqto(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402259)
  store %struct.Memory* %call_402259, %struct.Memory** %MEMORY

  ; Code: idivq %rsi	 RIP: 40225b	 Bytes: 3
  %loadMem_40225b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40225b = call %struct.Memory* @routine_idivq__rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40225b)
  store %struct.Memory* %call_40225b, %struct.Memory** %MEMORY

  ; Code: movq -0x160(%rbp), %rdx	 RIP: 40225e	 Bytes: 7
  %loadMem_40225e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40225e = call %struct.Memory* @routine_movq_MINUS0x160__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40225e)
  store %struct.Memory* %call_40225e, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rdx	 RIP: 402265	 Bytes: 3
  %loadMem_402265 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402265 = call %struct.Memory* @routine_addq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402265)
  store %struct.Memory* %call_402265, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x80(%rbp)	 RIP: 402268	 Bytes: 4
  %loadMem_402268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402268 = call %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402268)
  store %struct.Memory* %call_402268, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40226c	 Bytes: 4
  %loadMem_40226c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40226c = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40226c)
  store %struct.Memory* %call_40226c, %struct.Memory** %MEMORY

  ; Code: movl $0x414617, %ecx	 RIP: 402270	 Bytes: 5
  %loadMem_402270 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402270 = call %struct.Memory* @routine_movl__0x414617___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402270)
  store %struct.Memory* %call_402270, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402275	 Bytes: 7
  %loadMem_402275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402275 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402275)
  store %struct.Memory* %call_402275, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40227c	 Bytes: 6
  %loadMem_40227c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40227c = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40227c)
  store %struct.Memory* %call_40227c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc	 RIP: 402282	 Bytes: 5
  %loadMem1_402282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402282 = call %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402282, i64 27982, i64 5, i64 5)
  store %struct.Memory* %call1_402282, %struct.Memory** %MEMORY

  %loadMem2_402282 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402282 = load i64, i64* %3
  %call2_402282 = call %struct.Memory* @sub_408fd0._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402282, %struct.Memory* %loadMem2_402282)
  store %struct.Memory* %call2_402282, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402287	 Bytes: 4
  %loadMem_402287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402287 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402287)
  store %struct.Memory* %call_402287, %struct.Memory** %MEMORY

  ; Code: movl $0x41462d, %esi	 RIP: 40228b	 Bytes: 5
  %loadMem_40228b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40228b = call %struct.Memory* @routine_movl__0x41462d___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40228b)
  store %struct.Memory* %call_40228b, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 402290	 Bytes: 2
  %loadMem_402290 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402290 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402290)
  store %struct.Memory* %call_402290, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402292	 Bytes: 7
  %loadMem_402292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402292 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402292)
  store %struct.Memory* %call_402292, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402299	 Bytes: 6
  %loadMem_402299 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402299 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402299)
  store %struct.Memory* %call_402299, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc	 RIP: 40229f	 Bytes: 5
  %loadMem1_40229f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40229f = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40229f, i64 28129, i64 5, i64 5)
  store %struct.Memory* %call1_40229f, %struct.Memory** %MEMORY

  %loadMem2_40229f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40229f = load i64, i64* %3
  %call2_40229f = call %struct.Memory* @sub_409080._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40229f, %struct.Memory* %loadMem2_40229f)
  store %struct.Memory* %call2_40229f, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4022a4	 Bytes: 4
  %loadMem_4022a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022a4 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022a4)
  store %struct.Memory* %call_4022a4, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 4022a8	 Bytes: 4
  %loadMem_4022a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022a8 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022a8)
  store %struct.Memory* %call_4022a8, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 4022ac	 Bytes: 4
  %loadMem_4022ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022ac = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022ac)
  store %struct.Memory* %call_4022ac, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4022b0	 Bytes: 4
  %loadMem_4022b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022b0 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022b0)
  store %struct.Memory* %call_4022b0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4022b4	 Bytes: 3
  %loadMem_4022b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022b4 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022b4)
  store %struct.Memory* %call_4022b4, %struct.Memory** %MEMORY

  ; Code: movq $0x41464b, (%rax)	 RIP: 4022b7	 Bytes: 7
  %loadMem_4022b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022b7 = call %struct.Memory* @routine_movq__0x41464b____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022b7)
  store %struct.Memory* %call_4022b7, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4022be	 Bytes: 7
  %loadMem_4022be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022be = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022be)
  store %struct.Memory* %call_4022be, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4022c5	 Bytes: 6
  %loadMem_4022c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022c5 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022c5)
  store %struct.Memory* %call_4022c5, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4022cb	 Bytes: 5
  %loadMem1_4022cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4022cb = call %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4022cb, i64 28261, i64 5, i64 5)
  store %struct.Memory* %call1_4022cb, %struct.Memory** %MEMORY

  %loadMem2_4022cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4022cb = load i64, i64* %3
  %call2_4022cb = call %struct.Memory* @sub_409130._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4022cb, %struct.Memory* %loadMem2_4022cb)
  store %struct.Memory* %call2_4022cb, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4022d0	 Bytes: 4
  %loadMem_4022d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022d0 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022d0)
  store %struct.Memory* %call_4022d0, %struct.Memory** %MEMORY

  ; Code: movl $0x41466b, %esi	 RIP: 4022d4	 Bytes: 5
  %loadMem_4022d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022d4 = call %struct.Memory* @routine_movl__0x41466b___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022d4)
  store %struct.Memory* %call_4022d4, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4022d9	 Bytes: 2
  %loadMem_4022d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022d9 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022d9)
  store %struct.Memory* %call_4022d9, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4022db	 Bytes: 7
  %loadMem_4022db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022db = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022db)
  store %struct.Memory* %call_4022db, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4022e2	 Bytes: 6
  %loadMem_4022e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022e2 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022e2)
  store %struct.Memory* %call_4022e2, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc	 RIP: 4022e8	 Bytes: 5
  %loadMem1_4022e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4022e8 = call %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4022e8, i64 28440, i64 5, i64 5)
  store %struct.Memory* %call1_4022e8, %struct.Memory** %MEMORY

  %loadMem2_4022e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4022e8 = load i64, i64* %3
  %call2_4022e8 = call %struct.Memory* @sub_409200._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4022e8, %struct.Memory* %loadMem2_4022e8)
  store %struct.Memory* %call2_4022e8, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4022ed	 Bytes: 4
  %loadMem_4022ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022ed = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022ed)
  store %struct.Memory* %call_4022ed, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 4022f1	 Bytes: 4
  %loadMem_4022f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022f1 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022f1)
  store %struct.Memory* %call_4022f1, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 4022f5	 Bytes: 4
  %loadMem_4022f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022f5 = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022f5)
  store %struct.Memory* %call_4022f5, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4022f9	 Bytes: 4
  %loadMem_4022f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022f9 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022f9)
  store %struct.Memory* %call_4022f9, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4022fd	 Bytes: 3
  %loadMem_4022fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4022fd = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4022fd)
  store %struct.Memory* %call_4022fd, %struct.Memory** %MEMORY

  ; Code: movq $0x414686, (%rax)	 RIP: 402300	 Bytes: 7
  %loadMem_402300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402300 = call %struct.Memory* @routine_movq__0x414686____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402300)
  store %struct.Memory* %call_402300, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402307	 Bytes: 7
  %loadMem_402307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402307 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402307)
  store %struct.Memory* %call_402307, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40230e	 Bytes: 6
  %loadMem_40230e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40230e = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40230e)
  store %struct.Memory* %call_40230e, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402314	 Bytes: 5
  %loadMem1_402314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402314 = call %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402314, i64 28572, i64 5, i64 5)
  store %struct.Memory* %call1_402314, %struct.Memory** %MEMORY

  %loadMem2_402314 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402314 = load i64, i64* %3
  %call2_402314 = call %struct.Memory* @sub_4092b0._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402314, %struct.Memory* %loadMem2_402314)
  store %struct.Memory* %call2_402314, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402319	 Bytes: 4
  %loadMem_402319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402319 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402319)
  store %struct.Memory* %call_402319, %struct.Memory** %MEMORY

  ; Code: movl $0x4146ab, %esi	 RIP: 40231d	 Bytes: 5
  %loadMem_40231d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40231d = call %struct.Memory* @routine_movl__0x4146ab___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40231d)
  store %struct.Memory* %call_40231d, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 402322	 Bytes: 2
  %loadMem_402322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402322 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402322)
  store %struct.Memory* %call_402322, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402324	 Bytes: 7
  %loadMem_402324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402324 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402324)
  store %struct.Memory* %call_402324, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40232b	 Bytes: 6
  %loadMem_40232b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40232b = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40232b)
  store %struct.Memory* %call_40232b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc	 RIP: 402331	 Bytes: 5
  %loadMem1_402331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402331 = call %struct.Memory* @routine_callq_._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402331, i64 28751, i64 5, i64 5)
  store %struct.Memory* %call1_402331, %struct.Memory** %MEMORY

  %loadMem2_402331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402331 = load i64, i64* %3
  %call2_402331 = call %struct.Memory* @sub_409380._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402331, %struct.Memory* %loadMem2_402331)
  store %struct.Memory* %call2_402331, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402336	 Bytes: 4
  %loadMem_402336 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402336 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402336)
  store %struct.Memory* %call_402336, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 40233a	 Bytes: 4
  %loadMem_40233a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40233a = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40233a)
  store %struct.Memory* %call_40233a, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 40233e	 Bytes: 4
  %loadMem_40233e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40233e = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40233e)
  store %struct.Memory* %call_40233e, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 402342	 Bytes: 4
  %loadMem_402342 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402342 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402342)
  store %struct.Memory* %call_402342, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 402346	 Bytes: 3
  %loadMem_402346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402346 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402346)
  store %struct.Memory* %call_402346, %struct.Memory** %MEMORY

  ; Code: movq $0x4146c6, (%rax)	 RIP: 402349	 Bytes: 7
  %loadMem_402349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402349 = call %struct.Memory* @routine_movq__0x4146c6____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402349)
  store %struct.Memory* %call_402349, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402350	 Bytes: 7
  %loadMem_402350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402350 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402350)
  store %struct.Memory* %call_402350, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402357	 Bytes: 6
  %loadMem_402357 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402357 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402357)
  store %struct.Memory* %call_402357, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40235d	 Bytes: 5
  %loadMem1_40235d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40235d = call %struct.Memory* @routine_callq_._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40235d, i64 28883, i64 5, i64 5)
  store %struct.Memory* %call1_40235d, %struct.Memory** %MEMORY

  %loadMem2_40235d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40235d = load i64, i64* %3
  %call2_40235d = call %struct.Memory* @sub_409430._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40235d, %struct.Memory* %loadMem2_40235d)
  store %struct.Memory* %call2_40235d, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402362	 Bytes: 4
  %loadMem_402362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402362 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402362)
  store %struct.Memory* %call_402362, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 402366	 Bytes: 4
  %loadMem_402366 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402366 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402366)
  store %struct.Memory* %call_402366, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 40236a	 Bytes: 4
  %loadMem_40236a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40236a = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40236a)
  store %struct.Memory* %call_40236a, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 40236e	 Bytes: 4
  %loadMem_40236e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40236e = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40236e)
  store %struct.Memory* %call_40236e, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 402372	 Bytes: 3
  %loadMem_402372 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402372 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402372)
  store %struct.Memory* %call_402372, %struct.Memory** %MEMORY

  ; Code: movq $0x4146ec, (%rax)	 RIP: 402375	 Bytes: 7
  %loadMem_402375 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402375 = call %struct.Memory* @routine_movq__0x4146ec____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402375)
  store %struct.Memory* %call_402375, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 40237c	 Bytes: 7
  %loadMem_40237c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40237c = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40237c)
  store %struct.Memory* %call_40237c, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402383	 Bytes: 6
  %loadMem_402383 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402383 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402383)
  store %struct.Memory* %call_402383, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402389	 Bytes: 5
  %loadMem1_402389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402389 = call %struct.Memory* @routine_callq_._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402389, i64 29047, i64 5, i64 5)
  store %struct.Memory* %call1_402389, %struct.Memory** %MEMORY

  %loadMem2_402389 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402389 = load i64, i64* %3
  %call2_402389 = call %struct.Memory* @sub_409500._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402389, %struct.Memory* %loadMem2_402389)
  store %struct.Memory* %call2_402389, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40238e	 Bytes: 4
  %loadMem_40238e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40238e = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40238e)
  store %struct.Memory* %call_40238e, %struct.Memory** %MEMORY

  ; Code: movl $0x414713, %esi	 RIP: 402392	 Bytes: 5
  %loadMem_402392 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402392 = call %struct.Memory* @routine_movl__0x414713___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402392)
  store %struct.Memory* %call_402392, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 402397	 Bytes: 2
  %loadMem_402397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402397 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402397)
  store %struct.Memory* %call_402397, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402399	 Bytes: 7
  %loadMem_402399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402399 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402399)
  store %struct.Memory* %call_402399, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4023a0	 Bytes: 6
  %loadMem_4023a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023a0 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023a0)
  store %struct.Memory* %call_4023a0, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc	 RIP: 4023a6	 Bytes: 5
  %loadMem1_4023a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4023a6 = call %struct.Memory* @routine_callq_._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4023a6, i64 29226, i64 5, i64 5)
  store %struct.Memory* %call1_4023a6, %struct.Memory** %MEMORY

  %loadMem2_4023a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4023a6 = load i64, i64* %3
  %call2_4023a6 = call %struct.Memory* @sub_4095d0._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4023a6, %struct.Memory* %loadMem2_4023a6)
  store %struct.Memory* %call2_4023a6, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4023ab	 Bytes: 4
  %loadMem_4023ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023ab = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023ab)
  store %struct.Memory* %call_4023ab, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 4023af	 Bytes: 4
  %loadMem_4023af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023af = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023af)
  store %struct.Memory* %call_4023af, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 4023b3	 Bytes: 4
  %loadMem_4023b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023b3 = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023b3)
  store %struct.Memory* %call_4023b3, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4023b7	 Bytes: 4
  %loadMem_4023b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023b7 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023b7)
  store %struct.Memory* %call_4023b7, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4023bb	 Bytes: 3
  %loadMem_4023bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023bb = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023bb)
  store %struct.Memory* %call_4023bb, %struct.Memory** %MEMORY

  ; Code: movq $0x41472c, (%rax)	 RIP: 4023be	 Bytes: 7
  %loadMem_4023be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023be = call %struct.Memory* @routine_movq__0x41472c____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023be)
  store %struct.Memory* %call_4023be, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4023c5	 Bytes: 7
  %loadMem_4023c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023c5 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023c5)
  store %struct.Memory* %call_4023c5, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4023cc	 Bytes: 6
  %loadMem_4023cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023cc = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023cc)
  store %struct.Memory* %call_4023cc, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4023d2	 Bytes: 5
  %loadMem1_4023d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4023d2 = call %struct.Memory* @routine_callq_._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4023d2, i64 29358, i64 5, i64 5)
  store %struct.Memory* %call1_4023d2, %struct.Memory** %MEMORY

  %loadMem2_4023d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4023d2 = load i64, i64* %3
  %call2_4023d2 = call %struct.Memory* @sub_409680._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4023d2, %struct.Memory* %loadMem2_4023d2)
  store %struct.Memory* %call2_4023d2, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4023d7	 Bytes: 4
  %loadMem_4023d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023d7 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023d7)
  store %struct.Memory* %call_4023d7, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 4023db	 Bytes: 4
  %loadMem_4023db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023db = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023db)
  store %struct.Memory* %call_4023db, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 4023df	 Bytes: 4
  %loadMem_4023df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023df = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023df)
  store %struct.Memory* %call_4023df, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4023e3	 Bytes: 4
  %loadMem_4023e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023e3 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023e3)
  store %struct.Memory* %call_4023e3, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4023e7	 Bytes: 3
  %loadMem_4023e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023e7 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023e7)
  store %struct.Memory* %call_4023e7, %struct.Memory** %MEMORY

  ; Code: movq $0x41474f, (%rax)	 RIP: 4023ea	 Bytes: 7
  %loadMem_4023ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023ea = call %struct.Memory* @routine_movq__0x41474f____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023ea)
  store %struct.Memory* %call_4023ea, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4023f1	 Bytes: 7
  %loadMem_4023f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023f1 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023f1)
  store %struct.Memory* %call_4023f1, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4023f8	 Bytes: 6
  %loadMem_4023f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4023f8 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4023f8)
  store %struct.Memory* %call_4023f8, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4023fe	 Bytes: 5
  %loadMem1_4023fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4023fe = call %struct.Memory* @routine_callq_._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4023fe, i64 29522, i64 5, i64 5)
  store %struct.Memory* %call1_4023fe, %struct.Memory** %MEMORY

  %loadMem2_4023fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4023fe = load i64, i64* %3
  %call2_4023fe = call %struct.Memory* @sub_409750._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4023fe, %struct.Memory* %loadMem2_4023fe)
  store %struct.Memory* %call2_4023fe, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402403	 Bytes: 4
  %loadMem_402403 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402403 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402403)
  store %struct.Memory* %call_402403, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 402407	 Bytes: 4
  %loadMem_402407 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402407 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402407)
  store %struct.Memory* %call_402407, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 40240b	 Bytes: 4
  %loadMem_40240b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40240b = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40240b)
  store %struct.Memory* %call_40240b, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 40240f	 Bytes: 4
  %loadMem_40240f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40240f = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40240f)
  store %struct.Memory* %call_40240f, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 402413	 Bytes: 3
  %loadMem_402413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402413 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402413)
  store %struct.Memory* %call_402413, %struct.Memory** %MEMORY

  ; Code: movq $0x414773, (%rax)	 RIP: 402416	 Bytes: 7
  %loadMem_402416 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402416 = call %struct.Memory* @routine_movq__0x414773____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402416)
  store %struct.Memory* %call_402416, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 40241d	 Bytes: 7
  %loadMem_40241d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40241d = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40241d)
  store %struct.Memory* %call_40241d, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402424	 Bytes: 6
  %loadMem_402424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402424 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402424)
  store %struct.Memory* %call_402424, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40242a	 Bytes: 5
  %loadMem1_40242a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40242a = call %struct.Memory* @routine_callq_._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40242a, i64 29686, i64 5, i64 5)
  store %struct.Memory* %call1_40242a, %struct.Memory** %MEMORY

  %loadMem2_40242a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40242a = load i64, i64* %3
  %call2_40242a = call %struct.Memory* @sub_409820._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40242a, %struct.Memory* %loadMem2_40242a)
  store %struct.Memory* %call2_40242a, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40242f	 Bytes: 4
  %loadMem_40242f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40242f = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40242f)
  store %struct.Memory* %call_40242f, %struct.Memory** %MEMORY

  ; Code: movl $0x414794, %esi	 RIP: 402433	 Bytes: 5
  %loadMem_402433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402433 = call %struct.Memory* @routine_movl__0x414794___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402433)
  store %struct.Memory* %call_402433, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 402438	 Bytes: 2
  %loadMem_402438 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402438 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402438)
  store %struct.Memory* %call_402438, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 40243a	 Bytes: 7
  %loadMem_40243a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40243a = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40243a)
  store %struct.Memory* %call_40243a, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 402441	 Bytes: 6
  %loadMem_402441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402441 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402441)
  store %struct.Memory* %call_402441, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc	 RIP: 402447	 Bytes: 5
  %loadMem1_402447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402447 = call %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402447, i64 29865, i64 5, i64 5)
  store %struct.Memory* %call1_402447, %struct.Memory** %MEMORY

  %loadMem2_402447 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402447 = load i64, i64* %3
  %call2_402447 = call %struct.Memory* @sub_4098f0._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402447, %struct.Memory* %loadMem2_402447)
  store %struct.Memory* %call2_402447, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 40244c	 Bytes: 4
  %loadMem_40244c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40244c = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40244c)
  store %struct.Memory* %call_40244c, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 402450	 Bytes: 4
  %loadMem_402450 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402450 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402450)
  store %struct.Memory* %call_402450, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 402454	 Bytes: 4
  %loadMem_402454 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402454 = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402454)
  store %struct.Memory* %call_402454, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 402458	 Bytes: 4
  %loadMem_402458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402458 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402458)
  store %struct.Memory* %call_402458, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 40245c	 Bytes: 3
  %loadMem_40245c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40245c = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40245c)
  store %struct.Memory* %call_40245c, %struct.Memory** %MEMORY

  ; Code: movq $0x4147aa, (%rax)	 RIP: 40245f	 Bytes: 7
  %loadMem_40245f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40245f = call %struct.Memory* @routine_movq__0x4147aa____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40245f)
  store %struct.Memory* %call_40245f, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402466	 Bytes: 7
  %loadMem_402466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402466 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402466)
  store %struct.Memory* %call_402466, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40246d	 Bytes: 6
  %loadMem_40246d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40246d = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40246d)
  store %struct.Memory* %call_40246d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402473	 Bytes: 5
  %loadMem1_402473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402473 = call %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402473, i64 29997, i64 5, i64 5)
  store %struct.Memory* %call1_402473, %struct.Memory** %MEMORY

  %loadMem2_402473 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402473 = load i64, i64* %3
  %call2_402473 = call %struct.Memory* @sub_4099a0._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402473, %struct.Memory* %loadMem2_402473)
  store %struct.Memory* %call2_402473, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402478	 Bytes: 4
  %loadMem_402478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402478 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402478)
  store %struct.Memory* %call_402478, %struct.Memory** %MEMORY

  ; Code: movl $0x4147c9, %esi	 RIP: 40247c	 Bytes: 5
  %loadMem_40247c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40247c = call %struct.Memory* @routine_movl__0x4147c9___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40247c)
  store %struct.Memory* %call_40247c, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 402481	 Bytes: 2
  %loadMem_402481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402481 = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402481)
  store %struct.Memory* %call_402481, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 402483	 Bytes: 7
  %loadMem_402483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402483 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402483)
  store %struct.Memory* %call_402483, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 40248a	 Bytes: 6
  %loadMem_40248a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40248a = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40248a)
  store %struct.Memory* %call_40248a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc	 RIP: 402490	 Bytes: 5
  %loadMem1_402490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402490 = call %struct.Memory* @routine_callq_._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402490, i64 30176, i64 5, i64 5)
  store %struct.Memory* %call1_402490, %struct.Memory** %MEMORY

  %loadMem2_402490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402490 = load i64, i64* %3
  %call2_402490 = call %struct.Memory* @sub_409a70._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402490, %struct.Memory* %loadMem2_402490)
  store %struct.Memory* %call2_402490, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 402495	 Bytes: 4
  %loadMem_402495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402495 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402495)
  store %struct.Memory* %call_402495, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 402499	 Bytes: 4
  %loadMem_402499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402499 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402499)
  store %struct.Memory* %call_402499, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 40249d	 Bytes: 4
  %loadMem_40249d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40249d = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40249d)
  store %struct.Memory* %call_40249d, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4024a1	 Bytes: 4
  %loadMem_4024a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024a1 = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024a1)
  store %struct.Memory* %call_4024a1, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4024a5	 Bytes: 3
  %loadMem_4024a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024a5 = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024a5)
  store %struct.Memory* %call_4024a5, %struct.Memory** %MEMORY

  ; Code: movq $0x4147de, (%rax)	 RIP: 4024a8	 Bytes: 7
  %loadMem_4024a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024a8 = call %struct.Memory* @routine_movq__0x4147de____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024a8)
  store %struct.Memory* %call_4024a8, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4024af	 Bytes: 7
  %loadMem_4024af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024af = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024af)
  store %struct.Memory* %call_4024af, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4024b6	 Bytes: 6
  %loadMem_4024b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024b6 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024b6)
  store %struct.Memory* %call_4024b6, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4024bc	 Bytes: 5
  %loadMem1_4024bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4024bc = call %struct.Memory* @routine_callq_._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4024bc, i64 30308, i64 5, i64 5)
  store %struct.Memory* %call1_4024bc, %struct.Memory** %MEMORY

  %loadMem2_4024bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4024bc = load i64, i64* %3
  %call2_4024bc = call %struct.Memory* @sub_409b20._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4024bc, %struct.Memory* %loadMem2_4024bc)
  store %struct.Memory* %call2_4024bc, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4024c1	 Bytes: 4
  %loadMem_4024c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024c1 = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024c1)
  store %struct.Memory* %call_4024c1, %struct.Memory** %MEMORY

  ; Code: movl $0x4147fc, %esi	 RIP: 4024c5	 Bytes: 5
  %loadMem_4024c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024c5 = call %struct.Memory* @routine_movl__0x4147fc___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024c5)
  store %struct.Memory* %call_4024c5, %struct.Memory** %MEMORY

  ; Code: movl %esi, %ecx	 RIP: 4024ca	 Bytes: 2
  %loadMem_4024ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024ca = call %struct.Memory* @routine_movl__esi___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024ca)
  store %struct.Memory* %call_4024ca, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4024cc	 Bytes: 7
  %loadMem_4024cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024cc = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024cc)
  store %struct.Memory* %call_4024cc, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4024d3	 Bytes: 6
  %loadMem_4024d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024d3 = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024d3)
  store %struct.Memory* %call_4024d3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc	 RIP: 4024d9	 Bytes: 5
  %loadMem1_4024d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4024d9 = call %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4024d9, i64 30487, i64 5, i64 5)
  store %struct.Memory* %call1_4024d9, %struct.Memory** %MEMORY

  %loadMem2_4024d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4024d9 = load i64, i64* %3
  %call2_4024d9 = call %struct.Memory* @sub_409bf0._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4024d9, %struct.Memory* %loadMem2_4024d9)
  store %struct.Memory* %call2_4024d9, %struct.Memory** %MEMORY

  ; Code: movq -0x68(%rbp), %rdx	 RIP: 4024de	 Bytes: 4
  %loadMem_4024de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024de = call %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024de)
  store %struct.Memory* %call_4024de, %struct.Memory** %MEMORY

  ; Code: movq -0x70(%rbp), %rcx	 RIP: 4024e2	 Bytes: 4
  %loadMem_4024e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024e2 = call %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024e2)
  store %struct.Memory* %call_4024e2, %struct.Memory** %MEMORY

  ; Code: movq -0x78(%rbp), %r8	 RIP: 4024e6	 Bytes: 4
  %loadMem_4024e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024e6 = call %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024e6)
  store %struct.Memory* %call_4024e6, %struct.Memory** %MEMORY

  ; Code: movq -0x80(%rbp), %r9	 RIP: 4024ea	 Bytes: 4
  %loadMem_4024ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024ea = call %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024ea)
  store %struct.Memory* %call_4024ea, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rax	 RIP: 4024ee	 Bytes: 3
  %loadMem_4024ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024ee = call %struct.Memory* @routine_movq__rsp___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024ee)
  store %struct.Memory* %call_4024ee, %struct.Memory** %MEMORY

  ; Code: movq $0x414812, (%rax)	 RIP: 4024f1	 Bytes: 7
  %loadMem_4024f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024f1 = call %struct.Memory* @routine_movq__0x414812____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024f1)
  store %struct.Memory* %call_4024f1, %struct.Memory** %MEMORY

  ; Code: movq -0x158(%rbp), %rdi	 RIP: 4024f8	 Bytes: 7
  %loadMem_4024f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024f8 = call %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024f8)
  store %struct.Memory* %call_4024f8, %struct.Memory** %MEMORY

  ; Code: movl -0xf8(%rbp), %esi	 RIP: 4024ff	 Bytes: 6
  %loadMem_4024ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4024ff = call %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4024ff)
  store %struct.Memory* %call_4024ff, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402505	 Bytes: 5
  %loadMem1_402505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402505 = call %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402505, i64 30619, i64 5, i64 5)
  store %struct.Memory* %call1_402505, %struct.Memory** %MEMORY

  %loadMem2_402505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402505 = load i64, i64* %3
  %call2_402505 = call %struct.Memory* @sub_409ca0._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402505, %struct.Memory* %loadMem2_402505)
  store %struct.Memory* %call2_402505, %struct.Memory** %MEMORY

  ; Code: movsd 0x217b76(%rip), %xmm0	 RIP: 40250a	 Bytes: 8
  %loadMem_40250a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40250a = call %struct.Memory* @routine_movsd_0x217b76__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40250a)
  store %struct.Memory* %call_40250a, %struct.Memory** %MEMORY

  ; Code: movsd 0x11926(%rip), %xmm1	 RIP: 402512	 Bytes: 8
  %loadMem_402512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402512 = call %struct.Memory* @routine_movsd_0x11926__rip____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402512)
  store %struct.Memory* %call_402512, %struct.Memory** %MEMORY

  ; Code: movaps %xmm0, %xmm2	 RIP: 40251a	 Bytes: 3
  %loadMem_40251a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40251a = call %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40251a)
  store %struct.Memory* %call_40251a, %struct.Memory** %MEMORY

  ; Code: subsd %xmm1, %xmm2	 RIP: 40251d	 Bytes: 4
  %loadMem_40251d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40251d = call %struct.Memory* @routine_subsd__xmm1___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40251d)
  store %struct.Memory* %call_40251d, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm2, %rax	 RIP: 402521	 Bytes: 5
  %loadMem_402521 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402521 = call %struct.Memory* @routine_cvttsd2si__xmm2___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402521)
  store %struct.Memory* %call_402521, %struct.Memory** %MEMORY

  ; Code: movq $0x8000000000000000, %rcx	 RIP: 402526	 Bytes: 10
  %loadMem_402526 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402526 = call %struct.Memory* @routine_movq__0x8000000000000000___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402526)
  store %struct.Memory* %call_402526, %struct.Memory** %MEMORY

  ; Code: xorq %rcx, %rax	 RIP: 402530	 Bytes: 3
  %loadMem_402530 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402530 = call %struct.Memory* @routine_xorq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402530)
  store %struct.Memory* %call_402530, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %rdx	 RIP: 402533	 Bytes: 5
  %loadMem_402533 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402533 = call %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402533)
  store %struct.Memory* %call_402533, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm1	 RIP: 402538	 Bytes: 4
  %loadMem_402538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402538 = call %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402538)
  store %struct.Memory* %call_402538, %struct.Memory** %MEMORY

  ; Code: cmovaq %rdx, %rax	 RIP: 40253c	 Bytes: 4
  %loadMem_40253c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40253c = call %struct.Memory* @routine_cmovaq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40253c)
  store %struct.Memory* %call_40253c, %struct.Memory** %MEMORY

  ; Code: movl $0x6317c0, %esi	 RIP: 402540	 Bytes: 5
  %loadMem_402540 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402540 = call %struct.Memory* @routine_movl__0x6317c0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402540)
  store %struct.Memory* %call_402540, %struct.Memory** %MEMORY

  ; Code: movl %esi, %edi	 RIP: 402545	 Bytes: 2
  %loadMem_402545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402545 = call %struct.Memory* @routine_movl__esi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402545)
  store %struct.Memory* %call_402545, %struct.Memory** %MEMORY

  ; Code: movl $0x6411c0, %esi	 RIP: 402547	 Bytes: 5
  %loadMem_402547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402547 = call %struct.Memory* @routine_movl__0x6411c0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402547)
  store %struct.Memory* %call_402547, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 40254c	 Bytes: 3
  %loadMem_40254c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40254c = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40254c)
  store %struct.Memory* %call_40254c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x168(%rbp)	 RIP: 40254f	 Bytes: 7
  %loadMem_40254f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40254f = call %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40254f)
  store %struct.Memory* %call_40254f, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, -0x170(%rbp)	 RIP: 402556	 Bytes: 8
  %loadMem_402556 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402556 = call %struct.Memory* @routine_movsd__xmm1__MINUS0x170__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402556)
  store %struct.Memory* %call_402556, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPmmEvT_S1_T0_	 RIP: 40255e	 Bytes: 5
  %loadMem1_40255e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40255e = call %struct.Memory* @routine_callq_._Z4fillIPmmEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40255e, i64 30738, i64 5, i64 5)
  store %struct.Memory* %call1_40255e, %struct.Memory** %MEMORY

  %loadMem2_40255e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40255e = load i64, i64* %3
  %call2_40255e = call %struct.Memory* @sub_409d70._Z4fillIPmmEvT_S1_T0_(%struct.State* %0, i64  %loadPC_40255e, %struct.Memory* %loadMem2_40255e)
  store %struct.Memory* %call2_40255e, %struct.Memory** %MEMORY

  ; Code: movsd -0x28(%rbp), %xmm0	 RIP: 402563	 Bytes: 5
  %loadMem_402563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402563 = call %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402563)
  store %struct.Memory* %call_402563, %struct.Memory** %MEMORY

  ; Code: movaps %xmm0, %xmm1	 RIP: 402568	 Bytes: 3
  %loadMem_402568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402568 = call %struct.Memory* @routine_movaps__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402568)
  store %struct.Memory* %call_402568, %struct.Memory** %MEMORY

  ; Code: movsd -0x170(%rbp), %xmm2	 RIP: 40256b	 Bytes: 8
  %loadMem_40256b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40256b = call %struct.Memory* @routine_movsd_MINUS0x170__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40256b)
  store %struct.Memory* %call_40256b, %struct.Memory** %MEMORY

  ; Code: subsd %xmm2, %xmm1	 RIP: 402573	 Bytes: 4
  %loadMem_402573 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402573 = call %struct.Memory* @routine_subsd__xmm2___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402573)
  store %struct.Memory* %call_402573, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm1, %rax	 RIP: 402577	 Bytes: 5
  %loadMem_402577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402577 = call %struct.Memory* @routine_cvttsd2si__xmm1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402577)
  store %struct.Memory* %call_402577, %struct.Memory** %MEMORY

  ; Code: movq -0x168(%rbp), %rcx	 RIP: 40257c	 Bytes: 7
  %loadMem_40257c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40257c = call %struct.Memory* @routine_movq_MINUS0x168__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40257c)
  store %struct.Memory* %call_40257c, %struct.Memory** %MEMORY

  ; Code: xorq %rcx, %rax	 RIP: 402583	 Bytes: 3
  %loadMem_402583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402583 = call %struct.Memory* @routine_xorq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402583)
  store %struct.Memory* %call_402583, %struct.Memory** %MEMORY

  ; Code: cvttsd2si %xmm0, %rdx	 RIP: 402586	 Bytes: 5
  %loadMem_402586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402586 = call %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402586)
  store %struct.Memory* %call_402586, %struct.Memory** %MEMORY

  ; Code: ucomisd %xmm0, %xmm2	 RIP: 40258b	 Bytes: 4
  %loadMem_40258b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40258b = call %struct.Memory* @routine_ucomisd__xmm0___xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40258b)
  store %struct.Memory* %call_40258b, %struct.Memory** %MEMORY

  ; Code: cmovaq %rdx, %rax	 RIP: 40258f	 Bytes: 4
  %loadMem_40258f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40258f = call %struct.Memory* @routine_cmovaq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40258f)
  store %struct.Memory* %call_40258f, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x88(%rbp)	 RIP: 402593	 Bytes: 7
  %loadMem_402593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402593 = call %struct.Memory* @routine_movq__rax__MINUS0x88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402593)
  store %struct.Memory* %call_402593, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rax	 RIP: 40259a	 Bytes: 7
  %loadMem_40259a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40259a = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40259a)
  store %struct.Memory* %call_40259a, %struct.Memory** %MEMORY

  ; Code: shlq $0x1, %rax	 RIP: 4025a1	 Bytes: 4
  %loadMem_4025a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025a1 = call %struct.Memory* @routine_shlq__0x1___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025a1)
  store %struct.Memory* %call_4025a1, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x90(%rbp)	 RIP: 4025a5	 Bytes: 7
  %loadMem_4025a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025a5 = call %struct.Memory* @routine_movq__rax__MINUS0x90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025a5)
  store %struct.Memory* %call_4025a5, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rax	 RIP: 4025ac	 Bytes: 7
  %loadMem_4025ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025ac = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025ac)
  store %struct.Memory* %call_4025ac, %struct.Memory** %MEMORY

  ; Code: addq $0x2, %rax	 RIP: 4025b3	 Bytes: 4
  %loadMem_4025b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025b3 = call %struct.Memory* @routine_addq__0x2___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025b3)
  store %struct.Memory* %call_4025b3, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x98(%rbp)	 RIP: 4025b7	 Bytes: 7
  %loadMem_4025b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025b7 = call %struct.Memory* @routine_movq__rax__MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025b7)
  store %struct.Memory* %call_4025b7, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rax	 RIP: 4025be	 Bytes: 7
  %loadMem_4025be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025be = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025be)
  store %struct.Memory* %call_4025be, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rdx	 RIP: 4025c5	 Bytes: 7
  %loadMem_4025c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025c5 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025c5)
  store %struct.Memory* %call_4025c5, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x178(%rbp)	 RIP: 4025cc	 Bytes: 7
  %loadMem_4025cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025cc = call %struct.Memory* @routine_movq__rax__MINUS0x178__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025cc)
  store %struct.Memory* %call_4025cc, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rax	 RIP: 4025d3	 Bytes: 3
  %loadMem_4025d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025d3 = call %struct.Memory* @routine_movq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025d3)
  store %struct.Memory* %call_4025d3, %struct.Memory** %MEMORY

  ; Code: xorl %r11d, %r11d	 RIP: 4025d6	 Bytes: 3
  %loadMem_4025d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025d6 = call %struct.Memory* @routine_xorl__r11d___r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025d6)
  store %struct.Memory* %call_4025d6, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %edx	 RIP: 4025d9	 Bytes: 3
  %loadMem_4025d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025d9 = call %struct.Memory* @routine_movl__r11d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025d9)
  store %struct.Memory* %call_4025d9, %struct.Memory** %MEMORY

  ; Code: divq -0x98(%rbp)	 RIP: 4025dc	 Bytes: 7
  %loadMem_4025dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025dc = call %struct.Memory* @routine_divq_MINUS0x98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025dc)
  store %struct.Memory* %call_4025dc, %struct.Memory** %MEMORY

  ; Code: movq -0x178(%rbp), %rsi	 RIP: 4025e3	 Bytes: 7
  %loadMem_4025e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025e3 = call %struct.Memory* @routine_movq_MINUS0x178__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025e3)
  store %struct.Memory* %call_4025e3, %struct.Memory** %MEMORY

  ; Code: addq %rax, %rsi	 RIP: 4025ea	 Bytes: 3
  %loadMem_4025ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025ea = call %struct.Memory* @routine_addq__rax___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025ea)
  store %struct.Memory* %call_4025ea, %struct.Memory** %MEMORY

  ; Code: movq %rsi, -0xa0(%rbp)	 RIP: 4025ed	 Bytes: 7
  %loadMem_4025ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025ed = call %struct.Memory* @routine_movq__rsi__MINUS0xa0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025ed)
  store %struct.Memory* %call_4025ed, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rax	 RIP: 4025f4	 Bytes: 7
  %loadMem_4025f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025f4 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025f4)
  store %struct.Memory* %call_4025f4, %struct.Memory** %MEMORY

  ; Code: movq -0xd8(%rbp), %rdi	 RIP: 4025fb	 Bytes: 7
  %loadMem_4025fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4025fb = call %struct.Memory* @routine_movq_MINUS0xd8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4025fb)
  store %struct.Memory* %call_4025fb, %struct.Memory** %MEMORY

  ; Code: movl -0xdc(%rbp), %esi	 RIP: 402602	 Bytes: 6
  %loadMem_402602 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402602 = call %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402602)
  store %struct.Memory* %call_402602, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 402608	 Bytes: 3
  %loadMem_402608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402608 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402608)
  store %struct.Memory* %call_402608, %struct.Memory** %MEMORY

  ; Code: movq -0xe8(%rbp), %rcx	 RIP: 40260b	 Bytes: 7
  %loadMem_40260b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40260b = call %struct.Memory* @routine_movq_MINUS0xe8__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40260b)
  store %struct.Memory* %call_40260b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc	 RIP: 402612	 Bytes: 5
  %loadMem1_402612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402612 = call %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402612, i64 30622, i64 5, i64 5)
  store %struct.Memory* %call1_402612, %struct.Memory** %MEMORY

  %loadMem2_402612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402612 = load i64, i64* %3
  %call2_402612 = call %struct.Memory* @sub_409db0._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402612, %struct.Memory* %loadMem2_402612)
  store %struct.Memory* %call2_402612, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402617	 Bytes: 10
  %loadMem_402617 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402617 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402617)
  store %struct.Memory* %call_402617, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402621	 Bytes: 5
  %loadMem_402621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402621 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402621)
  store %struct.Memory* %call_402621, %struct.Memory** %MEMORY

  ; Code: movq $0x41462c, %rcx	 RIP: 402626	 Bytes: 10
  %loadMem_402626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402626 = call %struct.Memory* @routine_movq__0x41462c___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402626)
  store %struct.Memory* %call_402626, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402630	 Bytes: 7
  %loadMem_402630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402630 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402630)
  store %struct.Memory* %call_402630, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc	 RIP: 402637	 Bytes: 5
  %loadMem1_402637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402637 = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402637, i64 30761, i64 5, i64 5)
  store %struct.Memory* %call1_402637, %struct.Memory** %MEMORY

  %loadMem2_402637 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402637 = load i64, i64* %3
  %call2_402637 = call %struct.Memory* @sub_409e60._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402637, %struct.Memory* %loadMem2_402637)
  store %struct.Memory* %call2_402637, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40263c	 Bytes: 10
  %loadMem_40263c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40263c = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40263c)
  store %struct.Memory* %call_40263c, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402646	 Bytes: 5
  %loadMem_402646 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402646 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402646)
  store %struct.Memory* %call_402646, %struct.Memory** %MEMORY

  ; Code: movq $0x41464a, %rax	 RIP: 40264b	 Bytes: 10
  %loadMem_40264b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40264b = call %struct.Memory* @routine_movq__0x41464a___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40264b)
  store %struct.Memory* %call_40264b, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402655	 Bytes: 7
  %loadMem_402655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402655 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402655)
  store %struct.Memory* %call_402655, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 40265c	 Bytes: 7
  %loadMem_40265c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40265c = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40265c)
  store %struct.Memory* %call_40265c, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 402663	 Bytes: 7
  %loadMem_402663 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402663 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402663)
  store %struct.Memory* %call_402663, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 40266a	 Bytes: 7
  %loadMem_40266a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40266a = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40266a)
  store %struct.Memory* %call_40266a, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 402671	 Bytes: 4
  %loadMem_402671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402671 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402671)
  store %struct.Memory* %call_402671, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402675	 Bytes: 5
  %loadMem1_402675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402675 = call %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402675, i64 30875, i64 5, i64 5)
  store %struct.Memory* %call1_402675, %struct.Memory** %MEMORY

  %loadMem2_402675 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402675 = load i64, i64* %3
  %call2_402675 = call %struct.Memory* @sub_409f10._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402675, %struct.Memory* %loadMem2_402675)
  store %struct.Memory* %call2_402675, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40267a	 Bytes: 10
  %loadMem_40267a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40267a = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40267a)
  store %struct.Memory* %call_40267a, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402684	 Bytes: 5
  %loadMem_402684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402684 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402684)
  store %struct.Memory* %call_402684, %struct.Memory** %MEMORY

  ; Code: movq $0x41466a, %rcx	 RIP: 402689	 Bytes: 10
  %loadMem_402689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402689 = call %struct.Memory* @routine_movq__0x41466a___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402689)
  store %struct.Memory* %call_402689, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402693	 Bytes: 7
  %loadMem_402693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402693 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402693)
  store %struct.Memory* %call_402693, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc	 RIP: 40269a	 Bytes: 5
  %loadMem1_40269a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40269a = call %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40269a, i64 31046, i64 5, i64 5)
  store %struct.Memory* %call1_40269a, %struct.Memory** %MEMORY

  %loadMem2_40269a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40269a = load i64, i64* %3
  %call2_40269a = call %struct.Memory* @sub_409fe0._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40269a, %struct.Memory* %loadMem2_40269a)
  store %struct.Memory* %call2_40269a, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40269f	 Bytes: 10
  %loadMem_40269f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40269f = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40269f)
  store %struct.Memory* %call_40269f, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4026a9	 Bytes: 5
  %loadMem_4026a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026a9 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026a9)
  store %struct.Memory* %call_4026a9, %struct.Memory** %MEMORY

  ; Code: movq $0x414685, %rax	 RIP: 4026ae	 Bytes: 10
  %loadMem_4026ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026ae = call %struct.Memory* @routine_movq__0x414685___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026ae)
  store %struct.Memory* %call_4026ae, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4026b8	 Bytes: 7
  %loadMem_4026b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026b8 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026b8)
  store %struct.Memory* %call_4026b8, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4026bf	 Bytes: 7
  %loadMem_4026bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026bf = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026bf)
  store %struct.Memory* %call_4026bf, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 4026c6	 Bytes: 7
  %loadMem_4026c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026c6 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026c6)
  store %struct.Memory* %call_4026c6, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 4026cd	 Bytes: 7
  %loadMem_4026cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026cd = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026cd)
  store %struct.Memory* %call_4026cd, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 4026d4	 Bytes: 4
  %loadMem_4026d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026d4 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026d4)
  store %struct.Memory* %call_4026d4, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4026d8	 Bytes: 5
  %loadMem1_4026d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4026d8 = call %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4026d8, i64 31160, i64 5, i64 5)
  store %struct.Memory* %call1_4026d8, %struct.Memory** %MEMORY

  %loadMem2_4026d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4026d8 = load i64, i64* %3
  %call2_4026d8 = call %struct.Memory* @sub_40a090._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4026d8, %struct.Memory* %loadMem2_4026d8)
  store %struct.Memory* %call2_4026d8, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 4026dd	 Bytes: 10
  %loadMem_4026dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026dd = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026dd)
  store %struct.Memory* %call_4026dd, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4026e7	 Bytes: 5
  %loadMem_4026e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026e7 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026e7)
  store %struct.Memory* %call_4026e7, %struct.Memory** %MEMORY

  ; Code: movq $0x4146aa, %rcx	 RIP: 4026ec	 Bytes: 10
  %loadMem_4026ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026ec = call %struct.Memory* @routine_movq__0x4146aa___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026ec)
  store %struct.Memory* %call_4026ec, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4026f6	 Bytes: 7
  %loadMem_4026f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4026f6 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4026f6)
  store %struct.Memory* %call_4026f6, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc	 RIP: 4026fd	 Bytes: 5
  %loadMem1_4026fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4026fd = call %struct.Memory* @routine_callq_._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4026fd, i64 31331, i64 5, i64 5)
  store %struct.Memory* %call1_4026fd, %struct.Memory** %MEMORY

  %loadMem2_4026fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4026fd = load i64, i64* %3
  %call2_4026fd = call %struct.Memory* @sub_40a160._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4026fd, %struct.Memory* %loadMem2_4026fd)
  store %struct.Memory* %call2_4026fd, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402702	 Bytes: 10
  %loadMem_402702 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402702 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402702)
  store %struct.Memory* %call_402702, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 40270c	 Bytes: 5
  %loadMem_40270c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40270c = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40270c)
  store %struct.Memory* %call_40270c, %struct.Memory** %MEMORY

  ; Code: movq $0x4146c5, %rax	 RIP: 402711	 Bytes: 10
  %loadMem_402711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402711 = call %struct.Memory* @routine_movq__0x4146c5___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402711)
  store %struct.Memory* %call_402711, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 40271b	 Bytes: 7
  %loadMem_40271b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40271b = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40271b)
  store %struct.Memory* %call_40271b, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 402722	 Bytes: 7
  %loadMem_402722 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402722 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402722)
  store %struct.Memory* %call_402722, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 402729	 Bytes: 7
  %loadMem_402729 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402729 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402729)
  store %struct.Memory* %call_402729, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 402730	 Bytes: 7
  %loadMem_402730 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402730 = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402730)
  store %struct.Memory* %call_402730, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 402737	 Bytes: 4
  %loadMem_402737 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402737 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402737)
  store %struct.Memory* %call_402737, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40273b	 Bytes: 5
  %loadMem1_40273b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40273b = call %struct.Memory* @routine_callq_._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40273b, i64 31445, i64 5, i64 5)
  store %struct.Memory* %call1_40273b, %struct.Memory** %MEMORY

  %loadMem2_40273b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40273b = load i64, i64* %3
  %call2_40273b = call %struct.Memory* @sub_40a210._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40273b, %struct.Memory* %loadMem2_40273b)
  store %struct.Memory* %call2_40273b, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402740	 Bytes: 10
  %loadMem_402740 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402740 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402740)
  store %struct.Memory* %call_402740, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 40274a	 Bytes: 5
  %loadMem_40274a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40274a = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40274a)
  store %struct.Memory* %call_40274a, %struct.Memory** %MEMORY

  ; Code: movq $0x4146eb, %rax	 RIP: 40274f	 Bytes: 10
  %loadMem_40274f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40274f = call %struct.Memory* @routine_movq__0x4146eb___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40274f)
  store %struct.Memory* %call_40274f, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402759	 Bytes: 7
  %loadMem_402759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402759 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402759)
  store %struct.Memory* %call_402759, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 402760	 Bytes: 7
  %loadMem_402760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402760 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402760)
  store %struct.Memory* %call_402760, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 402767	 Bytes: 7
  %loadMem_402767 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402767 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402767)
  store %struct.Memory* %call_402767, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 40276e	 Bytes: 7
  %loadMem_40276e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40276e = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40276e)
  store %struct.Memory* %call_40276e, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 402775	 Bytes: 4
  %loadMem_402775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402775 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402775)
  store %struct.Memory* %call_402775, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402779	 Bytes: 5
  %loadMem1_402779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402779 = call %struct.Memory* @routine_callq_._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402779, i64 31591, i64 5, i64 5)
  store %struct.Memory* %call1_402779, %struct.Memory** %MEMORY

  %loadMem2_402779 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402779 = load i64, i64* %3
  %call2_402779 = call %struct.Memory* @sub_40a2e0._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402779, %struct.Memory* %loadMem2_402779)
  store %struct.Memory* %call2_402779, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40277e	 Bytes: 10
  %loadMem_40277e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40277e = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40277e)
  store %struct.Memory* %call_40277e, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402788	 Bytes: 5
  %loadMem_402788 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402788 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402788)
  store %struct.Memory* %call_402788, %struct.Memory** %MEMORY

  ; Code: movq $0x414712, %rcx	 RIP: 40278d	 Bytes: 10
  %loadMem_40278d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40278d = call %struct.Memory* @routine_movq__0x414712___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40278d)
  store %struct.Memory* %call_40278d, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402797	 Bytes: 7
  %loadMem_402797 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402797 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402797)
  store %struct.Memory* %call_402797, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc	 RIP: 40279e	 Bytes: 5
  %loadMem1_40279e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40279e = call %struct.Memory* @routine_callq_._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40279e, i64 31762, i64 5, i64 5)
  store %struct.Memory* %call1_40279e, %struct.Memory** %MEMORY

  %loadMem2_40279e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40279e = load i64, i64* %3
  %call2_40279e = call %struct.Memory* @sub_40a3b0._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40279e, %struct.Memory* %loadMem2_40279e)
  store %struct.Memory* %call2_40279e, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 4027a3	 Bytes: 10
  %loadMem_4027a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027a3 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027a3)
  store %struct.Memory* %call_4027a3, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4027ad	 Bytes: 5
  %loadMem_4027ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027ad = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027ad)
  store %struct.Memory* %call_4027ad, %struct.Memory** %MEMORY

  ; Code: movq $0x41472b, %rax	 RIP: 4027b2	 Bytes: 10
  %loadMem_4027b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027b2 = call %struct.Memory* @routine_movq__0x41472b___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027b2)
  store %struct.Memory* %call_4027b2, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4027bc	 Bytes: 7
  %loadMem_4027bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027bc = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027bc)
  store %struct.Memory* %call_4027bc, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4027c3	 Bytes: 7
  %loadMem_4027c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027c3 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027c3)
  store %struct.Memory* %call_4027c3, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 4027ca	 Bytes: 7
  %loadMem_4027ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027ca = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027ca)
  store %struct.Memory* %call_4027ca, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 4027d1	 Bytes: 7
  %loadMem_4027d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027d1 = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027d1)
  store %struct.Memory* %call_4027d1, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 4027d8	 Bytes: 4
  %loadMem_4027d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027d8 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027d8)
  store %struct.Memory* %call_4027d8, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4027dc	 Bytes: 5
  %loadMem1_4027dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4027dc = call %struct.Memory* @routine_callq_._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4027dc, i64 31876, i64 5, i64 5)
  store %struct.Memory* %call1_4027dc, %struct.Memory** %MEMORY

  %loadMem2_4027dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4027dc = load i64, i64* %3
  %call2_4027dc = call %struct.Memory* @sub_40a460._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4027dc, %struct.Memory* %loadMem2_4027dc)
  store %struct.Memory* %call2_4027dc, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 4027e1	 Bytes: 10
  %loadMem_4027e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027e1 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027e1)
  store %struct.Memory* %call_4027e1, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4027eb	 Bytes: 5
  %loadMem_4027eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027eb = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027eb)
  store %struct.Memory* %call_4027eb, %struct.Memory** %MEMORY

  ; Code: movq $0x41474e, %rax	 RIP: 4027f0	 Bytes: 10
  %loadMem_4027f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027f0 = call %struct.Memory* @routine_movq__0x41474e___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027f0)
  store %struct.Memory* %call_4027f0, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4027fa	 Bytes: 7
  %loadMem_4027fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4027fa = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4027fa)
  store %struct.Memory* %call_4027fa, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 402801	 Bytes: 7
  %loadMem_402801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402801 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402801)
  store %struct.Memory* %call_402801, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 402808	 Bytes: 7
  %loadMem_402808 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402808 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402808)
  store %struct.Memory* %call_402808, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 40280f	 Bytes: 7
  %loadMem_40280f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40280f = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40280f)
  store %struct.Memory* %call_40280f, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 402816	 Bytes: 4
  %loadMem_402816 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402816 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402816)
  store %struct.Memory* %call_402816, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40281a	 Bytes: 5
  %loadMem1_40281a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40281a = call %struct.Memory* @routine_callq_._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40281a, i64 32022, i64 5, i64 5)
  store %struct.Memory* %call1_40281a, %struct.Memory** %MEMORY

  %loadMem2_40281a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40281a = load i64, i64* %3
  %call2_40281a = call %struct.Memory* @sub_40a530._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40281a, %struct.Memory* %loadMem2_40281a)
  store %struct.Memory* %call2_40281a, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40281f	 Bytes: 10
  %loadMem_40281f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40281f = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40281f)
  store %struct.Memory* %call_40281f, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402829	 Bytes: 5
  %loadMem_402829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402829 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402829)
  store %struct.Memory* %call_402829, %struct.Memory** %MEMORY

  ; Code: movq $0x414772, %rax	 RIP: 40282e	 Bytes: 10
  %loadMem_40282e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40282e = call %struct.Memory* @routine_movq__0x414772___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40282e)
  store %struct.Memory* %call_40282e, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402838	 Bytes: 7
  %loadMem_402838 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402838 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402838)
  store %struct.Memory* %call_402838, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 40283f	 Bytes: 7
  %loadMem_40283f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40283f = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40283f)
  store %struct.Memory* %call_40283f, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 402846	 Bytes: 7
  %loadMem_402846 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402846 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402846)
  store %struct.Memory* %call_402846, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 40284d	 Bytes: 7
  %loadMem_40284d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40284d = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40284d)
  store %struct.Memory* %call_40284d, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 402854	 Bytes: 4
  %loadMem_402854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402854 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402854)
  store %struct.Memory* %call_402854, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402858	 Bytes: 5
  %loadMem1_402858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402858 = call %struct.Memory* @routine_callq_._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402858, i64 32168, i64 5, i64 5)
  store %struct.Memory* %call1_402858, %struct.Memory** %MEMORY

  %loadMem2_402858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402858 = load i64, i64* %3
  %call2_402858 = call %struct.Memory* @sub_40a600._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402858, %struct.Memory* %loadMem2_402858)
  store %struct.Memory* %call2_402858, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 40285d	 Bytes: 10
  %loadMem_40285d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40285d = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40285d)
  store %struct.Memory* %call_40285d, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402867	 Bytes: 5
  %loadMem_402867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402867 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402867)
  store %struct.Memory* %call_402867, %struct.Memory** %MEMORY

  ; Code: movq $0x414793, %rcx	 RIP: 40286c	 Bytes: 10
  %loadMem_40286c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40286c = call %struct.Memory* @routine_movq__0x414793___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40286c)
  store %struct.Memory* %call_40286c, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402876	 Bytes: 7
  %loadMem_402876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402876 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402876)
  store %struct.Memory* %call_402876, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc	 RIP: 40287d	 Bytes: 5
  %loadMem1_40287d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40287d = call %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40287d, i64 32339, i64 5, i64 5)
  store %struct.Memory* %call1_40287d, %struct.Memory** %MEMORY

  %loadMem2_40287d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40287d = load i64, i64* %3
  %call2_40287d = call %struct.Memory* @sub_40a6d0._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_40287d, %struct.Memory* %loadMem2_40287d)
  store %struct.Memory* %call2_40287d, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402882	 Bytes: 10
  %loadMem_402882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402882 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402882)
  store %struct.Memory* %call_402882, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 40288c	 Bytes: 5
  %loadMem_40288c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40288c = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40288c)
  store %struct.Memory* %call_40288c, %struct.Memory** %MEMORY

  ; Code: movq $0x4147a9, %rax	 RIP: 402891	 Bytes: 10
  %loadMem_402891 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402891 = call %struct.Memory* @routine_movq__0x4147a9___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402891)
  store %struct.Memory* %call_402891, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 40289b	 Bytes: 7
  %loadMem_40289b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40289b = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40289b)
  store %struct.Memory* %call_40289b, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 4028a2	 Bytes: 7
  %loadMem_4028a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028a2 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028a2)
  store %struct.Memory* %call_4028a2, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 4028a9	 Bytes: 7
  %loadMem_4028a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028a9 = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028a9)
  store %struct.Memory* %call_4028a9, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 4028b0	 Bytes: 7
  %loadMem_4028b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028b0 = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028b0)
  store %struct.Memory* %call_4028b0, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 4028b7	 Bytes: 4
  %loadMem_4028b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028b7 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028b7)
  store %struct.Memory* %call_4028b7, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 4028bb	 Bytes: 5
  %loadMem1_4028bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4028bb = call %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4028bb, i64 32453, i64 5, i64 5)
  store %struct.Memory* %call1_4028bb, %struct.Memory** %MEMORY

  %loadMem2_4028bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4028bb = load i64, i64* %3
  %call2_4028bb = call %struct.Memory* @sub_40a780._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_4028bb, %struct.Memory* %loadMem2_4028bb)
  store %struct.Memory* %call2_4028bb, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 4028c0	 Bytes: 10
  %loadMem_4028c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028c0 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028c0)
  store %struct.Memory* %call_4028c0, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4028ca	 Bytes: 5
  %loadMem_4028ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028ca = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028ca)
  store %struct.Memory* %call_4028ca, %struct.Memory** %MEMORY

  ; Code: movq $0x4147c8, %rcx	 RIP: 4028cf	 Bytes: 10
  %loadMem_4028cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028cf = call %struct.Memory* @routine_movq__0x4147c8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028cf)
  store %struct.Memory* %call_4028cf, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4028d9	 Bytes: 7
  %loadMem_4028d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028d9 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028d9)
  store %struct.Memory* %call_4028d9, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc	 RIP: 4028e0	 Bytes: 5
  %loadMem1_4028e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4028e0 = call %struct.Memory* @routine_callq_._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4028e0, i64 32624, i64 5, i64 5)
  store %struct.Memory* %call1_4028e0, %struct.Memory** %MEMORY

  %loadMem2_4028e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4028e0 = load i64, i64* %3
  %call2_4028e0 = call %struct.Memory* @sub_40a850._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_4028e0, %struct.Memory* %loadMem2_4028e0)
  store %struct.Memory* %call2_4028e0, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 4028e5	 Bytes: 10
  %loadMem_4028e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028e5 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028e5)
  store %struct.Memory* %call_4028e5, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4028ef	 Bytes: 5
  %loadMem_4028ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028ef = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028ef)
  store %struct.Memory* %call_4028ef, %struct.Memory** %MEMORY

  ; Code: movq $0x4147dd, %rax	 RIP: 4028f4	 Bytes: 10
  %loadMem_4028f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028f4 = call %struct.Memory* @routine_movq__0x4147dd___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028f4)
  store %struct.Memory* %call_4028f4, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 4028fe	 Bytes: 7
  %loadMem_4028fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4028fe = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4028fe)
  store %struct.Memory* %call_4028fe, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 402905	 Bytes: 7
  %loadMem_402905 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402905 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402905)
  store %struct.Memory* %call_402905, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 40290c	 Bytes: 7
  %loadMem_40290c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40290c = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40290c)
  store %struct.Memory* %call_40290c, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 402913	 Bytes: 7
  %loadMem_402913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402913 = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402913)
  store %struct.Memory* %call_402913, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 40291a	 Bytes: 4
  %loadMem_40291a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40291a = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40291a)
  store %struct.Memory* %call_40291a, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 40291e	 Bytes: 5
  %loadMem1_40291e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_40291e = call %struct.Memory* @routine_callq_._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_40291e, i64 32738, i64 5, i64 5)
  store %struct.Memory* %call1_40291e, %struct.Memory** %MEMORY

  %loadMem2_40291e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_40291e = load i64, i64* %3
  %call2_40291e = call %struct.Memory* @sub_40a900._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_40291e, %struct.Memory* %loadMem2_40291e)
  store %struct.Memory* %call2_40291e, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402923	 Bytes: 10
  %loadMem_402923 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402923 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402923)
  store %struct.Memory* %call_402923, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 40292d	 Bytes: 5
  %loadMem_40292d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40292d = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40292d)
  store %struct.Memory* %call_40292d, %struct.Memory** %MEMORY

  ; Code: movq $0x4147fb, %rcx	 RIP: 402932	 Bytes: 10
  %loadMem_402932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402932 = call %struct.Memory* @routine_movq__0x4147fb___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402932)
  store %struct.Memory* %call_402932, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 40293c	 Bytes: 7
  %loadMem_40293c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40293c = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40293c)
  store %struct.Memory* %call_40293c, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc	 RIP: 402943	 Bytes: 5
  %loadMem1_402943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402943 = call %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402943, i64 32909, i64 5, i64 5)
  store %struct.Memory* %call1_402943, %struct.Memory** %MEMORY

  %loadMem2_402943 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402943 = load i64, i64* %3
  %call2_402943 = call %struct.Memory* @sub_40a9d0._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402943, %struct.Memory* %loadMem2_402943)
  store %struct.Memory* %call2_402943, %struct.Memory** %MEMORY

  ; Code: movq $0x6317c0, %rdi	 RIP: 402948	 Bytes: 10
  %loadMem_402948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402948 = call %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402948)
  store %struct.Memory* %call_402948, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402952	 Bytes: 5
  %loadMem_402952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402952 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402952)
  store %struct.Memory* %call_402952, %struct.Memory** %MEMORY

  ; Code: movq $0x414811, %rax	 RIP: 402957	 Bytes: 10
  %loadMem_402957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402957 = call %struct.Memory* @routine_movq__0x414811___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402957)
  store %struct.Memory* %call_402957, %struct.Memory** %MEMORY

  ; Code: movq -0x88(%rbp), %rdx	 RIP: 402961	 Bytes: 7
  %loadMem_402961 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402961 = call %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402961)
  store %struct.Memory* %call_402961, %struct.Memory** %MEMORY

  ; Code: movq -0x90(%rbp), %rcx	 RIP: 402968	 Bytes: 7
  %loadMem_402968 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402968 = call %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402968)
  store %struct.Memory* %call_402968, %struct.Memory** %MEMORY

  ; Code: movq -0x98(%rbp), %r8	 RIP: 40296f	 Bytes: 7
  %loadMem_40296f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40296f = call %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40296f)
  store %struct.Memory* %call_40296f, %struct.Memory** %MEMORY

  ; Code: movq -0xa0(%rbp), %r9	 RIP: 402976	 Bytes: 7
  %loadMem_402976 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402976 = call %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402976)
  store %struct.Memory* %call_402976, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 40297d	 Bytes: 4
  %loadMem_40297d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40297d = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40297d)
  store %struct.Memory* %call_40297d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402981	 Bytes: 5
  %loadMem1_402981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402981 = call %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402981, i64 33023, i64 5, i64 5)
  store %struct.Memory* %call1_402981, %struct.Memory** %MEMORY

  %loadMem2_402981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402981 = load i64, i64* %3
  %call2_402981 = call %struct.Memory* @sub_40aa80._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402981, %struct.Memory* %loadMem2_402981)
  store %struct.Memory* %call2_402981, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rax	 RIP: 402986	 Bytes: 10
  %loadMem_402986 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402986 = call %struct.Memory* @routine_movq__0x629ac0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402986)
  store %struct.Memory* %call_402986, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rcx	 RIP: 402990	 Bytes: 3
  %loadMem_402990 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402990 = call %struct.Memory* @routine_movq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402990)
  store %struct.Memory* %call_402990, %struct.Memory** %MEMORY

  ; Code: addq $0x7d00, %rcx	 RIP: 402993	 Bytes: 7
  %loadMem_402993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402993 = call %struct.Memory* @routine_addq__0x7d00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402993)
  store %struct.Memory* %call_402993, %struct.Memory** %MEMORY

  ; Code: movsd 0x61a088, %xmm0	 RIP: 40299a	 Bytes: 9
  %loadMem_40299a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_40299a = call %struct.Memory* @routine_movsd_0x61a088___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_40299a)
  store %struct.Memory* %call_40299a, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm0, %xmm0	 RIP: 4029a3	 Bytes: 4
  %loadMem_4029a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029a3 = call %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029a3)
  store %struct.Memory* %call_4029a3, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 4029a7	 Bytes: 3
  %loadMem_4029a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029a7 = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029a7)
  store %struct.Memory* %call_4029a7, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 4029aa	 Bytes: 3
  %loadMem_4029aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029aa = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029aa)
  store %struct.Memory* %call_4029aa, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPffEvT_S1_T0_	 RIP: 4029ad	 Bytes: 5
  %loadMem1_4029ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4029ad = call %struct.Memory* @routine_callq_._Z4fillIPffEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4029ad, i64 33187, i64 5, i64 5)
  store %struct.Memory* %call1_4029ad, %struct.Memory** %MEMORY

  %loadMem2_4029ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4029ad = load i64, i64* %3
  %call2_4029ad = call %struct.Memory* @sub_40ab50._Z4fillIPffEvT_S1_T0_(%struct.State* %0, i64  %loadPC_4029ad, %struct.Memory* %loadMem2_4029ad)
  store %struct.Memory* %call2_4029ad, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 4029b2	 Bytes: 10
  %loadMem_4029b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029b2 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029b2)
  store %struct.Memory* %call_4029b2, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 4029bc	 Bytes: 5
  %loadMem_4029bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029bc = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029bc)
  store %struct.Memory* %call_4029bc, %struct.Memory** %MEMORY

  ; Code: movq $0x414830, %rdx	 RIP: 4029c1	 Bytes: 10
  %loadMem_4029c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029c1 = call %struct.Memory* @routine_movq__0x414830___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029c1)
  store %struct.Memory* %call_4029c1, %struct.Memory** %MEMORY

  ; Code: movss 0x1149d(%rip), %xmm0	 RIP: 4029cb	 Bytes: 8
  %loadMem_4029cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029cb = call %struct.Memory* @routine_movss_0x1149d__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029cb)
  store %struct.Memory* %call_4029cb, %struct.Memory** %MEMORY

  ; Code: movsd -0x28(%rbp), %xmm1	 RIP: 4029d3	 Bytes: 5
  %loadMem_4029d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029d3 = call %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029d3)
  store %struct.Memory* %call_4029d3, %struct.Memory** %MEMORY

  ; Code: cvtsd2ss %xmm1, %xmm1	 RIP: 4029d8	 Bytes: 4
  %loadMem_4029d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029d8 = call %struct.Memory* @routine_cvtsd2ss__xmm1___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029d8)
  store %struct.Memory* %call_4029d8, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0xa4(%rbp)	 RIP: 4029dc	 Bytes: 8
  %loadMem_4029dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029dc = call %struct.Memory* @routine_movss__xmm1__MINUS0xa4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029dc)
  store %struct.Memory* %call_4029dc, %struct.Memory** %MEMORY

  ; Code: movaps %xmm0, %xmm1	 RIP: 4029e4	 Bytes: 3
  %loadMem_4029e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029e4 = call %struct.Memory* @routine_movaps__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029e4)
  store %struct.Memory* %call_4029e4, %struct.Memory** %MEMORY

  ; Code: mulss -0xa4(%rbp), %xmm1	 RIP: 4029e7	 Bytes: 8
  %loadMem_4029e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029e7 = call %struct.Memory* @routine_mulss_MINUS0xa4__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029e7)
  store %struct.Memory* %call_4029e7, %struct.Memory** %MEMORY

  ; Code: movss %xmm1, -0xa8(%rbp)	 RIP: 4029ef	 Bytes: 8
  %loadMem_4029ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029ef = call %struct.Memory* @routine_movss__xmm1__MINUS0xa8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029ef)
  store %struct.Memory* %call_4029ef, %struct.Memory** %MEMORY

  ; Code: addss -0xa4(%rbp), %xmm0	 RIP: 4029f7	 Bytes: 8
  %loadMem_4029f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029f7 = call %struct.Memory* @routine_addss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029f7)
  store %struct.Memory* %call_4029f7, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xac(%rbp)	 RIP: 4029ff	 Bytes: 8
  %loadMem_4029ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4029ff = call %struct.Memory* @routine_movss__xmm0__MINUS0xac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4029ff)
  store %struct.Memory* %call_4029ff, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402a07	 Bytes: 8
  %loadMem_402a07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a07 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a07)
  store %struct.Memory* %call_402a07, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402a0f	 Bytes: 8
  %loadMem_402a0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a0f = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a0f)
  store %struct.Memory* %call_402a0f, %struct.Memory** %MEMORY

  ; Code: divss -0xac(%rbp), %xmm1	 RIP: 402a17	 Bytes: 8
  %loadMem_402a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a17 = call %struct.Memory* @routine_divss_MINUS0xac__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a17)
  store %struct.Memory* %call_402a17, %struct.Memory** %MEMORY

  ; Code: addss %xmm1, %xmm0	 RIP: 402a1f	 Bytes: 4
  %loadMem_402a1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a1f = call %struct.Memory* @routine_addss__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a1f)
  store %struct.Memory* %call_402a1f, %struct.Memory** %MEMORY

  ; Code: movss %xmm0, -0xb0(%rbp)	 RIP: 402a23	 Bytes: 8
  %loadMem_402a23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a23 = call %struct.Memory* @routine_movss__xmm0__MINUS0xb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a23)
  store %struct.Memory* %call_402a23, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402a2b	 Bytes: 8
  %loadMem_402a2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a2b = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a2b)
  store %struct.Memory* %call_402a2b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc	 RIP: 402a33	 Bytes: 5
  %loadMem1_402a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402a33 = call %struct.Memory* @routine_callq_._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402a33, i64 33117, i64 5, i64 5)
  store %struct.Memory* %call1_402a33, %struct.Memory** %MEMORY

  %loadMem2_402a33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402a33 = load i64, i64* %3
  %call2_402a33 = call %struct.Memory* @sub_40ab90._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402a33, %struct.Memory* %loadMem2_402a33)
  store %struct.Memory* %call2_402a33, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402a38	 Bytes: 10
  %loadMem_402a38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a38 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a38)
  store %struct.Memory* %call_402a38, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402a42	 Bytes: 5
  %loadMem_402a42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a42 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a42)
  store %struct.Memory* %call_402a42, %struct.Memory** %MEMORY

  ; Code: movq $0x414843, %rdx	 RIP: 402a47	 Bytes: 10
  %loadMem_402a47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a47 = call %struct.Memory* @routine_movq__0x414843___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a47)
  store %struct.Memory* %call_402a47, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402a51	 Bytes: 8
  %loadMem_402a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a51 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a51)
  store %struct.Memory* %call_402a51, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc	 RIP: 402a59	 Bytes: 5
  %loadMem1_402a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402a59 = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402a59, i64 33255, i64 5, i64 5)
  store %struct.Memory* %call1_402a59, %struct.Memory** %MEMORY

  %loadMem2_402a59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402a59 = load i64, i64* %3
  %call2_402a59 = call %struct.Memory* @sub_40ac40._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402a59, %struct.Memory* %loadMem2_402a59)
  store %struct.Memory* %call2_402a59, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402a5e	 Bytes: 10
  %loadMem_402a5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a5e = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a5e)
  store %struct.Memory* %call_402a5e, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402a68	 Bytes: 5
  %loadMem_402a68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a68 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a68)
  store %struct.Memory* %call_402a68, %struct.Memory** %MEMORY

  ; Code: movq $0x41485e, %rdx	 RIP: 402a6d	 Bytes: 10
  %loadMem_402a6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a6d = call %struct.Memory* @routine_movq__0x41485e___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a6d)
  store %struct.Memory* %call_402a6d, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402a77	 Bytes: 8
  %loadMem_402a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a77 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a77)
  store %struct.Memory* %call_402a77, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402a7f	 Bytes: 8
  %loadMem_402a7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a7f = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a7f)
  store %struct.Memory* %call_402a7f, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402a87	 Bytes: 8
  %loadMem_402a87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a87 = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a87)
  store %struct.Memory* %call_402a87, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402a8f	 Bytes: 8
  %loadMem_402a8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a8f = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a8f)
  store %struct.Memory* %call_402a8f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402a97	 Bytes: 5
  %loadMem1_402a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402a97 = call %struct.Memory* @routine_callq_._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402a97, i64 33385, i64 5, i64 5)
  store %struct.Memory* %call1_402a97, %struct.Memory** %MEMORY

  %loadMem2_402a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402a97 = load i64, i64* %3
  %call2_402a97 = call %struct.Memory* @sub_40ad00._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402a97, %struct.Memory* %loadMem2_402a97)
  store %struct.Memory* %call2_402a97, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402a9c	 Bytes: 10
  %loadMem_402a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402a9c = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402a9c)
  store %struct.Memory* %call_402a9c, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402aa6	 Bytes: 5
  %loadMem_402aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402aa6 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402aa6)
  store %struct.Memory* %call_402aa6, %struct.Memory** %MEMORY

  ; Code: movq $0x41487b, %rdx	 RIP: 402aab	 Bytes: 10
  %loadMem_402aab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402aab = call %struct.Memory* @routine_movq__0x41487b___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402aab)
  store %struct.Memory* %call_402aab, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402ab5	 Bytes: 8
  %loadMem_402ab5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ab5 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ab5)
  store %struct.Memory* %call_402ab5, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc	 RIP: 402abd	 Bytes: 5
  %loadMem1_402abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402abd = call %struct.Memory* @routine_callq_._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402abd, i64 33571, i64 5, i64 5)
  store %struct.Memory* %call1_402abd, %struct.Memory** %MEMORY

  %loadMem2_402abd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402abd = load i64, i64* %3
  %call2_402abd = call %struct.Memory* @sub_40ade0._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402abd, %struct.Memory* %loadMem2_402abd)
  store %struct.Memory* %call2_402abd, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402ac2	 Bytes: 10
  %loadMem_402ac2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ac2 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ac2)
  store %struct.Memory* %call_402ac2, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402acc	 Bytes: 5
  %loadMem_402acc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402acc = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402acc)
  store %struct.Memory* %call_402acc, %struct.Memory** %MEMORY

  ; Code: movq $0x414893, %rdx	 RIP: 402ad1	 Bytes: 10
  %loadMem_402ad1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ad1 = call %struct.Memory* @routine_movq__0x414893___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ad1)
  store %struct.Memory* %call_402ad1, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402adb	 Bytes: 8
  %loadMem_402adb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402adb = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402adb)
  store %struct.Memory* %call_402adb, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402ae3	 Bytes: 8
  %loadMem_402ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ae3 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ae3)
  store %struct.Memory* %call_402ae3, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402aeb	 Bytes: 8
  %loadMem_402aeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402aeb = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402aeb)
  store %struct.Memory* %call_402aeb, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402af3	 Bytes: 8
  %loadMem_402af3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402af3 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402af3)
  store %struct.Memory* %call_402af3, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402afb	 Bytes: 5
  %loadMem1_402afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402afb = call %struct.Memory* @routine_callq_._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402afb, i64 33685, i64 5, i64 5)
  store %struct.Memory* %call1_402afb, %struct.Memory** %MEMORY

  %loadMem2_402afb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402afb = load i64, i64* %3
  %call2_402afb = call %struct.Memory* @sub_40ae90._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402afb, %struct.Memory* %loadMem2_402afb)
  store %struct.Memory* %call2_402afb, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402b00	 Bytes: 10
  %loadMem_402b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b00 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b00)
  store %struct.Memory* %call_402b00, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402b0a	 Bytes: 5
  %loadMem_402b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b0a = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b0a)
  store %struct.Memory* %call_402b0a, %struct.Memory** %MEMORY

  ; Code: movq $0x4148b5, %rdx	 RIP: 402b0f	 Bytes: 10
  %loadMem_402b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b0f = call %struct.Memory* @routine_movq__0x4148b5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b0f)
  store %struct.Memory* %call_402b0f, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402b19	 Bytes: 8
  %loadMem_402b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b19 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b19)
  store %struct.Memory* %call_402b19, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc	 RIP: 402b21	 Bytes: 5
  %loadMem1_402b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402b21 = call %struct.Memory* @routine_callq_._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402b21, i64 33871, i64 5, i64 5)
  store %struct.Memory* %call1_402b21, %struct.Memory** %MEMORY

  %loadMem2_402b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402b21 = load i64, i64* %3
  %call2_402b21 = call %struct.Memory* @sub_40af70._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402b21, %struct.Memory* %loadMem2_402b21)
  store %struct.Memory* %call2_402b21, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402b26	 Bytes: 10
  %loadMem_402b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b26 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b26)
  store %struct.Memory* %call_402b26, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402b30	 Bytes: 5
  %loadMem_402b30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b30 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b30)
  store %struct.Memory* %call_402b30, %struct.Memory** %MEMORY

  ; Code: movq $0x4148cd, %rdx	 RIP: 402b35	 Bytes: 10
  %loadMem_402b35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b35 = call %struct.Memory* @routine_movq__0x4148cd___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b35)
  store %struct.Memory* %call_402b35, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402b3f	 Bytes: 8
  %loadMem_402b3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b3f = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b3f)
  store %struct.Memory* %call_402b3f, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402b47	 Bytes: 8
  %loadMem_402b47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b47 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b47)
  store %struct.Memory* %call_402b47, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402b4f	 Bytes: 8
  %loadMem_402b4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b4f = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b4f)
  store %struct.Memory* %call_402b4f, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402b57	 Bytes: 8
  %loadMem_402b57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b57 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b57)
  store %struct.Memory* %call_402b57, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402b5f	 Bytes: 5
  %loadMem1_402b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402b5f = call %struct.Memory* @routine_callq_._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402b5f, i64 33985, i64 5, i64 5)
  store %struct.Memory* %call1_402b5f, %struct.Memory** %MEMORY

  %loadMem2_402b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402b5f = load i64, i64* %3
  %call2_402b5f = call %struct.Memory* @sub_40b020._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402b5f, %struct.Memory* %loadMem2_402b5f)
  store %struct.Memory* %call2_402b5f, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402b64	 Bytes: 10
  %loadMem_402b64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b64 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b64)
  store %struct.Memory* %call_402b64, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402b6e	 Bytes: 5
  %loadMem_402b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b6e = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b6e)
  store %struct.Memory* %call_402b6e, %struct.Memory** %MEMORY

  ; Code: movq $0x4148f0, %rdx	 RIP: 402b73	 Bytes: 10
  %loadMem_402b73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b73 = call %struct.Memory* @routine_movq__0x4148f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b73)
  store %struct.Memory* %call_402b73, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402b7d	 Bytes: 8
  %loadMem_402b7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b7d = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b7d)
  store %struct.Memory* %call_402b7d, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402b85	 Bytes: 8
  %loadMem_402b85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b85 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b85)
  store %struct.Memory* %call_402b85, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402b8d	 Bytes: 8
  %loadMem_402b8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b8d = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b8d)
  store %struct.Memory* %call_402b8d, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402b95	 Bytes: 8
  %loadMem_402b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402b95 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402b95)
  store %struct.Memory* %call_402b95, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402b9d	 Bytes: 5
  %loadMem1_402b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402b9d = call %struct.Memory* @routine_callq_._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402b9d, i64 34147, i64 5, i64 5)
  store %struct.Memory* %call1_402b9d, %struct.Memory** %MEMORY

  %loadMem2_402b9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402b9d = load i64, i64* %3
  %call2_402b9d = call %struct.Memory* @sub_40b100._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402b9d, %struct.Memory* %loadMem2_402b9d)
  store %struct.Memory* %call2_402b9d, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402ba2	 Bytes: 10
  %loadMem_402ba2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ba2 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ba2)
  store %struct.Memory* %call_402ba2, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402bac	 Bytes: 5
  %loadMem_402bac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bac = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bac)
  store %struct.Memory* %call_402bac, %struct.Memory** %MEMORY

  ; Code: movq $0x414914, %rdx	 RIP: 402bb1	 Bytes: 10
  %loadMem_402bb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bb1 = call %struct.Memory* @routine_movq__0x414914___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bb1)
  store %struct.Memory* %call_402bb1, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402bbb	 Bytes: 8
  %loadMem_402bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bbb = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bbb)
  store %struct.Memory* %call_402bbb, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc	 RIP: 402bc3	 Bytes: 5
  %loadMem1_402bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402bc3 = call %struct.Memory* @routine_callq_._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402bc3, i64 34333, i64 5, i64 5)
  store %struct.Memory* %call1_402bc3, %struct.Memory** %MEMORY

  %loadMem2_402bc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402bc3 = load i64, i64* %3
  %call2_402bc3 = call %struct.Memory* @sub_40b1e0._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402bc3, %struct.Memory* %loadMem2_402bc3)
  store %struct.Memory* %call2_402bc3, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402bc8	 Bytes: 10
  %loadMem_402bc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bc8 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bc8)
  store %struct.Memory* %call_402bc8, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402bd2	 Bytes: 5
  %loadMem_402bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bd2 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bd2)
  store %struct.Memory* %call_402bd2, %struct.Memory** %MEMORY

  ; Code: movq $0x41492a, %rdx	 RIP: 402bd7	 Bytes: 10
  %loadMem_402bd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bd7 = call %struct.Memory* @routine_movq__0x41492a___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bd7)
  store %struct.Memory* %call_402bd7, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402be1	 Bytes: 8
  %loadMem_402be1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402be1 = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402be1)
  store %struct.Memory* %call_402be1, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402be9	 Bytes: 8
  %loadMem_402be9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402be9 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402be9)
  store %struct.Memory* %call_402be9, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402bf1	 Bytes: 8
  %loadMem_402bf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bf1 = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bf1)
  store %struct.Memory* %call_402bf1, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402bf9	 Bytes: 8
  %loadMem_402bf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402bf9 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402bf9)
  store %struct.Memory* %call_402bf9, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402c01	 Bytes: 5
  %loadMem1_402c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402c01 = call %struct.Memory* @routine_callq_._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402c01, i64 34447, i64 5, i64 5)
  store %struct.Memory* %call1_402c01, %struct.Memory** %MEMORY

  %loadMem2_402c01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402c01 = load i64, i64* %3
  %call2_402c01 = call %struct.Memory* @sub_40b290._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402c01, %struct.Memory* %loadMem2_402c01)
  store %struct.Memory* %call2_402c01, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402c06	 Bytes: 10
  %loadMem_402c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c06 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c06)
  store %struct.Memory* %call_402c06, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402c10	 Bytes: 5
  %loadMem_402c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c10 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c10)
  store %struct.Memory* %call_402c10, %struct.Memory** %MEMORY

  ; Code: movq $0x41494a, %rdx	 RIP: 402c15	 Bytes: 10
  %loadMem_402c15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c15 = call %struct.Memory* @routine_movq__0x41494a___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c15)
  store %struct.Memory* %call_402c15, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402c1f	 Bytes: 8
  %loadMem_402c1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c1f = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c1f)
  store %struct.Memory* %call_402c1f, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402c27	 Bytes: 8
  %loadMem_402c27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c27 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c27)
  store %struct.Memory* %call_402c27, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402c2f	 Bytes: 8
  %loadMem_402c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c2f = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c2f)
  store %struct.Memory* %call_402c2f, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402c37	 Bytes: 8
  %loadMem_402c37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c37 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c37)
  store %struct.Memory* %call_402c37, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402c3f	 Bytes: 5
  %loadMem1_402c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402c3f = call %struct.Memory* @routine_callq_._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402c3f, i64 34609, i64 5, i64 5)
  store %struct.Memory* %call1_402c3f, %struct.Memory** %MEMORY

  %loadMem2_402c3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402c3f = load i64, i64* %3
  %call2_402c3f = call %struct.Memory* @sub_40b370._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402c3f, %struct.Memory* %loadMem2_402c3f)
  store %struct.Memory* %call2_402c3f, %struct.Memory** %MEMORY

  ; Code: movq $0x629ac0, %rdi	 RIP: 402c44	 Bytes: 10
  %loadMem_402c44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c44 = call %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c44)
  store %struct.Memory* %call_402c44, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402c4e	 Bytes: 5
  %loadMem_402c4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c4e = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c4e)
  store %struct.Memory* %call_402c4e, %struct.Memory** %MEMORY

  ; Code: movq $0x41496b, %rdx	 RIP: 402c53	 Bytes: 10
  %loadMem_402c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c53 = call %struct.Memory* @routine_movq__0x41496b___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c53)
  store %struct.Memory* %call_402c53, %struct.Memory** %MEMORY

  ; Code: movss -0xa4(%rbp), %xmm0	 RIP: 402c5d	 Bytes: 8
  %loadMem_402c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c5d = call %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c5d)
  store %struct.Memory* %call_402c5d, %struct.Memory** %MEMORY

  ; Code: movss -0xa8(%rbp), %xmm1	 RIP: 402c65	 Bytes: 8
  %loadMem_402c65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c65 = call %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c65)
  store %struct.Memory* %call_402c65, %struct.Memory** %MEMORY

  ; Code: movss -0xac(%rbp), %xmm2	 RIP: 402c6d	 Bytes: 8
  %loadMem_402c6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c6d = call %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c6d)
  store %struct.Memory* %call_402c6d, %struct.Memory** %MEMORY

  ; Code: movss -0xb0(%rbp), %xmm3	 RIP: 402c75	 Bytes: 8
  %loadMem_402c75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c75 = call %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c75)
  store %struct.Memory* %call_402c75, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402c7d	 Bytes: 5
  %loadMem1_402c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402c7d = call %struct.Memory* @routine_callq_._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402c7d, i64 34771, i64 5, i64 5)
  store %struct.Memory* %call1_402c7d, %struct.Memory** %MEMORY

  %loadMem2_402c7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402c7d = load i64, i64* %3
  %call2_402c7d = call %struct.Memory* @sub_40b450._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402c7d, %struct.Memory* %loadMem2_402c7d)
  store %struct.Memory* %call2_402c7d, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rax	 RIP: 402c82	 Bytes: 10
  %loadMem_402c82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c82 = call %struct.Memory* @routine_movq__0x61a0c0___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c82)
  store %struct.Memory* %call_402c82, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rcx	 RIP: 402c8c	 Bytes: 3
  %loadMem_402c8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c8c = call %struct.Memory* @routine_movq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c8c)
  store %struct.Memory* %call_402c8c, %struct.Memory** %MEMORY

  ; Code: addq $0xfa00, %rcx	 RIP: 402c8f	 Bytes: 7
  %loadMem_402c8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c8f = call %struct.Memory* @routine_addq__0xfa00___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c8f)
  store %struct.Memory* %call_402c8f, %struct.Memory** %MEMORY

  ; Code: movsd 0x61a088, %xmm0	 RIP: 402c96	 Bytes: 9
  %loadMem_402c96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c96 = call %struct.Memory* @routine_movsd_0x61a088___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c96)
  store %struct.Memory* %call_402c96, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdi	 RIP: 402c9f	 Bytes: 3
  %loadMem_402c9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402c9f = call %struct.Memory* @routine_movq__rax___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402c9f)
  store %struct.Memory* %call_402c9f, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rsi	 RIP: 402ca2	 Bytes: 3
  %loadMem_402ca2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ca2 = call %struct.Memory* @routine_movq__rcx___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ca2)
  store %struct.Memory* %call_402ca2, %struct.Memory** %MEMORY

  ; Code: callq ._Z4fillIPddEvT_S1_T0_	 RIP: 402ca5	 Bytes: 5
  %loadMem1_402ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402ca5 = call %struct.Memory* @routine_callq_._Z4fillIPddEvT_S1_T0_(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402ca5, i64 34955, i64 5, i64 5)
  store %struct.Memory* %call1_402ca5, %struct.Memory** %MEMORY

  %loadMem2_402ca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402ca5 = load i64, i64* %3
  %call2_402ca5 = call %struct.Memory* @sub_40b530._Z4fillIPddEvT_S1_T0_(%struct.State* %0, i64  %loadPC_402ca5, %struct.Memory* %loadMem2_402ca5)
  store %struct.Memory* %call2_402ca5, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402caa	 Bytes: 10
  %loadMem_402caa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402caa = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402caa)
  store %struct.Memory* %call_402caa, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402cb4	 Bytes: 5
  %loadMem_402cb4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cb4 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cb4)
  store %struct.Memory* %call_402cb4, %struct.Memory** %MEMORY

  ; Code: movq $0x414989, %rdx	 RIP: 402cb9	 Bytes: 10
  %loadMem_402cb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cb9 = call %struct.Memory* @routine_movq__0x414989___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cb9)
  store %struct.Memory* %call_402cb9, %struct.Memory** %MEMORY

  ; Code: movsd 0x1116d(%rip), %xmm0	 RIP: 402cc3	 Bytes: 8
  %loadMem_402cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cc3 = call %struct.Memory* @routine_movsd_0x1116d__rip____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cc3)
  store %struct.Memory* %call_402cc3, %struct.Memory** %MEMORY

  ; Code: movsd -0x28(%rbp), %xmm1	 RIP: 402ccb	 Bytes: 5
  %loadMem_402ccb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ccb = call %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ccb)
  store %struct.Memory* %call_402ccb, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, -0xb8(%rbp)	 RIP: 402cd0	 Bytes: 8
  %loadMem_402cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cd0 = call %struct.Memory* @routine_movsd__xmm1__MINUS0xb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cd0)
  store %struct.Memory* %call_402cd0, %struct.Memory** %MEMORY

  ; Code: movaps %xmm0, %xmm1	 RIP: 402cd8	 Bytes: 3
  %loadMem_402cd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cd8 = call %struct.Memory* @routine_movaps__xmm0___xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cd8)
  store %struct.Memory* %call_402cd8, %struct.Memory** %MEMORY

  ; Code: mulsd -0xb8(%rbp), %xmm1	 RIP: 402cdb	 Bytes: 8
  %loadMem_402cdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cdb = call %struct.Memory* @routine_mulsd_MINUS0xb8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cdb)
  store %struct.Memory* %call_402cdb, %struct.Memory** %MEMORY

  ; Code: movsd %xmm1, -0xc0(%rbp)	 RIP: 402ce3	 Bytes: 8
  %loadMem_402ce3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ce3 = call %struct.Memory* @routine_movsd__xmm1__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ce3)
  store %struct.Memory* %call_402ce3, %struct.Memory** %MEMORY

  ; Code: addsd -0xb8(%rbp), %xmm0	 RIP: 402ceb	 Bytes: 8
  %loadMem_402ceb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ceb = call %struct.Memory* @routine_addsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ceb)
  store %struct.Memory* %call_402ceb, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xc8(%rbp)	 RIP: 402cf3	 Bytes: 8
  %loadMem_402cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cf3 = call %struct.Memory* @routine_movsd__xmm0__MINUS0xc8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cf3)
  store %struct.Memory* %call_402cf3, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402cfb	 Bytes: 8
  %loadMem_402cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402cfb = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402cfb)
  store %struct.Memory* %call_402cfb, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402d03	 Bytes: 8
  %loadMem_402d03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d03 = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d03)
  store %struct.Memory* %call_402d03, %struct.Memory** %MEMORY

  ; Code: divsd -0xc8(%rbp), %xmm1	 RIP: 402d0b	 Bytes: 8
  %loadMem_402d0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d0b = call %struct.Memory* @routine_divsd_MINUS0xc8__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d0b)
  store %struct.Memory* %call_402d0b, %struct.Memory** %MEMORY

  ; Code: addsd %xmm1, %xmm0	 RIP: 402d13	 Bytes: 4
  %loadMem_402d13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d13 = call %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d13)
  store %struct.Memory* %call_402d13, %struct.Memory** %MEMORY

  ; Code: movsd %xmm0, -0xd0(%rbp)	 RIP: 402d17	 Bytes: 8
  %loadMem_402d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d17 = call %struct.Memory* @routine_movsd__xmm0__MINUS0xd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d17)
  store %struct.Memory* %call_402d17, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402d1f	 Bytes: 8
  %loadMem_402d1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d1f = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d1f)
  store %struct.Memory* %call_402d1f, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc	 RIP: 402d27	 Bytes: 5
  %loadMem1_402d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402d27 = call %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402d27, i64 34889, i64 5, i64 5)
  store %struct.Memory* %call1_402d27, %struct.Memory** %MEMORY

  %loadMem2_402d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402d27 = load i64, i64* %3
  %call2_402d27 = call %struct.Memory* @sub_40b570._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402d27, %struct.Memory* %loadMem2_402d27)
  store %struct.Memory* %call2_402d27, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402d2c	 Bytes: 10
  %loadMem_402d2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d2c = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d2c)
  store %struct.Memory* %call_402d2c, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402d36	 Bytes: 5
  %loadMem_402d36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d36 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d36)
  store %struct.Memory* %call_402d36, %struct.Memory** %MEMORY

  ; Code: movq $0x41499d, %rdx	 RIP: 402d3b	 Bytes: 10
  %loadMem_402d3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d3b = call %struct.Memory* @routine_movq__0x41499d___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d3b)
  store %struct.Memory* %call_402d3b, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402d45	 Bytes: 8
  %loadMem_402d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d45 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d45)
  store %struct.Memory* %call_402d45, %struct.Memory** %MEMORY

  ; Code: callq ._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc	 RIP: 402d4d	 Bytes: 5
  %loadMem1_402d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402d4d = call %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402d4d, i64 35027, i64 5, i64 5)
  store %struct.Memory* %call1_402d4d, %struct.Memory** %MEMORY

  %loadMem2_402d4d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402d4d = load i64, i64* %3
  %call2_402d4d = call %struct.Memory* @sub_40b620._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402d4d, %struct.Memory* %loadMem2_402d4d)
  store %struct.Memory* %call2_402d4d, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402d52	 Bytes: 10
  %loadMem_402d52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d52 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d52)
  store %struct.Memory* %call_402d52, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402d5c	 Bytes: 5
  %loadMem_402d5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d5c = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d5c)
  store %struct.Memory* %call_402d5c, %struct.Memory** %MEMORY

  ; Code: movq $0x4149b9, %rdx	 RIP: 402d61	 Bytes: 10
  %loadMem_402d61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d61 = call %struct.Memory* @routine_movq__0x4149b9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d61)
  store %struct.Memory* %call_402d61, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402d6b	 Bytes: 8
  %loadMem_402d6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d6b = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d6b)
  store %struct.Memory* %call_402d6b, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402d73	 Bytes: 8
  %loadMem_402d73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d73 = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d73)
  store %struct.Memory* %call_402d73, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402d7b	 Bytes: 8
  %loadMem_402d7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d7b = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d7b)
  store %struct.Memory* %call_402d7b, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402d83	 Bytes: 8
  %loadMem_402d83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d83 = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d83)
  store %struct.Memory* %call_402d83, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402d8b	 Bytes: 5
  %loadMem1_402d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402d8b = call %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402d8b, i64 35157, i64 5, i64 5)
  store %struct.Memory* %call1_402d8b, %struct.Memory** %MEMORY

  %loadMem2_402d8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402d8b = load i64, i64* %3
  %call2_402d8b = call %struct.Memory* @sub_40b6e0._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402d8b, %struct.Memory* %loadMem2_402d8b)
  store %struct.Memory* %call2_402d8b, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402d90	 Bytes: 10
  %loadMem_402d90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d90 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d90)
  store %struct.Memory* %call_402d90, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402d9a	 Bytes: 5
  %loadMem_402d9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d9a = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d9a)
  store %struct.Memory* %call_402d9a, %struct.Memory** %MEMORY

  ; Code: movq $0x4149d7, %rdx	 RIP: 402d9f	 Bytes: 10
  %loadMem_402d9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402d9f = call %struct.Memory* @routine_movq__0x4149d7___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402d9f)
  store %struct.Memory* %call_402d9f, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402da9	 Bytes: 8
  %loadMem_402da9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402da9 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402da9)
  store %struct.Memory* %call_402da9, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc	 RIP: 402db1	 Bytes: 5
  %loadMem1_402db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402db1 = call %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402db1, i64 35343, i64 5, i64 5)
  store %struct.Memory* %call1_402db1, %struct.Memory** %MEMORY

  %loadMem2_402db1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402db1 = load i64, i64* %3
  %call2_402db1 = call %struct.Memory* @sub_40b7c0._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402db1, %struct.Memory* %loadMem2_402db1)
  store %struct.Memory* %call2_402db1, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402db6	 Bytes: 10
  %loadMem_402db6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402db6 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402db6)
  store %struct.Memory* %call_402db6, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402dc0	 Bytes: 5
  %loadMem_402dc0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402dc0 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402dc0)
  store %struct.Memory* %call_402dc0, %struct.Memory** %MEMORY

  ; Code: movq $0x4149f0, %rdx	 RIP: 402dc5	 Bytes: 10
  %loadMem_402dc5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402dc5 = call %struct.Memory* @routine_movq__0x4149f0___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402dc5)
  store %struct.Memory* %call_402dc5, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402dcf	 Bytes: 8
  %loadMem_402dcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402dcf = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402dcf)
  store %struct.Memory* %call_402dcf, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402dd7	 Bytes: 8
  %loadMem_402dd7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402dd7 = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402dd7)
  store %struct.Memory* %call_402dd7, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402ddf	 Bytes: 8
  %loadMem_402ddf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ddf = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ddf)
  store %struct.Memory* %call_402ddf, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402de7	 Bytes: 8
  %loadMem_402de7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402de7 = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402de7)
  store %struct.Memory* %call_402de7, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402def	 Bytes: 5
  %loadMem1_402def = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402def = call %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402def, i64 35457, i64 5, i64 5)
  store %struct.Memory* %call1_402def, %struct.Memory** %MEMORY

  %loadMem2_402def = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402def = load i64, i64* %3
  %call2_402def = call %struct.Memory* @sub_40b870._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402def, %struct.Memory* %loadMem2_402def)
  store %struct.Memory* %call2_402def, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402df4	 Bytes: 10
  %loadMem_402df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402df4 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402df4)
  store %struct.Memory* %call_402df4, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402dfe	 Bytes: 5
  %loadMem_402dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402dfe = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402dfe)
  store %struct.Memory* %call_402dfe, %struct.Memory** %MEMORY

  ; Code: movq $0x414a13, %rdx	 RIP: 402e03	 Bytes: 10
  %loadMem_402e03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e03 = call %struct.Memory* @routine_movq__0x414a13___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e03)
  store %struct.Memory* %call_402e03, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402e0d	 Bytes: 8
  %loadMem_402e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e0d = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e0d)
  store %struct.Memory* %call_402e0d, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc	 RIP: 402e15	 Bytes: 5
  %loadMem1_402e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402e15 = call %struct.Memory* @routine_callq_._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402e15, i64 35643, i64 5, i64 5)
  store %struct.Memory* %call1_402e15, %struct.Memory** %MEMORY

  %loadMem2_402e15 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402e15 = load i64, i64* %3
  %call2_402e15 = call %struct.Memory* @sub_40b950._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402e15, %struct.Memory* %loadMem2_402e15)
  store %struct.Memory* %call2_402e15, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402e1a	 Bytes: 10
  %loadMem_402e1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e1a = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e1a)
  store %struct.Memory* %call_402e1a, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402e24	 Bytes: 5
  %loadMem_402e24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e24 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e24)
  store %struct.Memory* %call_402e24, %struct.Memory** %MEMORY

  ; Code: movq $0x414a2c, %rdx	 RIP: 402e29	 Bytes: 10
  %loadMem_402e29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e29 = call %struct.Memory* @routine_movq__0x414a2c___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e29)
  store %struct.Memory* %call_402e29, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402e33	 Bytes: 8
  %loadMem_402e33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e33 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e33)
  store %struct.Memory* %call_402e33, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402e3b	 Bytes: 8
  %loadMem_402e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e3b = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e3b)
  store %struct.Memory* %call_402e3b, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402e43	 Bytes: 8
  %loadMem_402e43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e43 = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e43)
  store %struct.Memory* %call_402e43, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402e4b	 Bytes: 8
  %loadMem_402e4b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e4b = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e4b)
  store %struct.Memory* %call_402e4b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402e53	 Bytes: 5
  %loadMem1_402e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402e53 = call %struct.Memory* @routine_callq_._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402e53, i64 35757, i64 5, i64 5)
  store %struct.Memory* %call1_402e53, %struct.Memory** %MEMORY

  %loadMem2_402e53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402e53 = load i64, i64* %3
  %call2_402e53 = call %struct.Memory* @sub_40ba00._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402e53, %struct.Memory* %loadMem2_402e53)
  store %struct.Memory* %call2_402e53, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402e58	 Bytes: 10
  %loadMem_402e58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e58 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e58)
  store %struct.Memory* %call_402e58, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402e62	 Bytes: 5
  %loadMem_402e62 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e62 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e62)
  store %struct.Memory* %call_402e62, %struct.Memory** %MEMORY

  ; Code: movq $0x414a50, %rdx	 RIP: 402e67	 Bytes: 10
  %loadMem_402e67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e67 = call %struct.Memory* @routine_movq__0x414a50___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e67)
  store %struct.Memory* %call_402e67, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402e71	 Bytes: 8
  %loadMem_402e71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e71 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e71)
  store %struct.Memory* %call_402e71, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402e79	 Bytes: 8
  %loadMem_402e79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e79 = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e79)
  store %struct.Memory* %call_402e79, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402e81	 Bytes: 8
  %loadMem_402e81 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e81 = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e81)
  store %struct.Memory* %call_402e81, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402e89	 Bytes: 8
  %loadMem_402e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e89 = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e89)
  store %struct.Memory* %call_402e89, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402e91	 Bytes: 5
  %loadMem1_402e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402e91 = call %struct.Memory* @routine_callq_._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402e91, i64 35919, i64 5, i64 5)
  store %struct.Memory* %call1_402e91, %struct.Memory** %MEMORY

  %loadMem2_402e91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402e91 = load i64, i64* %3
  %call2_402e91 = call %struct.Memory* @sub_40bae0._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402e91, %struct.Memory* %loadMem2_402e91)
  store %struct.Memory* %call2_402e91, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402e96	 Bytes: 10
  %loadMem_402e96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402e96 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402e96)
  store %struct.Memory* %call_402e96, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402ea0	 Bytes: 5
  %loadMem_402ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ea0 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ea0)
  store %struct.Memory* %call_402ea0, %struct.Memory** %MEMORY

  ; Code: movq $0x414a75, %rdx	 RIP: 402ea5	 Bytes: 10
  %loadMem_402ea5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ea5 = call %struct.Memory* @routine_movq__0x414a75___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ea5)
  store %struct.Memory* %call_402ea5, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402eaf	 Bytes: 8
  %loadMem_402eaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402eaf = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402eaf)
  store %struct.Memory* %call_402eaf, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc	 RIP: 402eb7	 Bytes: 5
  %loadMem1_402eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402eb7 = call %struct.Memory* @routine_callq_._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402eb7, i64 36105, i64 5, i64 5)
  store %struct.Memory* %call1_402eb7, %struct.Memory** %MEMORY

  %loadMem2_402eb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402eb7 = load i64, i64* %3
  %call2_402eb7 = call %struct.Memory* @sub_40bbc0._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State* %0, i64  %loadPC_402eb7, %struct.Memory* %loadMem2_402eb7)
  store %struct.Memory* %call2_402eb7, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402ebc	 Bytes: 10
  %loadMem_402ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ebc = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ebc)
  store %struct.Memory* %call_402ebc, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402ec6	 Bytes: 5
  %loadMem_402ec6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ec6 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ec6)
  store %struct.Memory* %call_402ec6, %struct.Memory** %MEMORY

  ; Code: movq $0x414a8c, %rdx	 RIP: 402ecb	 Bytes: 10
  %loadMem_402ecb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ecb = call %struct.Memory* @routine_movq__0x414a8c___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ecb)
  store %struct.Memory* %call_402ecb, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402ed5	 Bytes: 8
  %loadMem_402ed5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ed5 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ed5)
  store %struct.Memory* %call_402ed5, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402edd	 Bytes: 8
  %loadMem_402edd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402edd = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402edd)
  store %struct.Memory* %call_402edd, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402ee5	 Bytes: 8
  %loadMem_402ee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402ee5 = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402ee5)
  store %struct.Memory* %call_402ee5, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402eed	 Bytes: 8
  %loadMem_402eed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402eed = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402eed)
  store %struct.Memory* %call_402eed, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402ef5	 Bytes: 5
  %loadMem1_402ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402ef5 = call %struct.Memory* @routine_callq_._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402ef5, i64 36219, i64 5, i64 5)
  store %struct.Memory* %call1_402ef5, %struct.Memory** %MEMORY

  %loadMem2_402ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402ef5 = load i64, i64* %3
  %call2_402ef5 = call %struct.Memory* @sub_40bc70._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402ef5, %struct.Memory* %loadMem2_402ef5)
  store %struct.Memory* %call2_402ef5, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402efa	 Bytes: 10
  %loadMem_402efa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402efa = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402efa)
  store %struct.Memory* %call_402efa, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402f04	 Bytes: 5
  %loadMem_402f04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f04 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f04)
  store %struct.Memory* %call_402f04, %struct.Memory** %MEMORY

  ; Code: movq $0x414aad, %rdx	 RIP: 402f09	 Bytes: 10
  %loadMem_402f09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f09 = call %struct.Memory* @routine_movq__0x414aad___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f09)
  store %struct.Memory* %call_402f09, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402f13	 Bytes: 8
  %loadMem_402f13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f13 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f13)
  store %struct.Memory* %call_402f13, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402f1b	 Bytes: 8
  %loadMem_402f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f1b = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f1b)
  store %struct.Memory* %call_402f1b, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402f23	 Bytes: 8
  %loadMem_402f23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f23 = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f23)
  store %struct.Memory* %call_402f23, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402f2b	 Bytes: 8
  %loadMem_402f2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f2b = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f2b)
  store %struct.Memory* %call_402f2b, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402f33	 Bytes: 5
  %loadMem1_402f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402f33 = call %struct.Memory* @routine_callq_._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402f33, i64 36381, i64 5, i64 5)
  store %struct.Memory* %call1_402f33, %struct.Memory** %MEMORY

  %loadMem2_402f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402f33 = load i64, i64* %3
  %call2_402f33 = call %struct.Memory* @sub_40bd50._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402f33, %struct.Memory* %loadMem2_402f33)
  store %struct.Memory* %call2_402f33, %struct.Memory** %MEMORY

  ; Code: movq $0x61a0c0, %rdi	 RIP: 402f38	 Bytes: 10
  %loadMem_402f38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f38 = call %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f38)
  store %struct.Memory* %call_402f38, %struct.Memory** %MEMORY

  ; Code: movl $0x1f40, %esi	 RIP: 402f42	 Bytes: 5
  %loadMem_402f42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f42 = call %struct.Memory* @routine_movl__0x1f40___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f42)
  store %struct.Memory* %call_402f42, %struct.Memory** %MEMORY

  ; Code: movq $0x414acf, %rdx	 RIP: 402f47	 Bytes: 10
  %loadMem_402f47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f47 = call %struct.Memory* @routine_movq__0x414acf___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f47)
  store %struct.Memory* %call_402f47, %struct.Memory** %MEMORY

  ; Code: movsd -0xb8(%rbp), %xmm0	 RIP: 402f51	 Bytes: 8
  %loadMem_402f51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f51 = call %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f51)
  store %struct.Memory* %call_402f51, %struct.Memory** %MEMORY

  ; Code: movsd -0xc0(%rbp), %xmm1	 RIP: 402f59	 Bytes: 8
  %loadMem_402f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f59 = call %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f59)
  store %struct.Memory* %call_402f59, %struct.Memory** %MEMORY

  ; Code: movsd -0xc8(%rbp), %xmm2	 RIP: 402f61	 Bytes: 8
  %loadMem_402f61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f61 = call %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f61)
  store %struct.Memory* %call_402f61, %struct.Memory** %MEMORY

  ; Code: movsd -0xd0(%rbp), %xmm3	 RIP: 402f69	 Bytes: 8
  %loadMem_402f69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f69 = call %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f69)
  store %struct.Memory* %call_402f69, %struct.Memory** %MEMORY

  ; Code: callq ._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc	 RIP: 402f71	 Bytes: 5
  %loadMem1_402f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_402f71 = call %struct.Memory* @routine_callq_._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_402f71, i64 36543, i64 5, i64 5)
  store %struct.Memory* %call1_402f71, %struct.Memory** %MEMORY

  %loadMem2_402f71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_402f71 = load i64, i64* %3
  %call2_402f71 = call %struct.Memory* @sub_40be30._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State* %0, i64  %loadPC_402f71, %struct.Memory* %loadMem2_402f71)
  store %struct.Memory* %call2_402f71, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 402f76	 Bytes: 2
  %loadMem_402f76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f76 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f76)
  store %struct.Memory* %call_402f76, %struct.Memory** %MEMORY

  ; Code: addq $0x170, %rsp	 RIP: 402f78	 Bytes: 7
  %loadMem_402f78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f78 = call %struct.Memory* @routine_addq__0x170___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f78)
  store %struct.Memory* %call_402f78, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 402f7f	 Bytes: 1
  %loadMem_402f7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f7f = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f7f)
  store %struct.Memory* %call_402f7f, %struct.Memory** %MEMORY

  ; Code: popq %r14	 RIP: 402f80	 Bytes: 2
  %loadMem_402f80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f80 = call %struct.Memory* @routine_popq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f80)
  store %struct.Memory* %call_402f80, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 402f82	 Bytes: 1
  %loadMem_402f82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f82 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f82)
  store %struct.Memory* %call_402f82, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 402f83	 Bytes: 1
  %loadMem_402f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_402f83 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_402f83)
  store %struct.Memory* %call_402f83, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_402f83
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0x170___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 368)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = bitcast i8* %2 to double*
  store double %6, double* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to double*
  store double 0.000000e+00, double* %9, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd_0x12faa__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x12faa__rip__4198022__type* @G_0x12faa__rip__4198022_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x14__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 20
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsi__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = inttoptr i64 %2 to double*
  store double %6, double* %7
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsd__xmm0__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 40
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x1__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_400eb7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_MINUS0x20__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x8__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.atoi_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0x61a080(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x61a080_type* @G_0x61a080 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x2__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_400ed7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x10__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.atof_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd__xmm0__0x61a088(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = bitcast %union.vec128_t* %XMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x61a088_type* @G_0x61a088 to i64), i8* %8)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl__0x3__MINUS0x18__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 24
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jle_.L_400ef3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_0x18__rax____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x6317c0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x6317c0_type* @G__0x6317c0 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x1f40___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 8000)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x414616___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x414616_type* @G__0x414616 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si_0x219174__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x219174__rip__4198164__type* @G_0x219174__rip__4198164_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x66a200___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x66a200_type* @G__0x66a200 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edx___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__al___r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i32
  %6 = shl i32 %5, 24
  %7 = ashr exact i32 %6, 24
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl__r9b___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %R9B
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x66c140___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x66c140_type* @G__0x66c140 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdi__MINUS0xd8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r8___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__esi__MINUS0xdc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r10___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rcx__MINUS0xe8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r8__MINUS0xf0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPaaEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__r9b__MINUS0x29__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 41
  %15 = load i8, i8* %R9B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0x29__rbp____r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 41
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWIhE2RnIhES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i8
  %7 = trunc i64 %4 to i8
  %8 = add i8 %7, %6
  store i8 %8, i8* %2, align 1
  %9 = icmp ult i8 %8, %6
  %10 = icmp ult i8 %8, %7
  %11 = or i1 %9, %10
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = zext i8 %8 to i32
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i64 %4, %3
  %21 = trunc i64 %20 to i8
  %22 = xor i8 %21, %8
  %23 = lshr i8 %22, 4
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i8 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i8 %8, 7
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i8 %6, 7
  %32 = lshr i8 %7, 7
  %33 = xor i8 %29, %31
  %34 = xor i8 %29, %32
  %35 = add   i8 %33, %34
  %36 = icmp eq i8 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addb__r9b___r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %R9B
  %11 = zext i8 %10 to i64
  %12 = load i8, i8* %R9B
  %13 = zext i8 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWIhE2RnIhES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__r9b__MINUS0x2a__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 42
  %15 = load i8, i8* %R9B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_MINUS0x29__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 41
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movb__r9b__MINUS0x2b__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 43
  %15 = load i8, i8* %R9B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 43
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0xf4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = lshr i64 %7, 32
  store i64 %8, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cltd(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CDQ_EAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 %2, 32
  %13 = ashr exact i64 %12, 32
  %14 = shl  i64 %11, 32
  %15 = or i64 %14, %7
  %16 = sdiv i64 %15, %13
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 32
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %3
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %22, %struct.Memory* %0) #21
  br label %36

; <label>:24:                                     ; preds = %3
  %25 = srem i64 %15, %13
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  %27 = and i64 %16, 4294967295
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %29 = and i64 %25, 4294967295
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %24, %20
  %37 = phi %struct.Memory* [ %23, %20 ], [ %0, %24 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivl__r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R11D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_MINUS0xf4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 244
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movb__dl___r9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %DL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %R9B, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movb__r9b__MINUS0x2c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i8, i8* %R9B
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movsbl_MINUS0x29__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 41
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x413fdb___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x413fdb_type* @G__0x413fdb to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1f40___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 8000)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0xf0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 240
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0xf8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x413ff0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x413ff0_type* @G__0x413ff0 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movl_MINUS0xf8__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 248
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ia19custom_add_variableIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsbl_MINUS0x2c__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 44
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsbl_MINUS0x2b__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 43
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsbl_MINUS0x2a__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 42
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rsp___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x41400d____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276237)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_add_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41402c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41402c_type* @G__0x41402c to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_sub_variableIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414046____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276294)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_sub_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41406a___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41406a_type* @G__0x41406a to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia24custom_multiply_variableIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414084____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276356)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia33custom_multiply_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4140a9____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276393)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia34custom_multiply_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4140cf___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4140cf_type* @G__0x4140cf to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia22custom_divide_variableIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4140e7____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276455)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia31custom_divide_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414109____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276489)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia32custom_divide_multiple_variable2IaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41412c____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276524)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia30custom_mixed_multiple_variableIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41414c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41414c_type* @G__0x41414c to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_andIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414161____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276577)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_andIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41417f___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41417f_type* @G__0x41417f to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia18custom_variable_orIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414193____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276627)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia27custom_multiple_variable_orIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4141b0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141b0_type* @G__0x4141b0 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ia19custom_variable_xorIaEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4141c5____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276677)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ia28custom_multiple_variable_xorIaEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_0x218e27__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x218e27__rip__4199009__type* @G_0x218e27__rip__4199009_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x6682c0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6682c0_type* @G__0x6682c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__ecx___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__al___bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 3
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %BL, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 255
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl__bl___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RDX = bitcast %union.anon* %12 to i64*
  %13 = load i8, i8* %BL
  %14 = zext i8 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x66a200___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x66a200_type* @G__0x66a200 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rdi__MINUS0x100__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPhhEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movb__bl__MINUS0x2d__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 45
  %15 = load i8, i8* %BL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0x2d__rbp____bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 45
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %BL, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addb__bl___bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %BL
  %11 = zext i8 %10 to i64
  %12 = load i8, i8* %BL
  %13 = zext i8 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWIhE2RnIhES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %BL, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movb__bl__MINUS0x2e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 46
  %15 = load i8, i8* %BL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 45
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movb__bl__MINUS0x2f__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 47
  %15 = load i8, i8* %BL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}




define %struct.Memory* @routine_movzbl_MINUS0x2e__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 46
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 47
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__r8d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x104__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x108__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__r8d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R8D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x108__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 264
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0
  %5 = bitcast %union.anon* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0
  %9 = bitcast %union.anon* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = and i64 %2, 4294967295
  %13 = shl  i64 %11, 32
  %14 = or i64 %13, %7
  %15 = udiv i64 %14, %12
  %16 = and i64 %15, 4294967295
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %22, label %18

; <label>:18:                                     ; preds = %3
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %32

; <label>:22:                                     ; preds = %3
  %23 = urem i64 %14, %12
  %24 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  br label %32

; <label>:32:                                     ; preds = %22, %18
  %33 = phi %struct.Memory* [ %21, %18 ], [ %0, %22 ]
  ret %struct.Memory* %33
}

define %struct.Memory* @routine_divl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x104__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 260
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movb__cl___bl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %BL, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movb__bl__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i8, i8* %BL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 3
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movzbl_MINUS0x2d__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 45
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x413fda___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x413fda_type* @G__0x413fda to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x100__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 256
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__r8d__MINUS0x10c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 7
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x413fef___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x413fef_type* @G__0x413fef to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ih19custom_add_variableIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movzbl_MINUS0x30__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 48
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movzbl_MINUS0x2f__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 47
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movq__0x41400c____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276236)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_add_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41402b___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41402b_type* @G__0x41402b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_sub_variableIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414045____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276293)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_sub_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414069___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414069_type* @G__0x414069 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih24custom_multiply_variableIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414083____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276355)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih33custom_multiply_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4140a8____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276392)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih34custom_multiply_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4140ce___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4140ce_type* @G__0x4140ce to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih22custom_divide_variableIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4140e6____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276454)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih31custom_divide_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414108____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276488)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih32custom_divide_multiple_variable2IhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41412b____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276523)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih30custom_mixed_multiple_variableIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41414b___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41414b_type* @G__0x41414b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_andIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414160____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276576)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_andIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41417e___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41417e_type* @G__0x41417e to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih18custom_variable_orIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414192____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276626)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih27custom_multiple_variable_orIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4141af___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141af_type* @G__0x4141af to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ih19custom_variable_xorIhEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4141c4____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276676)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ih28custom_multiple_variable_xorIhEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_0x218af2__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x218af2__rip__4199830__type* @G_0x218af2__rip__4199830_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x664440___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x664440_type* @G__0x664440 to i64))
  ret %struct.Memory* %11
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i16* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i16
  store i16 %5, i16* %2, align 2
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__ax___r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %AX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i32
  %6 = shl i32 %5, 16
  %7 = ashr exact i32 %6, 16
  %8 = zext i32 %7 to i64
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl__r14w___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %R14W
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x6682c0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6682c0_type* @G__0x6682c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rdi__MINUS0x118__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPssEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i16
  %6 = inttoptr i64 %2 to i16*
  store i16 %5, i16* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movw__r14w__MINUS0x32__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = zext i16 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl_MINUS0x32__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movw__r14w__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movw__r14w__MINUS0x36__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 54
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i16*
  %6 = load i16, i16* %5
  %7 = sext i16 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movswl_MINUS0x34__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movswl_MINUS0x36__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 54
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x11c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_idivl__ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 2
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x11c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 284
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__cx___r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %CX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %CX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r14w__MINUS0x38__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movswl_MINUS0x32__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 50
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4141e3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141e3_type* @G__0x4141e3 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x118__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 280
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4141f9___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141f9_type* @G__0x4141f9 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Is19custom_add_variableIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movswl_MINUS0x38__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 56
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movswl_MINUS0x36__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 54
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnItEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movq__0x414217____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276759)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_add_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414237___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414237_type* @G__0x414237 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_sub_variableIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414252____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276818)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_sub_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414277___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414277_type* @G__0x414277 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is24custom_multiply_variableIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414292____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276882)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is33custom_multiply_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4142b8____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276920)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is34custom_multiply_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4142df___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4142df_type* @G__0x4142df to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is22custom_divide_variableIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4142f8____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276984)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is31custom_divide_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41431b____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277019)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is32custom_divide_multiple_variable2IsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41433f____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277055)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is30custom_mixed_multiple_variableIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414360___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414360_type* @G__0x414360 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_andIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414376____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277110)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_andIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414395___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414395_type* @G__0x414395 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is18custom_variable_orIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4143aa____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277162)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is27custom_multiple_variable_orIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4143c8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4143c8_type* @G__0x4143c8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Is19custom_variable_xorIsEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4143de____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277214)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Is28custom_multiple_variable_xorIsEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_0x2187b3__rip____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x2187b3__rip__4200661__type* @G_0x2187b3__rip__4200661_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x6605c0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6605c0_type* @G__0x6605c0 to i64))
  ret %struct.Memory* %11
}





define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 65535
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzwl__r14w___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i16, i16* %R14W
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x664440___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x664440_type* @G__0x664440 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rdi__MINUS0x128__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPttEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movw__r14w__MINUS0x3a__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 58
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 58
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movw__r14w__MINUS0x3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}








define %struct.Memory* @routine_movw__r14w__MINUS0x3e__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 62
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movzwl_MINUS0x3c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 60
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 62
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x12c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x10c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 268
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__edx__MINUS0x130__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 304
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x130__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 304
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_divl__r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %R8D
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9DIVedxeaxI2RnIjEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x12c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 300
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movw__dx___r14w(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %DX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14W = bitcast %union.anon* %11 to i16*
  %12 = load i16, i16* %DX
  %13 = zext i16 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i16* %R14W, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movw__r14w__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14W = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i16, i16* %R14W
  %15 = zext i16 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 5
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWItE2RnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movzwl_MINUS0x3a__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 58
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4141e2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141e2_type* @G__0x4141e2 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x128__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 296
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4141f8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4141f8_type* @G__0x4141f8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1It19custom_add_variableItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movzwl_MINUS0x40__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movzwl_MINUS0x3e__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 62
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 5
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnItEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_movq__0x414216____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276758)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_add_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414236___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414236_type* @G__0x414236 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_sub_variableItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414251____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276817)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_sub_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414276___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414276_type* @G__0x414276 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It24custom_multiply_variableItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414291____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276881)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It33custom_multiply_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4142b7____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276919)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It34custom_multiply_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4142de___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4142de_type* @G__0x4142de to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It22custom_divide_variableItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4142f7____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4276983)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It31custom_divide_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41431a____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277018)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It32custom_divide_multiple_variable2ItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41433e____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277054)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It30custom_mixed_multiple_variableItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41435f___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41435f_type* @G__0x41435f to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_andItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414375____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277109)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_andItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414394___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414394_type* @G__0x414394 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It18custom_variable_orItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4143a9____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277161)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It27custom_multiple_variable_orItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4143c7___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4143c7_type* @G__0x4143c7 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1It19custom_variable_xorItEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4143dd____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277213)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4It28custom_multiple_variable_xorItEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x21846b__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x21846b__rip__4201501__type* @G_0x21846b__rip__4201501_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x41DFFFFFFFC00000
  %10 = fptosi double %7 to i32
  %11 = zext i32 %10 to i64
  %12 = select i1 %9, i64 2147483648, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_32I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__0x6588c0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6588c0_type* @G__0x6588c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x6605c0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6605c0_type* @G__0x6605c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rdi__MINUS0x138__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPiiEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__eax__MINUS0x44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x44__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x48__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x4c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 76
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x13c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__edx__MINUS0x140__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x140__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 320
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x13c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 316
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x44__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 68
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4143fd___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4143fd_type* @G__0x4143fd to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x138__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 312
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414413___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414413_type* @G__0x414413 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ii19custom_add_variableIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x4c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 76
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x50__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 80
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__0x414431____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277297)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_add_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414451___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414451_type* @G__0x414451 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_sub_variableIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41446c____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277356)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_sub_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414491___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414491_type* @G__0x414491 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii24custom_multiply_variableIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4144ac____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277420)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii33custom_multiply_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4144d2____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277458)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii34custom_multiply_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4144f9___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4144f9_type* @G__0x4144f9 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii22custom_divide_variableIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414512____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277522)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii31custom_divide_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414535____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277557)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii32custom_divide_multiple_variable2IiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414559____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277593)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii30custom_mixed_multiple_variableIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41457a___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41457a_type* @G__0x41457a to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_andIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414590____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277648)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_andIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4145af___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4145af_type* @G__0x4145af to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii18custom_variable_orIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4145c4____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277700)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii27custom_multiple_variable_orIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4145e2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4145e2_type* @G__0x4145e2 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ii19custom_variable_xorIiEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4145f8____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277752)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ii28custom_multiple_variable_xorIiEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to double*
  %6 = load double, double* %5
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x43E0000000000000
  %10 = fptosi double %7 to i64
  %11 = select i1 %9, i64 -9223372036854775808, i64 %10
  store i64 %11, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si_0x21817c__rip____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x21817c__rip__4202252__type* @G_0x21817c__rip__4202252_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__edi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x650bc0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x650bc0_type* @G__0x650bc0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x6588c0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x6588c0_type* @G__0x6588c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__ecx___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdi__MINUS0x148__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z4fillIPjjEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__esi___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x54__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x58__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x14c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl__edx__MINUS0x150__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 336
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x150__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 336
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x14c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 332
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edx__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x54__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x4143fc___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4143fc_type* @G__0x4143fc to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x148__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 328
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414412___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414412_type* @G__0x414412 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Ij19custom_add_variableIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_MINUS0x5c__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 92
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 96
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__0x414430____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277296)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_add_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414450___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414450_type* @G__0x414450 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_sub_variableIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41446b____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277355)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_sub_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414490___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414490_type* @G__0x414490 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij24custom_multiply_variableIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4144ab____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277419)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij33custom_multiply_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4144d1____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277457)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij34custom_multiply_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4144f8___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4144f8_type* @G__0x4144f8 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij22custom_divide_variableIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414511____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277521)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij31custom_divide_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414534____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277556)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij32custom_divide_multiple_variable2IjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414558____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277592)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij30custom_mixed_multiple_variableIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414579___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414579_type* @G__0x414579 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_andIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41458f____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277647)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_andIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4145ae___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4145ae_type* @G__0x4145ae to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij18custom_variable_orIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4145c3____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277699)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij27custom_multiple_variable_orIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4145e1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4145e1_type* @G__0x4145e1 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Ij19custom_variable_xorIjEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4145f7____rdi_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277751)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Ij28custom_multiple_variable_xorIjEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x217e82__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x217e82__rip__4203014__type* @G_0x217e82__rip__4203014_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to double*
  %6 = load double, double* %5, align 1
  %7 = tail call double @llvm.trunc.f64(double %6) #22
  %8 = tail call double @llvm.fabs.f64(double %7) #22
  %9 = fcmp ogt double %8, 0x43E0000000000000
  %10 = fptosi double %7 to i64
  %11 = select i1 %9, i64 -9223372036854775808, i64 %10
  store i64 %11, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvttsd2si__xmm0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movl__0x6411c0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x6411c0_type* @G__0x6411c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x650bc0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x650bc0_type* @G__0x650bc0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__rdi__MINUS0x158__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_._Z4fillIPllEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cvttsd2si_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I3MVnI7vec64_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x68__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rdx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %RDX
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__rdx__MINUS0x70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0x2___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx__MINUS0x78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x78__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x160__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CQO_RAXEP6MemoryR5State(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376)) #2 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = ashr i64 %5, 63
  store i64 %6, i64* %3, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cqto(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CQO_RAXEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sext i64 %2 to i128
  %9 = and i128 %8, -18446744073709551616
  %10 = zext i64 %7 to i128
  %11 = shl  i128 %10, 64
  %12 = zext i64 %5 to i128
  %13 = or i128 %11, %12
  %14 = zext i64 %2 to i128
  %15 = or i128 %9, %14
  %16 = sdiv i128 %13, %15
  %17 = trunc i128 %16 to i64
  %18 = and i128 %16, 18446744073709551615
  %19 = sext i64 %17 to i128
  %20 = and i128 %19, -18446744073709551616
  %21 = or i128 %20, %18
  %22 = icmp eq i128 %16, %21
  br i1 %22, label %27, label %23

; <label>:23:                                     ; preds = %3
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %25, %struct.Memory* %0) #21
  br label %36

; <label>:27:                                     ; preds = %3
  %28 = srem i128 %13, %15
  %29 = trunc i128 %28 to i64
  store i64 %17, i64* %4, align 8
  store i64 %29, i64* %6, align 8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %35, align 1
  br label %36

; <label>:36:                                     ; preds = %27, %23
  %37 = phi %struct.Memory* [ %26, %23 ], [ %0, %27 ]
  ret %struct.Memory* %37
}

define %struct.Memory* @routine_idivq__rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L10IDIVrdxraxI2RnImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x160__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 352
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0x80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__0x414617___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x414617_type* @G__0x414617 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x158__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 344
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41462d___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x41462d_type* @G__0x41462d to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__esi___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Il19custom_add_variableIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq_MINUS0x70__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x78__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x80__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rsp___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__0x41464b____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277835)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_add_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x41466b___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x41466b_type* @G__0x41466b to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_sub_variableIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414686____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277894)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_sub_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4146ab___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4146ab_type* @G__0x4146ab to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il24custom_multiply_variableIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4146c6____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277958)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il33custom_multiply_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4146ec____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4277996)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il34custom_multiply_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414713___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x414713_type* @G__0x414713 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il22custom_divide_variableIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41472c____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278060)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il31custom_divide_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x41474f____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278095)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il32custom_divide_multiple_variable2IlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414773____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278131)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il30custom_mixed_multiple_variableIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x414794___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x414794_type* @G__0x414794 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_andIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4147aa____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278186)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_andIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4147c9___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4147c9_type* @G__0x4147c9 to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il18custom_variable_orIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x4147de____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278238)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il27custom_multiple_variable_orIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x4147fc___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x4147fc_type* @G__0x4147fc to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_callq_._Z14test_variable1Il19custom_variable_xorIlEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movq__0x414812____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 4278290)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_._Z14test_variable4Il28custom_multiple_variable_xorIlEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x217b76__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x217b76__rip__4203794__type* @G_0x217b76__rip__4203794_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_0x11926__rip____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x11926__rip__4203802__type* @G_0x11926__rip__4203802_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %3 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = extractelement <2 x i32> %6, i32 0
  %11 = bitcast i8* %2 to i32*
  store i32 %10, i32* %11, align 1
  %12 = extractelement <2 x i32> %6, i32 1
  %13 = getelementptr inbounds i8, i8* %2, i64 4
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 1
  %15 = extractelement <2 x i32> %9, i32 0
  %16 = getelementptr inbounds i8, i8* %2, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 1
  %18 = extractelement <2 x i32> %9, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 12
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movaps__xmm0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fsub double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subsd__xmm1___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvttsd2si__xmm2___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM2 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movq__0x8000000000000000___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 -9223372036854775808)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %6 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i64 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i64 %6, 63
  %19 = trunc i64 %18 to i8
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %19, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory*, %struct.State* dereferenceable(3376), i8* nocapture readonly, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to double*
  %6 = load double, double* %5, align 1
  %7 = bitcast i8* %3 to double*
  %8 = load double, double* %7, align 1
  %9 = fcmp uno double %6, %8
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = fadd double %6, %8
  %12 = bitcast double %11 to i64
  %13 = and i64 %12, 9221120237041090560
  %14 = icmp eq i64 %13, 9218868437227405312
  %15 = and i64 %12, 2251799813685247
  %16 = icmp ne i64 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %28

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %39

; <label>:22:                                     ; preds = %4
  %23 = fcmp ogt double %6, %8
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %22
  %25 = fcmp olt double %6, %8
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %24
  %27 = fcmp oeq double %6, %8
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26, %24, %22, %10
  %29 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 1, %26 ], [ 1, %10 ]
  %30 = phi i8 [ 0, %22 ], [ 0, %24 ], [ 0, %26 ], [ 1, %10 ]
  %31 = phi i8 [ 0, %22 ], [ 1, %24 ], [ 0, %26 ], [ 1, %10 ]
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %30, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %31, i8* %34, align 1
  br label %35

; <label>:35:                                     ; preds = %28, %26
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %38, align 1
  br label %39

; <label>:39:                                     ; preds = %35, %18
  %40 = phi %struct.Memory* [ %21, %18 ], [ %0, %35 ]
  ret %struct.Memory* %40
}

define %struct.Memory* @routine_ucomisd__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L7CMOVNBEI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %8 = load i8, i8* %7, align 1
  %9 = or i8 %8, %6
  %10 = icmp eq i8 %9, 0
  %11 = load i64, i64* %2, align 8
  %12 = select i1 %10, i64 %3, i64 %11
  store i64 %12, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmovaq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L7CMOVNBEI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__0x6317c0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x6317c0_type* @G__0x6317c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__esi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ESI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x6411c0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 ptrtoint( %G__0x6411c0_type* @G__0x6411c0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rcx__MINUS0x168__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsd__xmm1__MINUS0x170__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 368
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z4fillIPmmEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movaps__xmm0___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 3
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6MOVxPSI3VnWI8vec128_tE2VnIS2_EEEP6MemoryS7_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movsd_MINUS0x170__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 368
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subsd__xmm2___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %union.vec128_t* %XMM2 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SUBSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_cvttsd2si__xmm1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 5
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L11CVTSD2SI_64I2VnI8vec128_tEXadL_ZNS_L18FTruncTowardZero64EdEEEEP6MemoryS5_R5State3RnWImET_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movq_MINUS0x168__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 360
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_ucomisd__xmm0___xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %7 to %union.vec128_t*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %union.vec128_t* %XMM2 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}




define %struct.Memory* @routine_movq__rax__MINUS0x88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x88__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x1___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_addq__0x2___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 2)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax__MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0x90__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x178__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_xorl__r11d___r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R11D to i64*
  %10 = load i32, i32* %R11D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__r11d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R11D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9DIVrdxraxI2MnImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 7, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = inttoptr i64 %2 to i64*
  %9 = load i64, i64* %8
  %10 = zext i64 %7 to i128
  %11 = shl  i128 %10, 64
  %12 = zext i64 %5 to i128
  %13 = or i128 %11, %12
  %14 = zext i64 %9 to i128
  %15 = udiv i128 %13, %14
  %16 = and i128 %15, 18446744073709551615
  %17 = icmp eq i128 %15, %16
  br i1 %17, label %22, label %18

; <label>:18:                                     ; preds = %3
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = tail call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %1, i64 %20, %struct.Memory* %0) #21
  br label %32

; <label>:22:                                     ; preds = %3
  %23 = urem i128 %13, %14
  %24 = trunc i128 %23 to i64
  %25 = trunc i128 %15 to i64
  store i64 %25, i64* %4, align 8
  store i64 %24, i64* %6, align 8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %31, align 1
  br label %32

; <label>:32:                                     ; preds = %22, %18
  %33 = phi %struct.Memory* [ %21, %18 ], [ %0, %22 ]
  ret %struct.Memory* %33
}

define %struct.Memory* @routine_divq_MINUS0x98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9DIVrdxraxI2MnImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_MINUS0x178__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addq__rax___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rsi__MINUS0xa0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %RSI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq_MINUS0xd8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 216
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0xdc__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 220
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0xe8__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41462c___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x41462c_type* @G__0x41462c to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x88__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Im19custom_add_variableImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41464a___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41464a_type* @G__0x41464a to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq_MINUS0x90__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x98__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xa0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_add_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41466a___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x41466a_type* @G__0x41466a to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_sub_variableImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414685___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414685_type* @G__0x414685 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_sub_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4146aa___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4146aa_type* @G__0x4146aa to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im24custom_multiply_variableImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4146c5___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4146c5_type* @G__0x4146c5 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im33custom_multiply_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4146eb___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4146eb_type* @G__0x4146eb to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im34custom_multiply_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414712___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x414712_type* @G__0x414712 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im22custom_divide_variableImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41472b___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41472b_type* @G__0x41472b to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im31custom_divide_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41474e___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x41474e_type* @G__0x41474e to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im32custom_divide_multiple_variable2ImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414772___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414772_type* @G__0x414772 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im30custom_mixed_multiple_variableImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414793___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x414793_type* @G__0x414793 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_andImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4147a9___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4147a9_type* @G__0x4147a9 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_andImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4147c8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4147c8_type* @G__0x4147c8 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im18custom_variable_orImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4147dd___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x4147dd_type* @G__0x4147dd to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im27custom_multiple_variable_orImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4147fb___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x4147fb_type* @G__0x4147fb to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Im19custom_variable_xorImEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414811___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x414811_type* @G__0x414811 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_callq_._Z14test_variable4Im28custom_multiple_variable_xorImEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x629ac0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x629ac0_type* @G__0x629ac0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__0x7d00___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 32000)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movsd_0x61a088___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 9
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 ptrtoint( %G_0x61a088_type* @G_0x61a088 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly) #0 {
  %5 = bitcast i8* %2 to <2 x i32>*
  %6 = load <2 x i32>, <2 x i32>* %5, align 1
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to <2 x i32>*
  %9 = load <2 x i32>, <2 x i32>* %8, align 1
  %10 = bitcast i8* %3 to double*
  %11 = load double, double* %10, align 1
  %12 = fptrunc double %11 to float
  %13 = bitcast i8* %2 to float*
  store float %12, float* %13, align 1
  %14 = extractelement <2 x i32> %6, i32 1
  %15 = getelementptr inbounds i8, i8* %2, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 1
  %17 = extractelement <2 x i32> %9, i32 0
  %18 = bitcast i8* %7 to i32*
  store i32 %17, i32* %18, align 1
  %19 = extractelement <2 x i32> %9, i32 1
  %20 = getelementptr inbounds i8, i8* %2, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cvtsd2ss__xmm0___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %union.vec128_t* %XMM0 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_movq__rax___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rcx___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_._Z4fillIPffEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x629ac0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x629ac0_type* @G__0x629ac0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__0x414830___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414830_type* @G__0x414830 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to float*
  %6 = load float, float* %5
  %7 = bitcast i8* %2 to float*
  store float %6, float* %7, align 1
  %8 = getelementptr inbounds i8, i8* %2, i64 4
  %9 = bitcast i8* %8 to float*
  store float 0.000000e+00, float* %9, align 1
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 12
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss_0x1149d__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x1149d__rip__4205011__type* @G_0x1149d__rip__4205011_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movsd_MINUS0x28__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 5
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cvtsd2ss__xmm1___xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %11 = bitcast %union.vec128_t* %XMM1 to i8*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L8CVTSD2SSI2VnI8vec128_tEEEP6MemoryS5_R5State3VnWIS2_ET_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11)
  ret %struct.Memory* %14
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i8* nocapture readonly) #7 {
  %5 = bitcast i8* %3 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 1
  %7 = extractelement <2 x float> %6, i32 0
  %8 = inttoptr i64 %2 to float*
  store float %7, float* %8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movss__xmm1__MINUS0xa4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 164
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fmul float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulss_MINUS0xa4__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movss__xmm1__MINUS0xa8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 168
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fadd float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addss_MINUS0xa4__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 164
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_E3MVnI7vec32_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movss__xmm0__MINUS0xac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 172
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_MINUS0xa4__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 164
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_MINUS0xa8__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = inttoptr i64 %4 to float*
  %12 = load float, float* %11
  %13 = extractelement <2 x float> %7, i32 0
  %14 = fdiv float %13, %12
  %15 = bitcast i8* %2 to float*
  store float %14, float* %15, align 1
  %16 = bitcast <2 x float> %7 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 1
  %18 = getelementptr inbounds i8, i8* %2, i64 4
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 1
  %20 = extractelement <2 x i32> %10, i32 0
  %21 = getelementptr inbounds i8, i8* %2, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 1
  %23 = extractelement <2 x i32> %10, i32 1
  %24 = getelementptr inbounds i8, i8* %2, i64 12
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divss_MINUS0xac__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 172
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSSI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to <2 x i32>*
  %10 = load <2 x i32>, <2 x i32>* %9, align 1
  %11 = bitcast i8* %4 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 1
  %13 = extractelement <2 x float> %7, i32 0
  %14 = extractelement <2 x float> %12, i32 0
  %15 = fadd float %13, %14
  %16 = bitcast i8* %2 to float*
  store float %15, float* %16, align 1
  %17 = bitcast <2 x float> %7 to <2 x i32>
  %18 = extractelement <2 x i32> %17, i32 1
  %19 = getelementptr inbounds i8, i8* %2, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 1
  %21 = extractelement <2 x i32> %10, i32 0
  %22 = getelementptr inbounds i8, i8* %2, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 1
  %24 = extractelement <2 x i32> %10, i32 1
  %25 = getelementptr inbounds i8, i8* %2, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addss__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSSI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movss__xmm0__MINUS0xb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 176
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI4MVnWI7vec32_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414843___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414843_type* @G__0x414843 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1If19custom_add_variableIfEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41485e___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41485e_type* @G__0x41485e to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movss_MINUS0xac__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 172
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movss_MINUS0xb0__rbp____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 176
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSS_MEMI3VnWI8vec128_tE3MVnI7vec32_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z14test_variable4If28custom_add_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41487b___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41487b_type* @G__0x41487b to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1If19custom_sub_variableIfEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414893___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414893_type* @G__0x414893 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If28custom_sub_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4148b5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4148b5_type* @G__0x4148b5 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1If24custom_multiply_variableIfEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4148cd___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4148cd_type* @G__0x4148cd to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If33custom_multiply_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4148f0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4148f0_type* @G__0x4148f0 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If34custom_multiply_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414914___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414914_type* @G__0x414914 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1If22custom_divide_variableIfEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41492a___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41492a_type* @G__0x41492a to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If31custom_divide_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41494a___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41494a_type* @G__0x41494a to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If32custom_divide_multiple_variable2IfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41496b___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41496b_type* @G__0x41496b to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4If30custom_mixed_multiple_variableIfEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x61a0c0___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G__0x61a0c0_type* @G__0x61a0c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_addq__0xfa00___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 64000)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_callq_._Z4fillIPddEvT_S1_T0_(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x61a0c0___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x61a0c0_type* @G__0x61a0c0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movq__0x414989___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414989_type* @G__0x414989 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movsd_0x1116d__rip____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %9 = load i64, i64* %PC
  %10 = ptrtoint %G_0x1116d__rip__4205771__type* @G_0x1116d__rip__4205771_ to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %8, i64 %10)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movsd__xmm1__MINUS0xb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 184
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fmul double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_mulsd_MINUS0xb8__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MULSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsd__xmm1__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 192
  %13 = bitcast %union.vec128_t* %XMM1 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd_MINUS0xb8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_E3MVnI7vec64_tEEEP6MemorySA_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0xc8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 200
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0xb8__rbp____xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 184
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0xc0__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i64) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = inttoptr i64 %4 to double*
  %12 = load double, double* %11
  %13 = fdiv double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_divsd_MINUS0xc8__rbp____xmm1(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %12 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 200
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 8
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5DIVSDI3VnWI8vec128_tE2VnIS2_E3MVnIS2_EEEP6MemoryS9_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %11, i8* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i8* nocapture readonly, i8* nocapture readonly) #0 {
  %6 = bitcast i8* %3 to double*
  %7 = load double, double* %6, align 1
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = bitcast i8* %4 to double*
  %12 = load double, double* %11, align 1
  %13 = fadd double %7, %12
  %14 = bitcast i8* %2 to double*
  store double %13, double* %14, align 1
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addsd__xmm1___xmm0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %7 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %6, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %7 to %"class.std::bitset"*
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %9 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %8, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %9 to %union.vec128_t*
  %10 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %11 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %12 = bitcast %union.vec128_t* %XMM1 to i8*
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5ADDSDI3VnWI8vec128_tE2VnIS2_ES5_EEP6MemoryS7_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i8* %10, i8* %11, i8* %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movsd__xmm0__MINUS0xd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %10 to %union.vec128_t*
  %11 = load i64, i64* %RBP
  %12 = sub i64 %11, 208
  %13 = bitcast %union.vec128_t* %XMM0 to i8*
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI4MVnWI7vec64_tE2VnI8vec128_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i8* %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x41499d___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x41499d_type* @G__0x41499d to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z22test_hoisted_variable1Id19custom_add_variableIdEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4149b9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4149b9_type* @G__0x4149b9 to i64))
  ret %struct.Memory* %11
}






define %struct.Memory* @routine_movsd_MINUS0xc8__rbp____xmm2(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 200
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsd_MINUS0xd0__rbp____xmm3(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %10 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %9, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %10 to %"class.std::bitset"*
  %11 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 208
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L9MOVSD_MEMI3VnWI8vec128_tE3MVnI7vec64_tEEEP6MemoryS8_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_add_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4149d7___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4149d7_type* @G__0x4149d7 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Id19custom_sub_variableIdEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x4149f0___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x4149f0_type* @G__0x4149f0 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id28custom_sub_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414a13___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414a13_type* @G__0x414a13 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Id24custom_multiply_variableIdEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414a2c___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414a2c_type* @G__0x414a2c to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id33custom_multiply_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414a50___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414a50_type* @G__0x414a50 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id34custom_multiply_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414a75___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414a75_type* @G__0x414a75 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_callq_._Z14test_variable1Id22custom_divide_variableIdEEvPT_iS2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414a8c___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414a8c_type* @G__0x414a8c to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id31custom_divide_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414aad___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414aad_type* @G__0x414aad to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id32custom_divide_multiple_variable2IdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x414acf___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x414acf_type* @G__0x414acf to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_callq_._Z14test_variable4Id30custom_mixed_multiple_variableIdEEvPT_iS2_S2_S2_S2_PKc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_addq__0x170___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 368)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R14)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400478:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

