; ModuleID = 'loop_unroll/loop_unroll.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.one_result = type { double, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

$_Z4fillIPiiEvT_S1_T0_ = comdat any

$_ZN14for_loop_testsILi32EiE7do_testEPKiPKc = comdat any

$_ZN16while_loop_testsILi32EiE7do_testEPKiPKc = comdat any

$_ZN13do_loop_testsILi32EiE7do_testEPKiPKc = comdat any

$_ZN15goto_loop_testsILi32EiE7do_testEPKiPKc = comdat any

$_Z4fillIPddEvT_S1_T0_ = comdat any

$_ZN14for_loop_testsILi32EdE7do_testEPKdPKc = comdat any

$_ZN16while_loop_testsILi32EdE7do_testEPKdPKc = comdat any

$_ZN13do_loop_testsILi32EdE7do_testEPKdPKc = comdat any

$_ZN15goto_loop_testsILi32EdE7do_testEPKdPKc = comdat any

$_ZN15goto_loop_testsILi31EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi32EdEvPKT0_iPKc = comdat any

$_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi = comdat any

$_Z18complete_hash_funcIdET_S0_ = comdat any

$_Z9check_sumIdEvT_ = comdat any

$_Z15tolerance_equalIdEbRT_S1_ = comdat any

$_Z10hash_func2IdET_S0_ = comdat any

$_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi = comdat any

$_ZN15loop_inner_bodyILi0EdE7do_workERdPKdi = comdat any

$_ZN15goto_loop_testsILi30EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi31EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi29EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi30EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi28EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi29EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi27EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi28EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi26EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi27EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi25EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi26EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi24EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi25EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi23EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi24EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi22EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi23EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi21EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi22EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi20EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi21EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi19EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi20EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi18EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi19EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi17EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi18EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi16EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi17EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi15EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi16EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi14EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi15EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi13EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi14EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi12EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi13EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi11EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi12EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi10EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi11EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi9EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi10EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi8EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi9EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi7EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi8EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi6EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi7EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi5EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi6EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi4EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi5EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi3EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi4EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi2EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi3EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi1EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi2EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi0EdE7do_testEPKdPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi1EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi31EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi32EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi30EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi31EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi29EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi30EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi28EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi29EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi27EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi28EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi26EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi27EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi25EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi26EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi24EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi25EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi23EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi24EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi22EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi23EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi21EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi22EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi20EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi21EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi19EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi20EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi18EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi19EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi17EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi18EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi16EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi17EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi15EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi16EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi14EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi15EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi13EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi14EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi12EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi13EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi11EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi12EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi10EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi11EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi9EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi10EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi8EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi9EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi7EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi8EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi6EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi7EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi5EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi6EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi4EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi5EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi3EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi4EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi2EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi3EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi1EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi2EdEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi0EdE7do_testEPKdPKc = comdat any

$_Z26test_do_loop_unroll_factorILi1EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi31EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi32EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi30EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi31EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi29EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi30EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi28EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi29EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi27EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi28EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi26EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi27EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi25EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi26EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi24EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi25EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi23EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi24EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi22EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi23EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi21EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi22EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi20EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi21EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi19EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi20EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi18EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi19EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi17EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi18EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi16EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi17EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi15EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi16EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi14EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi15EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi13EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi14EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi12EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi13EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi11EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi12EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi10EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi11EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi9EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi10EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi8EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi9EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi7EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi8EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi6EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi7EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi5EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi6EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi4EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi5EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi3EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi4EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi2EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi3EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi1EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi2EdEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi0EdE7do_testEPKdPKc = comdat any

$_Z29test_while_loop_unroll_factorILi1EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi31EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi32EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi30EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi31EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi29EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi30EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi28EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi29EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi27EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi28EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi26EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi27EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi25EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi26EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi24EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi25EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi23EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi24EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi22EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi23EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi21EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi22EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi20EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi21EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi19EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi20EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi18EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi19EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi17EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi18EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi16EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi17EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi15EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi16EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi14EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi15EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi13EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi14EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi12EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi13EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi11EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi12EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi10EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi11EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi9EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi10EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi8EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi9EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi7EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi8EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi6EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi7EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi5EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi6EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi4EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi5EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi3EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi4EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi2EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi3EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi1EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi2EdEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi0EdE7do_testEPKdPKc = comdat any

$_Z27test_for_loop_unroll_factorILi1EdEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi31EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi32EiEvPKT0_iPKc = comdat any

$_ZN15loop_inner_bodyILi32EiE7do_workERiPKii = comdat any

$_Z18complete_hash_funcIiET_S0_ = comdat any

$_Z9check_sumIiEvT_ = comdat any

$_Z15tolerance_equalIiEbRT_S1_ = comdat any

$_Z10hash_func2IiET_S0_ = comdat any

$_ZN15loop_inner_bodyILi31EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi30EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi29EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi28EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi27EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi26EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi25EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi24EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi23EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi22EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi21EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi20EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi19EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi18EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi17EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi16EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi15EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi14EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi13EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi12EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi11EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi10EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi9EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi8EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi7EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi6EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi5EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi4EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi3EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi2EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi1EiE7do_workERiPKii = comdat any

$_ZN15loop_inner_bodyILi0EiE7do_workERiPKii = comdat any

$_ZN15goto_loop_testsILi30EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi31EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi29EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi30EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi28EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi29EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi27EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi28EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi26EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi27EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi25EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi26EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi24EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi25EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi23EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi24EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi22EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi23EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi21EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi22EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi20EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi21EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi19EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi20EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi18EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi19EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi17EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi18EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi16EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi17EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi15EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi16EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi14EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi15EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi13EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi14EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi12EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi13EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi11EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi12EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi10EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi11EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi9EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi10EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi8EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi9EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi7EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi8EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi6EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi7EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi5EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi6EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi4EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi5EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi3EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi4EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi2EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi3EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi1EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi2EiEvPKT0_iPKc = comdat any

$_ZN15goto_loop_testsILi0EiE7do_testEPKiPKc = comdat any

$_Z28test_goto_loop_unroll_factorILi1EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi31EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi32EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi30EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi31EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi29EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi30EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi28EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi29EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi27EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi28EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi26EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi27EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi25EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi26EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi24EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi25EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi23EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi24EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi22EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi23EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi21EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi22EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi20EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi21EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi19EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi20EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi18EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi19EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi17EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi18EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi16EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi17EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi15EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi16EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi14EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi15EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi13EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi14EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi12EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi13EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi11EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi12EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi10EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi11EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi9EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi10EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi8EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi9EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi7EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi8EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi6EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi7EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi5EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi6EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi4EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi5EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi3EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi4EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi2EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi3EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi1EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi2EiEvPKT0_iPKc = comdat any

$_ZN13do_loop_testsILi0EiE7do_testEPKiPKc = comdat any

$_Z26test_do_loop_unroll_factorILi1EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi31EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi32EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi30EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi31EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi29EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi30EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi28EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi29EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi27EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi28EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi26EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi27EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi25EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi26EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi24EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi25EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi23EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi24EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi22EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi23EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi21EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi22EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi20EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi21EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi19EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi20EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi18EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi19EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi17EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi18EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi16EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi17EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi15EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi16EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi14EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi15EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi13EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi14EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi12EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi13EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi11EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi12EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi10EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi11EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi9EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi10EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi8EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi9EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi7EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi8EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi6EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi7EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi5EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi6EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi4EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi5EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi3EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi4EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi2EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi3EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi1EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi2EiEvPKT0_iPKc = comdat any

$_ZN16while_loop_testsILi0EiE7do_testEPKiPKc = comdat any

$_Z29test_while_loop_unroll_factorILi1EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi31EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi32EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi30EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi31EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi29EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi30EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi28EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi29EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi27EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi28EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi26EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi27EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi25EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi26EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi24EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi25EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi23EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi24EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi22EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi23EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi21EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi22EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi20EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi21EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi19EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi20EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi18EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi19EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi17EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi18EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi16EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi17EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi15EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi16EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi14EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi15EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi13EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi14EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi12EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi13EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi11EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi12EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi10EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi11EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi9EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi10EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi8EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi9EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi7EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi8EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi6EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi7EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi5EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi6EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi4EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi5EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi3EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi4EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi2EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi3EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi1EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi2EiEvPKT0_iPKc = comdat any

$_ZN14for_loop_testsILi0EiE7do_testEPKiPKc = comdat any

$_Z27test_for_loop_unroll_factorILi1EiEvPKT0_iPKc = comdat any

@results = global %struct.one_result* null, align 8
@current_test = global i32 0, align 4
@allocated_results = global i32 0, align 4
@start_time = global i64 0, align 8
@end_time = global i64 0, align 8
@iterations = global i32 1000, align 4
@init_value = global double 1.000000e+00, align 8
@dataDouble = global [8000 x double] zeroinitializer, align 16
@data32 = global [8000 x i32] zeroinitializer, align 16
@temp_string = global [32 x [100 x i8]] zeroinitializer, align 16
@.str = private unnamed_addr constant [31 x i8] c"Could not allocate %d results\0A\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"\0Atest %*s description   absolute   operations   ratio with\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"number %*s time       per second   test0\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"%2i %*s\22%s\22  %5.2f sec   %5.2f M     %.2f\0A\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"\0ATotal absolute time for %s: %.2f sec\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"\0A%s Penalty: %.2f\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"\0Atest %*s description   absolute\0A\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"number %*s time\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"%2i %*s\22%s\22  %5.2f sec\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"int32_t for loop unroll\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"int32_t while loop unroll\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"int32_t do loop unroll\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"int32_t goto loop unroll\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"double for loop unroll\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"double while loop unroll\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"double do loop unroll\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"double goto loop unroll\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"test %i failed\0A\00", align 1

; Function Attrs: noinline uwtable
define void @_Z13record_resultdPKc(double %time, i8* %label) #0 {
entry:
  %time.addr = alloca double, align 8
  %label.addr = alloca i8*, align 8
  store double %time, double* %time.addr, align 8
  store i8* %label, i8** %label.addr, align 8
  %0 = load %struct.one_result*, %struct.one_result** @results, align 8
  %cmp = icmp eq %struct.one_result* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @current_test, align 4
  %2 = load i32, i32* @allocated_results, align 4
  %cmp1 = icmp sge i32 %1, %2
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32, i32* @allocated_results, align 4
  %add = add nsw i32 %3, 10
  store i32 %add, i32* @allocated_results, align 4
  %4 = load %struct.one_result*, %struct.one_result** @results, align 8
  %5 = bitcast %struct.one_result* %4 to i8*
  %6 = load i32, i32* @allocated_results, align 4
  %conv = sext i32 %6 to i64
  %mul = mul i64 %conv, 16
  %call = call i8* @realloc(i8* %5, i64 %mul) #8
  %7 = bitcast i8* %call to %struct.one_result*
  store %struct.one_result* %7, %struct.one_result** @results, align 8
  %8 = load %struct.one_result*, %struct.one_result** @results, align 8
  %cmp2 = icmp eq %struct.one_result* %8, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %9 = load i32, i32* @allocated_results, align 4
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i32 %9)
  call void @exit(i32 -1) #9
  unreachable

if.end:                                           ; preds = %if.then
  br label %if.end5

if.end5:                                          ; preds = %if.end, %lor.lhs.false
  %10 = load double, double* %time.addr, align 8
  %11 = load %struct.one_result*, %struct.one_result** @results, align 8
  %12 = load i32, i32* @current_test, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds %struct.one_result, %struct.one_result* %11, i64 %idxprom
  %time6 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx, i32 0, i32 0
  store double %10, double* %time6, align 8
  %13 = load i8*, i8** %label.addr, align 8
  %14 = load %struct.one_result*, %struct.one_result** @results, align 8
  %15 = load i32, i32* @current_test, align 4
  %idxprom7 = sext i32 %15 to i64
  %arrayidx8 = getelementptr inbounds %struct.one_result, %struct.one_result* %14, i64 %idxprom7
  %label9 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx8, i32 0, i32 1
  store i8* %13, i8** %label9, align 8
  %16 = load i32, i32* @current_test, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* @current_test, align 4
  ret void
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: noinline uwtable
define void @_Z9summarizePKciiii(i8* %name, i32 %size, i32 %iterations, i32 %show_gmeans, i32 %show_penalty) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %iterations.addr = alloca i32, align 4
  %show_gmeans.addr = alloca i32, align 4
  %show_penalty.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %millions = alloca double, align 8
  %total_absolute_times = alloca double, align 8
  %gmean_ratio = alloca double, align 8
  %longest_label_len = alloca i32, align 4
  %len = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %iterations, i32* %iterations.addr, align 4
  store i32 %show_gmeans, i32* %show_gmeans.addr, align 4
  store i32 %show_penalty, i32* %show_penalty.addr, align 4
  %0 = load i32, i32* %size.addr, align 4
  %conv = sitofp i32 %0 to double
  %1 = load i32, i32* %iterations.addr, align 4
  %conv1 = sitofp i32 %1 to double
  %mul = fmul double %conv, %conv1
  %div = fdiv double %mul, 1.000000e+06
  store double %div, double* %millions, align 8
  store double 0.000000e+00, double* %total_absolute_times, align 8
  store double 0.000000e+00, double* %gmean_ratio, align 8
  store i32 12, i32* %longest_label_len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* @current_test, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.one_result*, %struct.one_result** @results, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.one_result, %struct.one_result* %4, i64 %idxprom
  %label = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx, i32 0, i32 1
  %6 = load i8*, i8** %label, align 8
  %call = call i64 @strlen(i8* %6) #10
  %conv2 = trunc i64 %call to i32
  store i32 %conv2, i32* %len, align 4
  %7 = load i32, i32* %len, align 4
  %8 = load i32, i32* %longest_label_len, align 4
  %cmp3 = icmp sgt i32 %7, %8
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %len, align 4
  store i32 %9, i32* %longest_label_len, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %longest_label_len, align 4
  %sub = sub nsw i32 %11, 12
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i32 0, i32 0), i32 %sub, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  %12 = load i32, i32* %longest_label_len, align 4
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i32 0, i32 0), i32 %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc32, %for.end
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* @current_test, align 4
  %cmp7 = icmp slt i32 %13, %14
  br i1 %cmp7, label %for.body8, label %for.end34

for.body8:                                        ; preds = %for.cond6
  %15 = load i32, i32* %i, align 4
  %16 = load i32, i32* %longest_label_len, align 4
  %conv9 = sext i32 %16 to i64
  %17 = load %struct.one_result*, %struct.one_result** @results, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds %struct.one_result, %struct.one_result* %17, i64 %idxprom10
  %label12 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx11, i32 0, i32 1
  %19 = load i8*, i8** %label12, align 8
  %call13 = call i64 @strlen(i8* %19) #10
  %sub14 = sub i64 %conv9, %call13
  %conv15 = trunc i64 %sub14 to i32
  %20 = load %struct.one_result*, %struct.one_result** @results, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %21 to i64
  %arrayidx17 = getelementptr inbounds %struct.one_result, %struct.one_result* %20, i64 %idxprom16
  %label18 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx17, i32 0, i32 1
  %22 = load i8*, i8** %label18, align 8
  %23 = load %struct.one_result*, %struct.one_result** @results, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %24 to i64
  %arrayidx20 = getelementptr inbounds %struct.one_result, %struct.one_result* %23, i64 %idxprom19
  %time = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx20, i32 0, i32 0
  %25 = load double, double* %time, align 8
  %26 = load double, double* %millions, align 8
  %27 = load %struct.one_result*, %struct.one_result** @results, align 8
  %28 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %28 to i64
  %arrayidx22 = getelementptr inbounds %struct.one_result, %struct.one_result* %27, i64 %idxprom21
  %time23 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx22, i32 0, i32 0
  %29 = load double, double* %time23, align 8
  %div24 = fdiv double %26, %29
  %30 = load %struct.one_result*, %struct.one_result** @results, align 8
  %31 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %31 to i64
  %arrayidx26 = getelementptr inbounds %struct.one_result, %struct.one_result* %30, i64 %idxprom25
  %time27 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx26, i32 0, i32 0
  %32 = load double, double* %time27, align 8
  %33 = load %struct.one_result*, %struct.one_result** @results, align 8
  %arrayidx28 = getelementptr inbounds %struct.one_result, %struct.one_result* %33, i64 0
  %time29 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx28, i32 0, i32 0
  %34 = load double, double* %time29, align 8
  %div30 = fdiv double %32, %34
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i32 0, i32 0), i32 %15, i32 %conv15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* %22, double %25, double %div24, double %div30)
  br label %for.inc32

for.inc32:                                        ; preds = %for.body8
  %35 = load i32, i32* %i, align 4
  %inc33 = add nsw i32 %35, 1
  store i32 %inc33, i32* %i, align 4
  br label %for.cond6

for.end34:                                        ; preds = %for.cond6
  store i32 0, i32* %i, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc41, %for.end34
  %36 = load i32, i32* %i, align 4
  %37 = load i32, i32* @current_test, align 4
  %cmp36 = icmp slt i32 %36, %37
  br i1 %cmp36, label %for.body37, label %for.end43

for.body37:                                       ; preds = %for.cond35
  %38 = load %struct.one_result*, %struct.one_result** @results, align 8
  %39 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %39 to i64
  %arrayidx39 = getelementptr inbounds %struct.one_result, %struct.one_result* %38, i64 %idxprom38
  %time40 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx39, i32 0, i32 0
  %40 = load double, double* %time40, align 8
  %41 = load double, double* %total_absolute_times, align 8
  %add = fadd double %41, %40
  store double %add, double* %total_absolute_times, align 8
  br label %for.inc41

for.inc41:                                        ; preds = %for.body37
  %42 = load i32, i32* %i, align 4
  %inc42 = add nsw i32 %42, 1
  store i32 %inc42, i32* %i, align 4
  br label %for.cond35

for.end43:                                        ; preds = %for.cond35
  %43 = load i8*, i8** %name.addr, align 8
  %44 = load double, double* %total_absolute_times, align 8
  %call44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i8* %43, double %44)
  %45 = load i32, i32* @current_test, align 4
  %cmp45 = icmp sgt i32 %45, 1
  br i1 %cmp45, label %land.lhs.true, label %if.end66

land.lhs.true:                                    ; preds = %for.end43
  %46 = load i32, i32* %show_penalty.addr, align 4
  %tobool = icmp ne i32 %46, 0
  br i1 %tobool, label %if.then46, label %if.end66

if.then46:                                        ; preds = %land.lhs.true
  store i32 1, i32* %i, align 4
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc58, %if.then46
  %47 = load i32, i32* %i, align 4
  %48 = load i32, i32* @current_test, align 4
  %cmp48 = icmp slt i32 %47, %48
  br i1 %cmp48, label %for.body49, label %for.end60

for.body49:                                       ; preds = %for.cond47
  %49 = load %struct.one_result*, %struct.one_result** @results, align 8
  %50 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %50 to i64
  %arrayidx51 = getelementptr inbounds %struct.one_result, %struct.one_result* %49, i64 %idxprom50
  %time52 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx51, i32 0, i32 0
  %51 = load double, double* %time52, align 8
  %52 = load %struct.one_result*, %struct.one_result** @results, align 8
  %arrayidx53 = getelementptr inbounds %struct.one_result, %struct.one_result* %52, i64 0
  %time54 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx53, i32 0, i32 0
  %53 = load double, double* %time54, align 8
  %div55 = fdiv double %51, %53
  %call56 = call double @log(double %div55) #8
  %54 = load double, double* %gmean_ratio, align 8
  %add57 = fadd double %54, %call56
  store double %add57, double* %gmean_ratio, align 8
  br label %for.inc58

for.inc58:                                        ; preds = %for.body49
  %55 = load i32, i32* %i, align 4
  %inc59 = add nsw i32 %55, 1
  store i32 %inc59, i32* %i, align 4
  br label %for.cond47

for.end60:                                        ; preds = %for.cond47
  %56 = load i8*, i8** %name.addr, align 8
  %57 = load double, double* %gmean_ratio, align 8
  %58 = load i32, i32* @current_test, align 4
  %sub61 = sub nsw i32 %58, 1
  %conv62 = sitofp i32 %sub61 to double
  %div63 = fdiv double %57, %conv62
  %call64 = call double @exp(double %div63) #8
  %call65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i8* %56, double %call64)
  br label %if.end66

if.end66:                                         ; preds = %for.end60, %land.lhs.true, %for.end43
  store i32 0, i32* @current_test, align 4
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind
declare double @log(double) #1

; Function Attrs: nounwind
declare double @exp(double) #1

; Function Attrs: noinline uwtable
define void @_Z17summarize_simplefP8_IO_FILEPKc(%struct._IO_FILE* %output, i8* %name) #0 {
entry:
  %output.addr = alloca %struct._IO_FILE*, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %total_absolute_times = alloca double, align 8
  %longest_label_len = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct._IO_FILE* %output, %struct._IO_FILE** %output.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  store double 0.000000e+00, double* %total_absolute_times, align 8
  store i32 12, i32* %longest_label_len, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @current_test, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.one_result*, %struct.one_result** @results, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %struct.one_result, %struct.one_result* %2, i64 %idxprom
  %label = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx, i32 0, i32 1
  %4 = load i8*, i8** %label, align 8
  %call = call i64 @strlen(i8* %4) #10
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %len, align 4
  %5 = load i32, i32* %len, align 4
  %6 = load i32, i32* %longest_label_len, align 4
  %cmp1 = icmp sgt i32 %5, %6
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %len, align 4
  store i32 %7, i32* %longest_label_len, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %output.addr, align 8
  %10 = load i32, i32* %longest_label_len, align 4
  %sub = sub nsw i32 %10, 12
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i32 0, i32 0), i32 %sub, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %output.addr, align 8
  %12 = load i32, i32* %longest_label_len, align 4
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), i32 %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc20, %for.end
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* @current_test, align 4
  %cmp5 = icmp slt i32 %13, %14
  br i1 %cmp5, label %for.body6, label %for.end22

for.body6:                                        ; preds = %for.cond4
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %output.addr, align 8
  %16 = load i32, i32* %i, align 4
  %17 = load i32, i32* %longest_label_len, align 4
  %conv7 = sext i32 %17 to i64
  %18 = load %struct.one_result*, %struct.one_result** @results, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %19 to i64
  %arrayidx9 = getelementptr inbounds %struct.one_result, %struct.one_result* %18, i64 %idxprom8
  %label10 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx9, i32 0, i32 1
  %20 = load i8*, i8** %label10, align 8
  %call11 = call i64 @strlen(i8* %20) #10
  %sub12 = sub i64 %conv7, %call11
  %conv13 = trunc i64 %sub12 to i32
  %21 = load %struct.one_result*, %struct.one_result** @results, align 8
  %22 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %22 to i64
  %arrayidx15 = getelementptr inbounds %struct.one_result, %struct.one_result* %21, i64 %idxprom14
  %label16 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx15, i32 0, i32 1
  %23 = load i8*, i8** %label16, align 8
  %24 = load %struct.one_result*, %struct.one_result** @results, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %25 to i64
  %arrayidx18 = getelementptr inbounds %struct.one_result, %struct.one_result* %24, i64 %idxprom17
  %time = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx18, i32 0, i32 0
  %26 = load double, double* %time, align 8
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i32 %16, i32 %conv13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i32 0, i32 0), i8* %23, double %26)
  br label %for.inc20

for.inc20:                                        ; preds = %for.body6
  %27 = load i32, i32* %i, align 4
  %inc21 = add nsw i32 %27, 1
  store i32 %inc21, i32* %i, align 4
  br label %for.cond4

for.end22:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc29, %for.end22
  %28 = load i32, i32* %i, align 4
  %29 = load i32, i32* @current_test, align 4
  %cmp24 = icmp slt i32 %28, %29
  br i1 %cmp24, label %for.body25, label %for.end31

for.body25:                                       ; preds = %for.cond23
  %30 = load %struct.one_result*, %struct.one_result** @results, align 8
  %31 = load i32, i32* %i, align 4
  %idxprom26 = sext i32 %31 to i64
  %arrayidx27 = getelementptr inbounds %struct.one_result, %struct.one_result* %30, i64 %idxprom26
  %time28 = getelementptr inbounds %struct.one_result, %struct.one_result* %arrayidx27, i32 0, i32 0
  %32 = load double, double* %time28, align 8
  %33 = load double, double* %total_absolute_times, align 8
  %add = fadd double %33, %32
  store double %add, double* %total_absolute_times, align 8
  br label %for.inc29

for.inc29:                                        ; preds = %for.body25
  %34 = load i32, i32* %i, align 4
  %inc30 = add nsw i32 %34, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond23

for.end31:                                        ; preds = %for.cond23
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %output.addr, align 8
  %36 = load i8*, i8** %name.addr, align 8
  %37 = load double, double* %total_absolute_times, align 8
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i8* %36, double %37)
  store i32 0, i32* @current_test, align 4
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define void @_Z11start_timerv() #5 {
entry:
  %call = call i64 @clock() #8
  store i64 %call, i64* @start_time, align 8
  ret void
}

; Function Attrs: nounwind
declare i64 @clock() #1

; Function Attrs: noinline nounwind uwtable
define double @_Z5timerv() #5 {
entry:
  %call = call i64 @clock() #8
  store i64 %call, i64* @end_time, align 8
  %0 = load i64, i64* @end_time, align 8
  %1 = load i64, i64* @start_time, align 8
  %sub = sub nsw i64 %0, %1
  %conv = sitofp i64 %sub to double
  %div = fdiv double %conv, 1.000000e+06
  ret double %div
}

; Function Attrs: noinline norecurse uwtable
define i32 @main(i32 %argc, i8** %argv) #6 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load i32, i32* %argc.addr, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %argv.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 1
  %2 = load i8*, i8** %arrayidx, align 8
  %call = call i32 @atoi(i8* %2) #10
  store i32 %call, i32* @iterations, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %argc.addr, align 4
  %cmp1 = icmp sgt i32 %3, 2
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %4 = load i8**, i8*** %argv.addr, align 8
  %arrayidx3 = getelementptr inbounds i8*, i8** %4, i64 2
  %5 = load i8*, i8** %arrayidx3, align 8
  %call4 = call double @atof(i8* %5) #10
  store double %call4, double* @init_value, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load double, double* @init_value, align 8
  %conv = fptosi double %6 to i32
  call void @_Z4fillIPiiEvT_S1_T0_(i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i32* getelementptr inbounds (i32, i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i64 8000), i32 %conv)
  call void @_ZN14for_loop_testsILi32EiE7do_testEPKiPKc(i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0))
  call void @_ZN16while_loop_testsILi32EiE7do_testEPKiPKc(i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i32 0, i32 0))
  call void @_ZN13do_loop_testsILi32EiE7do_testEPKiPKc(i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0))
  call void @_ZN15goto_loop_testsILi32EiE7do_testEPKiPKc(i32* getelementptr inbounds ([8000 x i32], [8000 x i32]* @data32, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0))
  %7 = load i32, i32* @iterations, align 4
  %div = sdiv i32 %7, 4
  store i32 %div, i32* @iterations, align 4
  %8 = load double, double* @init_value, align 8
  call void @_Z4fillIPddEvT_S1_T0_(double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), double* getelementptr inbounds (double, double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), i64 8000), double %8)
  call void @_ZN14for_loop_testsILi32EdE7do_testEPKdPKc(double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0))
  call void @_ZN16while_loop_testsILi32EdE7do_testEPKdPKc(double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0))
  call void @_ZN13do_loop_testsILi32EdE7do_testEPKdPKc(double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i32 0, i32 0))
  call void @_ZN15goto_loop_testsILi32EdE7do_testEPKdPKc(double* getelementptr inbounds ([8000 x double], [8000 x double]* @dataDouble, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0))
  ret i32 0
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

; Function Attrs: nounwind readonly
declare double @atof(i8*) #4

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_Z4fillIPiiEvT_S1_T0_(i32* %first, i32* %last, i32 %value) #5 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %last.addr = alloca i32*, align 8
  %value.addr = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32* %last, i32** %last.addr, align 8
  store i32 %value, i32* %value.addr, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32*, i32** %first.addr, align 8
  %1 = load i32*, i32** %last.addr, align 8
  %cmp = icmp ne i32* %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %value.addr, align 4
  %3 = load i32*, i32** %first.addr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %3, i32 1
  store i32* %incdec.ptr, i32** %first.addr, align 8
  store i32 %2, i32* %3, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi32EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi31EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi32EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi31EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi32EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi31EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi32EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi31EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_Z4fillIPddEvT_S1_T0_(double* %first, double* %last, double %value) #5 comdat {
entry:
  %first.addr = alloca double*, align 8
  %last.addr = alloca double*, align 8
  %value.addr = alloca double, align 8
  store double* %first, double** %first.addr, align 8
  store double* %last, double** %last.addr, align 8
  store double %value, double* %value.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load double*, double** %first.addr, align 8
  %1 = load double*, double** %last.addr, align 8
  %cmp = icmp ne double* %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load double, double* %value.addr, align 8
  %3 = load double*, double** %first.addr, align 8
  %incdec.ptr = getelementptr inbounds double, double* %3, i32 1
  store double* %incdec.ptr, double** %first.addr, align 8
  store double %2, double* %3, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi32EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi31EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi32EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi31EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi32EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi31EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi32EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi31EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 31, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi31EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi30EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 32
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 31
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 31
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr double @_Z18complete_hash_funcIdET_S0_(double %seed) #0 comdat {
entry:
  %seed.addr = alloca double, align 8
  store double %seed, double* %seed.addr, align 8
  %0 = load double, double* %seed.addr, align 8
  %call = call double @_Z10hash_func2IdET_S0_(double %0)
  %call1 = call double @_Z10hash_func2IdET_S0_(double %call)
  %call2 = call double @_Z10hash_func2IdET_S0_(double %call1)
  ret double %call2
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z9check_sumIdEvT_(double %result) #0 comdat {
entry:
  %result.addr = alloca double, align 8
  %temp = alloca double, align 8
  store double %result, double* %result.addr, align 8
  %0 = load double, double* @init_value, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %0)
  %mul = fmul double 8.000000e+03, %call
  store double %mul, double* %temp, align 8
  %call1 = call zeroext i1 @_Z15tolerance_equalIdEbRT_S1_(double* dereferenceable(8) %result.addr, double* dereferenceable(8) %temp)
  br i1 %call1, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @current_test, align 4
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_Z15tolerance_equalIdEbRT_S1_(double* dereferenceable(8) %a, double* dereferenceable(8) %b) #5 comdat {
entry:
  %a.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %diff = alloca double, align 8
  %reldiff = alloca double, align 8
  store double* %a, double** %a.addr, align 8
  store double* %b, double** %b.addr, align 8
  %0 = load double*, double** %a.addr, align 8
  %1 = load double, double* %0, align 8
  %2 = load double*, double** %b.addr, align 8
  %3 = load double, double* %2, align 8
  %sub = fsub double %1, %3
  store double %sub, double* %diff, align 8
  %4 = load double, double* %diff, align 8
  store double %4, double* %reldiff, align 8
  %5 = load double*, double** %a.addr, align 8
  %6 = load double, double* %5, align 8
  %call = call double @fabs(double %6) #11
  %cmp = fcmp ogt double %call, 1.000000e-08
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load double, double* %diff, align 8
  %8 = load double*, double** %a.addr, align 8
  %9 = load double, double* %8, align 8
  %div = fdiv double %7, %9
  store double %div, double* %reldiff, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load double, double* %reldiff, align 8
  %call1 = call double @fabs(double %10) #11
  %cmp2 = fcmp olt double %call1, 1.000000e-06
  ret i1 %cmp2
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_Z10hash_func2IdET_S0_(double %seed) #5 comdat {
entry:
  %seed.addr = alloca double, align 8
  store double %seed, double* %seed.addr, align 8
  %0 = load double, double* %seed.addr, align 8
  %add = fadd double %0, 1.234500e+04
  %mul = fmul double 9.142370e+05, %add
  %sub = fsub double %mul, 1.300000e+01
  ret double %sub
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 30
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 29
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 28
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 27
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 26
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 25
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 24
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 23
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 22
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 21
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 20
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 19
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 18
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 17
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 16
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 15
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 14
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 13
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 12
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 11
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 10
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 9
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 8
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 7
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 5
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 4
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 3
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 2
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca double*, align 8
  %first.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca double, align 8
  store double* %result, double** %result.addr, align 8
  store double* %first, double** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load double*, double** %result.addr, align 8
  %1 = load double*, double** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi0EdE7do_workERdPKdi(double* dereferenceable(8) %0, double* %1, i32 %2)
  %3 = load double*, double** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8
  store double %5, double* %temp, align 8
  %6 = load double, double* %temp, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %6)
  store double %call, double* %temp, align 8
  %7 = load double, double* %temp, align 8
  %8 = load double*, double** %result.addr, align 8
  %9 = load double, double* %8, align 8
  %add1 = fadd double %9, %7
  store double %add1, double* %8, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi0EdE7do_workERdPKdi(double* dereferenceable(8), double*, i32) #5 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca double*, align 8
  %.addr2 = alloca i32, align 4
  store double* %0, double** %.addr, align 8
  store double* %1, double** %.addr1, align 8
  store i32 %2, i32* %.addr2, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi30EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi29EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 31
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 30
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi29EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi28EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 30
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 29
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi28EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi27EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 29
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 28
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi27EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi26EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 28
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 27
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi26EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi25EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 27
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 26
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi25EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi24EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 26
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 25
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi24EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi23EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 25
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 24
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi23EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi22EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 24
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 23
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi22EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi21EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 23
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 22
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi21EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi20EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 22
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 21
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi20EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi19EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 21
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 20
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi19EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi18EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 20
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 19
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi18EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi17EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 19
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 18
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi17EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi16EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 18
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 17
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi16EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi15EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 17
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 16
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi15EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi14EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 16
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 15
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi14EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi13EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 15
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 14
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi13EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi12EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 14
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 13
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi12EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi11EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 13
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 12
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi11EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi10EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 12
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 11
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi10EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi9EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 11
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 10
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi9EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi8EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 10
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 9
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi8EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi7EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 9
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 8
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi7EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi6EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 8
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 7
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi6EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi5EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 7
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 6
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi5EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi4EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 6
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 5
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi4EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi3EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 5
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 4
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi3EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi2EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 4
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 3
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi2EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi1EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 3
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 2
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi1EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi0EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 2
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 1
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi0EdE7do_testEPKdPKc(double*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca i8*, align 8
  store double* %0, double** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 1
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 0
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add8 = fadd double %14, %call
  store double %add8, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi31EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi30EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 32
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 31
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi30EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi29EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 31
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 30
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi29EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi28EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 30
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 29
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi28EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi27EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 29
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 28
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi27EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi26EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 28
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 27
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi26EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi25EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 27
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 26
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi25EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi24EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 26
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 25
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi24EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi23EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 25
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 24
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi23EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi22EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 24
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 23
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi22EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi21EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 23
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 22
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi21EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi20EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 22
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 21
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi20EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi19EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 21
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 20
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi19EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi18EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 20
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 19
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi18EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi17EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 19
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 18
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi17EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi16EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 18
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 17
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi16EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi15EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 17
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 16
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi15EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi14EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 16
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 15
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi14EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi13EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 15
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 14
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi13EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi12EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 14
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 13
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi12EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi11EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 13
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 12
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi11EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi10EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 12
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 11
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi10EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi9EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 11
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 10
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi9EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi8EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 10
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 9
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi8EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi7EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 8
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi7EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi6EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 8
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 7
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi6EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi5EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 7
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 6
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi5EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi4EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 6
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 5
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi4EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi3EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 5
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 4
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi3EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi2EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 3
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi2EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi1EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 2
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi1EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi0EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 1
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN13do_loop_testsILi0EdE7do_testEPKdPKc(double*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca i8*, align 8
  store double* %0, double** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 0
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load double*, double** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %13)
  %14 = load double, double* %result, align 8
  %add7 = fadd double %14, %call
  store double %add7, double* %result, align 8
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi31EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi30EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 31
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi30EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi29EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 30
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi29EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi28EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 29
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi28EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi27EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 28
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi27EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi26EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 27
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi26EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi25EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 26
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi25EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi24EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 25
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi24EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi23EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 24
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi23EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi22EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 23
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi22EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi21EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 22
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi21EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi20EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 21
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi20EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi19EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 20
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi19EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi18EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 19
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi18EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi17EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 18
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi17EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi16EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 17
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi16EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi15EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 16
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi15EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi14EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 15
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi14EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi13EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 14
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi13EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi12EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 13
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi12EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi11EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 12
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi11EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi10EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 11
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi10EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi9EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 10
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi9EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi8EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 9
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi8EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi7EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 8
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi7EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi6EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 7
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi6EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi5EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 6
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi5EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi4EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 5
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi4EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi3EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 4
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi3EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi2EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 3
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi2EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi1EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 2
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi1EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi0EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 1
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN16while_loop_testsILi0EdE7do_testEPKdPKc(double*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca i8*, align 8
  store double* %0, double** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 0
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add5 = fadd double %12, %call
  store double %add5, double* %result, align 8
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi31EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi30EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi32EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 31
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi30EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi29EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi31EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 30
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi29EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi28EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi30EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 29
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi28EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi27EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi29EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 28
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi27EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi26EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi28EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 27
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi26EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi25EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi27EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 26
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi25EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi24EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi26EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 25
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi24EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi23EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi25EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 24
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi23EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi22EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi24EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 23
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi22EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi21EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi23EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 22
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi21EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi20EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi22EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 21
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi20EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi19EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi21EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 20
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi19EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi18EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi20EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 19
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi18EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi17EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi19EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 18
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi17EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi16EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi18EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 17
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi16EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi15EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi17EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 16
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi15EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi14EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi16EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 15
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi14EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi13EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi15EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 14
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi13EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi12EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi14EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 13
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi12EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi11EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi13EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 12
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi11EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi10EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi12EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 11
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi10EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi9EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi11EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 10
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi9EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi8EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi10EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 9
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi8EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi7EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi9EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 8
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi7EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi6EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi8EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 7
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi6EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi5EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi7EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 6
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi5EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi4EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi6EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 5
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi4EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi3EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi5EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 4
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi3EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi2EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi4EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 3
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi2EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi1EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi3EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 2
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi1EdE7do_testEPKdPKc(double* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca double*, align 8
  %label_base.addr = alloca i8*, align 8
  store double* %data, double** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load double*, double** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi0EdE7do_testEPKdPKc(double* %0, i8* %1)
  %2 = load double*, double** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi2EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 1
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN14for_loop_testsILi0EdE7do_testEPKdPKc(double*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca i8*, align 8
  store double* %0, double** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi1EdEvPKT0_iPKc(double* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca double*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca double, align 8
  %n = alloca i32, align 4
  store double* %first, double** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %result, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 0
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load double*, double** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EdE7do_workERdPKdi(double* dereferenceable(8) %result, double* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load double*, double** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx, align 8
  %call = call double @_Z18complete_hash_funcIdET_S0_(double %11)
  %12 = load double, double* %result, align 8
  %add7 = fadd double %12, %call
  store double %add7, double* %result, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load double, double* %result, align 8
  call void @_Z9check_sumIdEvT_(double %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi31EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi30EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 32
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 31
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi32EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 31
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z18complete_hash_funcIiET_S0_(i32 %seed) #0 comdat {
entry:
  %seed.addr = alloca i32, align 4
  store i32 %seed, i32* %seed.addr, align 4
  %0 = load i32, i32* %seed.addr, align 4
  %call = call i32 @_Z10hash_func2IiET_S0_(i32 %0)
  %call1 = call i32 @_Z10hash_func2IiET_S0_(i32 %call)
  %call2 = call i32 @_Z10hash_func2IiET_S0_(i32 %call1)
  ret i32 %call2
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z9check_sumIiEvT_(i32 %result) #0 comdat {
entry:
  %result.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32 %result, i32* %result.addr, align 4
  %0 = load double, double* @init_value, align 8
  %conv = fptosi double %0 to i32
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %conv)
  %mul = mul nsw i32 8000, %call
  store i32 %mul, i32* %temp, align 4
  %call1 = call zeroext i1 @_Z15tolerance_equalIiEbRT_S1_(i32* dereferenceable(4) %result.addr, i32* dereferenceable(4) %temp)
  br i1 %call1, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @current_test, align 4
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i32 %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_Z15tolerance_equalIiEbRT_S1_(i32* dereferenceable(4) %a, i32* dereferenceable(4) %b) #5 comdat {
entry:
  %a.addr = alloca i32*, align 8
  %b.addr = alloca i32*, align 8
  store i32* %a, i32** %a.addr, align 8
  store i32* %b, i32** %b.addr, align 8
  %0 = load i32*, i32** %a.addr, align 8
  %1 = load i32, i32* %0, align 4
  %2 = load i32*, i32** %b.addr, align 8
  %3 = load i32, i32* %2, align 4
  %cmp = icmp eq i32 %1, %3
  ret i1 %cmp
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_Z10hash_func2IiET_S0_(i32 %seed) #5 comdat {
entry:
  %seed.addr = alloca i32, align 4
  store i32 %seed, i32* %seed.addr, align 4
  %0 = load i32, i32* %seed.addr, align 4
  %add = add nsw i32 %0, 12345
  %mul = mul nsw i32 914237, %add
  %sub = sub nsw i32 %mul, 13
  ret i32 %sub
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 30
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 29
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 28
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 27
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 26
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 25
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 24
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 23
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 22
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 21
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 20
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 19
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 18
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 17
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 16
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 15
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 14
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 13
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 12
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 11
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 10
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 9
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 8
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 7
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 5
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 4
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 3
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 2
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %first, i32 %n) #0 comdat align 2 {
entry:
  %result.addr = alloca i32*, align 8
  %first.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %result, i32** %result.addr, align 8
  store i32* %first, i32** %first.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32*, i32** %result.addr, align 8
  %1 = load i32*, i32** %first.addr, align 8
  %2 = load i32, i32* %n.addr, align 4
  call void @_ZN15loop_inner_bodyILi0EiE7do_workERiPKii(i32* dereferenceable(4) %0, i32* %1, i32 %2)
  %3 = load i32*, i32** %first.addr, align 8
  %4 = load i32, i32* %n.addr, align 4
  %add = add nsw i32 %4, 0
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4
  store i32 %5, i32* %temp, align 4
  %6 = load i32, i32* %temp, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %6)
  store i32 %call, i32* %temp, align 4
  %7 = load i32, i32* %temp, align 4
  %8 = load i32*, i32** %result.addr, align 8
  %9 = load i32, i32* %8, align 4
  %add1 = add nsw i32 %9, %7
  store i32 %add1, i32* %8, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15loop_inner_bodyILi0EiE7do_workERiPKii(i32* dereferenceable(4), i32*, i32) #5 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i32*, align 8
  %.addr2 = alloca i32, align 4
  store i32* %0, i32** %.addr, align 8
  store i32* %1, i32** %.addr1, align 8
  store i32 %2, i32* %.addr2, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi30EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi29EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 31
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 30
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi29EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi28EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 30
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 29
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi28EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi27EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 29
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 28
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi27EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi26EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 28
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 27
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi26EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi25EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 27
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 26
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi25EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi24EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 26
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 25
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi24EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi23EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 25
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 24
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi23EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi22EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 24
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 23
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi22EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi21EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 23
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 22
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi21EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi20EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 22
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 21
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi20EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi19EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 21
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 20
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi19EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi18EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 20
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 19
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi18EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi17EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 19
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 18
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi17EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi16EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 18
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 17
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi16EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi15EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 17
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 16
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi15EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi14EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 16
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 15
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi14EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi13EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 15
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 14
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi13EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi12EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 14
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 13
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi12EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi11EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 13
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 12
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi11EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi10EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 12
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 11
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi10EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi9EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 11
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 10
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi9EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi8EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 10
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 9
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi8EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi7EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 9
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 8
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi7EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi6EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 8
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 7
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi6EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi5EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 7
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 6
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi5EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi4EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 6
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 5
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi4EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi3EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 5
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 4
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi3EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi2EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 4
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 3
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi2EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi1EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 3
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 2
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi1EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN15goto_loop_testsILi0EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z28test_goto_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 2
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 1
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN15goto_loop_testsILi0EiE7do_testEPKiPKc(i32*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i8*, align 8
  store i32* %0, i32** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z28test_goto_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 1
  br i1 %cmp1, label %if.then, label %if.end5

if.then:                                          ; preds = %for.body
  br label %loop2_start

loop2_start:                                      ; preds = %if.then4, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 0
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %loop2_start
  br label %loop2_start

if.end:                                           ; preds = %loop2_start
  br label %if.end5

if.end5:                                          ; preds = %if.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %if.then7, label %if.end12

if.then7:                                         ; preds = %if.end5
  br label %loop_start

loop_start:                                       ; preds = %if.then10, %if.then7
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add8 = add nsw i32 %14, %call
  store i32 %add8, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %loop_start
  br label %loop_start

if.end11:                                         ; preds = %loop_start
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end5
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %19 = load i32, i32* %i, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call14 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call14, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi31EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi30EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 32
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 31
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi30EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi29EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 31
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 30
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi29EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi28EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 30
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 29
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi28EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi27EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 29
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 28
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi27EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi26EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 28
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 27
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi26EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi25EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 27
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 26
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi25EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi24EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 26
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 25
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi24EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi23EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 25
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 24
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi23EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi22EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 24
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 23
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi22EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi21EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 23
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 22
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi21EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi20EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 22
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 21
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi20EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi19EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 21
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 20
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi19EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi18EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 20
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 19
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi18EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi17EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 19
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 18
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi17EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi16EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 18
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 17
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi16EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi15EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 17
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 16
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi15EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi14EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 16
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 15
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi14EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi13EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 15
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 14
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi13EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi12EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 14
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 13
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi12EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi11EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 13
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 12
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi11EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi10EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 12
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 11
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi10EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi9EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 11
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 10
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi9EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi8EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 10
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 9
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi8EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi7EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 9
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 8
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi7EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi6EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 8
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 7
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi6EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi5EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 7
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 6
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi5EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi4EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 6
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 5
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi4EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi3EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 5
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 4
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi3EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi2EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 4
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 3
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi2EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi1EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 2
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN13do_loop_testsILi1EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN13do_loop_testsILi0EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z26test_do_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 1
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN13do_loop_testsILi0EiE7do_testEPKiPKc(i32*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i8*, align 8
  store i32* %0, i32** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z26test_do_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  %2 = load i32, i32* %count.addr, align 4
  %3 = load i32, i32* %n, align 4
  %sub = sub nsw i32 %2, %3
  %cmp1 = icmp sge i32 %sub, 1
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %sub2 = sub nsw i32 %8, 0
  %cmp3 = icmp slt i32 %7, %sub2
  br i1 %cmp3, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body
  %9 = load i32, i32* %n, align 4
  %10 = load i32, i32* %count.addr, align 4
  %cmp4 = icmp slt i32 %9, %10
  br i1 %cmp4, label %if.then5, label %if.end11

if.then5:                                         ; preds = %if.end
  br label %do.body6

do.body6:                                         ; preds = %do.cond8, %if.then5
  %11 = load i32*, i32** %first.addr, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %13)
  %14 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %14, %call
  store i32 %add7, i32* %result, align 4
  %15 = load i32, i32* %n, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %n, align 4
  br label %do.cond8

do.cond8:                                         ; preds = %do.body6
  %16 = load i32, i32* %n, align 4
  %17 = load i32, i32* %count.addr, align 4
  %cmp9 = icmp ne i32 %16, %17
  br i1 %cmp9, label %do.body6, label %do.end10

do.end10:                                         ; preds = %do.cond8
  br label %if.end11

if.end11:                                         ; preds = %do.end10, %if.end
  %18 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.end11
  %19 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %19, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %20 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %20)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi31EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi30EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 31
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi30EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi29EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 30
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi29EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi28EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 29
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi28EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi27EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 28
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi27EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi26EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 27
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi26EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi25EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 26
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi25EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi24EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 25
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi24EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi23EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 24
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi23EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi22EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 23
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi22EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi21EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 22
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi21EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi20EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 21
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi20EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi19EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 20
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi19EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi18EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 19
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi18EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi17EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 18
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi17EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi16EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 17
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi16EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi15EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 16
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi15EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi14EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 15
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi14EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi13EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 14
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi13EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi12EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 13
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi12EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi11EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 12
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi11EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi10EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 11
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi10EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi9EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 10
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi9EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi8EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 9
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi8EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi7EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 8
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi7EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi6EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 7
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi6EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi5EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 6
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi5EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi4EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 5
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi4EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi3EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 4
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi3EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi2EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 3
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi2EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi1EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 2
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN16while_loop_testsILi1EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN16while_loop_testsILi0EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z29test_while_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 1
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN16while_loop_testsILi0EiE7do_testEPKiPKc(i32*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i8*, align 8
  store i32* %0, i32** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z29test_while_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 0
  %cmp1 = icmp slt i32 %2, %sub
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %while.body4, %while.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp3 = icmp slt i32 %7, %8
  br i1 %cmp3, label %while.body4, label %while.end6

while.body4:                                      ; preds = %while.cond2
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add5 = add nsw i32 %12, %call
  store i32 %add5, i32* %result, align 4
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %while.cond2

while.end6:                                       ; preds = %while.cond2
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc

for.inc:                                          ; preds = %while.end6
  %15 = load i32, i32* %i, align 4
  %inc7 = add nsw i32 %15, 1
  store i32 %inc7, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call8 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call8, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi31EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi30EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 30, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi32EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 31
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi32EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 32
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi30EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi29EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 29, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi31EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 30
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi31EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 31
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi29EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi28EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 28, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi30EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 29
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi30EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 30
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi28EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi27EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 27, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi29EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 28
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi29EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 29
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi27EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi26EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 26, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi28EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 27
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi28EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 28
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi26EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi25EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 25, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi27EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 26
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi27EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 27
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi25EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi24EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 24, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi26EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 25
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi26EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 26
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi24EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi23EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 23, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi25EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 24
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi25EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 25
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi23EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi22EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 22, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi24EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 23
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi24EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 24
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi22EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi21EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 21, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi23EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 22
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi23EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 23
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi21EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi20EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 20, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi22EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 21
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi22EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 22
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi20EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi19EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 19, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi21EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 20
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi21EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 21
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi19EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi18EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 18, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi20EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 19
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi20EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 20
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi18EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi17EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 17, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi19EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 18
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi19EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 19
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi17EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi16EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 16, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi18EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 17
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi18EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 18
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi16EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi15EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 15, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi17EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 16
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi17EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 17
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi15EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi14EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 14, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi16EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 15
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi16EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 16
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi14EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi13EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 13, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi15EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 14
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi15EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 15
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi13EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi12EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 12, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi14EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 13
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi14EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 14
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi12EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi11EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 11, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi13EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 12
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi13EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 13
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi11EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi10EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 10, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi12EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 11
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi12EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 12
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi10EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi9EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 9, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi11EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 10
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi11EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 11
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi9EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi8EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 8, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi10EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 9
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi10EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 10
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi8EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi7EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 7, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi9EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 8
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi9EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 9
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi7EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi6EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 6, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi8EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 7
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi8EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 8
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi6EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi5EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 5, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi7EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 6
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi7EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 7
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi5EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi4EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 4, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi6EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 5
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi6EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 6
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi4EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi3EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 3, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi5EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 4
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi5EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 5
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi3EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi2EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 2, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi4EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 3
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi4EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 4
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi2EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi1EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 1, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi3EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 2
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi3EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 3
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN14for_loop_testsILi1EiE7do_testEPKiPKc(i32* %data, i8* %label_base) #0 comdat align 2 {
entry:
  %data.addr = alloca i32*, align 8
  %label_base.addr = alloca i8*, align 8
  store i32* %data, i32** %data.addr, align 8
  store i8* %label_base, i8** %label_base.addr, align 8
  %0 = load i32*, i32** %data.addr, align 8
  %1 = load i8*, i8** %label_base.addr, align 8
  call void @_ZN14for_loop_testsILi0EiE7do_testEPKiPKc(i32* %0, i8* %1)
  %2 = load i32*, i32** %data.addr, align 8
  call void @_Z27test_for_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %2, i32 8000, i8* getelementptr inbounds ([32 x [100 x i8]], [32 x [100 x i8]]* @temp_string, i64 0, i64 0, i32 0))
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi2EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 1
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi2EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 2
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN14for_loop_testsILi0EiE7do_testEPKiPKc(i32*, i8*) #5 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i8*, align 8
  store i32* %0, i32** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z27test_for_loop_unroll_factorILi1EiEvPKT0_iPKc(i32* %first, i32 %count, i8* %label) #0 comdat {
entry:
  %first.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %n = alloca i32, align 4
  store i32* %first, i32** %first.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i8* %label, i8** %label.addr, align 8
  call void @_Z11start_timerv()
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @iterations, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %result, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* %count.addr, align 4
  %sub = sub nsw i32 %3, 0
  %cmp2 = icmp slt i32 %2, %sub
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32*, i32** %first.addr, align 8
  %5 = load i32, i32* %n, align 4
  call void @_ZN15loop_inner_bodyILi1EiE7do_workERiPKii(i32* dereferenceable(4) %result, i32* %4, i32 %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %n, align 4
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %n, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %7 = load i32, i32* %n, align 4
  %8 = load i32, i32* %count.addr, align 4
  %cmp5 = icmp slt i32 %7, %8
  br i1 %cmp5, label %for.body6, label %for.end9

for.body6:                                        ; preds = %for.cond4
  %9 = load i32*, i32** %first.addr, align 8
  %10 = load i32, i32* %n, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32, i32* %9, i64 %idxprom
  %11 = load i32, i32* %arrayidx, align 4
  %call = call i32 @_Z18complete_hash_funcIiET_S0_(i32 %11)
  %12 = load i32, i32* %result, align 4
  %add7 = add nsw i32 %12, %call
  store i32 %add7, i32* %result, align 4
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %13 = load i32, i32* %n, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond4

for.end9:                                         ; preds = %for.cond4
  %14 = load i32, i32* %result, align 4
  call void @_Z9check_sumIiEvT_(i32 %14)
  br label %for.inc10

for.inc10:                                        ; preds = %for.end9
  %15 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %15, 1
  store i32 %inc11, i32* %i, align 4
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %call13 = call double @_Z5timerv()
  %16 = load i8*, i8** %label.addr, align 8
  call void @_Z13record_resultdPKc(double %call13, i8* %16)
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
