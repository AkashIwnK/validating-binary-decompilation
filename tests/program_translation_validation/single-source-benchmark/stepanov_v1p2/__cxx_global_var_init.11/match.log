Writing '/tmp/tmp9fa3e9_3.dot'...
Writing '/tmp/tmp9fa3e9_3.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpdmr269io.dot'...
Writing '/tmp/tmpdmr269io.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
================ Starting round 0
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909b6730>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909b6730>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 1
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390547ae8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpv5et9aht.dot'...
Writing '/tmp/tmpv5et9aht.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpgszxmcop.dot'...
Writing '/tmp/tmpgszxmcop.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390547ae8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 1.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 2
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390762598>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390762598>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 3
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908b06a8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908b06a8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmpoknxmhmz.dot'...
Writing '/tmp/tmpoknxmhmz.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpzjylqqlt.dot'...
Writing '/tmp/tmpzjylqqlt.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 2.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 4
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c5378>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c5378>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 5
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439074ba60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439074ba60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACTWriting '/tmp/tmpc36tcux0.dot'...
Writing '/tmp/tmpc36tcux0.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpeu7i8np8.dot'...
Writing '/tmp/tmpeu7i8np8.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 3.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 6
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390672158>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390672158>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 7
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390673048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390673048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 loadWriting '/tmp/tmprwkpg0cz.dot'...
Writing '/tmp/tmprwkpg0cz.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmph5fvw1vi.dot'...
Writing '/tmp/tmph5fvw1vi.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
 load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 4.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 8
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439051a0d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439051a0d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 9
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390824f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390824f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 5.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp6wn1dy5s.dot'...
Writing '/tmp/tmp6wn1dy5s.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpvdmqf0sn.dot'...
Writing '/tmp/tmpvdmqf0sn.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 10
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43905192f0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43905192f0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 11
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903f0e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903f0e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 6.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp6bbgmc4k.dot'...
Writing '/tmp/tmp6bbgmc4k.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpntku88tp.dot'...
Writing '/tmp/tmpntku88tp.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 12
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f0f28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f0f28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 13
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f0c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f0c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 7.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpbtfdcx1d.dot'...
Writing '/tmp/tmpbtfdcx1d.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmphvvecl4y.dot'...
Writing '/tmp/tmphvvecl4y.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 14
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390917840>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390917840>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 15
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901a81e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901a81e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 8.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpvwc8f9xg.dot'...
Writing '/tmp/tmpvwc8f9xg.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp_wyojj77.dot'...
Writing '/tmp/tmp_wyojj77.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 16
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077ef28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077ef28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 17
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077ec80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpgeyn2pkz.dot'...
Writing '/tmp/tmpgeyn2pkz.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpumq_48_u.dot'...
Writing '/tmp/tmpumq_48_u.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077ec80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 9.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 18
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909f6b70>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909f6b70>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 19
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390887510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390887510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmp99otsm21.dot'...
Writing '/tmp/tmp99otsm21.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp521s6ywv.dot'...
Writing '/tmp/tmp521s6ywv.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 10.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 20
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390081f28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390081f28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 21
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903c0d90>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903c0d90>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
Writing '/tmp/tmplyqqe9t0.dot'...
Writing '/tmp/tmplyqqe9t0.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp_awhvwdu.dot'...
Writing '/tmp/tmp_awhvwdu.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 11.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 22
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908e6048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908e6048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 23
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907470d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907470d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 Writing '/tmp/tmp8l6pbcgz.dot'...
Writing '/tmp/tmp8l6pbcgz.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpah_dculj.dot'...
Writing '/tmp/tmpah_dculj.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 12.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 24
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439090bd08>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439090bd08>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 25
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906a6f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906a6f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 13.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpwmw50ka2.dot'...
Writing '/tmp/tmpwmw50ka2.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpshkd5lik.dot'...
Writing '/tmp/tmpshkd5lik.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 26
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390929510>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390929510>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 27
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903400d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903400d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 14.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp7kql5mqi.dot'...
Writing '/tmp/tmp7kql5mqi.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpeoy0gyx_.dot'...
Writing '/tmp/tmpeoy0gyx_.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 28
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439052b6a8>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439052b6a8>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 29
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390443400>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390443400>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 15.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpjz3o9vjr.dot'...
Writing '/tmp/tmpjz3o9vjr.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpw_2maal7.dot'...
Writing '/tmp/tmpw_2maal7.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 30
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fe0d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fe0d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 31
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fe2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fe2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 16.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpau1zuw6a.dot'...
Writing '/tmp/tmpau1zuw6a.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpo8zjakcy.dot'...
Writing '/tmp/tmpo8zjakcy.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 32
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390181048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390181048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 33
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43905311e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmp1qnanjl3.dot'...
Writing '/tmp/tmp1qnanjl3.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpxw2g3zpe.dot'...
Writing '/tmp/tmpxw2g3zpe.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43905311e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 17.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 34
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016bd08>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016bd08>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 35
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f7268>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906f7268>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmpu7dzifo_.dot'...
Writing '/tmp/tmpu7dzifo_.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpzte7abce.dot'...
Writing '/tmp/tmpzte7abce.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 18.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 36
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439093ff28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439093ff28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 37
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390807d08>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390807d08>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
Writing '/tmp/tmpbn3gsnw4.dot'...
Writing '/tmp/tmpbn3gsnw4.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpf0qmotft.dot'...
Writing '/tmp/tmpf0qmotft.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 19.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 38
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909f5d90>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909f5d90>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 39
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909ff598>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909ff598>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 Writing '/tmp/tmpprt1ion4.dot'...
Writing '/tmp/tmpprt1ion4.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmphlpakwr3.dot'...
Writing '/tmp/tmphlpakwr3.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 20.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 40
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390710048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390710048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 41
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe87510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe87510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 21.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpo6maprq6.dot'...
Writing '/tmp/tmpo6maprq6.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpl8u_zcm8.dot'...
Writing '/tmp/tmpl8u_zcm8.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 42
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fd950>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fd950>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 43
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903ea158>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903ea158>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 22.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp9cgg_a96.dot'...
Writing '/tmp/tmp9cgg_a96.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpx4cnkdpg.dot'...
Writing '/tmp/tmpx4cnkdpg.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 44
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439061cf28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439061cf28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 45
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907ad1e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907ad1e0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 23.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpedv2q0qv.dot'...
Writing '/tmp/tmpedv2q0qv.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmptu5shwm8.dot'...
Writing '/tmp/tmptu5shwm8.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 46
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901d7a60>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901d7a60>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 47
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439010c488>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439010c488>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 24.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmp8s739rz9.dot'...
Writing '/tmp/tmp8s739rz9.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpa6w4rf__.dot'...
Writing '/tmp/tmpa6w4rf__.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 48
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016c2f0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016c2f0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 49
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439010d048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpvpuxtlw8.dot'...
Writing '/tmp/tmpvpuxtlw8.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp6_qcal7v.dot'...
Writing '/tmp/tmp6_qcal7v.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439010d048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 25.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 50
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439017e0d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439017e0d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 51
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439092c8c8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439092c8c8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmphv1eeu2m.dot'...
Writing '/tmp/tmphv1eeu2m.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpy_wf0564.dot'...
Writing '/tmp/tmpy_wf0564.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 26.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 52
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901de0d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901de0d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 53
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390046e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390046e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
Writing '/tmp/tmpreo1gjfc.dot'...
Writing '/tmp/tmpreo1gjfc.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpnfmilubr.dot'...
Writing '/tmp/tmpnfmilubr.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 27.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 54
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390426378>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390426378>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 55
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907bca60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907bca60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 Writing '/tmp/tmp8lnv6adc.dot'...
Writing '/tmp/tmp8lnv6adc.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp7u403_zq.dot'...
Writing '/tmp/tmp7u403_zq.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 28.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 56
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390a029d8>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390a029d8>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 57
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907f4950>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907f4950>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 29.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpzd58hxi_.dot'...
Writing '/tmp/tmpzd58hxi_.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp_yfhclpq.dot'...
Writing '/tmp/tmp_yfhclpq.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 58
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439091bf28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439091bf28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 59
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439072bb70>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439072bb70>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 30.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp71wy0kuh.dot'...
Writing '/tmp/tmp71wy0kuh.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp5kk8f2of.dot'...
Writing '/tmp/tmp5kk8f2of.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 60
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fb598>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fb598>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 61
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439034cea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439034cea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 31.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpidnuw8aa.dot'...
Writing '/tmp/tmpidnuw8aa.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp4g28b3qi.dot'...
Writing '/tmp/tmp4g28b3qi.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 62
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016bea0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016bea0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 63
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016ba60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439016ba60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 32.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpsdtiwqx1.dot'...
Writing '/tmp/tmpsdtiwqx1.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpdy7h0t6y.dot'...
Writing '/tmp/tmpdy7h0t6y.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 64
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390783e18>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390783e18>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 65
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907707b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpr52o3pv5.dot'...
Writing '/tmp/tmpr52o3pv5.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp7w9rbykm.dot'...
Writing '/tmp/tmp7w9rbykm.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907707b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 33.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 66
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901160d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901160d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 67
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902e02f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902e02f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmpr7c4d532.dot'...
Writing '/tmp/tmpr7c4d532.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp7gep_g1_.dot'...
Writing '/tmp/tmp7gep_g1_.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 34.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 68
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904ccf28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904ccf28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 69
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439099f7b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439099f7b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
Writing '/tmp/tmpjmk8vanp.dot'...
Writing '/tmp/tmpjmk8vanp.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp3hkxb787.dot'...
Writing '/tmp/tmp3hkxb787.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 35.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 70
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fc510>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fc510>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 71
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902b69d8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902b69d8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 Writing '/tmp/tmp3_jrr6y3.dot'...
Writing '/tmp/tmp3_jrr6y3.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpia3l9z9j.dot'...
Writing '/tmp/tmpia3l9z9j.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 36.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 72
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff08048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff08048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 73
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906cf510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906cf510>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 37.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp1vkqwhuw.dot'...
Writing '/tmp/tmp1vkqwhuw.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpccewxi9o.dot'...
Writing '/tmp/tmpccewxi9o.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 74
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904a1950>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904a1950>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 75
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909b6e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909b6e18>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 38.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpmdybehnu.dot'...
Writing '/tmp/tmpmdybehnu.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp93o3j_eh.dot'...
Writing '/tmp/tmp93o3j_eh.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 76
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908ac400>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43908ac400>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 77
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439028ad08>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439028ad08>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 39.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpi5ytsj9e.dot'...
Writing '/tmp/tmpi5ytsj9e.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp6b9hf342.dot'...
Writing '/tmp/tmp6b9hf342.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 78
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439075ed90>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439075ed90>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 79
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4950>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4950>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 40.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmp9kzel5g0.dot'...
Writing '/tmp/tmp9kzel5g0.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp1j0qtrmo.dot'...
Writing '/tmp/tmp1j0qtrmo.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 80
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390924f28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390924f28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 81
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439063fa60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpasl8t81r.dot'...
Writing '/tmp/tmpasl8t81r.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp9lkfgaqu.dot'...
Writing '/tmp/tmp9lkfgaqu.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439063fa60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 41.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 82
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f92f0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f92f0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 83
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390286f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390286f28>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmpxkjuq_s3.dot'...
Writing '/tmp/tmpxkjuq_s3.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp33ul9v7q.dot'...
Writing '/tmp/tmp33ul9v7q.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 42.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 84
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077f048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439077f048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 85
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907ee2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907ee2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
Writing '/tmp/tmph2htsny3.dot'...
Writing '/tmp/tmph2htsny3.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp5filqyhm.dot'...
Writing '/tmp/tmp5filqyhm.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 43.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 86
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fff7ea0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fff7ea0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 87
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439015dea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439015dea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 Writing '/tmp/tmpe6rrj9ei.dot'...
Writing '/tmp/tmpe6rrj9ei.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmppokeu04y.dot'...
Writing '/tmp/tmppokeu04y.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 44.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 88
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439070c6a8>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439070c6a8>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 89
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390378ea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390378ea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 45.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpqqupzpxc.dot'...
Writing '/tmp/tmpqqupzpxc.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpgl_c2q_0.dot'...
Writing '/tmp/tmpgl_c2q_0.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 90
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439088aae8>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439088aae8>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 91
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390725c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390725c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 46.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp2vuk953d.dot'...
Writing '/tmp/tmp2vuk953d.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpv5vnjhgz.dot'...
Writing '/tmp/tmpv5vnjhgz.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 92
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff3df28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff3df28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 93
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff3dc80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff3dc80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 47.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmp6e2rcbzb.dot'...
Writing '/tmp/tmp6e2rcbzb.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpiwcxhmcf.dot'...
Writing '/tmp/tmpiwcxhmcf.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 94
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390797048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390797048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 95
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe91a60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe91a60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 48.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpl22obc_z.dot'...
Writing '/tmp/tmpl22obc_z.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpfsv6mw_0.dot'...
Writing '/tmp/tmpfsv6mw_0.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 96
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f4f28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f4f28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 97
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f4c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmp85rqz9w5.dot'...
Writing '/tmp/tmp85rqz9w5.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpl4pa3e1q.dot'...
Writing '/tmp/tmpl4pa3e1q.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904f4c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 49.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 98
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904e9400>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43904e9400>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 99
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439015d7b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439015d7b8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmppcue893n.dot'...
Writing '/tmp/tmppcue893n.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpigvxbl8h.dot'...
Writing '/tmp/tmpigvxbl8h.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 50.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 100
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390520620>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390520620>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 101
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390672c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390672c80>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load loadWriting '/tmp/tmpwcd5ioi0.dot'...
Writing '/tmp/tmpwcd5ioi0.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpsi7tql0y.dot'...
Writing '/tmp/tmpsi7tql0y.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 51.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 102
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390225840>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390225840>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 103
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901b6268>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43901b6268>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31Writing '/tmp/tmp3nq91vvi.dot'...
Writing '/tmp/tmp3nq91vvi.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp_9cy2ph0.dot'...
Writing '/tmp/tmp_9cy2ph0.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 52.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 104
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fe510>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43906fe510>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 105
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902980d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43902980d0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 53.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp1rtt5kae.dot'...
Writing '/tmp/tmp1rtt5kae.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpyuxq7cx2.dot'...
Writing '/tmp/tmpyuxq7cx2.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 106
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff382f0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff382f0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 107
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fefaae8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fefaae8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 54.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmp62fmdd8f.dot'...
Writing '/tmp/tmp62fmdd8f.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmp60td8t0c.dot'...
Writing '/tmp/tmp60td8t0c.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 108
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fa0d0>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fa0d0>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 109
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fa2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907fa2f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 55.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmp5ggh1sho.dot'...
Writing '/tmp/tmp5ggh1sho.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpsyw6dlu7.dot'...
Writing '/tmp/tmpsyw6dlu7.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 110
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439013b158>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439013b158>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 111
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439031ab70>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439031ab70>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 56.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])Writing '/tmp/tmpn5gv1st6.dot'...
Writing '/tmp/tmpn5gv1st6.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpcgmh9x1h.dot'...
Writing '/tmp/tmpcgmh9x1h.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

================ Starting round 112
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390046158>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390046158>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 113
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ffdc8c8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})Writing '/tmp/tmpvf6zjw3e.dot'...
Writing '/tmp/tmpvf6zjw3e.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmphabbbkkt.dot'...
Writing '/tmp/tmphabbbkkt.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ffdc8c8>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 57.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 114
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907b0f28>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43907b0f28>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 115
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43900e1840>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43900e1840>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})Writing '/tmp/tmp6etjcgw0.dot'...
Writing '/tmp/tmp6etjcgw0.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpnbvw74l_.dot'...
Writing '/tmp/tmpnbvw74l_.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 58.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 116
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe817b8>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fe817b8>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 117
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439039b048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f439039b048>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load loadWriting '/tmp/tmpsi77chql.dot'...
Writing '/tmp/tmpsi77chql.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpguhs3vh1.dot'...
Writing '/tmp/tmpguhs3vh1.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 59.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 118
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4840>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4840>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 119
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4a60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43909c4a60>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31Writing '/tmp/tmpqcrqeljq.dot'...
Writing '/tmp/tmpqcrqeljq.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpzq2ufy6i.dot'...
Writing '/tmp/tmpzq2ufy6i.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!
 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 60.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 120
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390128378>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390128378>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 121
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff6bea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438ff6bea0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 61.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpqhqcjcjr.dot'...
Writing '/tmp/tmpqhqcjcjr.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpq3bg77m9.dot'...
Writing '/tmp/tmpq3bg77m9.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 122
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390676e18>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390676e18>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 123
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fdcbd90>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f438fdcbd90>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 62.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])Writing '/tmp/tmpg2hqvv_m.dot'...
Writing '/tmp/tmpg2hqvv_m.dot':Done

Reading LLVM: /tmp/tmp0xw37pmv-query.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmp0xw37pmv-query.ll
Dot file generated!
Writing '/tmp/tmpz7x15vz7.dot'...
Writing '/tmp/tmpz7x15vz7.dot':Done

Reading LLVM: /tmp/tmppyz0dkgg-target.ll
Extracting function [__cxx_global_var_init.11] from /tmp/tmppyz0dkgg-target.ll
Dot file generated!

TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
================ Starting round 124
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 %10 = load i64, i64* %3, align 8
- 11 store i64 %8, i64* %RBP.i, align 8
- 12 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 13 store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8
- 14 %RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 15 %11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8
- 16 store i64 %11, i64* %RSI.i, align 8
- 17 %12 = add i64 %10, 2991
- 18 %13 = add i64 %10, 26
- 19 %14 = add i64 %7, -16
- 20 %15 = inttoptr i64 %14 to i64*
- 21 store i64 %13, i64* %15, align 8
- 22 store i64 %14, i64* %6, align 8
- 23 store i64 %12, i64* %3, align 8
- 24 %call2_400716 = tail call %struct.Memory* @sub_4012b0._ZN16reverse_iteratorIPddEC2ES0_(%struct.State* %0, i64 %12, %struct.Memory* %2)
- 25 %16 = load i64, i64* %3, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %3, align 8
- 28 %18 = load i64, i64* %6, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP.i, align 8
- 33 store i64 %19, i64* %6, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %3, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %3, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %6, align 8
- 41 \<badref\> = ret %struct.Memory* %call2_400716
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390359048>, {0: {0}, 1: {3}, 2: {4, 37, 8, 12, 15, 25, 28, 31}, 3: {26, 5}, 4: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 5: {7}, 6: {4, 37, 8, 12, 15, 25, 28, 31}, 7: {9}, 8: {10, 20, 30, 36}, 9: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 10: {4, 37, 8, 12, 15, 25, 28, 31}, 11: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 12: {2}, 13: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 14: {1}, 15: {4, 37, 8, 12, 15, 25, 28, 31}, 16: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {10, 20, 30, 36}, 21: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 24: {24}, 25: {4, 37, 8, 12, 15, 25, 28, 31}, 26: {26, 5}, 27: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 28: {4, 37, 8, 12, 15, 25, 28, 31}, 29: {29}, 30: {10, 20, 30, 36}, 31: {4, 37, 8, 12, 15, 25, 28, 31}, 32: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 36: {10, 20, 30, 36}, 37: {4, 37, 8, 12, 15, 25, 28, 31}, 38: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 6, 38, 40, 11, 13, 14, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f4390359048>, {0: {0}, 1: {3}, 2: {4}, 3: {26, 5}, 4: {27, 6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {2}, 13: {14}, 14: {1}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
MORE 3 POT: 2
MORE 4 POT: 2
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 load load
EXACT 11 store store
EXACT 12 getelementptr getelementptr
EXACT 13 store store
EXACT 14 getelementptr getelementptr
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
================ Starting round 125
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 %9 = load i64, i64* %PC, align 8
- 13 store i64 %7, i64* %RBP, align 8
- 14 store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8
- 15 %10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8
- 16 store i64 %10, i64* %RSI, align 8
- 17 %11 = add i64 %9, 2991
- 18 %12 = add i64 %9, 26
- 19 %13 = add i64 %6, -16
- 20 %14 = inttoptr i64 %13 to i64*
- 21 store i64 %12, i64* %14, align 8
- 22 store i64 %13, i64* %5, align 8
- 23 store i64 %11, i64* %PC, align 8
- 24 %15 = tail call %struct.Memory* @sub_4012b0__ZN16reverse_iteratorIPddEC2ES0__renamed_(%struct.State* nonnull %0, i64 %11, %struct.Memory* %2)
- 25 %16 = load i64, i64* %PC, align 8
- 26 %17 = add i64 %16, 1
- 27 store i64 %17, i64* %PC, align 8
- 28 %18 = load i64, i64* %5, align 8
- 29 %19 = add i64 %18, 8
- 30 %20 = inttoptr i64 %18 to i64*
- 31 %21 = load i64, i64* %20, align 8
- 32 store i64 %21, i64* %RBP, align 8
- 33 store i64 %19, i64* %5, align 8
- 34 %22 = add i64 %16, 2
- 35 store i64 %22, i64* %PC, align 8
- 36 %23 = inttoptr i64 %19 to i64*
- 37 %24 = load i64, i64* %23, align 8
- 38 store i64 %24, i64* %PC, align 8
- 39 %25 = add i64 %18, 16
- 40 store i64 %25, i64* %5, align 8
- 41 \<badref\> = ret %struct.Memory* %15
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903592f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2, 37, 6, 10, 15, 25, 28, 31}, 5: {26, 3}, 6: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 7: {5}, 8: {2, 37, 6, 10, 15, 25, 28, 31}, 9: {7}, 10: {8, 20, 30, 36}, 11: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 12: {2, 37, 6, 10, 15, 25, 28, 31}, 13: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 14: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 15: {2, 37, 6, 10, 15, 25, 28, 31}, 16: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 17: {17}, 18: {18}, 19: {19}, 20: {8, 20, 30, 36}, 21: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 22: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 23: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 24: {24}, 25: {2, 37, 6, 10, 15, 25, 28, 31}, 26: {26, 3}, 27: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 28: {2, 37, 6, 10, 15, 25, 28, 31}, 29: {29}, 30: {8, 20, 30, 36}, 31: {2, 37, 6, 10, 15, 25, 28, 31}, 32: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 33: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 34: {34}, 35: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 36: {8, 20, 30, 36}, 37: {2, 37, 6, 10, 15, 25, 28, 31}, 38: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 39: {39}, 40: {32, 33, 35, 4, 38, 40, 9, 11, 13, 16, 21, 22, 23, 27}, 41: {41}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f43903592f0>, {0: {0}, 1: {14}, 2: {12}, 3: {1}, 4: {2}, 5: {26, 3}, 6: {27, 4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {13}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}, 26: {26}, 27: {27}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
MORE 5 POT: 2
MORE 6 POT: 2
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 load load
EXACT 13 store store
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 add add
EXACT 18 add add
EXACT 19 add add
EXACT 20 inttoptr inttoptr
EXACT 21 store store
EXACT 22 store store
EXACT 23 store store
EXACT 24 tail tail
EXACT 25 load load
EXACT 26 add add
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 inttoptr inttoptr
EXACT 31 load load
EXACT 32 store store
EXACT 33 store store
EXACT 34 add add
EXACT 35 store store
EXACT 36 inttoptr inttoptr
EXACT 37 load load
EXACT 38 store store
EXACT 39 add add
EXACT 40 store store
EXACT 41 ret ret
FP: 63 63.0 False
TO REMOVE: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
Missed: dict_keys(['%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', 'store i64 ptrtoint (%G__0x60ce80_type* @G__0x60ce80 to i64), i64* %RDI.i, align 8', '%RSI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%11 = load i64, i64* bitcast (%G_0x605060_type* @G_0x605060 to i64*), align 8', 'store i64 %11, i64* %RSI.i, align 8', '%13 = add i64 %10, 26', '%14 = add i64 %7, -16', '%15 = inttoptr i64 %14 to i64*', 'store i64 %13, i64* %15, align 8', 'store i64 %14, i64* %6, align 8', 'store i64 %12, i64* %3, align 8', '%16 = load i64, i64* %3, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %3, align 8', '%18 = load i64, i64* %6, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP.i, align 8', 'store i64 %19, i64* %6, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %3, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %3, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %6, align 8'])
TO REMOVE: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
Missed: dict_keys(['%RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %RBP, align 8', 'store i64 ptrtoint (%rdpb_type* @rdpb to i64), i64* %RDI, align 8', '%10 = load i64, i64* getelementptr inbounds (%dpe_type, %dpe_type* @dpe, i64 0, i32 0), align 8', 'store i64 %10, i64* %RSI, align 8', '%12 = add i64 %9, 26', '%13 = add i64 %6, -16', '%14 = inttoptr i64 %13 to i64*', 'store i64 %12, i64* %14, align 8', 'store i64 %13, i64* %5, align 8', 'store i64 %11, i64* %PC, align 8', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 1', 'store i64 %17, i64* %PC, align 8', '%18 = load i64, i64* %5, align 8', '%19 = add i64 %18, 8', '%20 = inttoptr i64 %18 to i64*', '%21 = load i64, i64* %20, align 8', 'store i64 %21, i64* %RBP, align 8', 'store i64 %19, i64* %5, align 8', '%22 = add i64 %16, 2', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %19 to i64*', '%24 = load i64, i64* %23, align 8', 'store i64 %24, i64* %PC, align 8', '%25 = add i64 %18, 16', 'store i64 %25, i64* %5, align 8'])
[x] Exhausted iterations without definitive match! /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/stepanov_v1p2/__cxx_global_var_init.11/mcsema/test.proposed.ll /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/stepanov_v1p2/binary/test.mcsema.calls_renamed.ll __cxx_global_var_init.11
[x] Saved reduced files to /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/stepanov_v1p2/__cxx_global_var_init.11/mcsema/test.proposed.reduced.ll /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/single-source-benchmark/stepanov_v1p2/binary/test.mcsema.calls_renamed.reduced.ll
/home/ubuntu/Github/llir-matcher/matcher/match.py:711: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(fd)
