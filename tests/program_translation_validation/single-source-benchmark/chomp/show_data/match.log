[Info]: Check for multiple matches
Multiple matches exist for [0x562441edc568]:   %53 = tail call fastcc %struct.Memory* @ext_6020a8_putchar(%struct.State* nonnull %0, %struct.Memory* %172)
[0x562442090da0]:   %175 = tail call %struct.Memory.32* @__remill_function_call(%struct.State.1* nonnull %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory.32* %129)
[0x56244209a140]:   %129 = tail call %struct.Memory.32* @__remill_function_call(%struct.State.1* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory.32* %MEMORY.0)
Multiple matches exist for [0x562441ed1b78]:   %67 = load i32, i32* bitcast (%ncol_type* @ncol to i32*), align 8
[0x56244207e868]:   %57 = load i32, i32* bitcast (%G_0x602068_type* @G_0x602068 to i32*), align 8
[0x56244207eac8]:   %55 = load i32, i32* %54, align 4
Multiple matches exist for [0x562441ed2750]:   %86 = lshr i32 %67, 31
[0x56244209c190]:   %76 = lshr i32 %57, 31
[0x56244209c440]:   %75 = lshr i32 %55, 31
Multiple matches exist for [0x562441ed27d0]:   %87 = xor i32 %86, %85
[0x5624420a4db0]:   %78 = xor i32 %73, %75
[0x5624420a5070]:   %77 = xor i32 %76, %75
Multiple matches exist for [0x562441ef6d88]:   %180 = load i32, i32* bitcast (%ncol_type* @ncol to i32*), align 8
[0x562442084228]:   %137 = load i32, i32* bitcast (%G_0x602068_type* @G_0x602068 to i32*), align 8
[0x562442084e08]:   %135 = load i32, i32* %134, align 4
Multiple matches exist for [0x562441ef7940]:   %199 = lshr i32 %180, 31
[0x5624420a8ad0]:   %156 = lshr i32 %137, 31
[0x5624420a9e30]:   %155 = lshr i32 %135, 31
Multiple matches exist for [0x562441ef79c0]:   %200 = xor i32 %199, %198
[0x5624420a89b0]:   %157 = xor i32 %156, %155
[0x5624420b2630]:   %158 = xor i32 %153, %155
Iso Match NOT Found
Writing 'sub_400a00_show_data-mcsema-diff.dot'...
Writing 'sub_400a00_show_data-mcsema-diff.dot':Done

Writing 'show_data-proposed-diff.dot'...
Writing 'show_data-proposed-diff.dot':Done

Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [show_data] from ../binary/test.mcsema.opt.ll
Extracting function [show_data] from mcsema/test.proposed.opt.ll
Matcher Done...
4.66user 5.67system 0:10.70elapsed 96%CPU (0avgtext+0avgdata 14148maxresident)k
0inputs+1224outputs (0major+2175minor)pagefaults 0swaps
