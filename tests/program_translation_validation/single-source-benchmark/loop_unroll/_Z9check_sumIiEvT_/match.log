[Info]: Check for multiple matches
Multiple matches exist for [0x55bc2cd97710]:   %47 = tail call double @llvm.fabs.f64(double %46) #12
[0x55bc2c65b7d0]:   %92 = tail call i32 @llvm.ctpop.i32(i32 %91)
[0x55bc2c683f30]:   %73 = tail call i32 @llvm.ctpop.i32(i32 %72)
[0x55bc2ce5f260]:   %119 = tail call i32 @llvm.ctpop.i32(i32 %118)
[0x55bc2e79e5c0]:   %47 = tail call double @llvm.trunc.f64(double %46)
[0x55bc2e79ef90]:   %48 = tail call double @llvm.fabs.f64(double %47)
[0x55bc2e7c65e0]:   %105 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory.31* %call2_40c16a)
[0x55bc2e7c6820]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
[0x55bc2e7c97e0]:   %call2_40c16a = tail call %struct.Memory.31* @sub_40c1a0._Z15tolerance_equalIiEbRT_S1_(%struct.State.0* %0, i64 %83, %struct.Memory.31* %call2_40c154)
[0x55bc2e7cacb0]:   %call2_40c154 = tail call %struct.Memory.31* @sub_40c110._Z18complete_hash_funcIiET_S0_(%struct.State.0* %0, i64 %53, %struct.Memory.31* %2)
Multiple matches exist for [0x55bc2cd9c748]:   %138 = tail call fastcc %struct.Memory* @ext_634460_printf(%struct.State* nonnull %0, %struct.Memory* %87)
[0x55bc2e7c65e0]:   %105 = tail call %struct.Memory.31* @__remill_function_call(%struct.State.0* nonnull %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory.31* %call2_40c16a)
[0x55bc2e7c97e0]:   %call2_40c16a = tail call %struct.Memory.31* @sub_40c1a0._Z15tolerance_equalIiEbRT_S1_(%struct.State.0* %0, i64 %83, %struct.Memory.31* %call2_40c154)
[0x55bc2e7cacb0]:   %call2_40c154 = tail call %struct.Memory.31* @sub_40c110._Z18complete_hash_funcIiET_S0_(%struct.State.0* %0, i64 %53, %struct.Memory.31* %2)
Iso Match NOT Found
Writing 'sub_40c140__Z9check_sumIiEvT_-mcsema-diff.dot'...
Writing 'sub_40c140__Z9check_sumIiEvT_-mcsema-diff.dot':Done

Writing '_Z9check_sumIiEvT_-proposed-diff.dot'...
Writing '_Z9check_sumIiEvT_-proposed-diff.dot':Done

Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [_Z9check_sumIiEvT_] from ../binary/test.mcsema.opt.ll
Extracting function [_Z9check_sumIiEvT_] from mcsema/test.proposed.opt.ll
Matcher Done...
22.73user 1.35system 0:24.61elapsed 97%CPU (0avgtext+0avgdata 62524maxresident)k
0inputs+816outputs (0major+12142minor)pagefaults 0swaps
