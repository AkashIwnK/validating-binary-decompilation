; ModuleID = 'binary/test.mcsema.calls_renamed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_4005a0__init_type = type <{ [23 x i8] }>
%seg_4005c0__plt_type = type <{ [144 x i8] }>
%seg_400650__text_type = type <{ [3986 x i8] }>
%seg_4015e4__fini_type = type <{ [9 x i8] }>
%seg_4015f0__rodata_type = type <{ [120 x i8], [54 x i8], [58 x i8], [56 x i8], [60 x i8], [67 x i8], [24 x i8], [13 x i8], [13 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [33 x i8], [17 x i8], [17 x i8], [13 x i8], [3 x i8], [2 x i8], [48 x i8], [24 x i8], [56 x i8], [56 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8] }>
%seg_401aac__eh_frame_hdr_type = type <{ [76 x i8] }>
%seg_401af8__eh_frame_type = type <{ [312 x i8] }>
%seg_601de0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602060__data_type = type <{ [16 x i8] }>
%niter_type = type <{ [16 x i8], [128 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%__bss_start_type = type <{ [16 x i8], [72 x i8], [8 x i8], [16 x i8], [400 x i8], [8 x i8], [8 x i8], [8 x i8], [24 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [640 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8] }>
%itercount_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_4005a0__init = internal constant %seg_4005a0__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05M\1A \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4005c0__plt = internal constant %seg_4005c0__plt_type <{ [144 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%B\1A \00\00\00\00\00\00\00\00\00\00\00\FF%:\1A \00\00\00\00\00\00\00\00\00\00\00\FF%2\1A \00\00\00\00\00\00\00\00\00\00\00\FF%*\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\22\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\1A\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\12\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\0A\1A \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400650__text = internal constant %seg_400650__text_type <{ [3986 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\E0\15@\00H\C7\C1p\15@\00H\C7\C7@\07@\00\FF\15v\19 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8@!`\00H=@!`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF@!`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE@!`\00UH\81\EE@!`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF@!`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=9\1A \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05'\1A \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC\C0\00\00\00\F2\0F\10\05\A5\0E\00\00\F2\0F\10\0D\A5\0E\00\00\F2\0F\10\15\A5\0E\00\00\F2\0F\10\1D\A5\0E\00\00\F2\0F\10%\A5\0E\00\00\F2\0F\10-\A5\0E\00\00\F2\0F\105\A5\0E\00\00\F2\0F\10=\A5\0E\00\00\F2D\0F\10\05\A4\0E\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0\F2D\0F\11\04%X!`\00\F2\0F\11<%`!`\00\F2\0F\114%h!`\00\F2\0F\11,%p!`\00\F2\0F\11$%x!`\00\F2\0F\11\1C%\80!`\00\F2\0F\11\14%\88!`\00\F2\0F\11\0C%\90!`\00\C7\04%p `\00@B\0F\00\F2\0F\11\04%\98!`\00f\C7\04%\A0!`\00\04\00\C7E\EC\00\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8Dx\00\00\00\C7E\E8\00\00\00\00\83}\E8\04\0F\8DT\00\00\00H\B8\B0!`\00\00\00\00\00H\B9\80 `\00\00\00\00\00HcU\ECH\C1\E2\05H\01\D1HcU\E8\F2\0F\10\04\D1\8Bu\EC\83\C6\01Hc\CEHk\C9(H\01\C8\8Bu\E8\83\C6\01Hc\CE\F2\0F\11\04\C8\8BE\E8\83\C0\01\89E\E8\E9\A2\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9u\FF\FF\FFH\BFh\16@\00\00\00\00\00\B0\00\E84\FD\FF\FFH\BF\9E\16@\00\00\00\00\00\8B4%p `\00\89E\CC\B0\00\E8\19\FD\FF\FFH\BF\D8\16@\00\00\00\00\00\F2\0F\10\05g\0D\00\00\F2\0F*\0C%p `\00\F2\0F^\C8\0F(\C1\89E\C8\B0\01\E8\ED\FC\FF\FFH\BF\10\17@\00\00\00\00\00\89E\C4\B0\00\E8\D9\FC\FF\FFH\BFL\17@\00\00\00\00\00\89E\C0\B0\00\E8\C5\FC\FF\FF\C7\04%P&`\00\00\00\00\00\89E\BC\8B\04%P&`\00;\04%p `\00\0F\8D#\02\00\00f\C7\04%@#`\00\00\00\0F\BF\04%@#`\00\83\F8\01\0F\8F\86\00\00\00\BF\04\00\00\00\F2\0F\10\05\FB\0C\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8\F6\05\00\00H\B9P#`\00\00\00\00\00\F2\0F\10\04%H#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\89\CEH\01\D6\F2\0F\11\06\F2\0F\10\04%p#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\01\D1\F2\0F\11A\08\89E\B8f\8B\04%@#`\00f\83\C0\01f\89\04%@#`\00\E9i\FF\FF\FF\BF\03\00\00\00\F2\0F\10\05u\0C\00\00f\C7\04%@#`\00\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8f\05\00\00\BF\06\00\00\00\F2\0F\10\05I\0C\00\00\F2\0F\10\0C%H#`\00\F2\0F\11M\D0\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\89E\B4\E83\05\00\00\F2\0F\10\05\03\0C\00\00\F2\0F\10\0D\03\0C\00\00\F2\0F\10\15\03\0C\00\00\F2\0F\10\1C%H#`\00\F2\0F\11]\D8\F2\0F\10\1C%`#`\00\F2\0F\5C\1C%P#`\00\F2\0F\11\1C%x#`\00\F2\0F\10\1C%`#`\00\F2\0FY\1C%h#`\00\F2\0F\10$%X#`\00\F2\0F\11E\A8\0F(\C4\89E\A4\F2\0F\11]\98\F2\0F\11M\90\F2\0F\11U\88\E8h\FB\FF\FF\F2\0FY\04%P#`\00\F2\0F\10M\98\F2\0F^\C8\F2\0F\10E\88\F2\0F\5C\C1\F2\0F\11\04%\80#`\00\F2\0F\10E\D8\F2\0F\5CE\D0\F2\0F\11\04%\88#`\00\F2\0F\10\04%X#`\00\E8#\FB\FF\FF\F2\0F\11\04%\90#`\00\F2\0F\10\04%\90#`\00\F2\0FY\04%\90#`\00\F2\0F\10M\90\F2\0F^\C8\F2\0F\11\0C%\90#`\00\F2\0F\10E\A8\F2\0F\11\04%\98#`\00\F2\0F\10\0C%\90#`\00\F2\0F\11\0C%\A0#`\00\8B\04%P&`\00\83\C0\01\89\04%P&`\00\E9\C9\FD\FF\FFH\BF\B0#`\00\00\00\00\00H\BE\8F\17@\00\00\00\00\00H\BA\A7\17@\00\00\00\00\00\F2\0F\10\04%P#`\00\F2\0F\10\0C%X#`\00\B0\02\E8\A9\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\83\C2PH\BE\8F\17@\00\00\00\00\00H\BF\B4\17@\00\00\00\00\00\F2\0F\10\04%`#`\00\F2\0F\10\0C%h#`\00H\89}\80H\89\D7H\8BU\80\89\85|\FF\FF\FF\B0\02\E8]\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\A0\00\00\00H\BE\C1\17@\00\00\00\00\00\F2\0F\10\04%x#`\00H\89\D7\89\85x\FF\FF\FF\B0\01\E8)\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\F0\00\00\00H\BE\F1\17@\00\00\00\00\00\F2\0F\10\04%\90#`\00H\89\D7\89\85t\FF\FF\FF\B0\01\E8\F5\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2@\01\00\00H\BE!\18@\00\00\00\00\00\F2\0F\10\04%\80#`\00H\89\D7\89\85p\FF\FF\FF\B0\01\E8\C1\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\90\01\00\00H\BE\F1\17@\00\00\00\00\00\F2\0F\10\04%\98#`\00H\89\D7\89\85l\FF\FF\FF\B0\01\E8\8D\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\E0\01\00\00H\BEQ\18@\00\00\00\00\00\F2\0F\10\04%\88#`\00H\89\D7\89\85h\FF\FF\FF\B0\01\E8Y\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C20\02\00\00H\BE\F1\17@\00\00\00\00\00\F2\0F\10\04%\A0#`\00H\89\D7\89\85d\FF\FF\FF\B0\01\E8%\F9\FF\FF\C7E\E0\00\00\00\00\C7E\EC\00\00\00\00\89\85`\FF\FF\FF\83}\EC\08\0F\8D\BF\01\00\00H\B8\B0#`\00\00\00\00\00HcM\ECHk\C9PH\01\C8HcM\ECH\8B4\CD\00!`\00H\89\C7\E8\9E\F8\FF\FF\83\F8\00\0F\84z\01\00\00H\BF\81\18@\00\00\00\00\00\8BE\EC\83\C0\01\89\C6\B0\00\E8\5C\F8\FF\FFH\BF\A2\18@\00\00\00\00\00HcM\ECH\8B4\CD\00!`\00\89\85\5C\FF\FF\FF\B0\00\E89\F8\FF\FFH\BF\B3\18@\00\00\00\00\00H\B9\B0#`\00\00\00\00\00Hcu\ECHk\F6PH\01\F1H\89\CE\89\85X\FF\FF\FF\B0\00\E8\0A\F8\FF\FFH\BF\C4\18@\00\00\00\00\00\89\85T\FF\FF\FF\B0\00\E8\F3\F7\FF\FFHcM\ECH\8B<\CD\00!`\00\89\85P\FF\FF\FF\E8\CC\F7\FF\FF\89\C2\89U\E4\C7E\E8\00\00\00\00\8BE\E8;E\E4\0F\8D\B2\00\00\00H\BF\D1\18@\00\00\00\00\00\B8^\00\00\00\B9 \00\00\00H\BA\B0#`\00\00\00\00\00Hcu\ECH\8B4\F5\00!`\00LcE\E8F\0F\BE\0C\06Hcu\ECHk\F6PH\01\F2Hcu\E8D\0F\BE\142E9\D1\0FD\C1\89\C6\B0\00\E8n\F7\FF\FFH\BA\B0#`\00\00\00\00\00Hc}\ECH\8B<\FD\00!`\00LcE\E8B\0F\BE\0C\07Hc}\ECHk\FFPH\01\FAHc}\E8\0F\BE4:9\F1\89\85L\FF\FF\FF\0F\84\09\00\00\00\8BE\E0\83\C0\01\89E\E0\E9\00\00\00\00\8BE\E8\83\C0\01\89E\E8\E9B\FF\FF\FFH\BF\D6\16@\00\00\00\00\00\B0\00\E8\01\F7\FF\FF\89\85H\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E97\FE\FF\FF\83}\E0\00\0F\8E>\00\00\00H\BF\D6\18@\00\00\00\00\00H\B8\D7\16@\00\00\00\00\00H\B9\D4\18@\00\00\00\00\00\8Bu\E0\83}\E0\01H\0FO\C1H\89\C2\B0\00\E8\AB\F6\FF\FF\89\85D\FF\FF\FF\E9\17\00\00\00H\BF\06\19@\00\00\00\00\00\B0\00\E8\8F\F6\FF\FF\89\85@\FF\FF\FF1\C0H\81\C4\C0\00\00\00]\C3fffff.\0F\1F\84\00\00\00\00\00UH\89\E5H\83\EC \F2\0F\10\0D\D8\06\00\00\0FW\D2\89}\F8\F2\0F\11E\F0\F2\0F\11\14%H#`\00\F2\0F\10E\F0\F2\0F\11\04%0&`\00\F2\0F\11\0C%8&`\00\C7E\EC\01\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8FB\01\00\00\F2\0F\10\05\8B\06\00\00H\B8\B0!`\00\00\00\00\00HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10J\08\F2\0F\11\0C%@&`\00HcM\ECHk\C9(H\01\C8\F2\0F\10H\10\F2\0F\11\0C%H&`\00\F2\0F\10\0C%H&`\00f\0F.\C8\0F\86\7F\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\05'\06\00\00\F2\0F\10\0C%H&`\00\F2\0F\10\14%p!`\00HcM\F8\F2\0F\5C\14\CDP!`\00\F2\0F\10\1C%h!`\00\F2\0F\5C\1C%\80!`\00\F2\0F^\D3HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10Z\10\F2\0F\5C\D8HcM\ECHk\C9(H\01\C8\F2\0F^X\18\F2\0FY\D3\F2\0FX\CA\F2\0F\11\0C%H&`\00\E8m\00\00\00\F2\0F\10\04%H&`\00\F2\0F\11\04%8&`\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8D,\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\04%H#`\00HcM\ECHk\C9(H\01\C8\F2\0F\5C@ \F2\0F\11\04%H#`\00\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9\AB\FE\FF\FF\8BE\FCH\83\C4 ]\C3UH\89\E5H\81\EC\90\00\00\00f\83<%@#`\00\00\0F\84\81\01\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\0B\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9)\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0FY\04%p#`\00\F2\0F\11E\E8\0FW\C0\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FYM\E8\F2\0F\11M\E0\F2\0F\10\0C%p#`\00\F2\0F\11M\D8\F2\0F\10\0C%p#`\00\F2\0FXM\E8\F2\0F\5CM\E0\F2\0F\11\0C%p#`\00\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\17\00\00\00\F2\0F\10\04%H#`\00\F2\0FYE\D8\F2\0F\11\04%0&`\00\F2\0F\10\04%0&`\00\F2\0F^\04%p#`\00\F2\0F\11\04%H#`\00\E9\0F\03\00\00\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F^\0C%8&`\00\F2\0FY\C1\F2\0F\11\04%H#`\00\F2\0F\10\04%p#`\00\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FY\C1\F2\0F\11\04%p#`\00\E9\BA\02\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\94\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9?\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\C8\0F(\C1\E8\DF\F2\FF\FF\F2\0F\10M\C8\F2\0FY\C8\F2\0F\11M\E8\F2\0F\10E\E8\E8\D7\F2\FF\FF\F2\0F\11E\F8\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0FYE\E8\F2\0F\11E\E0\F2\0F\10\04%p#`\00\F2\0F\11E\D8\F2\0F\10\04%p#`\00\F2\0FXE\F8\F2\0F\10M\E0\F2\0F\11E\C0\0F(\C1\E8\88\F2\FF\FF\F2\0F\10\0D\B0\02\00\00\F2\0F\10U\C0\F2\0F\5C\D0\F2\0F\11\14%p#`\00\F2\0F\10E\D8\F2\0FXE\F8\F2\0F^\C1\F2\0F\11M\B8\E8F\F2\FF\FF\F2\0F\11E\D0\F2\0F\10E\B8\F2\0FY\04%@&`\00\F2\0FYE\D0\F2\0FYE\D0\F2\0F\11E\D0\F2\0F\10\04%@&`\00\F2\0F\10M\D8\F2\0FXM\F8\F2\0F\11E\B0\0F(\C1\E8\04\F2\FF\FF\F2\0F\10M\B0\F2\0FY\C8\F2\0F\10\04%p#`\00\F2\0F\11M\A8\E8\D8\F1\FF\FF\F2\0F\10\0D\18\02\00\00\F2\0F^\C8\F2\0F\10E\A8\F2\0FY\C1\F2\0FXE\D0\F2\0F\11\04%H#`\00\E9\05\01\00\00\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\A0\0F(\C1\E8\98\F1\FF\FF\F2\0F\10M\A0\F2\0FY\C8\0F(\C1\E8\97\F1\FF\FFH\B8\00\00\00\00\00\00\00\80fH\0F~\C1H1\C1fH\0Fn\C1\F2\0F\11E\F0\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F\10U\F0fH\0F~\D1H1\C1fH\0Fn\D1\F2\0F\11E\98\0F(\C2H\89E\90\F2\0F\11M\88\E8\01\F1\FF\FF\F2\0F\10M\88\F2\0FY\C8\F2\0F\10\04%8&`\00\F2\0F\10\14%p#`\00\F2\0F\11E\80\0F(\C2\F2\0F\11\8Dx\FF\FF\FF\E8\D1\F0\FF\FF\F2\0F\10M\80\F2\0FY\C8\F2\0F\10\85x\FF\FF\FF\F2\0F^\C1\F2\0F\10M\98\F2\0FY\C8\F2\0F\11\0C%H#`\00\F2\0F\10E\F0fH\0F~\C0H\8BM\90H1\C8fH\0Fn\C0\F2\0F\11\04%p#`\00H\81\C4\90\00\00\00]\C3f\90AWAVI\89\D7AUATL\8D%^\08 \00UH\8D-^\08 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\FF\EF\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4015e4__fini = internal constant %seg_4015e4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_4015f0__rodata = internal constant %seg_4015f0__rodata_type <{ [120 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\10@sh\91\ED\FC\00\AF@1\08\AC\1Cz\F4\B0@\D3Mb\10X\FD\B2@\DFO\8D\97\8E\95\B4@m\E7\FB\A9\F1\07\B7@\89A`\E5\D0\A2\B9@\AEG\E1z\F4\D5\BA@\00\00\00\00\00\C5\BD@\00\00\00\00\00@\8F@{\14\AEG\E1zd?\82\A0\ED\E2GF\18?\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00@", [54 x i8] c"Ready to begin John Walker's floating point accuracy\0A\00", [58 x i8] c"and performance benchmark.  %d iterations will be made.\0A\0A\00", [56 x i8] c"\0AMeasured run time in seconds should be divided by %.f\0A\00", [60 x i8] c"to normalise for reporting results.  For archival results,\0A\00", [67 x i8] c"adjust iteration count so the benchmark runs about five minutes.\0A\0A\00", [24 x i8] c"%15s   %21.11f  %14.11f\00", [13 x i8] c"Marginal ray\00", [13 x i8] c"Paraxial ray\00", [48 x i8] c"Longitudinal spherical aberration:      %16.11f\00", [48 x i8] c"    (Maximum permissible):              %16.11f\00", [48 x i8] c"Offense against sine condition (coma):  %16.11f\00", [48 x i8] c"Axial chromatic aberration:             %16.11f\00", [33 x i8] c"\0AError in results on line %d...\0A\00", [17 x i8] c"Expected:  \22%s\22\0A\00", [17 x i8] c"Received:  \22%s\22\0A\00", [13 x i8] c"(Errors)    \00", [3 x i8] c"%c\00", [2 x i8] c"s\00", [48 x i8] c"\0A%d error%s in results.  This is VERY SERIOUS.\0A\00", [24 x i8] c"\0ANo errors in results.\0A\00", [56 x i8] c"   Marginal ray          47.09479120920   0.04178472683\00", [56 x i8] c"   Paraxial ray          47.08372160249   0.04177864821\00", [57 x i8] c"Longitudinal spherical aberration:        -0.01106960671\00", [57 x i8] c"    (Maximum permissible):                 0.05306749907\00", [57 x i8] c"Offense against sine condition (coma):     0.00008954761\00", [57 x i8] c"    (Maximum permissible):                 0.00250000000\00", [57 x i8] c"Axial chromatic aberration:                0.00448229032\00" }>
@seg_401aac__eh_frame_hdr = internal constant %seg_401aac__eh_frame_hdr_type <{ [76 x i8] c"\01\1B\03;H\00\00\00\08\00\00\00\14\EB\FF\FF\A4\00\00\00\A4\EB\FF\FFd\00\00\00\D4\EB\FF\FF\90\00\00\00\94\EC\FF\FF\CC\00\00\00\C4\F4\FF\FF\E8\00\00\00d\F6\FF\FF\04\01\00\00\C4\FA\FF\FF$\01\00\004\FB\FF\FFl\01\00\00" }>
@seg_401af8__eh_frame = internal constant %seg_401af8__eh_frame_type <{ [312 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\EB\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\EB\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00h\EA\FF\FF\90\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\C0\EB\FF\FF\22\08\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\D4\F3\FF\FF\A0\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\90\00\00\00X\F5\FF\FF^\04\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\B0\00\00\00\98\F9\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\F8\00\00\00\C0\F9\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601de0__init_array = internal global %seg_601de0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400730_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_400700___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64)* @strlen to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), i64 ptrtoint (double (double)* @tan to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (i64 (i64)* @asin to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64) }>
@seg_602060__data = internal global %seg_602060__data_type zeroinitializer
@niter = global %niter_type <{ [16 x i8] c"\E8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"\CD\CC\CC\CC\CC\0C;@\80H\BF}\1D8\F8?\CD\CC\CC\CC\CC\CCO@\A4p=\0A\D7\A3\E0?\AEG\E1z\14\AE0\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00D\8Bl\E7\FB\A9\C1?\AEG\E1z\14\AE0\C0\06\12\14?\C6\DC\F9?\9A\99\99\99\99YB@R\B8\1E\85\EBQ\D8?fffff\86S\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 814), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 870), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 926), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 983), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 1040), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 1097), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 1154), i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 983) }>
@__bss_start = global %__bss_start_type zeroinitializer
@itercount = global %itercount_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400730_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400700___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4015e0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401570___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]

declare %struct.Memory* @sub_4005a0__init_proc_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_401110_transit_surface_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400690_deregister_tm_clones_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400f70_trace_line_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @asin(i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_400740_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400740:
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %AX = bitcast %union.anon* %12 to i16*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %EAX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %ECX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDX = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %ESI = bitcast %union.anon* %24 to i32*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %EDI = bitcast %union.anon* %27 to i32*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 19
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %R9D = bitcast %union.anon* %30 to i32*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 21
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %R10D = bitcast %union.anon* %33 to i32*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RAX = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 5
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RCX = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 7
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RDX = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 9
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %RSI = bitcast %union.anon* %45 to i64*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %47 = getelementptr inbounds %struct.GPR, %struct.GPR* %46, i32 0, i32 11
  %48 = getelementptr inbounds %struct.Reg, %struct.Reg* %47, i32 0, i32 0
  %RDI = bitcast %union.anon* %48 to i64*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.GPR, %struct.GPR* %49, i32 0, i32 13
  %51 = getelementptr inbounds %struct.Reg, %struct.Reg* %50, i32 0, i32 0
  %RSP = bitcast %union.anon* %51 to i64*
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %53 = getelementptr inbounds %struct.GPR, %struct.GPR* %52, i32 0, i32 15
  %54 = getelementptr inbounds %struct.Reg, %struct.Reg* %53, i32 0, i32 0
  %RBP = bitcast %union.anon* %54 to i64*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %R8 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %59 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %58, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %59 to %"class.std::bitset"*
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %61 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %60, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %61 to %"class.std::bitset"*
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %63 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %62, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %63 to %"class.std::bitset"*
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %65 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %64, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %65 to %"class.std::bitset"*
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %67 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %66, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %67 to %"class.std::bitset"*
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %69 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %68, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %69 to %"class.std::bitset"*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %73 to %"class.std::bitset"*
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %75 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %74, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %75 to %"class.std::bitset"*
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %77 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %76, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %77 to %union.vec128_t*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %79 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %78, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %79 to %union.vec128_t*
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %81 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %80, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %81 to %union.vec128_t*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %83 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %82, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %83 to %union.vec128_t*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %85 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %84, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %85 to %union.vec128_t*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %87 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %86, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %87 to %union.vec128_t*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %89 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %88, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %89 to %union.vec128_t*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %91 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %90, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %91 to %union.vec128_t*
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %93 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %92, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %93 to %union.vec128_t*
  %94 = load i64, i64* %RBP
  %95 = load i64, i64* %PC
  %96 = add i64 %95, 1
  store i64 %96, i64* %PC
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %98 = load i64, i64* %97, align 8, !tbaa !2428
  %99 = add i64 %98, -8
  %100 = inttoptr i64 %99 to i64*
  store i64 %94, i64* %100
  store i64 %99, i64* %97, align 8, !tbaa !2428
  %101 = load i64, i64* %RSP
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 3
  store i64 %103, i64* %PC
  store i64 %101, i64* %RBP, align 8, !tbaa !2428
  %104 = load i64, i64* %RSP
  %105 = load i64, i64* %PC
  %106 = add i64 %105, 7
  store i64 %106, i64* %PC
  %107 = sub i64 %104, 192
  store i64 %107, i64* %RSP, align 8, !tbaa !2428
  %108 = icmp ult i64 %104, 192
  %109 = zext i1 %108 to i8
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %109, i8* %110, align 1, !tbaa !2432
  %111 = trunc i64 %107 to i32
  %112 = and i32 %111, 255
  %113 = call i32 @llvm.ctpop.i32(i32 %112) #17
  %114 = trunc i32 %113 to i8
  %115 = and i8 %114, 1
  %116 = xor i8 %115, 1
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %116, i8* %117, align 1, !tbaa !2446
  %118 = xor i64 192, %104
  %119 = xor i64 %118, %107
  %120 = lshr i64 %119, 4
  %121 = trunc i64 %120 to i8
  %122 = and i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %122, i8* %123, align 1, !tbaa !2447
  %124 = icmp eq i64 %107, 0
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %125, i8* %126, align 1, !tbaa !2448
  %127 = lshr i64 %107, 63
  %128 = trunc i64 %127 to i8
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %128, i8* %129, align 1, !tbaa !2449
  %130 = lshr i64 %104, 63
  %131 = xor i64 %127, %130
  %132 = add nuw nsw i64 %131, %130
  %133 = icmp eq i64 %132, 2
  %134 = zext i1 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %134, i8* %135, align 1, !tbaa !2450
  %136 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 8
  store i64 %138, i64* %PC
  %139 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 8) to double*)
  %140 = bitcast i8* %136 to double*
  store double %139, double* %140, align 1, !tbaa !2451
  %141 = getelementptr inbounds i8, i8* %136, i64 8
  %142 = bitcast i8* %141 to double*
  store double 0.000000e+00, double* %142, align 1, !tbaa !2451
  %143 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 8
  store i64 %145, i64* %PC
  %146 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 16) to double*)
  %147 = bitcast i8* %143 to double*
  store double %146, double* %147, align 1, !tbaa !2451
  %148 = getelementptr inbounds i8, i8* %143, i64 8
  %149 = bitcast i8* %148 to double*
  store double 0.000000e+00, double* %149, align 1, !tbaa !2451
  %150 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %151 = load i64, i64* %PC
  %152 = add i64 %151, 8
  store i64 %152, i64* %PC
  %153 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 24) to double*)
  %154 = bitcast i8* %150 to double*
  store double %153, double* %154, align 1, !tbaa !2451
  %155 = getelementptr inbounds i8, i8* %150, i64 8
  %156 = bitcast i8* %155 to double*
  store double 0.000000e+00, double* %156, align 1, !tbaa !2451
  %157 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 8
  store i64 %159, i64* %PC
  %160 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 32) to double*)
  %161 = bitcast i8* %157 to double*
  store double %160, double* %161, align 1, !tbaa !2451
  %162 = getelementptr inbounds i8, i8* %157, i64 8
  %163 = bitcast i8* %162 to double*
  store double 0.000000e+00, double* %163, align 1, !tbaa !2451
  %164 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 8
  store i64 %166, i64* %PC
  %167 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 40) to double*)
  %168 = bitcast i8* %164 to double*
  store double %167, double* %168, align 1, !tbaa !2451
  %169 = getelementptr inbounds i8, i8* %164, i64 8
  %170 = bitcast i8* %169 to double*
  store double 0.000000e+00, double* %170, align 1, !tbaa !2451
  %171 = bitcast %"class.std::bitset"* %YMM5 to i8*
  %172 = load i64, i64* %PC
  %173 = add i64 %172, 8
  store i64 %173, i64* %PC
  %174 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 48) to double*)
  %175 = bitcast i8* %171 to double*
  store double %174, double* %175, align 1, !tbaa !2451
  %176 = getelementptr inbounds i8, i8* %171, i64 8
  %177 = bitcast i8* %176 to double*
  store double 0.000000e+00, double* %177, align 1, !tbaa !2451
  %178 = bitcast %"class.std::bitset"* %YMM6 to i8*
  %179 = load i64, i64* %PC
  %180 = add i64 %179, 8
  store i64 %180, i64* %PC
  %181 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 56) to double*)
  %182 = bitcast i8* %178 to double*
  store double %181, double* %182, align 1, !tbaa !2451
  %183 = getelementptr inbounds i8, i8* %178, i64 8
  %184 = bitcast i8* %183 to double*
  store double 0.000000e+00, double* %184, align 1, !tbaa !2451
  %185 = bitcast %"class.std::bitset"* %YMM7 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 8
  store i64 %187, i64* %PC
  %188 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 64) to double*)
  %189 = bitcast i8* %185 to double*
  store double %188, double* %189, align 1, !tbaa !2451
  %190 = getelementptr inbounds i8, i8* %185, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2451
  %192 = bitcast %"class.std::bitset"* %YMM8 to i8*
  %193 = load i64, i64* %PC
  %194 = add i64 %193, 9
  store i64 %194, i64* %PC
  %195 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 72) to double*)
  %196 = bitcast i8* %192 to double*
  store double %195, double* %196, align 1, !tbaa !2451
  %197 = getelementptr inbounds i8, i8* %192, i64 8
  %198 = bitcast i8* %197 to double*
  store double 0.000000e+00, double* %198, align 1, !tbaa !2451
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 4
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 7
  store i64 %202, i64* %PC
  %203 = inttoptr i64 %200 to i32*
  store i32 0, i32* %203
  %204 = load i64, i64* %RBP
  %205 = sub i64 %204, 8
  %206 = load i32, i32* %EDI
  %207 = zext i32 %206 to i64
  %208 = load i64, i64* %PC
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC
  %210 = inttoptr i64 %205 to i32*
  store i32 %206, i32* %210
  %211 = load i64, i64* %RBP
  %212 = sub i64 %211, 16
  %213 = load i64, i64* %RSI
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 4
  store i64 %215, i64* %PC
  %216 = inttoptr i64 %212 to i64*
  store i64 %213, i64* %216
  %217 = bitcast %union.vec128_t* %XMM8 to i8*
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 10
  store i64 %219, i64* %PC
  %220 = bitcast i8* %217 to double*
  %221 = load double, double* %220, align 1
  store double %221, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 24) to double*)
  %222 = bitcast %union.vec128_t* %XMM7 to i8*
  %223 = load i64, i64* %PC
  %224 = add i64 %223, 9
  store i64 %224, i64* %PC
  %225 = bitcast i8* %222 to double*
  %226 = load double, double* %225, align 1
  store double %226, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 32) to double*)
  %227 = bitcast %union.vec128_t* %XMM6 to i8*
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 9
  store i64 %229, i64* %PC
  %230 = bitcast i8* %227 to double*
  %231 = load double, double* %230, align 1
  store double %231, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %232 = bitcast %union.vec128_t* %XMM5 to i8*
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 9
  store i64 %234, i64* %PC
  %235 = bitcast i8* %232 to double*
  %236 = load double, double* %235, align 1
  store double %236, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %237 = bitcast %union.vec128_t* %XMM4 to i8*
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 9
  store i64 %239, i64* %PC
  %240 = bitcast i8* %237 to double*
  %241 = load double, double* %240, align 1
  store double %241, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 56) to double*)
  %242 = bitcast %union.vec128_t* %XMM3 to i8*
  %243 = load i64, i64* %PC
  %244 = add i64 %243, 9
  store i64 %244, i64* %PC
  %245 = bitcast i8* %242 to double*
  %246 = load double, double* %245, align 1
  store double %246, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %247 = bitcast %union.vec128_t* %XMM2 to i8*
  %248 = load i64, i64* %PC
  %249 = add i64 %248, 9
  store i64 %249, i64* %PC
  %250 = bitcast i8* %247 to double*
  %251 = load double, double* %250, align 1
  store double %251, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 72) to double*)
  %252 = bitcast %union.vec128_t* %XMM1 to i8*
  %253 = load i64, i64* %PC
  %254 = add i64 %253, 9
  store i64 %254, i64* %PC
  %255 = bitcast i8* %252 to double*
  %256 = load double, double* %255, align 1
  store double %256, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 80) to double*)
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 11
  store i64 %258, i64* %PC
  store i32 1000000, i32* bitcast (%niter_type* @niter to i32*)
  %259 = bitcast %union.vec128_t* %XMM0 to i8*
  %260 = load i64, i64* %PC
  %261 = add i64 %260, 9
  store i64 %261, i64* %PC
  %262 = bitcast i8* %259 to double*
  %263 = load double, double* %262, align 1
  store double %263, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %264 = load i64, i64* %PC
  %265 = add i64 %264, 10
  store i64 %265, i64* %PC
  store i16 4, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %266 = load i64, i64* %RBP
  %267 = sub i64 %266, 20
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 7
  store i64 %269, i64* %PC
  %270 = inttoptr i64 %267 to i32*
  store i32 0, i32* %270
  br label %block_400810

block_400ee5:                                     ; preds = %block_400d39, %block_400ece
  %MEMORY.0 = phi %struct.Memory* [ %2938, %block_400d39 ], [ %2237, %block_400ece ]
  %271 = load i64, i64* %PC
  %272 = add i64 %271, 5
  %273 = load i64, i64* %PC
  %274 = add i64 %273, 5
  store i64 %274, i64* %PC
  %275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %272, i64* %275, align 8, !tbaa !2428
  %276 = load i64, i64* %RBP
  %277 = sub i64 %276, 20
  %278 = load i64, i64* %PC
  %279 = add i64 %278, 3
  store i64 %279, i64* %PC
  %280 = inttoptr i64 %277 to i32*
  %281 = load i32, i32* %280
  %282 = zext i32 %281 to i64
  store i64 %282, i64* %RAX, align 8, !tbaa !2428
  %283 = load i64, i64* %RAX
  %284 = load i64, i64* %PC
  %285 = add i64 %284, 3
  store i64 %285, i64* %PC
  %286 = trunc i64 %283 to i32
  %287 = add i32 1, %286
  %288 = zext i32 %287 to i64
  store i64 %288, i64* %RAX, align 8, !tbaa !2428
  %289 = icmp ult i32 %287, %286
  %290 = icmp ult i32 %287, 1
  %291 = or i1 %289, %290
  %292 = zext i1 %291 to i8
  %293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %292, i8* %293, align 1, !tbaa !2432
  %294 = and i32 %287, 255
  %295 = call i32 @llvm.ctpop.i32(i32 %294) #17
  %296 = trunc i32 %295 to i8
  %297 = and i8 %296, 1
  %298 = xor i8 %297, 1
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %298, i8* %299, align 1, !tbaa !2446
  %300 = xor i64 1, %283
  %301 = trunc i64 %300 to i32
  %302 = xor i32 %301, %287
  %303 = lshr i32 %302, 4
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %305, i8* %306, align 1, !tbaa !2447
  %307 = icmp eq i32 %287, 0
  %308 = zext i1 %307 to i8
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %308, i8* %309, align 1, !tbaa !2448
  %310 = lshr i32 %287, 31
  %311 = trunc i32 %310 to i8
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %311, i8* %312, align 1, !tbaa !2449
  %313 = lshr i32 %286, 31
  %314 = xor i32 %310, %313
  %315 = add nuw nsw i32 %314, %310
  %316 = icmp eq i32 %315, 2
  %317 = zext i1 %316 to i8
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %317, i8* %318, align 1, !tbaa !2450
  %319 = load i64, i64* %RBP
  %320 = sub i64 %319, 20
  %321 = load i32, i32* %EAX
  %322 = zext i32 %321 to i64
  %323 = load i64, i64* %PC
  %324 = add i64 %323, 3
  store i64 %324, i64* %PC
  %325 = inttoptr i64 %320 to i32*
  store i32 %321, i32* %325
  %326 = load i64, i64* %PC
  %327 = sub i64 %326, 452
  %328 = load i64, i64* %PC
  %329 = add i64 %328, 5
  store i64 %329, i64* %PC
  %330 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %327, i64* %330, align 8, !tbaa !2428
  br label %block_400d2f

block_400e10:                                     ; preds = %block_400d6b, %block_400ebb
  %MEMORY.1 = phi %struct.Memory* [ %4696, %block_400d6b ], [ %MEMORY.5, %block_400ebb ]
  %331 = load i64, i64* %RBP
  %332 = sub i64 %331, 24
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 3
  store i64 %334, i64* %PC
  %335 = inttoptr i64 %332 to i32*
  %336 = load i32, i32* %335
  %337 = zext i32 %336 to i64
  store i64 %337, i64* %RAX, align 8, !tbaa !2428
  %338 = load i32, i32* %EAX
  %339 = zext i32 %338 to i64
  %340 = load i64, i64* %RBP
  %341 = sub i64 %340, 28
  %342 = load i64, i64* %PC
  %343 = add i64 %342, 3
  store i64 %343, i64* %PC
  %344 = inttoptr i64 %341 to i32*
  %345 = load i32, i32* %344
  %346 = sub i32 %338, %345
  %347 = icmp ult i32 %338, %345
  %348 = zext i1 %347 to i8
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %348, i8* %349, align 1, !tbaa !2432
  %350 = and i32 %346, 255
  %351 = call i32 @llvm.ctpop.i32(i32 %350) #17
  %352 = trunc i32 %351 to i8
  %353 = and i8 %352, 1
  %354 = xor i8 %353, 1
  %355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %354, i8* %355, align 1, !tbaa !2446
  %356 = xor i32 %345, %338
  %357 = xor i32 %356, %346
  %358 = lshr i32 %357, 4
  %359 = trunc i32 %358 to i8
  %360 = and i8 %359, 1
  %361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %360, i8* %361, align 1, !tbaa !2447
  %362 = icmp eq i32 %346, 0
  %363 = zext i1 %362 to i8
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %363, i8* %364, align 1, !tbaa !2448
  %365 = lshr i32 %346, 31
  %366 = trunc i32 %365 to i8
  %367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %366, i8* %367, align 1, !tbaa !2449
  %368 = lshr i32 %338, 31
  %369 = lshr i32 %345, 31
  %370 = xor i32 %369, %368
  %371 = xor i32 %365, %368
  %372 = add nuw nsw i32 %371, %370
  %373 = icmp eq i32 %372, 2
  %374 = zext i1 %373 to i8
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %374, i8* %375, align 1, !tbaa !2450
  %376 = load i64, i64* %PC
  %377 = add i64 %376, 184
  %378 = load i64, i64* %PC
  %379 = add i64 %378, 6
  %380 = load i64, i64* %PC
  %381 = add i64 %380, 6
  store i64 %381, i64* %PC
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %383 = load i8, i8* %382, align 1, !tbaa !2449
  %384 = icmp ne i8 %383, 0
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %386 = load i8, i8* %385, align 1, !tbaa !2450
  %387 = icmp ne i8 %386, 0
  %388 = xor i1 %384, %387
  %389 = xor i1 %388, true
  %390 = zext i1 %389 to i8
  store i8 %390, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %392 = select i1 %388, i64 %379, i64 %377
  store i64 %392, i64* %391, align 8, !tbaa !2428
  %393 = load i8, i8* %BRANCH_TAKEN
  %394 = icmp eq i8 %393, 1
  %395 = load i64, i64* %PC
  %396 = add i64 %395, 10
  store i64 %396, i64* %PC
  br i1 %394, label %block_400ece, label %block_400e1c

block_4009de:                                     ; preds = %block_400947
  store i64 3, i64* %RDI, align 8, !tbaa !2428
  %397 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %398 = load i64, i64* %PC
  %399 = add i64 %398, 8
  store i64 %399, i64* %PC
  %400 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 112) to double*)
  %401 = bitcast i8* %397 to double*
  store double %400, double* %401, align 1, !tbaa !2451
  %402 = getelementptr inbounds i8, i8* %397, i64 8
  %403 = bitcast i8* %402 to double*
  store double 0.000000e+00, double* %403, align 1, !tbaa !2451
  %404 = load i64, i64* %PC
  %405 = add i64 %404, 10
  store i64 %405, i64* %PC
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %406 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %407 = load i64, i64* %PC
  %408 = add i64 %407, 9
  store i64 %408, i64* %PC
  %409 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %410 = bitcast i8* %406 to double*
  store double %409, double* %410, align 1, !tbaa !2451
  %411 = getelementptr inbounds i8, i8* %406, i64 8
  %412 = bitcast i8* %411 to double*
  store double 0.000000e+00, double* %412, align 1, !tbaa !2451
  %413 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %414 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %415 = bitcast %union.vec128_t* %XMM0 to i8*
  %416 = load i64, i64* %PC
  %417 = add i64 %416, 4
  store i64 %417, i64* %PC
  %418 = bitcast i8* %414 to double*
  %419 = load double, double* %418, align 1
  %420 = getelementptr inbounds i8, i8* %414, i64 8
  %421 = bitcast i8* %420 to i64*
  %422 = load i64, i64* %421, align 1
  %423 = bitcast i8* %415 to double*
  %424 = load double, double* %423, align 1
  %425 = fdiv double %419, %424
  %426 = bitcast i8* %413 to double*
  store double %425, double* %426, align 1, !tbaa !2451
  %427 = getelementptr inbounds i8, i8* %413, i64 8
  %428 = bitcast i8* %427 to i64*
  store i64 %422, i64* %428, align 1, !tbaa !2451
  %429 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %430 = bitcast %union.vec128_t* %XMM1 to i8*
  %431 = load i64, i64* %PC
  %432 = add i64 %431, 3
  store i64 %432, i64* %PC
  %433 = bitcast i8* %430 to <2 x i32>*
  %434 = load <2 x i32>, <2 x i32>* %433, align 1
  %435 = getelementptr inbounds i8, i8* %430, i64 8
  %436 = bitcast i8* %435 to <2 x i32>*
  %437 = load <2 x i32>, <2 x i32>* %436, align 1
  %438 = extractelement <2 x i32> %434, i32 0
  %439 = bitcast i8* %429 to i32*
  store i32 %438, i32* %439, align 1, !tbaa !2454
  %440 = extractelement <2 x i32> %434, i32 1
  %441 = getelementptr inbounds i8, i8* %429, i64 4
  %442 = bitcast i8* %441 to i32*
  store i32 %440, i32* %442, align 1, !tbaa !2454
  %443 = extractelement <2 x i32> %437, i32 0
  %444 = getelementptr inbounds i8, i8* %429, i64 8
  %445 = bitcast i8* %444 to i32*
  store i32 %443, i32* %445, align 1, !tbaa !2454
  %446 = extractelement <2 x i32> %437, i32 1
  %447 = getelementptr inbounds i8, i8* %429, i64 12
  %448 = bitcast i8* %447 to i32*
  store i32 %446, i32* %448, align 1, !tbaa !2454
  %449 = load i64, i64* %PC
  %450 = add i64 %449, 1387
  %451 = load i64, i64* %PC
  %452 = add i64 %451, 5
  %453 = load i64, i64* %PC
  %454 = add i64 %453, 5
  store i64 %454, i64* %PC
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %456 = load i64, i64* %455, align 8, !tbaa !2428
  %457 = add i64 %456, -8
  %458 = inttoptr i64 %457 to i64*
  store i64 %452, i64* %458
  store i64 %457, i64* %455, align 8, !tbaa !2428
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %450, i64* %459, align 8, !tbaa !2428
  %460 = load i64, i64* %PC
  %461 = call %struct.Memory* @sub_400f70_trace_line_renamed_(%struct.State* %0, i64 %460, %struct.Memory* %MEMORY.8)
  %462 = load i64, i64* %PC
  %463 = add i64 %462, 5
  store i64 %463, i64* %PC
  store i64 6, i64* %RDI, align 8, !tbaa !2428
  %464 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %465 = load i64, i64* %PC
  %466 = add i64 %465, 8
  store i64 %466, i64* %PC
  %467 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 112) to double*)
  %468 = bitcast i8* %464 to double*
  store double %467, double* %468, align 1, !tbaa !2451
  %469 = getelementptr inbounds i8, i8* %464, i64 8
  %470 = bitcast i8* %469 to double*
  store double 0.000000e+00, double* %470, align 1, !tbaa !2451
  %471 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %472 = load i64, i64* %PC
  %473 = add i64 %472, 9
  store i64 %473, i64* %PC
  %474 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %475 = bitcast i8* %471 to double*
  store double %474, double* %475, align 1, !tbaa !2451
  %476 = getelementptr inbounds i8, i8* %471, i64 8
  %477 = bitcast i8* %476 to double*
  store double 0.000000e+00, double* %477, align 1, !tbaa !2451
  %478 = load i64, i64* %RBP
  %479 = sub i64 %478, 48
  %480 = bitcast %union.vec128_t* %XMM1 to i8*
  %481 = load i64, i64* %PC
  %482 = add i64 %481, 5
  store i64 %482, i64* %PC
  %483 = bitcast i8* %480 to double*
  %484 = load double, double* %483, align 1
  %485 = inttoptr i64 %479 to double*
  store double %484, double* %485
  %486 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %487 = load i64, i64* %PC
  %488 = add i64 %487, 9
  store i64 %488, i64* %PC
  %489 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %490 = bitcast i8* %486 to double*
  store double %489, double* %490, align 1, !tbaa !2451
  %491 = getelementptr inbounds i8, i8* %486, i64 8
  %492 = bitcast i8* %491 to double*
  store double 0.000000e+00, double* %492, align 1, !tbaa !2451
  %493 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %494 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %495 = bitcast %union.vec128_t* %XMM0 to i8*
  %496 = load i64, i64* %PC
  %497 = add i64 %496, 4
  store i64 %497, i64* %PC
  %498 = bitcast i8* %494 to double*
  %499 = load double, double* %498, align 1
  %500 = getelementptr inbounds i8, i8* %494, i64 8
  %501 = bitcast i8* %500 to i64*
  %502 = load i64, i64* %501, align 1
  %503 = bitcast i8* %495 to double*
  %504 = load double, double* %503, align 1
  %505 = fdiv double %499, %504
  %506 = bitcast i8* %493 to double*
  store double %505, double* %506, align 1, !tbaa !2451
  %507 = getelementptr inbounds i8, i8* %493, i64 8
  %508 = bitcast i8* %507 to i64*
  store i64 %502, i64* %508, align 1, !tbaa !2451
  %509 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %510 = bitcast %union.vec128_t* %XMM1 to i8*
  %511 = load i64, i64* %PC
  %512 = add i64 %511, 3
  store i64 %512, i64* %PC
  %513 = bitcast i8* %510 to <2 x i32>*
  %514 = load <2 x i32>, <2 x i32>* %513, align 1
  %515 = getelementptr inbounds i8, i8* %510, i64 8
  %516 = bitcast i8* %515 to <2 x i32>*
  %517 = load <2 x i32>, <2 x i32>* %516, align 1
  %518 = extractelement <2 x i32> %514, i32 0
  %519 = bitcast i8* %509 to i32*
  store i32 %518, i32* %519, align 1, !tbaa !2454
  %520 = extractelement <2 x i32> %514, i32 1
  %521 = getelementptr inbounds i8, i8* %509, i64 4
  %522 = bitcast i8* %521 to i32*
  store i32 %520, i32* %522, align 1, !tbaa !2454
  %523 = extractelement <2 x i32> %517, i32 0
  %524 = getelementptr inbounds i8, i8* %509, i64 8
  %525 = bitcast i8* %524 to i32*
  store i32 %523, i32* %525, align 1, !tbaa !2454
  %526 = extractelement <2 x i32> %517, i32 1
  %527 = getelementptr inbounds i8, i8* %509, i64 12
  %528 = bitcast i8* %527 to i32*
  store i32 %526, i32* %528, align 1, !tbaa !2454
  %529 = load i64, i64* %RBP
  %530 = sub i64 %529, 76
  %531 = load i32, i32* %EAX
  %532 = zext i32 %531 to i64
  %533 = load i64, i64* %PC
  %534 = add i64 %533, 3
  store i64 %534, i64* %PC
  %535 = inttoptr i64 %530 to i32*
  store i32 %531, i32* %535
  %536 = load i64, i64* %PC
  %537 = add i64 %536, 1336
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 5
  %540 = load i64, i64* %PC
  %541 = add i64 %540, 5
  store i64 %541, i64* %PC
  %542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %543 = load i64, i64* %542, align 8, !tbaa !2428
  %544 = add i64 %543, -8
  %545 = inttoptr i64 %544 to i64*
  store i64 %539, i64* %545
  store i64 %544, i64* %542, align 8, !tbaa !2428
  %546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %537, i64* %546, align 8, !tbaa !2428
  %547 = load i64, i64* %PC
  %548 = call %struct.Memory* @sub_400f70_trace_line_renamed_(%struct.State* %0, i64 %547, %struct.Memory* %461)
  %549 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 8
  store i64 %551, i64* %PC
  %552 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 88) to double*)
  %553 = bitcast i8* %549 to double*
  store double %552, double* %553, align 1, !tbaa !2451
  %554 = getelementptr inbounds i8, i8* %549, i64 8
  %555 = bitcast i8* %554 to double*
  store double 0.000000e+00, double* %555, align 1, !tbaa !2451
  %556 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %557 = load i64, i64* %PC
  %558 = add i64 %557, 8
  store i64 %558, i64* %PC
  %559 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 96) to double*)
  %560 = bitcast i8* %556 to double*
  store double %559, double* %560, align 1, !tbaa !2451
  %561 = getelementptr inbounds i8, i8* %556, i64 8
  %562 = bitcast i8* %561 to double*
  store double 0.000000e+00, double* %562, align 1, !tbaa !2451
  %563 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %564 = load i64, i64* %PC
  %565 = add i64 %564, 8
  store i64 %565, i64* %PC
  %566 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 104) to double*)
  %567 = bitcast i8* %563 to double*
  store double %566, double* %567, align 1, !tbaa !2451
  %568 = getelementptr inbounds i8, i8* %563, i64 8
  %569 = bitcast i8* %568 to double*
  store double 0.000000e+00, double* %569, align 1, !tbaa !2451
  %570 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %571 = load i64, i64* %PC
  %572 = add i64 %571, 9
  store i64 %572, i64* %PC
  %573 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %574 = bitcast i8* %570 to double*
  store double %573, double* %574, align 1, !tbaa !2451
  %575 = getelementptr inbounds i8, i8* %570, i64 8
  %576 = bitcast i8* %575 to double*
  store double 0.000000e+00, double* %576, align 1, !tbaa !2451
  %577 = load i64, i64* %RBP
  %578 = sub i64 %577, 40
  %579 = bitcast %union.vec128_t* %XMM3 to i8*
  %580 = load i64, i64* %PC
  %581 = add i64 %580, 5
  store i64 %581, i64* %PC
  %582 = bitcast i8* %579 to double*
  %583 = load double, double* %582, align 1
  %584 = inttoptr i64 %578 to double*
  store double %583, double* %584
  %585 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %586 = load i64, i64* %PC
  %587 = add i64 %586, 9
  store i64 %587, i64* %PC
  %588 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %589 = bitcast i8* %585 to double*
  store double %588, double* %589, align 1, !tbaa !2451
  %590 = getelementptr inbounds i8, i8* %585, i64 8
  %591 = bitcast i8* %590 to double*
  store double 0.000000e+00, double* %591, align 1, !tbaa !2451
  %592 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %593 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %594 = load i64, i64* %PC
  %595 = add i64 %594, 9
  store i64 %595, i64* %PC
  %596 = bitcast i8* %593 to double*
  %597 = load double, double* %596, align 1
  %598 = getelementptr inbounds i8, i8* %593, i64 8
  %599 = bitcast i8* %598 to i64*
  %600 = load i64, i64* %599, align 1
  %601 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %602 = fsub double %597, %601
  %603 = bitcast i8* %592 to double*
  store double %602, double* %603, align 1, !tbaa !2451
  %604 = getelementptr inbounds i8, i8* %592, i64 8
  %605 = bitcast i8* %604 to i64*
  store i64 %600, i64* %605, align 1, !tbaa !2451
  %606 = bitcast %union.vec128_t* %XMM3 to i8*
  %607 = load i64, i64* %PC
  %608 = add i64 %607, 9
  store i64 %608, i64* %PC
  %609 = bitcast i8* %606 to double*
  %610 = load double, double* %609, align 1
  store double %610, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %611 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %612 = load i64, i64* %PC
  %613 = add i64 %612, 9
  store i64 %613, i64* %PC
  %614 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %615 = bitcast i8* %611 to double*
  store double %614, double* %615, align 1, !tbaa !2451
  %616 = getelementptr inbounds i8, i8* %611, i64 8
  %617 = bitcast i8* %616 to double*
  store double 0.000000e+00, double* %617, align 1, !tbaa !2451
  %618 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %619 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %620 = load i64, i64* %PC
  %621 = add i64 %620, 9
  store i64 %621, i64* %PC
  %622 = bitcast i8* %619 to double*
  %623 = load double, double* %622, align 1
  %624 = getelementptr inbounds i8, i8* %619, i64 8
  %625 = bitcast i8* %624 to i64*
  %626 = load i64, i64* %625, align 1
  %627 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %628 = fmul double %623, %627
  %629 = bitcast i8* %618 to double*
  store double %628, double* %629, align 1, !tbaa !2451
  %630 = getelementptr inbounds i8, i8* %618, i64 8
  %631 = bitcast i8* %630 to i64*
  store i64 %626, i64* %631, align 1, !tbaa !2451
  %632 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %633 = load i64, i64* %PC
  %634 = add i64 %633, 9
  store i64 %634, i64* %PC
  %635 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %636 = bitcast i8* %632 to double*
  store double %635, double* %636, align 1, !tbaa !2451
  %637 = getelementptr inbounds i8, i8* %632, i64 8
  %638 = bitcast i8* %637 to double*
  store double 0.000000e+00, double* %638, align 1, !tbaa !2451
  %639 = load i64, i64* %RBP
  %640 = sub i64 %639, 88
  %641 = bitcast %union.vec128_t* %XMM0 to i8*
  %642 = load i64, i64* %PC
  %643 = add i64 %642, 5
  store i64 %643, i64* %PC
  %644 = bitcast i8* %641 to double*
  %645 = load double, double* %644, align 1
  %646 = inttoptr i64 %640 to double*
  store double %645, double* %646
  %647 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %648 = bitcast %union.vec128_t* %XMM4 to i8*
  %649 = load i64, i64* %PC
  %650 = add i64 %649, 3
  store i64 %650, i64* %PC
  %651 = bitcast i8* %648 to <2 x i32>*
  %652 = load <2 x i32>, <2 x i32>* %651, align 1
  %653 = getelementptr inbounds i8, i8* %648, i64 8
  %654 = bitcast i8* %653 to <2 x i32>*
  %655 = load <2 x i32>, <2 x i32>* %654, align 1
  %656 = extractelement <2 x i32> %652, i32 0
  %657 = bitcast i8* %647 to i32*
  store i32 %656, i32* %657, align 1, !tbaa !2454
  %658 = extractelement <2 x i32> %652, i32 1
  %659 = getelementptr inbounds i8, i8* %647, i64 4
  %660 = bitcast i8* %659 to i32*
  store i32 %658, i32* %660, align 1, !tbaa !2454
  %661 = extractelement <2 x i32> %655, i32 0
  %662 = getelementptr inbounds i8, i8* %647, i64 8
  %663 = bitcast i8* %662 to i32*
  store i32 %661, i32* %663, align 1, !tbaa !2454
  %664 = extractelement <2 x i32> %655, i32 1
  %665 = getelementptr inbounds i8, i8* %647, i64 12
  %666 = bitcast i8* %665 to i32*
  store i32 %664, i32* %666, align 1, !tbaa !2454
  %667 = load i64, i64* %RBP
  %668 = sub i64 %667, 92
  %669 = load i32, i32* %EAX
  %670 = zext i32 %669 to i64
  %671 = load i64, i64* %PC
  %672 = add i64 %671, 3
  store i64 %672, i64* %PC
  %673 = inttoptr i64 %668 to i32*
  store i32 %669, i32* %673
  %674 = load i64, i64* %RBP
  %675 = sub i64 %674, 104
  %676 = bitcast %union.vec128_t* %XMM3 to i8*
  %677 = load i64, i64* %PC
  %678 = add i64 %677, 5
  store i64 %678, i64* %PC
  %679 = bitcast i8* %676 to double*
  %680 = load double, double* %679, align 1
  %681 = inttoptr i64 %675 to double*
  store double %680, double* %681
  %682 = load i64, i64* %RBP
  %683 = sub i64 %682, 112
  %684 = bitcast %union.vec128_t* %XMM1 to i8*
  %685 = load i64, i64* %PC
  %686 = add i64 %685, 5
  store i64 %686, i64* %PC
  %687 = bitcast i8* %684 to double*
  %688 = load double, double* %687, align 1
  %689 = inttoptr i64 %683 to double*
  store double %688, double* %689
  %690 = load i64, i64* %RBP
  %691 = sub i64 %690, 120
  %692 = bitcast %union.vec128_t* %XMM2 to i8*
  %693 = load i64, i64* %PC
  %694 = add i64 %693, 5
  store i64 %694, i64* %PC
  %695 = bitcast i8* %692 to double*
  %696 = load double, double* %695, align 1
  %697 = inttoptr i64 %691 to double*
  store double %696, double* %697
  %698 = load i64, i64* %PC
  %699 = sub i64 %698, 1171
  %700 = load i64, i64* %PC
  %701 = add i64 %700, 5
  %702 = load i64, i64* %PC
  %703 = add i64 %702, 5
  store i64 %703, i64* %PC
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %705 = load i64, i64* %704, align 8, !tbaa !2428
  %706 = add i64 %705, -8
  %707 = inttoptr i64 %706 to i64*
  store i64 %701, i64* %707
  store i64 %706, i64* %704, align 8, !tbaa !2428
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %699, i64* %708, align 8, !tbaa !2428
  %709 = load i64, i64* %PC
  %710 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %710)
  %711 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %711)
  %712 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %712)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %713 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %713)
  %714 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %714)
  %715 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %715)
  %716 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %716)
  %717 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %717)
  %718 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %718)
  %719 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %719)
  %720 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %720)
  %721 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %721)
  %722 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %722)
  %723 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %723)
  %724 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %724)
  %725 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %725)
  %726 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %726)
  %727 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %727)
  %728 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %728)
  %729 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %729)
  %730 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %730)
  %731 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %731)
  %732 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %732)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2456
  store i64 %709, i64* %curr_pc.i2, align 8, !noalias !2456
  store %struct.Memory* %548, %struct.Memory** %memory.i3, align 8, !noalias !2456
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2456
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2456
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2456
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2456
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2456
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2456
  store %struct.Memory* %548, %struct.Memory** %MEMORY.i10, align 8, !noalias !2456
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 33
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %735 to i64*
  store i64 %709, i64* %PC.i25, align 8, !alias.scope !2460, !noalias !2461
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %737 = getelementptr inbounds %struct.GPR, %struct.GPR* %736, i32 0, i32 1
  %738 = getelementptr inbounds %struct.Reg, %struct.Reg* %737, i32 0, i32 0
  %739 = bitcast %union.anon* %738 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %739, i32 0, i32 1
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 3
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %743 = bitcast %union.anon* %742 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %743, i32 0, i32 1
  %744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %745 = getelementptr inbounds %struct.GPR, %struct.GPR* %744, i32 0, i32 5
  %746 = getelementptr inbounds %struct.Reg, %struct.Reg* %745, i32 0, i32 0
  %747 = bitcast %union.anon* %746 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %747, i32 0, i32 1
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %749 = getelementptr inbounds %struct.GPR, %struct.GPR* %748, i32 0, i32 7
  %750 = getelementptr inbounds %struct.Reg, %struct.Reg* %749, i32 0, i32 0
  %751 = bitcast %union.anon* %750 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %751, i32 0, i32 1
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %753 = getelementptr inbounds %struct.GPR, %struct.GPR* %752, i32 0, i32 1
  %754 = getelementptr inbounds %struct.Reg, %struct.Reg* %753, i32 0, i32 0
  %755 = bitcast %union.anon* %754 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %755, i32 0, i32 0
  %756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %757 = getelementptr inbounds %struct.GPR, %struct.GPR* %756, i32 0, i32 3
  %758 = getelementptr inbounds %struct.Reg, %struct.Reg* %757, i32 0, i32 0
  %759 = bitcast %union.anon* %758 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %759, i32 0, i32 0
  %760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %761 = getelementptr inbounds %struct.GPR, %struct.GPR* %760, i32 0, i32 5
  %762 = getelementptr inbounds %struct.Reg, %struct.Reg* %761, i32 0, i32 0
  %763 = bitcast %union.anon* %762 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %763, i32 0, i32 0
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 7
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %767 = bitcast %union.anon* %766 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %767, i32 0, i32 0
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %769 = getelementptr inbounds %struct.GPR, %struct.GPR* %768, i32 0, i32 9
  %770 = getelementptr inbounds %struct.Reg, %struct.Reg* %769, i32 0, i32 0
  %771 = bitcast %union.anon* %770 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %771, i32 0, i32 0
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %773 = getelementptr inbounds %struct.GPR, %struct.GPR* %772, i32 0, i32 11
  %774 = getelementptr inbounds %struct.Reg, %struct.Reg* %773, i32 0, i32 0
  %775 = bitcast %union.anon* %774 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %775, i32 0, i32 0
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 13
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %779 = bitcast %union.anon* %778 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %779, i32 0, i32 0
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %781 = getelementptr inbounds %struct.GPR, %struct.GPR* %780, i32 0, i32 15
  %782 = getelementptr inbounds %struct.Reg, %struct.Reg* %781, i32 0, i32 0
  %783 = bitcast %union.anon* %782 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %783, i32 0, i32 0
  %784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %785 = getelementptr inbounds %struct.GPR, %struct.GPR* %784, i32 0, i32 17
  %786 = getelementptr inbounds %struct.Reg, %struct.Reg* %785, i32 0, i32 0
  %787 = bitcast %union.anon* %786 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %787, i32 0, i32 0
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 19
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %791 = bitcast %union.anon* %790 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %791, i32 0, i32 0
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %793 = getelementptr inbounds %struct.GPR, %struct.GPR* %792, i32 0, i32 21
  %794 = getelementptr inbounds %struct.Reg, %struct.Reg* %793, i32 0, i32 0
  %795 = bitcast %union.anon* %794 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %795, i32 0, i32 0
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %797 = getelementptr inbounds %struct.GPR, %struct.GPR* %796, i32 0, i32 23
  %798 = getelementptr inbounds %struct.Reg, %struct.Reg* %797, i32 0, i32 0
  %799 = bitcast %union.anon* %798 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %799, i32 0, i32 0
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 25
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %803 = bitcast %union.anon* %802 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %803, i32 0, i32 0
  %804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %805 = getelementptr inbounds %struct.GPR, %struct.GPR* %804, i32 0, i32 27
  %806 = getelementptr inbounds %struct.Reg, %struct.Reg* %805, i32 0, i32 0
  %807 = bitcast %union.anon* %806 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %807, i32 0, i32 0
  %808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %809 = getelementptr inbounds %struct.GPR, %struct.GPR* %808, i32 0, i32 29
  %810 = getelementptr inbounds %struct.Reg, %struct.Reg* %809, i32 0, i32 0
  %811 = bitcast %union.anon* %810 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %811, i32 0, i32 0
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 31
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %815 = bitcast %union.anon* %814 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %815, i32 0, i32 0
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %817 = getelementptr inbounds %struct.GPR, %struct.GPR* %816, i32 0, i32 1
  %818 = getelementptr inbounds %struct.Reg, %struct.Reg* %817, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %818 to i16*
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %820 = getelementptr inbounds %struct.GPR, %struct.GPR* %819, i32 0, i32 3
  %821 = getelementptr inbounds %struct.Reg, %struct.Reg* %820, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %821 to i16*
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %823 = getelementptr inbounds %struct.GPR, %struct.GPR* %822, i32 0, i32 5
  %824 = getelementptr inbounds %struct.Reg, %struct.Reg* %823, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %824 to i16*
  %825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %826 = getelementptr inbounds %struct.GPR, %struct.GPR* %825, i32 0, i32 7
  %827 = getelementptr inbounds %struct.Reg, %struct.Reg* %826, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %827 to i16*
  %828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %829 = getelementptr inbounds %struct.GPR, %struct.GPR* %828, i32 0, i32 9
  %830 = getelementptr inbounds %struct.Reg, %struct.Reg* %829, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %830 to i16*
  %831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %832 = getelementptr inbounds %struct.GPR, %struct.GPR* %831, i32 0, i32 11
  %833 = getelementptr inbounds %struct.Reg, %struct.Reg* %832, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %833 to i16*
  %834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %835 = getelementptr inbounds %struct.GPR, %struct.GPR* %834, i32 0, i32 13
  %836 = getelementptr inbounds %struct.Reg, %struct.Reg* %835, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %836 to i16*
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %838 = getelementptr inbounds %struct.GPR, %struct.GPR* %837, i32 0, i32 15
  %839 = getelementptr inbounds %struct.Reg, %struct.Reg* %838, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %839 to i16*
  %840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %841 = getelementptr inbounds %struct.GPR, %struct.GPR* %840, i32 0, i32 17
  %842 = getelementptr inbounds %struct.Reg, %struct.Reg* %841, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %842 to i16*
  %843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %844 = getelementptr inbounds %struct.GPR, %struct.GPR* %843, i32 0, i32 19
  %845 = getelementptr inbounds %struct.Reg, %struct.Reg* %844, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %845 to i16*
  %846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %847 = getelementptr inbounds %struct.GPR, %struct.GPR* %846, i32 0, i32 21
  %848 = getelementptr inbounds %struct.Reg, %struct.Reg* %847, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %848 to i16*
  %849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %850 = getelementptr inbounds %struct.GPR, %struct.GPR* %849, i32 0, i32 23
  %851 = getelementptr inbounds %struct.Reg, %struct.Reg* %850, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %851 to i16*
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %853 = getelementptr inbounds %struct.GPR, %struct.GPR* %852, i32 0, i32 25
  %854 = getelementptr inbounds %struct.Reg, %struct.Reg* %853, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %854 to i16*
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %856 = getelementptr inbounds %struct.GPR, %struct.GPR* %855, i32 0, i32 27
  %857 = getelementptr inbounds %struct.Reg, %struct.Reg* %856, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %857 to i16*
  %858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %859 = getelementptr inbounds %struct.GPR, %struct.GPR* %858, i32 0, i32 29
  %860 = getelementptr inbounds %struct.Reg, %struct.Reg* %859, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %860 to i16*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %862 = getelementptr inbounds %struct.GPR, %struct.GPR* %861, i32 0, i32 31
  %863 = getelementptr inbounds %struct.Reg, %struct.Reg* %862, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %863 to i16*
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %865 = getelementptr inbounds %struct.GPR, %struct.GPR* %864, i32 0, i32 33
  %866 = getelementptr inbounds %struct.Reg, %struct.Reg* %865, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %866 to i16*
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %868 = getelementptr inbounds %struct.GPR, %struct.GPR* %867, i32 0, i32 1
  %869 = getelementptr inbounds %struct.Reg, %struct.Reg* %868, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %869 to i32*
  %870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %871 = getelementptr inbounds %struct.GPR, %struct.GPR* %870, i32 0, i32 3
  %872 = getelementptr inbounds %struct.Reg, %struct.Reg* %871, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %872 to i32*
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %874 = getelementptr inbounds %struct.GPR, %struct.GPR* %873, i32 0, i32 5
  %875 = getelementptr inbounds %struct.Reg, %struct.Reg* %874, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %875 to i32*
  %876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %877 = getelementptr inbounds %struct.GPR, %struct.GPR* %876, i32 0, i32 7
  %878 = getelementptr inbounds %struct.Reg, %struct.Reg* %877, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %878 to i32*
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %880 = getelementptr inbounds %struct.GPR, %struct.GPR* %879, i32 0, i32 9
  %881 = getelementptr inbounds %struct.Reg, %struct.Reg* %880, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %881 to i32*
  %882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %883 = getelementptr inbounds %struct.GPR, %struct.GPR* %882, i32 0, i32 11
  %884 = getelementptr inbounds %struct.Reg, %struct.Reg* %883, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %884 to i32*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %886 = getelementptr inbounds %struct.GPR, %struct.GPR* %885, i32 0, i32 13
  %887 = getelementptr inbounds %struct.Reg, %struct.Reg* %886, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %887 to i32*
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %889 = getelementptr inbounds %struct.GPR, %struct.GPR* %888, i32 0, i32 15
  %890 = getelementptr inbounds %struct.Reg, %struct.Reg* %889, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %890 to i32*
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %892 = getelementptr inbounds %struct.GPR, %struct.GPR* %891, i32 0, i32 33
  %893 = getelementptr inbounds %struct.Reg, %struct.Reg* %892, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %893 to i32*
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %895 = getelementptr inbounds %struct.GPR, %struct.GPR* %894, i32 0, i32 17
  %896 = getelementptr inbounds %struct.Reg, %struct.Reg* %895, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %896 to i32*
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %898 = getelementptr inbounds %struct.GPR, %struct.GPR* %897, i32 0, i32 19
  %899 = getelementptr inbounds %struct.Reg, %struct.Reg* %898, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %899 to i32*
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %901 = getelementptr inbounds %struct.GPR, %struct.GPR* %900, i32 0, i32 21
  %902 = getelementptr inbounds %struct.Reg, %struct.Reg* %901, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %902 to i32*
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %904 = getelementptr inbounds %struct.GPR, %struct.GPR* %903, i32 0, i32 23
  %905 = getelementptr inbounds %struct.Reg, %struct.Reg* %904, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %905 to i32*
  %906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %907 = getelementptr inbounds %struct.GPR, %struct.GPR* %906, i32 0, i32 25
  %908 = getelementptr inbounds %struct.Reg, %struct.Reg* %907, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %908 to i32*
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %910 = getelementptr inbounds %struct.GPR, %struct.GPR* %909, i32 0, i32 27
  %911 = getelementptr inbounds %struct.Reg, %struct.Reg* %910, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %911 to i32*
  %912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %913 = getelementptr inbounds %struct.GPR, %struct.GPR* %912, i32 0, i32 29
  %914 = getelementptr inbounds %struct.Reg, %struct.Reg* %913, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %914 to i32*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %916 = getelementptr inbounds %struct.GPR, %struct.GPR* %915, i32 0, i32 31
  %917 = getelementptr inbounds %struct.Reg, %struct.Reg* %916, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %917 to i32*
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %919 = getelementptr inbounds %struct.GPR, %struct.GPR* %918, i32 0, i32 1
  %920 = getelementptr inbounds %struct.Reg, %struct.Reg* %919, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %920 to i64*
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %922 = getelementptr inbounds %struct.GPR, %struct.GPR* %921, i32 0, i32 3
  %923 = getelementptr inbounds %struct.Reg, %struct.Reg* %922, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %923 to i64*
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %925 = getelementptr inbounds %struct.GPR, %struct.GPR* %924, i32 0, i32 5
  %926 = getelementptr inbounds %struct.Reg, %struct.Reg* %925, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %926 to i64*
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %928 = getelementptr inbounds %struct.GPR, %struct.GPR* %927, i32 0, i32 7
  %929 = getelementptr inbounds %struct.Reg, %struct.Reg* %928, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %929 to i64*
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %931 = getelementptr inbounds %struct.GPR, %struct.GPR* %930, i32 0, i32 9
  %932 = getelementptr inbounds %struct.Reg, %struct.Reg* %931, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %932 to i64*
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %934 = getelementptr inbounds %struct.GPR, %struct.GPR* %933, i32 0, i32 11
  %935 = getelementptr inbounds %struct.Reg, %struct.Reg* %934, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %935 to i64*
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %937 = getelementptr inbounds %struct.GPR, %struct.GPR* %936, i32 0, i32 13
  %938 = getelementptr inbounds %struct.Reg, %struct.Reg* %937, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %938 to i64*
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %940 = getelementptr inbounds %struct.GPR, %struct.GPR* %939, i32 0, i32 15
  %941 = getelementptr inbounds %struct.Reg, %struct.Reg* %940, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %941 to i64*
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %943 = getelementptr inbounds %struct.GPR, %struct.GPR* %942, i32 0, i32 17
  %944 = getelementptr inbounds %struct.Reg, %struct.Reg* %943, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %944 to i64*
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %946 = getelementptr inbounds %struct.GPR, %struct.GPR* %945, i32 0, i32 19
  %947 = getelementptr inbounds %struct.Reg, %struct.Reg* %946, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %947 to i64*
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %949 = getelementptr inbounds %struct.GPR, %struct.GPR* %948, i32 0, i32 21
  %950 = getelementptr inbounds %struct.Reg, %struct.Reg* %949, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %950 to i64*
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %952 = getelementptr inbounds %struct.GPR, %struct.GPR* %951, i32 0, i32 23
  %953 = getelementptr inbounds %struct.Reg, %struct.Reg* %952, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %953 to i64*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %955 = getelementptr inbounds %struct.GPR, %struct.GPR* %954, i32 0, i32 25
  %956 = getelementptr inbounds %struct.Reg, %struct.Reg* %955, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %956 to i64*
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %958 = getelementptr inbounds %struct.GPR, %struct.GPR* %957, i32 0, i32 27
  %959 = getelementptr inbounds %struct.Reg, %struct.Reg* %958, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %959 to i64*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %961 = getelementptr inbounds %struct.GPR, %struct.GPR* %960, i32 0, i32 29
  %962 = getelementptr inbounds %struct.Reg, %struct.Reg* %961, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %962 to i64*
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %964 = getelementptr inbounds %struct.GPR, %struct.GPR* %963, i32 0, i32 31
  %965 = getelementptr inbounds %struct.Reg, %struct.Reg* %964, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %965 to i64*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %967 = getelementptr inbounds %struct.GPR, %struct.GPR* %966, i32 0, i32 33
  %968 = getelementptr inbounds %struct.Reg, %struct.Reg* %967, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %968 to i64*
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %970 = getelementptr inbounds %struct.Segments, %struct.Segments* %969, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %970 to i16*
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %972 = getelementptr inbounds %struct.Segments, %struct.Segments* %971, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %972 to i16*
  %973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %974 = getelementptr inbounds %struct.Segments, %struct.Segments* %973, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %974 to i16*
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %976 = getelementptr inbounds %struct.Segments, %struct.Segments* %975, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %976 to i16*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %978 = getelementptr inbounds %struct.Segments, %struct.Segments* %977, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %978 to i16*
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %980 = getelementptr inbounds %struct.Segments, %struct.Segments* %979, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %980 to i16*
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %982 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %981, i32 0, i32 5
  %983 = getelementptr inbounds %struct.Reg, %struct.Reg* %982, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %983 to i64*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %985 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %984, i32 0, i32 7
  %986 = getelementptr inbounds %struct.Reg, %struct.Reg* %985, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %986 to i64*
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %988 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %987, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %988 to %"class.std::bitset"*
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %990 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %989, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %990 to %"class.std::bitset"*
  %991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %992 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %991, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %992 to %"class.std::bitset"*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %994 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %993, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %994 to %"class.std::bitset"*
  %995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %996 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %995, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %996 to %"class.std::bitset"*
  %997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %998 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %997, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %998 to %"class.std::bitset"*
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1000 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %999, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %1000 to %"class.std::bitset"*
  %1001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1002 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1001, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %1002 to %"class.std::bitset"*
  %1003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1004 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1003, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %1004 to %"class.std::bitset"*
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1006 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1005, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %1006 to %"class.std::bitset"*
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1008 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1007, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %1008 to %"class.std::bitset"*
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1010 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1009, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %1010 to %"class.std::bitset"*
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1012 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1011, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %1012 to %"class.std::bitset"*
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1014 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1013, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %1014 to %"class.std::bitset"*
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1016 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1015, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %1016 to %"class.std::bitset"*
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1018 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1017, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %1018 to %"class.std::bitset"*
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1020 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1019, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %1020 to %union.vec128_t*
  %1021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1022 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1021, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %1022 to %union.vec128_t*
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1024 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1023, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %1024 to %union.vec128_t*
  %1025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1026 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1025, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %1026 to %union.vec128_t*
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1028 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1027, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %1028 to %union.vec128_t*
  %1029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1030 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1029, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %1030 to %union.vec128_t*
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1032 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1031, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %1032 to %union.vec128_t*
  %1033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1034 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1033, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %1034 to %union.vec128_t*
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1036 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1035, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %1036 to %union.vec128_t*
  %1037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1038 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1037, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %1038 to %union.vec128_t*
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1040 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1039, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %1040 to %union.vec128_t*
  %1041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1041, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %1042 to %union.vec128_t*
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1043, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %1044 to %union.vec128_t*
  %1045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1046 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1045, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %1046 to %union.vec128_t*
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1048 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1047, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %1048 to %union.vec128_t*
  %1049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1050 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1049, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %1050 to %union.vec128_t*
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1052 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1051, i32 0, i32 0
  %1053 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1052, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1053, i32 0, i32 1
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1055 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1054, i32 0, i32 0
  %1056 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1055, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1056, i32 0, i32 1
  %1057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1058 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1057, i32 0, i32 0
  %1059 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1058, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1059, i32 0, i32 1
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1061 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1060, i32 0, i32 0
  %1062 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1061, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1062, i32 0, i32 1
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1064 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1063, i32 0, i32 0
  %1065 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1064, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1065, i32 0, i32 1
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1067 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1066, i32 0, i32 0
  %1068 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1067, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1068, i32 0, i32 1
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1070 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1069, i32 0, i32 0
  %1071 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1070, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1071, i32 0, i32 1
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1073 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1072, i32 0, i32 0
  %1074 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1073, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1074, i32 0, i32 1
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1076 = getelementptr inbounds %struct.MMX, %struct.MMX* %1075, i32 0, i32 0
  %1077 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1076, i64 0, i64 0
  %1078 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1077, i32 0, i32 1
  %1079 = bitcast %union.vec64_t* %1078 to %struct.uint64v1_t*
  %1080 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1079, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %1080, i64 0, i64 0
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1082 = getelementptr inbounds %struct.MMX, %struct.MMX* %1081, i32 0, i32 0
  %1083 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1082, i64 0, i64 1
  %1084 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1083, i32 0, i32 1
  %1085 = bitcast %union.vec64_t* %1084 to %struct.uint64v1_t*
  %1086 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1085, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %1086, i64 0, i64 0
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1088 = getelementptr inbounds %struct.MMX, %struct.MMX* %1087, i32 0, i32 0
  %1089 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1088, i64 0, i64 2
  %1090 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1089, i32 0, i32 1
  %1091 = bitcast %union.vec64_t* %1090 to %struct.uint64v1_t*
  %1092 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1091, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %1092, i64 0, i64 0
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1094 = getelementptr inbounds %struct.MMX, %struct.MMX* %1093, i32 0, i32 0
  %1095 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1094, i64 0, i64 3
  %1096 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1095, i32 0, i32 1
  %1097 = bitcast %union.vec64_t* %1096 to %struct.uint64v1_t*
  %1098 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1097, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %1098, i64 0, i64 0
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1100 = getelementptr inbounds %struct.MMX, %struct.MMX* %1099, i32 0, i32 0
  %1101 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1100, i64 0, i64 4
  %1102 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1101, i32 0, i32 1
  %1103 = bitcast %union.vec64_t* %1102 to %struct.uint64v1_t*
  %1104 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1103, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %1104, i64 0, i64 0
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1106 = getelementptr inbounds %struct.MMX, %struct.MMX* %1105, i32 0, i32 0
  %1107 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1106, i64 0, i64 5
  %1108 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1107, i32 0, i32 1
  %1109 = bitcast %union.vec64_t* %1108 to %struct.uint64v1_t*
  %1110 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1109, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %1110, i64 0, i64 0
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1112 = getelementptr inbounds %struct.MMX, %struct.MMX* %1111, i32 0, i32 0
  %1113 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1112, i64 0, i64 6
  %1114 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1113, i32 0, i32 1
  %1115 = bitcast %union.vec64_t* %1114 to %struct.uint64v1_t*
  %1116 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1115, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %1116, i64 0, i64 0
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1118 = getelementptr inbounds %struct.MMX, %struct.MMX* %1117, i32 0, i32 0
  %1119 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1118, i64 0, i64 7
  %1120 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1119, i32 0, i32 1
  %1121 = bitcast %union.vec64_t* %1120 to %struct.uint64v1_t*
  %1122 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1121, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %1122, i64 0, i64 0
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1123, i32 0, i32 5
  %1124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1124, i32 0, i32 1
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1125, i32 0, i32 11
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1126, i32 0, i32 13
  %1127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1127, i32 0, i32 3
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1128, i32 0, i32 9
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1129, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2456
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2456
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2456
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2456
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2456
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2456
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2456
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2456
  %1130 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %1131 = load double, double* %1130, !alias.scope !2460, !noalias !2461
  %1132 = load i64, i64* %RSP.i86, !alias.scope !2460, !noalias !2461
  %1133 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2456
  %1134 = inttoptr i64 %1132 to i64*
  %1135 = load i64, i64* %1134
  store i64 %1135, i64* %PC.i25, !alias.scope !2460, !noalias !2461
  %1136 = add i64 %1132, 8
  store i64 %1136, i64* %RSP.i86, !alias.scope !2460, !noalias !2461
  %1137 = call double @sin(double %1131)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2460, !noalias !2461
  %1138 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %1137, double* %1138, !alias.scope !2460, !noalias !2461
  %1139 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2456
  %1140 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1140)
  %1141 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1141)
  %1142 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1142)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %1143 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1143)
  %1144 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1144)
  %1145 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1145)
  %1146 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1146)
  %1147 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1147)
  %1148 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1148)
  %1149 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1149)
  %1150 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1150)
  %1151 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1151)
  %1152 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1152)
  %1153 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1153)
  %1154 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1154)
  %1155 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1155)
  %1156 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1156)
  %1157 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1157)
  %1158 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1158)
  %1159 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1159)
  %1160 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1160)
  %1161 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1161)
  %1162 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1162)
  %1163 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1164 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1165 = load i64, i64* %PC
  %1166 = add i64 %1165, 9
  store i64 %1166, i64* %PC
  %1167 = bitcast i8* %1164 to double*
  %1168 = load double, double* %1167, align 1
  %1169 = getelementptr inbounds i8, i8* %1164, i64 8
  %1170 = bitcast i8* %1169 to i64*
  %1171 = load i64, i64* %1170, align 1
  %1172 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %1173 = fmul double %1168, %1172
  %1174 = bitcast i8* %1163 to double*
  store double %1173, double* %1174, align 1, !tbaa !2451
  %1175 = getelementptr inbounds i8, i8* %1163, i64 8
  %1176 = bitcast i8* %1175 to i64*
  store i64 %1171, i64* %1176, align 1, !tbaa !2451
  %1177 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1178 = load i64, i64* %RBP
  %1179 = sub i64 %1178, 104
  %1180 = load i64, i64* %PC
  %1181 = add i64 %1180, 5
  store i64 %1181, i64* %PC
  %1182 = inttoptr i64 %1179 to double*
  %1183 = load double, double* %1182
  %1184 = bitcast i8* %1177 to double*
  store double %1183, double* %1184, align 1, !tbaa !2451
  %1185 = getelementptr inbounds i8, i8* %1177, i64 8
  %1186 = bitcast i8* %1185 to double*
  store double 0.000000e+00, double* %1186, align 1, !tbaa !2451
  %1187 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1188 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1189 = bitcast %union.vec128_t* %XMM0 to i8*
  %1190 = load i64, i64* %PC
  %1191 = add i64 %1190, 4
  store i64 %1191, i64* %PC
  %1192 = bitcast i8* %1188 to double*
  %1193 = load double, double* %1192, align 1
  %1194 = getelementptr inbounds i8, i8* %1188, i64 8
  %1195 = bitcast i8* %1194 to i64*
  %1196 = load i64, i64* %1195, align 1
  %1197 = bitcast i8* %1189 to double*
  %1198 = load double, double* %1197, align 1
  %1199 = fdiv double %1193, %1198
  %1200 = bitcast i8* %1187 to double*
  store double %1199, double* %1200, align 1, !tbaa !2451
  %1201 = getelementptr inbounds i8, i8* %1187, i64 8
  %1202 = bitcast i8* %1201 to i64*
  store i64 %1196, i64* %1202, align 1, !tbaa !2451
  %1203 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1204 = load i64, i64* %RBP
  %1205 = sub i64 %1204, 120
  %1206 = load i64, i64* %PC
  %1207 = add i64 %1206, 5
  store i64 %1207, i64* %PC
  %1208 = inttoptr i64 %1205 to double*
  %1209 = load double, double* %1208
  %1210 = bitcast i8* %1203 to double*
  store double %1209, double* %1210, align 1, !tbaa !2451
  %1211 = getelementptr inbounds i8, i8* %1203, i64 8
  %1212 = bitcast i8* %1211 to double*
  store double 0.000000e+00, double* %1212, align 1, !tbaa !2451
  %1213 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1214 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1215 = bitcast %union.vec128_t* %XMM1 to i8*
  %1216 = load i64, i64* %PC
  %1217 = add i64 %1216, 4
  store i64 %1217, i64* %PC
  %1218 = bitcast i8* %1214 to double*
  %1219 = load double, double* %1218, align 1
  %1220 = getelementptr inbounds i8, i8* %1214, i64 8
  %1221 = bitcast i8* %1220 to i64*
  %1222 = load i64, i64* %1221, align 1
  %1223 = bitcast i8* %1215 to double*
  %1224 = load double, double* %1223, align 1
  %1225 = fsub double %1219, %1224
  %1226 = bitcast i8* %1213 to double*
  store double %1225, double* %1226, align 1, !tbaa !2451
  %1227 = getelementptr inbounds i8, i8* %1213, i64 8
  %1228 = bitcast i8* %1227 to i64*
  store i64 %1222, i64* %1228, align 1, !tbaa !2451
  %1229 = bitcast %union.vec128_t* %XMM0 to i8*
  %1230 = load i64, i64* %PC
  %1231 = add i64 %1230, 9
  store i64 %1231, i64* %PC
  %1232 = bitcast i8* %1229 to double*
  %1233 = load double, double* %1232, align 1
  store double %1233, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %1234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1235 = load i64, i64* %RBP
  %1236 = sub i64 %1235, 40
  %1237 = load i64, i64* %PC
  %1238 = add i64 %1237, 5
  store i64 %1238, i64* %PC
  %1239 = inttoptr i64 %1236 to double*
  %1240 = load double, double* %1239
  %1241 = bitcast i8* %1234 to double*
  store double %1240, double* %1241, align 1, !tbaa !2451
  %1242 = getelementptr inbounds i8, i8* %1234, i64 8
  %1243 = bitcast i8* %1242 to double*
  store double 0.000000e+00, double* %1243, align 1, !tbaa !2451
  %1244 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1245 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1246 = load i64, i64* %RBP
  %1247 = sub i64 %1246, 48
  %1248 = load i64, i64* %PC
  %1249 = add i64 %1248, 5
  store i64 %1249, i64* %PC
  %1250 = bitcast i8* %1245 to double*
  %1251 = load double, double* %1250, align 1
  %1252 = getelementptr inbounds i8, i8* %1245, i64 8
  %1253 = bitcast i8* %1252 to i64*
  %1254 = load i64, i64* %1253, align 1
  %1255 = inttoptr i64 %1247 to double*
  %1256 = load double, double* %1255
  %1257 = fsub double %1251, %1256
  %1258 = bitcast i8* %1244 to double*
  store double %1257, double* %1258, align 1, !tbaa !2451
  %1259 = getelementptr inbounds i8, i8* %1244, i64 8
  %1260 = bitcast i8* %1259 to i64*
  store i64 %1254, i64* %1260, align 1, !tbaa !2451
  %1261 = bitcast %union.vec128_t* %XMM0 to i8*
  %1262 = load i64, i64* %PC
  %1263 = add i64 %1262, 9
  store i64 %1263, i64* %PC
  %1264 = bitcast i8* %1261 to double*
  %1265 = load double, double* %1264, align 1
  store double %1265, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %1266 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1267 = load i64, i64* %PC
  %1268 = add i64 %1267, 9
  store i64 %1268, i64* %PC
  %1269 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %1270 = bitcast i8* %1266 to double*
  store double %1269, double* %1270, align 1, !tbaa !2451
  %1271 = getelementptr inbounds i8, i8* %1266, i64 8
  %1272 = bitcast i8* %1271 to double*
  store double 0.000000e+00, double* %1272, align 1, !tbaa !2451
  %1273 = load i64, i64* %PC
  %1274 = sub i64 %1273, 1240
  %1275 = load i64, i64* %PC
  %1276 = add i64 %1275, 5
  %1277 = load i64, i64* %PC
  %1278 = add i64 %1277, 5
  store i64 %1278, i64* %PC
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1280 = load i64, i64* %1279, align 8, !tbaa !2428
  %1281 = add i64 %1280, -8
  %1282 = inttoptr i64 %1281 to i64*
  store i64 %1276, i64* %1282
  store i64 %1281, i64* %1279, align 8, !tbaa !2428
  %1283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1274, i64* %1283, align 8, !tbaa !2428
  %1284 = load i64, i64* %PC
  %1285 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1285)
  %1286 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1286)
  %1287 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1287)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %1288 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1288)
  %1289 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1289)
  %1290 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1290)
  %1291 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1291)
  %1292 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1292)
  %1293 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1293)
  %1294 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1294)
  %1295 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1295)
  %1296 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1296)
  %1297 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1297)
  %1298 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1298)
  %1299 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1299)
  %1300 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1300)
  %1301 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1301)
  %1302 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1302)
  %1303 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1303)
  %1304 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1304)
  %1305 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1305)
  %1306 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1306)
  %1307 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1307)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2462
  store i64 %1284, i64* %curr_pc.i, align 8, !noalias !2462
  store %struct.Memory* %1139, %struct.Memory** %memory.i, align 8, !noalias !2462
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2462
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2462
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2462
  store %struct.Memory* %1139, %struct.Memory** %MEMORY.i, align 8, !noalias !2462
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 33
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %PC.i = bitcast %union.anon* %1310 to i64*
  store i64 %1284, i64* %PC.i, align 8, !alias.scope !2466, !noalias !2467
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 1
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %1314 = bitcast %union.anon* %1313 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1314, i32 0, i32 1
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 3
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %1318 = bitcast %union.anon* %1317 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1318, i32 0, i32 1
  %1319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1320 = getelementptr inbounds %struct.GPR, %struct.GPR* %1319, i32 0, i32 5
  %1321 = getelementptr inbounds %struct.Reg, %struct.Reg* %1320, i32 0, i32 0
  %1322 = bitcast %union.anon* %1321 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1322, i32 0, i32 1
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 7
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %1326 = bitcast %union.anon* %1325 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1326, i32 0, i32 1
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 1
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %1330 = bitcast %union.anon* %1329 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1330, i32 0, i32 0
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1332 = getelementptr inbounds %struct.GPR, %struct.GPR* %1331, i32 0, i32 3
  %1333 = getelementptr inbounds %struct.Reg, %struct.Reg* %1332, i32 0, i32 0
  %1334 = bitcast %union.anon* %1333 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1334, i32 0, i32 0
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 5
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %1338 = bitcast %union.anon* %1337 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1338, i32 0, i32 0
  %1339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1340 = getelementptr inbounds %struct.GPR, %struct.GPR* %1339, i32 0, i32 7
  %1341 = getelementptr inbounds %struct.Reg, %struct.Reg* %1340, i32 0, i32 0
  %1342 = bitcast %union.anon* %1341 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1342, i32 0, i32 0
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1344 = getelementptr inbounds %struct.GPR, %struct.GPR* %1343, i32 0, i32 9
  %1345 = getelementptr inbounds %struct.Reg, %struct.Reg* %1344, i32 0, i32 0
  %1346 = bitcast %union.anon* %1345 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1346, i32 0, i32 0
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 11
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %1350 = bitcast %union.anon* %1349 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1350, i32 0, i32 0
  %1351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1352 = getelementptr inbounds %struct.GPR, %struct.GPR* %1351, i32 0, i32 13
  %1353 = getelementptr inbounds %struct.Reg, %struct.Reg* %1352, i32 0, i32 0
  %1354 = bitcast %union.anon* %1353 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1354, i32 0, i32 0
  %1355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1356 = getelementptr inbounds %struct.GPR, %struct.GPR* %1355, i32 0, i32 15
  %1357 = getelementptr inbounds %struct.Reg, %struct.Reg* %1356, i32 0, i32 0
  %1358 = bitcast %union.anon* %1357 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1358, i32 0, i32 0
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 17
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %1362 = bitcast %union.anon* %1361 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1362, i32 0, i32 0
  %1363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1364 = getelementptr inbounds %struct.GPR, %struct.GPR* %1363, i32 0, i32 19
  %1365 = getelementptr inbounds %struct.Reg, %struct.Reg* %1364, i32 0, i32 0
  %1366 = bitcast %union.anon* %1365 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1366, i32 0, i32 0
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1368 = getelementptr inbounds %struct.GPR, %struct.GPR* %1367, i32 0, i32 21
  %1369 = getelementptr inbounds %struct.Reg, %struct.Reg* %1368, i32 0, i32 0
  %1370 = bitcast %union.anon* %1369 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1370, i32 0, i32 0
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 23
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %1374 = bitcast %union.anon* %1373 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1374, i32 0, i32 0
  %1375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1376 = getelementptr inbounds %struct.GPR, %struct.GPR* %1375, i32 0, i32 25
  %1377 = getelementptr inbounds %struct.Reg, %struct.Reg* %1376, i32 0, i32 0
  %1378 = bitcast %union.anon* %1377 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1378, i32 0, i32 0
  %1379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1380 = getelementptr inbounds %struct.GPR, %struct.GPR* %1379, i32 0, i32 27
  %1381 = getelementptr inbounds %struct.Reg, %struct.Reg* %1380, i32 0, i32 0
  %1382 = bitcast %union.anon* %1381 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1382, i32 0, i32 0
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1384 = getelementptr inbounds %struct.GPR, %struct.GPR* %1383, i32 0, i32 29
  %1385 = getelementptr inbounds %struct.Reg, %struct.Reg* %1384, i32 0, i32 0
  %1386 = bitcast %union.anon* %1385 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1386, i32 0, i32 0
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 31
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %1390 = bitcast %union.anon* %1389 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1390, i32 0, i32 0
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1392 = getelementptr inbounds %struct.GPR, %struct.GPR* %1391, i32 0, i32 1
  %1393 = getelementptr inbounds %struct.Reg, %struct.Reg* %1392, i32 0, i32 0
  %AX.i = bitcast %union.anon* %1393 to i16*
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1395 = getelementptr inbounds %struct.GPR, %struct.GPR* %1394, i32 0, i32 3
  %1396 = getelementptr inbounds %struct.Reg, %struct.Reg* %1395, i32 0, i32 0
  %BX.i = bitcast %union.anon* %1396 to i16*
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1398 = getelementptr inbounds %struct.GPR, %struct.GPR* %1397, i32 0, i32 5
  %1399 = getelementptr inbounds %struct.Reg, %struct.Reg* %1398, i32 0, i32 0
  %CX.i = bitcast %union.anon* %1399 to i16*
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1401 = getelementptr inbounds %struct.GPR, %struct.GPR* %1400, i32 0, i32 7
  %1402 = getelementptr inbounds %struct.Reg, %struct.Reg* %1401, i32 0, i32 0
  %DX.i = bitcast %union.anon* %1402 to i16*
  %1403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1404 = getelementptr inbounds %struct.GPR, %struct.GPR* %1403, i32 0, i32 9
  %1405 = getelementptr inbounds %struct.Reg, %struct.Reg* %1404, i32 0, i32 0
  %SI.i = bitcast %union.anon* %1405 to i16*
  %1406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1407 = getelementptr inbounds %struct.GPR, %struct.GPR* %1406, i32 0, i32 11
  %1408 = getelementptr inbounds %struct.Reg, %struct.Reg* %1407, i32 0, i32 0
  %DI.i = bitcast %union.anon* %1408 to i16*
  %1409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1410 = getelementptr inbounds %struct.GPR, %struct.GPR* %1409, i32 0, i32 13
  %1411 = getelementptr inbounds %struct.Reg, %struct.Reg* %1410, i32 0, i32 0
  %SP.i = bitcast %union.anon* %1411 to i16*
  %1412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1413 = getelementptr inbounds %struct.GPR, %struct.GPR* %1412, i32 0, i32 15
  %1414 = getelementptr inbounds %struct.Reg, %struct.Reg* %1413, i32 0, i32 0
  %BP.i = bitcast %union.anon* %1414 to i16*
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 17
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %1417 to i16*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 19
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %1420 to i16*
  %1421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1422 = getelementptr inbounds %struct.GPR, %struct.GPR* %1421, i32 0, i32 21
  %1423 = getelementptr inbounds %struct.Reg, %struct.Reg* %1422, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %1423 to i16*
  %1424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1425 = getelementptr inbounds %struct.GPR, %struct.GPR* %1424, i32 0, i32 23
  %1426 = getelementptr inbounds %struct.Reg, %struct.Reg* %1425, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %1426 to i16*
  %1427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1428 = getelementptr inbounds %struct.GPR, %struct.GPR* %1427, i32 0, i32 25
  %1429 = getelementptr inbounds %struct.Reg, %struct.Reg* %1428, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %1429 to i16*
  %1430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1431 = getelementptr inbounds %struct.GPR, %struct.GPR* %1430, i32 0, i32 27
  %1432 = getelementptr inbounds %struct.Reg, %struct.Reg* %1431, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %1432 to i16*
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1434 = getelementptr inbounds %struct.GPR, %struct.GPR* %1433, i32 0, i32 29
  %1435 = getelementptr inbounds %struct.Reg, %struct.Reg* %1434, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %1435 to i16*
  %1436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1437 = getelementptr inbounds %struct.GPR, %struct.GPR* %1436, i32 0, i32 31
  %1438 = getelementptr inbounds %struct.Reg, %struct.Reg* %1437, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %1438 to i16*
  %1439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1440 = getelementptr inbounds %struct.GPR, %struct.GPR* %1439, i32 0, i32 33
  %1441 = getelementptr inbounds %struct.Reg, %struct.Reg* %1440, i32 0, i32 0
  %IP.i = bitcast %union.anon* %1441 to i16*
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1443 = getelementptr inbounds %struct.GPR, %struct.GPR* %1442, i32 0, i32 1
  %1444 = getelementptr inbounds %struct.Reg, %struct.Reg* %1443, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %1444 to i32*
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1446 = getelementptr inbounds %struct.GPR, %struct.GPR* %1445, i32 0, i32 3
  %1447 = getelementptr inbounds %struct.Reg, %struct.Reg* %1446, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %1447 to i32*
  %1448 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1449 = getelementptr inbounds %struct.GPR, %struct.GPR* %1448, i32 0, i32 5
  %1450 = getelementptr inbounds %struct.Reg, %struct.Reg* %1449, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %1450 to i32*
  %1451 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1452 = getelementptr inbounds %struct.GPR, %struct.GPR* %1451, i32 0, i32 7
  %1453 = getelementptr inbounds %struct.Reg, %struct.Reg* %1452, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %1453 to i32*
  %1454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1455 = getelementptr inbounds %struct.GPR, %struct.GPR* %1454, i32 0, i32 9
  %1456 = getelementptr inbounds %struct.Reg, %struct.Reg* %1455, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %1456 to i32*
  %1457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1458 = getelementptr inbounds %struct.GPR, %struct.GPR* %1457, i32 0, i32 11
  %1459 = getelementptr inbounds %struct.Reg, %struct.Reg* %1458, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %1459 to i32*
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1461 = getelementptr inbounds %struct.GPR, %struct.GPR* %1460, i32 0, i32 13
  %1462 = getelementptr inbounds %struct.Reg, %struct.Reg* %1461, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %1462 to i32*
  %1463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1464 = getelementptr inbounds %struct.GPR, %struct.GPR* %1463, i32 0, i32 15
  %1465 = getelementptr inbounds %struct.Reg, %struct.Reg* %1464, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %1465 to i32*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1467 = getelementptr inbounds %struct.GPR, %struct.GPR* %1466, i32 0, i32 33
  %1468 = getelementptr inbounds %struct.Reg, %struct.Reg* %1467, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %1468 to i32*
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1470 = getelementptr inbounds %struct.GPR, %struct.GPR* %1469, i32 0, i32 17
  %1471 = getelementptr inbounds %struct.Reg, %struct.Reg* %1470, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1471 to i32*
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1473 = getelementptr inbounds %struct.GPR, %struct.GPR* %1472, i32 0, i32 19
  %1474 = getelementptr inbounds %struct.Reg, %struct.Reg* %1473, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %1474 to i32*
  %1475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1476 = getelementptr inbounds %struct.GPR, %struct.GPR* %1475, i32 0, i32 21
  %1477 = getelementptr inbounds %struct.Reg, %struct.Reg* %1476, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %1477 to i32*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1479 = getelementptr inbounds %struct.GPR, %struct.GPR* %1478, i32 0, i32 23
  %1480 = getelementptr inbounds %struct.Reg, %struct.Reg* %1479, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %1480 to i32*
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1482 = getelementptr inbounds %struct.GPR, %struct.GPR* %1481, i32 0, i32 25
  %1483 = getelementptr inbounds %struct.Reg, %struct.Reg* %1482, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %1483 to i32*
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1485 = getelementptr inbounds %struct.GPR, %struct.GPR* %1484, i32 0, i32 27
  %1486 = getelementptr inbounds %struct.Reg, %struct.Reg* %1485, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %1486 to i32*
  %1487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1488 = getelementptr inbounds %struct.GPR, %struct.GPR* %1487, i32 0, i32 29
  %1489 = getelementptr inbounds %struct.Reg, %struct.Reg* %1488, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %1489 to i32*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1491 = getelementptr inbounds %struct.GPR, %struct.GPR* %1490, i32 0, i32 31
  %1492 = getelementptr inbounds %struct.Reg, %struct.Reg* %1491, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %1492 to i32*
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 1
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %1495 to i64*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 3
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %1498 to i64*
  %1499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1500 = getelementptr inbounds %struct.GPR, %struct.GPR* %1499, i32 0, i32 5
  %1501 = getelementptr inbounds %struct.Reg, %struct.Reg* %1500, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %1501 to i64*
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1503 = getelementptr inbounds %struct.GPR, %struct.GPR* %1502, i32 0, i32 7
  %1504 = getelementptr inbounds %struct.Reg, %struct.Reg* %1503, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %1504 to i64*
  %1505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1506 = getelementptr inbounds %struct.GPR, %struct.GPR* %1505, i32 0, i32 9
  %1507 = getelementptr inbounds %struct.Reg, %struct.Reg* %1506, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %1507 to i64*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1509 = getelementptr inbounds %struct.GPR, %struct.GPR* %1508, i32 0, i32 11
  %1510 = getelementptr inbounds %struct.Reg, %struct.Reg* %1509, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %1510 to i64*
  %1511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1512 = getelementptr inbounds %struct.GPR, %struct.GPR* %1511, i32 0, i32 13
  %1513 = getelementptr inbounds %struct.Reg, %struct.Reg* %1512, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %1513 to i64*
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1515 = getelementptr inbounds %struct.GPR, %struct.GPR* %1514, i32 0, i32 15
  %1516 = getelementptr inbounds %struct.Reg, %struct.Reg* %1515, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %1516 to i64*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1518 = getelementptr inbounds %struct.GPR, %struct.GPR* %1517, i32 0, i32 17
  %1519 = getelementptr inbounds %struct.Reg, %struct.Reg* %1518, i32 0, i32 0
  %R8.i = bitcast %union.anon* %1519 to i64*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1521 = getelementptr inbounds %struct.GPR, %struct.GPR* %1520, i32 0, i32 19
  %1522 = getelementptr inbounds %struct.Reg, %struct.Reg* %1521, i32 0, i32 0
  %R9.i = bitcast %union.anon* %1522 to i64*
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1524 = getelementptr inbounds %struct.GPR, %struct.GPR* %1523, i32 0, i32 21
  %1525 = getelementptr inbounds %struct.Reg, %struct.Reg* %1524, i32 0, i32 0
  %R10.i = bitcast %union.anon* %1525 to i64*
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1527 = getelementptr inbounds %struct.GPR, %struct.GPR* %1526, i32 0, i32 23
  %1528 = getelementptr inbounds %struct.Reg, %struct.Reg* %1527, i32 0, i32 0
  %R11.i = bitcast %union.anon* %1528 to i64*
  %1529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1530 = getelementptr inbounds %struct.GPR, %struct.GPR* %1529, i32 0, i32 25
  %1531 = getelementptr inbounds %struct.Reg, %struct.Reg* %1530, i32 0, i32 0
  %R12.i = bitcast %union.anon* %1531 to i64*
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1533 = getelementptr inbounds %struct.GPR, %struct.GPR* %1532, i32 0, i32 27
  %1534 = getelementptr inbounds %struct.Reg, %struct.Reg* %1533, i32 0, i32 0
  %R13.i = bitcast %union.anon* %1534 to i64*
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1536 = getelementptr inbounds %struct.GPR, %struct.GPR* %1535, i32 0, i32 29
  %1537 = getelementptr inbounds %struct.Reg, %struct.Reg* %1536, i32 0, i32 0
  %R14.i = bitcast %union.anon* %1537 to i64*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1539 = getelementptr inbounds %struct.GPR, %struct.GPR* %1538, i32 0, i32 31
  %1540 = getelementptr inbounds %struct.Reg, %struct.Reg* %1539, i32 0, i32 0
  %R15.i = bitcast %union.anon* %1540 to i64*
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1542 = getelementptr inbounds %struct.GPR, %struct.GPR* %1541, i32 0, i32 33
  %1543 = getelementptr inbounds %struct.Reg, %struct.Reg* %1542, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %1543 to i64*
  %1544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1545 = getelementptr inbounds %struct.Segments, %struct.Segments* %1544, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %1545 to i16*
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1547 = getelementptr inbounds %struct.Segments, %struct.Segments* %1546, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %1547 to i16*
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1549 = getelementptr inbounds %struct.Segments, %struct.Segments* %1548, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %1549 to i16*
  %1550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1551 = getelementptr inbounds %struct.Segments, %struct.Segments* %1550, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %1551 to i16*
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1553 = getelementptr inbounds %struct.Segments, %struct.Segments* %1552, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %1553 to i16*
  %1554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1555 = getelementptr inbounds %struct.Segments, %struct.Segments* %1554, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %1555 to i16*
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1557 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1556, i32 0, i32 5
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1560 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1559, i32 0, i32 7
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %1561 to i64*
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1563 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1562, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %1563 to %"class.std::bitset"*
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1565 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1564, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %1565 to %"class.std::bitset"*
  %1566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1567 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1566, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %1567 to %"class.std::bitset"*
  %1568 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1569 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1568, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %1569 to %"class.std::bitset"*
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1571 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1570, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %1571 to %"class.std::bitset"*
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1573 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1572, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %1573 to %"class.std::bitset"*
  %1574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1575 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1574, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %1575 to %"class.std::bitset"*
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1577 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1576, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %1577 to %"class.std::bitset"*
  %1578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1579 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1578, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %1579 to %"class.std::bitset"*
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1581 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1580, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %1581 to %"class.std::bitset"*
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1583 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1582, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %1583 to %"class.std::bitset"*
  %1584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1585 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1584, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %1585 to %"class.std::bitset"*
  %1586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1587 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1586, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %1587 to %"class.std::bitset"*
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1589 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1588, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %1589 to %"class.std::bitset"*
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1591 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1590, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %1591 to %"class.std::bitset"*
  %1592 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1593 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1592, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %1593 to %"class.std::bitset"*
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1595 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1594, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %1595 to %union.vec128_t*
  %1596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1597 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1596, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %1597 to %union.vec128_t*
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1599 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1598, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %1599 to %union.vec128_t*
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1601 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1600, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %1601 to %union.vec128_t*
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1603 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1602, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %1603 to %union.vec128_t*
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1605 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1604, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %1605 to %union.vec128_t*
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1607 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1606, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %1607 to %union.vec128_t*
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1609 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1608, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %1609 to %union.vec128_t*
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1611 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1610, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %1611 to %union.vec128_t*
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1613 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1612, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %1613 to %union.vec128_t*
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1615 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1614, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %1615 to %union.vec128_t*
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1617 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1616, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %1617 to %union.vec128_t*
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1619 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1618, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %1619 to %union.vec128_t*
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1621 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1620, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %1621 to %union.vec128_t*
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1623 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1622, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %1623 to %union.vec128_t*
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1625 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1624, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %1625 to %union.vec128_t*
  %1626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1627 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1626, i32 0, i32 0
  %1628 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1627, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1628, i32 0, i32 1
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1630 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1629, i32 0, i32 0
  %1631 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1630, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1631, i32 0, i32 1
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1633 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1632, i32 0, i32 0
  %1634 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1633, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1634, i32 0, i32 1
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1636 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1635, i32 0, i32 0
  %1637 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1636, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1637, i32 0, i32 1
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1639 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1638, i32 0, i32 0
  %1640 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1639, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1640, i32 0, i32 1
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1642 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1641, i32 0, i32 0
  %1643 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1642, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1643, i32 0, i32 1
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1645 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1644, i32 0, i32 0
  %1646 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1645, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1646, i32 0, i32 1
  %1647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1648 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1647, i32 0, i32 0
  %1649 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1648, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1649, i32 0, i32 1
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1651 = getelementptr inbounds %struct.MMX, %struct.MMX* %1650, i32 0, i32 0
  %1652 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1651, i64 0, i64 0
  %1653 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1652, i32 0, i32 1
  %1654 = bitcast %union.vec64_t* %1653 to %struct.uint64v1_t*
  %1655 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1654, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %1655, i64 0, i64 0
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1657 = getelementptr inbounds %struct.MMX, %struct.MMX* %1656, i32 0, i32 0
  %1658 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1657, i64 0, i64 1
  %1659 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1658, i32 0, i32 1
  %1660 = bitcast %union.vec64_t* %1659 to %struct.uint64v1_t*
  %1661 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1660, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %1661, i64 0, i64 0
  %1662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1663 = getelementptr inbounds %struct.MMX, %struct.MMX* %1662, i32 0, i32 0
  %1664 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1663, i64 0, i64 2
  %1665 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1664, i32 0, i32 1
  %1666 = bitcast %union.vec64_t* %1665 to %struct.uint64v1_t*
  %1667 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1666, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %1667, i64 0, i64 0
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1669 = getelementptr inbounds %struct.MMX, %struct.MMX* %1668, i32 0, i32 0
  %1670 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1669, i64 0, i64 3
  %1671 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1670, i32 0, i32 1
  %1672 = bitcast %union.vec64_t* %1671 to %struct.uint64v1_t*
  %1673 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1672, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %1673, i64 0, i64 0
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1675 = getelementptr inbounds %struct.MMX, %struct.MMX* %1674, i32 0, i32 0
  %1676 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1675, i64 0, i64 4
  %1677 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1676, i32 0, i32 1
  %1678 = bitcast %union.vec64_t* %1677 to %struct.uint64v1_t*
  %1679 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1678, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %1679, i64 0, i64 0
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1681 = getelementptr inbounds %struct.MMX, %struct.MMX* %1680, i32 0, i32 0
  %1682 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1681, i64 0, i64 5
  %1683 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1682, i32 0, i32 1
  %1684 = bitcast %union.vec64_t* %1683 to %struct.uint64v1_t*
  %1685 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1684, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %1685, i64 0, i64 0
  %1686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1687 = getelementptr inbounds %struct.MMX, %struct.MMX* %1686, i32 0, i32 0
  %1688 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1687, i64 0, i64 6
  %1689 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1688, i32 0, i32 1
  %1690 = bitcast %union.vec64_t* %1689 to %struct.uint64v1_t*
  %1691 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1690, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %1691, i64 0, i64 0
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1693 = getelementptr inbounds %struct.MMX, %struct.MMX* %1692, i32 0, i32 0
  %1694 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1693, i64 0, i64 7
  %1695 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1694, i32 0, i32 1
  %1696 = bitcast %union.vec64_t* %1695 to %struct.uint64v1_t*
  %1697 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1696, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %1697, i64 0, i64 0
  %1698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1698, i32 0, i32 5
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1699, i32 0, i32 1
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1700, i32 0, i32 11
  %1701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1701, i32 0, i32 13
  %1702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1702, i32 0, i32 3
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1703, i32 0, i32 9
  %1704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1704, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2462
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2462
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2462
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2462
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2462
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2462
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2462
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2462
  %1705 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %1706 = load double, double* %1705, !alias.scope !2466, !noalias !2467
  %1707 = load i64, i64* %RSP.i, !alias.scope !2466, !noalias !2467
  %1708 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2462
  %1709 = inttoptr i64 %1707 to i64*
  %1710 = load i64, i64* %1709
  store i64 %1710, i64* %PC.i, !alias.scope !2466, !noalias !2467
  %1711 = add i64 %1707, 8
  store i64 %1711, i64* %RSP.i, !alias.scope !2466, !noalias !2467
  %1712 = call double @sin(double %1706)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2466, !noalias !2467
  %1713 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %1712, double* %1713, !alias.scope !2466, !noalias !2467
  %1714 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2462
  %1715 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1715)
  %1716 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1716)
  %1717 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1717)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %1718 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1718)
  %1719 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1719)
  %1720 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1720)
  %1721 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1721)
  %1722 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1722)
  %1723 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1723)
  %1724 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1724)
  %1725 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1725)
  %1726 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1726)
  %1727 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1727)
  %1728 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1728)
  %1729 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1729)
  %1730 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1730)
  %1731 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1731)
  %1732 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1732)
  %1733 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1733)
  %1734 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1734)
  %1735 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1735)
  %1736 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1736)
  %1737 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1737)
  %1738 = bitcast %union.vec128_t* %XMM0 to i8*
  %1739 = load i64, i64* %PC
  %1740 = add i64 %1739, 9
  store i64 %1740, i64* %PC
  %1741 = bitcast i8* %1738 to double*
  %1742 = load double, double* %1741, align 1
  store double %1742, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1743 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1744 = load i64, i64* %PC
  %1745 = add i64 %1744, 9
  store i64 %1745, i64* %PC
  %1746 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1747 = bitcast i8* %1743 to double*
  store double %1746, double* %1747, align 1, !tbaa !2451
  %1748 = getelementptr inbounds i8, i8* %1743, i64 8
  %1749 = bitcast i8* %1748 to double*
  store double 0.000000e+00, double* %1749, align 1, !tbaa !2451
  %1750 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1751 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1752 = load i64, i64* %PC
  %1753 = add i64 %1752, 9
  store i64 %1753, i64* %PC
  %1754 = bitcast i8* %1751 to double*
  %1755 = load double, double* %1754, align 1
  %1756 = getelementptr inbounds i8, i8* %1751, i64 8
  %1757 = bitcast i8* %1756 to i64*
  %1758 = load i64, i64* %1757, align 1
  %1759 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1760 = fmul double %1755, %1759
  %1761 = bitcast i8* %1750 to double*
  store double %1760, double* %1761, align 1, !tbaa !2451
  %1762 = getelementptr inbounds i8, i8* %1750, i64 8
  %1763 = bitcast i8* %1762 to i64*
  store i64 %1758, i64* %1763, align 1, !tbaa !2451
  %1764 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1765 = load i64, i64* %RBP
  %1766 = sub i64 %1765, 112
  %1767 = load i64, i64* %PC
  %1768 = add i64 %1767, 5
  store i64 %1768, i64* %PC
  %1769 = inttoptr i64 %1766 to double*
  %1770 = load double, double* %1769
  %1771 = bitcast i8* %1764 to double*
  store double %1770, double* %1771, align 1, !tbaa !2451
  %1772 = getelementptr inbounds i8, i8* %1764, i64 8
  %1773 = bitcast i8* %1772 to double*
  store double 0.000000e+00, double* %1773, align 1, !tbaa !2451
  %1774 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1775 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1776 = bitcast %union.vec128_t* %XMM0 to i8*
  %1777 = load i64, i64* %PC
  %1778 = add i64 %1777, 4
  store i64 %1778, i64* %PC
  %1779 = bitcast i8* %1775 to double*
  %1780 = load double, double* %1779, align 1
  %1781 = getelementptr inbounds i8, i8* %1775, i64 8
  %1782 = bitcast i8* %1781 to i64*
  %1783 = load i64, i64* %1782, align 1
  %1784 = bitcast i8* %1776 to double*
  %1785 = load double, double* %1784, align 1
  %1786 = fdiv double %1780, %1785
  %1787 = bitcast i8* %1774 to double*
  store double %1786, double* %1787, align 1, !tbaa !2451
  %1788 = getelementptr inbounds i8, i8* %1774, i64 8
  %1789 = bitcast i8* %1788 to i64*
  store i64 %1783, i64* %1789, align 1, !tbaa !2451
  %1790 = bitcast %union.vec128_t* %XMM1 to i8*
  %1791 = load i64, i64* %PC
  %1792 = add i64 %1791, 9
  store i64 %1792, i64* %PC
  %1793 = bitcast i8* %1790 to double*
  %1794 = load double, double* %1793, align 1
  store double %1794, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1795 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1796 = load i64, i64* %RBP
  %1797 = sub i64 %1796, 88
  %1798 = load i64, i64* %PC
  %1799 = add i64 %1798, 5
  store i64 %1799, i64* %PC
  %1800 = inttoptr i64 %1797 to double*
  %1801 = load double, double* %1800
  %1802 = bitcast i8* %1795 to double*
  store double %1801, double* %1802, align 1, !tbaa !2451
  %1803 = getelementptr inbounds i8, i8* %1795, i64 8
  %1804 = bitcast i8* %1803 to double*
  store double 0.000000e+00, double* %1804, align 1, !tbaa !2451
  %1805 = bitcast %union.vec128_t* %XMM0 to i8*
  %1806 = load i64, i64* %PC
  %1807 = add i64 %1806, 9
  store i64 %1807, i64* %PC
  %1808 = bitcast i8* %1805 to double*
  %1809 = load double, double* %1808, align 1
  store double %1809, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %1810 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1811 = load i64, i64* %PC
  %1812 = add i64 %1811, 9
  store i64 %1812, i64* %PC
  %1813 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1814 = bitcast i8* %1810 to double*
  store double %1813, double* %1814, align 1, !tbaa !2451
  %1815 = getelementptr inbounds i8, i8* %1810, i64 8
  %1816 = bitcast i8* %1815 to double*
  store double 0.000000e+00, double* %1816, align 1, !tbaa !2451
  %1817 = bitcast %union.vec128_t* %XMM1 to i8*
  %1818 = load i64, i64* %PC
  %1819 = add i64 %1818, 9
  store i64 %1819, i64* %PC
  %1820 = bitcast i8* %1817 to double*
  %1821 = load double, double* %1820, align 1
  store double %1821, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %1822 = load i64, i64* %PC
  %1823 = add i64 %1822, 7
  store i64 %1823, i64* %PC
  %1824 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %1825 = zext i32 %1824 to i64
  store i64 %1825, i64* %RAX, align 8, !tbaa !2428
  %1826 = load i64, i64* %RAX
  %1827 = load i64, i64* %PC
  %1828 = add i64 %1827, 3
  store i64 %1828, i64* %PC
  %1829 = trunc i64 %1826 to i32
  %1830 = add i32 1, %1829
  %1831 = zext i32 %1830 to i64
  store i64 %1831, i64* %RAX, align 8, !tbaa !2428
  %1832 = icmp ult i32 %1830, %1829
  %1833 = icmp ult i32 %1830, 1
  %1834 = or i1 %1832, %1833
  %1835 = zext i1 %1834 to i8
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1835, i8* %1836, align 1, !tbaa !2432
  %1837 = and i32 %1830, 255
  %1838 = call i32 @llvm.ctpop.i32(i32 %1837) #17
  %1839 = trunc i32 %1838 to i8
  %1840 = and i8 %1839, 1
  %1841 = xor i8 %1840, 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1841, i8* %1842, align 1, !tbaa !2446
  %1843 = xor i64 1, %1826
  %1844 = trunc i64 %1843 to i32
  %1845 = xor i32 %1844, %1830
  %1846 = lshr i32 %1845, 4
  %1847 = trunc i32 %1846 to i8
  %1848 = and i8 %1847, 1
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1848, i8* %1849, align 1, !tbaa !2447
  %1850 = icmp eq i32 %1830, 0
  %1851 = zext i1 %1850 to i8
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1851, i8* %1852, align 1, !tbaa !2448
  %1853 = lshr i32 %1830, 31
  %1854 = trunc i32 %1853 to i8
  %1855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1854, i8* %1855, align 1, !tbaa !2449
  %1856 = lshr i32 %1829, 31
  %1857 = xor i32 %1853, %1856
  %1858 = add nuw nsw i32 %1857, %1853
  %1859 = icmp eq i32 %1858, 2
  %1860 = zext i1 %1859 to i8
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1860, i8* %1861, align 1, !tbaa !2450
  %1862 = load i32, i32* %EAX
  %1863 = zext i32 %1862 to i64
  %1864 = load i64, i64* %PC
  %1865 = add i64 %1864, 7
  store i64 %1865, i64* %PC
  store i32 %1862, i32* bitcast (%itercount_type* @itercount to i32*)
  %1866 = load i64, i64* %PC
  %1867 = sub i64 %1866, 562
  %1868 = load i64, i64* %PC
  %1869 = add i64 %1868, 5
  store i64 %1869, i64* %PC
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1867, i64* %1870, align 8, !tbaa !2428
  br label %block_400929

block_400958:                                     ; preds = %block_400947
  store i64 4, i64* %RDI, align 8, !tbaa !2428
  %1871 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1872 = load i64, i64* %PC
  %1873 = add i64 %1872, 8
  store i64 %1873, i64* %PC
  %1874 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 112) to double*)
  %1875 = bitcast i8* %1871 to double*
  store double %1874, double* %1875, align 1, !tbaa !2451
  %1876 = getelementptr inbounds i8, i8* %1871, i64 8
  %1877 = bitcast i8* %1876 to double*
  store double 0.000000e+00, double* %1877, align 1, !tbaa !2451
  %1878 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1879 = load i64, i64* %PC
  %1880 = add i64 %1879, 9
  store i64 %1880, i64* %PC
  %1881 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %1882 = bitcast i8* %1878 to double*
  store double %1881, double* %1882, align 1, !tbaa !2451
  %1883 = getelementptr inbounds i8, i8* %1878, i64 8
  %1884 = bitcast i8* %1883 to double*
  store double 0.000000e+00, double* %1884, align 1, !tbaa !2451
  %1885 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1886 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1887 = bitcast %union.vec128_t* %XMM0 to i8*
  %1888 = load i64, i64* %PC
  %1889 = add i64 %1888, 4
  store i64 %1889, i64* %PC
  %1890 = bitcast i8* %1886 to double*
  %1891 = load double, double* %1890, align 1
  %1892 = getelementptr inbounds i8, i8* %1886, i64 8
  %1893 = bitcast i8* %1892 to i64*
  %1894 = load i64, i64* %1893, align 1
  %1895 = bitcast i8* %1887 to double*
  %1896 = load double, double* %1895, align 1
  %1897 = fdiv double %1891, %1896
  %1898 = bitcast i8* %1885 to double*
  store double %1897, double* %1898, align 1, !tbaa !2451
  %1899 = getelementptr inbounds i8, i8* %1885, i64 8
  %1900 = bitcast i8* %1899 to i64*
  store i64 %1894, i64* %1900, align 1, !tbaa !2451
  %1901 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1902 = bitcast %union.vec128_t* %XMM1 to i8*
  %1903 = load i64, i64* %PC
  %1904 = add i64 %1903, 3
  store i64 %1904, i64* %PC
  %1905 = bitcast i8* %1902 to <2 x i32>*
  %1906 = load <2 x i32>, <2 x i32>* %1905, align 1
  %1907 = getelementptr inbounds i8, i8* %1902, i64 8
  %1908 = bitcast i8* %1907 to <2 x i32>*
  %1909 = load <2 x i32>, <2 x i32>* %1908, align 1
  %1910 = extractelement <2 x i32> %1906, i32 0
  %1911 = bitcast i8* %1901 to i32*
  store i32 %1910, i32* %1911, align 1, !tbaa !2454
  %1912 = extractelement <2 x i32> %1906, i32 1
  %1913 = getelementptr inbounds i8, i8* %1901, i64 4
  %1914 = bitcast i8* %1913 to i32*
  store i32 %1912, i32* %1914, align 1, !tbaa !2454
  %1915 = extractelement <2 x i32> %1909, i32 0
  %1916 = getelementptr inbounds i8, i8* %1901, i64 8
  %1917 = bitcast i8* %1916 to i32*
  store i32 %1915, i32* %1917, align 1, !tbaa !2454
  %1918 = extractelement <2 x i32> %1909, i32 1
  %1919 = getelementptr inbounds i8, i8* %1901, i64 12
  %1920 = bitcast i8* %1919 to i32*
  store i32 %1918, i32* %1920, align 1, !tbaa !2454
  %1921 = load i64, i64* %PC
  %1922 = add i64 %1921, 1531
  %1923 = load i64, i64* %PC
  %1924 = add i64 %1923, 5
  %1925 = load i64, i64* %PC
  %1926 = add i64 %1925, 5
  store i64 %1926, i64* %PC
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1928 = load i64, i64* %1927, align 8, !tbaa !2428
  %1929 = add i64 %1928, -8
  %1930 = inttoptr i64 %1929 to i64*
  store i64 %1924, i64* %1930
  store i64 %1929, i64* %1927, align 8, !tbaa !2428
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1922, i64* %1931, align 8, !tbaa !2428
  %1932 = load i64, i64* %PC
  %1933 = call %struct.Memory* @sub_400f70_trace_line_renamed_(%struct.State* %0, i64 %1932, %struct.Memory* %MEMORY.8)
  %1934 = load i64, i64* %PC
  %1935 = add i64 %1934, 10
  store i64 %1935, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528), i64* %RCX, align 8, !tbaa !2428
  %1936 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1937 = load i64, i64* %PC
  %1938 = add i64 %1937, 9
  store i64 %1938, i64* %PC
  %1939 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %1940 = bitcast i8* %1936 to double*
  store double %1939, double* %1940, align 1, !tbaa !2451
  %1941 = getelementptr inbounds i8, i8* %1936, i64 8
  %1942 = bitcast i8* %1941 to double*
  store double 0.000000e+00, double* %1942, align 1, !tbaa !2451
  %1943 = load i64, i64* %PC
  %1944 = add i64 %1943, 9
  store i64 %1944, i64* %PC
  %1945 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %1946 = sext i16 %1945 to i64
  store i64 %1946, i64* %RDX, align 8, !tbaa !2428
  %1947 = load i64, i64* %RDX
  %1948 = load i64, i64* %PC
  %1949 = add i64 %1948, 4
  store i64 %1949, i64* %PC
  %1950 = shl i64 %1947, 3
  %1951 = icmp slt i64 %1950, 0
  %1952 = shl i64 %1950, 1
  store i64 %1952, i64* %RDX, align 8, !tbaa !2428
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1954 = zext i1 %1951 to i8
  store i8 %1954, i8* %1953, align 1, !tbaa !2453
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1956 = trunc i64 %1952 to i32
  %1957 = and i32 %1956, 254
  %1958 = call i32 @llvm.ctpop.i32(i32 %1957) #17
  %1959 = trunc i32 %1958 to i8
  %1960 = and i8 %1959, 1
  %1961 = xor i8 %1960, 1
  store i8 %1961, i8* %1955, align 1, !tbaa !2453
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1962, align 1, !tbaa !2453
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1964 = icmp eq i64 %1952, 0
  %1965 = zext i1 %1964 to i8
  store i8 %1965, i8* %1963, align 1, !tbaa !2453
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1967 = lshr i64 %1952, 63
  %1968 = trunc i64 %1967 to i8
  store i8 %1968, i8* %1966, align 1, !tbaa !2453
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1969, align 1, !tbaa !2453
  %1970 = load i64, i64* %RCX
  %1971 = load i64, i64* %PC
  %1972 = add i64 %1971, 3
  store i64 %1972, i64* %PC
  store i64 %1970, i64* %RSI, align 8, !tbaa !2428
  %1973 = load i64, i64* %RSI
  %1974 = load i64, i64* %RDX
  %1975 = load i64, i64* %PC
  %1976 = add i64 %1975, 3
  store i64 %1976, i64* %PC
  %1977 = add i64 %1974, %1973
  store i64 %1977, i64* %RSI, align 8, !tbaa !2428
  %1978 = icmp ult i64 %1977, %1973
  %1979 = icmp ult i64 %1977, %1974
  %1980 = or i1 %1978, %1979
  %1981 = zext i1 %1980 to i8
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1981, i8* %1982, align 1, !tbaa !2432
  %1983 = trunc i64 %1977 to i32
  %1984 = and i32 %1983, 255
  %1985 = call i32 @llvm.ctpop.i32(i32 %1984) #17
  %1986 = trunc i32 %1985 to i8
  %1987 = and i8 %1986, 1
  %1988 = xor i8 %1987, 1
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1988, i8* %1989, align 1, !tbaa !2446
  %1990 = xor i64 %1974, %1973
  %1991 = xor i64 %1990, %1977
  %1992 = lshr i64 %1991, 4
  %1993 = trunc i64 %1992 to i8
  %1994 = and i8 %1993, 1
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1994, i8* %1995, align 1, !tbaa !2447
  %1996 = icmp eq i64 %1977, 0
  %1997 = zext i1 %1996 to i8
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1997, i8* %1998, align 1, !tbaa !2448
  %1999 = lshr i64 %1977, 63
  %2000 = trunc i64 %1999 to i8
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2000, i8* %2001, align 1, !tbaa !2449
  %2002 = lshr i64 %1973, 63
  %2003 = lshr i64 %1974, 63
  %2004 = xor i64 %1999, %2002
  %2005 = xor i64 %1999, %2003
  %2006 = add nuw nsw i64 %2004, %2005
  %2007 = icmp eq i64 %2006, 2
  %2008 = zext i1 %2007 to i8
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2008, i8* %2009, align 1, !tbaa !2450
  %2010 = load i64, i64* %RSI
  %2011 = bitcast %union.vec128_t* %XMM0 to i8*
  %2012 = load i64, i64* %PC
  %2013 = add i64 %2012, 4
  store i64 %2013, i64* %PC
  %2014 = bitcast i8* %2011 to double*
  %2015 = load double, double* %2014, align 1
  %2016 = inttoptr i64 %2010 to double*
  store double %2015, double* %2016
  %2017 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2018 = load i64, i64* %PC
  %2019 = add i64 %2018, 9
  store i64 %2019, i64* %PC
  %2020 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2021 = bitcast i8* %2017 to double*
  store double %2020, double* %2021, align 1, !tbaa !2451
  %2022 = getelementptr inbounds i8, i8* %2017, i64 8
  %2023 = bitcast i8* %2022 to double*
  store double 0.000000e+00, double* %2023, align 1, !tbaa !2451
  %2024 = load i64, i64* %PC
  %2025 = add i64 %2024, 9
  store i64 %2025, i64* %PC
  %2026 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %2027 = sext i16 %2026 to i64
  store i64 %2027, i64* %RDX, align 8, !tbaa !2428
  %2028 = load i64, i64* %RDX
  %2029 = load i64, i64* %PC
  %2030 = add i64 %2029, 4
  store i64 %2030, i64* %PC
  %2031 = shl i64 %2028, 3
  %2032 = icmp slt i64 %2031, 0
  %2033 = shl i64 %2031, 1
  store i64 %2033, i64* %RDX, align 8, !tbaa !2428
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2035 = zext i1 %2032 to i8
  store i8 %2035, i8* %2034, align 1, !tbaa !2453
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2037 = trunc i64 %2033 to i32
  %2038 = and i32 %2037, 254
  %2039 = call i32 @llvm.ctpop.i32(i32 %2038) #17
  %2040 = trunc i32 %2039 to i8
  %2041 = and i8 %2040, 1
  %2042 = xor i8 %2041, 1
  store i8 %2042, i8* %2036, align 1, !tbaa !2453
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2043, align 1, !tbaa !2453
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2045 = icmp eq i64 %2033, 0
  %2046 = zext i1 %2045 to i8
  store i8 %2046, i8* %2044, align 1, !tbaa !2453
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2048 = lshr i64 %2033, 63
  %2049 = trunc i64 %2048 to i8
  store i8 %2049, i8* %2047, align 1, !tbaa !2453
  %2050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2050, align 1, !tbaa !2453
  %2051 = load i64, i64* %RCX
  %2052 = load i64, i64* %RDX
  %2053 = load i64, i64* %PC
  %2054 = add i64 %2053, 3
  store i64 %2054, i64* %PC
  %2055 = add i64 %2052, %2051
  store i64 %2055, i64* %RCX, align 8, !tbaa !2428
  %2056 = icmp ult i64 %2055, %2051
  %2057 = icmp ult i64 %2055, %2052
  %2058 = or i1 %2056, %2057
  %2059 = zext i1 %2058 to i8
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2059, i8* %2060, align 1, !tbaa !2432
  %2061 = trunc i64 %2055 to i32
  %2062 = and i32 %2061, 255
  %2063 = call i32 @llvm.ctpop.i32(i32 %2062) #17
  %2064 = trunc i32 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = xor i8 %2065, 1
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2066, i8* %2067, align 1, !tbaa !2446
  %2068 = xor i64 %2052, %2051
  %2069 = xor i64 %2068, %2055
  %2070 = lshr i64 %2069, 4
  %2071 = trunc i64 %2070 to i8
  %2072 = and i8 %2071, 1
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2072, i8* %2073, align 1, !tbaa !2447
  %2074 = icmp eq i64 %2055, 0
  %2075 = zext i1 %2074 to i8
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2075, i8* %2076, align 1, !tbaa !2448
  %2077 = lshr i64 %2055, 63
  %2078 = trunc i64 %2077 to i8
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2078, i8* %2079, align 1, !tbaa !2449
  %2080 = lshr i64 %2051, 63
  %2081 = lshr i64 %2052, 63
  %2082 = xor i64 %2077, %2080
  %2083 = xor i64 %2077, %2081
  %2084 = add nuw nsw i64 %2082, %2083
  %2085 = icmp eq i64 %2084, 2
  %2086 = zext i1 %2085 to i8
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2086, i8* %2087, align 1, !tbaa !2450
  %2088 = load i64, i64* %RCX
  %2089 = add i64 %2088, 8
  %2090 = bitcast %union.vec128_t* %XMM0 to i8*
  %2091 = load i64, i64* %PC
  %2092 = add i64 %2091, 5
  store i64 %2092, i64* %PC
  %2093 = bitcast i8* %2090 to double*
  %2094 = load double, double* %2093, align 1
  %2095 = inttoptr i64 %2089 to double*
  store double %2094, double* %2095
  %2096 = load i64, i64* %RBP
  %2097 = sub i64 %2096, 72
  %2098 = load i32, i32* %EAX
  %2099 = zext i32 %2098 to i64
  %2100 = load i64, i64* %PC
  %2101 = add i64 %2100, 3
  store i64 %2101, i64* %PC
  %2102 = inttoptr i64 %2097 to i32*
  store i32 %2098, i32* %2102
  %2103 = load i64, i64* %PC
  %2104 = add i64 %2103, 8
  store i64 %2104, i64* %PC
  %2105 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  store i16 %2105, i16* %AX, align 2, !tbaa !2468
  %2106 = load i16, i16* %AX
  %2107 = zext i16 %2106 to i64
  %2108 = load i64, i64* %PC
  %2109 = add i64 %2108, 4
  store i64 %2109, i64* %PC
  %2110 = add i16 1, %2106
  store i16 %2110, i16* %AX, align 2, !tbaa !2468
  %2111 = icmp ult i16 %2110, %2106
  %2112 = icmp ult i16 %2110, 1
  %2113 = or i1 %2111, %2112
  %2114 = zext i1 %2113 to i8
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2114, i8* %2115, align 1, !tbaa !2432
  %2116 = and i16 %2110, 255
  %2117 = zext i16 %2116 to i32
  %2118 = call i32 @llvm.ctpop.i32(i32 %2117) #17
  %2119 = trunc i32 %2118 to i8
  %2120 = and i8 %2119, 1
  %2121 = xor i8 %2120, 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2121, i8* %2122, align 1, !tbaa !2446
  %2123 = xor i64 1, %2107
  %2124 = trunc i64 %2123 to i16
  %2125 = xor i16 %2124, %2110
  %2126 = lshr i16 %2125, 4
  %2127 = trunc i16 %2126 to i8
  %2128 = and i8 %2127, 1
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2128, i8* %2129, align 1, !tbaa !2447
  %2130 = icmp eq i16 %2110, 0
  %2131 = zext i1 %2130 to i8
  %2132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2131, i8* %2132, align 1, !tbaa !2448
  %2133 = lshr i16 %2110, 15
  %2134 = trunc i16 %2133 to i8
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2134, i8* %2135, align 1, !tbaa !2449
  %2136 = lshr i16 %2106, 15
  %2137 = xor i16 %2133, %2136
  %2138 = add nuw nsw i16 %2137, %2133
  %2139 = icmp eq i16 %2138, 2
  %2140 = zext i1 %2139 to i8
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2140, i8* %2141, align 1, !tbaa !2450
  %2142 = load i16, i16* %AX
  %2143 = zext i16 %2142 to i64
  %2144 = load i64, i64* %PC
  %2145 = add i64 %2144, 8
  store i64 %2145, i64* %PC
  store i16 %2142, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %2146 = load i64, i64* %PC
  %2147 = sub i64 %2146, 146
  %2148 = load i64, i64* %PC
  %2149 = add i64 %2148, 5
  store i64 %2149, i64* %PC
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2147, i64* %2150, align 8, !tbaa !2428
  br label %block_400947

block_400f57:                                     ; preds = %block_400f02, %block_400f40
  %MEMORY.2 = phi %struct.Memory* [ %4337, %block_400f40 ], [ %4424, %block_400f02 ]
  %2151 = load i64, i64* %RAX
  %2152 = load i32, i32* %EAX
  %2153 = zext i32 %2152 to i64
  %2154 = load i64, i64* %PC
  %2155 = add i64 %2154, 2
  store i64 %2155, i64* %PC
  %2156 = xor i64 %2153, %2151
  %2157 = trunc i64 %2156 to i32
  %2158 = and i64 %2156, 4294967295
  store i64 %2158, i64* %RAX, align 8, !tbaa !2428
  %2159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2159, align 1, !tbaa !2432
  %2160 = and i32 %2157, 255
  %2161 = call i32 @llvm.ctpop.i32(i32 %2160) #17
  %2162 = trunc i32 %2161 to i8
  %2163 = and i8 %2162, 1
  %2164 = xor i8 %2163, 1
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2164, i8* %2165, align 1, !tbaa !2446
  %2166 = icmp eq i32 %2157, 0
  %2167 = zext i1 %2166 to i8
  %2168 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2167, i8* %2168, align 1, !tbaa !2448
  %2169 = lshr i32 %2157, 31
  %2170 = trunc i32 %2169 to i8
  %2171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2170, i8* %2171, align 1, !tbaa !2449
  %2172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2172, align 1, !tbaa !2450
  %2173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2173, align 1, !tbaa !2447
  %2174 = load i64, i64* %RSP
  %2175 = load i64, i64* %PC
  %2176 = add i64 %2175, 7
  store i64 %2176, i64* %PC
  %2177 = add i64 192, %2174
  store i64 %2177, i64* %RSP, align 8, !tbaa !2428
  %2178 = icmp ult i64 %2177, %2174
  %2179 = icmp ult i64 %2177, 192
  %2180 = or i1 %2178, %2179
  %2181 = zext i1 %2180 to i8
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2181, i8* %2182, align 1, !tbaa !2432
  %2183 = trunc i64 %2177 to i32
  %2184 = and i32 %2183, 255
  %2185 = call i32 @llvm.ctpop.i32(i32 %2184) #17
  %2186 = trunc i32 %2185 to i8
  %2187 = and i8 %2186, 1
  %2188 = xor i8 %2187, 1
  %2189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2188, i8* %2189, align 1, !tbaa !2446
  %2190 = xor i64 192, %2174
  %2191 = xor i64 %2190, %2177
  %2192 = lshr i64 %2191, 4
  %2193 = trunc i64 %2192 to i8
  %2194 = and i8 %2193, 1
  %2195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2194, i8* %2195, align 1, !tbaa !2447
  %2196 = icmp eq i64 %2177, 0
  %2197 = zext i1 %2196 to i8
  %2198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2197, i8* %2198, align 1, !tbaa !2448
  %2199 = lshr i64 %2177, 63
  %2200 = trunc i64 %2199 to i8
  %2201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2200, i8* %2201, align 1, !tbaa !2449
  %2202 = lshr i64 %2174, 63
  %2203 = xor i64 %2199, %2202
  %2204 = add nuw nsw i64 %2203, %2199
  %2205 = icmp eq i64 %2204, 2
  %2206 = zext i1 %2205 to i8
  %2207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2206, i8* %2207, align 1, !tbaa !2450
  %2208 = load i64, i64* %PC
  %2209 = add i64 %2208, 1
  store i64 %2209, i64* %PC
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2211 = load i64, i64* %2210, align 8, !tbaa !2428
  %2212 = add i64 %2211, 8
  %2213 = inttoptr i64 %2211 to i64*
  %2214 = load i64, i64* %2213
  store i64 %2214, i64* %RBP, align 8, !tbaa !2428
  store i64 %2212, i64* %2210, align 8, !tbaa !2428
  %2215 = load i64, i64* %PC
  %2216 = add i64 %2215, 1
  store i64 %2216, i64* %PC
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2219 = load i64, i64* %2218, align 8, !tbaa !2428
  %2220 = inttoptr i64 %2219 to i64*
  %2221 = load i64, i64* %2220
  store i64 %2221, i64* %2217, align 8, !tbaa !2428
  %2222 = add i64 %2219, 8
  store i64 %2222, i64* %2218, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.2

block_400ece:                                     ; preds = %block_400e10
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 230), i64* %RDI, align 8, !tbaa !2428
  %2223 = load i64, i64* %PC
  %2224 = add i64 %2223, 2
  store i64 %2224, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %2225 = load i64, i64* %PC
  %2226 = sub i64 %2225, 2298
  %2227 = load i64, i64* %PC
  %2228 = add i64 %2227, 5
  %2229 = load i64, i64* %PC
  %2230 = add i64 %2229, 5
  store i64 %2230, i64* %PC
  %2231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2232 = load i64, i64* %2231, align 8, !tbaa !2428
  %2233 = add i64 %2232, -8
  %2234 = inttoptr i64 %2233 to i64*
  store i64 %2228, i64* %2234
  store i64 %2233, i64* %2231, align 8, !tbaa !2428
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2226, i64* %2235, align 8, !tbaa !2428
  %2236 = load i64, i64* %PC
  %2237 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %2236, %struct.Memory* %MEMORY.1)
  %2238 = load i64, i64* %RBP
  %2239 = sub i64 %2238, 184
  %2240 = load i32, i32* %EAX
  %2241 = zext i32 %2240 to i64
  %2242 = load i64, i64* %PC
  %2243 = add i64 %2242, 6
  store i64 %2243, i64* %PC
  %2244 = inttoptr i64 %2239 to i32*
  store i32 %2240, i32* %2244
  br label %block_400ee5

block_40093d:                                     ; preds = %block_400929
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  br label %block_400947

block_400834:                                     ; preds = %block_40082a
  %2245 = add i64 %2716, 10
  store i64 %2245, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %2246 = load i64, i64* %PC
  %2247 = add i64 %2246, 10
  store i64 %2247, i64* %PC
  store i64 add (i64 ptrtoint (%niter_type* @niter to i64), i64 16), i64* %RCX, align 8, !tbaa !2428
  %2248 = load i64, i64* %RBP
  %2249 = sub i64 %2248, 20
  %2250 = load i64, i64* %PC
  %2251 = add i64 %2250, 4
  store i64 %2251, i64* %PC
  %2252 = inttoptr i64 %2249 to i32*
  %2253 = load i32, i32* %2252
  %2254 = sext i32 %2253 to i64
  store i64 %2254, i64* %RDX, align 8, !tbaa !2428
  %2255 = load i64, i64* %RDX
  %2256 = load i64, i64* %PC
  %2257 = add i64 %2256, 4
  store i64 %2257, i64* %PC
  %2258 = shl i64 %2255, 4
  %2259 = icmp slt i64 %2258, 0
  %2260 = shl i64 %2258, 1
  store i64 %2260, i64* %RDX, align 8, !tbaa !2428
  %2261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2262 = zext i1 %2259 to i8
  store i8 %2262, i8* %2261, align 1, !tbaa !2453
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2264 = trunc i64 %2260 to i32
  %2265 = and i32 %2264, 254
  %2266 = call i32 @llvm.ctpop.i32(i32 %2265) #17
  %2267 = trunc i32 %2266 to i8
  %2268 = and i8 %2267, 1
  %2269 = xor i8 %2268, 1
  store i8 %2269, i8* %2263, align 1, !tbaa !2453
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2270, align 1, !tbaa !2453
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2272 = icmp eq i64 %2260, 0
  %2273 = zext i1 %2272 to i8
  store i8 %2273, i8* %2271, align 1, !tbaa !2453
  %2274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2275 = lshr i64 %2260, 63
  %2276 = trunc i64 %2275 to i8
  store i8 %2276, i8* %2274, align 1, !tbaa !2453
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2277, align 1, !tbaa !2453
  %2278 = load i64, i64* %RCX
  %2279 = load i64, i64* %RDX
  %2280 = load i64, i64* %PC
  %2281 = add i64 %2280, 3
  store i64 %2281, i64* %PC
  %2282 = add i64 %2279, %2278
  store i64 %2282, i64* %RCX, align 8, !tbaa !2428
  %2283 = icmp ult i64 %2282, %2278
  %2284 = icmp ult i64 %2282, %2279
  %2285 = or i1 %2283, %2284
  %2286 = zext i1 %2285 to i8
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2286, i8* %2287, align 1, !tbaa !2432
  %2288 = trunc i64 %2282 to i32
  %2289 = and i32 %2288, 255
  %2290 = call i32 @llvm.ctpop.i32(i32 %2289) #17
  %2291 = trunc i32 %2290 to i8
  %2292 = and i8 %2291, 1
  %2293 = xor i8 %2292, 1
  %2294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2293, i8* %2294, align 1, !tbaa !2446
  %2295 = xor i64 %2279, %2278
  %2296 = xor i64 %2295, %2282
  %2297 = lshr i64 %2296, 4
  %2298 = trunc i64 %2297 to i8
  %2299 = and i8 %2298, 1
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2299, i8* %2300, align 1, !tbaa !2447
  %2301 = icmp eq i64 %2282, 0
  %2302 = zext i1 %2301 to i8
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2302, i8* %2303, align 1, !tbaa !2448
  %2304 = lshr i64 %2282, 63
  %2305 = trunc i64 %2304 to i8
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2305, i8* %2306, align 1, !tbaa !2449
  %2307 = lshr i64 %2278, 63
  %2308 = lshr i64 %2279, 63
  %2309 = xor i64 %2304, %2307
  %2310 = xor i64 %2304, %2308
  %2311 = add nuw nsw i64 %2309, %2310
  %2312 = icmp eq i64 %2311, 2
  %2313 = zext i1 %2312 to i8
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2313, i8* %2314, align 1, !tbaa !2450
  %2315 = load i64, i64* %RBP
  %2316 = sub i64 %2315, 24
  %2317 = load i64, i64* %PC
  %2318 = add i64 %2317, 4
  store i64 %2318, i64* %PC
  %2319 = inttoptr i64 %2316 to i32*
  %2320 = load i32, i32* %2319
  %2321 = sext i32 %2320 to i64
  store i64 %2321, i64* %RDX, align 8, !tbaa !2428
  %2322 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2323 = load i64, i64* %RCX
  %2324 = load i64, i64* %RDX
  %2325 = mul i64 %2324, 8
  %2326 = add i64 %2325, %2323
  %2327 = load i64, i64* %PC
  %2328 = add i64 %2327, 5
  store i64 %2328, i64* %PC
  %2329 = inttoptr i64 %2326 to double*
  %2330 = load double, double* %2329
  %2331 = bitcast i8* %2322 to double*
  store double %2330, double* %2331, align 1, !tbaa !2451
  %2332 = getelementptr inbounds i8, i8* %2322, i64 8
  %2333 = bitcast i8* %2332 to double*
  store double 0.000000e+00, double* %2333, align 1, !tbaa !2451
  %2334 = load i64, i64* %RBP
  %2335 = sub i64 %2334, 20
  %2336 = load i64, i64* %PC
  %2337 = add i64 %2336, 3
  store i64 %2337, i64* %PC
  %2338 = inttoptr i64 %2335 to i32*
  %2339 = load i32, i32* %2338
  %2340 = zext i32 %2339 to i64
  store i64 %2340, i64* %RSI, align 8, !tbaa !2428
  %2341 = load i64, i64* %RSI
  %2342 = load i64, i64* %PC
  %2343 = add i64 %2342, 3
  store i64 %2343, i64* %PC
  %2344 = trunc i64 %2341 to i32
  %2345 = add i32 1, %2344
  %2346 = zext i32 %2345 to i64
  store i64 %2346, i64* %RSI, align 8, !tbaa !2428
  %2347 = icmp ult i32 %2345, %2344
  %2348 = icmp ult i32 %2345, 1
  %2349 = or i1 %2347, %2348
  %2350 = zext i1 %2349 to i8
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2350, i8* %2351, align 1, !tbaa !2432
  %2352 = and i32 %2345, 255
  %2353 = call i32 @llvm.ctpop.i32(i32 %2352) #17
  %2354 = trunc i32 %2353 to i8
  %2355 = and i8 %2354, 1
  %2356 = xor i8 %2355, 1
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2356, i8* %2357, align 1, !tbaa !2446
  %2358 = xor i64 1, %2341
  %2359 = trunc i64 %2358 to i32
  %2360 = xor i32 %2359, %2345
  %2361 = lshr i32 %2360, 4
  %2362 = trunc i32 %2361 to i8
  %2363 = and i8 %2362, 1
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2363, i8* %2364, align 1, !tbaa !2447
  %2365 = icmp eq i32 %2345, 0
  %2366 = zext i1 %2365 to i8
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2366, i8* %2367, align 1, !tbaa !2448
  %2368 = lshr i32 %2345, 31
  %2369 = trunc i32 %2368 to i8
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2369, i8* %2370, align 1, !tbaa !2449
  %2371 = lshr i32 %2344, 31
  %2372 = xor i32 %2368, %2371
  %2373 = add nuw nsw i32 %2372, %2368
  %2374 = icmp eq i32 %2373, 2
  %2375 = zext i1 %2374 to i8
  %2376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2375, i8* %2376, align 1, !tbaa !2450
  %2377 = load i32, i32* %ESI
  %2378 = zext i32 %2377 to i64
  %2379 = load i64, i64* %PC
  %2380 = add i64 %2379, 3
  store i64 %2380, i64* %PC
  %2381 = shl i64 %2378, 32
  %2382 = ashr exact i64 %2381, 32
  store i64 %2382, i64* %RCX, align 8, !tbaa !2428
  %2383 = load i64, i64* %RCX
  %2384 = load i64, i64* %PC
  %2385 = add i64 %2384, 4
  store i64 %2385, i64* %PC
  %2386 = sext i64 %2383 to i128
  %2387 = and i128 %2386, -18446744073709551616
  %2388 = zext i64 %2383 to i128
  %2389 = or i128 %2387, %2388
  %2390 = mul nsw i128 40, %2389
  %2391 = trunc i128 %2390 to i64
  store i64 %2391, i64* %RCX, align 8, !tbaa !2428
  %2392 = sext i64 %2391 to i128
  %2393 = icmp ne i128 %2392, %2390
  %2394 = zext i1 %2393 to i8
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2394, i8* %2395, align 1, !tbaa !2432
  %2396 = trunc i128 %2390 to i32
  %2397 = and i32 %2396, 255
  %2398 = call i32 @llvm.ctpop.i32(i32 %2397) #17
  %2399 = trunc i32 %2398 to i8
  %2400 = and i8 %2399, 1
  %2401 = xor i8 %2400, 1
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2401, i8* %2402, align 1, !tbaa !2446
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2403, align 1, !tbaa !2447
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2404, align 1, !tbaa !2448
  %2405 = lshr i64 %2391, 63
  %2406 = trunc i64 %2405 to i8
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2406, i8* %2407, align 1, !tbaa !2449
  %2408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2394, i8* %2408, align 1, !tbaa !2450
  %2409 = load i64, i64* %RAX
  %2410 = load i64, i64* %RCX
  %2411 = load i64, i64* %PC
  %2412 = add i64 %2411, 3
  store i64 %2412, i64* %PC
  %2413 = add i64 %2410, %2409
  store i64 %2413, i64* %RAX, align 8, !tbaa !2428
  %2414 = icmp ult i64 %2413, %2409
  %2415 = icmp ult i64 %2413, %2410
  %2416 = or i1 %2414, %2415
  %2417 = zext i1 %2416 to i8
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2417, i8* %2418, align 1, !tbaa !2432
  %2419 = trunc i64 %2413 to i32
  %2420 = and i32 %2419, 255
  %2421 = call i32 @llvm.ctpop.i32(i32 %2420) #17
  %2422 = trunc i32 %2421 to i8
  %2423 = and i8 %2422, 1
  %2424 = xor i8 %2423, 1
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2424, i8* %2425, align 1, !tbaa !2446
  %2426 = xor i64 %2410, %2409
  %2427 = xor i64 %2426, %2413
  %2428 = lshr i64 %2427, 4
  %2429 = trunc i64 %2428 to i8
  %2430 = and i8 %2429, 1
  %2431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2430, i8* %2431, align 1, !tbaa !2447
  %2432 = icmp eq i64 %2413, 0
  %2433 = zext i1 %2432 to i8
  %2434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2433, i8* %2434, align 1, !tbaa !2448
  %2435 = lshr i64 %2413, 63
  %2436 = trunc i64 %2435 to i8
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2436, i8* %2437, align 1, !tbaa !2449
  %2438 = lshr i64 %2409, 63
  %2439 = lshr i64 %2410, 63
  %2440 = xor i64 %2435, %2438
  %2441 = xor i64 %2435, %2439
  %2442 = add nuw nsw i64 %2440, %2441
  %2443 = icmp eq i64 %2442, 2
  %2444 = zext i1 %2443 to i8
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2444, i8* %2445, align 1, !tbaa !2450
  %2446 = load i64, i64* %RBP
  %2447 = sub i64 %2446, 24
  %2448 = load i64, i64* %PC
  %2449 = add i64 %2448, 3
  store i64 %2449, i64* %PC
  %2450 = inttoptr i64 %2447 to i32*
  %2451 = load i32, i32* %2450
  %2452 = zext i32 %2451 to i64
  store i64 %2452, i64* %RSI, align 8, !tbaa !2428
  %2453 = load i64, i64* %RSI
  %2454 = load i64, i64* %PC
  %2455 = add i64 %2454, 3
  store i64 %2455, i64* %PC
  %2456 = trunc i64 %2453 to i32
  %2457 = add i32 1, %2456
  %2458 = zext i32 %2457 to i64
  store i64 %2458, i64* %RSI, align 8, !tbaa !2428
  %2459 = icmp ult i32 %2457, %2456
  %2460 = icmp ult i32 %2457, 1
  %2461 = or i1 %2459, %2460
  %2462 = zext i1 %2461 to i8
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2462, i8* %2463, align 1, !tbaa !2432
  %2464 = and i32 %2457, 255
  %2465 = call i32 @llvm.ctpop.i32(i32 %2464) #17
  %2466 = trunc i32 %2465 to i8
  %2467 = and i8 %2466, 1
  %2468 = xor i8 %2467, 1
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2468, i8* %2469, align 1, !tbaa !2446
  %2470 = xor i64 1, %2453
  %2471 = trunc i64 %2470 to i32
  %2472 = xor i32 %2471, %2457
  %2473 = lshr i32 %2472, 4
  %2474 = trunc i32 %2473 to i8
  %2475 = and i8 %2474, 1
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2475, i8* %2476, align 1, !tbaa !2447
  %2477 = icmp eq i32 %2457, 0
  %2478 = zext i1 %2477 to i8
  %2479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2478, i8* %2479, align 1, !tbaa !2448
  %2480 = lshr i32 %2457, 31
  %2481 = trunc i32 %2480 to i8
  %2482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2481, i8* %2482, align 1, !tbaa !2449
  %2483 = lshr i32 %2456, 31
  %2484 = xor i32 %2480, %2483
  %2485 = add nuw nsw i32 %2484, %2480
  %2486 = icmp eq i32 %2485, 2
  %2487 = zext i1 %2486 to i8
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2487, i8* %2488, align 1, !tbaa !2450
  %2489 = load i32, i32* %ESI
  %2490 = zext i32 %2489 to i64
  %2491 = load i64, i64* %PC
  %2492 = add i64 %2491, 3
  store i64 %2492, i64* %PC
  %2493 = shl i64 %2490, 32
  %2494 = ashr exact i64 %2493, 32
  store i64 %2494, i64* %RCX, align 8, !tbaa !2428
  %2495 = load i64, i64* %RAX
  %2496 = load i64, i64* %RCX
  %2497 = mul i64 %2496, 8
  %2498 = add i64 %2497, %2495
  %2499 = bitcast %union.vec128_t* %XMM0 to i8*
  %2500 = load i64, i64* %PC
  %2501 = add i64 %2500, 5
  store i64 %2501, i64* %PC
  %2502 = bitcast i8* %2499 to double*
  %2503 = load double, double* %2502, align 1
  %2504 = inttoptr i64 %2498 to double*
  store double %2503, double* %2504
  %2505 = load i64, i64* %RBP
  %2506 = sub i64 %2505, 24
  %2507 = load i64, i64* %PC
  %2508 = add i64 %2507, 3
  store i64 %2508, i64* %PC
  %2509 = inttoptr i64 %2506 to i32*
  %2510 = load i32, i32* %2509
  %2511 = zext i32 %2510 to i64
  store i64 %2511, i64* %RAX, align 8, !tbaa !2428
  %2512 = load i64, i64* %RAX
  %2513 = load i64, i64* %PC
  %2514 = add i64 %2513, 3
  store i64 %2514, i64* %PC
  %2515 = trunc i64 %2512 to i32
  %2516 = add i32 1, %2515
  %2517 = zext i32 %2516 to i64
  store i64 %2517, i64* %RAX, align 8, !tbaa !2428
  %2518 = icmp ult i32 %2516, %2515
  %2519 = icmp ult i32 %2516, 1
  %2520 = or i1 %2518, %2519
  %2521 = zext i1 %2520 to i8
  %2522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2521, i8* %2522, align 1, !tbaa !2432
  %2523 = and i32 %2516, 255
  %2524 = call i32 @llvm.ctpop.i32(i32 %2523) #17
  %2525 = trunc i32 %2524 to i8
  %2526 = and i8 %2525, 1
  %2527 = xor i8 %2526, 1
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2527, i8* %2528, align 1, !tbaa !2446
  %2529 = xor i64 1, %2512
  %2530 = trunc i64 %2529 to i32
  %2531 = xor i32 %2530, %2516
  %2532 = lshr i32 %2531, 4
  %2533 = trunc i32 %2532 to i8
  %2534 = and i8 %2533, 1
  %2535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2534, i8* %2535, align 1, !tbaa !2447
  %2536 = icmp eq i32 %2516, 0
  %2537 = zext i1 %2536 to i8
  %2538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2537, i8* %2538, align 1, !tbaa !2448
  %2539 = lshr i32 %2516, 31
  %2540 = trunc i32 %2539 to i8
  %2541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2540, i8* %2541, align 1, !tbaa !2449
  %2542 = lshr i32 %2515, 31
  %2543 = xor i32 %2539, %2542
  %2544 = add nuw nsw i32 %2543, %2539
  %2545 = icmp eq i32 %2544, 2
  %2546 = zext i1 %2545 to i8
  %2547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2546, i8* %2547, align 1, !tbaa !2450
  %2548 = load i64, i64* %RBP
  %2549 = sub i64 %2548, 24
  %2550 = load i32, i32* %EAX
  %2551 = zext i32 %2550 to i64
  %2552 = load i64, i64* %PC
  %2553 = add i64 %2552, 3
  store i64 %2553, i64* %PC
  %2554 = inttoptr i64 %2549 to i32*
  store i32 %2550, i32* %2554
  %2555 = load i64, i64* %PC
  %2556 = sub i64 %2555, 89
  %2557 = load i64, i64* %PC
  %2558 = add i64 %2557, 5
  store i64 %2558, i64* %PC
  %2559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2556, i64* %2559, align 8, !tbaa !2428
  br label %block_40082a

block_400eb2:                                     ; preds = %block_400e1c
  %2560 = load i64, i64* %RBP
  %2561 = sub i64 %2560, 32
  %2562 = load i64, i64* %PC
  %2563 = add i64 %2562, 3
  store i64 %2563, i64* %PC
  %2564 = inttoptr i64 %2561 to i32*
  %2565 = load i32, i32* %2564
  %2566 = zext i32 %2565 to i64
  store i64 %2566, i64* %RAX, align 8, !tbaa !2428
  %2567 = load i64, i64* %RAX
  %2568 = load i64, i64* %PC
  %2569 = add i64 %2568, 3
  store i64 %2569, i64* %PC
  %2570 = trunc i64 %2567 to i32
  %2571 = add i32 1, %2570
  %2572 = zext i32 %2571 to i64
  store i64 %2572, i64* %RAX, align 8, !tbaa !2428
  %2573 = icmp ult i32 %2571, %2570
  %2574 = icmp ult i32 %2571, 1
  %2575 = or i1 %2573, %2574
  %2576 = zext i1 %2575 to i8
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2576, i8* %2577, align 1, !tbaa !2432
  %2578 = and i32 %2571, 255
  %2579 = call i32 @llvm.ctpop.i32(i32 %2578) #17
  %2580 = trunc i32 %2579 to i8
  %2581 = and i8 %2580, 1
  %2582 = xor i8 %2581, 1
  %2583 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2582, i8* %2583, align 1, !tbaa !2446
  %2584 = xor i64 1, %2567
  %2585 = trunc i64 %2584 to i32
  %2586 = xor i32 %2585, %2571
  %2587 = lshr i32 %2586, 4
  %2588 = trunc i32 %2587 to i8
  %2589 = and i8 %2588, 1
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2589, i8* %2590, align 1, !tbaa !2447
  %2591 = icmp eq i32 %2571, 0
  %2592 = zext i1 %2591 to i8
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2592, i8* %2593, align 1, !tbaa !2448
  %2594 = lshr i32 %2571, 31
  %2595 = trunc i32 %2594 to i8
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2595, i8* %2596, align 1, !tbaa !2449
  %2597 = lshr i32 %2570, 31
  %2598 = xor i32 %2594, %2597
  %2599 = add nuw nsw i32 %2598, %2594
  %2600 = icmp eq i32 %2599, 2
  %2601 = zext i1 %2600 to i8
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2601, i8* %2602, align 1, !tbaa !2450
  %2603 = load i64, i64* %RBP
  %2604 = sub i64 %2603, 32
  %2605 = load i32, i32* %EAX
  %2606 = zext i32 %2605 to i64
  %2607 = load i64, i64* %PC
  %2608 = add i64 %2607, 3
  store i64 %2608, i64* %PC
  %2609 = inttoptr i64 %2604 to i32*
  store i32 %2605, i32* %2609
  br label %block_400ebb

block_400d2f:                                     ; preds = %block_400b60, %block_400ee5
  %MEMORY.3 = phi %struct.Memory* [ %4305, %block_400b60 ], [ %MEMORY.0, %block_400ee5 ]
  %2610 = load i64, i64* %RBP
  %2611 = sub i64 %2610, 20
  %2612 = load i64, i64* %PC
  %2613 = add i64 %2612, 4
  store i64 %2613, i64* %PC
  %2614 = inttoptr i64 %2611 to i32*
  %2615 = load i32, i32* %2614
  %2616 = sub i32 %2615, 8
  %2617 = icmp ult i32 %2615, 8
  %2618 = zext i1 %2617 to i8
  %2619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2618, i8* %2619, align 1, !tbaa !2432
  %2620 = and i32 %2616, 255
  %2621 = call i32 @llvm.ctpop.i32(i32 %2620) #17
  %2622 = trunc i32 %2621 to i8
  %2623 = and i8 %2622, 1
  %2624 = xor i8 %2623, 1
  %2625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2624, i8* %2625, align 1, !tbaa !2446
  %2626 = xor i32 %2615, 8
  %2627 = xor i32 %2626, %2616
  %2628 = lshr i32 %2627, 4
  %2629 = trunc i32 %2628 to i8
  %2630 = and i8 %2629, 1
  %2631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2630, i8* %2631, align 1, !tbaa !2447
  %2632 = icmp eq i32 %2616, 0
  %2633 = zext i1 %2632 to i8
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2633, i8* %2634, align 1, !tbaa !2448
  %2635 = lshr i32 %2616, 31
  %2636 = trunc i32 %2635 to i8
  %2637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2636, i8* %2637, align 1, !tbaa !2449
  %2638 = lshr i32 %2615, 31
  %2639 = xor i32 %2635, %2638
  %2640 = add nuw nsw i32 %2639, %2638
  %2641 = icmp eq i32 %2640, 2
  %2642 = zext i1 %2641 to i8
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2642, i8* %2643, align 1, !tbaa !2450
  %2644 = load i64, i64* %PC
  %2645 = add i64 %2644, 453
  %2646 = load i64, i64* %PC
  %2647 = add i64 %2646, 6
  %2648 = load i64, i64* %PC
  %2649 = add i64 %2648, 6
  store i64 %2649, i64* %PC
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2651 = load i8, i8* %2650, align 1, !tbaa !2449
  %2652 = icmp ne i8 %2651, 0
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2654 = load i8, i8* %2653, align 1, !tbaa !2450
  %2655 = icmp ne i8 %2654, 0
  %2656 = xor i1 %2652, %2655
  %2657 = xor i1 %2656, true
  %2658 = zext i1 %2657 to i8
  store i8 %2658, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2660 = select i1 %2656, i64 %2647, i64 %2645
  store i64 %2660, i64* %2659, align 8, !tbaa !2428
  %2661 = load i8, i8* %BRANCH_TAKEN
  %2662 = icmp eq i8 %2661, 1
  br i1 %2662, label %block_400ef8, label %block_400d39

block_40082a:                                     ; preds = %block_400823, %block_400834
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.7, %block_400823 ], [ %MEMORY.4, %block_400834 ]
  %2663 = load i64, i64* %RBP
  %2664 = sub i64 %2663, 24
  %2665 = load i64, i64* %PC
  %2666 = add i64 %2665, 4
  store i64 %2666, i64* %PC
  %2667 = inttoptr i64 %2664 to i32*
  %2668 = load i32, i32* %2667
  %2669 = sub i32 %2668, 4
  %2670 = icmp ult i32 %2668, 4
  %2671 = zext i1 %2670 to i8
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2671, i8* %2672, align 1, !tbaa !2432
  %2673 = and i32 %2669, 255
  %2674 = call i32 @llvm.ctpop.i32(i32 %2673) #17
  %2675 = trunc i32 %2674 to i8
  %2676 = and i8 %2675, 1
  %2677 = xor i8 %2676, 1
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2677, i8* %2678, align 1, !tbaa !2446
  %2679 = xor i32 %2668, 4
  %2680 = xor i32 %2679, %2669
  %2681 = lshr i32 %2680, 4
  %2682 = trunc i32 %2681 to i8
  %2683 = and i8 %2682, 1
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2683, i8* %2684, align 1, !tbaa !2447
  %2685 = icmp eq i32 %2669, 0
  %2686 = zext i1 %2685 to i8
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2686, i8* %2687, align 1, !tbaa !2448
  %2688 = lshr i32 %2669, 31
  %2689 = trunc i32 %2688 to i8
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2689, i8* %2690, align 1, !tbaa !2449
  %2691 = lshr i32 %2668, 31
  %2692 = xor i32 %2688, %2691
  %2693 = add nuw nsw i32 %2692, %2691
  %2694 = icmp eq i32 %2693, 2
  %2695 = zext i1 %2694 to i8
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2695, i8* %2696, align 1, !tbaa !2450
  %2697 = load i64, i64* %PC
  %2698 = add i64 %2697, 90
  %2699 = load i64, i64* %PC
  %2700 = add i64 %2699, 6
  %2701 = load i64, i64* %PC
  %2702 = add i64 %2701, 6
  store i64 %2702, i64* %PC
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2704 = load i8, i8* %2703, align 1, !tbaa !2449
  %2705 = icmp ne i8 %2704, 0
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2707 = load i8, i8* %2706, align 1, !tbaa !2450
  %2708 = icmp ne i8 %2707, 0
  %2709 = xor i1 %2705, %2708
  %2710 = xor i1 %2709, true
  %2711 = zext i1 %2710 to i8
  store i8 %2711, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2713 = select i1 %2709, i64 %2700, i64 %2698
  store i64 %2713, i64* %2712, align 8, !tbaa !2428
  %2714 = load i8, i8* %BRANCH_TAKEN
  %2715 = icmp eq i8 %2714, 1
  %2716 = load i64, i64* %PC
  br i1 %2715, label %block_400888, label %block_400834

block_400ebb:                                     ; preds = %block_400e1c, %block_400eb2
  %MEMORY.5 = phi %struct.Memory* [ %3171, %block_400e1c ], [ %3171, %block_400eb2 ]
  %2717 = load i64, i64* %PC
  %2718 = add i64 %2717, 5
  %2719 = load i64, i64* %PC
  %2720 = add i64 %2719, 5
  store i64 %2720, i64* %PC
  %2721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2718, i64* %2721, align 8, !tbaa !2428
  %2722 = load i64, i64* %RBP
  %2723 = sub i64 %2722, 24
  %2724 = load i64, i64* %PC
  %2725 = add i64 %2724, 3
  store i64 %2725, i64* %PC
  %2726 = inttoptr i64 %2723 to i32*
  %2727 = load i32, i32* %2726
  %2728 = zext i32 %2727 to i64
  store i64 %2728, i64* %RAX, align 8, !tbaa !2428
  %2729 = load i64, i64* %RAX
  %2730 = load i64, i64* %PC
  %2731 = add i64 %2730, 3
  store i64 %2731, i64* %PC
  %2732 = trunc i64 %2729 to i32
  %2733 = add i32 1, %2732
  %2734 = zext i32 %2733 to i64
  store i64 %2734, i64* %RAX, align 8, !tbaa !2428
  %2735 = icmp ult i32 %2733, %2732
  %2736 = icmp ult i32 %2733, 1
  %2737 = or i1 %2735, %2736
  %2738 = zext i1 %2737 to i8
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2738, i8* %2739, align 1, !tbaa !2432
  %2740 = and i32 %2733, 255
  %2741 = call i32 @llvm.ctpop.i32(i32 %2740) #17
  %2742 = trunc i32 %2741 to i8
  %2743 = and i8 %2742, 1
  %2744 = xor i8 %2743, 1
  %2745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2744, i8* %2745, align 1, !tbaa !2446
  %2746 = xor i64 1, %2729
  %2747 = trunc i64 %2746 to i32
  %2748 = xor i32 %2747, %2733
  %2749 = lshr i32 %2748, 4
  %2750 = trunc i32 %2749 to i8
  %2751 = and i8 %2750, 1
  %2752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2751, i8* %2752, align 1, !tbaa !2447
  %2753 = icmp eq i32 %2733, 0
  %2754 = zext i1 %2753 to i8
  %2755 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2754, i8* %2755, align 1, !tbaa !2448
  %2756 = lshr i32 %2733, 31
  %2757 = trunc i32 %2756 to i8
  %2758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2757, i8* %2758, align 1, !tbaa !2449
  %2759 = lshr i32 %2732, 31
  %2760 = xor i32 %2756, %2759
  %2761 = add nuw nsw i32 %2760, %2756
  %2762 = icmp eq i32 %2761, 2
  %2763 = zext i1 %2762 to i8
  %2764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2763, i8* %2764, align 1, !tbaa !2450
  %2765 = load i64, i64* %RBP
  %2766 = sub i64 %2765, 24
  %2767 = load i32, i32* %EAX
  %2768 = zext i32 %2767 to i64
  %2769 = load i64, i64* %PC
  %2770 = add i64 %2769, 3
  store i64 %2770, i64* %PC
  %2771 = inttoptr i64 %2766 to i32*
  store i32 %2767, i32* %2771
  %2772 = load i64, i64* %PC
  %2773 = sub i64 %2772, 185
  %2774 = load i64, i64* %PC
  %2775 = add i64 %2774, 5
  store i64 %2775, i64* %PC
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2773, i64* %2776, align 8, !tbaa !2428
  br label %block_400e10

block_400929:                                     ; preds = %block_40089b, %block_4009de
  %MEMORY.6 = phi %struct.Memory* [ %3512, %block_40089b ], [ %1714, %block_4009de ]
  %2777 = load i64, i64* %PC
  %2778 = add i64 %2777, 7
  store i64 %2778, i64* %PC
  %2779 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %2780 = zext i32 %2779 to i64
  store i64 %2780, i64* %RAX, align 8, !tbaa !2428
  %2781 = load i32, i32* %EAX
  %2782 = zext i32 %2781 to i64
  %2783 = load i64, i64* %PC
  %2784 = add i64 %2783, 7
  store i64 %2784, i64* %PC
  %2785 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %2786 = sub i32 %2781, %2785
  %2787 = icmp ult i32 %2781, %2785
  %2788 = zext i1 %2787 to i8
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2788, i8* %2789, align 1, !tbaa !2432
  %2790 = and i32 %2786, 255
  %2791 = call i32 @llvm.ctpop.i32(i32 %2790) #17
  %2792 = trunc i32 %2791 to i8
  %2793 = and i8 %2792, 1
  %2794 = xor i8 %2793, 1
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2794, i8* %2795, align 1, !tbaa !2446
  %2796 = xor i32 %2785, %2781
  %2797 = xor i32 %2796, %2786
  %2798 = lshr i32 %2797, 4
  %2799 = trunc i32 %2798 to i8
  %2800 = and i8 %2799, 1
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2800, i8* %2801, align 1, !tbaa !2447
  %2802 = icmp eq i32 %2786, 0
  %2803 = zext i1 %2802 to i8
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2803, i8* %2804, align 1, !tbaa !2448
  %2805 = lshr i32 %2786, 31
  %2806 = trunc i32 %2805 to i8
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2806, i8* %2807, align 1, !tbaa !2449
  %2808 = lshr i32 %2781, 31
  %2809 = lshr i32 %2785, 31
  %2810 = xor i32 %2809, %2808
  %2811 = xor i32 %2805, %2808
  %2812 = add nuw nsw i32 %2811, %2810
  %2813 = icmp eq i32 %2812, 2
  %2814 = zext i1 %2813 to i8
  %2815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2814, i8* %2815, align 1, !tbaa !2450
  %2816 = load i64, i64* %PC
  %2817 = add i64 %2816, 553
  %2818 = load i64, i64* %PC
  %2819 = add i64 %2818, 6
  %2820 = load i64, i64* %PC
  %2821 = add i64 %2820, 6
  store i64 %2821, i64* %PC
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2823 = load i8, i8* %2822, align 1, !tbaa !2449
  %2824 = icmp ne i8 %2823, 0
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2826 = load i8, i8* %2825, align 1, !tbaa !2450
  %2827 = icmp ne i8 %2826, 0
  %2828 = xor i1 %2824, %2827
  %2829 = xor i1 %2828, true
  %2830 = zext i1 %2829 to i8
  store i8 %2830, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2832 = select i1 %2828, i64 %2819, i64 %2817
  store i64 %2832, i64* %2831, align 8, !tbaa !2428
  %2833 = load i8, i8* %BRANCH_TAKEN
  %2834 = icmp eq i8 %2833, 1
  %2835 = load i64, i64* %PC
  %2836 = add i64 %2835, 10
  store i64 %2836, i64* %PC
  br i1 %2834, label %block_400b60, label %block_40093d

block_400d39:                                     ; preds = %block_400d2f
  %2837 = load i64, i64* %PC
  %2838 = add i64 %2837, 10
  store i64 %2838, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RAX, align 8, !tbaa !2428
  %2839 = load i64, i64* %RBP
  %2840 = sub i64 %2839, 20
  %2841 = load i64, i64* %PC
  %2842 = add i64 %2841, 4
  store i64 %2842, i64* %PC
  %2843 = inttoptr i64 %2840 to i32*
  %2844 = load i32, i32* %2843
  %2845 = sext i32 %2844 to i64
  store i64 %2845, i64* %RCX, align 8, !tbaa !2428
  %2846 = load i64, i64* %RCX
  %2847 = load i64, i64* %PC
  %2848 = add i64 %2847, 4
  store i64 %2848, i64* %PC
  %2849 = sext i64 %2846 to i128
  %2850 = and i128 %2849, -18446744073709551616
  %2851 = zext i64 %2846 to i128
  %2852 = or i128 %2850, %2851
  %2853 = mul nsw i128 80, %2852
  %2854 = trunc i128 %2853 to i64
  store i64 %2854, i64* %RCX, align 8, !tbaa !2428
  %2855 = sext i64 %2854 to i128
  %2856 = icmp ne i128 %2855, %2853
  %2857 = zext i1 %2856 to i8
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2857, i8* %2858, align 1, !tbaa !2432
  %2859 = trunc i128 %2853 to i32
  %2860 = and i32 %2859, 255
  %2861 = call i32 @llvm.ctpop.i32(i32 %2860) #17
  %2862 = trunc i32 %2861 to i8
  %2863 = and i8 %2862, 1
  %2864 = xor i8 %2863, 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2864, i8* %2865, align 1, !tbaa !2446
  %2866 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2866, align 1, !tbaa !2447
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2867, align 1, !tbaa !2448
  %2868 = lshr i64 %2854, 63
  %2869 = trunc i64 %2868 to i8
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2869, i8* %2870, align 1, !tbaa !2449
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2857, i8* %2871, align 1, !tbaa !2450
  %2872 = load i64, i64* %RAX
  %2873 = load i64, i64* %RCX
  %2874 = load i64, i64* %PC
  %2875 = add i64 %2874, 3
  store i64 %2875, i64* %PC
  %2876 = add i64 %2873, %2872
  store i64 %2876, i64* %RAX, align 8, !tbaa !2428
  %2877 = icmp ult i64 %2876, %2872
  %2878 = icmp ult i64 %2876, %2873
  %2879 = or i1 %2877, %2878
  %2880 = zext i1 %2879 to i8
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2880, i8* %2881, align 1, !tbaa !2432
  %2882 = trunc i64 %2876 to i32
  %2883 = and i32 %2882, 255
  %2884 = call i32 @llvm.ctpop.i32(i32 %2883) #17
  %2885 = trunc i32 %2884 to i8
  %2886 = and i8 %2885, 1
  %2887 = xor i8 %2886, 1
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2887, i8* %2888, align 1, !tbaa !2446
  %2889 = xor i64 %2873, %2872
  %2890 = xor i64 %2889, %2876
  %2891 = lshr i64 %2890, 4
  %2892 = trunc i64 %2891 to i8
  %2893 = and i8 %2892, 1
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2893, i8* %2894, align 1, !tbaa !2447
  %2895 = icmp eq i64 %2876, 0
  %2896 = zext i1 %2895 to i8
  %2897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2896, i8* %2897, align 1, !tbaa !2448
  %2898 = lshr i64 %2876, 63
  %2899 = trunc i64 %2898 to i8
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2899, i8* %2900, align 1, !tbaa !2449
  %2901 = lshr i64 %2872, 63
  %2902 = lshr i64 %2873, 63
  %2903 = xor i64 %2898, %2901
  %2904 = xor i64 %2898, %2902
  %2905 = add nuw nsw i64 %2903, %2904
  %2906 = icmp eq i64 %2905, 2
  %2907 = zext i1 %2906 to i8
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2907, i8* %2908, align 1, !tbaa !2450
  %2909 = load i64, i64* %RBP
  %2910 = sub i64 %2909, 20
  %2911 = load i64, i64* %PC
  %2912 = add i64 %2911, 4
  store i64 %2912, i64* %PC
  %2913 = inttoptr i64 %2910 to i32*
  %2914 = load i32, i32* %2913
  %2915 = sext i32 %2914 to i64
  store i64 %2915, i64* %RCX, align 8, !tbaa !2428
  %2916 = load i64, i64* %RCX
  %2917 = mul i64 %2916, 8
  %2918 = add i64 %2917, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %2919 = load i64, i64* %PC
  %2920 = add i64 %2919, 8
  store i64 %2920, i64* %PC
  %2921 = inttoptr i64 %2918 to i64*
  %2922 = load i64, i64* %2921
  store i64 %2922, i64* %RSI, align 8, !tbaa !2428
  %2923 = load i64, i64* %RAX
  %2924 = load i64, i64* %PC
  %2925 = add i64 %2924, 3
  store i64 %2925, i64* %PC
  store i64 %2923, i64* %RDI, align 8, !tbaa !2428
  %2926 = load i64, i64* %PC
  %2927 = sub i64 %2926, 1885
  %2928 = load i64, i64* %PC
  %2929 = add i64 %2928, 5
  %2930 = load i64, i64* %PC
  %2931 = add i64 %2930, 5
  store i64 %2931, i64* %PC
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2933 = load i64, i64* %2932, align 8, !tbaa !2428
  %2934 = add i64 %2933, -8
  %2935 = inttoptr i64 %2934 to i64*
  store i64 %2929, i64* %2935
  store i64 %2934, i64* %2932, align 8, !tbaa !2428
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2927, i64* %2936, align 8, !tbaa !2428
  %2937 = load i64, i64* %PC
  %2938 = call %struct.Memory* @ext_602678_strcmp(%struct.State* %0, i64 %2937, %struct.Memory* %MEMORY.3)
  %2939 = load i32, i32* %EAX
  %2940 = zext i32 %2939 to i64
  %2941 = load i64, i64* %PC
  %2942 = add i64 %2941, 3
  store i64 %2942, i64* %PC
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2943, align 1, !tbaa !2432
  %2944 = and i32 %2939, 255
  %2945 = call i32 @llvm.ctpop.i32(i32 %2944) #17
  %2946 = trunc i32 %2945 to i8
  %2947 = and i8 %2946, 1
  %2948 = xor i8 %2947, 1
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2948, i8* %2949, align 1, !tbaa !2446
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2950, align 1, !tbaa !2447
  %2951 = icmp eq i32 %2939, 0
  %2952 = zext i1 %2951 to i8
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2952, i8* %2953, align 1, !tbaa !2448
  %2954 = lshr i32 %2939, 31
  %2955 = trunc i32 %2954 to i8
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2955, i8* %2956, align 1, !tbaa !2449
  %2957 = lshr i32 %2939, 31
  %2958 = xor i32 %2954, %2957
  %2959 = add nuw nsw i32 %2958, %2957
  %2960 = icmp eq i32 %2959, 2
  %2961 = zext i1 %2960 to i8
  %2962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2961, i8* %2962, align 1, !tbaa !2450
  %2963 = load i64, i64* %PC
  %2964 = add i64 %2963, 384
  %2965 = load i64, i64* %PC
  %2966 = add i64 %2965, 6
  %2967 = load i64, i64* %PC
  %2968 = add i64 %2967, 6
  store i64 %2968, i64* %PC
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2970 = load i8, i8* %2969, align 1, !tbaa !2448
  store i8 %2970, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2972 = icmp ne i8 %2970, 0
  %2973 = select i1 %2972, i64 %2964, i64 %2966
  store i64 %2973, i64* %2971, align 8, !tbaa !2428
  %2974 = load i8, i8* %BRANCH_TAKEN
  %2975 = icmp eq i8 %2974, 1
  br i1 %2975, label %block_400ee5, label %block_400d6b

block_400823:                                     ; preds = %block_400810
  %2976 = load i64, i64* %RBP
  %2977 = sub i64 %2976, 24
  %2978 = load i64, i64* %PC
  %2979 = add i64 %2978, 7
  store i64 %2979, i64* %PC
  %2980 = inttoptr i64 %2977 to i32*
  store i32 0, i32* %2980
  br label %block_40082a

block_400e1c:                                     ; preds = %block_400e10
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 737), i64* %RDI, align 8, !tbaa !2428
  %2981 = load i64, i64* %PC
  %2982 = add i64 %2981, 5
  store i64 %2982, i64* %PC
  store i64 94, i64* %RAX, align 8, !tbaa !2428
  %2983 = load i64, i64* %PC
  %2984 = add i64 %2983, 5
  store i64 %2984, i64* %PC
  store i64 32, i64* %RCX, align 8, !tbaa !2428
  %2985 = load i64, i64* %PC
  %2986 = add i64 %2985, 10
  store i64 %2986, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2987 = load i64, i64* %RBP
  %2988 = sub i64 %2987, 20
  %2989 = load i64, i64* %PC
  %2990 = add i64 %2989, 4
  store i64 %2990, i64* %PC
  %2991 = inttoptr i64 %2988 to i32*
  %2992 = load i32, i32* %2991
  %2993 = sext i32 %2992 to i64
  store i64 %2993, i64* %RSI, align 8, !tbaa !2428
  %2994 = load i64, i64* %RSI
  %2995 = mul i64 %2994, 8
  %2996 = add i64 %2995, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %2997 = load i64, i64* %PC
  %2998 = add i64 %2997, 8
  store i64 %2998, i64* %PC
  %2999 = inttoptr i64 %2996 to i64*
  %3000 = load i64, i64* %2999
  store i64 %3000, i64* %RSI, align 8, !tbaa !2428
  %3001 = load i64, i64* %RBP
  %3002 = sub i64 %3001, 24
  %3003 = load i64, i64* %PC
  %3004 = add i64 %3003, 4
  store i64 %3004, i64* %PC
  %3005 = inttoptr i64 %3002 to i32*
  %3006 = load i32, i32* %3005
  %3007 = sext i32 %3006 to i64
  store i64 %3007, i64* %R8, align 8, !tbaa !2428
  %3008 = bitcast i32* %R9D to i64*
  %3009 = load i64, i64* %RSI
  %3010 = load i64, i64* %R8
  %3011 = add i64 %3010, %3009
  %3012 = load i64, i64* %PC
  %3013 = add i64 %3012, 5
  store i64 %3013, i64* %PC
  %3014 = inttoptr i64 %3011 to i8*
  %3015 = load i8, i8* %3014
  %3016 = sext i8 %3015 to i64
  %3017 = and i64 %3016, 4294967295
  store i64 %3017, i64* %3008, align 8, !tbaa !2428
  %3018 = load i64, i64* %RBP
  %3019 = sub i64 %3018, 20
  %3020 = load i64, i64* %PC
  %3021 = add i64 %3020, 4
  store i64 %3021, i64* %PC
  %3022 = inttoptr i64 %3019 to i32*
  %3023 = load i32, i32* %3022
  %3024 = sext i32 %3023 to i64
  store i64 %3024, i64* %RSI, align 8, !tbaa !2428
  %3025 = load i64, i64* %RSI
  %3026 = load i64, i64* %PC
  %3027 = add i64 %3026, 4
  store i64 %3027, i64* %PC
  %3028 = sext i64 %3025 to i128
  %3029 = and i128 %3028, -18446744073709551616
  %3030 = zext i64 %3025 to i128
  %3031 = or i128 %3029, %3030
  %3032 = mul nsw i128 80, %3031
  %3033 = trunc i128 %3032 to i64
  store i64 %3033, i64* %RSI, align 8, !tbaa !2428
  %3034 = sext i64 %3033 to i128
  %3035 = icmp ne i128 %3034, %3032
  %3036 = zext i1 %3035 to i8
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3036, i8* %3037, align 1, !tbaa !2432
  %3038 = trunc i128 %3032 to i32
  %3039 = and i32 %3038, 255
  %3040 = call i32 @llvm.ctpop.i32(i32 %3039) #17
  %3041 = trunc i32 %3040 to i8
  %3042 = and i8 %3041, 1
  %3043 = xor i8 %3042, 1
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3043, i8* %3044, align 1, !tbaa !2446
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3045, align 1, !tbaa !2447
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3046, align 1, !tbaa !2448
  %3047 = lshr i64 %3033, 63
  %3048 = trunc i64 %3047 to i8
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3048, i8* %3049, align 1, !tbaa !2449
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3036, i8* %3050, align 1, !tbaa !2450
  %3051 = load i64, i64* %RDX
  %3052 = load i64, i64* %RSI
  %3053 = load i64, i64* %PC
  %3054 = add i64 %3053, 3
  store i64 %3054, i64* %PC
  %3055 = add i64 %3052, %3051
  store i64 %3055, i64* %RDX, align 8, !tbaa !2428
  %3056 = icmp ult i64 %3055, %3051
  %3057 = icmp ult i64 %3055, %3052
  %3058 = or i1 %3056, %3057
  %3059 = zext i1 %3058 to i8
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3059, i8* %3060, align 1, !tbaa !2432
  %3061 = trunc i64 %3055 to i32
  %3062 = and i32 %3061, 255
  %3063 = call i32 @llvm.ctpop.i32(i32 %3062) #17
  %3064 = trunc i32 %3063 to i8
  %3065 = and i8 %3064, 1
  %3066 = xor i8 %3065, 1
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3066, i8* %3067, align 1, !tbaa !2446
  %3068 = xor i64 %3052, %3051
  %3069 = xor i64 %3068, %3055
  %3070 = lshr i64 %3069, 4
  %3071 = trunc i64 %3070 to i8
  %3072 = and i8 %3071, 1
  %3073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3072, i8* %3073, align 1, !tbaa !2447
  %3074 = icmp eq i64 %3055, 0
  %3075 = zext i1 %3074 to i8
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3075, i8* %3076, align 1, !tbaa !2448
  %3077 = lshr i64 %3055, 63
  %3078 = trunc i64 %3077 to i8
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3078, i8* %3079, align 1, !tbaa !2449
  %3080 = lshr i64 %3051, 63
  %3081 = lshr i64 %3052, 63
  %3082 = xor i64 %3077, %3080
  %3083 = xor i64 %3077, %3081
  %3084 = add nuw nsw i64 %3082, %3083
  %3085 = icmp eq i64 %3084, 2
  %3086 = zext i1 %3085 to i8
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3086, i8* %3087, align 1, !tbaa !2450
  %3088 = load i64, i64* %RBP
  %3089 = sub i64 %3088, 24
  %3090 = load i64, i64* %PC
  %3091 = add i64 %3090, 4
  store i64 %3091, i64* %PC
  %3092 = inttoptr i64 %3089 to i32*
  %3093 = load i32, i32* %3092
  %3094 = sext i32 %3093 to i64
  store i64 %3094, i64* %RSI, align 8, !tbaa !2428
  %3095 = bitcast i32* %R10D to i64*
  %3096 = load i64, i64* %RDX
  %3097 = load i64, i64* %RSI
  %3098 = add i64 %3097, %3096
  %3099 = load i64, i64* %PC
  %3100 = add i64 %3099, 5
  store i64 %3100, i64* %PC
  %3101 = inttoptr i64 %3098 to i8*
  %3102 = load i8, i8* %3101
  %3103 = sext i8 %3102 to i64
  %3104 = and i64 %3103, 4294967295
  store i64 %3104, i64* %3095, align 8, !tbaa !2428
  %3105 = load i32, i32* %R9D
  %3106 = zext i32 %3105 to i64
  %3107 = load i32, i32* %R10D
  %3108 = zext i32 %3107 to i64
  %3109 = load i64, i64* %PC
  %3110 = add i64 %3109, 3
  store i64 %3110, i64* %PC
  %3111 = sub i32 %3105, %3107
  %3112 = icmp ult i32 %3105, %3107
  %3113 = zext i1 %3112 to i8
  %3114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3113, i8* %3114, align 1, !tbaa !2432
  %3115 = and i32 %3111, 255
  %3116 = call i32 @llvm.ctpop.i32(i32 %3115) #17
  %3117 = trunc i32 %3116 to i8
  %3118 = and i8 %3117, 1
  %3119 = xor i8 %3118, 1
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3119, i8* %3120, align 1, !tbaa !2446
  %3121 = xor i64 %3108, %3106
  %3122 = trunc i64 %3121 to i32
  %3123 = xor i32 %3122, %3111
  %3124 = lshr i32 %3123, 4
  %3125 = trunc i32 %3124 to i8
  %3126 = and i8 %3125, 1
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3126, i8* %3127, align 1, !tbaa !2447
  %3128 = icmp eq i32 %3111, 0
  %3129 = zext i1 %3128 to i8
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3129, i8* %3130, align 1, !tbaa !2448
  %3131 = lshr i32 %3111, 31
  %3132 = trunc i32 %3131 to i8
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3132, i8* %3133, align 1, !tbaa !2449
  %3134 = lshr i32 %3105, 31
  %3135 = lshr i32 %3107, 31
  %3136 = xor i32 %3135, %3134
  %3137 = xor i32 %3131, %3134
  %3138 = add nuw nsw i32 %3137, %3136
  %3139 = icmp eq i32 %3138, 2
  %3140 = zext i1 %3139 to i8
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3140, i8* %3141, align 1, !tbaa !2450
  %3142 = load i32, i32* %ECX
  %3143 = zext i32 %3142 to i64
  %3144 = load i64, i64* %PC
  %3145 = add i64 %3144, 3
  store i64 %3145, i64* %PC
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3147 = load i8, i8* %3146, align 1, !tbaa !2448
  %3148 = icmp ne i8 %3147, 0
  %3149 = load i64, i64* %RAX, align 8, !tbaa !2428
  %3150 = select i1 %3148, i64 %3143, i64 %3149
  %3151 = and i64 %3150, 4294967295
  store i64 %3151, i64* %RAX, align 8, !tbaa !2428
  %3152 = load i32, i32* %EAX
  %3153 = zext i32 %3152 to i64
  %3154 = load i64, i64* %PC
  %3155 = add i64 %3154, 2
  store i64 %3155, i64* %PC
  %3156 = and i64 %3153, 4294967295
  store i64 %3156, i64* %RSI, align 8, !tbaa !2428
  %3157 = load i64, i64* %PC
  %3158 = add i64 %3157, 2
  store i64 %3158, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3159 = load i64, i64* %PC
  %3160 = sub i64 %3159, 2189
  %3161 = load i64, i64* %PC
  %3162 = add i64 %3161, 5
  %3163 = load i64, i64* %PC
  %3164 = add i64 %3163, 5
  store i64 %3164, i64* %PC
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3166 = load i64, i64* %3165, align 8, !tbaa !2428
  %3167 = add i64 %3166, -8
  %3168 = inttoptr i64 %3167 to i64*
  store i64 %3162, i64* %3168
  store i64 %3167, i64* %3165, align 8, !tbaa !2428
  %3169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3160, i64* %3169, align 8, !tbaa !2428
  %3170 = load i64, i64* %PC
  %3171 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3170, %struct.Memory* %MEMORY.1)
  %3172 = load i64, i64* %PC
  %3173 = add i64 %3172, 10
  store i64 %3173, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3174 = load i64, i64* %RBP
  %3175 = sub i64 %3174, 20
  %3176 = load i64, i64* %PC
  %3177 = add i64 %3176, 4
  store i64 %3177, i64* %PC
  %3178 = inttoptr i64 %3175 to i32*
  %3179 = load i32, i32* %3178
  %3180 = sext i32 %3179 to i64
  store i64 %3180, i64* %RDI, align 8, !tbaa !2428
  %3181 = load i64, i64* %RDI
  %3182 = mul i64 %3181, 8
  %3183 = add i64 %3182, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %3184 = load i64, i64* %PC
  %3185 = add i64 %3184, 8
  store i64 %3185, i64* %PC
  %3186 = inttoptr i64 %3183 to i64*
  %3187 = load i64, i64* %3186
  store i64 %3187, i64* %RDI, align 8, !tbaa !2428
  %3188 = load i64, i64* %RBP
  %3189 = sub i64 %3188, 24
  %3190 = load i64, i64* %PC
  %3191 = add i64 %3190, 4
  store i64 %3191, i64* %PC
  %3192 = inttoptr i64 %3189 to i32*
  %3193 = load i32, i32* %3192
  %3194 = sext i32 %3193 to i64
  store i64 %3194, i64* %R8, align 8, !tbaa !2428
  %3195 = load i64, i64* %RDI
  %3196 = load i64, i64* %R8
  %3197 = add i64 %3196, %3195
  %3198 = load i64, i64* %PC
  %3199 = add i64 %3198, 5
  store i64 %3199, i64* %PC
  %3200 = inttoptr i64 %3197 to i8*
  %3201 = load i8, i8* %3200
  %3202 = sext i8 %3201 to i64
  %3203 = and i64 %3202, 4294967295
  store i64 %3203, i64* %RCX, align 8, !tbaa !2428
  %3204 = load i64, i64* %RBP
  %3205 = sub i64 %3204, 20
  %3206 = load i64, i64* %PC
  %3207 = add i64 %3206, 4
  store i64 %3207, i64* %PC
  %3208 = inttoptr i64 %3205 to i32*
  %3209 = load i32, i32* %3208
  %3210 = sext i32 %3209 to i64
  store i64 %3210, i64* %RDI, align 8, !tbaa !2428
  %3211 = load i64, i64* %RDI
  %3212 = load i64, i64* %PC
  %3213 = add i64 %3212, 4
  store i64 %3213, i64* %PC
  %3214 = sext i64 %3211 to i128
  %3215 = and i128 %3214, -18446744073709551616
  %3216 = zext i64 %3211 to i128
  %3217 = or i128 %3215, %3216
  %3218 = mul nsw i128 80, %3217
  %3219 = trunc i128 %3218 to i64
  store i64 %3219, i64* %RDI, align 8, !tbaa !2428
  %3220 = sext i64 %3219 to i128
  %3221 = icmp ne i128 %3220, %3218
  %3222 = zext i1 %3221 to i8
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3222, i8* %3223, align 1, !tbaa !2432
  %3224 = trunc i128 %3218 to i32
  %3225 = and i32 %3224, 255
  %3226 = call i32 @llvm.ctpop.i32(i32 %3225) #17
  %3227 = trunc i32 %3226 to i8
  %3228 = and i8 %3227, 1
  %3229 = xor i8 %3228, 1
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3229, i8* %3230, align 1, !tbaa !2446
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3231, align 1, !tbaa !2447
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3232, align 1, !tbaa !2448
  %3233 = lshr i64 %3219, 63
  %3234 = trunc i64 %3233 to i8
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3234, i8* %3235, align 1, !tbaa !2449
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3222, i8* %3236, align 1, !tbaa !2450
  %3237 = load i64, i64* %RDX
  %3238 = load i64, i64* %RDI
  %3239 = load i64, i64* %PC
  %3240 = add i64 %3239, 3
  store i64 %3240, i64* %PC
  %3241 = add i64 %3238, %3237
  store i64 %3241, i64* %RDX, align 8, !tbaa !2428
  %3242 = icmp ult i64 %3241, %3237
  %3243 = icmp ult i64 %3241, %3238
  %3244 = or i1 %3242, %3243
  %3245 = zext i1 %3244 to i8
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3245, i8* %3246, align 1, !tbaa !2432
  %3247 = trunc i64 %3241 to i32
  %3248 = and i32 %3247, 255
  %3249 = call i32 @llvm.ctpop.i32(i32 %3248) #17
  %3250 = trunc i32 %3249 to i8
  %3251 = and i8 %3250, 1
  %3252 = xor i8 %3251, 1
  %3253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3252, i8* %3253, align 1, !tbaa !2446
  %3254 = xor i64 %3238, %3237
  %3255 = xor i64 %3254, %3241
  %3256 = lshr i64 %3255, 4
  %3257 = trunc i64 %3256 to i8
  %3258 = and i8 %3257, 1
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3258, i8* %3259, align 1, !tbaa !2447
  %3260 = icmp eq i64 %3241, 0
  %3261 = zext i1 %3260 to i8
  %3262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3261, i8* %3262, align 1, !tbaa !2448
  %3263 = lshr i64 %3241, 63
  %3264 = trunc i64 %3263 to i8
  %3265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3264, i8* %3265, align 1, !tbaa !2449
  %3266 = lshr i64 %3237, 63
  %3267 = lshr i64 %3238, 63
  %3268 = xor i64 %3263, %3266
  %3269 = xor i64 %3263, %3267
  %3270 = add nuw nsw i64 %3268, %3269
  %3271 = icmp eq i64 %3270, 2
  %3272 = zext i1 %3271 to i8
  %3273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3272, i8* %3273, align 1, !tbaa !2450
  %3274 = load i64, i64* %RBP
  %3275 = sub i64 %3274, 24
  %3276 = load i64, i64* %PC
  %3277 = add i64 %3276, 4
  store i64 %3277, i64* %PC
  %3278 = inttoptr i64 %3275 to i32*
  %3279 = load i32, i32* %3278
  %3280 = sext i32 %3279 to i64
  store i64 %3280, i64* %RDI, align 8, !tbaa !2428
  %3281 = load i64, i64* %RDX
  %3282 = load i64, i64* %RDI
  %3283 = add i64 %3282, %3281
  %3284 = load i64, i64* %PC
  %3285 = add i64 %3284, 4
  store i64 %3285, i64* %PC
  %3286 = inttoptr i64 %3283 to i8*
  %3287 = load i8, i8* %3286
  %3288 = sext i8 %3287 to i64
  %3289 = and i64 %3288, 4294967295
  store i64 %3289, i64* %RSI, align 8, !tbaa !2428
  %3290 = load i32, i32* %ECX
  %3291 = zext i32 %3290 to i64
  %3292 = load i32, i32* %ESI
  %3293 = zext i32 %3292 to i64
  %3294 = load i64, i64* %PC
  %3295 = add i64 %3294, 2
  store i64 %3295, i64* %PC
  %3296 = sub i32 %3290, %3292
  %3297 = icmp ult i32 %3290, %3292
  %3298 = zext i1 %3297 to i8
  %3299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3298, i8* %3299, align 1, !tbaa !2432
  %3300 = and i32 %3296, 255
  %3301 = call i32 @llvm.ctpop.i32(i32 %3300) #17
  %3302 = trunc i32 %3301 to i8
  %3303 = and i8 %3302, 1
  %3304 = xor i8 %3303, 1
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3304, i8* %3305, align 1, !tbaa !2446
  %3306 = xor i64 %3293, %3291
  %3307 = trunc i64 %3306 to i32
  %3308 = xor i32 %3307, %3296
  %3309 = lshr i32 %3308, 4
  %3310 = trunc i32 %3309 to i8
  %3311 = and i8 %3310, 1
  %3312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3311, i8* %3312, align 1, !tbaa !2447
  %3313 = icmp eq i32 %3296, 0
  %3314 = zext i1 %3313 to i8
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3314, i8* %3315, align 1, !tbaa !2448
  %3316 = lshr i32 %3296, 31
  %3317 = trunc i32 %3316 to i8
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3317, i8* %3318, align 1, !tbaa !2449
  %3319 = lshr i32 %3290, 31
  %3320 = lshr i32 %3292, 31
  %3321 = xor i32 %3320, %3319
  %3322 = xor i32 %3316, %3319
  %3323 = add nuw nsw i32 %3322, %3321
  %3324 = icmp eq i32 %3323, 2
  %3325 = zext i1 %3324 to i8
  %3326 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3325, i8* %3326, align 1, !tbaa !2450
  %3327 = load i64, i64* %RBP
  %3328 = sub i64 %3327, 180
  %3329 = load i32, i32* %EAX
  %3330 = zext i32 %3329 to i64
  %3331 = load i64, i64* %PC
  %3332 = add i64 %3331, 6
  store i64 %3332, i64* %PC
  %3333 = inttoptr i64 %3328 to i32*
  store i32 %3329, i32* %3333
  %3334 = load i64, i64* %PC
  %3335 = add i64 %3334, 15
  %3336 = load i64, i64* %PC
  %3337 = add i64 %3336, 6
  %3338 = load i64, i64* %PC
  %3339 = add i64 %3338, 6
  store i64 %3339, i64* %PC
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3341 = load i8, i8* %3340, align 1, !tbaa !2448
  store i8 %3341, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3343 = icmp ne i8 %3341, 0
  %3344 = select i1 %3343, i64 %3335, i64 %3337
  store i64 %3344, i64* %3342, align 8, !tbaa !2428
  %3345 = load i8, i8* %BRANCH_TAKEN
  %3346 = icmp eq i8 %3345, 1
  br i1 %3346, label %block_400ebb, label %block_400eb2

block_40089b:                                     ; preds = %block_400810
  %3347 = load i64, i64* %PC
  %3348 = add i64 %3347, 10
  store i64 %3348, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 120), i64* %RDI, align 8, !tbaa !2428
  %3349 = load i64, i64* %PC
  %3350 = add i64 %3349, 2
  store i64 %3350, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3351 = load i64, i64* %PC
  %3352 = sub i64 %3351, 711
  %3353 = load i64, i64* %PC
  %3354 = add i64 %3353, 5
  %3355 = load i64, i64* %PC
  %3356 = add i64 %3355, 5
  store i64 %3356, i64* %PC
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3358 = load i64, i64* %3357, align 8, !tbaa !2428
  %3359 = add i64 %3358, -8
  %3360 = inttoptr i64 %3359 to i64*
  store i64 %3354, i64* %3360
  store i64 %3359, i64* %3357, align 8, !tbaa !2428
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3352, i64* %3361, align 8, !tbaa !2428
  %3362 = load i64, i64* %PC
  %3363 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3362, %struct.Memory* %MEMORY.7)
  %3364 = load i64, i64* %PC
  %3365 = add i64 %3364, 10
  store i64 %3365, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 174), i64* %RDI, align 8, !tbaa !2428
  %3366 = load i64, i64* %PC
  %3367 = add i64 %3366, 7
  store i64 %3367, i64* %PC
  %3368 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %3369 = zext i32 %3368 to i64
  store i64 %3369, i64* %RSI, align 8, !tbaa !2428
  %3370 = load i64, i64* %RBP
  %3371 = sub i64 %3370, 52
  %3372 = load i32, i32* %EAX
  %3373 = zext i32 %3372 to i64
  %3374 = load i64, i64* %PC
  %3375 = add i64 %3374, 3
  store i64 %3375, i64* %PC
  %3376 = inttoptr i64 %3371 to i32*
  store i32 %3372, i32* %3376
  %3377 = load i64, i64* %PC
  %3378 = add i64 %3377, 2
  store i64 %3378, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3379 = load i64, i64* %PC
  %3380 = sub i64 %3379, 738
  %3381 = load i64, i64* %PC
  %3382 = add i64 %3381, 5
  %3383 = load i64, i64* %PC
  %3384 = add i64 %3383, 5
  store i64 %3384, i64* %PC
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3386 = load i64, i64* %3385, align 8, !tbaa !2428
  %3387 = add i64 %3386, -8
  %3388 = inttoptr i64 %3387 to i64*
  store i64 %3382, i64* %3388
  store i64 %3387, i64* %3385, align 8, !tbaa !2428
  %3389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3380, i64* %3389, align 8, !tbaa !2428
  %3390 = load i64, i64* %PC
  %3391 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3390, %struct.Memory* %3363)
  %3392 = load i64, i64* %PC
  %3393 = add i64 %3392, 10
  store i64 %3393, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 232), i64* %RDI, align 8, !tbaa !2428
  %3394 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3395 = load i64, i64* %PC
  %3396 = add i64 %3395, 8
  store i64 %3396, i64* %PC
  %3397 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 80) to double*)
  %3398 = bitcast i8* %3394 to double*
  store double %3397, double* %3398, align 1, !tbaa !2451
  %3399 = getelementptr inbounds i8, i8* %3394, i64 8
  %3400 = bitcast i8* %3399 to double*
  store double 0.000000e+00, double* %3400, align 1, !tbaa !2451
  %3401 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3402 = load i64, i64* %PC
  %3403 = add i64 %3402, 9
  store i64 %3403, i64* %PC
  %3404 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %3405 = sitofp i32 %3404 to double
  %3406 = bitcast i8* %3401 to double*
  store double %3405, double* %3406, align 1, !tbaa !2451
  %3407 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3408 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3409 = bitcast %union.vec128_t* %XMM0 to i8*
  %3410 = load i64, i64* %PC
  %3411 = add i64 %3410, 4
  store i64 %3411, i64* %PC
  %3412 = bitcast i8* %3408 to double*
  %3413 = load double, double* %3412, align 1
  %3414 = getelementptr inbounds i8, i8* %3408, i64 8
  %3415 = bitcast i8* %3414 to i64*
  %3416 = load i64, i64* %3415, align 1
  %3417 = bitcast i8* %3409 to double*
  %3418 = load double, double* %3417, align 1
  %3419 = fdiv double %3413, %3418
  %3420 = bitcast i8* %3407 to double*
  store double %3419, double* %3420, align 1, !tbaa !2451
  %3421 = getelementptr inbounds i8, i8* %3407, i64 8
  %3422 = bitcast i8* %3421 to i64*
  store i64 %3416, i64* %3422, align 1, !tbaa !2451
  %3423 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3424 = bitcast %union.vec128_t* %XMM1 to i8*
  %3425 = load i64, i64* %PC
  %3426 = add i64 %3425, 3
  store i64 %3426, i64* %PC
  %3427 = bitcast i8* %3424 to <2 x i32>*
  %3428 = load <2 x i32>, <2 x i32>* %3427, align 1
  %3429 = getelementptr inbounds i8, i8* %3424, i64 8
  %3430 = bitcast i8* %3429 to <2 x i32>*
  %3431 = load <2 x i32>, <2 x i32>* %3430, align 1
  %3432 = extractelement <2 x i32> %3428, i32 0
  %3433 = bitcast i8* %3423 to i32*
  store i32 %3432, i32* %3433, align 1, !tbaa !2454
  %3434 = extractelement <2 x i32> %3428, i32 1
  %3435 = getelementptr inbounds i8, i8* %3423, i64 4
  %3436 = bitcast i8* %3435 to i32*
  store i32 %3434, i32* %3436, align 1, !tbaa !2454
  %3437 = extractelement <2 x i32> %3431, i32 0
  %3438 = getelementptr inbounds i8, i8* %3423, i64 8
  %3439 = bitcast i8* %3438 to i32*
  store i32 %3437, i32* %3439, align 1, !tbaa !2454
  %3440 = extractelement <2 x i32> %3431, i32 1
  %3441 = getelementptr inbounds i8, i8* %3423, i64 12
  %3442 = bitcast i8* %3441 to i32*
  store i32 %3440, i32* %3442, align 1, !tbaa !2454
  %3443 = load i64, i64* %RBP
  %3444 = sub i64 %3443, 56
  %3445 = load i32, i32* %EAX
  %3446 = zext i32 %3445 to i64
  %3447 = load i64, i64* %PC
  %3448 = add i64 %3447, 3
  store i64 %3448, i64* %PC
  %3449 = inttoptr i64 %3444 to i32*
  store i32 %3445, i32* %3449
  %3450 = load i64, i64* %PC
  %3451 = add i64 %3450, 2
  store i64 %3451, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %3452 = load i64, i64* %PC
  %3453 = sub i64 %3452, 782
  %3454 = load i64, i64* %PC
  %3455 = add i64 %3454, 5
  %3456 = load i64, i64* %PC
  %3457 = add i64 %3456, 5
  store i64 %3457, i64* %PC
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3459 = load i64, i64* %3458, align 8, !tbaa !2428
  %3460 = add i64 %3459, -8
  %3461 = inttoptr i64 %3460 to i64*
  store i64 %3455, i64* %3461
  store i64 %3460, i64* %3458, align 8, !tbaa !2428
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3453, i64* %3462, align 8, !tbaa !2428
  %3463 = load i64, i64* %PC
  %3464 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3463, %struct.Memory* %3391)
  %3465 = load i64, i64* %PC
  %3466 = add i64 %3465, 10
  store i64 %3466, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 288), i64* %RDI, align 8, !tbaa !2428
  %3467 = load i64, i64* %RBP
  %3468 = sub i64 %3467, 60
  %3469 = load i32, i32* %EAX
  %3470 = zext i32 %3469 to i64
  %3471 = load i64, i64* %PC
  %3472 = add i64 %3471, 3
  store i64 %3472, i64* %PC
  %3473 = inttoptr i64 %3468 to i32*
  store i32 %3469, i32* %3473
  %3474 = load i64, i64* %PC
  %3475 = add i64 %3474, 2
  store i64 %3475, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3476 = load i64, i64* %PC
  %3477 = sub i64 %3476, 802
  %3478 = load i64, i64* %PC
  %3479 = add i64 %3478, 5
  %3480 = load i64, i64* %PC
  %3481 = add i64 %3480, 5
  store i64 %3481, i64* %PC
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3483 = load i64, i64* %3482, align 8, !tbaa !2428
  %3484 = add i64 %3483, -8
  %3485 = inttoptr i64 %3484 to i64*
  store i64 %3479, i64* %3485
  store i64 %3484, i64* %3482, align 8, !tbaa !2428
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3477, i64* %3486, align 8, !tbaa !2428
  %3487 = load i64, i64* %PC
  %3488 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3487, %struct.Memory* %3464)
  %3489 = load i64, i64* %PC
  %3490 = add i64 %3489, 10
  store i64 %3490, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 348), i64* %RDI, align 8, !tbaa !2428
  %3491 = load i64, i64* %RBP
  %3492 = sub i64 %3491, 64
  %3493 = load i32, i32* %EAX
  %3494 = zext i32 %3493 to i64
  %3495 = load i64, i64* %PC
  %3496 = add i64 %3495, 3
  store i64 %3496, i64* %PC
  %3497 = inttoptr i64 %3492 to i32*
  store i32 %3493, i32* %3497
  %3498 = load i64, i64* %PC
  %3499 = add i64 %3498, 2
  store i64 %3499, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %3500 = load i64, i64* %PC
  %3501 = sub i64 %3500, 822
  %3502 = load i64, i64* %PC
  %3503 = add i64 %3502, 5
  %3504 = load i64, i64* %PC
  %3505 = add i64 %3504, 5
  store i64 %3505, i64* %PC
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3507 = load i64, i64* %3506, align 8, !tbaa !2428
  %3508 = add i64 %3507, -8
  %3509 = inttoptr i64 %3508 to i64*
  store i64 %3503, i64* %3509
  store i64 %3508, i64* %3506, align 8, !tbaa !2428
  %3510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3501, i64* %3510, align 8, !tbaa !2428
  %3511 = load i64, i64* %PC
  %3512 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %3511, %struct.Memory* %3488)
  %3513 = load i64, i64* %PC
  %3514 = add i64 %3513, 11
  store i64 %3514, i64* %PC
  store i32 0, i32* bitcast (%itercount_type* @itercount to i32*)
  %3515 = load i64, i64* %RBP
  %3516 = sub i64 %3515, 68
  %3517 = load i32, i32* %EAX
  %3518 = zext i32 %3517 to i64
  %3519 = load i64, i64* %PC
  %3520 = add i64 %3519, 3
  store i64 %3520, i64* %PC
  %3521 = inttoptr i64 %3516 to i32*
  store i32 %3517, i32* %3521
  br label %block_400929

block_400810:                                     ; preds = %block_400888, %block_400740
  %MEMORY.7 = phi %struct.Memory* [ %2, %block_400740 ], [ %MEMORY.4, %block_400888 ]
  %3522 = load i64, i64* %RBP
  %3523 = sub i64 %3522, 20
  %3524 = load i64, i64* %PC
  %3525 = add i64 %3524, 3
  store i64 %3525, i64* %PC
  %3526 = inttoptr i64 %3523 to i32*
  %3527 = load i32, i32* %3526
  %3528 = zext i32 %3527 to i64
  store i64 %3528, i64* %RAX, align 8, !tbaa !2428
  %3529 = load i64, i64* %PC
  %3530 = add i64 %3529, 8
  store i64 %3530, i64* %PC
  %3531 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %3532 = sext i16 %3531 to i64
  %3533 = and i64 %3532, 4294967295
  store i64 %3533, i64* %RCX, align 8, !tbaa !2428
  %3534 = load i32, i32* %EAX
  %3535 = zext i32 %3534 to i64
  %3536 = load i32, i32* %ECX
  %3537 = zext i32 %3536 to i64
  %3538 = load i64, i64* %PC
  %3539 = add i64 %3538, 2
  store i64 %3539, i64* %PC
  %3540 = sub i32 %3534, %3536
  %3541 = icmp ult i32 %3534, %3536
  %3542 = zext i1 %3541 to i8
  %3543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3542, i8* %3543, align 1, !tbaa !2432
  %3544 = and i32 %3540, 255
  %3545 = call i32 @llvm.ctpop.i32(i32 %3544) #17
  %3546 = trunc i32 %3545 to i8
  %3547 = and i8 %3546, 1
  %3548 = xor i8 %3547, 1
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3548, i8* %3549, align 1, !tbaa !2446
  %3550 = xor i64 %3537, %3535
  %3551 = trunc i64 %3550 to i32
  %3552 = xor i32 %3551, %3540
  %3553 = lshr i32 %3552, 4
  %3554 = trunc i32 %3553 to i8
  %3555 = and i8 %3554, 1
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3555, i8* %3556, align 1, !tbaa !2447
  %3557 = icmp eq i32 %3540, 0
  %3558 = zext i1 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3558, i8* %3559, align 1, !tbaa !2448
  %3560 = lshr i32 %3540, 31
  %3561 = trunc i32 %3560 to i8
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3561, i8* %3562, align 1, !tbaa !2449
  %3563 = lshr i32 %3534, 31
  %3564 = lshr i32 %3536, 31
  %3565 = xor i32 %3564, %3563
  %3566 = xor i32 %3560, %3563
  %3567 = add nuw nsw i32 %3566, %3565
  %3568 = icmp eq i32 %3567, 2
  %3569 = zext i1 %3568 to i8
  %3570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3569, i8* %3570, align 1, !tbaa !2450
  %3571 = load i64, i64* %PC
  %3572 = add i64 %3571, 126
  %3573 = load i64, i64* %PC
  %3574 = add i64 %3573, 6
  %3575 = load i64, i64* %PC
  %3576 = add i64 %3575, 6
  store i64 %3576, i64* %PC
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3578 = load i8, i8* %3577, align 1, !tbaa !2449
  %3579 = icmp ne i8 %3578, 0
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3581 = load i8, i8* %3580, align 1, !tbaa !2450
  %3582 = icmp ne i8 %3581, 0
  %3583 = xor i1 %3579, %3582
  %3584 = xor i1 %3583, true
  %3585 = zext i1 %3584 to i8
  store i8 %3585, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3587 = select i1 %3583, i64 %3574, i64 %3572
  store i64 %3587, i64* %3586, align 8, !tbaa !2428
  %3588 = load i8, i8* %BRANCH_TAKEN
  %3589 = icmp eq i8 %3588, 1
  br i1 %3589, label %block_40089b, label %block_400823

block_400ef8:                                     ; preds = %block_400d2f
  %3590 = load i64, i64* %RBP
  %3591 = sub i64 %3590, 32
  %3592 = load i64, i64* %PC
  %3593 = add i64 %3592, 4
  store i64 %3593, i64* %PC
  %3594 = inttoptr i64 %3591 to i32*
  %3595 = load i32, i32* %3594
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3596, align 1, !tbaa !2432
  %3597 = and i32 %3595, 255
  %3598 = call i32 @llvm.ctpop.i32(i32 %3597) #17
  %3599 = trunc i32 %3598 to i8
  %3600 = and i8 %3599, 1
  %3601 = xor i8 %3600, 1
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3601, i8* %3602, align 1, !tbaa !2446
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3603, align 1, !tbaa !2447
  %3604 = icmp eq i32 %3595, 0
  %3605 = zext i1 %3604 to i8
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3605, i8* %3606, align 1, !tbaa !2448
  %3607 = lshr i32 %3595, 31
  %3608 = trunc i32 %3607 to i8
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3608, i8* %3609, align 1, !tbaa !2449
  %3610 = lshr i32 %3595, 31
  %3611 = xor i32 %3607, %3610
  %3612 = add nuw nsw i32 %3611, %3610
  %3613 = icmp eq i32 %3612, 2
  %3614 = zext i1 %3613 to i8
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3614, i8* %3615, align 1, !tbaa !2450
  %3616 = load i64, i64* %PC
  %3617 = add i64 %3616, 68
  %3618 = load i64, i64* %PC
  %3619 = add i64 %3618, 6
  %3620 = load i64, i64* %PC
  %3621 = add i64 %3620, 6
  store i64 %3621, i64* %PC
  %3622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3623 = load i8, i8* %3622, align 1, !tbaa !2448
  %3624 = icmp ne i8 %3623, 0
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3626 = load i8, i8* %3625, align 1, !tbaa !2449
  %3627 = icmp ne i8 %3626, 0
  %3628 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3629 = load i8, i8* %3628, align 1, !tbaa !2450
  %3630 = icmp ne i8 %3629, 0
  %3631 = xor i1 %3627, %3630
  %3632 = or i1 %3624, %3631
  %3633 = zext i1 %3632 to i8
  store i8 %3633, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3635 = select i1 %3632, i64 %3617, i64 %3619
  store i64 %3635, i64* %3634, align 8, !tbaa !2428
  %3636 = load i8, i8* %BRANCH_TAKEN
  %3637 = icmp eq i8 %3636, 1
  %3638 = load i64, i64* %PC
  %3639 = add i64 %3638, 10
  store i64 %3639, i64* %PC
  br i1 %3637, label %block_400f40, label %block_400f02

block_400947:                                     ; preds = %block_40093d, %block_400958
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.6, %block_40093d ], [ %1933, %block_400958 ]
  %3640 = load i64, i64* %PC
  %3641 = add i64 %3640, 8
  store i64 %3641, i64* %PC
  %3642 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %3643 = sext i16 %3642 to i64
  %3644 = and i64 %3643, 4294967295
  store i64 %3644, i64* %RAX, align 8, !tbaa !2428
  %3645 = load i32, i32* %EAX
  %3646 = zext i32 %3645 to i64
  %3647 = load i64, i64* %PC
  %3648 = add i64 %3647, 3
  store i64 %3648, i64* %PC
  %3649 = sub i32 %3645, 1
  %3650 = icmp ult i32 %3645, 1
  %3651 = zext i1 %3650 to i8
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3651, i8* %3652, align 1, !tbaa !2432
  %3653 = and i32 %3649, 255
  %3654 = call i32 @llvm.ctpop.i32(i32 %3653) #17
  %3655 = trunc i32 %3654 to i8
  %3656 = and i8 %3655, 1
  %3657 = xor i8 %3656, 1
  %3658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3657, i8* %3658, align 1, !tbaa !2446
  %3659 = xor i64 1, %3646
  %3660 = trunc i64 %3659 to i32
  %3661 = xor i32 %3660, %3649
  %3662 = lshr i32 %3661, 4
  %3663 = trunc i32 %3662 to i8
  %3664 = and i8 %3663, 1
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3664, i8* %3665, align 1, !tbaa !2447
  %3666 = icmp eq i32 %3649, 0
  %3667 = zext i1 %3666 to i8
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3667, i8* %3668, align 1, !tbaa !2448
  %3669 = lshr i32 %3649, 31
  %3670 = trunc i32 %3669 to i8
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3670, i8* %3671, align 1, !tbaa !2449
  %3672 = lshr i32 %3645, 31
  %3673 = xor i32 %3669, %3672
  %3674 = add nuw nsw i32 %3673, %3672
  %3675 = icmp eq i32 %3674, 2
  %3676 = zext i1 %3675 to i8
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3676, i8* %3677, align 1, !tbaa !2450
  %3678 = load i64, i64* %PC
  %3679 = add i64 %3678, 140
  %3680 = load i64, i64* %PC
  %3681 = add i64 %3680, 6
  %3682 = load i64, i64* %PC
  %3683 = add i64 %3682, 6
  store i64 %3683, i64* %PC
  %3684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3685 = load i8, i8* %3684, align 1, !tbaa !2448
  %3686 = icmp eq i8 %3685, 0
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3688 = load i8, i8* %3687, align 1, !tbaa !2449
  %3689 = icmp ne i8 %3688, 0
  %3690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3691 = load i8, i8* %3690, align 1, !tbaa !2450
  %3692 = icmp ne i8 %3691, 0
  %3693 = xor i1 %3689, %3692
  %3694 = xor i1 %3693, true
  %3695 = and i1 %3686, %3694
  %3696 = zext i1 %3695 to i8
  store i8 %3696, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3698 = select i1 %3695, i64 %3679, i64 %3681
  store i64 %3698, i64* %3697, align 8, !tbaa !2428
  %3699 = load i8, i8* %BRANCH_TAKEN
  %3700 = icmp eq i8 %3699, 1
  %3701 = load i64, i64* %PC
  %3702 = add i64 %3701, 5
  store i64 %3702, i64* %PC
  br i1 %3700, label %block_4009de, label %block_400958

block_400888:                                     ; preds = %block_40082a
  %3703 = add i64 %2716, 5
  %3704 = load i64, i64* %PC
  %3705 = add i64 %3704, 5
  store i64 %3705, i64* %PC
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3703, i64* %3706, align 8, !tbaa !2428
  %3707 = load i64, i64* %RBP
  %3708 = sub i64 %3707, 20
  %3709 = load i64, i64* %PC
  %3710 = add i64 %3709, 3
  store i64 %3710, i64* %PC
  %3711 = inttoptr i64 %3708 to i32*
  %3712 = load i32, i32* %3711
  %3713 = zext i32 %3712 to i64
  store i64 %3713, i64* %RAX, align 8, !tbaa !2428
  %3714 = load i64, i64* %RAX
  %3715 = load i64, i64* %PC
  %3716 = add i64 %3715, 3
  store i64 %3716, i64* %PC
  %3717 = trunc i64 %3714 to i32
  %3718 = add i32 1, %3717
  %3719 = zext i32 %3718 to i64
  store i64 %3719, i64* %RAX, align 8, !tbaa !2428
  %3720 = icmp ult i32 %3718, %3717
  %3721 = icmp ult i32 %3718, 1
  %3722 = or i1 %3720, %3721
  %3723 = zext i1 %3722 to i8
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3723, i8* %3724, align 1, !tbaa !2432
  %3725 = and i32 %3718, 255
  %3726 = call i32 @llvm.ctpop.i32(i32 %3725) #17
  %3727 = trunc i32 %3726 to i8
  %3728 = and i8 %3727, 1
  %3729 = xor i8 %3728, 1
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3729, i8* %3730, align 1, !tbaa !2446
  %3731 = xor i64 1, %3714
  %3732 = trunc i64 %3731 to i32
  %3733 = xor i32 %3732, %3718
  %3734 = lshr i32 %3733, 4
  %3735 = trunc i32 %3734 to i8
  %3736 = and i8 %3735, 1
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3736, i8* %3737, align 1, !tbaa !2447
  %3738 = icmp eq i32 %3718, 0
  %3739 = zext i1 %3738 to i8
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3739, i8* %3740, align 1, !tbaa !2448
  %3741 = lshr i32 %3718, 31
  %3742 = trunc i32 %3741 to i8
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3742, i8* %3743, align 1, !tbaa !2449
  %3744 = lshr i32 %3717, 31
  %3745 = xor i32 %3741, %3744
  %3746 = add nuw nsw i32 %3745, %3741
  %3747 = icmp eq i32 %3746, 2
  %3748 = zext i1 %3747 to i8
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3748, i8* %3749, align 1, !tbaa !2450
  %3750 = load i64, i64* %RBP
  %3751 = sub i64 %3750, 20
  %3752 = load i32, i32* %EAX
  %3753 = zext i32 %3752 to i64
  %3754 = load i64, i64* %PC
  %3755 = add i64 %3754, 3
  store i64 %3755, i64* %PC
  %3756 = inttoptr i64 %3751 to i32*
  store i32 %3752, i32* %3756
  %3757 = load i64, i64* %PC
  %3758 = sub i64 %3757, 134
  %3759 = load i64, i64* %PC
  %3760 = add i64 %3759, 5
  store i64 %3760, i64* %PC
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3758, i64* %3761, align 8, !tbaa !2428
  br label %block_400810

block_400b60:                                     ; preds = %block_400929
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDI, align 8, !tbaa !2428
  %3762 = load i64, i64* %PC
  %3763 = add i64 %3762, 10
  store i64 %3763, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %3764 = load i64, i64* %PC
  %3765 = add i64 %3764, 10
  store i64 %3765, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 439), i64* %RDX, align 8, !tbaa !2428
  %3766 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3767 = load i64, i64* %PC
  %3768 = add i64 %3767, 9
  store i64 %3768, i64* %PC
  %3769 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %3770 = bitcast i8* %3766 to double*
  store double %3769, double* %3770, align 1, !tbaa !2451
  %3771 = getelementptr inbounds i8, i8* %3766, i64 8
  %3772 = bitcast i8* %3771 to double*
  store double 0.000000e+00, double* %3772, align 1, !tbaa !2451
  %3773 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3774 = load i64, i64* %PC
  %3775 = add i64 %3774, 9
  store i64 %3775, i64* %PC
  %3776 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %3777 = bitcast i8* %3773 to double*
  store double %3776, double* %3777, align 1, !tbaa !2451
  %3778 = getelementptr inbounds i8, i8* %3773, i64 8
  %3779 = bitcast i8* %3778 to double*
  store double 0.000000e+00, double* %3779, align 1, !tbaa !2451
  %3780 = load i64, i64* %PC
  %3781 = add i64 %3780, 2
  store i64 %3781, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2453
  %3782 = load i64, i64* %PC
  %3783 = sub i64 %3782, 1362
  %3784 = load i64, i64* %PC
  %3785 = add i64 %3784, 5
  %3786 = load i64, i64* %PC
  %3787 = add i64 %3786, 5
  store i64 %3787, i64* %PC
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3789 = load i64, i64* %3788, align 8, !tbaa !2428
  %3790 = add i64 %3789, -8
  %3791 = inttoptr i64 %3790 to i64*
  store i64 %3785, i64* %3791
  store i64 %3790, i64* %3788, align 8, !tbaa !2428
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3783, i64* %3792, align 8, !tbaa !2428
  %3793 = load i64, i64* %PC
  %3794 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3793, %struct.Memory* %MEMORY.6)
  %3795 = load i64, i64* %PC
  %3796 = add i64 %3795, 10
  store i64 %3796, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3797 = load i64, i64* %RDX
  %3798 = load i64, i64* %PC
  %3799 = add i64 %3798, 4
  store i64 %3799, i64* %PC
  %3800 = add i64 80, %3797
  store i64 %3800, i64* %RDX, align 8, !tbaa !2428
  %3801 = icmp ult i64 %3800, %3797
  %3802 = icmp ult i64 %3800, 80
  %3803 = or i1 %3801, %3802
  %3804 = zext i1 %3803 to i8
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3804, i8* %3805, align 1, !tbaa !2432
  %3806 = trunc i64 %3800 to i32
  %3807 = and i32 %3806, 255
  %3808 = call i32 @llvm.ctpop.i32(i32 %3807) #17
  %3809 = trunc i32 %3808 to i8
  %3810 = and i8 %3809, 1
  %3811 = xor i8 %3810, 1
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3811, i8* %3812, align 1, !tbaa !2446
  %3813 = xor i64 80, %3797
  %3814 = xor i64 %3813, %3800
  %3815 = lshr i64 %3814, 4
  %3816 = trunc i64 %3815 to i8
  %3817 = and i8 %3816, 1
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3817, i8* %3818, align 1, !tbaa !2447
  %3819 = icmp eq i64 %3800, 0
  %3820 = zext i1 %3819 to i8
  %3821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3820, i8* %3821, align 1, !tbaa !2448
  %3822 = lshr i64 %3800, 63
  %3823 = trunc i64 %3822 to i8
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3823, i8* %3824, align 1, !tbaa !2449
  %3825 = lshr i64 %3797, 63
  %3826 = xor i64 %3822, %3825
  %3827 = add nuw nsw i64 %3826, %3822
  %3828 = icmp eq i64 %3827, 2
  %3829 = zext i1 %3828 to i8
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3829, i8* %3830, align 1, !tbaa !2450
  %3831 = load i64, i64* %PC
  %3832 = add i64 %3831, 10
  store i64 %3832, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %3833 = load i64, i64* %PC
  %3834 = add i64 %3833, 10
  store i64 %3834, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 452), i64* %RDI, align 8, !tbaa !2428
  %3835 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3836 = load i64, i64* %PC
  %3837 = add i64 %3836, 9
  store i64 %3837, i64* %PC
  %3838 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %3839 = bitcast i8* %3835 to double*
  store double %3838, double* %3839, align 1, !tbaa !2451
  %3840 = getelementptr inbounds i8, i8* %3835, i64 8
  %3841 = bitcast i8* %3840 to double*
  store double 0.000000e+00, double* %3841, align 1, !tbaa !2451
  %3842 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3843 = load i64, i64* %PC
  %3844 = add i64 %3843, 9
  store i64 %3844, i64* %PC
  %3845 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %3846 = bitcast i8* %3842 to double*
  store double %3845, double* %3846, align 1, !tbaa !2451
  %3847 = getelementptr inbounds i8, i8* %3842, i64 8
  %3848 = bitcast i8* %3847 to double*
  store double 0.000000e+00, double* %3848, align 1, !tbaa !2451
  %3849 = load i64, i64* %RBP
  %3850 = sub i64 %3849, 128
  %3851 = load i64, i64* %RDI
  %3852 = load i64, i64* %PC
  %3853 = add i64 %3852, 4
  store i64 %3853, i64* %PC
  %3854 = inttoptr i64 %3850 to i64*
  store i64 %3851, i64* %3854
  %3855 = load i64, i64* %RDX
  %3856 = load i64, i64* %PC
  %3857 = add i64 %3856, 3
  store i64 %3857, i64* %PC
  store i64 %3855, i64* %RDI, align 8, !tbaa !2428
  %3858 = load i64, i64* %RBP
  %3859 = sub i64 %3858, 128
  %3860 = load i64, i64* %PC
  %3861 = add i64 %3860, 4
  store i64 %3861, i64* %PC
  %3862 = inttoptr i64 %3859 to i64*
  %3863 = load i64, i64* %3862
  store i64 %3863, i64* %RDX, align 8, !tbaa !2428
  %3864 = load i64, i64* %RBP
  %3865 = sub i64 %3864, 132
  %3866 = load i32, i32* %EAX
  %3867 = zext i32 %3866 to i64
  %3868 = load i64, i64* %PC
  %3869 = add i64 %3868, 6
  store i64 %3869, i64* %PC
  %3870 = inttoptr i64 %3865 to i32*
  store i32 %3866, i32* %3870
  %3871 = load i64, i64* %PC
  %3872 = add i64 %3871, 2
  store i64 %3872, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2453
  %3873 = load i64, i64* %PC
  %3874 = sub i64 %3873, 1438
  %3875 = load i64, i64* %PC
  %3876 = add i64 %3875, 5
  %3877 = load i64, i64* %PC
  %3878 = add i64 %3877, 5
  store i64 %3878, i64* %PC
  %3879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3880 = load i64, i64* %3879, align 8, !tbaa !2428
  %3881 = add i64 %3880, -8
  %3882 = inttoptr i64 %3881 to i64*
  store i64 %3876, i64* %3882
  store i64 %3881, i64* %3879, align 8, !tbaa !2428
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3874, i64* %3883, align 8, !tbaa !2428
  %3884 = load i64, i64* %PC
  %3885 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3884, %struct.Memory* %3794)
  %3886 = load i64, i64* %PC
  %3887 = add i64 %3886, 10
  store i64 %3887, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3888 = load i64, i64* %RDX
  %3889 = load i64, i64* %PC
  %3890 = add i64 %3889, 7
  store i64 %3890, i64* %PC
  %3891 = add i64 160, %3888
  store i64 %3891, i64* %RDX, align 8, !tbaa !2428
  %3892 = icmp ult i64 %3891, %3888
  %3893 = icmp ult i64 %3891, 160
  %3894 = or i1 %3892, %3893
  %3895 = zext i1 %3894 to i8
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3895, i8* %3896, align 1, !tbaa !2432
  %3897 = trunc i64 %3891 to i32
  %3898 = and i32 %3897, 255
  %3899 = call i32 @llvm.ctpop.i32(i32 %3898) #17
  %3900 = trunc i32 %3899 to i8
  %3901 = and i8 %3900, 1
  %3902 = xor i8 %3901, 1
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3902, i8* %3903, align 1, !tbaa !2446
  %3904 = xor i64 160, %3888
  %3905 = xor i64 %3904, %3891
  %3906 = lshr i64 %3905, 4
  %3907 = trunc i64 %3906 to i8
  %3908 = and i8 %3907, 1
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3908, i8* %3909, align 1, !tbaa !2447
  %3910 = icmp eq i64 %3891, 0
  %3911 = zext i1 %3910 to i8
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3911, i8* %3912, align 1, !tbaa !2448
  %3913 = lshr i64 %3891, 63
  %3914 = trunc i64 %3913 to i8
  %3915 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3914, i8* %3915, align 1, !tbaa !2449
  %3916 = lshr i64 %3888, 63
  %3917 = xor i64 %3913, %3916
  %3918 = add nuw nsw i64 %3917, %3913
  %3919 = icmp eq i64 %3918, 2
  %3920 = zext i1 %3919 to i8
  %3921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3920, i8* %3921, align 1, !tbaa !2450
  %3922 = load i64, i64* %PC
  %3923 = add i64 %3922, 10
  store i64 %3923, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 465), i64* %RSI, align 8, !tbaa !2428
  %3924 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3925 = load i64, i64* %PC
  %3926 = add i64 %3925, 9
  store i64 %3926, i64* %PC
  %3927 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %3928 = bitcast i8* %3924 to double*
  store double %3927, double* %3928, align 1, !tbaa !2451
  %3929 = getelementptr inbounds i8, i8* %3924, i64 8
  %3930 = bitcast i8* %3929 to double*
  store double 0.000000e+00, double* %3930, align 1, !tbaa !2451
  %3931 = load i64, i64* %RDX
  %3932 = load i64, i64* %PC
  %3933 = add i64 %3932, 3
  store i64 %3933, i64* %PC
  store i64 %3931, i64* %RDI, align 8, !tbaa !2428
  %3934 = load i64, i64* %RBP
  %3935 = sub i64 %3934, 136
  %3936 = load i32, i32* %EAX
  %3937 = zext i32 %3936 to i64
  %3938 = load i64, i64* %PC
  %3939 = add i64 %3938, 6
  store i64 %3939, i64* %PC
  %3940 = inttoptr i64 %3935 to i32*
  store i32 %3936, i32* %3940
  %3941 = load i64, i64* %PC
  %3942 = add i64 %3941, 2
  store i64 %3942, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %3943 = load i64, i64* %PC
  %3944 = sub i64 %3943, 1490
  %3945 = load i64, i64* %PC
  %3946 = add i64 %3945, 5
  %3947 = load i64, i64* %PC
  %3948 = add i64 %3947, 5
  store i64 %3948, i64* %PC
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3950 = load i64, i64* %3949, align 8, !tbaa !2428
  %3951 = add i64 %3950, -8
  %3952 = inttoptr i64 %3951 to i64*
  store i64 %3946, i64* %3952
  store i64 %3951, i64* %3949, align 8, !tbaa !2428
  %3953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3944, i64* %3953, align 8, !tbaa !2428
  %3954 = load i64, i64* %PC
  %3955 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3954, %struct.Memory* %3885)
  %3956 = load i64, i64* %PC
  %3957 = add i64 %3956, 10
  store i64 %3957, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3958 = load i64, i64* %RDX
  %3959 = load i64, i64* %PC
  %3960 = add i64 %3959, 7
  store i64 %3960, i64* %PC
  %3961 = add i64 240, %3958
  store i64 %3961, i64* %RDX, align 8, !tbaa !2428
  %3962 = icmp ult i64 %3961, %3958
  %3963 = icmp ult i64 %3961, 240
  %3964 = or i1 %3962, %3963
  %3965 = zext i1 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3965, i8* %3966, align 1, !tbaa !2432
  %3967 = trunc i64 %3961 to i32
  %3968 = and i32 %3967, 255
  %3969 = call i32 @llvm.ctpop.i32(i32 %3968) #17
  %3970 = trunc i32 %3969 to i8
  %3971 = and i8 %3970, 1
  %3972 = xor i8 %3971, 1
  %3973 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3972, i8* %3973, align 1, !tbaa !2446
  %3974 = xor i64 240, %3958
  %3975 = xor i64 %3974, %3961
  %3976 = lshr i64 %3975, 4
  %3977 = trunc i64 %3976 to i8
  %3978 = and i8 %3977, 1
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3978, i8* %3979, align 1, !tbaa !2447
  %3980 = icmp eq i64 %3961, 0
  %3981 = zext i1 %3980 to i8
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3981, i8* %3982, align 1, !tbaa !2448
  %3983 = lshr i64 %3961, 63
  %3984 = trunc i64 %3983 to i8
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3984, i8* %3985, align 1, !tbaa !2449
  %3986 = lshr i64 %3958, 63
  %3987 = xor i64 %3983, %3986
  %3988 = add nuw nsw i64 %3987, %3983
  %3989 = icmp eq i64 %3988, 2
  %3990 = zext i1 %3989 to i8
  %3991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3990, i8* %3991, align 1, !tbaa !2450
  %3992 = load i64, i64* %PC
  %3993 = add i64 %3992, 10
  store i64 %3993, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %3994 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3995 = load i64, i64* %PC
  %3996 = add i64 %3995, 9
  store i64 %3996, i64* %PC
  %3997 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %3998 = bitcast i8* %3994 to double*
  store double %3997, double* %3998, align 1, !tbaa !2451
  %3999 = getelementptr inbounds i8, i8* %3994, i64 8
  %4000 = bitcast i8* %3999 to double*
  store double 0.000000e+00, double* %4000, align 1, !tbaa !2451
  %4001 = load i64, i64* %RDX
  %4002 = load i64, i64* %PC
  %4003 = add i64 %4002, 3
  store i64 %4003, i64* %PC
  store i64 %4001, i64* %RDI, align 8, !tbaa !2428
  %4004 = load i64, i64* %RBP
  %4005 = sub i64 %4004, 140
  %4006 = load i32, i32* %EAX
  %4007 = zext i32 %4006 to i64
  %4008 = load i64, i64* %PC
  %4009 = add i64 %4008, 6
  store i64 %4009, i64* %PC
  %4010 = inttoptr i64 %4005 to i32*
  store i32 %4006, i32* %4010
  %4011 = load i64, i64* %PC
  %4012 = add i64 %4011, 2
  store i64 %4012, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %4013 = load i64, i64* %PC
  %4014 = sub i64 %4013, 1542
  %4015 = load i64, i64* %PC
  %4016 = add i64 %4015, 5
  %4017 = load i64, i64* %PC
  %4018 = add i64 %4017, 5
  store i64 %4018, i64* %PC
  %4019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4020 = load i64, i64* %4019, align 8, !tbaa !2428
  %4021 = add i64 %4020, -8
  %4022 = inttoptr i64 %4021 to i64*
  store i64 %4016, i64* %4022
  store i64 %4021, i64* %4019, align 8, !tbaa !2428
  %4023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4014, i64* %4023, align 8, !tbaa !2428
  %4024 = load i64, i64* %PC
  %4025 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4024, %struct.Memory* %3955)
  %4026 = load i64, i64* %PC
  %4027 = add i64 %4026, 10
  store i64 %4027, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4028 = load i64, i64* %RDX
  %4029 = load i64, i64* %PC
  %4030 = add i64 %4029, 7
  store i64 %4030, i64* %PC
  %4031 = add i64 320, %4028
  store i64 %4031, i64* %RDX, align 8, !tbaa !2428
  %4032 = icmp ult i64 %4031, %4028
  %4033 = icmp ult i64 %4031, 320
  %4034 = or i1 %4032, %4033
  %4035 = zext i1 %4034 to i8
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4035, i8* %4036, align 1, !tbaa !2432
  %4037 = trunc i64 %4031 to i32
  %4038 = and i32 %4037, 255
  %4039 = call i32 @llvm.ctpop.i32(i32 %4038) #17
  %4040 = trunc i32 %4039 to i8
  %4041 = and i8 %4040, 1
  %4042 = xor i8 %4041, 1
  %4043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4042, i8* %4043, align 1, !tbaa !2446
  %4044 = xor i64 320, %4028
  %4045 = xor i64 %4044, %4031
  %4046 = lshr i64 %4045, 4
  %4047 = trunc i64 %4046 to i8
  %4048 = and i8 %4047, 1
  %4049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4048, i8* %4049, align 1, !tbaa !2447
  %4050 = icmp eq i64 %4031, 0
  %4051 = zext i1 %4050 to i8
  %4052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4051, i8* %4052, align 1, !tbaa !2448
  %4053 = lshr i64 %4031, 63
  %4054 = trunc i64 %4053 to i8
  %4055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4054, i8* %4055, align 1, !tbaa !2449
  %4056 = lshr i64 %4028, 63
  %4057 = xor i64 %4053, %4056
  %4058 = add nuw nsw i64 %4057, %4053
  %4059 = icmp eq i64 %4058, 2
  %4060 = zext i1 %4059 to i8
  %4061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4060, i8* %4061, align 1, !tbaa !2450
  %4062 = load i64, i64* %PC
  %4063 = add i64 %4062, 10
  store i64 %4063, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 561), i64* %RSI, align 8, !tbaa !2428
  %4064 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4065 = load i64, i64* %PC
  %4066 = add i64 %4065, 9
  store i64 %4066, i64* %PC
  %4067 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %4068 = bitcast i8* %4064 to double*
  store double %4067, double* %4068, align 1, !tbaa !2451
  %4069 = getelementptr inbounds i8, i8* %4064, i64 8
  %4070 = bitcast i8* %4069 to double*
  store double 0.000000e+00, double* %4070, align 1, !tbaa !2451
  %4071 = load i64, i64* %RDX
  %4072 = load i64, i64* %PC
  %4073 = add i64 %4072, 3
  store i64 %4073, i64* %PC
  store i64 %4071, i64* %RDI, align 8, !tbaa !2428
  %4074 = load i64, i64* %RBP
  %4075 = sub i64 %4074, 144
  %4076 = load i32, i32* %EAX
  %4077 = zext i32 %4076 to i64
  %4078 = load i64, i64* %PC
  %4079 = add i64 %4078, 6
  store i64 %4079, i64* %PC
  %4080 = inttoptr i64 %4075 to i32*
  store i32 %4076, i32* %4080
  %4081 = load i64, i64* %PC
  %4082 = add i64 %4081, 2
  store i64 %4082, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %4083 = load i64, i64* %PC
  %4084 = sub i64 %4083, 1594
  %4085 = load i64, i64* %PC
  %4086 = add i64 %4085, 5
  %4087 = load i64, i64* %PC
  %4088 = add i64 %4087, 5
  store i64 %4088, i64* %PC
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4090 = load i64, i64* %4089, align 8, !tbaa !2428
  %4091 = add i64 %4090, -8
  %4092 = inttoptr i64 %4091 to i64*
  store i64 %4086, i64* %4092
  store i64 %4091, i64* %4089, align 8, !tbaa !2428
  %4093 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4084, i64* %4093, align 8, !tbaa !2428
  %4094 = load i64, i64* %PC
  %4095 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4094, %struct.Memory* %4025)
  %4096 = load i64, i64* %PC
  %4097 = add i64 %4096, 10
  store i64 %4097, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4098 = load i64, i64* %RDX
  %4099 = load i64, i64* %PC
  %4100 = add i64 %4099, 7
  store i64 %4100, i64* %PC
  %4101 = add i64 400, %4098
  store i64 %4101, i64* %RDX, align 8, !tbaa !2428
  %4102 = icmp ult i64 %4101, %4098
  %4103 = icmp ult i64 %4101, 400
  %4104 = or i1 %4102, %4103
  %4105 = zext i1 %4104 to i8
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4105, i8* %4106, align 1, !tbaa !2432
  %4107 = trunc i64 %4101 to i32
  %4108 = and i32 %4107, 255
  %4109 = call i32 @llvm.ctpop.i32(i32 %4108) #17
  %4110 = trunc i32 %4109 to i8
  %4111 = and i8 %4110, 1
  %4112 = xor i8 %4111, 1
  %4113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4112, i8* %4113, align 1, !tbaa !2446
  %4114 = xor i64 400, %4098
  %4115 = xor i64 %4114, %4101
  %4116 = lshr i64 %4115, 4
  %4117 = trunc i64 %4116 to i8
  %4118 = and i8 %4117, 1
  %4119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4118, i8* %4119, align 1, !tbaa !2447
  %4120 = icmp eq i64 %4101, 0
  %4121 = zext i1 %4120 to i8
  %4122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4121, i8* %4122, align 1, !tbaa !2448
  %4123 = lshr i64 %4101, 63
  %4124 = trunc i64 %4123 to i8
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4124, i8* %4125, align 1, !tbaa !2449
  %4126 = lshr i64 %4098, 63
  %4127 = xor i64 %4123, %4126
  %4128 = add nuw nsw i64 %4127, %4123
  %4129 = icmp eq i64 %4128, 2
  %4130 = zext i1 %4129 to i8
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4130, i8* %4131, align 1, !tbaa !2450
  %4132 = load i64, i64* %PC
  %4133 = add i64 %4132, 10
  store i64 %4133, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %4134 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4135 = load i64, i64* %PC
  %4136 = add i64 %4135, 9
  store i64 %4136, i64* %PC
  %4137 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %4138 = bitcast i8* %4134 to double*
  store double %4137, double* %4138, align 1, !tbaa !2451
  %4139 = getelementptr inbounds i8, i8* %4134, i64 8
  %4140 = bitcast i8* %4139 to double*
  store double 0.000000e+00, double* %4140, align 1, !tbaa !2451
  %4141 = load i64, i64* %RDX
  %4142 = load i64, i64* %PC
  %4143 = add i64 %4142, 3
  store i64 %4143, i64* %PC
  store i64 %4141, i64* %RDI, align 8, !tbaa !2428
  %4144 = load i64, i64* %RBP
  %4145 = sub i64 %4144, 148
  %4146 = load i32, i32* %EAX
  %4147 = zext i32 %4146 to i64
  %4148 = load i64, i64* %PC
  %4149 = add i64 %4148, 6
  store i64 %4149, i64* %PC
  %4150 = inttoptr i64 %4145 to i32*
  store i32 %4146, i32* %4150
  %4151 = load i64, i64* %PC
  %4152 = add i64 %4151, 2
  store i64 %4152, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %4153 = load i64, i64* %PC
  %4154 = sub i64 %4153, 1646
  %4155 = load i64, i64* %PC
  %4156 = add i64 %4155, 5
  %4157 = load i64, i64* %PC
  %4158 = add i64 %4157, 5
  store i64 %4158, i64* %PC
  %4159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4160 = load i64, i64* %4159, align 8, !tbaa !2428
  %4161 = add i64 %4160, -8
  %4162 = inttoptr i64 %4161 to i64*
  store i64 %4156, i64* %4162
  store i64 %4161, i64* %4159, align 8, !tbaa !2428
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4154, i64* %4163, align 8, !tbaa !2428
  %4164 = load i64, i64* %PC
  %4165 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4164, %struct.Memory* %4095)
  %4166 = load i64, i64* %PC
  %4167 = add i64 %4166, 10
  store i64 %4167, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4168 = load i64, i64* %RDX
  %4169 = load i64, i64* %PC
  %4170 = add i64 %4169, 7
  store i64 %4170, i64* %PC
  %4171 = add i64 480, %4168
  store i64 %4171, i64* %RDX, align 8, !tbaa !2428
  %4172 = icmp ult i64 %4171, %4168
  %4173 = icmp ult i64 %4171, 480
  %4174 = or i1 %4172, %4173
  %4175 = zext i1 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4175, i8* %4176, align 1, !tbaa !2432
  %4177 = trunc i64 %4171 to i32
  %4178 = and i32 %4177, 255
  %4179 = call i32 @llvm.ctpop.i32(i32 %4178) #17
  %4180 = trunc i32 %4179 to i8
  %4181 = and i8 %4180, 1
  %4182 = xor i8 %4181, 1
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4182, i8* %4183, align 1, !tbaa !2446
  %4184 = xor i64 480, %4168
  %4185 = xor i64 %4184, %4171
  %4186 = lshr i64 %4185, 4
  %4187 = trunc i64 %4186 to i8
  %4188 = and i8 %4187, 1
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4188, i8* %4189, align 1, !tbaa !2447
  %4190 = icmp eq i64 %4171, 0
  %4191 = zext i1 %4190 to i8
  %4192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4191, i8* %4192, align 1, !tbaa !2448
  %4193 = lshr i64 %4171, 63
  %4194 = trunc i64 %4193 to i8
  %4195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4194, i8* %4195, align 1, !tbaa !2449
  %4196 = lshr i64 %4168, 63
  %4197 = xor i64 %4193, %4196
  %4198 = add nuw nsw i64 %4197, %4193
  %4199 = icmp eq i64 %4198, 2
  %4200 = zext i1 %4199 to i8
  %4201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4200, i8* %4201, align 1, !tbaa !2450
  %4202 = load i64, i64* %PC
  %4203 = add i64 %4202, 10
  store i64 %4203, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 609), i64* %RSI, align 8, !tbaa !2428
  %4204 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4205 = load i64, i64* %PC
  %4206 = add i64 %4205, 9
  store i64 %4206, i64* %PC
  %4207 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %4208 = bitcast i8* %4204 to double*
  store double %4207, double* %4208, align 1, !tbaa !2451
  %4209 = getelementptr inbounds i8, i8* %4204, i64 8
  %4210 = bitcast i8* %4209 to double*
  store double 0.000000e+00, double* %4210, align 1, !tbaa !2451
  %4211 = load i64, i64* %RDX
  %4212 = load i64, i64* %PC
  %4213 = add i64 %4212, 3
  store i64 %4213, i64* %PC
  store i64 %4211, i64* %RDI, align 8, !tbaa !2428
  %4214 = load i64, i64* %RBP
  %4215 = sub i64 %4214, 152
  %4216 = load i32, i32* %EAX
  %4217 = zext i32 %4216 to i64
  %4218 = load i64, i64* %PC
  %4219 = add i64 %4218, 6
  store i64 %4219, i64* %PC
  %4220 = inttoptr i64 %4215 to i32*
  store i32 %4216, i32* %4220
  %4221 = load i64, i64* %PC
  %4222 = add i64 %4221, 2
  store i64 %4222, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %4223 = load i64, i64* %PC
  %4224 = sub i64 %4223, 1698
  %4225 = load i64, i64* %PC
  %4226 = add i64 %4225, 5
  %4227 = load i64, i64* %PC
  %4228 = add i64 %4227, 5
  store i64 %4228, i64* %PC
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4230 = load i64, i64* %4229, align 8, !tbaa !2428
  %4231 = add i64 %4230, -8
  %4232 = inttoptr i64 %4231 to i64*
  store i64 %4226, i64* %4232
  store i64 %4231, i64* %4229, align 8, !tbaa !2428
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4224, i64* %4233, align 8, !tbaa !2428
  %4234 = load i64, i64* %PC
  %4235 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4234, %struct.Memory* %4165)
  %4236 = load i64, i64* %PC
  %4237 = add i64 %4236, 10
  store i64 %4237, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4238 = load i64, i64* %RDX
  %4239 = load i64, i64* %PC
  %4240 = add i64 %4239, 7
  store i64 %4240, i64* %PC
  %4241 = add i64 560, %4238
  store i64 %4241, i64* %RDX, align 8, !tbaa !2428
  %4242 = icmp ult i64 %4241, %4238
  %4243 = icmp ult i64 %4241, 560
  %4244 = or i1 %4242, %4243
  %4245 = zext i1 %4244 to i8
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4245, i8* %4246, align 1, !tbaa !2432
  %4247 = trunc i64 %4241 to i32
  %4248 = and i32 %4247, 255
  %4249 = call i32 @llvm.ctpop.i32(i32 %4248) #17
  %4250 = trunc i32 %4249 to i8
  %4251 = and i8 %4250, 1
  %4252 = xor i8 %4251, 1
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4252, i8* %4253, align 1, !tbaa !2446
  %4254 = xor i64 560, %4238
  %4255 = xor i64 %4254, %4241
  %4256 = lshr i64 %4255, 4
  %4257 = trunc i64 %4256 to i8
  %4258 = and i8 %4257, 1
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4258, i8* %4259, align 1, !tbaa !2447
  %4260 = icmp eq i64 %4241, 0
  %4261 = zext i1 %4260 to i8
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4261, i8* %4262, align 1, !tbaa !2448
  %4263 = lshr i64 %4241, 63
  %4264 = trunc i64 %4263 to i8
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4264, i8* %4265, align 1, !tbaa !2449
  %4266 = lshr i64 %4238, 63
  %4267 = xor i64 %4263, %4266
  %4268 = add nuw nsw i64 %4267, %4263
  %4269 = icmp eq i64 %4268, 2
  %4270 = zext i1 %4269 to i8
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4270, i8* %4271, align 1, !tbaa !2450
  %4272 = load i64, i64* %PC
  %4273 = add i64 %4272, 10
  store i64 %4273, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %4274 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4275 = load i64, i64* %PC
  %4276 = add i64 %4275, 9
  store i64 %4276, i64* %PC
  %4277 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %4278 = bitcast i8* %4274 to double*
  store double %4277, double* %4278, align 1, !tbaa !2451
  %4279 = getelementptr inbounds i8, i8* %4274, i64 8
  %4280 = bitcast i8* %4279 to double*
  store double 0.000000e+00, double* %4280, align 1, !tbaa !2451
  %4281 = load i64, i64* %RDX
  %4282 = load i64, i64* %PC
  %4283 = add i64 %4282, 3
  store i64 %4283, i64* %PC
  store i64 %4281, i64* %RDI, align 8, !tbaa !2428
  %4284 = load i64, i64* %RBP
  %4285 = sub i64 %4284, 156
  %4286 = load i32, i32* %EAX
  %4287 = zext i32 %4286 to i64
  %4288 = load i64, i64* %PC
  %4289 = add i64 %4288, 6
  store i64 %4289, i64* %PC
  %4290 = inttoptr i64 %4285 to i32*
  store i32 %4286, i32* %4290
  %4291 = load i64, i64* %PC
  %4292 = add i64 %4291, 2
  store i64 %4292, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2453
  %4293 = load i64, i64* %PC
  %4294 = sub i64 %4293, 1750
  %4295 = load i64, i64* %PC
  %4296 = add i64 %4295, 5
  %4297 = load i64, i64* %PC
  %4298 = add i64 %4297, 5
  store i64 %4298, i64* %PC
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4300 = load i64, i64* %4299, align 8, !tbaa !2428
  %4301 = add i64 %4300, -8
  %4302 = inttoptr i64 %4301 to i64*
  store i64 %4296, i64* %4302
  store i64 %4301, i64* %4299, align 8, !tbaa !2428
  %4303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4294, i64* %4303, align 8, !tbaa !2428
  %4304 = load i64, i64* %PC
  %4305 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4304, %struct.Memory* %4235)
  %4306 = load i64, i64* %RBP
  %4307 = sub i64 %4306, 32
  %4308 = load i64, i64* %PC
  %4309 = add i64 %4308, 7
  store i64 %4309, i64* %PC
  %4310 = inttoptr i64 %4307 to i32*
  store i32 0, i32* %4310
  %4311 = load i64, i64* %RBP
  %4312 = sub i64 %4311, 20
  %4313 = load i64, i64* %PC
  %4314 = add i64 %4313, 7
  store i64 %4314, i64* %PC
  %4315 = inttoptr i64 %4312 to i32*
  store i32 0, i32* %4315
  %4316 = load i64, i64* %RBP
  %4317 = sub i64 %4316, 160
  %4318 = load i32, i32* %EAX
  %4319 = zext i32 %4318 to i64
  %4320 = load i64, i64* %PC
  %4321 = add i64 %4320, 6
  store i64 %4321, i64* %PC
  %4322 = inttoptr i64 %4317 to i32*
  store i32 %4318, i32* %4322
  br label %block_400d2f

block_400f40:                                     ; preds = %block_400ef8
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 790), i64* %RDI, align 8, !tbaa !2428
  %4323 = load i64, i64* %PC
  %4324 = add i64 %4323, 2
  store i64 %4324, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4325 = load i64, i64* %PC
  %4326 = sub i64 %4325, 2412
  %4327 = load i64, i64* %PC
  %4328 = add i64 %4327, 5
  %4329 = load i64, i64* %PC
  %4330 = add i64 %4329, 5
  store i64 %4330, i64* %PC
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4332 = load i64, i64* %4331, align 8, !tbaa !2428
  %4333 = add i64 %4332, -8
  %4334 = inttoptr i64 %4333 to i64*
  store i64 %4328, i64* %4334
  store i64 %4333, i64* %4331, align 8, !tbaa !2428
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4326, i64* %4335, align 8, !tbaa !2428
  %4336 = load i64, i64* %PC
  %4337 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4336, %struct.Memory* %MEMORY.3)
  %4338 = load i64, i64* %RBP
  %4339 = sub i64 %4338, 192
  %4340 = load i32, i32* %EAX
  %4341 = zext i32 %4340 to i64
  %4342 = load i64, i64* %PC
  %4343 = add i64 %4342, 6
  store i64 %4343, i64* %PC
  %4344 = inttoptr i64 %4339 to i32*
  store i32 %4340, i32* %4344
  br label %block_400f57

block_400f02:                                     ; preds = %block_400ef8
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 742), i64* %RDI, align 8, !tbaa !2428
  %4345 = load i64, i64* %PC
  %4346 = add i64 %4345, 10
  store i64 %4346, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 231), i64* %RAX, align 8, !tbaa !2428
  %4347 = load i64, i64* %PC
  %4348 = add i64 %4347, 10
  store i64 %4348, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 740), i64* %RCX, align 8, !tbaa !2428
  %4349 = load i64, i64* %RBP
  %4350 = sub i64 %4349, 32
  %4351 = load i64, i64* %PC
  %4352 = add i64 %4351, 3
  store i64 %4352, i64* %PC
  %4353 = inttoptr i64 %4350 to i32*
  %4354 = load i32, i32* %4353
  %4355 = zext i32 %4354 to i64
  store i64 %4355, i64* %RSI, align 8, !tbaa !2428
  %4356 = load i64, i64* %RBP
  %4357 = sub i64 %4356, 32
  %4358 = load i64, i64* %PC
  %4359 = add i64 %4358, 4
  store i64 %4359, i64* %PC
  %4360 = inttoptr i64 %4357 to i32*
  %4361 = load i32, i32* %4360
  %4362 = sub i32 %4361, 1
  %4363 = icmp ult i32 %4361, 1
  %4364 = zext i1 %4363 to i8
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4364, i8* %4365, align 1, !tbaa !2432
  %4366 = and i32 %4362, 255
  %4367 = call i32 @llvm.ctpop.i32(i32 %4366) #17
  %4368 = trunc i32 %4367 to i8
  %4369 = and i8 %4368, 1
  %4370 = xor i8 %4369, 1
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4370, i8* %4371, align 1, !tbaa !2446
  %4372 = xor i32 %4361, 1
  %4373 = xor i32 %4372, %4362
  %4374 = lshr i32 %4373, 4
  %4375 = trunc i32 %4374 to i8
  %4376 = and i8 %4375, 1
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4376, i8* %4377, align 1, !tbaa !2447
  %4378 = icmp eq i32 %4362, 0
  %4379 = zext i1 %4378 to i8
  %4380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4379, i8* %4380, align 1, !tbaa !2448
  %4381 = lshr i32 %4362, 31
  %4382 = trunc i32 %4381 to i8
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4382, i8* %4383, align 1, !tbaa !2449
  %4384 = lshr i32 %4361, 31
  %4385 = xor i32 %4381, %4384
  %4386 = add nuw nsw i32 %4385, %4384
  %4387 = icmp eq i32 %4386, 2
  %4388 = zext i1 %4387 to i8
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4388, i8* %4389, align 1, !tbaa !2450
  %4390 = load i64, i64* %RCX
  %4391 = load i64, i64* %PC
  %4392 = add i64 %4391, 4
  store i64 %4392, i64* %PC
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4394 = load i8, i8* %4393, align 1, !tbaa !2448
  %4395 = icmp eq i8 %4394, 0
  %4396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4397 = load i8, i8* %4396, align 1, !tbaa !2449
  %4398 = icmp ne i8 %4397, 0
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4400 = load i8, i8* %4399, align 1, !tbaa !2450
  %4401 = icmp ne i8 %4400, 0
  %4402 = xor i1 %4398, %4401
  %4403 = xor i1 %4402, true
  %4404 = and i1 %4395, %4403
  %4405 = load i64, i64* %RAX, align 8, !tbaa !2428
  %4406 = select i1 %4404, i64 %4390, i64 %4405
  store i64 %4406, i64* %RAX, align 8, !tbaa !2428
  %4407 = load i64, i64* %RAX
  %4408 = load i64, i64* %PC
  %4409 = add i64 %4408, 3
  store i64 %4409, i64* %PC
  store i64 %4407, i64* %RDX, align 8, !tbaa !2428
  %4410 = load i64, i64* %PC
  %4411 = add i64 %4410, 2
  store i64 %4411, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4412 = load i64, i64* %PC
  %4413 = sub i64 %4412, 2384
  %4414 = load i64, i64* %PC
  %4415 = add i64 %4414, 5
  %4416 = load i64, i64* %PC
  %4417 = add i64 %4416, 5
  store i64 %4417, i64* %PC
  %4418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4419 = load i64, i64* %4418, align 8, !tbaa !2428
  %4420 = add i64 %4419, -8
  %4421 = inttoptr i64 %4420 to i64*
  store i64 %4415, i64* %4421
  store i64 %4420, i64* %4418, align 8, !tbaa !2428
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4413, i64* %4422, align 8, !tbaa !2428
  %4423 = load i64, i64* %PC
  %4424 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4423, %struct.Memory* %MEMORY.3)
  %4425 = load i64, i64* %RBP
  %4426 = sub i64 %4425, 188
  %4427 = load i32, i32* %EAX
  %4428 = zext i32 %4427 to i64
  %4429 = load i64, i64* %PC
  %4430 = add i64 %4429, 6
  store i64 %4430, i64* %PC
  %4431 = inttoptr i64 %4426 to i32*
  store i32 %4427, i32* %4431
  %4432 = load i64, i64* %PC
  %4433 = add i64 %4432, 28
  %4434 = load i64, i64* %PC
  %4435 = add i64 %4434, 5
  store i64 %4435, i64* %PC
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4433, i64* %4436, align 8, !tbaa !2428
  br label %block_400f57

block_400d6b:                                     ; preds = %block_400d39
  %4437 = load i64, i64* %PC
  %4438 = add i64 %4437, 10
  store i64 %4438, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 657), i64* %RDI, align 8, !tbaa !2428
  %4439 = load i64, i64* %RBP
  %4440 = sub i64 %4439, 20
  %4441 = load i64, i64* %PC
  %4442 = add i64 %4441, 3
  store i64 %4442, i64* %PC
  %4443 = inttoptr i64 %4440 to i32*
  %4444 = load i32, i32* %4443
  %4445 = zext i32 %4444 to i64
  store i64 %4445, i64* %RAX, align 8, !tbaa !2428
  %4446 = load i64, i64* %RAX
  %4447 = load i64, i64* %PC
  %4448 = add i64 %4447, 3
  store i64 %4448, i64* %PC
  %4449 = trunc i64 %4446 to i32
  %4450 = add i32 1, %4449
  %4451 = zext i32 %4450 to i64
  store i64 %4451, i64* %RAX, align 8, !tbaa !2428
  %4452 = icmp ult i32 %4450, %4449
  %4453 = icmp ult i32 %4450, 1
  %4454 = or i1 %4452, %4453
  %4455 = zext i1 %4454 to i8
  %4456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4455, i8* %4456, align 1, !tbaa !2432
  %4457 = and i32 %4450, 255
  %4458 = call i32 @llvm.ctpop.i32(i32 %4457) #17
  %4459 = trunc i32 %4458 to i8
  %4460 = and i8 %4459, 1
  %4461 = xor i8 %4460, 1
  %4462 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4461, i8* %4462, align 1, !tbaa !2446
  %4463 = xor i64 1, %4446
  %4464 = trunc i64 %4463 to i32
  %4465 = xor i32 %4464, %4450
  %4466 = lshr i32 %4465, 4
  %4467 = trunc i32 %4466 to i8
  %4468 = and i8 %4467, 1
  %4469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4468, i8* %4469, align 1, !tbaa !2447
  %4470 = icmp eq i32 %4450, 0
  %4471 = zext i1 %4470 to i8
  %4472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4471, i8* %4472, align 1, !tbaa !2448
  %4473 = lshr i32 %4450, 31
  %4474 = trunc i32 %4473 to i8
  %4475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4474, i8* %4475, align 1, !tbaa !2449
  %4476 = lshr i32 %4449, 31
  %4477 = xor i32 %4473, %4476
  %4478 = add nuw nsw i32 %4477, %4473
  %4479 = icmp eq i32 %4478, 2
  %4480 = zext i1 %4479 to i8
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4480, i8* %4481, align 1, !tbaa !2450
  %4482 = load i32, i32* %EAX
  %4483 = zext i32 %4482 to i64
  %4484 = load i64, i64* %PC
  %4485 = add i64 %4484, 2
  store i64 %4485, i64* %PC
  %4486 = and i64 %4483, 4294967295
  store i64 %4486, i64* %RSI, align 8, !tbaa !2428
  %4487 = load i64, i64* %PC
  %4488 = add i64 %4487, 2
  store i64 %4488, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4489 = load i64, i64* %PC
  %4490 = sub i64 %4489, 1951
  %4491 = load i64, i64* %PC
  %4492 = add i64 %4491, 5
  %4493 = load i64, i64* %PC
  %4494 = add i64 %4493, 5
  store i64 %4494, i64* %PC
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4496 = load i64, i64* %4495, align 8, !tbaa !2428
  %4497 = add i64 %4496, -8
  %4498 = inttoptr i64 %4497 to i64*
  store i64 %4492, i64* %4498
  store i64 %4497, i64* %4495, align 8, !tbaa !2428
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4490, i64* %4499, align 8, !tbaa !2428
  %4500 = load i64, i64* %PC
  %4501 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4500, %struct.Memory* %2938)
  %4502 = load i64, i64* %PC
  %4503 = add i64 %4502, 10
  store i64 %4503, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 690), i64* %RDI, align 8, !tbaa !2428
  %4504 = load i64, i64* %RBP
  %4505 = sub i64 %4504, 20
  %4506 = load i64, i64* %PC
  %4507 = add i64 %4506, 4
  store i64 %4507, i64* %PC
  %4508 = inttoptr i64 %4505 to i32*
  %4509 = load i32, i32* %4508
  %4510 = sext i32 %4509 to i64
  store i64 %4510, i64* %RCX, align 8, !tbaa !2428
  %4511 = load i64, i64* %RCX
  %4512 = mul i64 %4511, 8
  %4513 = add i64 %4512, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4514 = load i64, i64* %PC
  %4515 = add i64 %4514, 8
  store i64 %4515, i64* %PC
  %4516 = inttoptr i64 %4513 to i64*
  %4517 = load i64, i64* %4516
  store i64 %4517, i64* %RSI, align 8, !tbaa !2428
  %4518 = load i64, i64* %RBP
  %4519 = sub i64 %4518, 164
  %4520 = load i32, i32* %EAX
  %4521 = zext i32 %4520 to i64
  %4522 = load i64, i64* %PC
  %4523 = add i64 %4522, 6
  store i64 %4523, i64* %PC
  %4524 = inttoptr i64 %4519 to i32*
  store i32 %4520, i32* %4524
  %4525 = load i64, i64* %PC
  %4526 = add i64 %4525, 2
  store i64 %4526, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4527 = load i64, i64* %PC
  %4528 = sub i64 %4527, 1986
  %4529 = load i64, i64* %PC
  %4530 = add i64 %4529, 5
  %4531 = load i64, i64* %PC
  %4532 = add i64 %4531, 5
  store i64 %4532, i64* %PC
  %4533 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4534 = load i64, i64* %4533, align 8, !tbaa !2428
  %4535 = add i64 %4534, -8
  %4536 = inttoptr i64 %4535 to i64*
  store i64 %4530, i64* %4536
  store i64 %4535, i64* %4533, align 8, !tbaa !2428
  %4537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4528, i64* %4537, align 8, !tbaa !2428
  %4538 = load i64, i64* %PC
  %4539 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4538, %struct.Memory* %4501)
  %4540 = load i64, i64* %PC
  %4541 = add i64 %4540, 10
  store i64 %4541, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 707), i64* %RDI, align 8, !tbaa !2428
  %4542 = load i64, i64* %PC
  %4543 = add i64 %4542, 10
  store i64 %4543, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RCX, align 8, !tbaa !2428
  %4544 = load i64, i64* %RBP
  %4545 = sub i64 %4544, 20
  %4546 = load i64, i64* %PC
  %4547 = add i64 %4546, 4
  store i64 %4547, i64* %PC
  %4548 = inttoptr i64 %4545 to i32*
  %4549 = load i32, i32* %4548
  %4550 = sext i32 %4549 to i64
  store i64 %4550, i64* %RSI, align 8, !tbaa !2428
  %4551 = load i64, i64* %RSI
  %4552 = load i64, i64* %PC
  %4553 = add i64 %4552, 4
  store i64 %4553, i64* %PC
  %4554 = sext i64 %4551 to i128
  %4555 = and i128 %4554, -18446744073709551616
  %4556 = zext i64 %4551 to i128
  %4557 = or i128 %4555, %4556
  %4558 = mul nsw i128 80, %4557
  %4559 = trunc i128 %4558 to i64
  store i64 %4559, i64* %RSI, align 8, !tbaa !2428
  %4560 = sext i64 %4559 to i128
  %4561 = icmp ne i128 %4560, %4558
  %4562 = zext i1 %4561 to i8
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4562, i8* %4563, align 1, !tbaa !2432
  %4564 = trunc i128 %4558 to i32
  %4565 = and i32 %4564, 255
  %4566 = call i32 @llvm.ctpop.i32(i32 %4565) #17
  %4567 = trunc i32 %4566 to i8
  %4568 = and i8 %4567, 1
  %4569 = xor i8 %4568, 1
  %4570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4569, i8* %4570, align 1, !tbaa !2446
  %4571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4571, align 1, !tbaa !2447
  %4572 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4572, align 1, !tbaa !2448
  %4573 = lshr i64 %4559, 63
  %4574 = trunc i64 %4573 to i8
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4574, i8* %4575, align 1, !tbaa !2449
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4562, i8* %4576, align 1, !tbaa !2450
  %4577 = load i64, i64* %RCX
  %4578 = load i64, i64* %RSI
  %4579 = load i64, i64* %PC
  %4580 = add i64 %4579, 3
  store i64 %4580, i64* %PC
  %4581 = add i64 %4578, %4577
  store i64 %4581, i64* %RCX, align 8, !tbaa !2428
  %4582 = icmp ult i64 %4581, %4577
  %4583 = icmp ult i64 %4581, %4578
  %4584 = or i1 %4582, %4583
  %4585 = zext i1 %4584 to i8
  %4586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4585, i8* %4586, align 1, !tbaa !2432
  %4587 = trunc i64 %4581 to i32
  %4588 = and i32 %4587, 255
  %4589 = call i32 @llvm.ctpop.i32(i32 %4588) #17
  %4590 = trunc i32 %4589 to i8
  %4591 = and i8 %4590, 1
  %4592 = xor i8 %4591, 1
  %4593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4592, i8* %4593, align 1, !tbaa !2446
  %4594 = xor i64 %4578, %4577
  %4595 = xor i64 %4594, %4581
  %4596 = lshr i64 %4595, 4
  %4597 = trunc i64 %4596 to i8
  %4598 = and i8 %4597, 1
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4598, i8* %4599, align 1, !tbaa !2447
  %4600 = icmp eq i64 %4581, 0
  %4601 = zext i1 %4600 to i8
  %4602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4601, i8* %4602, align 1, !tbaa !2448
  %4603 = lshr i64 %4581, 63
  %4604 = trunc i64 %4603 to i8
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4604, i8* %4605, align 1, !tbaa !2449
  %4606 = lshr i64 %4577, 63
  %4607 = lshr i64 %4578, 63
  %4608 = xor i64 %4603, %4606
  %4609 = xor i64 %4603, %4607
  %4610 = add nuw nsw i64 %4608, %4609
  %4611 = icmp eq i64 %4610, 2
  %4612 = zext i1 %4611 to i8
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4612, i8* %4613, align 1, !tbaa !2450
  %4614 = load i64, i64* %RCX
  %4615 = load i64, i64* %PC
  %4616 = add i64 %4615, 3
  store i64 %4616, i64* %PC
  store i64 %4614, i64* %RSI, align 8, !tbaa !2428
  %4617 = load i64, i64* %RBP
  %4618 = sub i64 %4617, 168
  %4619 = load i32, i32* %EAX
  %4620 = zext i32 %4619 to i64
  %4621 = load i64, i64* %PC
  %4622 = add i64 %4621, 6
  store i64 %4622, i64* %PC
  %4623 = inttoptr i64 %4618 to i32*
  store i32 %4619, i32* %4623
  %4624 = load i64, i64* %PC
  %4625 = add i64 %4624, 2
  store i64 %4625, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4626 = load i64, i64* %PC
  %4627 = sub i64 %4626, 2033
  %4628 = load i64, i64* %PC
  %4629 = add i64 %4628, 5
  %4630 = load i64, i64* %PC
  %4631 = add i64 %4630, 5
  store i64 %4631, i64* %PC
  %4632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4633 = load i64, i64* %4632, align 8, !tbaa !2428
  %4634 = add i64 %4633, -8
  %4635 = inttoptr i64 %4634 to i64*
  store i64 %4629, i64* %4635
  store i64 %4634, i64* %4632, align 8, !tbaa !2428
  %4636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4627, i64* %4636, align 8, !tbaa !2428
  %4637 = load i64, i64* %PC
  %4638 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4637, %struct.Memory* %4539)
  %4639 = load i64, i64* %PC
  %4640 = add i64 %4639, 10
  store i64 %4640, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 724), i64* %RDI, align 8, !tbaa !2428
  %4641 = load i64, i64* %RBP
  %4642 = sub i64 %4641, 172
  %4643 = load i32, i32* %EAX
  %4644 = zext i32 %4643 to i64
  %4645 = load i64, i64* %PC
  %4646 = add i64 %4645, 6
  store i64 %4646, i64* %PC
  %4647 = inttoptr i64 %4642 to i32*
  store i32 %4643, i32* %4647
  %4648 = load i64, i64* %PC
  %4649 = add i64 %4648, 2
  store i64 %4649, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2453
  %4650 = load i64, i64* %PC
  %4651 = sub i64 %4650, 2056
  %4652 = load i64, i64* %PC
  %4653 = add i64 %4652, 5
  %4654 = load i64, i64* %PC
  %4655 = add i64 %4654, 5
  store i64 %4655, i64* %PC
  %4656 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4657 = load i64, i64* %4656, align 8, !tbaa !2428
  %4658 = add i64 %4657, -8
  %4659 = inttoptr i64 %4658 to i64*
  store i64 %4653, i64* %4659
  store i64 %4658, i64* %4656, align 8, !tbaa !2428
  %4660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4651, i64* %4660, align 8, !tbaa !2428
  %4661 = load i64, i64* %PC
  %4662 = call %struct.Memory* @ext_4005e0_printf(%struct.State* %0, i64 %4661, %struct.Memory* %4638)
  %4663 = load i64, i64* %RBP
  %4664 = sub i64 %4663, 20
  %4665 = load i64, i64* %PC
  %4666 = add i64 %4665, 4
  store i64 %4666, i64* %PC
  %4667 = inttoptr i64 %4664 to i32*
  %4668 = load i32, i32* %4667
  %4669 = sext i32 %4668 to i64
  store i64 %4669, i64* %RCX, align 8, !tbaa !2428
  %4670 = load i64, i64* %RCX
  %4671 = mul i64 %4670, 8
  %4672 = add i64 %4671, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4673 = load i64, i64* %PC
  %4674 = add i64 %4673, 8
  store i64 %4674, i64* %PC
  %4675 = inttoptr i64 %4672 to i64*
  %4676 = load i64, i64* %4675
  store i64 %4676, i64* %RDI, align 8, !tbaa !2428
  %4677 = load i64, i64* %RBP
  %4678 = sub i64 %4677, 176
  %4679 = load i32, i32* %EAX
  %4680 = zext i32 %4679 to i64
  %4681 = load i64, i64* %PC
  %4682 = add i64 %4681, 6
  store i64 %4682, i64* %PC
  %4683 = inttoptr i64 %4678 to i32*
  store i32 %4679, i32* %4683
  %4684 = load i64, i64* %PC
  %4685 = sub i64 %4684, 2095
  %4686 = load i64, i64* %PC
  %4687 = add i64 %4686, 5
  %4688 = load i64, i64* %PC
  %4689 = add i64 %4688, 5
  store i64 %4689, i64* %PC
  %4690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4691 = load i64, i64* %4690, align 8, !tbaa !2428
  %4692 = add i64 %4691, -8
  %4693 = inttoptr i64 %4692 to i64*
  store i64 %4687, i64* %4693
  store i64 %4692, i64* %4690, align 8, !tbaa !2428
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4685, i64* %4694, align 8, !tbaa !2428
  %4695 = load i64, i64* %PC
  %4696 = call %struct.Memory* @ext_6026a0_strlen(%struct.State* %0, i64 %4695, %struct.Memory* %4662)
  %4697 = load i32, i32* %EAX
  %4698 = zext i32 %4697 to i64
  %4699 = load i64, i64* %PC
  %4700 = add i64 %4699, 2
  store i64 %4700, i64* %PC
  %4701 = and i64 %4698, 4294967295
  store i64 %4701, i64* %RDX, align 8, !tbaa !2428
  %4702 = load i64, i64* %RBP
  %4703 = sub i64 %4702, 28
  %4704 = load i32, i32* %EDX
  %4705 = zext i32 %4704 to i64
  %4706 = load i64, i64* %PC
  %4707 = add i64 %4706, 3
  store i64 %4707, i64* %PC
  %4708 = inttoptr i64 %4703 to i32*
  store i32 %4704, i32* %4708
  %4709 = load i64, i64* %RBP
  %4710 = sub i64 %4709, 24
  %4711 = load i64, i64* %PC
  %4712 = add i64 %4711, 7
  store i64 %4712, i64* %PC
  %4713 = inttoptr i64 %4710 to i32*
  store i32 0, i32* %4713
  br label %block_400e10
}

; Function Attrs: noinline
define %struct.Memory* @sub_401110_transit_surface(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401110:
  %state.i799 = alloca %struct.State*, align 8
  %curr_pc.i800 = alloca i64, align 8
  %memory.i801 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i802 = alloca i8, align 1
  %SS_BASE.i803 = alloca i64, align 8
  %ES_BASE.i804 = alloca i64, align 8
  %DS_BASE.i805 = alloca i64, align 8
  %CS_BASE.i806 = alloca i64, align 8
  %STATE.i807 = alloca %struct.State*, align 8
  %MEMORY.i808 = alloca %struct.Memory*, align 8
  %_DR0.i809 = alloca i64*, align 8
  %_DR1.i810 = alloca i64*, align 8
  %_DR2.i811 = alloca i64*, align 8
  %_DR3.i812 = alloca i64*, align 8
  %_DR4.i813 = alloca i64*, align 8
  %_DR5.i814 = alloca i64*, align 8
  %_DR6.i815 = alloca i64*, align 8
  %_DR7.i816 = alloca i64*, align 8
  %CR0.i817 = alloca i64*, align 8
  %CR1.i818 = alloca i64*, align 8
  %CR2.i819 = alloca i64*, align 8
  %CR3.i820 = alloca i64*, align 8
  %CR4.i821 = alloca i64*, align 8
  %CR8.i822 = alloca i64*, align 8
  %state.i640 = alloca %struct.State*, align 8
  %curr_pc.i641 = alloca i64, align 8
  %memory.i642 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i643 = alloca i8, align 1
  %SS_BASE.i644 = alloca i64, align 8
  %ES_BASE.i645 = alloca i64, align 8
  %DS_BASE.i646 = alloca i64, align 8
  %CS_BASE.i647 = alloca i64, align 8
  %STATE.i648 = alloca %struct.State*, align 8
  %MEMORY.i649 = alloca %struct.Memory*, align 8
  %_DR0.i650 = alloca i64*, align 8
  %_DR1.i651 = alloca i64*, align 8
  %_DR2.i652 = alloca i64*, align 8
  %_DR3.i653 = alloca i64*, align 8
  %_DR4.i654 = alloca i64*, align 8
  %_DR5.i655 = alloca i64*, align 8
  %_DR6.i656 = alloca i64*, align 8
  %_DR7.i657 = alloca i64*, align 8
  %CR0.i658 = alloca i64*, align 8
  %CR1.i659 = alloca i64*, align 8
  %CR2.i660 = alloca i64*, align 8
  %CR3.i661 = alloca i64*, align 8
  %CR4.i662 = alloca i64*, align 8
  %CR8.i663 = alloca i64*, align 8
  %state.i481 = alloca %struct.State*, align 8
  %curr_pc.i482 = alloca i64, align 8
  %memory.i483 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i484 = alloca i8, align 1
  %SS_BASE.i485 = alloca i64, align 8
  %ES_BASE.i486 = alloca i64, align 8
  %DS_BASE.i487 = alloca i64, align 8
  %CS_BASE.i488 = alloca i64, align 8
  %STATE.i489 = alloca %struct.State*, align 8
  %MEMORY.i490 = alloca %struct.Memory*, align 8
  %_DR0.i491 = alloca i64*, align 8
  %_DR1.i492 = alloca i64*, align 8
  %_DR2.i493 = alloca i64*, align 8
  %_DR3.i494 = alloca i64*, align 8
  %_DR4.i495 = alloca i64*, align 8
  %_DR5.i496 = alloca i64*, align 8
  %_DR6.i497 = alloca i64*, align 8
  %_DR7.i498 = alloca i64*, align 8
  %CR0.i499 = alloca i64*, align 8
  %CR1.i500 = alloca i64*, align 8
  %CR2.i501 = alloca i64*, align 8
  %CR3.i502 = alloca i64*, align 8
  %CR4.i503 = alloca i64*, align 8
  %CR8.i504 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 13
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 15
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RBP = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %19 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %18, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %19 to %"class.std::bitset"*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %21 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %20, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %21 to %"class.std::bitset"*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %23 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %22, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %23 to %"class.std::bitset"*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %25 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %24, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %25 to %union.vec128_t*
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %27 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %26, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %27 to %union.vec128_t*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %29 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %28, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %29 to %union.vec128_t*
  %30 = load i64, i64* %RBP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 1
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %34 = load i64, i64* %33, align 8, !tbaa !2428
  %35 = add i64 %34, -8
  %36 = inttoptr i64 %35 to i64*
  store i64 %30, i64* %36
  store i64 %35, i64* %33, align 8, !tbaa !2428
  %37 = load i64, i64* %RSP
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 3
  store i64 %39, i64* %PC
  store i64 %37, i64* %RBP, align 8, !tbaa !2428
  %40 = load i64, i64* %RSP
  %41 = load i64, i64* %PC
  %42 = add i64 %41, 7
  store i64 %42, i64* %PC
  %43 = sub i64 %40, 144
  store i64 %43, i64* %RSP, align 8, !tbaa !2428
  %44 = icmp ult i64 %40, 144
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %45, i8* %46, align 1, !tbaa !2432
  %47 = trunc i64 %43 to i32
  %48 = and i32 %47, 255
  %49 = call i32 @llvm.ctpop.i32(i32 %48) #17
  %50 = trunc i32 %49 to i8
  %51 = and i8 %50, 1
  %52 = xor i8 %51, 1
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %52, i8* %53, align 1, !tbaa !2446
  %54 = xor i64 144, %40
  %55 = xor i64 %54, %43
  %56 = lshr i64 %55, 4
  %57 = trunc i64 %56 to i8
  %58 = and i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %58, i8* %59, align 1, !tbaa !2447
  %60 = icmp eq i64 %43, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %43, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = lshr i64 %40, 63
  %67 = xor i64 %63, %66
  %68 = add nuw nsw i64 %67, %66
  %69 = icmp eq i64 %68, 2
  %70 = zext i1 %69 to i8
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %70, i8* %71, align 1, !tbaa !2450
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 9
  store i64 %73, i64* %PC
  %74 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %75, align 1, !tbaa !2432
  %76 = and i16 %74, 255
  %77 = zext i16 %76 to i32
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2446
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %83, align 1, !tbaa !2447
  %84 = icmp eq i16 %74, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i16 %74, 15
  %88 = trunc i16 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = lshr i16 %74, 15
  %91 = xor i16 %87, %90
  %92 = add nuw nsw i16 %91, %90
  %93 = icmp eq i16 %92, 2
  %94 = zext i1 %93 to i8
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %94, i8* %95, align 1, !tbaa !2450
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 391
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 6
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 6
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %103 = load i8, i8* %102, align 1, !tbaa !2448
  store i8 %103, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %105 = icmp ne i8 %103, 0
  %106 = select i1 %105, i64 %97, i64 %99
  store i64 %106, i64* %104, align 8, !tbaa !2428
  %107 = load i8, i8* %BRANCH_TAKEN
  %108 = icmp eq i8 %107, 1
  %109 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %union.vec128_t* %XMM0 to i8*
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC
  %114 = bitcast i8* %110 to i64*
  %115 = load i64, i64* %114, align 1
  %116 = getelementptr inbounds i8, i8* %110, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = bitcast i8* %111 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = getelementptr inbounds i8, i8* %111, i64 8
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 1
  %124 = xor i64 %120, %115
  %125 = xor i64 %123, %118
  %126 = trunc i64 %124 to i32
  %127 = lshr i64 %124, 32
  %128 = trunc i64 %127 to i32
  %129 = bitcast i8* %109 to i32*
  store i32 %126, i32* %129, align 1, !tbaa !2469
  %130 = getelementptr inbounds i8, i8* %109, i64 4
  %131 = bitcast i8* %130 to i32*
  store i32 %128, i32* %131, align 1, !tbaa !2469
  %132 = trunc i64 %125 to i32
  %133 = getelementptr inbounds i8, i8* %109, i64 8
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 1, !tbaa !2469
  %135 = lshr i64 %125, 32
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds i8, i8* %109, i64 12
  %138 = bitcast i8* %137 to i32*
  store i32 %136, i32* %138, align 1, !tbaa !2469
  %139 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %140 = load i64, i64* %PC
  %141 = add i64 %140, 9
  store i64 %141, i64* %PC
  %142 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %143 = bitcast i8* %139 to double*
  store double %142, double* %143, align 1, !tbaa !2451
  %144 = getelementptr inbounds i8, i8* %139, i64 8
  %145 = bitcast i8* %144 to double*
  store double 0.000000e+00, double* %145, align 1, !tbaa !2451
  %146 = bitcast %union.vec128_t* %XMM1 to i8*
  %147 = bitcast %union.vec128_t* %XMM0 to i8*
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 4
  store i64 %149, i64* %PC
  %150 = bitcast i8* %146 to double*
  %151 = load double, double* %150, align 1
  %152 = bitcast i8* %147 to double*
  %153 = load double, double* %152, align 1
  %154 = fcmp uno double %151, %153
  br i1 %154, label %155, label %167

; <label>:155:                                    ; preds = %block_401110
  %156 = fadd double %151, %153
  %157 = bitcast double %156 to i64
  %158 = and i64 %157, 9221120237041090560
  %159 = icmp eq i64 %158, 9218868437227405312
  %160 = and i64 %157, 2251799813685247
  %161 = icmp ne i64 %160, 0
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %173

; <label>:163:                                    ; preds = %155
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %165 = load i64, i64* %164, align 8, !tbaa !2428
  %166 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %165, %struct.Memory* %2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

; <label>:167:                                    ; preds = %block_401110
  %168 = fcmp ogt double %151, %153
  br i1 %168, label %173, label %169

; <label>:169:                                    ; preds = %167
  %170 = fcmp olt double %151, %153
  br i1 %170, label %173, label %171

; <label>:171:                                    ; preds = %169
  %172 = fcmp oeq double %151, %153
  br i1 %172, label %173, label %180

; <label>:173:                                    ; preds = %171, %169, %167, %155
  %174 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 1, %171 ], [ 1, %155 ]
  %175 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 0, %171 ], [ 1, %155 ]
  %176 = phi i8 [ 0, %167 ], [ 1, %169 ], [ 0, %171 ], [ 1, %155 ]
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %174, i8* %177, align 1, !tbaa !2453
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %175, i8* %178, align 1, !tbaa !2453
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %176, i8* %179, align 1, !tbaa !2453
  br label %180

; <label>:180:                                    ; preds = %173, %171
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %181, align 1, !tbaa !2453
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %182, align 1, !tbaa !2453
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %183, align 1, !tbaa !2453
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479: ; preds = %163, %180
  %184 = phi %struct.Memory* [ %166, %163 ], [ %2, %180 ]
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 17
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 6
  %189 = load i64, i64* %PC
  %190 = add i64 %189, 6
  store i64 %190, i64* %PC
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %192 = load i8, i8* %191, align 1, !tbaa !2448
  %193 = icmp eq i8 %192, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %196 = select i1 %193, i64 %186, i64 %188
  store i64 %196, i64* %195, align 8, !tbaa !2428
  %197 = load i8, i8* %BRANCH_TAKEN
  %198 = icmp eq i8 %197, 1
  br i1 %108, label %block_4012ab, label %block_40112a

block_4012e8:                                     ; preds = %block_4012e2
  %199 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %200 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %201 = bitcast %union.vec128_t* %XMM0 to i8*
  %202 = load i64, i64* %PC
  %203 = add i64 %202, 3
  store i64 %203, i64* %PC
  %204 = bitcast i8* %200 to i64*
  %205 = load i64, i64* %204, align 1
  %206 = getelementptr inbounds i8, i8* %200, i64 8
  %207 = bitcast i8* %206 to i64*
  %208 = load i64, i64* %207, align 1
  %209 = bitcast i8* %201 to i64*
  %210 = load i64, i64* %209, align 1
  %211 = getelementptr inbounds i8, i8* %201, i64 8
  %212 = bitcast i8* %211 to i64*
  %213 = load i64, i64* %212, align 1
  %214 = xor i64 %210, %205
  %215 = xor i64 %213, %208
  %216 = trunc i64 %214 to i32
  %217 = lshr i64 %214, 32
  %218 = trunc i64 %217 to i32
  %219 = bitcast i8* %199 to i32*
  store i32 %216, i32* %219, align 1, !tbaa !2469
  %220 = getelementptr inbounds i8, i8* %199, i64 4
  %221 = bitcast i8* %220 to i32*
  store i32 %218, i32* %221, align 1, !tbaa !2469
  %222 = trunc i64 %215 to i32
  %223 = getelementptr inbounds i8, i8* %199, i64 8
  %224 = bitcast i8* %223 to i32*
  store i32 %222, i32* %224, align 1, !tbaa !2469
  %225 = lshr i64 %215, 32
  %226 = trunc i64 %225 to i32
  %227 = getelementptr inbounds i8, i8* %199, i64 12
  %228 = bitcast i8* %227 to i32*
  store i32 %226, i32* %228, align 1, !tbaa !2469
  %229 = bitcast %union.vec128_t* %XMM0 to i8*
  %230 = load i64, i64* %PC
  %231 = add i64 %230, 9
  store i64 %231, i64* %PC
  %232 = bitcast i8* %229 to double*
  %233 = load double, double* %232, align 1
  store double %233, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 9
  store i64 %236, i64* %PC
  %237 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %238 = bitcast i8* %234 to double*
  store double %237, double* %238, align 1, !tbaa !2451
  %239 = getelementptr inbounds i8, i8* %234, i64 8
  %240 = bitcast i8* %239 to double*
  store double 0.000000e+00, double* %240, align 1, !tbaa !2451
  %241 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %242 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %243 = load i64, i64* %PC
  %244 = add i64 %243, 9
  store i64 %244, i64* %PC
  %245 = bitcast i8* %242 to double*
  %246 = load double, double* %245, align 1
  %247 = getelementptr inbounds i8, i8* %242, i64 8
  %248 = bitcast i8* %247 to i64*
  %249 = load i64, i64* %248, align 1
  %250 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %251 = fdiv double %246, %250
  %252 = bitcast i8* %241 to double*
  store double %251, double* %252, align 1, !tbaa !2451
  %253 = getelementptr inbounds i8, i8* %241, i64 8
  %254 = bitcast i8* %253 to i64*
  store i64 %249, i64* %254, align 1, !tbaa !2451
  %255 = load i64, i64* %RBP
  %256 = sub i64 %255, 24
  %257 = bitcast %union.vec128_t* %XMM0 to i8*
  %258 = load i64, i64* %PC
  %259 = add i64 %258, 5
  store i64 %259, i64* %PC
  %260 = bitcast i8* %257 to double*
  %261 = load double, double* %260, align 1
  %262 = inttoptr i64 %256 to double*
  store double %261, double* %262
  %263 = load i64, i64* %PC
  %264 = add i64 %263, 68
  %265 = load i64, i64* %PC
  %266 = add i64 %265, 5
  store i64 %266, i64* %PC
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %264, i64* %267, align 8, !tbaa !2428
  br label %block_40134f

block_4012e2:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 46
  %270 = load i64, i64* %PC
  %271 = add i64 %270, 6
  %272 = load i64, i64* %PC
  %273 = add i64 %272, 6
  store i64 %273, i64* %PC
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %275 = load i8, i8* %274, align 1, !tbaa !2446
  store i8 %275, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %277 = icmp ne i8 %275, 0
  %278 = select i1 %277, i64 %269, i64 %271
  store i64 %278, i64* %276, align 8, !tbaa !2428
  %279 = load i8, i8* %BRANCH_TAKEN
  %280 = icmp eq i8 %279, 1
  br i1 %280, label %block_401310, label %block_4012e8

block_401565:                                     ; preds = %block_401236, %block_4012c7, %block_401146, %block_40134f
  %MEMORY.0 = phi %struct.Memory* [ %2134, %block_40134f ], [ %5036, %block_4012c7 ], [ %MEMORY.6, %block_401236 ], [ %184, %block_401146 ]
  %281 = load i64, i64* %RSP
  %282 = load i64, i64* %PC
  %283 = add i64 %282, 7
  store i64 %283, i64* %PC
  %284 = add i64 144, %281
  store i64 %284, i64* %RSP, align 8, !tbaa !2428
  %285 = icmp ult i64 %284, %281
  %286 = icmp ult i64 %284, 144
  %287 = or i1 %285, %286
  %288 = zext i1 %287 to i8
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %288, i8* %289, align 1, !tbaa !2432
  %290 = trunc i64 %284 to i32
  %291 = and i32 %290, 255
  %292 = call i32 @llvm.ctpop.i32(i32 %291) #17
  %293 = trunc i32 %292 to i8
  %294 = and i8 %293, 1
  %295 = xor i8 %294, 1
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %295, i8* %296, align 1, !tbaa !2446
  %297 = xor i64 144, %281
  %298 = xor i64 %297, %284
  %299 = lshr i64 %298, 4
  %300 = trunc i64 %299 to i8
  %301 = and i8 %300, 1
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %301, i8* %302, align 1, !tbaa !2447
  %303 = icmp eq i64 %284, 0
  %304 = zext i1 %303 to i8
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %304, i8* %305, align 1, !tbaa !2448
  %306 = lshr i64 %284, 63
  %307 = trunc i64 %306 to i8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %307, i8* %308, align 1, !tbaa !2449
  %309 = lshr i64 %281, 63
  %310 = xor i64 %306, %309
  %311 = add nuw nsw i64 %310, %306
  %312 = icmp eq i64 %311, 2
  %313 = zext i1 %312 to i8
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %313, i8* %314, align 1, !tbaa !2450
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 1
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %RBP, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_40134f:                                     ; preds = %block_401310, %block_4012e8
  %MEMORY.1 = phi %struct.Memory* [ %3046, %block_401310 ], [ %2309, %block_4012e8 ]
  %330 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %331 = load i64, i64* %RBP
  %332 = sub i64 %331, 24
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 5
  store i64 %334, i64* %PC
  %335 = inttoptr i64 %332 to double*
  %336 = load double, double* %335
  %337 = bitcast i8* %330 to double*
  store double %336, double* %337, align 1, !tbaa !2451
  %338 = getelementptr inbounds i8, i8* %330, i64 8
  %339 = bitcast i8* %338 to double*
  store double 0.000000e+00, double* %339, align 1, !tbaa !2451
  %340 = load i64, i64* %PC
  %341 = sub i64 %340, 3364
  %342 = load i64, i64* %PC
  %343 = add i64 %342, 5
  %344 = load i64, i64* %PC
  %345 = add i64 %344, 5
  store i64 %345, i64* %PC
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %347 = load i64, i64* %346, align 8, !tbaa !2428
  %348 = add i64 %347, -8
  %349 = inttoptr i64 %348 to i64*
  store i64 %343, i64* %349
  store i64 %348, i64* %346, align 8, !tbaa !2428
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %341, i64* %350, align 8, !tbaa !2428
  %351 = load i64, i64* %PC
  %352 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %351, %struct.Memory* %MEMORY.1)
  %353 = load i64, i64* %RBP
  %354 = sub i64 %353, 8
  %355 = bitcast %union.vec128_t* %XMM0 to i8*
  %356 = load i64, i64* %PC
  %357 = add i64 %356, 5
  store i64 %357, i64* %PC
  %358 = bitcast i8* %355 to double*
  %359 = load double, double* %358, align 1
  %360 = inttoptr i64 %354 to double*
  store double %359, double* %360
  %361 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 9
  store i64 %363, i64* %PC
  %364 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %365 = bitcast i8* %361 to double*
  store double %364, double* %365, align 1, !tbaa !2451
  %366 = getelementptr inbounds i8, i8* %361, i64 8
  %367 = bitcast i8* %366 to double*
  store double 0.000000e+00, double* %367, align 1, !tbaa !2451
  %368 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %369 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %370 = load i64, i64* %PC
  %371 = add i64 %370, 9
  store i64 %371, i64* %PC
  %372 = bitcast i8* %369 to double*
  %373 = load double, double* %372, align 1
  %374 = getelementptr inbounds i8, i8* %369, i64 8
  %375 = bitcast i8* %374 to i64*
  %376 = load i64, i64* %375, align 1
  %377 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %378 = fdiv double %373, %377
  %379 = bitcast i8* %368 to double*
  store double %378, double* %379, align 1, !tbaa !2451
  %380 = getelementptr inbounds i8, i8* %368, i64 8
  %381 = bitcast i8* %380 to i64*
  store i64 %376, i64* %381, align 1, !tbaa !2451
  %382 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %383 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %384 = load i64, i64* %RBP
  %385 = sub i64 %384, 24
  %386 = load i64, i64* %PC
  %387 = add i64 %386, 5
  store i64 %387, i64* %PC
  %388 = bitcast i8* %383 to double*
  %389 = load double, double* %388, align 1
  %390 = getelementptr inbounds i8, i8* %383, i64 8
  %391 = bitcast i8* %390 to i64*
  %392 = load i64, i64* %391, align 1
  %393 = inttoptr i64 %385 to double*
  %394 = load double, double* %393
  %395 = fmul double %389, %394
  %396 = bitcast i8* %382 to double*
  store double %395, double* %396, align 1, !tbaa !2451
  %397 = getelementptr inbounds i8, i8* %382, i64 8
  %398 = bitcast i8* %397 to i64*
  store i64 %392, i64* %398, align 1, !tbaa !2451
  %399 = load i64, i64* %RBP
  %400 = sub i64 %399, 32
  %401 = bitcast %union.vec128_t* %XMM0 to i8*
  %402 = load i64, i64* %PC
  %403 = add i64 %402, 5
  store i64 %403, i64* %PC
  %404 = bitcast i8* %401 to double*
  %405 = load double, double* %404, align 1
  %406 = inttoptr i64 %400 to double*
  store double %405, double* %406
  %407 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %408 = load i64, i64* %PC
  %409 = add i64 %408, 9
  store i64 %409, i64* %PC
  %410 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %411 = bitcast i8* %407 to double*
  store double %410, double* %411, align 1, !tbaa !2451
  %412 = getelementptr inbounds i8, i8* %407, i64 8
  %413 = bitcast i8* %412 to double*
  store double 0.000000e+00, double* %413, align 1, !tbaa !2451
  %414 = load i64, i64* %RBP
  %415 = sub i64 %414, 40
  %416 = bitcast %union.vec128_t* %XMM0 to i8*
  %417 = load i64, i64* %PC
  %418 = add i64 %417, 5
  store i64 %418, i64* %PC
  %419 = bitcast i8* %416 to double*
  %420 = load double, double* %419, align 1
  %421 = inttoptr i64 %415 to double*
  store double %420, double* %421
  %422 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %423 = load i64, i64* %PC
  %424 = add i64 %423, 9
  store i64 %424, i64* %PC
  %425 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %426 = bitcast i8* %422 to double*
  store double %425, double* %426, align 1, !tbaa !2451
  %427 = getelementptr inbounds i8, i8* %422, i64 8
  %428 = bitcast i8* %427 to double*
  store double 0.000000e+00, double* %428, align 1, !tbaa !2451
  %429 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %430 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %431 = load i64, i64* %RBP
  %432 = sub i64 %431, 8
  %433 = load i64, i64* %PC
  %434 = add i64 %433, 5
  store i64 %434, i64* %PC
  %435 = bitcast i8* %430 to double*
  %436 = load double, double* %435, align 1
  %437 = getelementptr inbounds i8, i8* %430, i64 8
  %438 = bitcast i8* %437 to i64*
  %439 = load i64, i64* %438, align 1
  %440 = inttoptr i64 %432 to double*
  %441 = load double, double* %440
  %442 = fadd double %436, %441
  %443 = bitcast i8* %429 to double*
  store double %442, double* %443, align 1, !tbaa !2451
  %444 = getelementptr inbounds i8, i8* %429, i64 8
  %445 = bitcast i8* %444 to i64*
  store i64 %439, i64* %445, align 1, !tbaa !2451
  %446 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %447 = load i64, i64* %RBP
  %448 = sub i64 %447, 32
  %449 = load i64, i64* %PC
  %450 = add i64 %449, 5
  store i64 %450, i64* %PC
  %451 = inttoptr i64 %448 to double*
  %452 = load double, double* %451
  %453 = bitcast i8* %446 to double*
  store double %452, double* %453, align 1, !tbaa !2451
  %454 = getelementptr inbounds i8, i8* %446, i64 8
  %455 = bitcast i8* %454 to double*
  store double 0.000000e+00, double* %455, align 1, !tbaa !2451
  %456 = load i64, i64* %RBP
  %457 = sub i64 %456, 64
  %458 = bitcast %union.vec128_t* %XMM0 to i8*
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 5
  store i64 %460, i64* %PC
  %461 = bitcast i8* %458 to double*
  %462 = load double, double* %461, align 1
  %463 = inttoptr i64 %457 to double*
  store double %462, double* %463
  %464 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %465 = bitcast %union.vec128_t* %XMM1 to i8*
  %466 = load i64, i64* %PC
  %467 = add i64 %466, 3
  store i64 %467, i64* %PC
  %468 = bitcast i8* %465 to <2 x i32>*
  %469 = load <2 x i32>, <2 x i32>* %468, align 1
  %470 = getelementptr inbounds i8, i8* %465, i64 8
  %471 = bitcast i8* %470 to <2 x i32>*
  %472 = load <2 x i32>, <2 x i32>* %471, align 1
  %473 = extractelement <2 x i32> %469, i32 0
  %474 = bitcast i8* %464 to i32*
  store i32 %473, i32* %474, align 1, !tbaa !2454
  %475 = extractelement <2 x i32> %469, i32 1
  %476 = getelementptr inbounds i8, i8* %464, i64 4
  %477 = bitcast i8* %476 to i32*
  store i32 %475, i32* %477, align 1, !tbaa !2454
  %478 = extractelement <2 x i32> %472, i32 0
  %479 = getelementptr inbounds i8, i8* %464, i64 8
  %480 = bitcast i8* %479 to i32*
  store i32 %478, i32* %480, align 1, !tbaa !2454
  %481 = extractelement <2 x i32> %472, i32 1
  %482 = getelementptr inbounds i8, i8* %464, i64 12
  %483 = bitcast i8* %482 to i32*
  store i32 %481, i32* %483, align 1, !tbaa !2454
  %484 = load i64, i64* %PC
  %485 = sub i64 %484, 3443
  %486 = load i64, i64* %PC
  %487 = add i64 %486, 5
  %488 = load i64, i64* %PC
  %489 = add i64 %488, 5
  store i64 %489, i64* %PC
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %491 = load i64, i64* %490, align 8, !tbaa !2428
  %492 = add i64 %491, -8
  %493 = inttoptr i64 %492 to i64*
  store i64 %487, i64* %493
  store i64 %492, i64* %490, align 8, !tbaa !2428
  %494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %485, i64* %494, align 8, !tbaa !2428
  %495 = load i64, i64* %PC
  %496 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %495, %struct.Memory* %352)
  %497 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %498 = load i64, i64* %PC
  %499 = add i64 %498, 8
  store i64 %499, i64* %PC
  %500 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 112) to double*)
  %501 = bitcast i8* %497 to double*
  store double %500, double* %501, align 1, !tbaa !2451
  %502 = getelementptr inbounds i8, i8* %497, i64 8
  %503 = bitcast i8* %502 to double*
  store double 0.000000e+00, double* %503, align 1, !tbaa !2451
  %504 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %505 = load i64, i64* %RBP
  %506 = sub i64 %505, 64
  %507 = load i64, i64* %PC
  %508 = add i64 %507, 5
  store i64 %508, i64* %PC
  %509 = inttoptr i64 %506 to double*
  %510 = load double, double* %509
  %511 = bitcast i8* %504 to double*
  store double %510, double* %511, align 1, !tbaa !2451
  %512 = getelementptr inbounds i8, i8* %504, i64 8
  %513 = bitcast i8* %512 to double*
  store double 0.000000e+00, double* %513, align 1, !tbaa !2451
  %514 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %515 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %516 = bitcast %union.vec128_t* %XMM0 to i8*
  %517 = load i64, i64* %PC
  %518 = add i64 %517, 4
  store i64 %518, i64* %PC
  %519 = bitcast i8* %515 to double*
  %520 = load double, double* %519, align 1
  %521 = getelementptr inbounds i8, i8* %515, i64 8
  %522 = bitcast i8* %521 to i64*
  %523 = load i64, i64* %522, align 1
  %524 = bitcast i8* %516 to double*
  %525 = load double, double* %524, align 1
  %526 = fsub double %520, %525
  %527 = bitcast i8* %514 to double*
  store double %526, double* %527, align 1, !tbaa !2451
  %528 = getelementptr inbounds i8, i8* %514, i64 8
  %529 = bitcast i8* %528 to i64*
  store i64 %523, i64* %529, align 1, !tbaa !2451
  %530 = bitcast %union.vec128_t* %XMM2 to i8*
  %531 = load i64, i64* %PC
  %532 = add i64 %531, 9
  store i64 %532, i64* %PC
  %533 = bitcast i8* %530 to double*
  %534 = load double, double* %533, align 1
  store double %534, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %535 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %536 = load i64, i64* %RBP
  %537 = sub i64 %536, 40
  %538 = load i64, i64* %PC
  %539 = add i64 %538, 5
  store i64 %539, i64* %PC
  %540 = inttoptr i64 %537 to double*
  %541 = load double, double* %540
  %542 = bitcast i8* %535 to double*
  store double %541, double* %542, align 1, !tbaa !2451
  %543 = getelementptr inbounds i8, i8* %535, i64 8
  %544 = bitcast i8* %543 to double*
  store double 0.000000e+00, double* %544, align 1, !tbaa !2451
  %545 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %546 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %547 = load i64, i64* %RBP
  %548 = sub i64 %547, 8
  %549 = load i64, i64* %PC
  %550 = add i64 %549, 5
  store i64 %550, i64* %PC
  %551 = bitcast i8* %546 to double*
  %552 = load double, double* %551, align 1
  %553 = getelementptr inbounds i8, i8* %546, i64 8
  %554 = bitcast i8* %553 to i64*
  %555 = load i64, i64* %554, align 1
  %556 = inttoptr i64 %548 to double*
  %557 = load double, double* %556
  %558 = fadd double %552, %557
  %559 = bitcast i8* %545 to double*
  store double %558, double* %559, align 1, !tbaa !2451
  %560 = getelementptr inbounds i8, i8* %545, i64 8
  %561 = bitcast i8* %560 to i64*
  store i64 %555, i64* %561, align 1, !tbaa !2451
  %562 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %563 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %564 = bitcast %union.vec128_t* %XMM1 to i8*
  %565 = load i64, i64* %PC
  %566 = add i64 %565, 4
  store i64 %566, i64* %PC
  %567 = bitcast i8* %563 to double*
  %568 = load double, double* %567, align 1
  %569 = getelementptr inbounds i8, i8* %563, i64 8
  %570 = bitcast i8* %569 to i64*
  %571 = load i64, i64* %570, align 1
  %572 = bitcast i8* %564 to double*
  %573 = load double, double* %572, align 1
  %574 = fdiv double %568, %573
  %575 = bitcast i8* %562 to double*
  store double %574, double* %575, align 1, !tbaa !2451
  %576 = getelementptr inbounds i8, i8* %562, i64 8
  %577 = bitcast i8* %576 to i64*
  store i64 %571, i64* %577, align 1, !tbaa !2451
  %578 = load i64, i64* %RBP
  %579 = sub i64 %578, 72
  %580 = bitcast %union.vec128_t* %XMM1 to i8*
  %581 = load i64, i64* %PC
  %582 = add i64 %581, 5
  store i64 %582, i64* %PC
  %583 = bitcast i8* %580 to double*
  %584 = load double, double* %583, align 1
  %585 = inttoptr i64 %579 to double*
  store double %584, double* %585
  %586 = load i64, i64* %PC
  %587 = sub i64 %586, 3509
  %588 = load i64, i64* %PC
  %589 = add i64 %588, 5
  %590 = load i64, i64* %PC
  %591 = add i64 %590, 5
  store i64 %591, i64* %PC
  %592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %593 = load i64, i64* %592, align 8, !tbaa !2428
  %594 = add i64 %593, -8
  %595 = inttoptr i64 %594 to i64*
  store i64 %589, i64* %595
  store i64 %594, i64* %592, align 8, !tbaa !2428
  %596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %587, i64* %596, align 8, !tbaa !2428
  %597 = load i64, i64* %PC
  %598 = bitcast %struct.State** %state.i799 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %598)
  %599 = bitcast i64* %curr_pc.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %599)
  %600 = bitcast %struct.Memory** %memory.i801 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %600)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i802)
  %601 = bitcast i64* %SS_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %601)
  %602 = bitcast i64* %ES_BASE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %602)
  %603 = bitcast i64* %DS_BASE.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %603)
  %604 = bitcast i64* %CS_BASE.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %604)
  %605 = bitcast %struct.State** %STATE.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %605)
  %606 = bitcast %struct.Memory** %MEMORY.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %606)
  %607 = bitcast i64** %_DR0.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %607)
  %608 = bitcast i64** %_DR1.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %608)
  %609 = bitcast i64** %_DR2.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %609)
  %610 = bitcast i64** %_DR3.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %610)
  %611 = bitcast i64** %_DR4.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %611)
  %612 = bitcast i64** %_DR5.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %612)
  %613 = bitcast i64** %_DR6.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %613)
  %614 = bitcast i64** %_DR7.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %614)
  %615 = bitcast i64** %CR0.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %615)
  %616 = bitcast i64** %CR1.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %616)
  %617 = bitcast i64** %CR2.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %617)
  %618 = bitcast i64** %CR3.i820 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %618)
  %619 = bitcast i64** %CR4.i821 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %619)
  %620 = bitcast i64** %CR8.i822 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %620)
  store %struct.State* %0, %struct.State** %state.i799, align 8, !noalias !2470
  store i64 %597, i64* %curr_pc.i800, align 8, !noalias !2470
  store %struct.Memory* %496, %struct.Memory** %memory.i801, align 8, !noalias !2470
  store i8 0, i8* %BRANCH_TAKEN.i802, align 1, !noalias !2470
  store i64 0, i64* %SS_BASE.i803, align 8, !noalias !2470
  store i64 0, i64* %ES_BASE.i804, align 8, !noalias !2470
  store i64 0, i64* %DS_BASE.i805, align 8, !noalias !2470
  store i64 0, i64* %CS_BASE.i806, align 8, !noalias !2470
  store %struct.State* %0, %struct.State** %STATE.i807, align 8, !noalias !2470
  store %struct.Memory* %496, %struct.Memory** %MEMORY.i808, align 8, !noalias !2470
  %621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %622 = getelementptr inbounds %struct.GPR, %struct.GPR* %621, i32 0, i32 33
  %623 = getelementptr inbounds %struct.Reg, %struct.Reg* %622, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %623 to i64*
  store i64 %597, i64* %PC.i823, align 8, !alias.scope !2474, !noalias !2475
  %624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %625 = getelementptr inbounds %struct.GPR, %struct.GPR* %624, i32 0, i32 1
  %626 = getelementptr inbounds %struct.Reg, %struct.Reg* %625, i32 0, i32 0
  %627 = bitcast %union.anon* %626 to %struct.anon.2*
  %AH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %627, i32 0, i32 1
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 3
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %631 = bitcast %union.anon* %630 to %struct.anon.2*
  %BH.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %631, i32 0, i32 1
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %633 = getelementptr inbounds %struct.GPR, %struct.GPR* %632, i32 0, i32 5
  %634 = getelementptr inbounds %struct.Reg, %struct.Reg* %633, i32 0, i32 0
  %635 = bitcast %union.anon* %634 to %struct.anon.2*
  %CH.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %635, i32 0, i32 1
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 7
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %639 = bitcast %union.anon* %638 to %struct.anon.2*
  %DH.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %639, i32 0, i32 1
  %640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %641 = getelementptr inbounds %struct.GPR, %struct.GPR* %640, i32 0, i32 1
  %642 = getelementptr inbounds %struct.Reg, %struct.Reg* %641, i32 0, i32 0
  %643 = bitcast %union.anon* %642 to %struct.anon.2*
  %AL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %643, i32 0, i32 0
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %645 = getelementptr inbounds %struct.GPR, %struct.GPR* %644, i32 0, i32 3
  %646 = getelementptr inbounds %struct.Reg, %struct.Reg* %645, i32 0, i32 0
  %647 = bitcast %union.anon* %646 to %struct.anon.2*
  %BL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %647, i32 0, i32 0
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %649 = getelementptr inbounds %struct.GPR, %struct.GPR* %648, i32 0, i32 5
  %650 = getelementptr inbounds %struct.Reg, %struct.Reg* %649, i32 0, i32 0
  %651 = bitcast %union.anon* %650 to %struct.anon.2*
  %CL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %651, i32 0, i32 0
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 7
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %655 = bitcast %union.anon* %654 to %struct.anon.2*
  %DL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %655, i32 0, i32 0
  %656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %657 = getelementptr inbounds %struct.GPR, %struct.GPR* %656, i32 0, i32 9
  %658 = getelementptr inbounds %struct.Reg, %struct.Reg* %657, i32 0, i32 0
  %659 = bitcast %union.anon* %658 to %struct.anon.2*
  %SIL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %659, i32 0, i32 0
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %661 = getelementptr inbounds %struct.GPR, %struct.GPR* %660, i32 0, i32 11
  %662 = getelementptr inbounds %struct.Reg, %struct.Reg* %661, i32 0, i32 0
  %663 = bitcast %union.anon* %662 to %struct.anon.2*
  %DIL.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %663, i32 0, i32 0
  %664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %665 = getelementptr inbounds %struct.GPR, %struct.GPR* %664, i32 0, i32 13
  %666 = getelementptr inbounds %struct.Reg, %struct.Reg* %665, i32 0, i32 0
  %667 = bitcast %union.anon* %666 to %struct.anon.2*
  %SPL.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %667, i32 0, i32 0
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %669 = getelementptr inbounds %struct.GPR, %struct.GPR* %668, i32 0, i32 15
  %670 = getelementptr inbounds %struct.Reg, %struct.Reg* %669, i32 0, i32 0
  %671 = bitcast %union.anon* %670 to %struct.anon.2*
  %BPL.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %671, i32 0, i32 0
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %673 = getelementptr inbounds %struct.GPR, %struct.GPR* %672, i32 0, i32 17
  %674 = getelementptr inbounds %struct.Reg, %struct.Reg* %673, i32 0, i32 0
  %675 = bitcast %union.anon* %674 to %struct.anon.2*
  %R8B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %675, i32 0, i32 0
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %677 = getelementptr inbounds %struct.GPR, %struct.GPR* %676, i32 0, i32 19
  %678 = getelementptr inbounds %struct.Reg, %struct.Reg* %677, i32 0, i32 0
  %679 = bitcast %union.anon* %678 to %struct.anon.2*
  %R9B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %679, i32 0, i32 0
  %680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %681 = getelementptr inbounds %struct.GPR, %struct.GPR* %680, i32 0, i32 21
  %682 = getelementptr inbounds %struct.Reg, %struct.Reg* %681, i32 0, i32 0
  %683 = bitcast %union.anon* %682 to %struct.anon.2*
  %R10B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %683, i32 0, i32 0
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %685 = getelementptr inbounds %struct.GPR, %struct.GPR* %684, i32 0, i32 23
  %686 = getelementptr inbounds %struct.Reg, %struct.Reg* %685, i32 0, i32 0
  %687 = bitcast %union.anon* %686 to %struct.anon.2*
  %R11B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %687, i32 0, i32 0
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %689 = getelementptr inbounds %struct.GPR, %struct.GPR* %688, i32 0, i32 25
  %690 = getelementptr inbounds %struct.Reg, %struct.Reg* %689, i32 0, i32 0
  %691 = bitcast %union.anon* %690 to %struct.anon.2*
  %R12B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %691, i32 0, i32 0
  %692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %693 = getelementptr inbounds %struct.GPR, %struct.GPR* %692, i32 0, i32 27
  %694 = getelementptr inbounds %struct.Reg, %struct.Reg* %693, i32 0, i32 0
  %695 = bitcast %union.anon* %694 to %struct.anon.2*
  %R13B.i841 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %695, i32 0, i32 0
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %697 = getelementptr inbounds %struct.GPR, %struct.GPR* %696, i32 0, i32 29
  %698 = getelementptr inbounds %struct.Reg, %struct.Reg* %697, i32 0, i32 0
  %699 = bitcast %union.anon* %698 to %struct.anon.2*
  %R14B.i842 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %699, i32 0, i32 0
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 31
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %703 = bitcast %union.anon* %702 to %struct.anon.2*
  %R15B.i843 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %703, i32 0, i32 0
  %704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %705 = getelementptr inbounds %struct.GPR, %struct.GPR* %704, i32 0, i32 1
  %706 = getelementptr inbounds %struct.Reg, %struct.Reg* %705, i32 0, i32 0
  %AX.i844 = bitcast %union.anon* %706 to i16*
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %708 = getelementptr inbounds %struct.GPR, %struct.GPR* %707, i32 0, i32 3
  %709 = getelementptr inbounds %struct.Reg, %struct.Reg* %708, i32 0, i32 0
  %BX.i845 = bitcast %union.anon* %709 to i16*
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %711 = getelementptr inbounds %struct.GPR, %struct.GPR* %710, i32 0, i32 5
  %712 = getelementptr inbounds %struct.Reg, %struct.Reg* %711, i32 0, i32 0
  %CX.i846 = bitcast %union.anon* %712 to i16*
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 7
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %DX.i847 = bitcast %union.anon* %715 to i16*
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %717 = getelementptr inbounds %struct.GPR, %struct.GPR* %716, i32 0, i32 9
  %718 = getelementptr inbounds %struct.Reg, %struct.Reg* %717, i32 0, i32 0
  %SI.i848 = bitcast %union.anon* %718 to i16*
  %719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %720 = getelementptr inbounds %struct.GPR, %struct.GPR* %719, i32 0, i32 11
  %721 = getelementptr inbounds %struct.Reg, %struct.Reg* %720, i32 0, i32 0
  %DI.i849 = bitcast %union.anon* %721 to i16*
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %723 = getelementptr inbounds %struct.GPR, %struct.GPR* %722, i32 0, i32 13
  %724 = getelementptr inbounds %struct.Reg, %struct.Reg* %723, i32 0, i32 0
  %SP.i850 = bitcast %union.anon* %724 to i16*
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 15
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %BP.i851 = bitcast %union.anon* %727 to i16*
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 17
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %R8W.i852 = bitcast %union.anon* %730 to i16*
  %731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %732 = getelementptr inbounds %struct.GPR, %struct.GPR* %731, i32 0, i32 19
  %733 = getelementptr inbounds %struct.Reg, %struct.Reg* %732, i32 0, i32 0
  %R9W.i853 = bitcast %union.anon* %733 to i16*
  %734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %735 = getelementptr inbounds %struct.GPR, %struct.GPR* %734, i32 0, i32 21
  %736 = getelementptr inbounds %struct.Reg, %struct.Reg* %735, i32 0, i32 0
  %R10W.i854 = bitcast %union.anon* %736 to i16*
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %738 = getelementptr inbounds %struct.GPR, %struct.GPR* %737, i32 0, i32 23
  %739 = getelementptr inbounds %struct.Reg, %struct.Reg* %738, i32 0, i32 0
  %R11W.i855 = bitcast %union.anon* %739 to i16*
  %740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %741 = getelementptr inbounds %struct.GPR, %struct.GPR* %740, i32 0, i32 25
  %742 = getelementptr inbounds %struct.Reg, %struct.Reg* %741, i32 0, i32 0
  %R12W.i856 = bitcast %union.anon* %742 to i16*
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %744 = getelementptr inbounds %struct.GPR, %struct.GPR* %743, i32 0, i32 27
  %745 = getelementptr inbounds %struct.Reg, %struct.Reg* %744, i32 0, i32 0
  %R13W.i857 = bitcast %union.anon* %745 to i16*
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %747 = getelementptr inbounds %struct.GPR, %struct.GPR* %746, i32 0, i32 29
  %748 = getelementptr inbounds %struct.Reg, %struct.Reg* %747, i32 0, i32 0
  %R14W.i858 = bitcast %union.anon* %748 to i16*
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 31
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %R15W.i859 = bitcast %union.anon* %751 to i16*
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %753 = getelementptr inbounds %struct.GPR, %struct.GPR* %752, i32 0, i32 33
  %754 = getelementptr inbounds %struct.Reg, %struct.Reg* %753, i32 0, i32 0
  %IP.i860 = bitcast %union.anon* %754 to i16*
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 1
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %EAX.i861 = bitcast %union.anon* %757 to i32*
  %758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %759 = getelementptr inbounds %struct.GPR, %struct.GPR* %758, i32 0, i32 3
  %760 = getelementptr inbounds %struct.Reg, %struct.Reg* %759, i32 0, i32 0
  %EBX.i862 = bitcast %union.anon* %760 to i32*
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 5
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %ECX.i863 = bitcast %union.anon* %763 to i32*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 7
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %EDX.i864 = bitcast %union.anon* %766 to i32*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 9
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %ESI.i865 = bitcast %union.anon* %769 to i32*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 11
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %EDI.i866 = bitcast %union.anon* %772 to i32*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 13
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %ESP.i867 = bitcast %union.anon* %775 to i32*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 15
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %EBP.i868 = bitcast %union.anon* %778 to i32*
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 33
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %EIP.i869 = bitcast %union.anon* %781 to i32*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 17
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %R8D.i870 = bitcast %union.anon* %784 to i32*
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 19
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %R9D.i871 = bitcast %union.anon* %787 to i32*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 21
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %R10D.i872 = bitcast %union.anon* %790 to i32*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 23
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %R11D.i873 = bitcast %union.anon* %793 to i32*
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 25
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %R12D.i874 = bitcast %union.anon* %796 to i32*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 27
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %R13D.i875 = bitcast %union.anon* %799 to i32*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 29
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %R14D.i876 = bitcast %union.anon* %802 to i32*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 31
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %R15D.i877 = bitcast %union.anon* %805 to i32*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 1
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %808 to i64*
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 3
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %RBX.i879 = bitcast %union.anon* %811 to i64*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 5
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %814 to i64*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 7
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %817 to i64*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 9
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %RSI.i882 = bitcast %union.anon* %820 to i64*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 11
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %RDI.i883 = bitcast %union.anon* %823 to i64*
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 13
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %RSP.i884 = bitcast %union.anon* %826 to i64*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 15
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %829 to i64*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 17
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %R8.i886 = bitcast %union.anon* %832 to i64*
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %834 = getelementptr inbounds %struct.GPR, %struct.GPR* %833, i32 0, i32 19
  %835 = getelementptr inbounds %struct.Reg, %struct.Reg* %834, i32 0, i32 0
  %R9.i887 = bitcast %union.anon* %835 to i64*
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %837 = getelementptr inbounds %struct.GPR, %struct.GPR* %836, i32 0, i32 21
  %838 = getelementptr inbounds %struct.Reg, %struct.Reg* %837, i32 0, i32 0
  %R10.i888 = bitcast %union.anon* %838 to i64*
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 23
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %R11.i889 = bitcast %union.anon* %841 to i64*
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 25
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %R12.i890 = bitcast %union.anon* %844 to i64*
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 27
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %R13.i891 = bitcast %union.anon* %847 to i64*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 29
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %R14.i892 = bitcast %union.anon* %850 to i64*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 31
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %R15.i893 = bitcast %union.anon* %853 to i64*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 33
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %RIP.i894 = bitcast %union.anon* %856 to i64*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %858 = getelementptr inbounds %struct.Segments, %struct.Segments* %857, i32 0, i32 1
  %SS.i895 = bitcast %union.SegmentSelector* %858 to i16*
  %859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %860 = getelementptr inbounds %struct.Segments, %struct.Segments* %859, i32 0, i32 3
  %ES.i896 = bitcast %union.SegmentSelector* %860 to i16*
  %861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %862 = getelementptr inbounds %struct.Segments, %struct.Segments* %861, i32 0, i32 5
  %GS.i897 = bitcast %union.SegmentSelector* %862 to i16*
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %864 = getelementptr inbounds %struct.Segments, %struct.Segments* %863, i32 0, i32 7
  %FS.i898 = bitcast %union.SegmentSelector* %864 to i16*
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %866 = getelementptr inbounds %struct.Segments, %struct.Segments* %865, i32 0, i32 9
  %DS.i899 = bitcast %union.SegmentSelector* %866 to i16*
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %868 = getelementptr inbounds %struct.Segments, %struct.Segments* %867, i32 0, i32 11
  %CS.i900 = bitcast %union.SegmentSelector* %868 to i16*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %870 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %869, i32 0, i32 5
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %GS_BASE.i901 = bitcast %union.anon* %871 to i64*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %873 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %872, i32 0, i32 7
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %FS_BASE.i902 = bitcast %union.anon* %874 to i64*
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %876 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %875, i64 0, i64 0
  %YMM0.i903 = bitcast %union.VectorReg* %876 to %"class.std::bitset"*
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %878 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %877, i64 0, i64 1
  %YMM1.i904 = bitcast %union.VectorReg* %878 to %"class.std::bitset"*
  %879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %880 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %879, i64 0, i64 2
  %YMM2.i905 = bitcast %union.VectorReg* %880 to %"class.std::bitset"*
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %882 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %881, i64 0, i64 3
  %YMM3.i906 = bitcast %union.VectorReg* %882 to %"class.std::bitset"*
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %884 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %883, i64 0, i64 4
  %YMM4.i907 = bitcast %union.VectorReg* %884 to %"class.std::bitset"*
  %885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %886 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %885, i64 0, i64 5
  %YMM5.i908 = bitcast %union.VectorReg* %886 to %"class.std::bitset"*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %888 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %887, i64 0, i64 6
  %YMM6.i909 = bitcast %union.VectorReg* %888 to %"class.std::bitset"*
  %889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %890 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %889, i64 0, i64 7
  %YMM7.i910 = bitcast %union.VectorReg* %890 to %"class.std::bitset"*
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %891, i64 0, i64 8
  %YMM8.i911 = bitcast %union.VectorReg* %892 to %"class.std::bitset"*
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %893, i64 0, i64 9
  %YMM9.i912 = bitcast %union.VectorReg* %894 to %"class.std::bitset"*
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %895, i64 0, i64 10
  %YMM10.i913 = bitcast %union.VectorReg* %896 to %"class.std::bitset"*
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %898 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %897, i64 0, i64 11
  %YMM11.i914 = bitcast %union.VectorReg* %898 to %"class.std::bitset"*
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %899, i64 0, i64 12
  %YMM12.i915 = bitcast %union.VectorReg* %900 to %"class.std::bitset"*
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %902 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %901, i64 0, i64 13
  %YMM13.i916 = bitcast %union.VectorReg* %902 to %"class.std::bitset"*
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %904 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %903, i64 0, i64 14
  %YMM14.i917 = bitcast %union.VectorReg* %904 to %"class.std::bitset"*
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %906 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %905, i64 0, i64 15
  %YMM15.i918 = bitcast %union.VectorReg* %906 to %"class.std::bitset"*
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %908 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %907, i64 0, i64 0
  %XMM0.i919 = bitcast %union.VectorReg* %908 to %union.vec128_t*
  %909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %910 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %909, i64 0, i64 1
  %XMM1.i920 = bitcast %union.VectorReg* %910 to %union.vec128_t*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %911, i64 0, i64 2
  %XMM2.i921 = bitcast %union.VectorReg* %912 to %union.vec128_t*
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %914 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %913, i64 0, i64 3
  %XMM3.i922 = bitcast %union.VectorReg* %914 to %union.vec128_t*
  %915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %916 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %915, i64 0, i64 4
  %XMM4.i923 = bitcast %union.VectorReg* %916 to %union.vec128_t*
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %917, i64 0, i64 5
  %XMM5.i924 = bitcast %union.VectorReg* %918 to %union.vec128_t*
  %919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %920 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %919, i64 0, i64 6
  %XMM6.i925 = bitcast %union.VectorReg* %920 to %union.vec128_t*
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %922 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %921, i64 0, i64 7
  %XMM7.i926 = bitcast %union.VectorReg* %922 to %union.vec128_t*
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %924 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %923, i64 0, i64 8
  %XMM8.i927 = bitcast %union.VectorReg* %924 to %union.vec128_t*
  %925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %926 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %925, i64 0, i64 9
  %XMM9.i928 = bitcast %union.VectorReg* %926 to %union.vec128_t*
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %928 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %927, i64 0, i64 10
  %XMM10.i929 = bitcast %union.VectorReg* %928 to %union.vec128_t*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %930 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %929, i64 0, i64 11
  %XMM11.i930 = bitcast %union.VectorReg* %930 to %union.vec128_t*
  %931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %932 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %931, i64 0, i64 12
  %XMM12.i931 = bitcast %union.VectorReg* %932 to %union.vec128_t*
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %934 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %933, i64 0, i64 13
  %XMM13.i932 = bitcast %union.VectorReg* %934 to %union.vec128_t*
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %936 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %935, i64 0, i64 14
  %XMM14.i933 = bitcast %union.VectorReg* %936 to %union.vec128_t*
  %937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %938 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %937, i64 0, i64 15
  %XMM15.i934 = bitcast %union.VectorReg* %938 to %union.vec128_t*
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %940 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %939, i32 0, i32 0
  %941 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %940, i64 0, i64 0
  %ST0.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %941, i32 0, i32 1
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %943 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %942, i32 0, i32 0
  %944 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %943, i64 0, i64 1
  %ST1.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %944, i32 0, i32 1
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %946 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %945, i32 0, i32 0
  %947 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %946, i64 0, i64 2
  %ST2.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %947, i32 0, i32 1
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %949 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %948, i32 0, i32 0
  %950 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %949, i64 0, i64 3
  %ST3.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %950, i32 0, i32 1
  %951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %952 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %951, i32 0, i32 0
  %953 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %952, i64 0, i64 4
  %ST4.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %953, i32 0, i32 1
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %955 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %954, i32 0, i32 0
  %956 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %955, i64 0, i64 5
  %ST5.i940 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %956, i32 0, i32 1
  %957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %958 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %957, i32 0, i32 0
  %959 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %958, i64 0, i64 6
  %ST6.i941 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %959, i32 0, i32 1
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %961 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %960, i32 0, i32 0
  %962 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %961, i64 0, i64 7
  %ST7.i942 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %962, i32 0, i32 1
  %963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %964 = getelementptr inbounds %struct.MMX, %struct.MMX* %963, i32 0, i32 0
  %965 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %964, i64 0, i64 0
  %966 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %965, i32 0, i32 1
  %967 = bitcast %union.vec64_t* %966 to %struct.uint64v1_t*
  %968 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %967, i32 0, i32 0
  %MM0.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %968, i64 0, i64 0
  %969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %970 = getelementptr inbounds %struct.MMX, %struct.MMX* %969, i32 0, i32 0
  %971 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %970, i64 0, i64 1
  %972 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %971, i32 0, i32 1
  %973 = bitcast %union.vec64_t* %972 to %struct.uint64v1_t*
  %974 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %973, i32 0, i32 0
  %MM1.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %974, i64 0, i64 0
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %976 = getelementptr inbounds %struct.MMX, %struct.MMX* %975, i32 0, i32 0
  %977 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %976, i64 0, i64 2
  %978 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %977, i32 0, i32 1
  %979 = bitcast %union.vec64_t* %978 to %struct.uint64v1_t*
  %980 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %979, i32 0, i32 0
  %MM2.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %980, i64 0, i64 0
  %981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %982 = getelementptr inbounds %struct.MMX, %struct.MMX* %981, i32 0, i32 0
  %983 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %982, i64 0, i64 3
  %984 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %983, i32 0, i32 1
  %985 = bitcast %union.vec64_t* %984 to %struct.uint64v1_t*
  %986 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %985, i32 0, i32 0
  %MM3.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %986, i64 0, i64 0
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %988 = getelementptr inbounds %struct.MMX, %struct.MMX* %987, i32 0, i32 0
  %989 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %988, i64 0, i64 4
  %990 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %989, i32 0, i32 1
  %991 = bitcast %union.vec64_t* %990 to %struct.uint64v1_t*
  %992 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %991, i32 0, i32 0
  %MM4.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %992, i64 0, i64 0
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %994 = getelementptr inbounds %struct.MMX, %struct.MMX* %993, i32 0, i32 0
  %995 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %994, i64 0, i64 5
  %996 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %995, i32 0, i32 1
  %997 = bitcast %union.vec64_t* %996 to %struct.uint64v1_t*
  %998 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %997, i32 0, i32 0
  %MM5.i948 = getelementptr inbounds [1 x i64], [1 x i64]* %998, i64 0, i64 0
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1000 = getelementptr inbounds %struct.MMX, %struct.MMX* %999, i32 0, i32 0
  %1001 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1000, i64 0, i64 6
  %1002 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1001, i32 0, i32 1
  %1003 = bitcast %union.vec64_t* %1002 to %struct.uint64v1_t*
  %1004 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1003, i32 0, i32 0
  %MM6.i949 = getelementptr inbounds [1 x i64], [1 x i64]* %1004, i64 0, i64 0
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1006 = getelementptr inbounds %struct.MMX, %struct.MMX* %1005, i32 0, i32 0
  %1007 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1006, i64 0, i64 7
  %1008 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1007, i32 0, i32 1
  %1009 = bitcast %union.vec64_t* %1008 to %struct.uint64v1_t*
  %1010 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1009, i32 0, i32 0
  %MM7.i950 = getelementptr inbounds [1 x i64], [1 x i64]* %1010, i64 0, i64 0
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1011, i32 0, i32 5
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1012, i32 0, i32 1
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1013, i32 0, i32 11
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1014, i32 0, i32 13
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i955 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1015, i32 0, i32 3
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i956 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1016, i32 0, i32 9
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i957 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1017, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i809, align 8, !noalias !2470
  store i64* @DR1, i64** %_DR1.i810, align 8, !noalias !2470
  store i64* @DR2, i64** %_DR2.i811, align 8, !noalias !2470
  store i64* @DR3, i64** %_DR3.i812, align 8, !noalias !2470
  store i64* @DR4, i64** %_DR4.i813, align 8, !noalias !2470
  store i64* @DR5, i64** %_DR5.i814, align 8, !noalias !2470
  store i64* @DR6, i64** %_DR6.i815, align 8, !noalias !2470
  store i64* @DR7, i64** %_DR7.i816, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i817, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i818, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i819, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i820, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i821, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i822, align 8, !noalias !2470
  %1018 = bitcast %"class.std::bitset"* %YMM0.i903 to double*
  %1019 = load double, double* %1018, !alias.scope !2474, !noalias !2475
  %1020 = load i64, i64* %RSP.i884, !alias.scope !2474, !noalias !2475
  %1021 = load %struct.Memory*, %struct.Memory** %MEMORY.i808, !noalias !2470
  %1022 = inttoptr i64 %1020 to i64*
  %1023 = load i64, i64* %1022
  store i64 %1023, i64* %PC.i823, !alias.scope !2474, !noalias !2475
  %1024 = add i64 %1020, 8
  store i64 %1024, i64* %RSP.i884, !alias.scope !2474, !noalias !2475
  %1025 = call double @sin(double %1019)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i903, !alias.scope !2474, !noalias !2475
  %1026 = bitcast %"class.std::bitset"* %YMM0.i903 to double*
  store double %1025, double* %1026, !alias.scope !2474, !noalias !2475
  %1027 = load %struct.Memory*, %struct.Memory** %MEMORY.i808, !noalias !2470
  %1028 = bitcast %struct.State** %state.i799 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1028)
  %1029 = bitcast i64* %curr_pc.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1029)
  %1030 = bitcast %struct.Memory** %memory.i801 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1030)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i802)
  %1031 = bitcast i64* %SS_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1031)
  %1032 = bitcast i64* %ES_BASE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1032)
  %1033 = bitcast i64* %DS_BASE.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1033)
  %1034 = bitcast i64* %CS_BASE.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1034)
  %1035 = bitcast %struct.State** %STATE.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1035)
  %1036 = bitcast %struct.Memory** %MEMORY.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1036)
  %1037 = bitcast i64** %_DR0.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1037)
  %1038 = bitcast i64** %_DR1.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1038)
  %1039 = bitcast i64** %_DR2.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1039)
  %1040 = bitcast i64** %_DR3.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1040)
  %1041 = bitcast i64** %_DR4.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1041)
  %1042 = bitcast i64** %_DR5.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1042)
  %1043 = bitcast i64** %_DR6.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1043)
  %1044 = bitcast i64** %_DR7.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1044)
  %1045 = bitcast i64** %CR0.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1045)
  %1046 = bitcast i64** %CR1.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1046)
  %1047 = bitcast i64** %CR2.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1047)
  %1048 = bitcast i64** %CR3.i820 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1048)
  %1049 = bitcast i64** %CR4.i821 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1049)
  %1050 = bitcast i64** %CR8.i822 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1050)
  %1051 = load i64, i64* %RBP
  %1052 = sub i64 %1051, 48
  %1053 = bitcast %union.vec128_t* %XMM0 to i8*
  %1054 = load i64, i64* %PC
  %1055 = add i64 %1054, 5
  store i64 %1055, i64* %PC
  %1056 = bitcast i8* %1053 to double*
  %1057 = load double, double* %1056, align 1
  %1058 = inttoptr i64 %1052 to double*
  store double %1057, double* %1058
  %1059 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1060 = load i64, i64* %RBP
  %1061 = sub i64 %1060, 72
  %1062 = load i64, i64* %PC
  %1063 = add i64 %1062, 5
  store i64 %1063, i64* %PC
  %1064 = inttoptr i64 %1061 to double*
  %1065 = load double, double* %1064
  %1066 = bitcast i8* %1059 to double*
  store double %1065, double* %1066, align 1, !tbaa !2451
  %1067 = getelementptr inbounds i8, i8* %1059, i64 8
  %1068 = bitcast i8* %1067 to double*
  store double 0.000000e+00, double* %1068, align 1, !tbaa !2451
  %1069 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1070 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1071 = load i64, i64* %PC
  %1072 = add i64 %1071, 9
  store i64 %1072, i64* %PC
  %1073 = bitcast i8* %1070 to double*
  %1074 = load double, double* %1073, align 1
  %1075 = getelementptr inbounds i8, i8* %1070, i64 8
  %1076 = bitcast i8* %1075 to i64*
  %1077 = load i64, i64* %1076, align 1
  %1078 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1079 = fmul double %1074, %1078
  %1080 = bitcast i8* %1069 to double*
  store double %1079, double* %1080, align 1, !tbaa !2451
  %1081 = getelementptr inbounds i8, i8* %1069, i64 8
  %1082 = bitcast i8* %1081 to i64*
  store i64 %1077, i64* %1082, align 1, !tbaa !2451
  %1083 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1084 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1085 = load i64, i64* %RBP
  %1086 = sub i64 %1085, 48
  %1087 = load i64, i64* %PC
  %1088 = add i64 %1087, 5
  store i64 %1088, i64* %PC
  %1089 = bitcast i8* %1084 to double*
  %1090 = load double, double* %1089, align 1
  %1091 = getelementptr inbounds i8, i8* %1084, i64 8
  %1092 = bitcast i8* %1091 to i64*
  %1093 = load i64, i64* %1092, align 1
  %1094 = inttoptr i64 %1086 to double*
  %1095 = load double, double* %1094
  %1096 = fmul double %1090, %1095
  %1097 = bitcast i8* %1083 to double*
  store double %1096, double* %1097, align 1, !tbaa !2451
  %1098 = getelementptr inbounds i8, i8* %1083, i64 8
  %1099 = bitcast i8* %1098 to i64*
  store i64 %1093, i64* %1099, align 1, !tbaa !2451
  %1100 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1101 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1102 = load i64, i64* %RBP
  %1103 = sub i64 %1102, 48
  %1104 = load i64, i64* %PC
  %1105 = add i64 %1104, 5
  store i64 %1105, i64* %PC
  %1106 = bitcast i8* %1101 to double*
  %1107 = load double, double* %1106, align 1
  %1108 = getelementptr inbounds i8, i8* %1101, i64 8
  %1109 = bitcast i8* %1108 to i64*
  %1110 = load i64, i64* %1109, align 1
  %1111 = inttoptr i64 %1103 to double*
  %1112 = load double, double* %1111
  %1113 = fmul double %1107, %1112
  %1114 = bitcast i8* %1100 to double*
  store double %1113, double* %1114, align 1, !tbaa !2451
  %1115 = getelementptr inbounds i8, i8* %1100, i64 8
  %1116 = bitcast i8* %1115 to i64*
  store i64 %1110, i64* %1116, align 1, !tbaa !2451
  %1117 = load i64, i64* %RBP
  %1118 = sub i64 %1117, 48
  %1119 = bitcast %union.vec128_t* %XMM0 to i8*
  %1120 = load i64, i64* %PC
  %1121 = add i64 %1120, 5
  store i64 %1121, i64* %PC
  %1122 = bitcast i8* %1119 to double*
  %1123 = load double, double* %1122, align 1
  %1124 = inttoptr i64 %1118 to double*
  store double %1123, double* %1124
  %1125 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1126 = load i64, i64* %PC
  %1127 = add i64 %1126, 9
  store i64 %1127, i64* %PC
  %1128 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1129 = bitcast i8* %1125 to double*
  store double %1128, double* %1129, align 1, !tbaa !2451
  %1130 = getelementptr inbounds i8, i8* %1125, i64 8
  %1131 = bitcast i8* %1130 to double*
  store double 0.000000e+00, double* %1131, align 1, !tbaa !2451
  %1132 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1133 = load i64, i64* %RBP
  %1134 = sub i64 %1133, 40
  %1135 = load i64, i64* %PC
  %1136 = add i64 %1135, 5
  store i64 %1136, i64* %PC
  %1137 = inttoptr i64 %1134 to double*
  %1138 = load double, double* %1137
  %1139 = bitcast i8* %1132 to double*
  store double %1138, double* %1139, align 1, !tbaa !2451
  %1140 = getelementptr inbounds i8, i8* %1132, i64 8
  %1141 = bitcast i8* %1140 to double*
  store double 0.000000e+00, double* %1141, align 1, !tbaa !2451
  %1142 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1143 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1144 = load i64, i64* %RBP
  %1145 = sub i64 %1144, 8
  %1146 = load i64, i64* %PC
  %1147 = add i64 %1146, 5
  store i64 %1147, i64* %PC
  %1148 = bitcast i8* %1143 to double*
  %1149 = load double, double* %1148, align 1
  %1150 = getelementptr inbounds i8, i8* %1143, i64 8
  %1151 = bitcast i8* %1150 to i64*
  %1152 = load i64, i64* %1151, align 1
  %1153 = inttoptr i64 %1145 to double*
  %1154 = load double, double* %1153
  %1155 = fadd double %1149, %1154
  %1156 = bitcast i8* %1142 to double*
  store double %1155, double* %1156, align 1, !tbaa !2451
  %1157 = getelementptr inbounds i8, i8* %1142, i64 8
  %1158 = bitcast i8* %1157 to i64*
  store i64 %1152, i64* %1158, align 1, !tbaa !2451
  %1159 = load i64, i64* %RBP
  %1160 = sub i64 %1159, 80
  %1161 = bitcast %union.vec128_t* %XMM0 to i8*
  %1162 = load i64, i64* %PC
  %1163 = add i64 %1162, 5
  store i64 %1163, i64* %PC
  %1164 = bitcast i8* %1161 to double*
  %1165 = load double, double* %1164, align 1
  %1166 = inttoptr i64 %1160 to double*
  store double %1165, double* %1166
  %1167 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1168 = bitcast %union.vec128_t* %XMM1 to i8*
  %1169 = load i64, i64* %PC
  %1170 = add i64 %1169, 3
  store i64 %1170, i64* %PC
  %1171 = bitcast i8* %1168 to <2 x i32>*
  %1172 = load <2 x i32>, <2 x i32>* %1171, align 1
  %1173 = getelementptr inbounds i8, i8* %1168, i64 8
  %1174 = bitcast i8* %1173 to <2 x i32>*
  %1175 = load <2 x i32>, <2 x i32>* %1174, align 1
  %1176 = extractelement <2 x i32> %1172, i32 0
  %1177 = bitcast i8* %1167 to i32*
  store i32 %1176, i32* %1177, align 1, !tbaa !2454
  %1178 = extractelement <2 x i32> %1172, i32 1
  %1179 = getelementptr inbounds i8, i8* %1167, i64 4
  %1180 = bitcast i8* %1179 to i32*
  store i32 %1178, i32* %1180, align 1, !tbaa !2454
  %1181 = extractelement <2 x i32> %1175, i32 0
  %1182 = getelementptr inbounds i8, i8* %1167, i64 8
  %1183 = bitcast i8* %1182 to i32*
  store i32 %1181, i32* %1183, align 1, !tbaa !2454
  %1184 = extractelement <2 x i32> %1175, i32 1
  %1185 = getelementptr inbounds i8, i8* %1167, i64 12
  %1186 = bitcast i8* %1185 to i32*
  store i32 %1184, i32* %1186, align 1, !tbaa !2454
  %1187 = load i64, i64* %PC
  %1188 = sub i64 %1187, 3575
  %1189 = load i64, i64* %PC
  %1190 = add i64 %1189, 5
  %1191 = load i64, i64* %PC
  %1192 = add i64 %1191, 5
  store i64 %1192, i64* %PC
  %1193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1194 = load i64, i64* %1193, align 8, !tbaa !2428
  %1195 = add i64 %1194, -8
  %1196 = inttoptr i64 %1195 to i64*
  store i64 %1190, i64* %1196
  store i64 %1195, i64* %1193, align 8, !tbaa !2428
  %1197 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1188, i64* %1197, align 8, !tbaa !2428
  %1198 = load i64, i64* %PC
  %1199 = bitcast %struct.State** %state.i640 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1199)
  %1200 = bitcast i64* %curr_pc.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1200)
  %1201 = bitcast %struct.Memory** %memory.i642 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1201)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i643)
  %1202 = bitcast i64* %SS_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1202)
  %1203 = bitcast i64* %ES_BASE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1203)
  %1204 = bitcast i64* %DS_BASE.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1204)
  %1205 = bitcast i64* %CS_BASE.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1205)
  %1206 = bitcast %struct.State** %STATE.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1206)
  %1207 = bitcast %struct.Memory** %MEMORY.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1207)
  %1208 = bitcast i64** %_DR0.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1208)
  %1209 = bitcast i64** %_DR1.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1209)
  %1210 = bitcast i64** %_DR2.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1210)
  %1211 = bitcast i64** %_DR3.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1211)
  %1212 = bitcast i64** %_DR4.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1212)
  %1213 = bitcast i64** %_DR5.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1213)
  %1214 = bitcast i64** %_DR6.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1214)
  %1215 = bitcast i64** %_DR7.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1215)
  %1216 = bitcast i64** %CR0.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1216)
  %1217 = bitcast i64** %CR1.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1217)
  %1218 = bitcast i64** %CR2.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1218)
  %1219 = bitcast i64** %CR3.i661 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1219)
  %1220 = bitcast i64** %CR4.i662 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1220)
  %1221 = bitcast i64** %CR8.i663 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1221)
  store %struct.State* %0, %struct.State** %state.i640, align 8, !noalias !2476
  store i64 %1198, i64* %curr_pc.i641, align 8, !noalias !2476
  store %struct.Memory* %1027, %struct.Memory** %memory.i642, align 8, !noalias !2476
  store i8 0, i8* %BRANCH_TAKEN.i643, align 1, !noalias !2476
  store i64 0, i64* %SS_BASE.i644, align 8, !noalias !2476
  store i64 0, i64* %ES_BASE.i645, align 8, !noalias !2476
  store i64 0, i64* %DS_BASE.i646, align 8, !noalias !2476
  store i64 0, i64* %CS_BASE.i647, align 8, !noalias !2476
  store %struct.State* %0, %struct.State** %STATE.i648, align 8, !noalias !2476
  store %struct.Memory* %1027, %struct.Memory** %MEMORY.i649, align 8, !noalias !2476
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 33
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %1224 to i64*
  store i64 %1198, i64* %PC.i664, align 8, !alias.scope !2480, !noalias !2481
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 1
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %1228 = bitcast %union.anon* %1227 to %struct.anon.2*
  %AH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1228, i32 0, i32 1
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 3
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %1232 = bitcast %union.anon* %1231 to %struct.anon.2*
  %BH.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1232, i32 0, i32 1
  %1233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1234 = getelementptr inbounds %struct.GPR, %struct.GPR* %1233, i32 0, i32 5
  %1235 = getelementptr inbounds %struct.Reg, %struct.Reg* %1234, i32 0, i32 0
  %1236 = bitcast %union.anon* %1235 to %struct.anon.2*
  %CH.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1236, i32 0, i32 1
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 7
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %1240 = bitcast %union.anon* %1239 to %struct.anon.2*
  %DH.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1240, i32 0, i32 1
  %1241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1242 = getelementptr inbounds %struct.GPR, %struct.GPR* %1241, i32 0, i32 1
  %1243 = getelementptr inbounds %struct.Reg, %struct.Reg* %1242, i32 0, i32 0
  %1244 = bitcast %union.anon* %1243 to %struct.anon.2*
  %AL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1244, i32 0, i32 0
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1246 = getelementptr inbounds %struct.GPR, %struct.GPR* %1245, i32 0, i32 3
  %1247 = getelementptr inbounds %struct.Reg, %struct.Reg* %1246, i32 0, i32 0
  %1248 = bitcast %union.anon* %1247 to %struct.anon.2*
  %BL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1248, i32 0, i32 0
  %1249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1250 = getelementptr inbounds %struct.GPR, %struct.GPR* %1249, i32 0, i32 5
  %1251 = getelementptr inbounds %struct.Reg, %struct.Reg* %1250, i32 0, i32 0
  %1252 = bitcast %union.anon* %1251 to %struct.anon.2*
  %CL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1252, i32 0, i32 0
  %1253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1254 = getelementptr inbounds %struct.GPR, %struct.GPR* %1253, i32 0, i32 7
  %1255 = getelementptr inbounds %struct.Reg, %struct.Reg* %1254, i32 0, i32 0
  %1256 = bitcast %union.anon* %1255 to %struct.anon.2*
  %DL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1256, i32 0, i32 0
  %1257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1258 = getelementptr inbounds %struct.GPR, %struct.GPR* %1257, i32 0, i32 9
  %1259 = getelementptr inbounds %struct.Reg, %struct.Reg* %1258, i32 0, i32 0
  %1260 = bitcast %union.anon* %1259 to %struct.anon.2*
  %SIL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1260, i32 0, i32 0
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1262 = getelementptr inbounds %struct.GPR, %struct.GPR* %1261, i32 0, i32 11
  %1263 = getelementptr inbounds %struct.Reg, %struct.Reg* %1262, i32 0, i32 0
  %1264 = bitcast %union.anon* %1263 to %struct.anon.2*
  %DIL.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1264, i32 0, i32 0
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1266 = getelementptr inbounds %struct.GPR, %struct.GPR* %1265, i32 0, i32 13
  %1267 = getelementptr inbounds %struct.Reg, %struct.Reg* %1266, i32 0, i32 0
  %1268 = bitcast %union.anon* %1267 to %struct.anon.2*
  %SPL.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1268, i32 0, i32 0
  %1269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1270 = getelementptr inbounds %struct.GPR, %struct.GPR* %1269, i32 0, i32 15
  %1271 = getelementptr inbounds %struct.Reg, %struct.Reg* %1270, i32 0, i32 0
  %1272 = bitcast %union.anon* %1271 to %struct.anon.2*
  %BPL.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1272, i32 0, i32 0
  %1273 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1274 = getelementptr inbounds %struct.GPR, %struct.GPR* %1273, i32 0, i32 17
  %1275 = getelementptr inbounds %struct.Reg, %struct.Reg* %1274, i32 0, i32 0
  %1276 = bitcast %union.anon* %1275 to %struct.anon.2*
  %R8B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1276, i32 0, i32 0
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1278 = getelementptr inbounds %struct.GPR, %struct.GPR* %1277, i32 0, i32 19
  %1279 = getelementptr inbounds %struct.Reg, %struct.Reg* %1278, i32 0, i32 0
  %1280 = bitcast %union.anon* %1279 to %struct.anon.2*
  %R9B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1280, i32 0, i32 0
  %1281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1282 = getelementptr inbounds %struct.GPR, %struct.GPR* %1281, i32 0, i32 21
  %1283 = getelementptr inbounds %struct.Reg, %struct.Reg* %1282, i32 0, i32 0
  %1284 = bitcast %union.anon* %1283 to %struct.anon.2*
  %R10B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1284, i32 0, i32 0
  %1285 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1286 = getelementptr inbounds %struct.GPR, %struct.GPR* %1285, i32 0, i32 23
  %1287 = getelementptr inbounds %struct.Reg, %struct.Reg* %1286, i32 0, i32 0
  %1288 = bitcast %union.anon* %1287 to %struct.anon.2*
  %R11B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1288, i32 0, i32 0
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 25
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %1292 = bitcast %union.anon* %1291 to %struct.anon.2*
  %R12B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1292, i32 0, i32 0
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1294 = getelementptr inbounds %struct.GPR, %struct.GPR* %1293, i32 0, i32 27
  %1295 = getelementptr inbounds %struct.Reg, %struct.Reg* %1294, i32 0, i32 0
  %1296 = bitcast %union.anon* %1295 to %struct.anon.2*
  %R13B.i682 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1296, i32 0, i32 0
  %1297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1298 = getelementptr inbounds %struct.GPR, %struct.GPR* %1297, i32 0, i32 29
  %1299 = getelementptr inbounds %struct.Reg, %struct.Reg* %1298, i32 0, i32 0
  %1300 = bitcast %union.anon* %1299 to %struct.anon.2*
  %R14B.i683 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1300, i32 0, i32 0
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 31
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %1304 = bitcast %union.anon* %1303 to %struct.anon.2*
  %R15B.i684 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1304, i32 0, i32 0
  %1305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1306 = getelementptr inbounds %struct.GPR, %struct.GPR* %1305, i32 0, i32 1
  %1307 = getelementptr inbounds %struct.Reg, %struct.Reg* %1306, i32 0, i32 0
  %AX.i685 = bitcast %union.anon* %1307 to i16*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 3
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %BX.i686 = bitcast %union.anon* %1310 to i16*
  %1311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1312 = getelementptr inbounds %struct.GPR, %struct.GPR* %1311, i32 0, i32 5
  %1313 = getelementptr inbounds %struct.Reg, %struct.Reg* %1312, i32 0, i32 0
  %CX.i687 = bitcast %union.anon* %1313 to i16*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 7
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %DX.i688 = bitcast %union.anon* %1316 to i16*
  %1317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1318 = getelementptr inbounds %struct.GPR, %struct.GPR* %1317, i32 0, i32 9
  %1319 = getelementptr inbounds %struct.Reg, %struct.Reg* %1318, i32 0, i32 0
  %SI.i689 = bitcast %union.anon* %1319 to i16*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 11
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %DI.i690 = bitcast %union.anon* %1322 to i16*
  %1323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1324 = getelementptr inbounds %struct.GPR, %struct.GPR* %1323, i32 0, i32 13
  %1325 = getelementptr inbounds %struct.Reg, %struct.Reg* %1324, i32 0, i32 0
  %SP.i691 = bitcast %union.anon* %1325 to i16*
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 15
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %BP.i692 = bitcast %union.anon* %1328 to i16*
  %1329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1330 = getelementptr inbounds %struct.GPR, %struct.GPR* %1329, i32 0, i32 17
  %1331 = getelementptr inbounds %struct.Reg, %struct.Reg* %1330, i32 0, i32 0
  %R8W.i693 = bitcast %union.anon* %1331 to i16*
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 19
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %R9W.i694 = bitcast %union.anon* %1334 to i16*
  %1335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1336 = getelementptr inbounds %struct.GPR, %struct.GPR* %1335, i32 0, i32 21
  %1337 = getelementptr inbounds %struct.Reg, %struct.Reg* %1336, i32 0, i32 0
  %R10W.i695 = bitcast %union.anon* %1337 to i16*
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 23
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %R11W.i696 = bitcast %union.anon* %1340 to i16*
  %1341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1342 = getelementptr inbounds %struct.GPR, %struct.GPR* %1341, i32 0, i32 25
  %1343 = getelementptr inbounds %struct.Reg, %struct.Reg* %1342, i32 0, i32 0
  %R12W.i697 = bitcast %union.anon* %1343 to i16*
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 27
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %R13W.i698 = bitcast %union.anon* %1346 to i16*
  %1347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1348 = getelementptr inbounds %struct.GPR, %struct.GPR* %1347, i32 0, i32 29
  %1349 = getelementptr inbounds %struct.Reg, %struct.Reg* %1348, i32 0, i32 0
  %R14W.i699 = bitcast %union.anon* %1349 to i16*
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 31
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %R15W.i700 = bitcast %union.anon* %1352 to i16*
  %1353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1354 = getelementptr inbounds %struct.GPR, %struct.GPR* %1353, i32 0, i32 33
  %1355 = getelementptr inbounds %struct.Reg, %struct.Reg* %1354, i32 0, i32 0
  %IP.i701 = bitcast %union.anon* %1355 to i16*
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 1
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %1358 to i32*
  %1359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1360 = getelementptr inbounds %struct.GPR, %struct.GPR* %1359, i32 0, i32 3
  %1361 = getelementptr inbounds %struct.Reg, %struct.Reg* %1360, i32 0, i32 0
  %EBX.i703 = bitcast %union.anon* %1361 to i32*
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 5
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %ECX.i704 = bitcast %union.anon* %1364 to i32*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 7
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %EDX.i705 = bitcast %union.anon* %1367 to i32*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 9
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %ESI.i706 = bitcast %union.anon* %1370 to i32*
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 11
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %EDI.i707 = bitcast %union.anon* %1373 to i32*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 13
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %ESP.i708 = bitcast %union.anon* %1376 to i32*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 15
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %EBP.i709 = bitcast %union.anon* %1379 to i32*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 33
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %EIP.i710 = bitcast %union.anon* %1382 to i32*
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1384 = getelementptr inbounds %struct.GPR, %struct.GPR* %1383, i32 0, i32 17
  %1385 = getelementptr inbounds %struct.Reg, %struct.Reg* %1384, i32 0, i32 0
  %R8D.i711 = bitcast %union.anon* %1385 to i32*
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 19
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %R9D.i712 = bitcast %union.anon* %1388 to i32*
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 21
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %R10D.i713 = bitcast %union.anon* %1391 to i32*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 23
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %R11D.i714 = bitcast %union.anon* %1394 to i32*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 25
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %R12D.i715 = bitcast %union.anon* %1397 to i32*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 27
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %R13D.i716 = bitcast %union.anon* %1400 to i32*
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 29
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %R14D.i717 = bitcast %union.anon* %1403 to i32*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 31
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %R15D.i718 = bitcast %union.anon* %1406 to i32*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 1
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %1409 to i64*
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 3
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %RBX.i720 = bitcast %union.anon* %1412 to i64*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 5
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %1415 to i64*
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1417 = getelementptr inbounds %struct.GPR, %struct.GPR* %1416, i32 0, i32 7
  %1418 = getelementptr inbounds %struct.Reg, %struct.Reg* %1417, i32 0, i32 0
  %RDX.i722 = bitcast %union.anon* %1418 to i64*
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1420 = getelementptr inbounds %struct.GPR, %struct.GPR* %1419, i32 0, i32 9
  %1421 = getelementptr inbounds %struct.Reg, %struct.Reg* %1420, i32 0, i32 0
  %RSI.i723 = bitcast %union.anon* %1421 to i64*
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 11
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %RDI.i724 = bitcast %union.anon* %1424 to i64*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 13
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %RSP.i725 = bitcast %union.anon* %1427 to i64*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 15
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %1430 to i64*
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 17
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %R8.i727 = bitcast %union.anon* %1433 to i64*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 19
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %R9.i728 = bitcast %union.anon* %1436 to i64*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 21
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %R10.i729 = bitcast %union.anon* %1439 to i64*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 23
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %R11.i730 = bitcast %union.anon* %1442 to i64*
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 25
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %R12.i731 = bitcast %union.anon* %1445 to i64*
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 27
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %R13.i732 = bitcast %union.anon* %1448 to i64*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 29
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %R14.i733 = bitcast %union.anon* %1451 to i64*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 31
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %R15.i734 = bitcast %union.anon* %1454 to i64*
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 33
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %RIP.i735 = bitcast %union.anon* %1457 to i64*
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1459 = getelementptr inbounds %struct.Segments, %struct.Segments* %1458, i32 0, i32 1
  %SS.i736 = bitcast %union.SegmentSelector* %1459 to i16*
  %1460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1461 = getelementptr inbounds %struct.Segments, %struct.Segments* %1460, i32 0, i32 3
  %ES.i737 = bitcast %union.SegmentSelector* %1461 to i16*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1463 = getelementptr inbounds %struct.Segments, %struct.Segments* %1462, i32 0, i32 5
  %GS.i738 = bitcast %union.SegmentSelector* %1463 to i16*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1465 = getelementptr inbounds %struct.Segments, %struct.Segments* %1464, i32 0, i32 7
  %FS.i739 = bitcast %union.SegmentSelector* %1465 to i16*
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1467 = getelementptr inbounds %struct.Segments, %struct.Segments* %1466, i32 0, i32 9
  %DS.i740 = bitcast %union.SegmentSelector* %1467 to i16*
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1469 = getelementptr inbounds %struct.Segments, %struct.Segments* %1468, i32 0, i32 11
  %CS.i741 = bitcast %union.SegmentSelector* %1469 to i16*
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1471 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1470, i32 0, i32 5
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %GS_BASE.i742 = bitcast %union.anon* %1472 to i64*
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1474 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1473, i32 0, i32 7
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %FS_BASE.i743 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1477 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1476, i64 0, i64 0
  %YMM0.i744 = bitcast %union.VectorReg* %1477 to %"class.std::bitset"*
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1479 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1478, i64 0, i64 1
  %YMM1.i745 = bitcast %union.VectorReg* %1479 to %"class.std::bitset"*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1481 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1480, i64 0, i64 2
  %YMM2.i746 = bitcast %union.VectorReg* %1481 to %"class.std::bitset"*
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1483 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1482, i64 0, i64 3
  %YMM3.i747 = bitcast %union.VectorReg* %1483 to %"class.std::bitset"*
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1485 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1484, i64 0, i64 4
  %YMM4.i748 = bitcast %union.VectorReg* %1485 to %"class.std::bitset"*
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1487 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1486, i64 0, i64 5
  %YMM5.i749 = bitcast %union.VectorReg* %1487 to %"class.std::bitset"*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1489 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1488, i64 0, i64 6
  %YMM6.i750 = bitcast %union.VectorReg* %1489 to %"class.std::bitset"*
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1491 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1490, i64 0, i64 7
  %YMM7.i751 = bitcast %union.VectorReg* %1491 to %"class.std::bitset"*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1493 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1492, i64 0, i64 8
  %YMM8.i752 = bitcast %union.VectorReg* %1493 to %"class.std::bitset"*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1495 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1494, i64 0, i64 9
  %YMM9.i753 = bitcast %union.VectorReg* %1495 to %"class.std::bitset"*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1497 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1496, i64 0, i64 10
  %YMM10.i754 = bitcast %union.VectorReg* %1497 to %"class.std::bitset"*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1499 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1498, i64 0, i64 11
  %YMM11.i755 = bitcast %union.VectorReg* %1499 to %"class.std::bitset"*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1501 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1500, i64 0, i64 12
  %YMM12.i756 = bitcast %union.VectorReg* %1501 to %"class.std::bitset"*
  %1502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1503 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1502, i64 0, i64 13
  %YMM13.i757 = bitcast %union.VectorReg* %1503 to %"class.std::bitset"*
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1505 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1504, i64 0, i64 14
  %YMM14.i758 = bitcast %union.VectorReg* %1505 to %"class.std::bitset"*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1507 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1506, i64 0, i64 15
  %YMM15.i759 = bitcast %union.VectorReg* %1507 to %"class.std::bitset"*
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1509 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1508, i64 0, i64 0
  %XMM0.i760 = bitcast %union.VectorReg* %1509 to %union.vec128_t*
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1511 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1510, i64 0, i64 1
  %XMM1.i761 = bitcast %union.VectorReg* %1511 to %union.vec128_t*
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1513 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1512, i64 0, i64 2
  %XMM2.i762 = bitcast %union.VectorReg* %1513 to %union.vec128_t*
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1515 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1514, i64 0, i64 3
  %XMM3.i763 = bitcast %union.VectorReg* %1515 to %union.vec128_t*
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1517 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1516, i64 0, i64 4
  %XMM4.i764 = bitcast %union.VectorReg* %1517 to %union.vec128_t*
  %1518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1519 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1518, i64 0, i64 5
  %XMM5.i765 = bitcast %union.VectorReg* %1519 to %union.vec128_t*
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1521 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1520, i64 0, i64 6
  %XMM6.i766 = bitcast %union.VectorReg* %1521 to %union.vec128_t*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1523 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1522, i64 0, i64 7
  %XMM7.i767 = bitcast %union.VectorReg* %1523 to %union.vec128_t*
  %1524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1525 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1524, i64 0, i64 8
  %XMM8.i768 = bitcast %union.VectorReg* %1525 to %union.vec128_t*
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1527 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1526, i64 0, i64 9
  %XMM9.i769 = bitcast %union.VectorReg* %1527 to %union.vec128_t*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1529 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1528, i64 0, i64 10
  %XMM10.i770 = bitcast %union.VectorReg* %1529 to %union.vec128_t*
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1531 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1530, i64 0, i64 11
  %XMM11.i771 = bitcast %union.VectorReg* %1531 to %union.vec128_t*
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1533 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1532, i64 0, i64 12
  %XMM12.i772 = bitcast %union.VectorReg* %1533 to %union.vec128_t*
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1535 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1534, i64 0, i64 13
  %XMM13.i773 = bitcast %union.VectorReg* %1535 to %union.vec128_t*
  %1536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1537 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1536, i64 0, i64 14
  %XMM14.i774 = bitcast %union.VectorReg* %1537 to %union.vec128_t*
  %1538 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1539 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1538, i64 0, i64 15
  %XMM15.i775 = bitcast %union.VectorReg* %1539 to %union.vec128_t*
  %1540 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1541 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1540, i32 0, i32 0
  %1542 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1541, i64 0, i64 0
  %ST0.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1542, i32 0, i32 1
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1544 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1543, i32 0, i32 0
  %1545 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1544, i64 0, i64 1
  %ST1.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1545, i32 0, i32 1
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1547 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1546, i32 0, i32 0
  %1548 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1547, i64 0, i64 2
  %ST2.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1548, i32 0, i32 1
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1550 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1549, i32 0, i32 0
  %1551 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1550, i64 0, i64 3
  %ST3.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1551, i32 0, i32 1
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1553 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1552, i32 0, i32 0
  %1554 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1553, i64 0, i64 4
  %ST4.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1554, i32 0, i32 1
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1556 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1555, i32 0, i32 0
  %1557 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1556, i64 0, i64 5
  %ST5.i781 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1557, i32 0, i32 1
  %1558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1559 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1558, i32 0, i32 0
  %1560 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1559, i64 0, i64 6
  %ST6.i782 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1560, i32 0, i32 1
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1562 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1561, i32 0, i32 0
  %1563 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1562, i64 0, i64 7
  %ST7.i783 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1563, i32 0, i32 1
  %1564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1565 = getelementptr inbounds %struct.MMX, %struct.MMX* %1564, i32 0, i32 0
  %1566 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1565, i64 0, i64 0
  %1567 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1566, i32 0, i32 1
  %1568 = bitcast %union.vec64_t* %1567 to %struct.uint64v1_t*
  %1569 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1568, i32 0, i32 0
  %MM0.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %1569, i64 0, i64 0
  %1570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1571 = getelementptr inbounds %struct.MMX, %struct.MMX* %1570, i32 0, i32 0
  %1572 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1571, i64 0, i64 1
  %1573 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1572, i32 0, i32 1
  %1574 = bitcast %union.vec64_t* %1573 to %struct.uint64v1_t*
  %1575 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1574, i32 0, i32 0
  %MM1.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %1575, i64 0, i64 0
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1577 = getelementptr inbounds %struct.MMX, %struct.MMX* %1576, i32 0, i32 0
  %1578 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1577, i64 0, i64 2
  %1579 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1578, i32 0, i32 1
  %1580 = bitcast %union.vec64_t* %1579 to %struct.uint64v1_t*
  %1581 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1580, i32 0, i32 0
  %MM2.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %1581, i64 0, i64 0
  %1582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1583 = getelementptr inbounds %struct.MMX, %struct.MMX* %1582, i32 0, i32 0
  %1584 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1583, i64 0, i64 3
  %1585 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1584, i32 0, i32 1
  %1586 = bitcast %union.vec64_t* %1585 to %struct.uint64v1_t*
  %1587 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1586, i32 0, i32 0
  %MM3.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %1587, i64 0, i64 0
  %1588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1589 = getelementptr inbounds %struct.MMX, %struct.MMX* %1588, i32 0, i32 0
  %1590 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1589, i64 0, i64 4
  %1591 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1590, i32 0, i32 1
  %1592 = bitcast %union.vec64_t* %1591 to %struct.uint64v1_t*
  %1593 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1592, i32 0, i32 0
  %MM4.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %1593, i64 0, i64 0
  %1594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1595 = getelementptr inbounds %struct.MMX, %struct.MMX* %1594, i32 0, i32 0
  %1596 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1595, i64 0, i64 5
  %1597 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1596, i32 0, i32 1
  %1598 = bitcast %union.vec64_t* %1597 to %struct.uint64v1_t*
  %1599 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1598, i32 0, i32 0
  %MM5.i789 = getelementptr inbounds [1 x i64], [1 x i64]* %1599, i64 0, i64 0
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1601 = getelementptr inbounds %struct.MMX, %struct.MMX* %1600, i32 0, i32 0
  %1602 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1601, i64 0, i64 6
  %1603 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1602, i32 0, i32 1
  %1604 = bitcast %union.vec64_t* %1603 to %struct.uint64v1_t*
  %1605 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1604, i32 0, i32 0
  %MM6.i790 = getelementptr inbounds [1 x i64], [1 x i64]* %1605, i64 0, i64 0
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1607 = getelementptr inbounds %struct.MMX, %struct.MMX* %1606, i32 0, i32 0
  %1608 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1607, i64 0, i64 7
  %1609 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1608, i32 0, i32 1
  %1610 = bitcast %union.vec64_t* %1609 to %struct.uint64v1_t*
  %1611 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1610, i32 0, i32 0
  %MM7.i791 = getelementptr inbounds [1 x i64], [1 x i64]* %1611, i64 0, i64 0
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1612, i32 0, i32 5
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1613, i32 0, i32 1
  %1614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1614, i32 0, i32 11
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1615, i32 0, i32 13
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i796 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1616, i32 0, i32 3
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i797 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1617, i32 0, i32 9
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i798 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1618, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i650, align 8, !noalias !2476
  store i64* @DR1, i64** %_DR1.i651, align 8, !noalias !2476
  store i64* @DR2, i64** %_DR2.i652, align 8, !noalias !2476
  store i64* @DR3, i64** %_DR3.i653, align 8, !noalias !2476
  store i64* @DR4, i64** %_DR4.i654, align 8, !noalias !2476
  store i64* @DR5, i64** %_DR5.i655, align 8, !noalias !2476
  store i64* @DR6, i64** %_DR6.i656, align 8, !noalias !2476
  store i64* @DR7, i64** %_DR7.i657, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i658, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i659, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i660, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i661, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i662, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i663, align 8, !noalias !2476
  %1619 = bitcast %"class.std::bitset"* %YMM0.i744 to double*
  %1620 = load double, double* %1619, !alias.scope !2480, !noalias !2481
  %1621 = load i64, i64* %RSP.i725, !alias.scope !2480, !noalias !2481
  %1622 = load %struct.Memory*, %struct.Memory** %MEMORY.i649, !noalias !2476
  %1623 = inttoptr i64 %1621 to i64*
  %1624 = load i64, i64* %1623
  store i64 %1624, i64* %PC.i664, !alias.scope !2480, !noalias !2481
  %1625 = add i64 %1621, 8
  store i64 %1625, i64* %RSP.i725, !alias.scope !2480, !noalias !2481
  %1626 = call double @sin(double %1620)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i744, !alias.scope !2480, !noalias !2481
  %1627 = bitcast %"class.std::bitset"* %YMM0.i744 to double*
  store double %1626, double* %1627, !alias.scope !2480, !noalias !2481
  %1628 = load %struct.Memory*, %struct.Memory** %MEMORY.i649, !noalias !2476
  %1629 = bitcast %struct.State** %state.i640 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1629)
  %1630 = bitcast i64* %curr_pc.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1630)
  %1631 = bitcast %struct.Memory** %memory.i642 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1631)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i643)
  %1632 = bitcast i64* %SS_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1632)
  %1633 = bitcast i64* %ES_BASE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1633)
  %1634 = bitcast i64* %DS_BASE.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1634)
  %1635 = bitcast i64* %CS_BASE.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1635)
  %1636 = bitcast %struct.State** %STATE.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1636)
  %1637 = bitcast %struct.Memory** %MEMORY.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1637)
  %1638 = bitcast i64** %_DR0.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1638)
  %1639 = bitcast i64** %_DR1.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1639)
  %1640 = bitcast i64** %_DR2.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1640)
  %1641 = bitcast i64** %_DR3.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1641)
  %1642 = bitcast i64** %_DR4.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1642)
  %1643 = bitcast i64** %_DR5.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1643)
  %1644 = bitcast i64** %_DR6.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1644)
  %1645 = bitcast i64** %_DR7.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1645)
  %1646 = bitcast i64** %CR0.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1646)
  %1647 = bitcast i64** %CR1.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1647)
  %1648 = bitcast i64** %CR2.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1648)
  %1649 = bitcast i64** %CR3.i661 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1649)
  %1650 = bitcast i64** %CR4.i662 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1650)
  %1651 = bitcast i64** %CR8.i663 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1651)
  %1652 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1653 = load i64, i64* %RBP
  %1654 = sub i64 %1653, 80
  %1655 = load i64, i64* %PC
  %1656 = add i64 %1655, 5
  store i64 %1656, i64* %PC
  %1657 = inttoptr i64 %1654 to double*
  %1658 = load double, double* %1657
  %1659 = bitcast i8* %1652 to double*
  store double %1658, double* %1659, align 1, !tbaa !2451
  %1660 = getelementptr inbounds i8, i8* %1652, i64 8
  %1661 = bitcast i8* %1660 to double*
  store double 0.000000e+00, double* %1661, align 1, !tbaa !2451
  %1662 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1663 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1664 = bitcast %union.vec128_t* %XMM0 to i8*
  %1665 = load i64, i64* %PC
  %1666 = add i64 %1665, 4
  store i64 %1666, i64* %PC
  %1667 = bitcast i8* %1663 to double*
  %1668 = load double, double* %1667, align 1
  %1669 = getelementptr inbounds i8, i8* %1663, i64 8
  %1670 = bitcast i8* %1669 to i64*
  %1671 = load i64, i64* %1670, align 1
  %1672 = bitcast i8* %1664 to double*
  %1673 = load double, double* %1672, align 1
  %1674 = fmul double %1668, %1673
  %1675 = bitcast i8* %1662 to double*
  store double %1674, double* %1675, align 1, !tbaa !2451
  %1676 = getelementptr inbounds i8, i8* %1662, i64 8
  %1677 = bitcast i8* %1676 to i64*
  store i64 %1671, i64* %1677, align 1, !tbaa !2451
  %1678 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1679 = load i64, i64* %PC
  %1680 = add i64 %1679, 9
  store i64 %1680, i64* %PC
  %1681 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %1682 = bitcast i8* %1678 to double*
  store double %1681, double* %1682, align 1, !tbaa !2451
  %1683 = getelementptr inbounds i8, i8* %1678, i64 8
  %1684 = bitcast i8* %1683 to double*
  store double 0.000000e+00, double* %1684, align 1, !tbaa !2451
  %1685 = load i64, i64* %RBP
  %1686 = sub i64 %1685, 88
  %1687 = bitcast %union.vec128_t* %XMM1 to i8*
  %1688 = load i64, i64* %PC
  %1689 = add i64 %1688, 5
  store i64 %1689, i64* %PC
  %1690 = bitcast i8* %1687 to double*
  %1691 = load double, double* %1690, align 1
  %1692 = inttoptr i64 %1686 to double*
  store double %1691, double* %1692
  %1693 = load i64, i64* %PC
  %1694 = sub i64 %1693, 3619
  %1695 = load i64, i64* %PC
  %1696 = add i64 %1695, 5
  %1697 = load i64, i64* %PC
  %1698 = add i64 %1697, 5
  store i64 %1698, i64* %PC
  %1699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1700 = load i64, i64* %1699, align 8, !tbaa !2428
  %1701 = add i64 %1700, -8
  %1702 = inttoptr i64 %1701 to i64*
  store i64 %1696, i64* %1702
  store i64 %1701, i64* %1699, align 8, !tbaa !2428
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1694, i64* %1703, align 8, !tbaa !2428
  %1704 = load i64, i64* %PC
  %1705 = bitcast %struct.State** %state.i481 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1705)
  %1706 = bitcast i64* %curr_pc.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1706)
  %1707 = bitcast %struct.Memory** %memory.i483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1707)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i484)
  %1708 = bitcast i64* %SS_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1708)
  %1709 = bitcast i64* %ES_BASE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1709)
  %1710 = bitcast i64* %DS_BASE.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1710)
  %1711 = bitcast i64* %CS_BASE.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1711)
  %1712 = bitcast %struct.State** %STATE.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1712)
  %1713 = bitcast %struct.Memory** %MEMORY.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1713)
  %1714 = bitcast i64** %_DR0.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1714)
  %1715 = bitcast i64** %_DR1.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1715)
  %1716 = bitcast i64** %_DR2.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1716)
  %1717 = bitcast i64** %_DR3.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1717)
  %1718 = bitcast i64** %_DR4.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1718)
  %1719 = bitcast i64** %_DR5.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1719)
  %1720 = bitcast i64** %_DR6.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1720)
  %1721 = bitcast i64** %_DR7.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1721)
  %1722 = bitcast i64** %CR0.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1722)
  %1723 = bitcast i64** %CR1.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1723)
  %1724 = bitcast i64** %CR2.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1724)
  %1725 = bitcast i64** %CR3.i502 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1725)
  %1726 = bitcast i64** %CR4.i503 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1726)
  %1727 = bitcast i64** %CR8.i504 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1727)
  store %struct.State* %0, %struct.State** %state.i481, align 8, !noalias !2482
  store i64 %1704, i64* %curr_pc.i482, align 8, !noalias !2482
  store %struct.Memory* %1628, %struct.Memory** %memory.i483, align 8, !noalias !2482
  store i8 0, i8* %BRANCH_TAKEN.i484, align 1, !noalias !2482
  store i64 0, i64* %SS_BASE.i485, align 8, !noalias !2482
  store i64 0, i64* %ES_BASE.i486, align 8, !noalias !2482
  store i64 0, i64* %DS_BASE.i487, align 8, !noalias !2482
  store i64 0, i64* %CS_BASE.i488, align 8, !noalias !2482
  store %struct.State* %0, %struct.State** %STATE.i489, align 8, !noalias !2482
  store %struct.Memory* %1628, %struct.Memory** %MEMORY.i490, align 8, !noalias !2482
  %1728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1729 = getelementptr inbounds %struct.GPR, %struct.GPR* %1728, i32 0, i32 33
  %1730 = getelementptr inbounds %struct.Reg, %struct.Reg* %1729, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %1730 to i64*
  store i64 %1704, i64* %PC.i505, align 8, !alias.scope !2486, !noalias !2487
  %1731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1732 = getelementptr inbounds %struct.GPR, %struct.GPR* %1731, i32 0, i32 1
  %1733 = getelementptr inbounds %struct.Reg, %struct.Reg* %1732, i32 0, i32 0
  %1734 = bitcast %union.anon* %1733 to %struct.anon.2*
  %AH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1734, i32 0, i32 1
  %1735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1736 = getelementptr inbounds %struct.GPR, %struct.GPR* %1735, i32 0, i32 3
  %1737 = getelementptr inbounds %struct.Reg, %struct.Reg* %1736, i32 0, i32 0
  %1738 = bitcast %union.anon* %1737 to %struct.anon.2*
  %BH.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1738, i32 0, i32 1
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 5
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %1742 = bitcast %union.anon* %1741 to %struct.anon.2*
  %CH.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1742, i32 0, i32 1
  %1743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1744 = getelementptr inbounds %struct.GPR, %struct.GPR* %1743, i32 0, i32 7
  %1745 = getelementptr inbounds %struct.Reg, %struct.Reg* %1744, i32 0, i32 0
  %1746 = bitcast %union.anon* %1745 to %struct.anon.2*
  %DH.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1746, i32 0, i32 1
  %1747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1748 = getelementptr inbounds %struct.GPR, %struct.GPR* %1747, i32 0, i32 1
  %1749 = getelementptr inbounds %struct.Reg, %struct.Reg* %1748, i32 0, i32 0
  %1750 = bitcast %union.anon* %1749 to %struct.anon.2*
  %AL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1750, i32 0, i32 0
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 3
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %1754 = bitcast %union.anon* %1753 to %struct.anon.2*
  %BL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1754, i32 0, i32 0
  %1755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1756 = getelementptr inbounds %struct.GPR, %struct.GPR* %1755, i32 0, i32 5
  %1757 = getelementptr inbounds %struct.Reg, %struct.Reg* %1756, i32 0, i32 0
  %1758 = bitcast %union.anon* %1757 to %struct.anon.2*
  %CL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1758, i32 0, i32 0
  %1759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1760 = getelementptr inbounds %struct.GPR, %struct.GPR* %1759, i32 0, i32 7
  %1761 = getelementptr inbounds %struct.Reg, %struct.Reg* %1760, i32 0, i32 0
  %1762 = bitcast %union.anon* %1761 to %struct.anon.2*
  %DL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1762, i32 0, i32 0
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1764 = getelementptr inbounds %struct.GPR, %struct.GPR* %1763, i32 0, i32 9
  %1765 = getelementptr inbounds %struct.Reg, %struct.Reg* %1764, i32 0, i32 0
  %1766 = bitcast %union.anon* %1765 to %struct.anon.2*
  %SIL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1766, i32 0, i32 0
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 11
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %1770 = bitcast %union.anon* %1769 to %struct.anon.2*
  %DIL.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1770, i32 0, i32 0
  %1771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1772 = getelementptr inbounds %struct.GPR, %struct.GPR* %1771, i32 0, i32 13
  %1773 = getelementptr inbounds %struct.Reg, %struct.Reg* %1772, i32 0, i32 0
  %1774 = bitcast %union.anon* %1773 to %struct.anon.2*
  %SPL.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1774, i32 0, i32 0
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 15
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %1778 = bitcast %union.anon* %1777 to %struct.anon.2*
  %BPL.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1778, i32 0, i32 0
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 17
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %1782 = bitcast %union.anon* %1781 to %struct.anon.2*
  %R8B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1782, i32 0, i32 0
  %1783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1784 = getelementptr inbounds %struct.GPR, %struct.GPR* %1783, i32 0, i32 19
  %1785 = getelementptr inbounds %struct.Reg, %struct.Reg* %1784, i32 0, i32 0
  %1786 = bitcast %union.anon* %1785 to %struct.anon.2*
  %R9B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1786, i32 0, i32 0
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 21
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %1790 = bitcast %union.anon* %1789 to %struct.anon.2*
  %R10B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1790, i32 0, i32 0
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 23
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %1794 = bitcast %union.anon* %1793 to %struct.anon.2*
  %R11B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1794, i32 0, i32 0
  %1795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1796 = getelementptr inbounds %struct.GPR, %struct.GPR* %1795, i32 0, i32 25
  %1797 = getelementptr inbounds %struct.Reg, %struct.Reg* %1796, i32 0, i32 0
  %1798 = bitcast %union.anon* %1797 to %struct.anon.2*
  %R12B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1798, i32 0, i32 0
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 27
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %1802 = bitcast %union.anon* %1801 to %struct.anon.2*
  %R13B.i523 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1802, i32 0, i32 0
  %1803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1804 = getelementptr inbounds %struct.GPR, %struct.GPR* %1803, i32 0, i32 29
  %1805 = getelementptr inbounds %struct.Reg, %struct.Reg* %1804, i32 0, i32 0
  %1806 = bitcast %union.anon* %1805 to %struct.anon.2*
  %R14B.i524 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1806, i32 0, i32 0
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1808 = getelementptr inbounds %struct.GPR, %struct.GPR* %1807, i32 0, i32 31
  %1809 = getelementptr inbounds %struct.Reg, %struct.Reg* %1808, i32 0, i32 0
  %1810 = bitcast %union.anon* %1809 to %struct.anon.2*
  %R15B.i525 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1810, i32 0, i32 0
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 1
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %AX.i526 = bitcast %union.anon* %1813 to i16*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 3
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %BX.i527 = bitcast %union.anon* %1816 to i16*
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1818 = getelementptr inbounds %struct.GPR, %struct.GPR* %1817, i32 0, i32 5
  %1819 = getelementptr inbounds %struct.Reg, %struct.Reg* %1818, i32 0, i32 0
  %CX.i528 = bitcast %union.anon* %1819 to i16*
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 7
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %DX.i529 = bitcast %union.anon* %1822 to i16*
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 9
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %SI.i530 = bitcast %union.anon* %1825 to i16*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 11
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %DI.i531 = bitcast %union.anon* %1828 to i16*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 13
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %SP.i532 = bitcast %union.anon* %1831 to i16*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 15
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %BP.i533 = bitcast %union.anon* %1834 to i16*
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 17
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %R8W.i534 = bitcast %union.anon* %1837 to i16*
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 19
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %R9W.i535 = bitcast %union.anon* %1840 to i16*
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1842 = getelementptr inbounds %struct.GPR, %struct.GPR* %1841, i32 0, i32 21
  %1843 = getelementptr inbounds %struct.Reg, %struct.Reg* %1842, i32 0, i32 0
  %R10W.i536 = bitcast %union.anon* %1843 to i16*
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 23
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %R11W.i537 = bitcast %union.anon* %1846 to i16*
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1848 = getelementptr inbounds %struct.GPR, %struct.GPR* %1847, i32 0, i32 25
  %1849 = getelementptr inbounds %struct.Reg, %struct.Reg* %1848, i32 0, i32 0
  %R12W.i538 = bitcast %union.anon* %1849 to i16*
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 27
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %R13W.i539 = bitcast %union.anon* %1852 to i16*
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1854 = getelementptr inbounds %struct.GPR, %struct.GPR* %1853, i32 0, i32 29
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %R14W.i540 = bitcast %union.anon* %1855 to i16*
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 31
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %R15W.i541 = bitcast %union.anon* %1858 to i16*
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1860 = getelementptr inbounds %struct.GPR, %struct.GPR* %1859, i32 0, i32 33
  %1861 = getelementptr inbounds %struct.Reg, %struct.Reg* %1860, i32 0, i32 0
  %IP.i542 = bitcast %union.anon* %1861 to i16*
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 1
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %EAX.i543 = bitcast %union.anon* %1864 to i32*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1866 = getelementptr inbounds %struct.GPR, %struct.GPR* %1865, i32 0, i32 3
  %1867 = getelementptr inbounds %struct.Reg, %struct.Reg* %1866, i32 0, i32 0
  %EBX.i544 = bitcast %union.anon* %1867 to i32*
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 5
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %ECX.i545 = bitcast %union.anon* %1870 to i32*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 7
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %EDX.i546 = bitcast %union.anon* %1873 to i32*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 9
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %ESI.i547 = bitcast %union.anon* %1876 to i32*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 11
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %EDI.i548 = bitcast %union.anon* %1879 to i32*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 13
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %ESP.i549 = bitcast %union.anon* %1882 to i32*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 15
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %EBP.i550 = bitcast %union.anon* %1885 to i32*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 33
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %EIP.i551 = bitcast %union.anon* %1888 to i32*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 17
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %R8D.i552 = bitcast %union.anon* %1891 to i32*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 19
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %R9D.i553 = bitcast %union.anon* %1894 to i32*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 21
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %R10D.i554 = bitcast %union.anon* %1897 to i32*
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 23
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %R11D.i555 = bitcast %union.anon* %1900 to i32*
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 25
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %R12D.i556 = bitcast %union.anon* %1903 to i32*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 27
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %R13D.i557 = bitcast %union.anon* %1906 to i32*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 29
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %R14D.i558 = bitcast %union.anon* %1909 to i32*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 31
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %R15D.i559 = bitcast %union.anon* %1912 to i32*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 1
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %1915 to i64*
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 3
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %RBX.i561 = bitcast %union.anon* %1918 to i64*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 5
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %1921 to i64*
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1923 = getelementptr inbounds %struct.GPR, %struct.GPR* %1922, i32 0, i32 7
  %1924 = getelementptr inbounds %struct.Reg, %struct.Reg* %1923, i32 0, i32 0
  %RDX.i563 = bitcast %union.anon* %1924 to i64*
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1926 = getelementptr inbounds %struct.GPR, %struct.GPR* %1925, i32 0, i32 9
  %1927 = getelementptr inbounds %struct.Reg, %struct.Reg* %1926, i32 0, i32 0
  %RSI.i564 = bitcast %union.anon* %1927 to i64*
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 11
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %RDI.i565 = bitcast %union.anon* %1930 to i64*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 13
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %RSP.i566 = bitcast %union.anon* %1933 to i64*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 15
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %1936 to i64*
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1938 = getelementptr inbounds %struct.GPR, %struct.GPR* %1937, i32 0, i32 17
  %1939 = getelementptr inbounds %struct.Reg, %struct.Reg* %1938, i32 0, i32 0
  %R8.i568 = bitcast %union.anon* %1939 to i64*
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1941 = getelementptr inbounds %struct.GPR, %struct.GPR* %1940, i32 0, i32 19
  %1942 = getelementptr inbounds %struct.Reg, %struct.Reg* %1941, i32 0, i32 0
  %R9.i569 = bitcast %union.anon* %1942 to i64*
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 21
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %R10.i570 = bitcast %union.anon* %1945 to i64*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 23
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %R11.i571 = bitcast %union.anon* %1948 to i64*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1950 = getelementptr inbounds %struct.GPR, %struct.GPR* %1949, i32 0, i32 25
  %1951 = getelementptr inbounds %struct.Reg, %struct.Reg* %1950, i32 0, i32 0
  %R12.i572 = bitcast %union.anon* %1951 to i64*
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 27
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %R13.i573 = bitcast %union.anon* %1954 to i64*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 29
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %R14.i574 = bitcast %union.anon* %1957 to i64*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 31
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %R15.i575 = bitcast %union.anon* %1960 to i64*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 33
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %RIP.i576 = bitcast %union.anon* %1963 to i64*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1965 = getelementptr inbounds %struct.Segments, %struct.Segments* %1964, i32 0, i32 1
  %SS.i577 = bitcast %union.SegmentSelector* %1965 to i16*
  %1966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1967 = getelementptr inbounds %struct.Segments, %struct.Segments* %1966, i32 0, i32 3
  %ES.i578 = bitcast %union.SegmentSelector* %1967 to i16*
  %1968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1969 = getelementptr inbounds %struct.Segments, %struct.Segments* %1968, i32 0, i32 5
  %GS.i579 = bitcast %union.SegmentSelector* %1969 to i16*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1971 = getelementptr inbounds %struct.Segments, %struct.Segments* %1970, i32 0, i32 7
  %FS.i580 = bitcast %union.SegmentSelector* %1971 to i16*
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1973 = getelementptr inbounds %struct.Segments, %struct.Segments* %1972, i32 0, i32 9
  %DS.i581 = bitcast %union.SegmentSelector* %1973 to i16*
  %1974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1975 = getelementptr inbounds %struct.Segments, %struct.Segments* %1974, i32 0, i32 11
  %CS.i582 = bitcast %union.SegmentSelector* %1975 to i16*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1977 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1976, i32 0, i32 5
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %GS_BASE.i583 = bitcast %union.anon* %1978 to i64*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1980 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1979, i32 0, i32 7
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %FS_BASE.i584 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1983 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1982, i64 0, i64 0
  %YMM0.i585 = bitcast %union.VectorReg* %1983 to %"class.std::bitset"*
  %1984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1984, i64 0, i64 1
  %YMM1.i586 = bitcast %union.VectorReg* %1985 to %"class.std::bitset"*
  %1986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1987 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1986, i64 0, i64 2
  %YMM2.i587 = bitcast %union.VectorReg* %1987 to %"class.std::bitset"*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1988, i64 0, i64 3
  %YMM3.i588 = bitcast %union.VectorReg* %1989 to %"class.std::bitset"*
  %1990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1990, i64 0, i64 4
  %YMM4.i589 = bitcast %union.VectorReg* %1991 to %"class.std::bitset"*
  %1992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1992, i64 0, i64 5
  %YMM5.i590 = bitcast %union.VectorReg* %1993 to %"class.std::bitset"*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1994, i64 0, i64 6
  %YMM6.i591 = bitcast %union.VectorReg* %1995 to %"class.std::bitset"*
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1997 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1996, i64 0, i64 7
  %YMM7.i592 = bitcast %union.VectorReg* %1997 to %"class.std::bitset"*
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1999 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1998, i64 0, i64 8
  %YMM8.i593 = bitcast %union.VectorReg* %1999 to %"class.std::bitset"*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2001 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2000, i64 0, i64 9
  %YMM9.i594 = bitcast %union.VectorReg* %2001 to %"class.std::bitset"*
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2003 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2002, i64 0, i64 10
  %YMM10.i595 = bitcast %union.VectorReg* %2003 to %"class.std::bitset"*
  %2004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2005 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2004, i64 0, i64 11
  %YMM11.i596 = bitcast %union.VectorReg* %2005 to %"class.std::bitset"*
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2007 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2006, i64 0, i64 12
  %YMM12.i597 = bitcast %union.VectorReg* %2007 to %"class.std::bitset"*
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2009 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2008, i64 0, i64 13
  %YMM13.i598 = bitcast %union.VectorReg* %2009 to %"class.std::bitset"*
  %2010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2010, i64 0, i64 14
  %YMM14.i599 = bitcast %union.VectorReg* %2011 to %"class.std::bitset"*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2013 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2012, i64 0, i64 15
  %YMM15.i600 = bitcast %union.VectorReg* %2013 to %"class.std::bitset"*
  %2014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2015 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2014, i64 0, i64 0
  %XMM0.i601 = bitcast %union.VectorReg* %2015 to %union.vec128_t*
  %2016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2017 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2016, i64 0, i64 1
  %XMM1.i602 = bitcast %union.VectorReg* %2017 to %union.vec128_t*
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2019 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2018, i64 0, i64 2
  %XMM2.i603 = bitcast %union.VectorReg* %2019 to %union.vec128_t*
  %2020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2020, i64 0, i64 3
  %XMM3.i604 = bitcast %union.VectorReg* %2021 to %union.vec128_t*
  %2022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2023 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2022, i64 0, i64 4
  %XMM4.i605 = bitcast %union.VectorReg* %2023 to %union.vec128_t*
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2025 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2024, i64 0, i64 5
  %XMM5.i606 = bitcast %union.VectorReg* %2025 to %union.vec128_t*
  %2026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2027 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2026, i64 0, i64 6
  %XMM6.i607 = bitcast %union.VectorReg* %2027 to %union.vec128_t*
  %2028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2029 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2028, i64 0, i64 7
  %XMM7.i608 = bitcast %union.VectorReg* %2029 to %union.vec128_t*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2030, i64 0, i64 8
  %XMM8.i609 = bitcast %union.VectorReg* %2031 to %union.vec128_t*
  %2032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2033 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2032, i64 0, i64 9
  %XMM9.i610 = bitcast %union.VectorReg* %2033 to %union.vec128_t*
  %2034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2035 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2034, i64 0, i64 10
  %XMM10.i611 = bitcast %union.VectorReg* %2035 to %union.vec128_t*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2037 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2036, i64 0, i64 11
  %XMM11.i612 = bitcast %union.VectorReg* %2037 to %union.vec128_t*
  %2038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2039 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2038, i64 0, i64 12
  %XMM12.i613 = bitcast %union.VectorReg* %2039 to %union.vec128_t*
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2040, i64 0, i64 13
  %XMM13.i614 = bitcast %union.VectorReg* %2041 to %union.vec128_t*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2043 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2042, i64 0, i64 14
  %XMM14.i615 = bitcast %union.VectorReg* %2043 to %union.vec128_t*
  %2044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2045 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2044, i64 0, i64 15
  %XMM15.i616 = bitcast %union.VectorReg* %2045 to %union.vec128_t*
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2047 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2046, i32 0, i32 0
  %2048 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2047, i64 0, i64 0
  %ST0.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2048, i32 0, i32 1
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2050 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2049, i32 0, i32 0
  %2051 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2050, i64 0, i64 1
  %ST1.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2051, i32 0, i32 1
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2053 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2052, i32 0, i32 0
  %2054 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2053, i64 0, i64 2
  %ST2.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2054, i32 0, i32 1
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2056 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2055, i32 0, i32 0
  %2057 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2056, i64 0, i64 3
  %ST3.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2057, i32 0, i32 1
  %2058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2059 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2058, i32 0, i32 0
  %2060 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2059, i64 0, i64 4
  %ST4.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2060, i32 0, i32 1
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2062 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2061, i32 0, i32 0
  %2063 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2062, i64 0, i64 5
  %ST5.i622 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2063, i32 0, i32 1
  %2064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2065 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2064, i32 0, i32 0
  %2066 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2065, i64 0, i64 6
  %ST6.i623 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2066, i32 0, i32 1
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2068 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2067, i32 0, i32 0
  %2069 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2068, i64 0, i64 7
  %ST7.i624 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2069, i32 0, i32 1
  %2070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2071 = getelementptr inbounds %struct.MMX, %struct.MMX* %2070, i32 0, i32 0
  %2072 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2071, i64 0, i64 0
  %2073 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2072, i32 0, i32 1
  %2074 = bitcast %union.vec64_t* %2073 to %struct.uint64v1_t*
  %2075 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2074, i32 0, i32 0
  %MM0.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %2075, i64 0, i64 0
  %2076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2077 = getelementptr inbounds %struct.MMX, %struct.MMX* %2076, i32 0, i32 0
  %2078 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2077, i64 0, i64 1
  %2079 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2078, i32 0, i32 1
  %2080 = bitcast %union.vec64_t* %2079 to %struct.uint64v1_t*
  %2081 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2080, i32 0, i32 0
  %MM1.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %2081, i64 0, i64 0
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2083 = getelementptr inbounds %struct.MMX, %struct.MMX* %2082, i32 0, i32 0
  %2084 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2083, i64 0, i64 2
  %2085 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2084, i32 0, i32 1
  %2086 = bitcast %union.vec64_t* %2085 to %struct.uint64v1_t*
  %2087 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2086, i32 0, i32 0
  %MM2.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %2087, i64 0, i64 0
  %2088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2089 = getelementptr inbounds %struct.MMX, %struct.MMX* %2088, i32 0, i32 0
  %2090 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2089, i64 0, i64 3
  %2091 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2090, i32 0, i32 1
  %2092 = bitcast %union.vec64_t* %2091 to %struct.uint64v1_t*
  %2093 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2092, i32 0, i32 0
  %MM3.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %2093, i64 0, i64 0
  %2094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2095 = getelementptr inbounds %struct.MMX, %struct.MMX* %2094, i32 0, i32 0
  %2096 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2095, i64 0, i64 4
  %2097 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2096, i32 0, i32 1
  %2098 = bitcast %union.vec64_t* %2097 to %struct.uint64v1_t*
  %2099 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2098, i32 0, i32 0
  %MM4.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %2099, i64 0, i64 0
  %2100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2101 = getelementptr inbounds %struct.MMX, %struct.MMX* %2100, i32 0, i32 0
  %2102 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2101, i64 0, i64 5
  %2103 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2102, i32 0, i32 1
  %2104 = bitcast %union.vec64_t* %2103 to %struct.uint64v1_t*
  %2105 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2104, i32 0, i32 0
  %MM5.i630 = getelementptr inbounds [1 x i64], [1 x i64]* %2105, i64 0, i64 0
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2107 = getelementptr inbounds %struct.MMX, %struct.MMX* %2106, i32 0, i32 0
  %2108 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2107, i64 0, i64 6
  %2109 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2108, i32 0, i32 1
  %2110 = bitcast %union.vec64_t* %2109 to %struct.uint64v1_t*
  %2111 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2110, i32 0, i32 0
  %MM6.i631 = getelementptr inbounds [1 x i64], [1 x i64]* %2111, i64 0, i64 0
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2113 = getelementptr inbounds %struct.MMX, %struct.MMX* %2112, i32 0, i32 0
  %2114 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2113, i64 0, i64 7
  %2115 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2114, i32 0, i32 1
  %2116 = bitcast %union.vec64_t* %2115 to %struct.uint64v1_t*
  %2117 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2116, i32 0, i32 0
  %MM7.i632 = getelementptr inbounds [1 x i64], [1 x i64]* %2117, i64 0, i64 0
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2118, i32 0, i32 5
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2119, i32 0, i32 1
  %2120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2120, i32 0, i32 11
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2121, i32 0, i32 13
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i637 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2122, i32 0, i32 3
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i638 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2123, i32 0, i32 9
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i639 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2124, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i491, align 8, !noalias !2482
  store i64* @DR1, i64** %_DR1.i492, align 8, !noalias !2482
  store i64* @DR2, i64** %_DR2.i493, align 8, !noalias !2482
  store i64* @DR3, i64** %_DR3.i494, align 8, !noalias !2482
  store i64* @DR4, i64** %_DR4.i495, align 8, !noalias !2482
  store i64* @DR5, i64** %_DR5.i496, align 8, !noalias !2482
  store i64* @DR6, i64** %_DR6.i497, align 8, !noalias !2482
  store i64* @DR7, i64** %_DR7.i498, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i499, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i500, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i501, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i502, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i503, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i504, align 8, !noalias !2482
  %2125 = bitcast %"class.std::bitset"* %YMM0.i585 to double*
  %2126 = load double, double* %2125, !alias.scope !2486, !noalias !2487
  %2127 = load i64, i64* %RSP.i566, !alias.scope !2486, !noalias !2487
  %2128 = load %struct.Memory*, %struct.Memory** %MEMORY.i490, !noalias !2482
  %2129 = inttoptr i64 %2127 to i64*
  %2130 = load i64, i64* %2129
  store i64 %2130, i64* %PC.i505, !alias.scope !2486, !noalias !2487
  %2131 = add i64 %2127, 8
  store i64 %2131, i64* %RSP.i566, !alias.scope !2486, !noalias !2487
  %2132 = call double @tan(double %2126)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i585, !alias.scope !2486, !noalias !2487
  %2133 = bitcast %"class.std::bitset"* %YMM0.i585 to double*
  store double %2132, double* %2133, !alias.scope !2486, !noalias !2487
  %2134 = load %struct.Memory*, %struct.Memory** %MEMORY.i490, !noalias !2482
  %2135 = bitcast %struct.State** %state.i481 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2135)
  %2136 = bitcast i64* %curr_pc.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2136)
  %2137 = bitcast %struct.Memory** %memory.i483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2137)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i484)
  %2138 = bitcast i64* %SS_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2138)
  %2139 = bitcast i64* %ES_BASE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2139)
  %2140 = bitcast i64* %DS_BASE.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2140)
  %2141 = bitcast i64* %CS_BASE.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2141)
  %2142 = bitcast %struct.State** %STATE.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2142)
  %2143 = bitcast %struct.Memory** %MEMORY.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2143)
  %2144 = bitcast i64** %_DR0.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2144)
  %2145 = bitcast i64** %_DR1.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2145)
  %2146 = bitcast i64** %_DR2.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2146)
  %2147 = bitcast i64** %_DR3.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2147)
  %2148 = bitcast i64** %_DR4.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2148)
  %2149 = bitcast i64** %_DR5.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2149)
  %2150 = bitcast i64** %_DR6.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2150)
  %2151 = bitcast i64** %_DR7.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2151)
  %2152 = bitcast i64** %CR0.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2152)
  %2153 = bitcast i64** %CR1.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2153)
  %2154 = bitcast i64** %CR2.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2154)
  %2155 = bitcast i64** %CR3.i502 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2155)
  %2156 = bitcast i64** %CR4.i503 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2156)
  %2157 = bitcast i64** %CR8.i504 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2157)
  %2158 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2159 = load i64, i64* %PC
  %2160 = add i64 %2159, 8
  store i64 %2160, i64* %PC
  %2161 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 104) to double*)
  %2162 = bitcast i8* %2158 to double*
  store double %2161, double* %2162, align 1, !tbaa !2451
  %2163 = getelementptr inbounds i8, i8* %2158, i64 8
  %2164 = bitcast i8* %2163 to double*
  store double 0.000000e+00, double* %2164, align 1, !tbaa !2451
  %2165 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2166 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2167 = bitcast %union.vec128_t* %XMM0 to i8*
  %2168 = load i64, i64* %PC
  %2169 = add i64 %2168, 4
  store i64 %2169, i64* %PC
  %2170 = bitcast i8* %2166 to double*
  %2171 = load double, double* %2170, align 1
  %2172 = getelementptr inbounds i8, i8* %2166, i64 8
  %2173 = bitcast i8* %2172 to i64*
  %2174 = load i64, i64* %2173, align 1
  %2175 = bitcast i8* %2167 to double*
  %2176 = load double, double* %2175, align 1
  %2177 = fdiv double %2171, %2176
  %2178 = bitcast i8* %2165 to double*
  store double %2177, double* %2178, align 1, !tbaa !2451
  %2179 = getelementptr inbounds i8, i8* %2165, i64 8
  %2180 = bitcast i8* %2179 to i64*
  store i64 %2174, i64* %2180, align 1, !tbaa !2451
  %2181 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2182 = load i64, i64* %RBP
  %2183 = sub i64 %2182, 88
  %2184 = load i64, i64* %PC
  %2185 = add i64 %2184, 5
  store i64 %2185, i64* %PC
  %2186 = inttoptr i64 %2183 to double*
  %2187 = load double, double* %2186
  %2188 = bitcast i8* %2181 to double*
  store double %2187, double* %2188, align 1, !tbaa !2451
  %2189 = getelementptr inbounds i8, i8* %2181, i64 8
  %2190 = bitcast i8* %2189 to double*
  store double 0.000000e+00, double* %2190, align 1, !tbaa !2451
  %2191 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2192 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2193 = bitcast %union.vec128_t* %XMM1 to i8*
  %2194 = load i64, i64* %PC
  %2195 = add i64 %2194, 4
  store i64 %2195, i64* %PC
  %2196 = bitcast i8* %2192 to double*
  %2197 = load double, double* %2196, align 1
  %2198 = getelementptr inbounds i8, i8* %2192, i64 8
  %2199 = bitcast i8* %2198 to i64*
  %2200 = load i64, i64* %2199, align 1
  %2201 = bitcast i8* %2193 to double*
  %2202 = load double, double* %2201, align 1
  %2203 = fmul double %2197, %2202
  %2204 = bitcast i8* %2191 to double*
  store double %2203, double* %2204, align 1, !tbaa !2451
  %2205 = getelementptr inbounds i8, i8* %2191, i64 8
  %2206 = bitcast i8* %2205 to i64*
  store i64 %2200, i64* %2206, align 1, !tbaa !2451
  %2207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2208 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2209 = load i64, i64* %RBP
  %2210 = sub i64 %2209, 48
  %2211 = load i64, i64* %PC
  %2212 = add i64 %2211, 5
  store i64 %2212, i64* %PC
  %2213 = bitcast i8* %2208 to double*
  %2214 = load double, double* %2213, align 1
  %2215 = getelementptr inbounds i8, i8* %2208, i64 8
  %2216 = bitcast i8* %2215 to i64*
  %2217 = load i64, i64* %2216, align 1
  %2218 = inttoptr i64 %2210 to double*
  %2219 = load double, double* %2218
  %2220 = fadd double %2214, %2219
  %2221 = bitcast i8* %2207 to double*
  store double %2220, double* %2221, align 1, !tbaa !2451
  %2222 = getelementptr inbounds i8, i8* %2207, i64 8
  %2223 = bitcast i8* %2222 to i64*
  store i64 %2217, i64* %2223, align 1, !tbaa !2451
  %2224 = bitcast %union.vec128_t* %XMM0 to i8*
  %2225 = load i64, i64* %PC
  %2226 = add i64 %2225, 9
  store i64 %2226, i64* %PC
  %2227 = bitcast i8* %2224 to double*
  %2228 = load double, double* %2227, align 1
  store double %2228, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2229 = load i64, i64* %PC
  %2230 = add i64 %2229, 266
  %2231 = load i64, i64* %PC
  %2232 = add i64 %2231, 5
  store i64 %2232, i64* %PC
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2230, i64* %2233, align 8, !tbaa !2428
  br label %block_401565

block_4012cc:                                     ; preds = %block_4012ab, %block_4012c1
  %MEMORY.2 = phi %struct.Memory* [ %184, %block_4012ab ], [ %184, %block_4012c1 ]
  %2234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2236 = bitcast %union.vec128_t* %XMM0 to i8*
  %2237 = load i64, i64* %PC
  %2238 = add i64 %2237, 3
  store i64 %2238, i64* %PC
  %2239 = bitcast i8* %2235 to i64*
  %2240 = load i64, i64* %2239, align 1
  %2241 = getelementptr inbounds i8, i8* %2235, i64 8
  %2242 = bitcast i8* %2241 to i64*
  %2243 = load i64, i64* %2242, align 1
  %2244 = bitcast i8* %2236 to i64*
  %2245 = load i64, i64* %2244, align 1
  %2246 = getelementptr inbounds i8, i8* %2236, i64 8
  %2247 = bitcast i8* %2246 to i64*
  %2248 = load i64, i64* %2247, align 1
  %2249 = xor i64 %2245, %2240
  %2250 = xor i64 %2248, %2243
  %2251 = trunc i64 %2249 to i32
  %2252 = lshr i64 %2249, 32
  %2253 = trunc i64 %2252 to i32
  %2254 = bitcast i8* %2234 to i32*
  store i32 %2251, i32* %2254, align 1, !tbaa !2469
  %2255 = getelementptr inbounds i8, i8* %2234, i64 4
  %2256 = bitcast i8* %2255 to i32*
  store i32 %2253, i32* %2256, align 1, !tbaa !2469
  %2257 = trunc i64 %2250 to i32
  %2258 = getelementptr inbounds i8, i8* %2234, i64 8
  %2259 = bitcast i8* %2258 to i32*
  store i32 %2257, i32* %2259, align 1, !tbaa !2469
  %2260 = lshr i64 %2250, 32
  %2261 = trunc i64 %2260 to i32
  %2262 = getelementptr inbounds i8, i8* %2234, i64 12
  %2263 = bitcast i8* %2262 to i32*
  store i32 %2261, i32* %2263, align 1, !tbaa !2469
  %2264 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2265 = load i64, i64* %PC
  %2266 = add i64 %2265, 9
  store i64 %2266, i64* %PC
  %2267 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2268 = bitcast i8* %2264 to double*
  store double %2267, double* %2268, align 1, !tbaa !2451
  %2269 = getelementptr inbounds i8, i8* %2264, i64 8
  %2270 = bitcast i8* %2269 to double*
  store double 0.000000e+00, double* %2270, align 1, !tbaa !2451
  %2271 = bitcast %union.vec128_t* %XMM1 to i8*
  %2272 = bitcast %union.vec128_t* %XMM0 to i8*
  %2273 = load i64, i64* %PC
  %2274 = add i64 %2273, 4
  store i64 %2274, i64* %PC
  %2275 = bitcast i8* %2271 to double*
  %2276 = load double, double* %2275, align 1
  %2277 = bitcast i8* %2272 to double*
  %2278 = load double, double* %2277, align 1
  %2279 = fcmp uno double %2276, %2278
  br i1 %2279, label %2280, label %2292

; <label>:2280:                                   ; preds = %block_4012cc
  %2281 = fadd double %2276, %2278
  %2282 = bitcast double %2281 to i64
  %2283 = and i64 %2282, 9221120237041090560
  %2284 = icmp eq i64 %2283, 9218868437227405312
  %2285 = and i64 %2282, 2251799813685247
  %2286 = icmp ne i64 %2285, 0
  %2287 = and i1 %2284, %2286
  br i1 %2287, label %2288, label %2298

; <label>:2288:                                   ; preds = %2280
  %2289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2290 = load i64, i64* %2289, align 8, !tbaa !2428
  %2291 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2290, %struct.Memory* %MEMORY.2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480

; <label>:2292:                                   ; preds = %block_4012cc
  %2293 = fcmp ogt double %2276, %2278
  br i1 %2293, label %2298, label %2294

; <label>:2294:                                   ; preds = %2292
  %2295 = fcmp olt double %2276, %2278
  br i1 %2295, label %2298, label %2296

; <label>:2296:                                   ; preds = %2294
  %2297 = fcmp oeq double %2276, %2278
  br i1 %2297, label %2298, label %2305

; <label>:2298:                                   ; preds = %2296, %2294, %2292, %2280
  %2299 = phi i8 [ 0, %2292 ], [ 0, %2294 ], [ 1, %2296 ], [ 1, %2280 ]
  %2300 = phi i8 [ 0, %2292 ], [ 0, %2294 ], [ 0, %2296 ], [ 1, %2280 ]
  %2301 = phi i8 [ 0, %2292 ], [ 1, %2294 ], [ 0, %2296 ], [ 1, %2280 ]
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2299, i8* %2302, align 1, !tbaa !2453
  %2303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2300, i8* %2303, align 1, !tbaa !2453
  %2304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2301, i8* %2304, align 1, !tbaa !2453
  br label %2305

; <label>:2305:                                   ; preds = %2298, %2296
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2306, align 1, !tbaa !2453
  %2307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2307, align 1, !tbaa !2453
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2308, align 1, !tbaa !2453
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480: ; preds = %2288, %2305
  %2309 = phi %struct.Memory* [ %2291, %2288 ], [ %MEMORY.2, %2305 ]
  %2310 = load i64, i64* %PC
  %2311 = add i64 %2310, 52
  %2312 = load i64, i64* %PC
  %2313 = add i64 %2312, 6
  %2314 = load i64, i64* %PC
  %2315 = add i64 %2314, 6
  store i64 %2315, i64* %PC
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2317 = load i8, i8* %2316, align 1, !tbaa !2448
  %2318 = icmp eq i8 %2317, 0
  %2319 = zext i1 %2318 to i8
  store i8 %2319, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2321 = select i1 %2318, i64 %2311, i64 %2313
  store i64 %2321, i64* %2320, align 8, !tbaa !2428
  %2322 = load i8, i8* %BRANCH_TAKEN
  %2323 = icmp eq i8 %2322, 1
  br i1 %2323, label %block_401310, label %block_4012e2

block_40114b:                                     ; preds = %block_40112a, %block_401140
  %MEMORY.3 = phi %struct.Memory* [ %184, %block_40112a ], [ %184, %block_401140 ]
  %2324 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2325 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2326 = bitcast %union.vec128_t* %XMM0 to i8*
  %2327 = load i64, i64* %PC
  %2328 = add i64 %2327, 3
  store i64 %2328, i64* %PC
  %2329 = bitcast i8* %2325 to i64*
  %2330 = load i64, i64* %2329, align 1
  %2331 = getelementptr inbounds i8, i8* %2325, i64 8
  %2332 = bitcast i8* %2331 to i64*
  %2333 = load i64, i64* %2332, align 1
  %2334 = bitcast i8* %2326 to i64*
  %2335 = load i64, i64* %2334, align 1
  %2336 = getelementptr inbounds i8, i8* %2326, i64 8
  %2337 = bitcast i8* %2336 to i64*
  %2338 = load i64, i64* %2337, align 1
  %2339 = xor i64 %2335, %2330
  %2340 = xor i64 %2338, %2333
  %2341 = trunc i64 %2339 to i32
  %2342 = lshr i64 %2339, 32
  %2343 = trunc i64 %2342 to i32
  %2344 = bitcast i8* %2324 to i32*
  store i32 %2341, i32* %2344, align 1, !tbaa !2469
  %2345 = getelementptr inbounds i8, i8* %2324, i64 4
  %2346 = bitcast i8* %2345 to i32*
  store i32 %2343, i32* %2346, align 1, !tbaa !2469
  %2347 = trunc i64 %2340 to i32
  %2348 = getelementptr inbounds i8, i8* %2324, i64 8
  %2349 = bitcast i8* %2348 to i32*
  store i32 %2347, i32* %2349, align 1, !tbaa !2469
  %2350 = lshr i64 %2340, 32
  %2351 = trunc i64 %2350 to i32
  %2352 = getelementptr inbounds i8, i8* %2324, i64 12
  %2353 = bitcast i8* %2352 to i32*
  store i32 %2351, i32* %2353, align 1, !tbaa !2469
  %2354 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2355 = load i64, i64* %PC
  %2356 = add i64 %2355, 9
  store i64 %2356, i64* %PC
  %2357 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2358 = bitcast i8* %2354 to double*
  store double %2357, double* %2358, align 1, !tbaa !2451
  %2359 = getelementptr inbounds i8, i8* %2354, i64 8
  %2360 = bitcast i8* %2359 to double*
  store double 0.000000e+00, double* %2360, align 1, !tbaa !2451
  %2361 = bitcast %union.vec128_t* %XMM1 to i8*
  %2362 = bitcast %union.vec128_t* %XMM0 to i8*
  %2363 = load i64, i64* %PC
  %2364 = add i64 %2363, 4
  store i64 %2364, i64* %PC
  %2365 = bitcast i8* %2361 to double*
  %2366 = load double, double* %2365, align 1
  %2367 = bitcast i8* %2362 to double*
  %2368 = load double, double* %2367, align 1
  %2369 = fcmp uno double %2366, %2368
  br i1 %2369, label %2370, label %2382

; <label>:2370:                                   ; preds = %block_40114b
  %2371 = fadd double %2366, %2368
  %2372 = bitcast double %2371 to i64
  %2373 = and i64 %2372, 9221120237041090560
  %2374 = icmp eq i64 %2373, 9218868437227405312
  %2375 = and i64 %2372, 2251799813685247
  %2376 = icmp ne i64 %2375, 0
  %2377 = and i1 %2374, %2376
  br i1 %2377, label %2378, label %2388

; <label>:2378:                                   ; preds = %2370
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2380 = load i64, i64* %2379, align 8, !tbaa !2428
  %2381 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2380, %struct.Memory* %MEMORY.3) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

; <label>:2382:                                   ; preds = %block_40114b
  %2383 = fcmp ogt double %2366, %2368
  br i1 %2383, label %2388, label %2384

; <label>:2384:                                   ; preds = %2382
  %2385 = fcmp olt double %2366, %2368
  br i1 %2385, label %2388, label %2386

; <label>:2386:                                   ; preds = %2384
  %2387 = fcmp oeq double %2366, %2368
  br i1 %2387, label %2388, label %2395

; <label>:2388:                                   ; preds = %2386, %2384, %2382, %2370
  %2389 = phi i8 [ 0, %2382 ], [ 0, %2384 ], [ 1, %2386 ], [ 1, %2370 ]
  %2390 = phi i8 [ 0, %2382 ], [ 0, %2384 ], [ 0, %2386 ], [ 1, %2370 ]
  %2391 = phi i8 [ 0, %2382 ], [ 1, %2384 ], [ 0, %2386 ], [ 1, %2370 ]
  %2392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2389, i8* %2392, align 1, !tbaa !2453
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2390, i8* %2393, align 1, !tbaa !2453
  %2394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2391, i8* %2394, align 1, !tbaa !2453
  br label %2395

; <label>:2395:                                   ; preds = %2388, %2386
  %2396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2396, align 1, !tbaa !2453
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2397, align 1, !tbaa !2453
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2398, align 1, !tbaa !2453
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478: ; preds = %2378, %2395
  %2399 = phi %struct.Memory* [ %2381, %2378 ], [ %MEMORY.3, %2395 ]
  %2400 = load i64, i64* %PC
  %2401 = add i64 %2400, 52
  %2402 = load i64, i64* %PC
  %2403 = add i64 %2402, 6
  %2404 = load i64, i64* %PC
  %2405 = add i64 %2404, 6
  store i64 %2405, i64* %PC
  %2406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2407 = load i8, i8* %2406, align 1, !tbaa !2448
  %2408 = icmp eq i8 %2407, 0
  %2409 = zext i1 %2408 to i8
  store i8 %2409, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2411 = select i1 %2408, i64 %2401, i64 %2403
  store i64 %2411, i64* %2410, align 8, !tbaa !2428
  %2412 = load i8, i8* %BRANCH_TAKEN
  %2413 = icmp eq i8 %2412, 1
  br i1 %2413, label %block_40118f, label %block_401161

block_401146:                                     ; preds = %block_401140
  %2414 = load i64, i64* %PC
  %2415 = add i64 %2414, 272
  %2416 = load i64, i64* %PC
  %2417 = add i64 %2416, 5
  store i64 %2417, i64* %PC
  %2418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2415, i64* %2418, align 8, !tbaa !2428
  %2419 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2420 = load i64, i64* %PC
  %2421 = add i64 %2420, 9
  store i64 %2421, i64* %PC
  %2422 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2423 = bitcast i8* %2419 to double*
  store double %2422, double* %2423, align 1, !tbaa !2451
  %2424 = getelementptr inbounds i8, i8* %2419, i64 8
  %2425 = bitcast i8* %2424 to double*
  store double 0.000000e+00, double* %2425, align 1, !tbaa !2451
  %2426 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2427 = load i64, i64* %PC
  %2428 = add i64 %2427, 9
  store i64 %2428, i64* %PC
  %2429 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2430 = bitcast i8* %2426 to double*
  store double %2429, double* %2430, align 1, !tbaa !2451
  %2431 = getelementptr inbounds i8, i8* %2426, i64 8
  %2432 = bitcast i8* %2431 to double*
  store double 0.000000e+00, double* %2432, align 1, !tbaa !2451
  %2433 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2434 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2435 = load i64, i64* %PC
  %2436 = add i64 %2435, 9
  store i64 %2436, i64* %PC
  %2437 = bitcast i8* %2434 to double*
  %2438 = load double, double* %2437, align 1
  %2439 = getelementptr inbounds i8, i8* %2434, i64 8
  %2440 = bitcast i8* %2439 to i64*
  %2441 = load i64, i64* %2440, align 1
  %2442 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2443 = fdiv double %2438, %2442
  %2444 = bitcast i8* %2433 to double*
  store double %2443, double* %2444, align 1, !tbaa !2451
  %2445 = getelementptr inbounds i8, i8* %2433, i64 8
  %2446 = bitcast i8* %2445 to i64*
  store i64 %2441, i64* %2446, align 1, !tbaa !2451
  %2447 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2448 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2449 = bitcast %union.vec128_t* %XMM1 to i8*
  %2450 = load i64, i64* %PC
  %2451 = add i64 %2450, 4
  store i64 %2451, i64* %PC
  %2452 = bitcast i8* %2448 to double*
  %2453 = load double, double* %2452, align 1
  %2454 = getelementptr inbounds i8, i8* %2448, i64 8
  %2455 = bitcast i8* %2454 to i64*
  %2456 = load i64, i64* %2455, align 1
  %2457 = bitcast i8* %2449 to double*
  %2458 = load double, double* %2457, align 1
  %2459 = fmul double %2453, %2458
  %2460 = bitcast i8* %2447 to double*
  store double %2459, double* %2460, align 1, !tbaa !2451
  %2461 = getelementptr inbounds i8, i8* %2447, i64 8
  %2462 = bitcast i8* %2461 to i64*
  store i64 %2456, i64* %2462, align 1, !tbaa !2451
  %2463 = bitcast %union.vec128_t* %XMM0 to i8*
  %2464 = load i64, i64* %PC
  %2465 = add i64 %2464, 9
  store i64 %2465, i64* %PC
  %2466 = bitcast i8* %2463 to double*
  %2467 = load double, double* %2466, align 1
  store double %2467, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2468 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2469 = load i64, i64* %PC
  %2470 = add i64 %2469, 9
  store i64 %2470, i64* %PC
  %2471 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2472 = bitcast i8* %2468 to double*
  store double %2471, double* %2472, align 1, !tbaa !2451
  %2473 = getelementptr inbounds i8, i8* %2468, i64 8
  %2474 = bitcast i8* %2473 to double*
  store double 0.000000e+00, double* %2474, align 1, !tbaa !2451
  %2475 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2476 = load i64, i64* %PC
  %2477 = add i64 %2476, 9
  store i64 %2477, i64* %PC
  %2478 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2479 = bitcast i8* %2475 to double*
  store double %2478, double* %2479, align 1, !tbaa !2451
  %2480 = getelementptr inbounds i8, i8* %2475, i64 8
  %2481 = bitcast i8* %2480 to double*
  store double 0.000000e+00, double* %2481, align 1, !tbaa !2451
  %2482 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2483 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2484 = load i64, i64* %PC
  %2485 = add i64 %2484, 9
  store i64 %2485, i64* %PC
  %2486 = bitcast i8* %2483 to double*
  %2487 = load double, double* %2486, align 1
  %2488 = getelementptr inbounds i8, i8* %2483, i64 8
  %2489 = bitcast i8* %2488 to i64*
  %2490 = load i64, i64* %2489, align 1
  %2491 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2492 = fdiv double %2487, %2491
  %2493 = bitcast i8* %2482 to double*
  store double %2492, double* %2493, align 1, !tbaa !2451
  %2494 = getelementptr inbounds i8, i8* %2482, i64 8
  %2495 = bitcast i8* %2494 to i64*
  store i64 %2490, i64* %2495, align 1, !tbaa !2451
  %2496 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2497 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2498 = bitcast %union.vec128_t* %XMM1 to i8*
  %2499 = load i64, i64* %PC
  %2500 = add i64 %2499, 4
  store i64 %2500, i64* %PC
  %2501 = bitcast i8* %2497 to double*
  %2502 = load double, double* %2501, align 1
  %2503 = getelementptr inbounds i8, i8* %2497, i64 8
  %2504 = bitcast i8* %2503 to i64*
  %2505 = load i64, i64* %2504, align 1
  %2506 = bitcast i8* %2498 to double*
  %2507 = load double, double* %2506, align 1
  %2508 = fmul double %2502, %2507
  %2509 = bitcast i8* %2496 to double*
  store double %2508, double* %2509, align 1, !tbaa !2451
  %2510 = getelementptr inbounds i8, i8* %2496, i64 8
  %2511 = bitcast i8* %2510 to i64*
  store i64 %2505, i64* %2511, align 1, !tbaa !2451
  %2512 = bitcast %union.vec128_t* %XMM0 to i8*
  %2513 = load i64, i64* %PC
  %2514 = add i64 %2513, 9
  store i64 %2514, i64* %PC
  %2515 = bitcast i8* %2512 to double*
  %2516 = load double, double* %2515, align 1
  store double %2516, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2517 = load i64, i64* %PC
  %2518 = add i64 %2517, 703
  %2519 = load i64, i64* %PC
  %2520 = add i64 %2519, 5
  store i64 %2520, i64* %PC
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2518, i64* %2521, align 8, !tbaa !2428
  br label %block_401565

block_4012c1:                                     ; preds = %block_4012ab
  %2522 = load i64, i64* %PC
  %2523 = add i64 %2522, 11
  %2524 = load i64, i64* %PC
  %2525 = add i64 %2524, 6
  %2526 = load i64, i64* %PC
  %2527 = add i64 %2526, 6
  store i64 %2527, i64* %PC
  %2528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2529 = load i8, i8* %2528, align 1, !tbaa !2446
  store i8 %2529, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2531 = icmp ne i8 %2529, 0
  %2532 = select i1 %2531, i64 %2523, i64 %2525
  store i64 %2532, i64* %2530, align 8, !tbaa !2428
  %2533 = load i8, i8* %BRANCH_TAKEN
  %2534 = icmp eq i8 %2533, 1
  br i1 %2534, label %block_4012cc, label %block_4012c7

block_401310:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480, %block_4012e2
  %MEMORY.4 = phi %struct.Memory* [ %2309, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480 ], [ %2309, %block_4012e2 ]
  %2535 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2536 = load i64, i64* %PC
  %2537 = add i64 %2536, 9
  store i64 %2537, i64* %PC
  %2538 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2539 = bitcast i8* %2535 to double*
  store double %2538, double* %2539, align 1, !tbaa !2451
  %2540 = getelementptr inbounds i8, i8* %2535, i64 8
  %2541 = bitcast i8* %2540 to double*
  store double 0.000000e+00, double* %2541, align 1, !tbaa !2451
  %2542 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2543 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2544 = load i64, i64* %PC
  %2545 = add i64 %2544, 9
  store i64 %2545, i64* %PC
  %2546 = bitcast i8* %2543 to double*
  %2547 = load double, double* %2546, align 1
  %2548 = getelementptr inbounds i8, i8* %2543, i64 8
  %2549 = bitcast i8* %2548 to i64*
  %2550 = load i64, i64* %2549, align 1
  %2551 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %2552 = fsub double %2547, %2551
  %2553 = bitcast i8* %2542 to double*
  store double %2552, double* %2553, align 1, !tbaa !2451
  %2554 = getelementptr inbounds i8, i8* %2542, i64 8
  %2555 = bitcast i8* %2554 to i64*
  store i64 %2550, i64* %2555, align 1, !tbaa !2451
  %2556 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2557 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2558 = load i64, i64* %PC
  %2559 = add i64 %2558, 9
  store i64 %2559, i64* %PC
  %2560 = bitcast i8* %2557 to double*
  %2561 = load double, double* %2560, align 1
  %2562 = getelementptr inbounds i8, i8* %2557, i64 8
  %2563 = bitcast i8* %2562 to i64*
  %2564 = load i64, i64* %2563, align 1
  %2565 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %2566 = fdiv double %2561, %2565
  %2567 = bitcast i8* %2556 to double*
  store double %2566, double* %2567, align 1, !tbaa !2451
  %2568 = getelementptr inbounds i8, i8* %2556, i64 8
  %2569 = bitcast i8* %2568 to i64*
  store i64 %2564, i64* %2569, align 1, !tbaa !2451
  %2570 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2571 = load i64, i64* %PC
  %2572 = add i64 %2571, 9
  store i64 %2572, i64* %PC
  %2573 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2574 = bitcast i8* %2570 to double*
  store double %2573, double* %2574, align 1, !tbaa !2451
  %2575 = getelementptr inbounds i8, i8* %2570, i64 8
  %2576 = bitcast i8* %2575 to double*
  store double 0.000000e+00, double* %2576, align 1, !tbaa !2451
  %2577 = load i64, i64* %RBP
  %2578 = sub i64 %2577, 56
  %2579 = bitcast %union.vec128_t* %XMM0 to i8*
  %2580 = load i64, i64* %PC
  %2581 = add i64 %2580, 5
  store i64 %2581, i64* %PC
  %2582 = bitcast i8* %2579 to double*
  %2583 = load double, double* %2582, align 1
  %2584 = inttoptr i64 %2578 to double*
  store double %2583, double* %2584
  %2585 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2586 = bitcast %union.vec128_t* %XMM1 to i8*
  %2587 = load i64, i64* %PC
  %2588 = add i64 %2587, 3
  store i64 %2588, i64* %PC
  %2589 = bitcast i8* %2586 to <2 x i32>*
  %2590 = load <2 x i32>, <2 x i32>* %2589, align 1
  %2591 = getelementptr inbounds i8, i8* %2586, i64 8
  %2592 = bitcast i8* %2591 to <2 x i32>*
  %2593 = load <2 x i32>, <2 x i32>* %2592, align 1
  %2594 = extractelement <2 x i32> %2590, i32 0
  %2595 = bitcast i8* %2585 to i32*
  store i32 %2594, i32* %2595, align 1, !tbaa !2454
  %2596 = extractelement <2 x i32> %2590, i32 1
  %2597 = getelementptr inbounds i8, i8* %2585, i64 4
  %2598 = bitcast i8* %2597 to i32*
  store i32 %2596, i32* %2598, align 1, !tbaa !2454
  %2599 = extractelement <2 x i32> %2593, i32 0
  %2600 = getelementptr inbounds i8, i8* %2585, i64 8
  %2601 = bitcast i8* %2600 to i32*
  store i32 %2599, i32* %2601, align 1, !tbaa !2454
  %2602 = extractelement <2 x i32> %2593, i32 1
  %2603 = getelementptr inbounds i8, i8* %2585, i64 12
  %2604 = bitcast i8* %2603 to i32*
  store i32 %2602, i32* %2604, align 1, !tbaa !2454
  %2605 = load i64, i64* %PC
  %2606 = sub i64 %2605, 3356
  %2607 = load i64, i64* %PC
  %2608 = add i64 %2607, 5
  %2609 = load i64, i64* %PC
  %2610 = add i64 %2609, 5
  store i64 %2610, i64* %PC
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2612 = load i64, i64* %2611, align 8, !tbaa !2428
  %2613 = add i64 %2612, -8
  %2614 = inttoptr i64 %2613 to i64*
  store i64 %2608, i64* %2614
  store i64 %2613, i64* %2611, align 8, !tbaa !2428
  %2615 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2606, i64* %2615, align 8, !tbaa !2428
  %2616 = load i64, i64* %PC
  %2617 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2617)
  %2618 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2618)
  %2619 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2619)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %2620 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2620)
  %2621 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2621)
  %2622 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2622)
  %2623 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2623)
  %2624 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2624)
  %2625 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2625)
  %2626 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2626)
  %2627 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2627)
  %2628 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2628)
  %2629 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2629)
  %2630 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2630)
  %2631 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2631)
  %2632 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2632)
  %2633 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2633)
  %2634 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2634)
  %2635 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2635)
  %2636 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2636)
  %2637 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2637)
  %2638 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2638)
  %2639 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2639)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2488
  store i64 %2616, i64* %curr_pc.i320, align 8, !noalias !2488
  store %struct.Memory* %MEMORY.4, %struct.Memory** %memory.i321, align 8, !noalias !2488
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2488
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2488
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2488
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2488
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2488
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2488
  store %struct.Memory* %MEMORY.4, %struct.Memory** %MEMORY.i328, align 8, !noalias !2488
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2641 = getelementptr inbounds %struct.GPR, %struct.GPR* %2640, i32 0, i32 33
  %2642 = getelementptr inbounds %struct.Reg, %struct.Reg* %2641, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %2642 to i64*
  store i64 %2616, i64* %PC.i343, align 8, !alias.scope !2492, !noalias !2493
  %2643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2644 = getelementptr inbounds %struct.GPR, %struct.GPR* %2643, i32 0, i32 1
  %2645 = getelementptr inbounds %struct.Reg, %struct.Reg* %2644, i32 0, i32 0
  %2646 = bitcast %union.anon* %2645 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2646, i32 0, i32 1
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 3
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %2650 = bitcast %union.anon* %2649 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2650, i32 0, i32 1
  %2651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2652 = getelementptr inbounds %struct.GPR, %struct.GPR* %2651, i32 0, i32 5
  %2653 = getelementptr inbounds %struct.Reg, %struct.Reg* %2652, i32 0, i32 0
  %2654 = bitcast %union.anon* %2653 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2654, i32 0, i32 1
  %2655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2656 = getelementptr inbounds %struct.GPR, %struct.GPR* %2655, i32 0, i32 7
  %2657 = getelementptr inbounds %struct.Reg, %struct.Reg* %2656, i32 0, i32 0
  %2658 = bitcast %union.anon* %2657 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2658, i32 0, i32 1
  %2659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2660 = getelementptr inbounds %struct.GPR, %struct.GPR* %2659, i32 0, i32 1
  %2661 = getelementptr inbounds %struct.Reg, %struct.Reg* %2660, i32 0, i32 0
  %2662 = bitcast %union.anon* %2661 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2662, i32 0, i32 0
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2664 = getelementptr inbounds %struct.GPR, %struct.GPR* %2663, i32 0, i32 3
  %2665 = getelementptr inbounds %struct.Reg, %struct.Reg* %2664, i32 0, i32 0
  %2666 = bitcast %union.anon* %2665 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2666, i32 0, i32 0
  %2667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2668 = getelementptr inbounds %struct.GPR, %struct.GPR* %2667, i32 0, i32 5
  %2669 = getelementptr inbounds %struct.Reg, %struct.Reg* %2668, i32 0, i32 0
  %2670 = bitcast %union.anon* %2669 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2670, i32 0, i32 0
  %2671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2672 = getelementptr inbounds %struct.GPR, %struct.GPR* %2671, i32 0, i32 7
  %2673 = getelementptr inbounds %struct.Reg, %struct.Reg* %2672, i32 0, i32 0
  %2674 = bitcast %union.anon* %2673 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2674, i32 0, i32 0
  %2675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2676 = getelementptr inbounds %struct.GPR, %struct.GPR* %2675, i32 0, i32 9
  %2677 = getelementptr inbounds %struct.Reg, %struct.Reg* %2676, i32 0, i32 0
  %2678 = bitcast %union.anon* %2677 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2678, i32 0, i32 0
  %2679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2680 = getelementptr inbounds %struct.GPR, %struct.GPR* %2679, i32 0, i32 11
  %2681 = getelementptr inbounds %struct.Reg, %struct.Reg* %2680, i32 0, i32 0
  %2682 = bitcast %union.anon* %2681 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2682, i32 0, i32 0
  %2683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2684 = getelementptr inbounds %struct.GPR, %struct.GPR* %2683, i32 0, i32 13
  %2685 = getelementptr inbounds %struct.Reg, %struct.Reg* %2684, i32 0, i32 0
  %2686 = bitcast %union.anon* %2685 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2686, i32 0, i32 0
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 15
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %2690 = bitcast %union.anon* %2689 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2690, i32 0, i32 0
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2692 = getelementptr inbounds %struct.GPR, %struct.GPR* %2691, i32 0, i32 17
  %2693 = getelementptr inbounds %struct.Reg, %struct.Reg* %2692, i32 0, i32 0
  %2694 = bitcast %union.anon* %2693 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2694, i32 0, i32 0
  %2695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2696 = getelementptr inbounds %struct.GPR, %struct.GPR* %2695, i32 0, i32 19
  %2697 = getelementptr inbounds %struct.Reg, %struct.Reg* %2696, i32 0, i32 0
  %2698 = bitcast %union.anon* %2697 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2698, i32 0, i32 0
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2700 = getelementptr inbounds %struct.GPR, %struct.GPR* %2699, i32 0, i32 21
  %2701 = getelementptr inbounds %struct.Reg, %struct.Reg* %2700, i32 0, i32 0
  %2702 = bitcast %union.anon* %2701 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2702, i32 0, i32 0
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2704 = getelementptr inbounds %struct.GPR, %struct.GPR* %2703, i32 0, i32 23
  %2705 = getelementptr inbounds %struct.Reg, %struct.Reg* %2704, i32 0, i32 0
  %2706 = bitcast %union.anon* %2705 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2706, i32 0, i32 0
  %2707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2708 = getelementptr inbounds %struct.GPR, %struct.GPR* %2707, i32 0, i32 25
  %2709 = getelementptr inbounds %struct.Reg, %struct.Reg* %2708, i32 0, i32 0
  %2710 = bitcast %union.anon* %2709 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2710, i32 0, i32 0
  %2711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2712 = getelementptr inbounds %struct.GPR, %struct.GPR* %2711, i32 0, i32 27
  %2713 = getelementptr inbounds %struct.Reg, %struct.Reg* %2712, i32 0, i32 0
  %2714 = bitcast %union.anon* %2713 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2714, i32 0, i32 0
  %2715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2716 = getelementptr inbounds %struct.GPR, %struct.GPR* %2715, i32 0, i32 29
  %2717 = getelementptr inbounds %struct.Reg, %struct.Reg* %2716, i32 0, i32 0
  %2718 = bitcast %union.anon* %2717 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2718, i32 0, i32 0
  %2719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2720 = getelementptr inbounds %struct.GPR, %struct.GPR* %2719, i32 0, i32 31
  %2721 = getelementptr inbounds %struct.Reg, %struct.Reg* %2720, i32 0, i32 0
  %2722 = bitcast %union.anon* %2721 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2722, i32 0, i32 0
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 1
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %2725 to i16*
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2727 = getelementptr inbounds %struct.GPR, %struct.GPR* %2726, i32 0, i32 3
  %2728 = getelementptr inbounds %struct.Reg, %struct.Reg* %2727, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %2728 to i16*
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2730 = getelementptr inbounds %struct.GPR, %struct.GPR* %2729, i32 0, i32 5
  %2731 = getelementptr inbounds %struct.Reg, %struct.Reg* %2730, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %2731 to i16*
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2733 = getelementptr inbounds %struct.GPR, %struct.GPR* %2732, i32 0, i32 7
  %2734 = getelementptr inbounds %struct.Reg, %struct.Reg* %2733, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %2734 to i16*
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2736 = getelementptr inbounds %struct.GPR, %struct.GPR* %2735, i32 0, i32 9
  %2737 = getelementptr inbounds %struct.Reg, %struct.Reg* %2736, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %2737 to i16*
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2739 = getelementptr inbounds %struct.GPR, %struct.GPR* %2738, i32 0, i32 11
  %2740 = getelementptr inbounds %struct.Reg, %struct.Reg* %2739, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %2740 to i16*
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2742 = getelementptr inbounds %struct.GPR, %struct.GPR* %2741, i32 0, i32 13
  %2743 = getelementptr inbounds %struct.Reg, %struct.Reg* %2742, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %2743 to i16*
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2745 = getelementptr inbounds %struct.GPR, %struct.GPR* %2744, i32 0, i32 15
  %2746 = getelementptr inbounds %struct.Reg, %struct.Reg* %2745, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %2746 to i16*
  %2747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2748 = getelementptr inbounds %struct.GPR, %struct.GPR* %2747, i32 0, i32 17
  %2749 = getelementptr inbounds %struct.Reg, %struct.Reg* %2748, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %2749 to i16*
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2751 = getelementptr inbounds %struct.GPR, %struct.GPR* %2750, i32 0, i32 19
  %2752 = getelementptr inbounds %struct.Reg, %struct.Reg* %2751, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %2752 to i16*
  %2753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2754 = getelementptr inbounds %struct.GPR, %struct.GPR* %2753, i32 0, i32 21
  %2755 = getelementptr inbounds %struct.Reg, %struct.Reg* %2754, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %2755 to i16*
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2757 = getelementptr inbounds %struct.GPR, %struct.GPR* %2756, i32 0, i32 23
  %2758 = getelementptr inbounds %struct.Reg, %struct.Reg* %2757, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %2758 to i16*
  %2759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2760 = getelementptr inbounds %struct.GPR, %struct.GPR* %2759, i32 0, i32 25
  %2761 = getelementptr inbounds %struct.Reg, %struct.Reg* %2760, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %2761 to i16*
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2763 = getelementptr inbounds %struct.GPR, %struct.GPR* %2762, i32 0, i32 27
  %2764 = getelementptr inbounds %struct.Reg, %struct.Reg* %2763, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %2764 to i16*
  %2765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2766 = getelementptr inbounds %struct.GPR, %struct.GPR* %2765, i32 0, i32 29
  %2767 = getelementptr inbounds %struct.Reg, %struct.Reg* %2766, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %2767 to i16*
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2769 = getelementptr inbounds %struct.GPR, %struct.GPR* %2768, i32 0, i32 31
  %2770 = getelementptr inbounds %struct.Reg, %struct.Reg* %2769, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %2770 to i16*
  %2771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2772 = getelementptr inbounds %struct.GPR, %struct.GPR* %2771, i32 0, i32 33
  %2773 = getelementptr inbounds %struct.Reg, %struct.Reg* %2772, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %2773 to i16*
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2775 = getelementptr inbounds %struct.GPR, %struct.GPR* %2774, i32 0, i32 1
  %2776 = getelementptr inbounds %struct.Reg, %struct.Reg* %2775, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %2776 to i32*
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2778 = getelementptr inbounds %struct.GPR, %struct.GPR* %2777, i32 0, i32 3
  %2779 = getelementptr inbounds %struct.Reg, %struct.Reg* %2778, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %2779 to i32*
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2781 = getelementptr inbounds %struct.GPR, %struct.GPR* %2780, i32 0, i32 5
  %2782 = getelementptr inbounds %struct.Reg, %struct.Reg* %2781, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %2782 to i32*
  %2783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2784 = getelementptr inbounds %struct.GPR, %struct.GPR* %2783, i32 0, i32 7
  %2785 = getelementptr inbounds %struct.Reg, %struct.Reg* %2784, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %2785 to i32*
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2787 = getelementptr inbounds %struct.GPR, %struct.GPR* %2786, i32 0, i32 9
  %2788 = getelementptr inbounds %struct.Reg, %struct.Reg* %2787, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %2788 to i32*
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2790 = getelementptr inbounds %struct.GPR, %struct.GPR* %2789, i32 0, i32 11
  %2791 = getelementptr inbounds %struct.Reg, %struct.Reg* %2790, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %2791 to i32*
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2793 = getelementptr inbounds %struct.GPR, %struct.GPR* %2792, i32 0, i32 13
  %2794 = getelementptr inbounds %struct.Reg, %struct.Reg* %2793, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %2794 to i32*
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2796 = getelementptr inbounds %struct.GPR, %struct.GPR* %2795, i32 0, i32 15
  %2797 = getelementptr inbounds %struct.Reg, %struct.Reg* %2796, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %2797 to i32*
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2799 = getelementptr inbounds %struct.GPR, %struct.GPR* %2798, i32 0, i32 33
  %2800 = getelementptr inbounds %struct.Reg, %struct.Reg* %2799, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %2800 to i32*
  %2801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2802 = getelementptr inbounds %struct.GPR, %struct.GPR* %2801, i32 0, i32 17
  %2803 = getelementptr inbounds %struct.Reg, %struct.Reg* %2802, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %2803 to i32*
  %2804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2805 = getelementptr inbounds %struct.GPR, %struct.GPR* %2804, i32 0, i32 19
  %2806 = getelementptr inbounds %struct.Reg, %struct.Reg* %2805, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %2806 to i32*
  %2807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2808 = getelementptr inbounds %struct.GPR, %struct.GPR* %2807, i32 0, i32 21
  %2809 = getelementptr inbounds %struct.Reg, %struct.Reg* %2808, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %2809 to i32*
  %2810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2811 = getelementptr inbounds %struct.GPR, %struct.GPR* %2810, i32 0, i32 23
  %2812 = getelementptr inbounds %struct.Reg, %struct.Reg* %2811, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %2812 to i32*
  %2813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2814 = getelementptr inbounds %struct.GPR, %struct.GPR* %2813, i32 0, i32 25
  %2815 = getelementptr inbounds %struct.Reg, %struct.Reg* %2814, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %2815 to i32*
  %2816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2817 = getelementptr inbounds %struct.GPR, %struct.GPR* %2816, i32 0, i32 27
  %2818 = getelementptr inbounds %struct.Reg, %struct.Reg* %2817, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %2818 to i32*
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2820 = getelementptr inbounds %struct.GPR, %struct.GPR* %2819, i32 0, i32 29
  %2821 = getelementptr inbounds %struct.Reg, %struct.Reg* %2820, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %2821 to i32*
  %2822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2823 = getelementptr inbounds %struct.GPR, %struct.GPR* %2822, i32 0, i32 31
  %2824 = getelementptr inbounds %struct.Reg, %struct.Reg* %2823, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %2824 to i32*
  %2825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2826 = getelementptr inbounds %struct.GPR, %struct.GPR* %2825, i32 0, i32 1
  %2827 = getelementptr inbounds %struct.Reg, %struct.Reg* %2826, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %2827 to i64*
  %2828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2829 = getelementptr inbounds %struct.GPR, %struct.GPR* %2828, i32 0, i32 3
  %2830 = getelementptr inbounds %struct.Reg, %struct.Reg* %2829, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %2830 to i64*
  %2831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2832 = getelementptr inbounds %struct.GPR, %struct.GPR* %2831, i32 0, i32 5
  %2833 = getelementptr inbounds %struct.Reg, %struct.Reg* %2832, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %2833 to i64*
  %2834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2835 = getelementptr inbounds %struct.GPR, %struct.GPR* %2834, i32 0, i32 7
  %2836 = getelementptr inbounds %struct.Reg, %struct.Reg* %2835, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %2836 to i64*
  %2837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2838 = getelementptr inbounds %struct.GPR, %struct.GPR* %2837, i32 0, i32 9
  %2839 = getelementptr inbounds %struct.Reg, %struct.Reg* %2838, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %2839 to i64*
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2841 = getelementptr inbounds %struct.GPR, %struct.GPR* %2840, i32 0, i32 11
  %2842 = getelementptr inbounds %struct.Reg, %struct.Reg* %2841, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %2842 to i64*
  %2843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2844 = getelementptr inbounds %struct.GPR, %struct.GPR* %2843, i32 0, i32 13
  %2845 = getelementptr inbounds %struct.Reg, %struct.Reg* %2844, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %2845 to i64*
  %2846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2847 = getelementptr inbounds %struct.GPR, %struct.GPR* %2846, i32 0, i32 15
  %2848 = getelementptr inbounds %struct.Reg, %struct.Reg* %2847, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %2848 to i64*
  %2849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2850 = getelementptr inbounds %struct.GPR, %struct.GPR* %2849, i32 0, i32 17
  %2851 = getelementptr inbounds %struct.Reg, %struct.Reg* %2850, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %2851 to i64*
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2853 = getelementptr inbounds %struct.GPR, %struct.GPR* %2852, i32 0, i32 19
  %2854 = getelementptr inbounds %struct.Reg, %struct.Reg* %2853, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %2854 to i64*
  %2855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2856 = getelementptr inbounds %struct.GPR, %struct.GPR* %2855, i32 0, i32 21
  %2857 = getelementptr inbounds %struct.Reg, %struct.Reg* %2856, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %2857 to i64*
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2859 = getelementptr inbounds %struct.GPR, %struct.GPR* %2858, i32 0, i32 23
  %2860 = getelementptr inbounds %struct.Reg, %struct.Reg* %2859, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %2860 to i64*
  %2861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2862 = getelementptr inbounds %struct.GPR, %struct.GPR* %2861, i32 0, i32 25
  %2863 = getelementptr inbounds %struct.Reg, %struct.Reg* %2862, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %2863 to i64*
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2865 = getelementptr inbounds %struct.GPR, %struct.GPR* %2864, i32 0, i32 27
  %2866 = getelementptr inbounds %struct.Reg, %struct.Reg* %2865, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %2866 to i64*
  %2867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2868 = getelementptr inbounds %struct.GPR, %struct.GPR* %2867, i32 0, i32 29
  %2869 = getelementptr inbounds %struct.Reg, %struct.Reg* %2868, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %2869 to i64*
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2871 = getelementptr inbounds %struct.GPR, %struct.GPR* %2870, i32 0, i32 31
  %2872 = getelementptr inbounds %struct.Reg, %struct.Reg* %2871, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %2872 to i64*
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2874 = getelementptr inbounds %struct.GPR, %struct.GPR* %2873, i32 0, i32 33
  %2875 = getelementptr inbounds %struct.Reg, %struct.Reg* %2874, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %2875 to i64*
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2877 = getelementptr inbounds %struct.Segments, %struct.Segments* %2876, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %2877 to i16*
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2879 = getelementptr inbounds %struct.Segments, %struct.Segments* %2878, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %2879 to i16*
  %2880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2881 = getelementptr inbounds %struct.Segments, %struct.Segments* %2880, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %2881 to i16*
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2883 = getelementptr inbounds %struct.Segments, %struct.Segments* %2882, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %2883 to i16*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2885 = getelementptr inbounds %struct.Segments, %struct.Segments* %2884, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %2885 to i16*
  %2886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2887 = getelementptr inbounds %struct.Segments, %struct.Segments* %2886, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %2887 to i16*
  %2888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2889 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2888, i32 0, i32 5
  %2890 = getelementptr inbounds %struct.Reg, %struct.Reg* %2889, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %2890 to i64*
  %2891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2892 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2891, i32 0, i32 7
  %2893 = getelementptr inbounds %struct.Reg, %struct.Reg* %2892, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %2893 to i64*
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2894, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %2895 to %"class.std::bitset"*
  %2896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2897 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2896, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %2897 to %"class.std::bitset"*
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2899 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2898, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %2899 to %"class.std::bitset"*
  %2900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2900, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %2901 to %"class.std::bitset"*
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2902, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %2903 to %"class.std::bitset"*
  %2904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2904, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %2905 to %"class.std::bitset"*
  %2906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2906, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %2907 to %"class.std::bitset"*
  %2908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2909 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2908, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %2909 to %"class.std::bitset"*
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2910, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %2911 to %"class.std::bitset"*
  %2912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2912, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %2913 to %"class.std::bitset"*
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2914, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %2915 to %"class.std::bitset"*
  %2916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2916, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %2917 to %"class.std::bitset"*
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2918, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %2919 to %"class.std::bitset"*
  %2920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2921 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2920, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %2921 to %"class.std::bitset"*
  %2922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2923 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2922, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %2923 to %"class.std::bitset"*
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2924, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %2925 to %"class.std::bitset"*
  %2926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2927 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2926, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %2927 to %union.vec128_t*
  %2928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2928, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %2929 to %union.vec128_t*
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2930, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %2931 to %union.vec128_t*
  %2932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2932, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %2933 to %union.vec128_t*
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2934, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %2935 to %union.vec128_t*
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2937 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2936, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %2937 to %union.vec128_t*
  %2938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2939 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2938, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %2939 to %union.vec128_t*
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2940, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %2941 to %union.vec128_t*
  %2942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2942, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %2943 to %union.vec128_t*
  %2944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2944, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %2945 to %union.vec128_t*
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2946, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %2947 to %union.vec128_t*
  %2948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2949 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2948, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %2949 to %union.vec128_t*
  %2950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2951 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2950, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %2951 to %union.vec128_t*
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2952, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %2953 to %union.vec128_t*
  %2954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2955 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2954, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %2955 to %union.vec128_t*
  %2956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2956, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %2957 to %union.vec128_t*
  %2958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2959 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2958, i32 0, i32 0
  %2960 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2959, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2960, i32 0, i32 1
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2962 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2961, i32 0, i32 0
  %2963 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2962, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2963, i32 0, i32 1
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2965 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2964, i32 0, i32 0
  %2966 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2965, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2966, i32 0, i32 1
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2968 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2967, i32 0, i32 0
  %2969 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2968, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2969, i32 0, i32 1
  %2970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2971 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2970, i32 0, i32 0
  %2972 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2971, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2972, i32 0, i32 1
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2974 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2973, i32 0, i32 0
  %2975 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2974, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2975, i32 0, i32 1
  %2976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2977 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2976, i32 0, i32 0
  %2978 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2977, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2978, i32 0, i32 1
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2980 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2979, i32 0, i32 0
  %2981 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2980, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2981, i32 0, i32 1
  %2982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2983 = getelementptr inbounds %struct.MMX, %struct.MMX* %2982, i32 0, i32 0
  %2984 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2983, i64 0, i64 0
  %2985 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2984, i32 0, i32 1
  %2986 = bitcast %union.vec64_t* %2985 to %struct.uint64v1_t*
  %2987 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2986, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %2987, i64 0, i64 0
  %2988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2989 = getelementptr inbounds %struct.MMX, %struct.MMX* %2988, i32 0, i32 0
  %2990 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2989, i64 0, i64 1
  %2991 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2990, i32 0, i32 1
  %2992 = bitcast %union.vec64_t* %2991 to %struct.uint64v1_t*
  %2993 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2992, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %2993, i64 0, i64 0
  %2994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2995 = getelementptr inbounds %struct.MMX, %struct.MMX* %2994, i32 0, i32 0
  %2996 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2995, i64 0, i64 2
  %2997 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2996, i32 0, i32 1
  %2998 = bitcast %union.vec64_t* %2997 to %struct.uint64v1_t*
  %2999 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2998, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %2999, i64 0, i64 0
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3001 = getelementptr inbounds %struct.MMX, %struct.MMX* %3000, i32 0, i32 0
  %3002 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3001, i64 0, i64 3
  %3003 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3002, i32 0, i32 1
  %3004 = bitcast %union.vec64_t* %3003 to %struct.uint64v1_t*
  %3005 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3004, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %3005, i64 0, i64 0
  %3006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3007 = getelementptr inbounds %struct.MMX, %struct.MMX* %3006, i32 0, i32 0
  %3008 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3007, i64 0, i64 4
  %3009 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3008, i32 0, i32 1
  %3010 = bitcast %union.vec64_t* %3009 to %struct.uint64v1_t*
  %3011 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3010, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %3011, i64 0, i64 0
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3013 = getelementptr inbounds %struct.MMX, %struct.MMX* %3012, i32 0, i32 0
  %3014 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3013, i64 0, i64 5
  %3015 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3014, i32 0, i32 1
  %3016 = bitcast %union.vec64_t* %3015 to %struct.uint64v1_t*
  %3017 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3016, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %3017, i64 0, i64 0
  %3018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3019 = getelementptr inbounds %struct.MMX, %struct.MMX* %3018, i32 0, i32 0
  %3020 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3019, i64 0, i64 6
  %3021 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3020, i32 0, i32 1
  %3022 = bitcast %union.vec64_t* %3021 to %struct.uint64v1_t*
  %3023 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3022, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %3023, i64 0, i64 0
  %3024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3025 = getelementptr inbounds %struct.MMX, %struct.MMX* %3024, i32 0, i32 0
  %3026 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3025, i64 0, i64 7
  %3027 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3026, i32 0, i32 1
  %3028 = bitcast %union.vec64_t* %3027 to %struct.uint64v1_t*
  %3029 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3028, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %3029, i64 0, i64 0
  %3030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3030, i32 0, i32 5
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3031, i32 0, i32 1
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3032, i32 0, i32 11
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3033, i32 0, i32 13
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3034, i32 0, i32 3
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3035, i32 0, i32 9
  %3036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3036, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2488
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2488
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2488
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2488
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2488
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2488
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2488
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2488
  %3037 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %3038 = load double, double* %3037, !alias.scope !2492, !noalias !2493
  %3039 = load i64, i64* %RSP.i404, !alias.scope !2492, !noalias !2493
  %3040 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2488
  %3041 = inttoptr i64 %3039 to i64*
  %3042 = load i64, i64* %3041
  store i64 %3042, i64* %PC.i343, !alias.scope !2492, !noalias !2493
  %3043 = add i64 %3039, 8
  store i64 %3043, i64* %RSP.i404, !alias.scope !2492, !noalias !2493
  %3044 = call double @sin(double %3038)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2492, !noalias !2493
  %3045 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %3044, double* %3045, !alias.scope !2492, !noalias !2493
  %3046 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2488
  %3047 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3047)
  %3048 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3048)
  %3049 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3049)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %3050 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3050)
  %3051 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3051)
  %3052 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3052)
  %3053 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3053)
  %3054 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3054)
  %3055 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3055)
  %3056 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3056)
  %3057 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3057)
  %3058 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3058)
  %3059 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3059)
  %3060 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3060)
  %3061 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3061)
  %3062 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3062)
  %3063 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3063)
  %3064 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3064)
  %3065 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3065)
  %3066 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3066)
  %3067 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3067)
  %3068 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3068)
  %3069 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3069)
  %3070 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3071 = load i64, i64* %RBP
  %3072 = sub i64 %3071, 56
  %3073 = load i64, i64* %PC
  %3074 = add i64 %3073, 5
  store i64 %3074, i64* %PC
  %3075 = inttoptr i64 %3072 to double*
  %3076 = load double, double* %3075
  %3077 = bitcast i8* %3070 to double*
  store double %3076, double* %3077, align 1, !tbaa !2451
  %3078 = getelementptr inbounds i8, i8* %3070, i64 8
  %3079 = bitcast i8* %3078 to double*
  store double 0.000000e+00, double* %3079, align 1, !tbaa !2451
  %3080 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3081 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3082 = bitcast %union.vec128_t* %XMM0 to i8*
  %3083 = load i64, i64* %PC
  %3084 = add i64 %3083, 4
  store i64 %3084, i64* %PC
  %3085 = bitcast i8* %3081 to double*
  %3086 = load double, double* %3085, align 1
  %3087 = getelementptr inbounds i8, i8* %3081, i64 8
  %3088 = bitcast i8* %3087 to i64*
  %3089 = load i64, i64* %3088, align 1
  %3090 = bitcast i8* %3082 to double*
  %3091 = load double, double* %3090, align 1
  %3092 = fmul double %3086, %3091
  %3093 = bitcast i8* %3080 to double*
  store double %3092, double* %3093, align 1, !tbaa !2451
  %3094 = getelementptr inbounds i8, i8* %3080, i64 8
  %3095 = bitcast i8* %3094 to i64*
  store i64 %3089, i64* %3095, align 1, !tbaa !2451
  %3096 = load i64, i64* %RBP
  %3097 = sub i64 %3096, 24
  %3098 = bitcast %union.vec128_t* %XMM1 to i8*
  %3099 = load i64, i64* %PC
  %3100 = add i64 %3099, 5
  store i64 %3100, i64* %PC
  %3101 = bitcast i8* %3098 to double*
  %3102 = load double, double* %3101, align 1
  %3103 = inttoptr i64 %3097 to double*
  store double %3102, double* %3103
  br label %block_40134f

block_401140:                                     ; preds = %block_40112a
  %3104 = load i64, i64* %PC
  %3105 = add i64 %3104, 11
  %3106 = load i64, i64* %PC
  %3107 = add i64 %3106, 6
  %3108 = load i64, i64* %PC
  %3109 = add i64 %3108, 6
  store i64 %3109, i64* %PC
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3111 = load i8, i8* %3110, align 1, !tbaa !2446
  store i8 %3111, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3113 = icmp ne i8 %3111, 0
  %3114 = select i1 %3113, i64 %3105, i64 %3107
  store i64 %3114, i64* %3112, align 8, !tbaa !2428
  %3115 = load i8, i8* %BRANCH_TAKEN
  %3116 = icmp eq i8 %3115, 1
  br i1 %3116, label %block_40114b, label %block_401146

block_401161:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478
  %3117 = load i64, i64* %PC
  %3118 = add i64 %3117, 46
  %3119 = load i64, i64* %PC
  %3120 = add i64 %3119, 6
  %3121 = load i64, i64* %PC
  %3122 = add i64 %3121, 6
  store i64 %3122, i64* %PC
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3124 = load i8, i8* %3123, align 1, !tbaa !2446
  store i8 %3124, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3126 = icmp ne i8 %3124, 0
  %3127 = select i1 %3126, i64 %3118, i64 %3120
  store i64 %3127, i64* %3125, align 8, !tbaa !2428
  %3128 = load i8, i8* %BRANCH_TAKEN
  %3129 = icmp eq i8 %3128, 1
  br i1 %3129, label %block_40118f, label %block_401167

block_4011b8:                                     ; preds = %block_40118f, %block_401167
  %MEMORY.5 = phi %struct.Memory* [ %MEMORY.8, %block_40118f ], [ %2399, %block_401167 ]
  %3130 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3131 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3132 = bitcast %union.vec128_t* %XMM0 to i8*
  %3133 = load i64, i64* %PC
  %3134 = add i64 %3133, 3
  store i64 %3134, i64* %PC
  %3135 = bitcast i8* %3131 to i64*
  %3136 = load i64, i64* %3135, align 1
  %3137 = getelementptr inbounds i8, i8* %3131, i64 8
  %3138 = bitcast i8* %3137 to i64*
  %3139 = load i64, i64* %3138, align 1
  %3140 = bitcast i8* %3132 to i64*
  %3141 = load i64, i64* %3140, align 1
  %3142 = getelementptr inbounds i8, i8* %3132, i64 8
  %3143 = bitcast i8* %3142 to i64*
  %3144 = load i64, i64* %3143, align 1
  %3145 = xor i64 %3141, %3136
  %3146 = xor i64 %3144, %3139
  %3147 = trunc i64 %3145 to i32
  %3148 = lshr i64 %3145, 32
  %3149 = trunc i64 %3148 to i32
  %3150 = bitcast i8* %3130 to i32*
  store i32 %3147, i32* %3150, align 1, !tbaa !2469
  %3151 = getelementptr inbounds i8, i8* %3130, i64 4
  %3152 = bitcast i8* %3151 to i32*
  store i32 %3149, i32* %3152, align 1, !tbaa !2469
  %3153 = trunc i64 %3146 to i32
  %3154 = getelementptr inbounds i8, i8* %3130, i64 8
  %3155 = bitcast i8* %3154 to i32*
  store i32 %3153, i32* %3155, align 1, !tbaa !2469
  %3156 = lshr i64 %3146, 32
  %3157 = trunc i64 %3156 to i32
  %3158 = getelementptr inbounds i8, i8* %3130, i64 12
  %3159 = bitcast i8* %3158 to i32*
  store i32 %3157, i32* %3159, align 1, !tbaa !2469
  %3160 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3161 = load i64, i64* %PC
  %3162 = add i64 %3161, 9
  store i64 %3162, i64* %PC
  %3163 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %3164 = bitcast i8* %3160 to double*
  store double %3163, double* %3164, align 1, !tbaa !2451
  %3165 = getelementptr inbounds i8, i8* %3160, i64 8
  %3166 = bitcast i8* %3165 to double*
  store double 0.000000e+00, double* %3166, align 1, !tbaa !2451
  %3167 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3168 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3169 = load i64, i64* %PC
  %3170 = add i64 %3169, 9
  store i64 %3170, i64* %PC
  %3171 = bitcast i8* %3168 to double*
  %3172 = load double, double* %3171, align 1
  %3173 = getelementptr inbounds i8, i8* %3168, i64 8
  %3174 = bitcast i8* %3173 to i64*
  %3175 = load i64, i64* %3174, align 1
  %3176 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %3177 = fdiv double %3172, %3176
  %3178 = bitcast i8* %3167 to double*
  store double %3177, double* %3178, align 1, !tbaa !2451
  %3179 = getelementptr inbounds i8, i8* %3167, i64 8
  %3180 = bitcast i8* %3179 to i64*
  store i64 %3175, i64* %3180, align 1, !tbaa !2451
  %3181 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3182 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3183 = load i64, i64* %RBP
  %3184 = sub i64 %3183, 24
  %3185 = load i64, i64* %PC
  %3186 = add i64 %3185, 5
  store i64 %3186, i64* %PC
  %3187 = bitcast i8* %3182 to double*
  %3188 = load double, double* %3187, align 1
  %3189 = getelementptr inbounds i8, i8* %3182, i64 8
  %3190 = bitcast i8* %3189 to i64*
  %3191 = load i64, i64* %3190, align 1
  %3192 = inttoptr i64 %3184 to double*
  %3193 = load double, double* %3192
  %3194 = fmul double %3188, %3193
  %3195 = bitcast i8* %3181 to double*
  store double %3194, double* %3195, align 1, !tbaa !2451
  %3196 = getelementptr inbounds i8, i8* %3181, i64 8
  %3197 = bitcast i8* %3196 to i64*
  store i64 %3191, i64* %3197, align 1, !tbaa !2451
  %3198 = load i64, i64* %RBP
  %3199 = sub i64 %3198, 32
  %3200 = bitcast %union.vec128_t* %XMM1 to i8*
  %3201 = load i64, i64* %PC
  %3202 = add i64 %3201, 5
  store i64 %3202, i64* %PC
  %3203 = bitcast i8* %3200 to double*
  %3204 = load double, double* %3203, align 1
  %3205 = inttoptr i64 %3199 to double*
  store double %3204, double* %3205
  %3206 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3207 = load i64, i64* %PC
  %3208 = add i64 %3207, 9
  store i64 %3208, i64* %PC
  %3209 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %3210 = bitcast i8* %3206 to double*
  store double %3209, double* %3210, align 1, !tbaa !2451
  %3211 = getelementptr inbounds i8, i8* %3206, i64 8
  %3212 = bitcast i8* %3211 to double*
  store double 0.000000e+00, double* %3212, align 1, !tbaa !2451
  %3213 = load i64, i64* %RBP
  %3214 = sub i64 %3213, 40
  %3215 = bitcast %union.vec128_t* %XMM1 to i8*
  %3216 = load i64, i64* %PC
  %3217 = add i64 %3216, 5
  store i64 %3217, i64* %PC
  %3218 = bitcast i8* %3215 to double*
  %3219 = load double, double* %3218, align 1
  %3220 = inttoptr i64 %3214 to double*
  store double %3219, double* %3220
  %3221 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3222 = load i64, i64* %PC
  %3223 = add i64 %3222, 9
  store i64 %3223, i64* %PC
  %3224 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %3225 = bitcast i8* %3221 to double*
  store double %3224, double* %3225, align 1, !tbaa !2451
  %3226 = getelementptr inbounds i8, i8* %3221, i64 8
  %3227 = bitcast i8* %3226 to double*
  store double 0.000000e+00, double* %3227, align 1, !tbaa !2451
  %3228 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3229 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3230 = load i64, i64* %RBP
  %3231 = sub i64 %3230, 24
  %3232 = load i64, i64* %PC
  %3233 = add i64 %3232, 5
  store i64 %3233, i64* %PC
  %3234 = bitcast i8* %3229 to double*
  %3235 = load double, double* %3234, align 1
  %3236 = getelementptr inbounds i8, i8* %3229, i64 8
  %3237 = bitcast i8* %3236 to i64*
  %3238 = load i64, i64* %3237, align 1
  %3239 = inttoptr i64 %3231 to double*
  %3240 = load double, double* %3239
  %3241 = fadd double %3235, %3240
  %3242 = bitcast i8* %3228 to double*
  store double %3241, double* %3242, align 1, !tbaa !2451
  %3243 = getelementptr inbounds i8, i8* %3228, i64 8
  %3244 = bitcast i8* %3243 to i64*
  store i64 %3238, i64* %3244, align 1, !tbaa !2451
  %3245 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3246 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3247 = load i64, i64* %RBP
  %3248 = sub i64 %3247, 32
  %3249 = load i64, i64* %PC
  %3250 = add i64 %3249, 5
  store i64 %3250, i64* %PC
  %3251 = bitcast i8* %3246 to double*
  %3252 = load double, double* %3251, align 1
  %3253 = getelementptr inbounds i8, i8* %3246, i64 8
  %3254 = bitcast i8* %3253 to i64*
  %3255 = load i64, i64* %3254, align 1
  %3256 = inttoptr i64 %3248 to double*
  %3257 = load double, double* %3256
  %3258 = fsub double %3252, %3257
  %3259 = bitcast i8* %3245 to double*
  store double %3258, double* %3259, align 1, !tbaa !2451
  %3260 = getelementptr inbounds i8, i8* %3245, i64 8
  %3261 = bitcast i8* %3260 to i64*
  store i64 %3255, i64* %3261, align 1, !tbaa !2451
  %3262 = bitcast %union.vec128_t* %XMM1 to i8*
  %3263 = load i64, i64* %PC
  %3264 = add i64 %3263, 9
  store i64 %3264, i64* %PC
  %3265 = bitcast i8* %3262 to double*
  %3266 = load double, double* %3265, align 1
  store double %3266, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %3267 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3268 = load i64, i64* %PC
  %3269 = add i64 %3268, 9
  store i64 %3269, i64* %PC
  %3270 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %3271 = bitcast i8* %3267 to double*
  store double %3270, double* %3271, align 1, !tbaa !2451
  %3272 = getelementptr inbounds i8, i8* %3267, i64 8
  %3273 = bitcast i8* %3272 to double*
  store double 0.000000e+00, double* %3273, align 1, !tbaa !2451
  %3274 = bitcast %union.vec128_t* %XMM1 to i8*
  %3275 = bitcast %union.vec128_t* %XMM0 to i8*
  %3276 = load i64, i64* %PC
  %3277 = add i64 %3276, 4
  store i64 %3277, i64* %PC
  %3278 = bitcast i8* %3274 to double*
  %3279 = load double, double* %3278, align 1
  %3280 = bitcast i8* %3275 to double*
  %3281 = load double, double* %3280, align 1
  %3282 = fcmp uno double %3279, %3281
  br i1 %3282, label %3283, label %3295

; <label>:3283:                                   ; preds = %block_4011b8
  %3284 = fadd double %3279, %3281
  %3285 = bitcast double %3284 to i64
  %3286 = and i64 %3285, 9221120237041090560
  %3287 = icmp eq i64 %3286, 9218868437227405312
  %3288 = and i64 %3285, 2251799813685247
  %3289 = icmp ne i64 %3288, 0
  %3290 = and i1 %3287, %3289
  br i1 %3290, label %3291, label %3301

; <label>:3291:                                   ; preds = %3283
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3293 = load i64, i64* %3292, align 8, !tbaa !2428
  %3294 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %3293, %struct.Memory* %MEMORY.5) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:3295:                                   ; preds = %block_4011b8
  %3296 = fcmp ogt double %3279, %3281
  br i1 %3296, label %3301, label %3297

; <label>:3297:                                   ; preds = %3295
  %3298 = fcmp olt double %3279, %3281
  br i1 %3298, label %3301, label %3299

; <label>:3299:                                   ; preds = %3297
  %3300 = fcmp oeq double %3279, %3281
  br i1 %3300, label %3301, label %3308

; <label>:3301:                                   ; preds = %3299, %3297, %3295, %3283
  %3302 = phi i8 [ 0, %3295 ], [ 0, %3297 ], [ 1, %3299 ], [ 1, %3283 ]
  %3303 = phi i8 [ 0, %3295 ], [ 0, %3297 ], [ 0, %3299 ], [ 1, %3283 ]
  %3304 = phi i8 [ 0, %3295 ], [ 1, %3297 ], [ 0, %3299 ], [ 1, %3283 ]
  %3305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3302, i8* %3305, align 1, !tbaa !2453
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3303, i8* %3306, align 1, !tbaa !2453
  %3307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3304, i8* %3307, align 1, !tbaa !2453
  br label %3308

; <label>:3308:                                   ; preds = %3301, %3299
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3309, align 1, !tbaa !2453
  %3310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %3310, align 1, !tbaa !2453
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3311, align 1, !tbaa !2453
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %3291, %3308
  %3312 = phi %struct.Memory* [ %3294, %3291 ], [ %MEMORY.5, %3308 ]
  %3313 = load i64, i64* %PC
  %3314 = add i64 %3313, 17
  %3315 = load i64, i64* %PC
  %3316 = add i64 %3315, 6
  %3317 = load i64, i64* %PC
  %3318 = add i64 %3317, 6
  store i64 %3318, i64* %PC
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3320 = load i8, i8* %3319, align 1, !tbaa !2448
  %3321 = icmp eq i8 %3320, 0
  %3322 = zext i1 %3321 to i8
  store i8 %3322, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %3323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3324 = select i1 %3321, i64 %3314, i64 %3316
  store i64 %3324, i64* %3323, align 8, !tbaa !2428
  %3325 = load i8, i8* %BRANCH_TAKEN
  %3326 = icmp eq i8 %3325, 1
  br i1 %3326, label %block_40121f, label %block_401214

block_4012c7:                                     ; preds = %block_4012c1
  %3327 = load i64, i64* %PC
  %3328 = add i64 %3327, 409
  %3329 = load i64, i64* %PC
  %3330 = add i64 %3329, 5
  store i64 %3330, i64* %PC
  %3331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3328, i64* %3331, align 8, !tbaa !2428
  %3332 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3333 = load i64, i64* %PC
  %3334 = add i64 %3333, 9
  store i64 %3334, i64* %PC
  %3335 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %3336 = bitcast i8* %3332 to double*
  store double %3335, double* %3336, align 1, !tbaa !2451
  %3337 = getelementptr inbounds i8, i8* %3332, i64 8
  %3338 = bitcast i8* %3337 to double*
  store double 0.000000e+00, double* %3338, align 1, !tbaa !2451
  %3339 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3340 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3341 = load i64, i64* %PC
  %3342 = add i64 %3341, 9
  store i64 %3342, i64* %PC
  %3343 = bitcast i8* %3340 to double*
  %3344 = load double, double* %3343, align 1
  %3345 = getelementptr inbounds i8, i8* %3340, i64 8
  %3346 = bitcast i8* %3345 to i64*
  %3347 = load i64, i64* %3346, align 1
  %3348 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %3349 = fdiv double %3344, %3348
  %3350 = bitcast i8* %3339 to double*
  store double %3349, double* %3350, align 1, !tbaa !2451
  %3351 = getelementptr inbounds i8, i8* %3339, i64 8
  %3352 = bitcast i8* %3351 to i64*
  store i64 %3347, i64* %3352, align 1, !tbaa !2451
  %3353 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3354 = load i64, i64* %PC
  %3355 = add i64 %3354, 9
  store i64 %3355, i64* %PC
  %3356 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %3357 = bitcast i8* %3353 to double*
  store double %3356, double* %3357, align 1, !tbaa !2451
  %3358 = getelementptr inbounds i8, i8* %3353, i64 8
  %3359 = bitcast i8* %3358 to double*
  store double 0.000000e+00, double* %3359, align 1, !tbaa !2451
  %3360 = load i64, i64* %RBP
  %3361 = sub i64 %3360, 96
  %3362 = bitcast %union.vec128_t* %XMM0 to i8*
  %3363 = load i64, i64* %PC
  %3364 = add i64 %3363, 5
  store i64 %3364, i64* %PC
  %3365 = bitcast i8* %3362 to double*
  %3366 = load double, double* %3365, align 1
  %3367 = inttoptr i64 %3361 to double*
  store double %3366, double* %3367
  %3368 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3369 = bitcast %union.vec128_t* %XMM1 to i8*
  %3370 = load i64, i64* %PC
  %3371 = add i64 %3370, 3
  store i64 %3371, i64* %PC
  %3372 = bitcast i8* %3369 to <2 x i32>*
  %3373 = load <2 x i32>, <2 x i32>* %3372, align 1
  %3374 = getelementptr inbounds i8, i8* %3369, i64 8
  %3375 = bitcast i8* %3374 to <2 x i32>*
  %3376 = load <2 x i32>, <2 x i32>* %3375, align 1
  %3377 = extractelement <2 x i32> %3373, i32 0
  %3378 = bitcast i8* %3368 to i32*
  store i32 %3377, i32* %3378, align 1, !tbaa !2454
  %3379 = extractelement <2 x i32> %3373, i32 1
  %3380 = getelementptr inbounds i8, i8* %3368, i64 4
  %3381 = bitcast i8* %3380 to i32*
  store i32 %3379, i32* %3381, align 1, !tbaa !2454
  %3382 = extractelement <2 x i32> %3376, i32 0
  %3383 = getelementptr inbounds i8, i8* %3368, i64 8
  %3384 = bitcast i8* %3383 to i32*
  store i32 %3382, i32* %3384, align 1, !tbaa !2454
  %3385 = extractelement <2 x i32> %3376, i32 1
  %3386 = getelementptr inbounds i8, i8* %3368, i64 12
  %3387 = bitcast i8* %3386 to i32*
  store i32 %3385, i32* %3387, align 1, !tbaa !2454
  %3388 = load i64, i64* %PC
  %3389 = sub i64 %3388, 3683
  %3390 = load i64, i64* %PC
  %3391 = add i64 %3390, 5
  %3392 = load i64, i64* %PC
  %3393 = add i64 %3392, 5
  store i64 %3393, i64* %PC
  %3394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3395 = load i64, i64* %3394, align 8, !tbaa !2428
  %3396 = add i64 %3395, -8
  %3397 = inttoptr i64 %3396 to i64*
  store i64 %3391, i64* %3397
  store i64 %3396, i64* %3394, align 8, !tbaa !2428
  %3398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3389, i64* %3398, align 8, !tbaa !2428
  %3399 = load i64, i64* %PC
  %3400 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3400)
  %3401 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3401)
  %3402 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3402)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %3403 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3403)
  %3404 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3404)
  %3405 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3405)
  %3406 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3406)
  %3407 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3407)
  %3408 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3408)
  %3409 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3409)
  %3410 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3410)
  %3411 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3411)
  %3412 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3412)
  %3413 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3413)
  %3414 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3414)
  %3415 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3415)
  %3416 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3416)
  %3417 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3417)
  %3418 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3418)
  %3419 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3419)
  %3420 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3420)
  %3421 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3421)
  %3422 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3422)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2494
  store i64 %3399, i64* %curr_pc.i161, align 8, !noalias !2494
  store %struct.Memory* %184, %struct.Memory** %memory.i162, align 8, !noalias !2494
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2494
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2494
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2494
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2494
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2494
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2494
  store %struct.Memory* %184, %struct.Memory** %MEMORY.i169, align 8, !noalias !2494
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3424 = getelementptr inbounds %struct.GPR, %struct.GPR* %3423, i32 0, i32 33
  %3425 = getelementptr inbounds %struct.Reg, %struct.Reg* %3424, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %3425 to i64*
  store i64 %3399, i64* %PC.i184, align 8, !alias.scope !2498, !noalias !2499
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3427 = getelementptr inbounds %struct.GPR, %struct.GPR* %3426, i32 0, i32 1
  %3428 = getelementptr inbounds %struct.Reg, %struct.Reg* %3427, i32 0, i32 0
  %3429 = bitcast %union.anon* %3428 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3429, i32 0, i32 1
  %3430 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3431 = getelementptr inbounds %struct.GPR, %struct.GPR* %3430, i32 0, i32 3
  %3432 = getelementptr inbounds %struct.Reg, %struct.Reg* %3431, i32 0, i32 0
  %3433 = bitcast %union.anon* %3432 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3433, i32 0, i32 1
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3435 = getelementptr inbounds %struct.GPR, %struct.GPR* %3434, i32 0, i32 5
  %3436 = getelementptr inbounds %struct.Reg, %struct.Reg* %3435, i32 0, i32 0
  %3437 = bitcast %union.anon* %3436 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3437, i32 0, i32 1
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3439 = getelementptr inbounds %struct.GPR, %struct.GPR* %3438, i32 0, i32 7
  %3440 = getelementptr inbounds %struct.Reg, %struct.Reg* %3439, i32 0, i32 0
  %3441 = bitcast %union.anon* %3440 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3441, i32 0, i32 1
  %3442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3443 = getelementptr inbounds %struct.GPR, %struct.GPR* %3442, i32 0, i32 1
  %3444 = getelementptr inbounds %struct.Reg, %struct.Reg* %3443, i32 0, i32 0
  %3445 = bitcast %union.anon* %3444 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3445, i32 0, i32 0
  %3446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3447 = getelementptr inbounds %struct.GPR, %struct.GPR* %3446, i32 0, i32 3
  %3448 = getelementptr inbounds %struct.Reg, %struct.Reg* %3447, i32 0, i32 0
  %3449 = bitcast %union.anon* %3448 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3449, i32 0, i32 0
  %3450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3451 = getelementptr inbounds %struct.GPR, %struct.GPR* %3450, i32 0, i32 5
  %3452 = getelementptr inbounds %struct.Reg, %struct.Reg* %3451, i32 0, i32 0
  %3453 = bitcast %union.anon* %3452 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3453, i32 0, i32 0
  %3454 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3455 = getelementptr inbounds %struct.GPR, %struct.GPR* %3454, i32 0, i32 7
  %3456 = getelementptr inbounds %struct.Reg, %struct.Reg* %3455, i32 0, i32 0
  %3457 = bitcast %union.anon* %3456 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3457, i32 0, i32 0
  %3458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3459 = getelementptr inbounds %struct.GPR, %struct.GPR* %3458, i32 0, i32 9
  %3460 = getelementptr inbounds %struct.Reg, %struct.Reg* %3459, i32 0, i32 0
  %3461 = bitcast %union.anon* %3460 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3461, i32 0, i32 0
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 11
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %3465 = bitcast %union.anon* %3464 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3465, i32 0, i32 0
  %3466 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3467 = getelementptr inbounds %struct.GPR, %struct.GPR* %3466, i32 0, i32 13
  %3468 = getelementptr inbounds %struct.Reg, %struct.Reg* %3467, i32 0, i32 0
  %3469 = bitcast %union.anon* %3468 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3469, i32 0, i32 0
  %3470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3471 = getelementptr inbounds %struct.GPR, %struct.GPR* %3470, i32 0, i32 15
  %3472 = getelementptr inbounds %struct.Reg, %struct.Reg* %3471, i32 0, i32 0
  %3473 = bitcast %union.anon* %3472 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3473, i32 0, i32 0
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3475 = getelementptr inbounds %struct.GPR, %struct.GPR* %3474, i32 0, i32 17
  %3476 = getelementptr inbounds %struct.Reg, %struct.Reg* %3475, i32 0, i32 0
  %3477 = bitcast %union.anon* %3476 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3477, i32 0, i32 0
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3479 = getelementptr inbounds %struct.GPR, %struct.GPR* %3478, i32 0, i32 19
  %3480 = getelementptr inbounds %struct.Reg, %struct.Reg* %3479, i32 0, i32 0
  %3481 = bitcast %union.anon* %3480 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3481, i32 0, i32 0
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3483 = getelementptr inbounds %struct.GPR, %struct.GPR* %3482, i32 0, i32 21
  %3484 = getelementptr inbounds %struct.Reg, %struct.Reg* %3483, i32 0, i32 0
  %3485 = bitcast %union.anon* %3484 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3485, i32 0, i32 0
  %3486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3487 = getelementptr inbounds %struct.GPR, %struct.GPR* %3486, i32 0, i32 23
  %3488 = getelementptr inbounds %struct.Reg, %struct.Reg* %3487, i32 0, i32 0
  %3489 = bitcast %union.anon* %3488 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3489, i32 0, i32 0
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3491 = getelementptr inbounds %struct.GPR, %struct.GPR* %3490, i32 0, i32 25
  %3492 = getelementptr inbounds %struct.Reg, %struct.Reg* %3491, i32 0, i32 0
  %3493 = bitcast %union.anon* %3492 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3493, i32 0, i32 0
  %3494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3495 = getelementptr inbounds %struct.GPR, %struct.GPR* %3494, i32 0, i32 27
  %3496 = getelementptr inbounds %struct.Reg, %struct.Reg* %3495, i32 0, i32 0
  %3497 = bitcast %union.anon* %3496 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3497, i32 0, i32 0
  %3498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3499 = getelementptr inbounds %struct.GPR, %struct.GPR* %3498, i32 0, i32 29
  %3500 = getelementptr inbounds %struct.Reg, %struct.Reg* %3499, i32 0, i32 0
  %3501 = bitcast %union.anon* %3500 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3501, i32 0, i32 0
  %3502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3503 = getelementptr inbounds %struct.GPR, %struct.GPR* %3502, i32 0, i32 31
  %3504 = getelementptr inbounds %struct.Reg, %struct.Reg* %3503, i32 0, i32 0
  %3505 = bitcast %union.anon* %3504 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3505, i32 0, i32 0
  %3506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3507 = getelementptr inbounds %struct.GPR, %struct.GPR* %3506, i32 0, i32 1
  %3508 = getelementptr inbounds %struct.Reg, %struct.Reg* %3507, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %3508 to i16*
  %3509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3510 = getelementptr inbounds %struct.GPR, %struct.GPR* %3509, i32 0, i32 3
  %3511 = getelementptr inbounds %struct.Reg, %struct.Reg* %3510, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %3511 to i16*
  %3512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3513 = getelementptr inbounds %struct.GPR, %struct.GPR* %3512, i32 0, i32 5
  %3514 = getelementptr inbounds %struct.Reg, %struct.Reg* %3513, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %3514 to i16*
  %3515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3516 = getelementptr inbounds %struct.GPR, %struct.GPR* %3515, i32 0, i32 7
  %3517 = getelementptr inbounds %struct.Reg, %struct.Reg* %3516, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %3517 to i16*
  %3518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3519 = getelementptr inbounds %struct.GPR, %struct.GPR* %3518, i32 0, i32 9
  %3520 = getelementptr inbounds %struct.Reg, %struct.Reg* %3519, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %3520 to i16*
  %3521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3522 = getelementptr inbounds %struct.GPR, %struct.GPR* %3521, i32 0, i32 11
  %3523 = getelementptr inbounds %struct.Reg, %struct.Reg* %3522, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %3523 to i16*
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3525 = getelementptr inbounds %struct.GPR, %struct.GPR* %3524, i32 0, i32 13
  %3526 = getelementptr inbounds %struct.Reg, %struct.Reg* %3525, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %3526 to i16*
  %3527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3528 = getelementptr inbounds %struct.GPR, %struct.GPR* %3527, i32 0, i32 15
  %3529 = getelementptr inbounds %struct.Reg, %struct.Reg* %3528, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %3529 to i16*
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 17
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %3532 to i16*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 19
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %3535 to i16*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 21
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %3538 to i16*
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3540 = getelementptr inbounds %struct.GPR, %struct.GPR* %3539, i32 0, i32 23
  %3541 = getelementptr inbounds %struct.Reg, %struct.Reg* %3540, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %3541 to i16*
  %3542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3543 = getelementptr inbounds %struct.GPR, %struct.GPR* %3542, i32 0, i32 25
  %3544 = getelementptr inbounds %struct.Reg, %struct.Reg* %3543, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %3544 to i16*
  %3545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3546 = getelementptr inbounds %struct.GPR, %struct.GPR* %3545, i32 0, i32 27
  %3547 = getelementptr inbounds %struct.Reg, %struct.Reg* %3546, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %3547 to i16*
  %3548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3549 = getelementptr inbounds %struct.GPR, %struct.GPR* %3548, i32 0, i32 29
  %3550 = getelementptr inbounds %struct.Reg, %struct.Reg* %3549, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %3550 to i16*
  %3551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3552 = getelementptr inbounds %struct.GPR, %struct.GPR* %3551, i32 0, i32 31
  %3553 = getelementptr inbounds %struct.Reg, %struct.Reg* %3552, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %3553 to i16*
  %3554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3555 = getelementptr inbounds %struct.GPR, %struct.GPR* %3554, i32 0, i32 33
  %3556 = getelementptr inbounds %struct.Reg, %struct.Reg* %3555, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %3556 to i16*
  %3557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3558 = getelementptr inbounds %struct.GPR, %struct.GPR* %3557, i32 0, i32 1
  %3559 = getelementptr inbounds %struct.Reg, %struct.Reg* %3558, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %3559 to i32*
  %3560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3561 = getelementptr inbounds %struct.GPR, %struct.GPR* %3560, i32 0, i32 3
  %3562 = getelementptr inbounds %struct.Reg, %struct.Reg* %3561, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %3562 to i32*
  %3563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3564 = getelementptr inbounds %struct.GPR, %struct.GPR* %3563, i32 0, i32 5
  %3565 = getelementptr inbounds %struct.Reg, %struct.Reg* %3564, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %3565 to i32*
  %3566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3567 = getelementptr inbounds %struct.GPR, %struct.GPR* %3566, i32 0, i32 7
  %3568 = getelementptr inbounds %struct.Reg, %struct.Reg* %3567, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %3568 to i32*
  %3569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3570 = getelementptr inbounds %struct.GPR, %struct.GPR* %3569, i32 0, i32 9
  %3571 = getelementptr inbounds %struct.Reg, %struct.Reg* %3570, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %3571 to i32*
  %3572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3573 = getelementptr inbounds %struct.GPR, %struct.GPR* %3572, i32 0, i32 11
  %3574 = getelementptr inbounds %struct.Reg, %struct.Reg* %3573, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %3574 to i32*
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 13
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %3577 to i32*
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3579 = getelementptr inbounds %struct.GPR, %struct.GPR* %3578, i32 0, i32 15
  %3580 = getelementptr inbounds %struct.Reg, %struct.Reg* %3579, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %3580 to i32*
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3582 = getelementptr inbounds %struct.GPR, %struct.GPR* %3581, i32 0, i32 33
  %3583 = getelementptr inbounds %struct.Reg, %struct.Reg* %3582, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %3583 to i32*
  %3584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3585 = getelementptr inbounds %struct.GPR, %struct.GPR* %3584, i32 0, i32 17
  %3586 = getelementptr inbounds %struct.Reg, %struct.Reg* %3585, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %3586 to i32*
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3588 = getelementptr inbounds %struct.GPR, %struct.GPR* %3587, i32 0, i32 19
  %3589 = getelementptr inbounds %struct.Reg, %struct.Reg* %3588, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %3589 to i32*
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 21
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %3592 to i32*
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 23
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %3595 to i32*
  %3596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3597 = getelementptr inbounds %struct.GPR, %struct.GPR* %3596, i32 0, i32 25
  %3598 = getelementptr inbounds %struct.Reg, %struct.Reg* %3597, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %3598 to i32*
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 27
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %3601 to i32*
  %3602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3603 = getelementptr inbounds %struct.GPR, %struct.GPR* %3602, i32 0, i32 29
  %3604 = getelementptr inbounds %struct.Reg, %struct.Reg* %3603, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %3604 to i32*
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 31
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %3607 to i32*
  %3608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3609 = getelementptr inbounds %struct.GPR, %struct.GPR* %3608, i32 0, i32 1
  %3610 = getelementptr inbounds %struct.Reg, %struct.Reg* %3609, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %3610 to i64*
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 3
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %3613 to i64*
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3615 = getelementptr inbounds %struct.GPR, %struct.GPR* %3614, i32 0, i32 5
  %3616 = getelementptr inbounds %struct.Reg, %struct.Reg* %3615, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %3616 to i64*
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 7
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %3619 to i64*
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 9
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %3622 to i64*
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3624 = getelementptr inbounds %struct.GPR, %struct.GPR* %3623, i32 0, i32 11
  %3625 = getelementptr inbounds %struct.Reg, %struct.Reg* %3624, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %3625 to i64*
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3627 = getelementptr inbounds %struct.GPR, %struct.GPR* %3626, i32 0, i32 13
  %3628 = getelementptr inbounds %struct.Reg, %struct.Reg* %3627, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %3628 to i64*
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 15
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %3631 to i64*
  %3632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3633 = getelementptr inbounds %struct.GPR, %struct.GPR* %3632, i32 0, i32 17
  %3634 = getelementptr inbounds %struct.Reg, %struct.Reg* %3633, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %3634 to i64*
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 19
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %3637 to i64*
  %3638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3639 = getelementptr inbounds %struct.GPR, %struct.GPR* %3638, i32 0, i32 21
  %3640 = getelementptr inbounds %struct.Reg, %struct.Reg* %3639, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %3640 to i64*
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 23
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %3643 to i64*
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3645 = getelementptr inbounds %struct.GPR, %struct.GPR* %3644, i32 0, i32 25
  %3646 = getelementptr inbounds %struct.Reg, %struct.Reg* %3645, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %3646 to i64*
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 27
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %3649 to i64*
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 29
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %3652 to i64*
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 31
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %3655 to i64*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 33
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %3658 to i64*
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3660 = getelementptr inbounds %struct.Segments, %struct.Segments* %3659, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %3660 to i16*
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3662 = getelementptr inbounds %struct.Segments, %struct.Segments* %3661, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %3662 to i16*
  %3663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3664 = getelementptr inbounds %struct.Segments, %struct.Segments* %3663, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %3664 to i16*
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3666 = getelementptr inbounds %struct.Segments, %struct.Segments* %3665, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %3666 to i16*
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3668 = getelementptr inbounds %struct.Segments, %struct.Segments* %3667, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %3668 to i16*
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3670 = getelementptr inbounds %struct.Segments, %struct.Segments* %3669, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %3670 to i16*
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3672 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3671, i32 0, i32 5
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %3673 to i64*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3675 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3674, i32 0, i32 7
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %3676 to i64*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3678 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3677, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %3678 to %"class.std::bitset"*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3680 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3679, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %3680 to %"class.std::bitset"*
  %3681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3682 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3681, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %3682 to %"class.std::bitset"*
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3684 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3683, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %3684 to %"class.std::bitset"*
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3686 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3685, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %3686 to %"class.std::bitset"*
  %3687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3688 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3687, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %3688 to %"class.std::bitset"*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3690 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3689, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %3690 to %"class.std::bitset"*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3692 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3691, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %3692 to %"class.std::bitset"*
  %3693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3694 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3693, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %3694 to %"class.std::bitset"*
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3696 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3695, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %3696 to %"class.std::bitset"*
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3698 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3697, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %3698 to %"class.std::bitset"*
  %3699 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3700 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3699, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %3700 to %"class.std::bitset"*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3702 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3701, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %3702 to %"class.std::bitset"*
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3704 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3703, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %3704 to %"class.std::bitset"*
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3706 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3705, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %3706 to %"class.std::bitset"*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3708 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3707, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %3708 to %"class.std::bitset"*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3710 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3709, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %3710 to %union.vec128_t*
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3712 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3711, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %3712 to %union.vec128_t*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3714 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3713, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %3714 to %union.vec128_t*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3716 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3715, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %3716 to %union.vec128_t*
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3718 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3717, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %3718 to %union.vec128_t*
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3720 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3719, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %3720 to %union.vec128_t*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3722 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3721, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %3722 to %union.vec128_t*
  %3723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3724 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3723, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %3724 to %union.vec128_t*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3726 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3725, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %3726 to %union.vec128_t*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3728 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3727, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %3728 to %union.vec128_t*
  %3729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3730 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3729, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %3730 to %union.vec128_t*
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3732 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3731, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %3732 to %union.vec128_t*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3734 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3733, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %3734 to %union.vec128_t*
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3736 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3735, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %3736 to %union.vec128_t*
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3738 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3737, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %3738 to %union.vec128_t*
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3740 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3739, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %3740 to %union.vec128_t*
  %3741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3742 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3741, i32 0, i32 0
  %3743 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3742, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3743, i32 0, i32 1
  %3744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3745 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3744, i32 0, i32 0
  %3746 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3745, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3746, i32 0, i32 1
  %3747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3748 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3747, i32 0, i32 0
  %3749 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3748, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3749, i32 0, i32 1
  %3750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3751 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3750, i32 0, i32 0
  %3752 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3751, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3752, i32 0, i32 1
  %3753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3754 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3753, i32 0, i32 0
  %3755 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3754, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3755, i32 0, i32 1
  %3756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3757 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3756, i32 0, i32 0
  %3758 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3757, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3758, i32 0, i32 1
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3760 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3759, i32 0, i32 0
  %3761 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3760, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3761, i32 0, i32 1
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3763 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3762, i32 0, i32 0
  %3764 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3763, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3764, i32 0, i32 1
  %3765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3766 = getelementptr inbounds %struct.MMX, %struct.MMX* %3765, i32 0, i32 0
  %3767 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3766, i64 0, i64 0
  %3768 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3767, i32 0, i32 1
  %3769 = bitcast %union.vec64_t* %3768 to %struct.uint64v1_t*
  %3770 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3769, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %3770, i64 0, i64 0
  %3771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3772 = getelementptr inbounds %struct.MMX, %struct.MMX* %3771, i32 0, i32 0
  %3773 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3772, i64 0, i64 1
  %3774 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3773, i32 0, i32 1
  %3775 = bitcast %union.vec64_t* %3774 to %struct.uint64v1_t*
  %3776 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3775, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %3776, i64 0, i64 0
  %3777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3778 = getelementptr inbounds %struct.MMX, %struct.MMX* %3777, i32 0, i32 0
  %3779 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3778, i64 0, i64 2
  %3780 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3779, i32 0, i32 1
  %3781 = bitcast %union.vec64_t* %3780 to %struct.uint64v1_t*
  %3782 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3781, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %3782, i64 0, i64 0
  %3783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3784 = getelementptr inbounds %struct.MMX, %struct.MMX* %3783, i32 0, i32 0
  %3785 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3784, i64 0, i64 3
  %3786 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3785, i32 0, i32 1
  %3787 = bitcast %union.vec64_t* %3786 to %struct.uint64v1_t*
  %3788 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3787, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %3788, i64 0, i64 0
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3790 = getelementptr inbounds %struct.MMX, %struct.MMX* %3789, i32 0, i32 0
  %3791 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3790, i64 0, i64 4
  %3792 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3791, i32 0, i32 1
  %3793 = bitcast %union.vec64_t* %3792 to %struct.uint64v1_t*
  %3794 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3793, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %3794, i64 0, i64 0
  %3795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3796 = getelementptr inbounds %struct.MMX, %struct.MMX* %3795, i32 0, i32 0
  %3797 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3796, i64 0, i64 5
  %3798 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3797, i32 0, i32 1
  %3799 = bitcast %union.vec64_t* %3798 to %struct.uint64v1_t*
  %3800 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3799, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %3800, i64 0, i64 0
  %3801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3802 = getelementptr inbounds %struct.MMX, %struct.MMX* %3801, i32 0, i32 0
  %3803 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3802, i64 0, i64 6
  %3804 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3803, i32 0, i32 1
  %3805 = bitcast %union.vec64_t* %3804 to %struct.uint64v1_t*
  %3806 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3805, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %3806, i64 0, i64 0
  %3807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3808 = getelementptr inbounds %struct.MMX, %struct.MMX* %3807, i32 0, i32 0
  %3809 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3808, i64 0, i64 7
  %3810 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3809, i32 0, i32 1
  %3811 = bitcast %union.vec64_t* %3810 to %struct.uint64v1_t*
  %3812 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3811, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %3812, i64 0, i64 0
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3813, i32 0, i32 5
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3814, i32 0, i32 1
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3815, i32 0, i32 11
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3816, i32 0, i32 13
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3817, i32 0, i32 3
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3818, i32 0, i32 9
  %3819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3819, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2494
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2494
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2494
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2494
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2494
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2494
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2494
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2494
  %3820 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %3821 = load double, double* %3820, !alias.scope !2498, !noalias !2499
  %3822 = load i64, i64* %RSP.i245, !alias.scope !2498, !noalias !2499
  %3823 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2494
  %3824 = inttoptr i64 %3822 to i64*
  %3825 = load i64, i64* %3824
  store i64 %3825, i64* %PC.i184, !alias.scope !2498, !noalias !2499
  %3826 = add i64 %3822, 8
  store i64 %3826, i64* %RSP.i245, !alias.scope !2498, !noalias !2499
  %3827 = call double @sin(double %3821)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2498, !noalias !2499
  %3828 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %3827, double* %3828, !alias.scope !2498, !noalias !2499
  %3829 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2494
  %3830 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3830)
  %3831 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3831)
  %3832 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3832)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %3833 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3833)
  %3834 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3834)
  %3835 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3835)
  %3836 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3836)
  %3837 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3837)
  %3838 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3838)
  %3839 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3839)
  %3840 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3840)
  %3841 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3841)
  %3842 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3842)
  %3843 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3843)
  %3844 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3844)
  %3845 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3845)
  %3846 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3846)
  %3847 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3847)
  %3848 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3848)
  %3849 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3849)
  %3850 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3850)
  %3851 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3851)
  %3852 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3852)
  %3853 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3854 = load i64, i64* %RBP
  %3855 = sub i64 %3854, 96
  %3856 = load i64, i64* %PC
  %3857 = add i64 %3856, 5
  store i64 %3857, i64* %PC
  %3858 = inttoptr i64 %3855 to double*
  %3859 = load double, double* %3858
  %3860 = bitcast i8* %3853 to double*
  store double %3859, double* %3860, align 1, !tbaa !2451
  %3861 = getelementptr inbounds i8, i8* %3853, i64 8
  %3862 = bitcast i8* %3861 to double*
  store double 0.000000e+00, double* %3862, align 1, !tbaa !2451
  %3863 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3864 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3865 = bitcast %union.vec128_t* %XMM0 to i8*
  %3866 = load i64, i64* %PC
  %3867 = add i64 %3866, 4
  store i64 %3867, i64* %PC
  %3868 = bitcast i8* %3864 to double*
  %3869 = load double, double* %3868, align 1
  %3870 = getelementptr inbounds i8, i8* %3864, i64 8
  %3871 = bitcast i8* %3870 to i64*
  %3872 = load i64, i64* %3871, align 1
  %3873 = bitcast i8* %3865 to double*
  %3874 = load double, double* %3873, align 1
  %3875 = fmul double %3869, %3874
  %3876 = bitcast i8* %3863 to double*
  store double %3875, double* %3876, align 1, !tbaa !2451
  %3877 = getelementptr inbounds i8, i8* %3863, i64 8
  %3878 = bitcast i8* %3877 to i64*
  store i64 %3872, i64* %3878, align 1, !tbaa !2451
  %3879 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3880 = bitcast %union.vec128_t* %XMM1 to i8*
  %3881 = load i64, i64* %PC
  %3882 = add i64 %3881, 3
  store i64 %3882, i64* %PC
  %3883 = bitcast i8* %3880 to <2 x i32>*
  %3884 = load <2 x i32>, <2 x i32>* %3883, align 1
  %3885 = getelementptr inbounds i8, i8* %3880, i64 8
  %3886 = bitcast i8* %3885 to <2 x i32>*
  %3887 = load <2 x i32>, <2 x i32>* %3886, align 1
  %3888 = extractelement <2 x i32> %3884, i32 0
  %3889 = bitcast i8* %3879 to i32*
  store i32 %3888, i32* %3889, align 1, !tbaa !2454
  %3890 = extractelement <2 x i32> %3884, i32 1
  %3891 = getelementptr inbounds i8, i8* %3879, i64 4
  %3892 = bitcast i8* %3891 to i32*
  store i32 %3890, i32* %3892, align 1, !tbaa !2454
  %3893 = extractelement <2 x i32> %3887, i32 0
  %3894 = getelementptr inbounds i8, i8* %3879, i64 8
  %3895 = bitcast i8* %3894 to i32*
  store i32 %3893, i32* %3895, align 1, !tbaa !2454
  %3896 = extractelement <2 x i32> %3887, i32 1
  %3897 = getelementptr inbounds i8, i8* %3879, i64 12
  %3898 = bitcast i8* %3897 to i32*
  store i32 %3896, i32* %3898, align 1, !tbaa !2454
  %3899 = load i64, i64* %PC
  %3900 = sub i64 %3899, 3684
  %3901 = load i64, i64* %PC
  %3902 = add i64 %3901, 5
  %3903 = load i64, i64* %PC
  %3904 = add i64 %3903, 5
  store i64 %3904, i64* %PC
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3906 = load i64, i64* %3905, align 8, !tbaa !2428
  %3907 = add i64 %3906, -8
  %3908 = inttoptr i64 %3907 to i64*
  store i64 %3902, i64* %3908
  store i64 %3907, i64* %3905, align 8, !tbaa !2428
  %3909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3900, i64* %3909, align 8, !tbaa !2428
  %3910 = load i64, i64* %PC
  %3911 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %3910, %struct.Memory* %3829)
  %3912 = load i64, i64* %PC
  %3913 = add i64 %3912, 10
  store i64 %3913, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %3914 = bitcast %union.vec128_t* %XMM0 to i8*
  %3915 = load i64, i64* %PC
  %3916 = add i64 %3915, 5
  store i64 %3916, i64* %PC
  %3917 = bitcast i8* %3914 to i64*
  %3918 = load i64, i64* %3917, align 1
  store i64 %3918, i64* %RCX, align 1, !tbaa !2428
  %3919 = load i64, i64* %RCX
  %3920 = load i64, i64* %RAX
  %3921 = load i64, i64* %PC
  %3922 = add i64 %3921, 3
  store i64 %3922, i64* %PC
  %3923 = xor i64 %3920, %3919
  store i64 %3923, i64* %RCX, align 8, !tbaa !2428
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3924, align 1, !tbaa !2432
  %3925 = trunc i64 %3923 to i32
  %3926 = and i32 %3925, 255
  %3927 = call i32 @llvm.ctpop.i32(i32 %3926) #17
  %3928 = trunc i32 %3927 to i8
  %3929 = and i8 %3928, 1
  %3930 = xor i8 %3929, 1
  %3931 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3930, i8* %3931, align 1, !tbaa !2446
  %3932 = icmp eq i64 %3923, 0
  %3933 = zext i1 %3932 to i8
  %3934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3933, i8* %3934, align 1, !tbaa !2448
  %3935 = lshr i64 %3923, 63
  %3936 = trunc i64 %3935 to i8
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3936, i8* %3937, align 1, !tbaa !2449
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3938, align 1, !tbaa !2450
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3939, align 1, !tbaa !2447
  %3940 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3941 = load i64, i64* %RCX
  %3942 = load i64, i64* %PC
  %3943 = add i64 %3942, 5
  store i64 %3943, i64* %PC
  %3944 = bitcast i8* %3940 to i64*
  store i64 %3941, i64* %3944, align 1, !tbaa !2428
  %3945 = getelementptr inbounds i8, i8* %3940, i64 8
  %3946 = bitcast i8* %3945 to i64*
  store i64 0, i64* %3946, align 1, !tbaa !2428
  %3947 = load i64, i64* %RBP
  %3948 = sub i64 %3947, 16
  %3949 = bitcast %union.vec128_t* %XMM0 to i8*
  %3950 = load i64, i64* %PC
  %3951 = add i64 %3950, 5
  store i64 %3951, i64* %PC
  %3952 = bitcast i8* %3949 to double*
  %3953 = load double, double* %3952, align 1
  %3954 = inttoptr i64 %3948 to double*
  store double %3953, double* %3954
  %3955 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3956 = load i64, i64* %PC
  %3957 = add i64 %3956, 9
  store i64 %3957, i64* %PC
  %3958 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %3959 = bitcast i8* %3955 to double*
  store double %3958, double* %3959, align 1, !tbaa !2451
  %3960 = getelementptr inbounds i8, i8* %3955, i64 8
  %3961 = bitcast i8* %3960 to double*
  store double 0.000000e+00, double* %3961, align 1, !tbaa !2451
  %3962 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3963 = load i64, i64* %PC
  %3964 = add i64 %3963, 9
  store i64 %3964, i64* %PC
  %3965 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %3966 = bitcast i8* %3962 to double*
  store double %3965, double* %3966, align 1, !tbaa !2451
  %3967 = getelementptr inbounds i8, i8* %3962, i64 8
  %3968 = bitcast i8* %3967 to double*
  store double 0.000000e+00, double* %3968, align 1, !tbaa !2451
  %3969 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3970 = load i64, i64* %RBP
  %3971 = sub i64 %3970, 16
  %3972 = load i64, i64* %PC
  %3973 = add i64 %3972, 5
  store i64 %3973, i64* %PC
  %3974 = inttoptr i64 %3971 to double*
  %3975 = load double, double* %3974
  %3976 = bitcast i8* %3969 to double*
  store double %3975, double* %3976, align 1, !tbaa !2451
  %3977 = getelementptr inbounds i8, i8* %3969, i64 8
  %3978 = bitcast i8* %3977 to double*
  store double 0.000000e+00, double* %3978, align 1, !tbaa !2451
  %3979 = bitcast %union.vec128_t* %XMM2 to i8*
  %3980 = load i64, i64* %PC
  %3981 = add i64 %3980, 5
  store i64 %3981, i64* %PC
  %3982 = bitcast i8* %3979 to i64*
  %3983 = load i64, i64* %3982, align 1
  store i64 %3983, i64* %RCX, align 1, !tbaa !2428
  %3984 = load i64, i64* %RCX
  %3985 = load i64, i64* %RAX
  %3986 = load i64, i64* %PC
  %3987 = add i64 %3986, 3
  store i64 %3987, i64* %PC
  %3988 = xor i64 %3985, %3984
  store i64 %3988, i64* %RCX, align 8, !tbaa !2428
  %3989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3989, align 1, !tbaa !2432
  %3990 = trunc i64 %3988 to i32
  %3991 = and i32 %3990, 255
  %3992 = call i32 @llvm.ctpop.i32(i32 %3991) #17
  %3993 = trunc i32 %3992 to i8
  %3994 = and i8 %3993, 1
  %3995 = xor i8 %3994, 1
  %3996 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3995, i8* %3996, align 1, !tbaa !2446
  %3997 = icmp eq i64 %3988, 0
  %3998 = zext i1 %3997 to i8
  %3999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3998, i8* %3999, align 1, !tbaa !2448
  %4000 = lshr i64 %3988, 63
  %4001 = trunc i64 %4000 to i8
  %4002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4001, i8* %4002, align 1, !tbaa !2449
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4003, align 1, !tbaa !2450
  %4004 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4004, align 1, !tbaa !2447
  %4005 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4006 = load i64, i64* %RCX
  %4007 = load i64, i64* %PC
  %4008 = add i64 %4007, 5
  store i64 %4008, i64* %PC
  %4009 = bitcast i8* %4005 to i64*
  store i64 %4006, i64* %4009, align 1, !tbaa !2428
  %4010 = getelementptr inbounds i8, i8* %4005, i64 8
  %4011 = bitcast i8* %4010 to i64*
  store i64 0, i64* %4011, align 1, !tbaa !2428
  %4012 = load i64, i64* %RBP
  %4013 = sub i64 %4012, 104
  %4014 = bitcast %union.vec128_t* %XMM0 to i8*
  %4015 = load i64, i64* %PC
  %4016 = add i64 %4015, 5
  store i64 %4016, i64* %PC
  %4017 = bitcast i8* %4014 to double*
  %4018 = load double, double* %4017, align 1
  %4019 = inttoptr i64 %4013 to double*
  store double %4018, double* %4019
  %4020 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4021 = bitcast %union.vec128_t* %XMM2 to i8*
  %4022 = load i64, i64* %PC
  %4023 = add i64 %4022, 3
  store i64 %4023, i64* %PC
  %4024 = bitcast i8* %4021 to <2 x i32>*
  %4025 = load <2 x i32>, <2 x i32>* %4024, align 1
  %4026 = getelementptr inbounds i8, i8* %4021, i64 8
  %4027 = bitcast i8* %4026 to <2 x i32>*
  %4028 = load <2 x i32>, <2 x i32>* %4027, align 1
  %4029 = extractelement <2 x i32> %4025, i32 0
  %4030 = bitcast i8* %4020 to i32*
  store i32 %4029, i32* %4030, align 1, !tbaa !2454
  %4031 = extractelement <2 x i32> %4025, i32 1
  %4032 = getelementptr inbounds i8, i8* %4020, i64 4
  %4033 = bitcast i8* %4032 to i32*
  store i32 %4031, i32* %4033, align 1, !tbaa !2454
  %4034 = extractelement <2 x i32> %4028, i32 0
  %4035 = getelementptr inbounds i8, i8* %4020, i64 8
  %4036 = bitcast i8* %4035 to i32*
  store i32 %4034, i32* %4036, align 1, !tbaa !2454
  %4037 = extractelement <2 x i32> %4028, i32 1
  %4038 = getelementptr inbounds i8, i8* %4020, i64 12
  %4039 = bitcast i8* %4038 to i32*
  store i32 %4037, i32* %4039, align 1, !tbaa !2454
  %4040 = load i64, i64* %RBP
  %4041 = sub i64 %4040, 112
  %4042 = load i64, i64* %RAX
  %4043 = load i64, i64* %PC
  %4044 = add i64 %4043, 4
  store i64 %4044, i64* %PC
  %4045 = inttoptr i64 %4041 to i64*
  store i64 %4042, i64* %4045
  %4046 = load i64, i64* %RBP
  %4047 = sub i64 %4046, 120
  %4048 = bitcast %union.vec128_t* %XMM1 to i8*
  %4049 = load i64, i64* %PC
  %4050 = add i64 %4049, 5
  store i64 %4050, i64* %PC
  %4051 = bitcast i8* %4048 to double*
  %4052 = load double, double* %4051, align 1
  %4053 = inttoptr i64 %4047 to double*
  store double %4052, double* %4053
  %4054 = load i64, i64* %PC
  %4055 = sub i64 %4054, 3834
  %4056 = load i64, i64* %PC
  %4057 = add i64 %4056, 5
  %4058 = load i64, i64* %PC
  %4059 = add i64 %4058, 5
  store i64 %4059, i64* %PC
  %4060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4061 = load i64, i64* %4060, align 8, !tbaa !2428
  %4062 = add i64 %4061, -8
  %4063 = inttoptr i64 %4062 to i64*
  store i64 %4057, i64* %4063
  store i64 %4062, i64* %4060, align 8, !tbaa !2428
  %4064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4055, i64* %4064, align 8, !tbaa !2428
  %4065 = load i64, i64* %PC
  %4066 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4066)
  %4067 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4067)
  %4068 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4068)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %4069 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4069)
  %4070 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4070)
  %4071 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4071)
  %4072 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4072)
  %4073 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4073)
  %4074 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4074)
  %4075 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4075)
  %4076 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4076)
  %4077 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4077)
  %4078 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4078)
  %4079 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4079)
  %4080 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4080)
  %4081 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4081)
  %4082 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4082)
  %4083 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4083)
  %4084 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4084)
  %4085 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4085)
  %4086 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4086)
  %4087 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4087)
  %4088 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4088)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2500
  store i64 %4065, i64* %curr_pc.i2, align 8, !noalias !2500
  store %struct.Memory* %3911, %struct.Memory** %memory.i3, align 8, !noalias !2500
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2500
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2500
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2500
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2500
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2500
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2500
  store %struct.Memory* %3911, %struct.Memory** %MEMORY.i10, align 8, !noalias !2500
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4090 = getelementptr inbounds %struct.GPR, %struct.GPR* %4089, i32 0, i32 33
  %4091 = getelementptr inbounds %struct.Reg, %struct.Reg* %4090, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %4091 to i64*
  store i64 %4065, i64* %PC.i25, align 8, !alias.scope !2504, !noalias !2505
  %4092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4093 = getelementptr inbounds %struct.GPR, %struct.GPR* %4092, i32 0, i32 1
  %4094 = getelementptr inbounds %struct.Reg, %struct.Reg* %4093, i32 0, i32 0
  %4095 = bitcast %union.anon* %4094 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4095, i32 0, i32 1
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 3
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %4099 = bitcast %union.anon* %4098 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4099, i32 0, i32 1
  %4100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4101 = getelementptr inbounds %struct.GPR, %struct.GPR* %4100, i32 0, i32 5
  %4102 = getelementptr inbounds %struct.Reg, %struct.Reg* %4101, i32 0, i32 0
  %4103 = bitcast %union.anon* %4102 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4103, i32 0, i32 1
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4105 = getelementptr inbounds %struct.GPR, %struct.GPR* %4104, i32 0, i32 7
  %4106 = getelementptr inbounds %struct.Reg, %struct.Reg* %4105, i32 0, i32 0
  %4107 = bitcast %union.anon* %4106 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4107, i32 0, i32 1
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 1
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %4111 = bitcast %union.anon* %4110 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4111, i32 0, i32 0
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 3
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %4115 = bitcast %union.anon* %4114 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4115, i32 0, i32 0
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 5
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %4119 = bitcast %union.anon* %4118 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4119, i32 0, i32 0
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 7
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %4123 = bitcast %union.anon* %4122 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4123, i32 0, i32 0
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4125 = getelementptr inbounds %struct.GPR, %struct.GPR* %4124, i32 0, i32 9
  %4126 = getelementptr inbounds %struct.Reg, %struct.Reg* %4125, i32 0, i32 0
  %4127 = bitcast %union.anon* %4126 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4127, i32 0, i32 0
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 11
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %4131 = bitcast %union.anon* %4130 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4131, i32 0, i32 0
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 13
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %4135 = bitcast %union.anon* %4134 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4135, i32 0, i32 0
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4137 = getelementptr inbounds %struct.GPR, %struct.GPR* %4136, i32 0, i32 15
  %4138 = getelementptr inbounds %struct.Reg, %struct.Reg* %4137, i32 0, i32 0
  %4139 = bitcast %union.anon* %4138 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4139, i32 0, i32 0
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 17
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %4143 = bitcast %union.anon* %4142 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4143, i32 0, i32 0
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 19
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %4147 = bitcast %union.anon* %4146 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4147, i32 0, i32 0
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 21
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %4151 = bitcast %union.anon* %4150 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4151, i32 0, i32 0
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4153 = getelementptr inbounds %struct.GPR, %struct.GPR* %4152, i32 0, i32 23
  %4154 = getelementptr inbounds %struct.Reg, %struct.Reg* %4153, i32 0, i32 0
  %4155 = bitcast %union.anon* %4154 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4155, i32 0, i32 0
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 25
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %4159 = bitcast %union.anon* %4158 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4159, i32 0, i32 0
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 27
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %4163 = bitcast %union.anon* %4162 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4163, i32 0, i32 0
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 29
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %4167 = bitcast %union.anon* %4166 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4167, i32 0, i32 0
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 31
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %4171 = bitcast %union.anon* %4170 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4171, i32 0, i32 0
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 1
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %4174 to i16*
  %4175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4176 = getelementptr inbounds %struct.GPR, %struct.GPR* %4175, i32 0, i32 3
  %4177 = getelementptr inbounds %struct.Reg, %struct.Reg* %4176, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %4177 to i16*
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 5
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %4180 to i16*
  %4181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4182 = getelementptr inbounds %struct.GPR, %struct.GPR* %4181, i32 0, i32 7
  %4183 = getelementptr inbounds %struct.Reg, %struct.Reg* %4182, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %4183 to i16*
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 9
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %4186 to i16*
  %4187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4188 = getelementptr inbounds %struct.GPR, %struct.GPR* %4187, i32 0, i32 11
  %4189 = getelementptr inbounds %struct.Reg, %struct.Reg* %4188, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %4189 to i16*
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 13
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %4192 to i16*
  %4193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4194 = getelementptr inbounds %struct.GPR, %struct.GPR* %4193, i32 0, i32 15
  %4195 = getelementptr inbounds %struct.Reg, %struct.Reg* %4194, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %4195 to i16*
  %4196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4197 = getelementptr inbounds %struct.GPR, %struct.GPR* %4196, i32 0, i32 17
  %4198 = getelementptr inbounds %struct.Reg, %struct.Reg* %4197, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %4198 to i16*
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4200 = getelementptr inbounds %struct.GPR, %struct.GPR* %4199, i32 0, i32 19
  %4201 = getelementptr inbounds %struct.Reg, %struct.Reg* %4200, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %4201 to i16*
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 21
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %4204 to i16*
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4206 = getelementptr inbounds %struct.GPR, %struct.GPR* %4205, i32 0, i32 23
  %4207 = getelementptr inbounds %struct.Reg, %struct.Reg* %4206, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %4207 to i16*
  %4208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4209 = getelementptr inbounds %struct.GPR, %struct.GPR* %4208, i32 0, i32 25
  %4210 = getelementptr inbounds %struct.Reg, %struct.Reg* %4209, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %4210 to i16*
  %4211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4212 = getelementptr inbounds %struct.GPR, %struct.GPR* %4211, i32 0, i32 27
  %4213 = getelementptr inbounds %struct.Reg, %struct.Reg* %4212, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %4213 to i16*
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 29
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %4216 to i16*
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4218 = getelementptr inbounds %struct.GPR, %struct.GPR* %4217, i32 0, i32 31
  %4219 = getelementptr inbounds %struct.Reg, %struct.Reg* %4218, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %4219 to i16*
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 33
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %4222 to i16*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 1
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %4225 to i32*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 3
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %4228 to i32*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 5
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %4231 to i32*
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 7
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %4234 to i32*
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 9
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %4237 to i32*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 11
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %4240 to i32*
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 13
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %4243 to i32*
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 15
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %4246 to i32*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 33
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %4249 to i32*
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 17
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %4252 to i32*
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 19
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %4255 to i32*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 21
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %4258 to i32*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 23
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %4261 to i32*
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 25
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %4264 to i32*
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 27
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %4267 to i32*
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 29
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %4270 to i32*
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 31
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %4273 to i32*
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 1
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %4276 to i64*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 3
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %4279 to i64*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 5
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %4282 to i64*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 7
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %4285 to i64*
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 9
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %4288 to i64*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 11
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %4291 to i64*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 13
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %4294 to i64*
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 15
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %4297 to i64*
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 17
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %4300 to i64*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 19
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %4303 to i64*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 21
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %4306 to i64*
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 23
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %4309 to i64*
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 25
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 27
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %4315 to i64*
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 29
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %4318 to i64*
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 31
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 33
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %4324 to i64*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4326 = getelementptr inbounds %struct.Segments, %struct.Segments* %4325, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %4326 to i16*
  %4327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4328 = getelementptr inbounds %struct.Segments, %struct.Segments* %4327, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %4328 to i16*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4330 = getelementptr inbounds %struct.Segments, %struct.Segments* %4329, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %4330 to i16*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4332 = getelementptr inbounds %struct.Segments, %struct.Segments* %4331, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %4332 to i16*
  %4333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4334 = getelementptr inbounds %struct.Segments, %struct.Segments* %4333, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %4334 to i16*
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4336 = getelementptr inbounds %struct.Segments, %struct.Segments* %4335, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %4336 to i16*
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4338 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4337, i32 0, i32 5
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %4339 to i64*
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4341 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4340, i32 0, i32 7
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4344 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4343, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %4344 to %"class.std::bitset"*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4346 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4345, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %4346 to %"class.std::bitset"*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4348 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4347, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %4348 to %"class.std::bitset"*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4350 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4349, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %4350 to %"class.std::bitset"*
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4352 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4351, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %4352 to %"class.std::bitset"*
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4354 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4353, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %4354 to %"class.std::bitset"*
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4356 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4355, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %4356 to %"class.std::bitset"*
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4358 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4357, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %4358 to %"class.std::bitset"*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4359, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %4360 to %"class.std::bitset"*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4362 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4361, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %4362 to %"class.std::bitset"*
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4363, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %4364 to %"class.std::bitset"*
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4365, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %4366 to %"class.std::bitset"*
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4368 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4367, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %4368 to %"class.std::bitset"*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4369, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %4370 to %"class.std::bitset"*
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4371, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %4372 to %"class.std::bitset"*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4374 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4373, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %4374 to %"class.std::bitset"*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4375, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %4376 to %union.vec128_t*
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4378 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4377, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %4378 to %union.vec128_t*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4380 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4379, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %4380 to %union.vec128_t*
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4382 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4381, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %4382 to %union.vec128_t*
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4383, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %4384 to %union.vec128_t*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4386 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4385, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %4386 to %union.vec128_t*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4387, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %4388 to %union.vec128_t*
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4389, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %4390 to %union.vec128_t*
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4391, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %4392 to %union.vec128_t*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4394 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4393, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %4394 to %union.vec128_t*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4395, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %4396 to %union.vec128_t*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4397, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %4398 to %union.vec128_t*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4400 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4399, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %4400 to %union.vec128_t*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4401, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %4402 to %union.vec128_t*
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4403, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %4404 to %union.vec128_t*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4405, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %4406 to %union.vec128_t*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4408 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4407, i32 0, i32 0
  %4409 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4408, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4409, i32 0, i32 1
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4411 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4410, i32 0, i32 0
  %4412 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4411, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4412, i32 0, i32 1
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4414 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4413, i32 0, i32 0
  %4415 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4414, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4415, i32 0, i32 1
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4417 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4416, i32 0, i32 0
  %4418 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4417, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4418, i32 0, i32 1
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4420 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4419, i32 0, i32 0
  %4421 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4420, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4421, i32 0, i32 1
  %4422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4423 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4422, i32 0, i32 0
  %4424 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4423, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4424, i32 0, i32 1
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4426 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4425, i32 0, i32 0
  %4427 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4426, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4427, i32 0, i32 1
  %4428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4429 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4428, i32 0, i32 0
  %4430 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4429, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4430, i32 0, i32 1
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4432 = getelementptr inbounds %struct.MMX, %struct.MMX* %4431, i32 0, i32 0
  %4433 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4432, i64 0, i64 0
  %4434 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4433, i32 0, i32 1
  %4435 = bitcast %union.vec64_t* %4434 to %struct.uint64v1_t*
  %4436 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4435, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %4436, i64 0, i64 0
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4438 = getelementptr inbounds %struct.MMX, %struct.MMX* %4437, i32 0, i32 0
  %4439 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4438, i64 0, i64 1
  %4440 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4439, i32 0, i32 1
  %4441 = bitcast %union.vec64_t* %4440 to %struct.uint64v1_t*
  %4442 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4441, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %4442, i64 0, i64 0
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4444 = getelementptr inbounds %struct.MMX, %struct.MMX* %4443, i32 0, i32 0
  %4445 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4444, i64 0, i64 2
  %4446 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4445, i32 0, i32 1
  %4447 = bitcast %union.vec64_t* %4446 to %struct.uint64v1_t*
  %4448 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4447, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %4448, i64 0, i64 0
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4450 = getelementptr inbounds %struct.MMX, %struct.MMX* %4449, i32 0, i32 0
  %4451 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4450, i64 0, i64 3
  %4452 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4451, i32 0, i32 1
  %4453 = bitcast %union.vec64_t* %4452 to %struct.uint64v1_t*
  %4454 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4453, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %4454, i64 0, i64 0
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4456 = getelementptr inbounds %struct.MMX, %struct.MMX* %4455, i32 0, i32 0
  %4457 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4456, i64 0, i64 4
  %4458 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4457, i32 0, i32 1
  %4459 = bitcast %union.vec64_t* %4458 to %struct.uint64v1_t*
  %4460 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4459, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %4460, i64 0, i64 0
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4462 = getelementptr inbounds %struct.MMX, %struct.MMX* %4461, i32 0, i32 0
  %4463 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4462, i64 0, i64 5
  %4464 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4463, i32 0, i32 1
  %4465 = bitcast %union.vec64_t* %4464 to %struct.uint64v1_t*
  %4466 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4465, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %4466, i64 0, i64 0
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4468 = getelementptr inbounds %struct.MMX, %struct.MMX* %4467, i32 0, i32 0
  %4469 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4468, i64 0, i64 6
  %4470 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4469, i32 0, i32 1
  %4471 = bitcast %union.vec64_t* %4470 to %struct.uint64v1_t*
  %4472 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4471, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %4472, i64 0, i64 0
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4474 = getelementptr inbounds %struct.MMX, %struct.MMX* %4473, i32 0, i32 0
  %4475 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4474, i64 0, i64 7
  %4476 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4475, i32 0, i32 1
  %4477 = bitcast %union.vec64_t* %4476 to %struct.uint64v1_t*
  %4478 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4477, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %4478, i64 0, i64 0
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4479, i32 0, i32 5
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4480, i32 0, i32 1
  %4481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4481, i32 0, i32 11
  %4482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4482, i32 0, i32 13
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4483, i32 0, i32 3
  %4484 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4484, i32 0, i32 9
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4485, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2500
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2500
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2500
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2500
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2500
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2500
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2500
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2500
  %4486 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %4487 = load double, double* %4486, !alias.scope !2504, !noalias !2505
  %4488 = load i64, i64* %RSP.i86, !alias.scope !2504, !noalias !2505
  %4489 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2500
  %4490 = inttoptr i64 %4488 to i64*
  %4491 = load i64, i64* %4490
  store i64 %4491, i64* %PC.i25, !alias.scope !2504, !noalias !2505
  %4492 = add i64 %4488, 8
  store i64 %4492, i64* %RSP.i86, !alias.scope !2504, !noalias !2505
  %4493 = call double @cos(double %4487)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2504, !noalias !2505
  %4494 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %4493, double* %4494, !alias.scope !2504, !noalias !2505
  %4495 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2500
  %4496 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4496)
  %4497 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4497)
  %4498 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4498)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %4499 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4499)
  %4500 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4500)
  %4501 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4501)
  %4502 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4502)
  %4503 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4503)
  %4504 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4504)
  %4505 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4505)
  %4506 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4506)
  %4507 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4507)
  %4508 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4508)
  %4509 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4509)
  %4510 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4510)
  %4511 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4511)
  %4512 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4512)
  %4513 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4513)
  %4514 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4514)
  %4515 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4515)
  %4516 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4516)
  %4517 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4517)
  %4518 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4518)
  %4519 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4520 = load i64, i64* %RBP
  %4521 = sub i64 %4520, 120
  %4522 = load i64, i64* %PC
  %4523 = add i64 %4522, 5
  store i64 %4523, i64* %PC
  %4524 = inttoptr i64 %4521 to double*
  %4525 = load double, double* %4524
  %4526 = bitcast i8* %4519 to double*
  store double %4525, double* %4526, align 1, !tbaa !2451
  %4527 = getelementptr inbounds i8, i8* %4519, i64 8
  %4528 = bitcast i8* %4527 to double*
  store double 0.000000e+00, double* %4528, align 1, !tbaa !2451
  %4529 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4530 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4531 = bitcast %union.vec128_t* %XMM0 to i8*
  %4532 = load i64, i64* %PC
  %4533 = add i64 %4532, 4
  store i64 %4533, i64* %PC
  %4534 = bitcast i8* %4530 to double*
  %4535 = load double, double* %4534, align 1
  %4536 = getelementptr inbounds i8, i8* %4530, i64 8
  %4537 = bitcast i8* %4536 to i64*
  %4538 = load i64, i64* %4537, align 1
  %4539 = bitcast i8* %4531 to double*
  %4540 = load double, double* %4539, align 1
  %4541 = fmul double %4535, %4540
  %4542 = bitcast i8* %4529 to double*
  store double %4541, double* %4542, align 1, !tbaa !2451
  %4543 = getelementptr inbounds i8, i8* %4529, i64 8
  %4544 = bitcast i8* %4543 to i64*
  store i64 %4538, i64* %4544, align 1, !tbaa !2451
  %4545 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4546 = load i64, i64* %PC
  %4547 = add i64 %4546, 9
  store i64 %4547, i64* %PC
  %4548 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %4549 = bitcast i8* %4545 to double*
  store double %4548, double* %4549, align 1, !tbaa !2451
  %4550 = getelementptr inbounds i8, i8* %4545, i64 8
  %4551 = bitcast i8* %4550 to double*
  store double 0.000000e+00, double* %4551, align 1, !tbaa !2451
  %4552 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4553 = load i64, i64* %PC
  %4554 = add i64 %4553, 9
  store i64 %4554, i64* %PC
  %4555 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4556 = bitcast i8* %4552 to double*
  store double %4555, double* %4556, align 1, !tbaa !2451
  %4557 = getelementptr inbounds i8, i8* %4552, i64 8
  %4558 = bitcast i8* %4557 to double*
  store double 0.000000e+00, double* %4558, align 1, !tbaa !2451
  %4559 = load i64, i64* %RBP
  %4560 = sub i64 %4559, 128
  %4561 = bitcast %union.vec128_t* %XMM0 to i8*
  %4562 = load i64, i64* %PC
  %4563 = add i64 %4562, 5
  store i64 %4563, i64* %PC
  %4564 = bitcast i8* %4561 to double*
  %4565 = load double, double* %4564, align 1
  %4566 = inttoptr i64 %4560 to double*
  store double %4565, double* %4566
  %4567 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4568 = bitcast %union.vec128_t* %XMM2 to i8*
  %4569 = load i64, i64* %PC
  %4570 = add i64 %4569, 3
  store i64 %4570, i64* %PC
  %4571 = bitcast i8* %4568 to <2 x i32>*
  %4572 = load <2 x i32>, <2 x i32>* %4571, align 1
  %4573 = getelementptr inbounds i8, i8* %4568, i64 8
  %4574 = bitcast i8* %4573 to <2 x i32>*
  %4575 = load <2 x i32>, <2 x i32>* %4574, align 1
  %4576 = extractelement <2 x i32> %4572, i32 0
  %4577 = bitcast i8* %4567 to i32*
  store i32 %4576, i32* %4577, align 1, !tbaa !2454
  %4578 = extractelement <2 x i32> %4572, i32 1
  %4579 = getelementptr inbounds i8, i8* %4567, i64 4
  %4580 = bitcast i8* %4579 to i32*
  store i32 %4578, i32* %4580, align 1, !tbaa !2454
  %4581 = extractelement <2 x i32> %4575, i32 0
  %4582 = getelementptr inbounds i8, i8* %4567, i64 8
  %4583 = bitcast i8* %4582 to i32*
  store i32 %4581, i32* %4583, align 1, !tbaa !2454
  %4584 = extractelement <2 x i32> %4575, i32 1
  %4585 = getelementptr inbounds i8, i8* %4567, i64 12
  %4586 = bitcast i8* %4585 to i32*
  store i32 %4584, i32* %4586, align 1, !tbaa !2454
  %4587 = load i64, i64* %RBP
  %4588 = sub i64 %4587, 136
  %4589 = bitcast %union.vec128_t* %XMM1 to i8*
  %4590 = load i64, i64* %PC
  %4591 = add i64 %4590, 8
  store i64 %4591, i64* %PC
  %4592 = bitcast i8* %4589 to double*
  %4593 = load double, double* %4592, align 1
  %4594 = inttoptr i64 %4588 to double*
  store double %4593, double* %4594
  %4595 = load i64, i64* %PC
  %4596 = sub i64 %4595, 3882
  %4597 = load i64, i64* %PC
  %4598 = add i64 %4597, 5
  %4599 = load i64, i64* %PC
  %4600 = add i64 %4599, 5
  store i64 %4600, i64* %PC
  %4601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4602 = load i64, i64* %4601, align 8, !tbaa !2428
  %4603 = add i64 %4602, -8
  %4604 = inttoptr i64 %4603 to i64*
  store i64 %4598, i64* %4604
  store i64 %4603, i64* %4601, align 8, !tbaa !2428
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4596, i64* %4605, align 8, !tbaa !2428
  %4606 = load i64, i64* %PC
  %4607 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4607)
  %4608 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4608)
  %4609 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4609)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %4610 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4610)
  %4611 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4611)
  %4612 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4612)
  %4613 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4613)
  %4614 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4614)
  %4615 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4615)
  %4616 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4616)
  %4617 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4617)
  %4618 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4618)
  %4619 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4619)
  %4620 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4620)
  %4621 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4621)
  %4622 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4622)
  %4623 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4623)
  %4624 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4624)
  %4625 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4625)
  %4626 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4626)
  %4627 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4627)
  %4628 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4628)
  %4629 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4629)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2506
  store i64 %4606, i64* %curr_pc.i, align 8, !noalias !2506
  store %struct.Memory* %4495, %struct.Memory** %memory.i, align 8, !noalias !2506
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2506
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2506
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2506
  store %struct.Memory* %4495, %struct.Memory** %MEMORY.i, align 8, !noalias !2506
  %4630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4631 = getelementptr inbounds %struct.GPR, %struct.GPR* %4630, i32 0, i32 33
  %4632 = getelementptr inbounds %struct.Reg, %struct.Reg* %4631, i32 0, i32 0
  %PC.i = bitcast %union.anon* %4632 to i64*
  store i64 %4606, i64* %PC.i, align 8, !alias.scope !2510, !noalias !2511
  %4633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4634 = getelementptr inbounds %struct.GPR, %struct.GPR* %4633, i32 0, i32 1
  %4635 = getelementptr inbounds %struct.Reg, %struct.Reg* %4634, i32 0, i32 0
  %4636 = bitcast %union.anon* %4635 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4636, i32 0, i32 1
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4638 = getelementptr inbounds %struct.GPR, %struct.GPR* %4637, i32 0, i32 3
  %4639 = getelementptr inbounds %struct.Reg, %struct.Reg* %4638, i32 0, i32 0
  %4640 = bitcast %union.anon* %4639 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4640, i32 0, i32 1
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 5
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %4644 = bitcast %union.anon* %4643 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4644, i32 0, i32 1
  %4645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4646 = getelementptr inbounds %struct.GPR, %struct.GPR* %4645, i32 0, i32 7
  %4647 = getelementptr inbounds %struct.Reg, %struct.Reg* %4646, i32 0, i32 0
  %4648 = bitcast %union.anon* %4647 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4648, i32 0, i32 1
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 1
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %4652 = bitcast %union.anon* %4651 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4652, i32 0, i32 0
  %4653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4654 = getelementptr inbounds %struct.GPR, %struct.GPR* %4653, i32 0, i32 3
  %4655 = getelementptr inbounds %struct.Reg, %struct.Reg* %4654, i32 0, i32 0
  %4656 = bitcast %union.anon* %4655 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4656, i32 0, i32 0
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4658 = getelementptr inbounds %struct.GPR, %struct.GPR* %4657, i32 0, i32 5
  %4659 = getelementptr inbounds %struct.Reg, %struct.Reg* %4658, i32 0, i32 0
  %4660 = bitcast %union.anon* %4659 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4660, i32 0, i32 0
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4662 = getelementptr inbounds %struct.GPR, %struct.GPR* %4661, i32 0, i32 7
  %4663 = getelementptr inbounds %struct.Reg, %struct.Reg* %4662, i32 0, i32 0
  %4664 = bitcast %union.anon* %4663 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4664, i32 0, i32 0
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4666 = getelementptr inbounds %struct.GPR, %struct.GPR* %4665, i32 0, i32 9
  %4667 = getelementptr inbounds %struct.Reg, %struct.Reg* %4666, i32 0, i32 0
  %4668 = bitcast %union.anon* %4667 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4668, i32 0, i32 0
  %4669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4670 = getelementptr inbounds %struct.GPR, %struct.GPR* %4669, i32 0, i32 11
  %4671 = getelementptr inbounds %struct.Reg, %struct.Reg* %4670, i32 0, i32 0
  %4672 = bitcast %union.anon* %4671 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4672, i32 0, i32 0
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4674 = getelementptr inbounds %struct.GPR, %struct.GPR* %4673, i32 0, i32 13
  %4675 = getelementptr inbounds %struct.Reg, %struct.Reg* %4674, i32 0, i32 0
  %4676 = bitcast %union.anon* %4675 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4676, i32 0, i32 0
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4678 = getelementptr inbounds %struct.GPR, %struct.GPR* %4677, i32 0, i32 15
  %4679 = getelementptr inbounds %struct.Reg, %struct.Reg* %4678, i32 0, i32 0
  %4680 = bitcast %union.anon* %4679 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4680, i32 0, i32 0
  %4681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4682 = getelementptr inbounds %struct.GPR, %struct.GPR* %4681, i32 0, i32 17
  %4683 = getelementptr inbounds %struct.Reg, %struct.Reg* %4682, i32 0, i32 0
  %4684 = bitcast %union.anon* %4683 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4684, i32 0, i32 0
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4686 = getelementptr inbounds %struct.GPR, %struct.GPR* %4685, i32 0, i32 19
  %4687 = getelementptr inbounds %struct.Reg, %struct.Reg* %4686, i32 0, i32 0
  %4688 = bitcast %union.anon* %4687 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4688, i32 0, i32 0
  %4689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4690 = getelementptr inbounds %struct.GPR, %struct.GPR* %4689, i32 0, i32 21
  %4691 = getelementptr inbounds %struct.Reg, %struct.Reg* %4690, i32 0, i32 0
  %4692 = bitcast %union.anon* %4691 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4692, i32 0, i32 0
  %4693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4694 = getelementptr inbounds %struct.GPR, %struct.GPR* %4693, i32 0, i32 23
  %4695 = getelementptr inbounds %struct.Reg, %struct.Reg* %4694, i32 0, i32 0
  %4696 = bitcast %union.anon* %4695 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4696, i32 0, i32 0
  %4697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4698 = getelementptr inbounds %struct.GPR, %struct.GPR* %4697, i32 0, i32 25
  %4699 = getelementptr inbounds %struct.Reg, %struct.Reg* %4698, i32 0, i32 0
  %4700 = bitcast %union.anon* %4699 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4700, i32 0, i32 0
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4702 = getelementptr inbounds %struct.GPR, %struct.GPR* %4701, i32 0, i32 27
  %4703 = getelementptr inbounds %struct.Reg, %struct.Reg* %4702, i32 0, i32 0
  %4704 = bitcast %union.anon* %4703 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4704, i32 0, i32 0
  %4705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4706 = getelementptr inbounds %struct.GPR, %struct.GPR* %4705, i32 0, i32 29
  %4707 = getelementptr inbounds %struct.Reg, %struct.Reg* %4706, i32 0, i32 0
  %4708 = bitcast %union.anon* %4707 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4708, i32 0, i32 0
  %4709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4710 = getelementptr inbounds %struct.GPR, %struct.GPR* %4709, i32 0, i32 31
  %4711 = getelementptr inbounds %struct.Reg, %struct.Reg* %4710, i32 0, i32 0
  %4712 = bitcast %union.anon* %4711 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4712, i32 0, i32 0
  %4713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4714 = getelementptr inbounds %struct.GPR, %struct.GPR* %4713, i32 0, i32 1
  %4715 = getelementptr inbounds %struct.Reg, %struct.Reg* %4714, i32 0, i32 0
  %AX.i = bitcast %union.anon* %4715 to i16*
  %4716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4717 = getelementptr inbounds %struct.GPR, %struct.GPR* %4716, i32 0, i32 3
  %4718 = getelementptr inbounds %struct.Reg, %struct.Reg* %4717, i32 0, i32 0
  %BX.i = bitcast %union.anon* %4718 to i16*
  %4719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4720 = getelementptr inbounds %struct.GPR, %struct.GPR* %4719, i32 0, i32 5
  %4721 = getelementptr inbounds %struct.Reg, %struct.Reg* %4720, i32 0, i32 0
  %CX.i = bitcast %union.anon* %4721 to i16*
  %4722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4723 = getelementptr inbounds %struct.GPR, %struct.GPR* %4722, i32 0, i32 7
  %4724 = getelementptr inbounds %struct.Reg, %struct.Reg* %4723, i32 0, i32 0
  %DX.i = bitcast %union.anon* %4724 to i16*
  %4725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4726 = getelementptr inbounds %struct.GPR, %struct.GPR* %4725, i32 0, i32 9
  %4727 = getelementptr inbounds %struct.Reg, %struct.Reg* %4726, i32 0, i32 0
  %SI.i = bitcast %union.anon* %4727 to i16*
  %4728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4729 = getelementptr inbounds %struct.GPR, %struct.GPR* %4728, i32 0, i32 11
  %4730 = getelementptr inbounds %struct.Reg, %struct.Reg* %4729, i32 0, i32 0
  %DI.i = bitcast %union.anon* %4730 to i16*
  %4731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4732 = getelementptr inbounds %struct.GPR, %struct.GPR* %4731, i32 0, i32 13
  %4733 = getelementptr inbounds %struct.Reg, %struct.Reg* %4732, i32 0, i32 0
  %SP.i = bitcast %union.anon* %4733 to i16*
  %4734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4735 = getelementptr inbounds %struct.GPR, %struct.GPR* %4734, i32 0, i32 15
  %4736 = getelementptr inbounds %struct.Reg, %struct.Reg* %4735, i32 0, i32 0
  %BP.i = bitcast %union.anon* %4736 to i16*
  %4737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4738 = getelementptr inbounds %struct.GPR, %struct.GPR* %4737, i32 0, i32 17
  %4739 = getelementptr inbounds %struct.Reg, %struct.Reg* %4738, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %4739 to i16*
  %4740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4741 = getelementptr inbounds %struct.GPR, %struct.GPR* %4740, i32 0, i32 19
  %4742 = getelementptr inbounds %struct.Reg, %struct.Reg* %4741, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %4742 to i16*
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4744 = getelementptr inbounds %struct.GPR, %struct.GPR* %4743, i32 0, i32 21
  %4745 = getelementptr inbounds %struct.Reg, %struct.Reg* %4744, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %4745 to i16*
  %4746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4747 = getelementptr inbounds %struct.GPR, %struct.GPR* %4746, i32 0, i32 23
  %4748 = getelementptr inbounds %struct.Reg, %struct.Reg* %4747, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %4748 to i16*
  %4749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4750 = getelementptr inbounds %struct.GPR, %struct.GPR* %4749, i32 0, i32 25
  %4751 = getelementptr inbounds %struct.Reg, %struct.Reg* %4750, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %4751 to i16*
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 27
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %4754 to i16*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 29
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %4757 to i16*
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4759 = getelementptr inbounds %struct.GPR, %struct.GPR* %4758, i32 0, i32 31
  %4760 = getelementptr inbounds %struct.Reg, %struct.Reg* %4759, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %4760 to i16*
  %4761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4762 = getelementptr inbounds %struct.GPR, %struct.GPR* %4761, i32 0, i32 33
  %4763 = getelementptr inbounds %struct.Reg, %struct.Reg* %4762, i32 0, i32 0
  %IP.i = bitcast %union.anon* %4763 to i16*
  %4764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4765 = getelementptr inbounds %struct.GPR, %struct.GPR* %4764, i32 0, i32 1
  %4766 = getelementptr inbounds %struct.Reg, %struct.Reg* %4765, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %4766 to i32*
  %4767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4768 = getelementptr inbounds %struct.GPR, %struct.GPR* %4767, i32 0, i32 3
  %4769 = getelementptr inbounds %struct.Reg, %struct.Reg* %4768, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %4769 to i32*
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4771 = getelementptr inbounds %struct.GPR, %struct.GPR* %4770, i32 0, i32 5
  %4772 = getelementptr inbounds %struct.Reg, %struct.Reg* %4771, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %4772 to i32*
  %4773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4774 = getelementptr inbounds %struct.GPR, %struct.GPR* %4773, i32 0, i32 7
  %4775 = getelementptr inbounds %struct.Reg, %struct.Reg* %4774, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %4775 to i32*
  %4776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4777 = getelementptr inbounds %struct.GPR, %struct.GPR* %4776, i32 0, i32 9
  %4778 = getelementptr inbounds %struct.Reg, %struct.Reg* %4777, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %4778 to i32*
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4780 = getelementptr inbounds %struct.GPR, %struct.GPR* %4779, i32 0, i32 11
  %4781 = getelementptr inbounds %struct.Reg, %struct.Reg* %4780, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %4781 to i32*
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4783 = getelementptr inbounds %struct.GPR, %struct.GPR* %4782, i32 0, i32 13
  %4784 = getelementptr inbounds %struct.Reg, %struct.Reg* %4783, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %4784 to i32*
  %4785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4786 = getelementptr inbounds %struct.GPR, %struct.GPR* %4785, i32 0, i32 15
  %4787 = getelementptr inbounds %struct.Reg, %struct.Reg* %4786, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %4787 to i32*
  %4788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4789 = getelementptr inbounds %struct.GPR, %struct.GPR* %4788, i32 0, i32 33
  %4790 = getelementptr inbounds %struct.Reg, %struct.Reg* %4789, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %4790 to i32*
  %4791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4792 = getelementptr inbounds %struct.GPR, %struct.GPR* %4791, i32 0, i32 17
  %4793 = getelementptr inbounds %struct.Reg, %struct.Reg* %4792, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %4793 to i32*
  %4794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4795 = getelementptr inbounds %struct.GPR, %struct.GPR* %4794, i32 0, i32 19
  %4796 = getelementptr inbounds %struct.Reg, %struct.Reg* %4795, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %4796 to i32*
  %4797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4798 = getelementptr inbounds %struct.GPR, %struct.GPR* %4797, i32 0, i32 21
  %4799 = getelementptr inbounds %struct.Reg, %struct.Reg* %4798, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %4799 to i32*
  %4800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4801 = getelementptr inbounds %struct.GPR, %struct.GPR* %4800, i32 0, i32 23
  %4802 = getelementptr inbounds %struct.Reg, %struct.Reg* %4801, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %4802 to i32*
  %4803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4804 = getelementptr inbounds %struct.GPR, %struct.GPR* %4803, i32 0, i32 25
  %4805 = getelementptr inbounds %struct.Reg, %struct.Reg* %4804, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %4805 to i32*
  %4806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4807 = getelementptr inbounds %struct.GPR, %struct.GPR* %4806, i32 0, i32 27
  %4808 = getelementptr inbounds %struct.Reg, %struct.Reg* %4807, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %4808 to i32*
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4810 = getelementptr inbounds %struct.GPR, %struct.GPR* %4809, i32 0, i32 29
  %4811 = getelementptr inbounds %struct.Reg, %struct.Reg* %4810, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %4811 to i32*
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4813 = getelementptr inbounds %struct.GPR, %struct.GPR* %4812, i32 0, i32 31
  %4814 = getelementptr inbounds %struct.Reg, %struct.Reg* %4813, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %4814 to i32*
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4816 = getelementptr inbounds %struct.GPR, %struct.GPR* %4815, i32 0, i32 1
  %4817 = getelementptr inbounds %struct.Reg, %struct.Reg* %4816, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %4817 to i64*
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4819 = getelementptr inbounds %struct.GPR, %struct.GPR* %4818, i32 0, i32 3
  %4820 = getelementptr inbounds %struct.Reg, %struct.Reg* %4819, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %4820 to i64*
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4822 = getelementptr inbounds %struct.GPR, %struct.GPR* %4821, i32 0, i32 5
  %4823 = getelementptr inbounds %struct.Reg, %struct.Reg* %4822, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %4823 to i64*
  %4824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4825 = getelementptr inbounds %struct.GPR, %struct.GPR* %4824, i32 0, i32 7
  %4826 = getelementptr inbounds %struct.Reg, %struct.Reg* %4825, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %4826 to i64*
  %4827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4828 = getelementptr inbounds %struct.GPR, %struct.GPR* %4827, i32 0, i32 9
  %4829 = getelementptr inbounds %struct.Reg, %struct.Reg* %4828, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %4829 to i64*
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 11
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %4832 to i64*
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 13
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %4835 to i64*
  %4836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4837 = getelementptr inbounds %struct.GPR, %struct.GPR* %4836, i32 0, i32 15
  %4838 = getelementptr inbounds %struct.Reg, %struct.Reg* %4837, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %4838 to i64*
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4840 = getelementptr inbounds %struct.GPR, %struct.GPR* %4839, i32 0, i32 17
  %4841 = getelementptr inbounds %struct.Reg, %struct.Reg* %4840, i32 0, i32 0
  %R8.i = bitcast %union.anon* %4841 to i64*
  %4842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4843 = getelementptr inbounds %struct.GPR, %struct.GPR* %4842, i32 0, i32 19
  %4844 = getelementptr inbounds %struct.Reg, %struct.Reg* %4843, i32 0, i32 0
  %R9.i = bitcast %union.anon* %4844 to i64*
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4846 = getelementptr inbounds %struct.GPR, %struct.GPR* %4845, i32 0, i32 21
  %4847 = getelementptr inbounds %struct.Reg, %struct.Reg* %4846, i32 0, i32 0
  %R10.i = bitcast %union.anon* %4847 to i64*
  %4848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4849 = getelementptr inbounds %struct.GPR, %struct.GPR* %4848, i32 0, i32 23
  %4850 = getelementptr inbounds %struct.Reg, %struct.Reg* %4849, i32 0, i32 0
  %R11.i = bitcast %union.anon* %4850 to i64*
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4852 = getelementptr inbounds %struct.GPR, %struct.GPR* %4851, i32 0, i32 25
  %4853 = getelementptr inbounds %struct.Reg, %struct.Reg* %4852, i32 0, i32 0
  %R12.i = bitcast %union.anon* %4853 to i64*
  %4854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4855 = getelementptr inbounds %struct.GPR, %struct.GPR* %4854, i32 0, i32 27
  %4856 = getelementptr inbounds %struct.Reg, %struct.Reg* %4855, i32 0, i32 0
  %R13.i = bitcast %union.anon* %4856 to i64*
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4858 = getelementptr inbounds %struct.GPR, %struct.GPR* %4857, i32 0, i32 29
  %4859 = getelementptr inbounds %struct.Reg, %struct.Reg* %4858, i32 0, i32 0
  %R14.i = bitcast %union.anon* %4859 to i64*
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4861 = getelementptr inbounds %struct.GPR, %struct.GPR* %4860, i32 0, i32 31
  %4862 = getelementptr inbounds %struct.Reg, %struct.Reg* %4861, i32 0, i32 0
  %R15.i = bitcast %union.anon* %4862 to i64*
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4864 = getelementptr inbounds %struct.GPR, %struct.GPR* %4863, i32 0, i32 33
  %4865 = getelementptr inbounds %struct.Reg, %struct.Reg* %4864, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %4865 to i64*
  %4866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4867 = getelementptr inbounds %struct.Segments, %struct.Segments* %4866, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %4867 to i16*
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4869 = getelementptr inbounds %struct.Segments, %struct.Segments* %4868, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %4869 to i16*
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4871 = getelementptr inbounds %struct.Segments, %struct.Segments* %4870, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %4871 to i16*
  %4872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4873 = getelementptr inbounds %struct.Segments, %struct.Segments* %4872, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %4873 to i16*
  %4874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4875 = getelementptr inbounds %struct.Segments, %struct.Segments* %4874, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %4875 to i16*
  %4876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4877 = getelementptr inbounds %struct.Segments, %struct.Segments* %4876, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %4877 to i16*
  %4878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4879 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4878, i32 0, i32 5
  %4880 = getelementptr inbounds %struct.Reg, %struct.Reg* %4879, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %4880 to i64*
  %4881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4882 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4881, i32 0, i32 7
  %4883 = getelementptr inbounds %struct.Reg, %struct.Reg* %4882, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %4883 to i64*
  %4884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4885 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4884, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %4885 to %"class.std::bitset"*
  %4886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4887 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4886, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %4887 to %"class.std::bitset"*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4888, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %4889 to %"class.std::bitset"*
  %4890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4891 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4890, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %4891 to %"class.std::bitset"*
  %4892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4893 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4892, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %4893 to %"class.std::bitset"*
  %4894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4894, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %4895 to %"class.std::bitset"*
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4897 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4896, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %4897 to %"class.std::bitset"*
  %4898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4899 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4898, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %4899 to %"class.std::bitset"*
  %4900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4900, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %4901 to %"class.std::bitset"*
  %4902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4902, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %4903 to %"class.std::bitset"*
  %4904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4904, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %4905 to %"class.std::bitset"*
  %4906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4906, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %4907 to %"class.std::bitset"*
  %4908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4909 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4908, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %4909 to %"class.std::bitset"*
  %4910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4911 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4910, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %4911 to %"class.std::bitset"*
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4913 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4912, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %4913 to %"class.std::bitset"*
  %4914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4915 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4914, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %4915 to %"class.std::bitset"*
  %4916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4917 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4916, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %4917 to %union.vec128_t*
  %4918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4919 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4918, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %4919 to %union.vec128_t*
  %4920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4921 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4920, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %4921 to %union.vec128_t*
  %4922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4923 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4922, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %4923 to %union.vec128_t*
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4925 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4924, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %4925 to %union.vec128_t*
  %4926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4927 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4926, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %4927 to %union.vec128_t*
  %4928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4929 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4928, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %4929 to %union.vec128_t*
  %4930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4931 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4930, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %4931 to %union.vec128_t*
  %4932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4932, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %4933 to %union.vec128_t*
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4934, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %4935 to %union.vec128_t*
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4937 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4936, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %4937 to %union.vec128_t*
  %4938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4939 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4938, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %4939 to %union.vec128_t*
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4940, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %4941 to %union.vec128_t*
  %4942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4942, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %4943 to %union.vec128_t*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4944, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %4945 to %union.vec128_t*
  %4946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4946, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %4947 to %union.vec128_t*
  %4948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4949 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4948, i32 0, i32 0
  %4950 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4949, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4950, i32 0, i32 1
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4952 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4951, i32 0, i32 0
  %4953 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4952, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4953, i32 0, i32 1
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4955 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4954, i32 0, i32 0
  %4956 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4955, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4956, i32 0, i32 1
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4958 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4957, i32 0, i32 0
  %4959 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4958, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4959, i32 0, i32 1
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4961 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4960, i32 0, i32 0
  %4962 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4961, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4962, i32 0, i32 1
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4964 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4963, i32 0, i32 0
  %4965 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4964, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4965, i32 0, i32 1
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4967 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4966, i32 0, i32 0
  %4968 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4967, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4968, i32 0, i32 1
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4970 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4969, i32 0, i32 0
  %4971 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4970, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4971, i32 0, i32 1
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4973 = getelementptr inbounds %struct.MMX, %struct.MMX* %4972, i32 0, i32 0
  %4974 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4973, i64 0, i64 0
  %4975 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4974, i32 0, i32 1
  %4976 = bitcast %union.vec64_t* %4975 to %struct.uint64v1_t*
  %4977 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4976, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %4977, i64 0, i64 0
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4979 = getelementptr inbounds %struct.MMX, %struct.MMX* %4978, i32 0, i32 0
  %4980 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4979, i64 0, i64 1
  %4981 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4980, i32 0, i32 1
  %4982 = bitcast %union.vec64_t* %4981 to %struct.uint64v1_t*
  %4983 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4982, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %4983, i64 0, i64 0
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4985 = getelementptr inbounds %struct.MMX, %struct.MMX* %4984, i32 0, i32 0
  %4986 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4985, i64 0, i64 2
  %4987 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4986, i32 0, i32 1
  %4988 = bitcast %union.vec64_t* %4987 to %struct.uint64v1_t*
  %4989 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4988, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %4989, i64 0, i64 0
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4991 = getelementptr inbounds %struct.MMX, %struct.MMX* %4990, i32 0, i32 0
  %4992 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4991, i64 0, i64 3
  %4993 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4992, i32 0, i32 1
  %4994 = bitcast %union.vec64_t* %4993 to %struct.uint64v1_t*
  %4995 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4994, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %4995, i64 0, i64 0
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4997 = getelementptr inbounds %struct.MMX, %struct.MMX* %4996, i32 0, i32 0
  %4998 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4997, i64 0, i64 4
  %4999 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4998, i32 0, i32 1
  %5000 = bitcast %union.vec64_t* %4999 to %struct.uint64v1_t*
  %5001 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5000, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %5001, i64 0, i64 0
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5003 = getelementptr inbounds %struct.MMX, %struct.MMX* %5002, i32 0, i32 0
  %5004 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5003, i64 0, i64 5
  %5005 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5004, i32 0, i32 1
  %5006 = bitcast %union.vec64_t* %5005 to %struct.uint64v1_t*
  %5007 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5006, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %5007, i64 0, i64 0
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5009 = getelementptr inbounds %struct.MMX, %struct.MMX* %5008, i32 0, i32 0
  %5010 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5009, i64 0, i64 6
  %5011 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5010, i32 0, i32 1
  %5012 = bitcast %union.vec64_t* %5011 to %struct.uint64v1_t*
  %5013 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5012, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %5013, i64 0, i64 0
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5015 = getelementptr inbounds %struct.MMX, %struct.MMX* %5014, i32 0, i32 0
  %5016 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5015, i64 0, i64 7
  %5017 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5016, i32 0, i32 1
  %5018 = bitcast %union.vec64_t* %5017 to %struct.uint64v1_t*
  %5019 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5018, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %5019, i64 0, i64 0
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5020, i32 0, i32 5
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5021, i32 0, i32 1
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5022, i32 0, i32 11
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5023, i32 0, i32 13
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5024, i32 0, i32 3
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5025, i32 0, i32 9
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5026, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2506
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2506
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2506
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2506
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2506
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2506
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2506
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2506
  %5027 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %5028 = load double, double* %5027, !alias.scope !2510, !noalias !2511
  %5029 = load i64, i64* %RSP.i, !alias.scope !2510, !noalias !2511
  %5030 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2506
  %5031 = inttoptr i64 %5029 to i64*
  %5032 = load i64, i64* %5031
  store i64 %5032, i64* %PC.i, !alias.scope !2510, !noalias !2511
  %5033 = add i64 %5029, 8
  store i64 %5033, i64* %RSP.i, !alias.scope !2510, !noalias !2511
  %5034 = call double @cos(double %5028)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2510, !noalias !2511
  %5035 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %5034, double* %5035, !alias.scope !2510, !noalias !2511
  %5036 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2506
  %5037 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5037)
  %5038 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5038)
  %5039 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5039)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %5040 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5040)
  %5041 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5041)
  %5042 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5042)
  %5043 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5043)
  %5044 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5044)
  %5045 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5045)
  %5046 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5046)
  %5047 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5047)
  %5048 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5048)
  %5049 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5049)
  %5050 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5050)
  %5051 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5051)
  %5052 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5052)
  %5053 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5053)
  %5054 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5054)
  %5055 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5055)
  %5056 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5056)
  %5057 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5057)
  %5058 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5058)
  %5059 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5059)
  %5060 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5061 = load i64, i64* %RBP
  %5062 = sub i64 %5061, 128
  %5063 = load i64, i64* %PC
  %5064 = add i64 %5063, 5
  store i64 %5064, i64* %PC
  %5065 = inttoptr i64 %5062 to double*
  %5066 = load double, double* %5065
  %5067 = bitcast i8* %5060 to double*
  store double %5066, double* %5067, align 1, !tbaa !2451
  %5068 = getelementptr inbounds i8, i8* %5060, i64 8
  %5069 = bitcast i8* %5068 to double*
  store double 0.000000e+00, double* %5069, align 1, !tbaa !2451
  %5070 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5071 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5072 = bitcast %union.vec128_t* %XMM0 to i8*
  %5073 = load i64, i64* %PC
  %5074 = add i64 %5073, 4
  store i64 %5074, i64* %PC
  %5075 = bitcast i8* %5071 to double*
  %5076 = load double, double* %5075, align 1
  %5077 = getelementptr inbounds i8, i8* %5071, i64 8
  %5078 = bitcast i8* %5077 to i64*
  %5079 = load i64, i64* %5078, align 1
  %5080 = bitcast i8* %5072 to double*
  %5081 = load double, double* %5080, align 1
  %5082 = fmul double %5076, %5081
  %5083 = bitcast i8* %5070 to double*
  store double %5082, double* %5083, align 1, !tbaa !2451
  %5084 = getelementptr inbounds i8, i8* %5070, i64 8
  %5085 = bitcast i8* %5084 to i64*
  store i64 %5079, i64* %5085, align 1, !tbaa !2451
  %5086 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5087 = load i64, i64* %RBP
  %5088 = sub i64 %5087, 136
  %5089 = load i64, i64* %PC
  %5090 = add i64 %5089, 8
  store i64 %5090, i64* %PC
  %5091 = inttoptr i64 %5088 to double*
  %5092 = load double, double* %5091
  %5093 = bitcast i8* %5086 to double*
  store double %5092, double* %5093, align 1, !tbaa !2451
  %5094 = getelementptr inbounds i8, i8* %5086, i64 8
  %5095 = bitcast i8* %5094 to double*
  store double 0.000000e+00, double* %5095, align 1, !tbaa !2451
  %5096 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5097 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5098 = bitcast %union.vec128_t* %XMM1 to i8*
  %5099 = load i64, i64* %PC
  %5100 = add i64 %5099, 4
  store i64 %5100, i64* %PC
  %5101 = bitcast i8* %5097 to double*
  %5102 = load double, double* %5101, align 1
  %5103 = getelementptr inbounds i8, i8* %5097, i64 8
  %5104 = bitcast i8* %5103 to i64*
  %5105 = load i64, i64* %5104, align 1
  %5106 = bitcast i8* %5098 to double*
  %5107 = load double, double* %5106, align 1
  %5108 = fdiv double %5102, %5107
  %5109 = bitcast i8* %5096 to double*
  store double %5108, double* %5109, align 1, !tbaa !2451
  %5110 = getelementptr inbounds i8, i8* %5096, i64 8
  %5111 = bitcast i8* %5110 to i64*
  store i64 %5105, i64* %5111, align 1, !tbaa !2451
  %5112 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5113 = load i64, i64* %RBP
  %5114 = sub i64 %5113, 104
  %5115 = load i64, i64* %PC
  %5116 = add i64 %5115, 5
  store i64 %5116, i64* %PC
  %5117 = inttoptr i64 %5114 to double*
  %5118 = load double, double* %5117
  %5119 = bitcast i8* %5112 to double*
  store double %5118, double* %5119, align 1, !tbaa !2451
  %5120 = getelementptr inbounds i8, i8* %5112, i64 8
  %5121 = bitcast i8* %5120 to double*
  store double 0.000000e+00, double* %5121, align 1, !tbaa !2451
  %5122 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5123 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5124 = bitcast %union.vec128_t* %XMM0 to i8*
  %5125 = load i64, i64* %PC
  %5126 = add i64 %5125, 4
  store i64 %5126, i64* %PC
  %5127 = bitcast i8* %5123 to double*
  %5128 = load double, double* %5127, align 1
  %5129 = getelementptr inbounds i8, i8* %5123, i64 8
  %5130 = bitcast i8* %5129 to i64*
  %5131 = load i64, i64* %5130, align 1
  %5132 = bitcast i8* %5124 to double*
  %5133 = load double, double* %5132, align 1
  %5134 = fmul double %5128, %5133
  %5135 = bitcast i8* %5122 to double*
  store double %5134, double* %5135, align 1, !tbaa !2451
  %5136 = getelementptr inbounds i8, i8* %5122, i64 8
  %5137 = bitcast i8* %5136 to i64*
  store i64 %5131, i64* %5137, align 1, !tbaa !2451
  %5138 = bitcast %union.vec128_t* %XMM1 to i8*
  %5139 = load i64, i64* %PC
  %5140 = add i64 %5139, 9
  store i64 %5140, i64* %PC
  %5141 = bitcast i8* %5138 to double*
  %5142 = load double, double* %5141, align 1
  store double %5142, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %5143 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5144 = load i64, i64* %RBP
  %5145 = sub i64 %5144, 16
  %5146 = load i64, i64* %PC
  %5147 = add i64 %5146, 5
  store i64 %5147, i64* %PC
  %5148 = inttoptr i64 %5145 to double*
  %5149 = load double, double* %5148
  %5150 = bitcast i8* %5143 to double*
  store double %5149, double* %5150, align 1, !tbaa !2451
  %5151 = getelementptr inbounds i8, i8* %5143, i64 8
  %5152 = bitcast i8* %5151 to double*
  store double 0.000000e+00, double* %5152, align 1, !tbaa !2451
  %5153 = bitcast %union.vec128_t* %XMM0 to i8*
  %5154 = load i64, i64* %PC
  %5155 = add i64 %5154, 5
  store i64 %5155, i64* %PC
  %5156 = bitcast i8* %5153 to i64*
  %5157 = load i64, i64* %5156, align 1
  store i64 %5157, i64* %RAX, align 1, !tbaa !2428
  %5158 = load i64, i64* %RBP
  %5159 = sub i64 %5158, 112
  %5160 = load i64, i64* %PC
  %5161 = add i64 %5160, 4
  store i64 %5161, i64* %PC
  %5162 = inttoptr i64 %5159 to i64*
  %5163 = load i64, i64* %5162
  store i64 %5163, i64* %RCX, align 8, !tbaa !2428
  %5164 = load i64, i64* %RAX
  %5165 = load i64, i64* %RCX
  %5166 = load i64, i64* %PC
  %5167 = add i64 %5166, 3
  store i64 %5167, i64* %PC
  %5168 = xor i64 %5165, %5164
  store i64 %5168, i64* %RAX, align 8, !tbaa !2428
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %5169, align 1, !tbaa !2432
  %5170 = trunc i64 %5168 to i32
  %5171 = and i32 %5170, 255
  %5172 = call i32 @llvm.ctpop.i32(i32 %5171) #17
  %5173 = trunc i32 %5172 to i8
  %5174 = and i8 %5173, 1
  %5175 = xor i8 %5174, 1
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5175, i8* %5176, align 1, !tbaa !2446
  %5177 = icmp eq i64 %5168, 0
  %5178 = zext i1 %5177 to i8
  %5179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5178, i8* %5179, align 1, !tbaa !2448
  %5180 = lshr i64 %5168, 63
  %5181 = trunc i64 %5180 to i8
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5181, i8* %5182, align 1, !tbaa !2449
  %5183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %5183, align 1, !tbaa !2450
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5184, align 1, !tbaa !2447
  %5185 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5186 = load i64, i64* %RAX
  %5187 = load i64, i64* %PC
  %5188 = add i64 %5187, 5
  store i64 %5188, i64* %PC
  %5189 = bitcast i8* %5185 to i64*
  store i64 %5186, i64* %5189, align 1, !tbaa !2428
  %5190 = getelementptr inbounds i8, i8* %5185, i64 8
  %5191 = bitcast i8* %5190 to i64*
  store i64 0, i64* %5191, align 1, !tbaa !2428
  %5192 = bitcast %union.vec128_t* %XMM0 to i8*
  %5193 = load i64, i64* %PC
  %5194 = add i64 %5193, 9
  store i64 %5194, i64* %PC
  %5195 = bitcast i8* %5192 to double*
  %5196 = load double, double* %5195, align 1
  store double %5196, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  br label %block_401565

block_401236:                                     ; preds = %block_40121a, %block_40121f
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.7, %block_40121f ], [ %3312, %block_40121a ]
  %5197 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5198 = load i64, i64* %PC
  %5199 = add i64 %5198, 9
  store i64 %5199, i64* %PC
  %5200 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %5201 = bitcast i8* %5197 to double*
  store double %5200, double* %5201, align 1, !tbaa !2451
  %5202 = getelementptr inbounds i8, i8* %5197, i64 8
  %5203 = bitcast i8* %5202 to double*
  store double 0.000000e+00, double* %5203, align 1, !tbaa !2451
  %5204 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5205 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5206 = load i64, i64* %PC
  %5207 = add i64 %5206, 9
  store i64 %5207, i64* %PC
  %5208 = bitcast i8* %5205 to double*
  %5209 = load double, double* %5208, align 1
  %5210 = getelementptr inbounds i8, i8* %5205, i64 8
  %5211 = bitcast i8* %5210 to i64*
  %5212 = load i64, i64* %5211, align 1
  %5213 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %5214 = fdiv double %5209, %5213
  %5215 = bitcast i8* %5204 to double*
  store double %5214, double* %5215, align 1, !tbaa !2451
  %5216 = getelementptr inbounds i8, i8* %5204, i64 8
  %5217 = bitcast i8* %5216 to i64*
  store i64 %5212, i64* %5217, align 1, !tbaa !2451
  %5218 = bitcast %union.vec128_t* %XMM0 to i8*
  %5219 = load i64, i64* %PC
  %5220 = add i64 %5219, 9
  store i64 %5220, i64* %PC
  %5221 = bitcast i8* %5218 to double*
  %5222 = load double, double* %5221, align 1
  store double %5222, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %5223 = load i64, i64* %PC
  %5224 = add i64 %5223, 788
  %5225 = load i64, i64* %PC
  %5226 = add i64 %5225, 5
  store i64 %5226, i64* %PC
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5224, i64* %5227, align 8, !tbaa !2428
  br label %block_401565

block_40112a:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_40114b, label %block_401140

block_40121f:                                     ; preds = %block_401214, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %MEMORY.7 = phi %struct.Memory* [ %3312, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %3312, %block_401214 ]
  %5228 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5229 = load i64, i64* %PC
  %5230 = add i64 %5229, 9
  store i64 %5230, i64* %PC
  %5231 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %5232 = bitcast i8* %5228 to double*
  store double %5231, double* %5232, align 1, !tbaa !2451
  %5233 = getelementptr inbounds i8, i8* %5228, i64 8
  %5234 = bitcast i8* %5233 to double*
  store double 0.000000e+00, double* %5234, align 1, !tbaa !2451
  %5235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5236 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5237 = load i64, i64* %RBP
  %5238 = sub i64 %5237, 40
  %5239 = load i64, i64* %PC
  %5240 = add i64 %5239, 5
  store i64 %5240, i64* %PC
  %5241 = bitcast i8* %5236 to double*
  %5242 = load double, double* %5241, align 1
  %5243 = getelementptr inbounds i8, i8* %5236, i64 8
  %5244 = bitcast i8* %5243 to i64*
  %5245 = load i64, i64* %5244, align 1
  %5246 = inttoptr i64 %5238 to double*
  %5247 = load double, double* %5246
  %5248 = fmul double %5242, %5247
  %5249 = bitcast i8* %5235 to double*
  store double %5248, double* %5249, align 1, !tbaa !2451
  %5250 = getelementptr inbounds i8, i8* %5235, i64 8
  %5251 = bitcast i8* %5250 to i64*
  store i64 %5245, i64* %5251, align 1, !tbaa !2451
  %5252 = bitcast %union.vec128_t* %XMM0 to i8*
  %5253 = load i64, i64* %PC
  %5254 = add i64 %5253, 9
  store i64 %5254, i64* %PC
  %5255 = bitcast i8* %5252 to double*
  %5256 = load double, double* %5255, align 1
  store double %5256, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  br label %block_401236

block_4012ab:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_4012cc, label %block_4012c1

block_40121a:                                     ; preds = %block_401214
  %5257 = load i64, i64* %PC
  %5258 = add i64 %5257, 28
  %5259 = load i64, i64* %PC
  %5260 = add i64 %5259, 5
  store i64 %5260, i64* %PC
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5258, i64* %5261, align 8, !tbaa !2428
  br label %block_401236

block_401214:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %5262 = load i64, i64* %PC
  %5263 = add i64 %5262, 11
  %5264 = load i64, i64* %PC
  %5265 = add i64 %5264, 6
  %5266 = load i64, i64* %PC
  %5267 = add i64 %5266, 6
  store i64 %5267, i64* %PC
  %5268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5269 = load i8, i8* %5268, align 1, !tbaa !2446
  store i8 %5269, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5271 = icmp ne i8 %5269, 0
  %5272 = select i1 %5271, i64 %5263, i64 %5265
  store i64 %5272, i64* %5270, align 8, !tbaa !2428
  %5273 = load i8, i8* %BRANCH_TAKEN
  %5274 = icmp eq i8 %5273, 1
  br i1 %5274, label %block_40121f, label %block_40121a

block_401167:                                     ; preds = %block_401161
  %5275 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5276 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5277 = bitcast %union.vec128_t* %XMM0 to i8*
  %5278 = load i64, i64* %PC
  %5279 = add i64 %5278, 3
  store i64 %5279, i64* %PC
  %5280 = bitcast i8* %5276 to i64*
  %5281 = load i64, i64* %5280, align 1
  %5282 = getelementptr inbounds i8, i8* %5276, i64 8
  %5283 = bitcast i8* %5282 to i64*
  %5284 = load i64, i64* %5283, align 1
  %5285 = bitcast i8* %5277 to i64*
  %5286 = load i64, i64* %5285, align 1
  %5287 = getelementptr inbounds i8, i8* %5277, i64 8
  %5288 = bitcast i8* %5287 to i64*
  %5289 = load i64, i64* %5288, align 1
  %5290 = xor i64 %5286, %5281
  %5291 = xor i64 %5289, %5284
  %5292 = trunc i64 %5290 to i32
  %5293 = lshr i64 %5290, 32
  %5294 = trunc i64 %5293 to i32
  %5295 = bitcast i8* %5275 to i32*
  store i32 %5292, i32* %5295, align 1, !tbaa !2469
  %5296 = getelementptr inbounds i8, i8* %5275, i64 4
  %5297 = bitcast i8* %5296 to i32*
  store i32 %5294, i32* %5297, align 1, !tbaa !2469
  %5298 = trunc i64 %5291 to i32
  %5299 = getelementptr inbounds i8, i8* %5275, i64 8
  %5300 = bitcast i8* %5299 to i32*
  store i32 %5298, i32* %5300, align 1, !tbaa !2469
  %5301 = lshr i64 %5291, 32
  %5302 = trunc i64 %5301 to i32
  %5303 = getelementptr inbounds i8, i8* %5275, i64 12
  %5304 = bitcast i8* %5303 to i32*
  store i32 %5302, i32* %5304, align 1, !tbaa !2469
  %5305 = bitcast %union.vec128_t* %XMM0 to i8*
  %5306 = load i64, i64* %PC
  %5307 = add i64 %5306, 9
  store i64 %5307, i64* %PC
  %5308 = bitcast i8* %5305 to double*
  %5309 = load double, double* %5308, align 1
  store double %5309, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %5310 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5311 = load i64, i64* %PC
  %5312 = add i64 %5311, 9
  store i64 %5312, i64* %PC
  %5313 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %5314 = bitcast i8* %5310 to double*
  store double %5313, double* %5314, align 1, !tbaa !2451
  %5315 = getelementptr inbounds i8, i8* %5310, i64 8
  %5316 = bitcast i8* %5315 to double*
  store double 0.000000e+00, double* %5316, align 1, !tbaa !2451
  %5317 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5318 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5319 = load i64, i64* %PC
  %5320 = add i64 %5319, 9
  store i64 %5320, i64* %PC
  %5321 = bitcast i8* %5318 to double*
  %5322 = load double, double* %5321, align 1
  %5323 = getelementptr inbounds i8, i8* %5318, i64 8
  %5324 = bitcast i8* %5323 to i64*
  %5325 = load i64, i64* %5324, align 1
  %5326 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %5327 = fdiv double %5322, %5326
  %5328 = bitcast i8* %5317 to double*
  store double %5327, double* %5328, align 1, !tbaa !2451
  %5329 = getelementptr inbounds i8, i8* %5317, i64 8
  %5330 = bitcast i8* %5329 to i64*
  store i64 %5325, i64* %5330, align 1, !tbaa !2451
  %5331 = load i64, i64* %RBP
  %5332 = sub i64 %5331, 24
  %5333 = bitcast %union.vec128_t* %XMM0 to i8*
  %5334 = load i64, i64* %PC
  %5335 = add i64 %5334, 5
  store i64 %5335, i64* %PC
  %5336 = bitcast i8* %5333 to double*
  %5337 = load double, double* %5336, align 1
  %5338 = inttoptr i64 %5332 to double*
  store double %5337, double* %5338
  %5339 = load i64, i64* %PC
  %5340 = add i64 %5339, 46
  %5341 = load i64, i64* %PC
  %5342 = add i64 %5341, 5
  store i64 %5342, i64* %PC
  %5343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5340, i64* %5343, align 8, !tbaa !2428
  br label %block_4011b8

block_40118f:                                     ; preds = %block_401161, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478
  %MEMORY.8 = phi %struct.Memory* [ %2399, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478 ], [ %2399, %block_401161 ]
  %5344 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5345 = load i64, i64* %PC
  %5346 = add i64 %5345, 9
  store i64 %5346, i64* %PC
  %5347 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %5348 = bitcast i8* %5344 to double*
  store double %5347, double* %5348, align 1, !tbaa !2451
  %5349 = getelementptr inbounds i8, i8* %5344, i64 8
  %5350 = bitcast i8* %5349 to double*
  store double 0.000000e+00, double* %5350, align 1, !tbaa !2451
  %5351 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5352 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5353 = load i64, i64* %PC
  %5354 = add i64 %5353, 9
  store i64 %5354, i64* %PC
  %5355 = bitcast i8* %5352 to double*
  %5356 = load double, double* %5355, align 1
  %5357 = getelementptr inbounds i8, i8* %5352, i64 8
  %5358 = bitcast i8* %5357 to i64*
  %5359 = load i64, i64* %5358, align 1
  %5360 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %5361 = fsub double %5356, %5360
  %5362 = bitcast i8* %5351 to double*
  store double %5361, double* %5362, align 1, !tbaa !2451
  %5363 = getelementptr inbounds i8, i8* %5351, i64 8
  %5364 = bitcast i8* %5363 to i64*
  store i64 %5359, i64* %5364, align 1, !tbaa !2451
  %5365 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5366 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5367 = load i64, i64* %PC
  %5368 = add i64 %5367, 9
  store i64 %5368, i64* %PC
  %5369 = bitcast i8* %5366 to double*
  %5370 = load double, double* %5369, align 1
  %5371 = getelementptr inbounds i8, i8* %5366, i64 8
  %5372 = bitcast i8* %5371 to i64*
  %5373 = load i64, i64* %5372, align 1
  %5374 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %5375 = fdiv double %5370, %5374
  %5376 = bitcast i8* %5365 to double*
  store double %5375, double* %5376, align 1, !tbaa !2451
  %5377 = getelementptr inbounds i8, i8* %5365, i64 8
  %5378 = bitcast i8* %5377 to i64*
  store i64 %5373, i64* %5378, align 1, !tbaa !2451
  %5379 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5380 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5381 = load i64, i64* %PC
  %5382 = add i64 %5381, 9
  store i64 %5382, i64* %PC
  %5383 = bitcast i8* %5380 to double*
  %5384 = load double, double* %5383, align 1
  %5385 = getelementptr inbounds i8, i8* %5380, i64 8
  %5386 = bitcast i8* %5385 to i64*
  %5387 = load i64, i64* %5386, align 1
  %5388 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %5389 = fmul double %5384, %5388
  %5390 = bitcast i8* %5379 to double*
  store double %5389, double* %5390, align 1, !tbaa !2451
  %5391 = getelementptr inbounds i8, i8* %5379, i64 8
  %5392 = bitcast i8* %5391 to i64*
  store i64 %5387, i64* %5392, align 1, !tbaa !2451
  %5393 = load i64, i64* %RBP
  %5394 = sub i64 %5393, 24
  %5395 = bitcast %union.vec128_t* %XMM0 to i8*
  %5396 = load i64, i64* %PC
  %5397 = add i64 %5396, 5
  store i64 %5397, i64* %PC
  %5398 = bitcast i8* %5395 to double*
  %5399 = load double, double* %5398, align 1
  %5400 = inttoptr i64 %5394 to double*
  store double %5399, double* %5400
  br label %block_4011b8
}

; Function Attrs: noinline
define %struct.Memory* @sub_4005a0__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4005a0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2432
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2446
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2447
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2448
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2449
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2450
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2432
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2446
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2450
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2447
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2448
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_4005b2, label %block_4005b0

block_4005b0:                                     ; preds = %block_4005a0
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_4005b2

block_4005b2:                                     ; preds = %block_4005b0, %block_4005a0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4005a0 ], [ %92, %block_4005b0 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2432
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2446
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2447
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2448
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2449
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2450
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015e0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015e0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400680__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400680:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400f70_trace_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400f70:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 1
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RAX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 5
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RCX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 7
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %31 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %30, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %31 to %"class.std::bitset"*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %33 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %32, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %33 to %"class.std::bitset"*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %39 to %union.vec128_t*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %41 to %union.vec128_t*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = load i64, i64* %RBP
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 1
  store i64 %48, i64* %PC
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %50 = load i64, i64* %49, align 8, !tbaa !2428
  %51 = add i64 %50, -8
  %52 = inttoptr i64 %51 to i64*
  store i64 %46, i64* %52
  store i64 %51, i64* %49, align 8, !tbaa !2428
  %53 = load i64, i64* %RSP
  %54 = load i64, i64* %PC
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC
  store i64 %53, i64* %RBP, align 8, !tbaa !2428
  %56 = load i64, i64* %RSP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 4
  store i64 %58, i64* %PC
  %59 = sub i64 %56, 32
  store i64 %59, i64* %RSP, align 8, !tbaa !2428
  %60 = icmp ult i64 %56, 32
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %61, i8* %62, align 1, !tbaa !2432
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 255
  %65 = call i32 @llvm.ctpop.i32(i32 %64) #17
  %66 = trunc i32 %65 to i8
  %67 = and i8 %66, 1
  %68 = xor i8 %67, 1
  %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %68, i8* %69, align 1, !tbaa !2446
  %70 = xor i64 32, %56
  %71 = xor i64 %70, %59
  %72 = lshr i64 %71, 4
  %73 = trunc i64 %72 to i8
  %74 = and i8 %73, 1
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %74, i8* %75, align 1, !tbaa !2447
  %76 = icmp eq i64 %59, 0
  %77 = zext i1 %76 to i8
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %77, i8* %78, align 1, !tbaa !2448
  %79 = lshr i64 %59, 63
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %80, i8* %81, align 1, !tbaa !2449
  %82 = lshr i64 %56, 63
  %83 = xor i64 %79, %82
  %84 = add nuw nsw i64 %83, %82
  %85 = icmp eq i64 %84, 2
  %86 = zext i1 %85 to i8
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %86, i8* %87, align 1, !tbaa !2450
  %88 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 8
  store i64 %90, i64* %PC
  %91 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 104) to double*)
  %92 = bitcast i8* %88 to double*
  store double %91, double* %92, align 1, !tbaa !2451
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to double*
  store double 0.000000e+00, double* %94, align 1, !tbaa !2451
  %95 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %96 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %97 = bitcast %union.vec128_t* %XMM2 to i8*
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 3
  store i64 %99, i64* %PC
  %100 = bitcast i8* %96 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = getelementptr inbounds i8, i8* %96, i64 8
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 1
  %105 = bitcast i8* %97 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = getelementptr inbounds i8, i8* %97, i64 8
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 1
  %110 = xor i64 %106, %101
  %111 = xor i64 %109, %104
  %112 = trunc i64 %110 to i32
  %113 = lshr i64 %110, 32
  %114 = trunc i64 %113 to i32
  %115 = bitcast i8* %95 to i32*
  store i32 %112, i32* %115, align 1, !tbaa !2469
  %116 = getelementptr inbounds i8, i8* %95, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 %114, i32* %117, align 1, !tbaa !2469
  %118 = trunc i64 %111 to i32
  %119 = getelementptr inbounds i8, i8* %95, i64 8
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 1, !tbaa !2469
  %121 = lshr i64 %111, 32
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds i8, i8* %95, i64 12
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 1, !tbaa !2469
  %125 = load i64, i64* %RBP
  %126 = sub i64 %125, 8
  %127 = load i32, i32* %EDI
  %128 = zext i32 %127 to i64
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %126 to i32*
  store i32 %127, i32* %131
  %132 = load i64, i64* %RBP
  %133 = sub i64 %132, 16
  %134 = bitcast %union.vec128_t* %XMM0 to i8*
  %135 = load i64, i64* %PC
  %136 = add i64 %135, 5
  store i64 %136, i64* %PC
  %137 = bitcast i8* %134 to double*
  %138 = load double, double* %137, align 1
  %139 = inttoptr i64 %133 to double*
  store double %138, double* %139
  %140 = bitcast %union.vec128_t* %XMM2 to i8*
  %141 = load i64, i64* %PC
  %142 = add i64 %141, 9
  store i64 %142, i64* %PC
  %143 = bitcast i8* %140 to double*
  %144 = load double, double* %143, align 1
  store double %144, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %145 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %146 = load i64, i64* %RBP
  %147 = sub i64 %146, 16
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 5
  store i64 %149, i64* %PC
  %150 = inttoptr i64 %147 to double*
  %151 = load double, double* %150
  %152 = bitcast i8* %145 to double*
  store double %151, double* %152, align 1, !tbaa !2451
  %153 = getelementptr inbounds i8, i8* %145, i64 8
  %154 = bitcast i8* %153 to double*
  store double 0.000000e+00, double* %154, align 1, !tbaa !2451
  %155 = bitcast %union.vec128_t* %XMM0 to i8*
  %156 = load i64, i64* %PC
  %157 = add i64 %156, 9
  store i64 %157, i64* %PC
  %158 = bitcast i8* %155 to double*
  %159 = load double, double* %158, align 1
  store double %159, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %160 = bitcast %union.vec128_t* %XMM1 to i8*
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 9
  store i64 %162, i64* %PC
  %163 = bitcast i8* %160 to double*
  %164 = load double, double* %163, align 1
  store double %164, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %165 = load i64, i64* %RBP
  %166 = sub i64 %165, 20
  %167 = load i64, i64* %PC
  %168 = add i64 %167, 7
  store i64 %168, i64* %PC
  %169 = inttoptr i64 %166 to i32*
  store i32 1, i32* %169
  br label %block_400fb2

block_40101f:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 10
  store i64 %171, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %172 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 8
  store i64 %174, i64* %PC
  %175 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 104) to double*)
  %176 = bitcast i8* %172 to double*
  store double %175, double* %176, align 1, !tbaa !2451
  %177 = getelementptr inbounds i8, i8* %172, i64 8
  %178 = bitcast i8* %177 to double*
  store double 0.000000e+00, double* %178, align 1, !tbaa !2451
  %179 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 9
  store i64 %181, i64* %PC
  %182 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %183 = bitcast i8* %179 to double*
  store double %182, double* %183, align 1, !tbaa !2451
  %184 = getelementptr inbounds i8, i8* %179, i64 8
  %185 = bitcast i8* %184 to double*
  store double 0.000000e+00, double* %185, align 1, !tbaa !2451
  %186 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 9
  store i64 %188, i64* %PC
  %189 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %190 = bitcast i8* %186 to double*
  store double %189, double* %190, align 1, !tbaa !2451
  %191 = getelementptr inbounds i8, i8* %186, i64 8
  %192 = bitcast i8* %191 to double*
  store double 0.000000e+00, double* %192, align 1, !tbaa !2451
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 8
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 4
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to i32*
  %198 = load i32, i32* %197
  %199 = sext i32 %198 to i64
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %202 = load i64, i64* %RCX
  %203 = mul i64 %202, 8
  %204 = add i64 %203, add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 16)
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 9
  store i64 %206, i64* %PC
  %207 = bitcast i8* %201 to double*
  %208 = load double, double* %207, align 1
  %209 = getelementptr inbounds i8, i8* %201, i64 8
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 1
  %212 = inttoptr i64 %204 to double*
  %213 = load double, double* %212
  %214 = fsub double %208, %213
  %215 = bitcast i8* %200 to double*
  store double %214, double* %215, align 1, !tbaa !2451
  %216 = getelementptr inbounds i8, i8* %200, i64 8
  %217 = bitcast i8* %216 to i64*
  store i64 %211, i64* %217, align 1, !tbaa !2451
  %218 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 9
  store i64 %220, i64* %PC
  %221 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %222 = bitcast i8* %218 to double*
  store double %221, double* %222, align 1, !tbaa !2451
  %223 = getelementptr inbounds i8, i8* %218, i64 8
  %224 = bitcast i8* %223 to double*
  store double 0.000000e+00, double* %224, align 1, !tbaa !2451
  %225 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %226 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 9
  store i64 %228, i64* %PC
  %229 = bitcast i8* %226 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %226, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %235 = fsub double %230, %234
  %236 = bitcast i8* %225 to double*
  store double %235, double* %236, align 1, !tbaa !2451
  %237 = getelementptr inbounds i8, i8* %225, i64 8
  %238 = bitcast i8* %237 to i64*
  store i64 %233, i64* %238, align 1, !tbaa !2451
  %239 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %240 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %241 = bitcast %union.vec128_t* %XMM3 to i8*
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = bitcast i8* %240 to double*
  %245 = load double, double* %244, align 1
  %246 = getelementptr inbounds i8, i8* %240, i64 8
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = bitcast i8* %241 to double*
  %250 = load double, double* %249, align 1
  %251 = fdiv double %245, %250
  %252 = bitcast i8* %239 to double*
  store double %251, double* %252, align 1, !tbaa !2451
  %253 = getelementptr inbounds i8, i8* %239, i64 8
  %254 = bitcast i8* %253 to i64*
  store i64 %248, i64* %254, align 1, !tbaa !2451
  %255 = load i64, i64* %RBP
  %256 = sub i64 %255, 20
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 4
  store i64 %258, i64* %PC
  %259 = inttoptr i64 %256 to i32*
  %260 = load i32, i32* %259
  %261 = sext i32 %260 to i64
  store i64 %261, i64* %RCX, align 8, !tbaa !2428
  %262 = load i64, i64* %RCX
  %263 = load i64, i64* %PC
  %264 = add i64 %263, 4
  store i64 %264, i64* %PC
  %265 = sext i64 %262 to i128
  %266 = and i128 %265, -18446744073709551616
  %267 = zext i64 %262 to i128
  %268 = or i128 %266, %267
  %269 = mul nsw i128 40, %268
  %270 = trunc i128 %269 to i64
  store i64 %270, i64* %RCX, align 8, !tbaa !2428
  %271 = sext i64 %270 to i128
  %272 = icmp ne i128 %271, %269
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %273, i8* %274, align 1, !tbaa !2432
  %275 = trunc i128 %269 to i32
  %276 = and i32 %275, 255
  %277 = call i32 @llvm.ctpop.i32(i32 %276) #17
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  %280 = xor i8 %279, 1
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %280, i8* %281, align 1, !tbaa !2446
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %282, align 1, !tbaa !2447
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %283, align 1, !tbaa !2448
  %284 = lshr i64 %270, 63
  %285 = trunc i64 %284 to i8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %285, i8* %286, align 1, !tbaa !2449
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %273, i8* %287, align 1, !tbaa !2450
  %288 = load i64, i64* %RAX
  %289 = load i64, i64* %PC
  %290 = add i64 %289, 3
  store i64 %290, i64* %PC
  store i64 %288, i64* %RDX, align 8, !tbaa !2428
  %291 = load i64, i64* %RDX
  %292 = load i64, i64* %RCX
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 3
  store i64 %294, i64* %PC
  %295 = add i64 %292, %291
  store i64 %295, i64* %RDX, align 8, !tbaa !2428
  %296 = icmp ult i64 %295, %291
  %297 = icmp ult i64 %295, %292
  %298 = or i1 %296, %297
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %299, i8* %300, align 1, !tbaa !2432
  %301 = trunc i64 %295 to i32
  %302 = and i32 %301, 255
  %303 = call i32 @llvm.ctpop.i32(i32 %302) #17
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = xor i8 %305, 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %306, i8* %307, align 1, !tbaa !2446
  %308 = xor i64 %292, %291
  %309 = xor i64 %308, %295
  %310 = lshr i64 %309, 4
  %311 = trunc i64 %310 to i8
  %312 = and i8 %311, 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %312, i8* %313, align 1, !tbaa !2447
  %314 = icmp eq i64 %295, 0
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %315, i8* %316, align 1, !tbaa !2448
  %317 = lshr i64 %295, 63
  %318 = trunc i64 %317 to i8
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %318, i8* %319, align 1, !tbaa !2449
  %320 = lshr i64 %291, 63
  %321 = lshr i64 %292, 63
  %322 = xor i64 %317, %320
  %323 = xor i64 %317, %321
  %324 = add nuw nsw i64 %322, %323
  %325 = icmp eq i64 %324, 2
  %326 = zext i1 %325 to i8
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %326, i8* %327, align 1, !tbaa !2450
  %328 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %329 = load i64, i64* %RDX
  %330 = add i64 %329, 16
  %331 = load i64, i64* %PC
  %332 = add i64 %331, 5
  store i64 %332, i64* %PC
  %333 = inttoptr i64 %330 to double*
  %334 = load double, double* %333
  %335 = bitcast i8* %328 to double*
  store double %334, double* %335, align 1, !tbaa !2451
  %336 = getelementptr inbounds i8, i8* %328, i64 8
  %337 = bitcast i8* %336 to double*
  store double 0.000000e+00, double* %337, align 1, !tbaa !2451
  %338 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %339 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %340 = bitcast %union.vec128_t* %XMM0 to i8*
  %341 = load i64, i64* %PC
  %342 = add i64 %341, 4
  store i64 %342, i64* %PC
  %343 = bitcast i8* %339 to double*
  %344 = load double, double* %343, align 1
  %345 = getelementptr inbounds i8, i8* %339, i64 8
  %346 = bitcast i8* %345 to i64*
  %347 = load i64, i64* %346, align 1
  %348 = bitcast i8* %340 to double*
  %349 = load double, double* %348, align 1
  %350 = fsub double %344, %349
  %351 = bitcast i8* %338 to double*
  store double %350, double* %351, align 1, !tbaa !2451
  %352 = getelementptr inbounds i8, i8* %338, i64 8
  %353 = bitcast i8* %352 to i64*
  store i64 %347, i64* %353, align 1, !tbaa !2451
  %354 = load i64, i64* %RBP
  %355 = sub i64 %354, 20
  %356 = load i64, i64* %PC
  %357 = add i64 %356, 4
  store i64 %357, i64* %PC
  %358 = inttoptr i64 %355 to i32*
  %359 = load i32, i32* %358
  %360 = sext i32 %359 to i64
  store i64 %360, i64* %RCX, align 8, !tbaa !2428
  %361 = load i64, i64* %RCX
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 4
  store i64 %363, i64* %PC
  %364 = sext i64 %361 to i128
  %365 = and i128 %364, -18446744073709551616
  %366 = zext i64 %361 to i128
  %367 = or i128 %365, %366
  %368 = mul nsw i128 40, %367
  %369 = trunc i128 %368 to i64
  store i64 %369, i64* %RCX, align 8, !tbaa !2428
  %370 = sext i64 %369 to i128
  %371 = icmp ne i128 %370, %368
  %372 = zext i1 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %372, i8* %373, align 1, !tbaa !2432
  %374 = trunc i128 %368 to i32
  %375 = and i32 %374, 255
  %376 = call i32 @llvm.ctpop.i32(i32 %375) #17
  %377 = trunc i32 %376 to i8
  %378 = and i8 %377, 1
  %379 = xor i8 %378, 1
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %379, i8* %380, align 1, !tbaa !2446
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %381, align 1, !tbaa !2447
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %382, align 1, !tbaa !2448
  %383 = lshr i64 %369, 63
  %384 = trunc i64 %383 to i8
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %384, i8* %385, align 1, !tbaa !2449
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %372, i8* %386, align 1, !tbaa !2450
  %387 = load i64, i64* %RAX
  %388 = load i64, i64* %RCX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 3
  store i64 %390, i64* %PC
  %391 = add i64 %388, %387
  store i64 %391, i64* %RAX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %387
  %393 = icmp ult i64 %391, %388
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 %388, %387
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %387, 63
  %417 = lshr i64 %388, 63
  %418 = xor i64 %413, %416
  %419 = xor i64 %413, %417
  %420 = add nuw nsw i64 %418, %419
  %421 = icmp eq i64 %420, 2
  %422 = zext i1 %421 to i8
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %422, i8* %423, align 1, !tbaa !2450
  %424 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %425 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %426 = load i64, i64* %RAX
  %427 = add i64 %426, 24
  %428 = load i64, i64* %PC
  %429 = add i64 %428, 5
  store i64 %429, i64* %PC
  %430 = bitcast i8* %425 to double*
  %431 = load double, double* %430, align 1
  %432 = getelementptr inbounds i8, i8* %425, i64 8
  %433 = bitcast i8* %432 to i64*
  %434 = load i64, i64* %433, align 1
  %435 = inttoptr i64 %427 to double*
  %436 = load double, double* %435
  %437 = fdiv double %431, %436
  %438 = bitcast i8* %424 to double*
  store double %437, double* %438, align 1, !tbaa !2451
  %439 = getelementptr inbounds i8, i8* %424, i64 8
  %440 = bitcast i8* %439 to i64*
  store i64 %434, i64* %440, align 1, !tbaa !2451
  %441 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %442 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %443 = bitcast %union.vec128_t* %XMM3 to i8*
  %444 = load i64, i64* %PC
  %445 = add i64 %444, 4
  store i64 %445, i64* %PC
  %446 = bitcast i8* %442 to double*
  %447 = load double, double* %446, align 1
  %448 = getelementptr inbounds i8, i8* %442, i64 8
  %449 = bitcast i8* %448 to i64*
  %450 = load i64, i64* %449, align 1
  %451 = bitcast i8* %443 to double*
  %452 = load double, double* %451, align 1
  %453 = fmul double %447, %452
  %454 = bitcast i8* %441 to double*
  store double %453, double* %454, align 1, !tbaa !2451
  %455 = getelementptr inbounds i8, i8* %441, i64 8
  %456 = bitcast i8* %455 to i64*
  store i64 %450, i64* %456, align 1, !tbaa !2451
  %457 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %458 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %459 = bitcast %union.vec128_t* %XMM2 to i8*
  %460 = load i64, i64* %PC
  %461 = add i64 %460, 4
  store i64 %461, i64* %PC
  %462 = bitcast i8* %458 to double*
  %463 = load double, double* %462, align 1
  %464 = getelementptr inbounds i8, i8* %458, i64 8
  %465 = bitcast i8* %464 to i64*
  %466 = load i64, i64* %465, align 1
  %467 = bitcast i8* %459 to double*
  %468 = load double, double* %467, align 1
  %469 = fadd double %463, %468
  %470 = bitcast i8* %457 to double*
  store double %469, double* %470, align 1, !tbaa !2451
  %471 = getelementptr inbounds i8, i8* %457, i64 8
  %472 = bitcast i8* %471 to i64*
  store i64 %466, i64* %472, align 1, !tbaa !2451
  %473 = bitcast %union.vec128_t* %XMM1 to i8*
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 9
  store i64 %475, i64* %PC
  %476 = bitcast i8* %473 to double*
  %477 = load double, double* %476, align 1
  store double %477, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  br label %block_40109e

block_40109e:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit, %block_40101f
  %MEMORY.0 = phi %struct.Memory* [ %1087, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %1087, %block_40101f ]
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 114
  %480 = load i64, i64* %PC
  %481 = add i64 %480, 5
  %482 = load i64, i64* %PC
  %483 = add i64 %482, 5
  store i64 %483, i64* %PC
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %485 = load i64, i64* %484, align 8, !tbaa !2428
  %486 = add i64 %485, -8
  %487 = inttoptr i64 %486 to i64*
  store i64 %481, i64* %487
  store i64 %486, i64* %484, align 8, !tbaa !2428
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %479, i64* %488, align 8, !tbaa !2428
  %489 = load i64, i64* %PC
  %490 = call %struct.Memory* @sub_401110_transit_surface_renamed_(%struct.State* %0, i64 %489, %struct.Memory* %MEMORY.0)
  %491 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %492 = load i64, i64* %PC
  %493 = add i64 %492, 9
  store i64 %493, i64* %PC
  %494 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %495 = bitcast i8* %491 to double*
  store double %494, double* %495, align 1, !tbaa !2451
  %496 = getelementptr inbounds i8, i8* %491, i64 8
  %497 = bitcast i8* %496 to double*
  store double 0.000000e+00, double* %497, align 1, !tbaa !2451
  %498 = bitcast %union.vec128_t* %XMM0 to i8*
  %499 = load i64, i64* %PC
  %500 = add i64 %499, 9
  store i64 %500, i64* %PC
  %501 = bitcast i8* %498 to double*
  %502 = load double, double* %501, align 1
  store double %502, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %503 = load i64, i64* %RBP
  %504 = sub i64 %503, 20
  %505 = load i64, i64* %PC
  %506 = add i64 %505, 3
  store i64 %506, i64* %PC
  %507 = inttoptr i64 %504 to i32*
  %508 = load i32, i32* %507
  %509 = zext i32 %508 to i64
  store i64 %509, i64* %RAX, align 8, !tbaa !2428
  %510 = load i64, i64* %PC
  %511 = add i64 %510, 8
  store i64 %511, i64* %PC
  %512 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %513 = sext i16 %512 to i64
  %514 = and i64 %513, 4294967295
  store i64 %514, i64* %RCX, align 8, !tbaa !2428
  %515 = load i32, i32* %EAX
  %516 = zext i32 %515 to i64
  %517 = load i32, i32* %ECX
  %518 = zext i32 %517 to i64
  %519 = load i64, i64* %PC
  %520 = add i64 %519, 2
  store i64 %520, i64* %PC
  %521 = sub i32 %515, %517
  %522 = icmp ult i32 %515, %517
  %523 = zext i1 %522 to i8
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %523, i8* %524, align 1, !tbaa !2432
  %525 = and i32 %521, 255
  %526 = call i32 @llvm.ctpop.i32(i32 %525) #17
  %527 = trunc i32 %526 to i8
  %528 = and i8 %527, 1
  %529 = xor i8 %528, 1
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %529, i8* %530, align 1, !tbaa !2446
  %531 = xor i64 %518, %516
  %532 = trunc i64 %531 to i32
  %533 = xor i32 %532, %521
  %534 = lshr i32 %533, 4
  %535 = trunc i32 %534 to i8
  %536 = and i8 %535, 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %536, i8* %537, align 1, !tbaa !2447
  %538 = icmp eq i32 %521, 0
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %539, i8* %540, align 1, !tbaa !2448
  %541 = lshr i32 %521, 31
  %542 = trunc i32 %541 to i8
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %542, i8* %543, align 1, !tbaa !2449
  %544 = lshr i32 %515, 31
  %545 = lshr i32 %517, 31
  %546 = xor i32 %545, %544
  %547 = xor i32 %541, %544
  %548 = add nuw nsw i32 %547, %546
  %549 = icmp eq i32 %548, 2
  %550 = zext i1 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %550, i8* %551, align 1, !tbaa !2450
  %552 = load i64, i64* %PC
  %553 = add i64 %552, 50
  %554 = load i64, i64* %PC
  %555 = add i64 %554, 6
  %556 = load i64, i64* %PC
  %557 = add i64 %556, 6
  store i64 %557, i64* %PC
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %559 = load i8, i8* %558, align 1, !tbaa !2449
  %560 = icmp ne i8 %559, 0
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %562 = load i8, i8* %561, align 1, !tbaa !2450
  %563 = icmp ne i8 %562, 0
  %564 = xor i1 %560, %563
  %565 = xor i1 %564, true
  %566 = zext i1 %565 to i8
  store i8 %566, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %568 = select i1 %564, i64 %555, i64 %553
  store i64 %568, i64* %567, align 8, !tbaa !2428
  %569 = load i8, i8* %BRANCH_TAKEN
  %570 = icmp eq i8 %569, 1
  br i1 %570, label %block_4010f4, label %block_4010c8

block_4010f4:                                     ; preds = %block_4010c8, %block_40109e
  %MEMORY.1 = phi %struct.Memory* [ %490, %block_40109e ], [ %490, %block_4010c8 ]
  %571 = load i64, i64* %PC
  %572 = add i64 %571, 5
  %573 = load i64, i64* %PC
  %574 = add i64 %573, 5
  store i64 %574, i64* %PC
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %572, i64* %575, align 8, !tbaa !2428
  %576 = load i64, i64* %RBP
  %577 = sub i64 %576, 20
  %578 = load i64, i64* %PC
  %579 = add i64 %578, 3
  store i64 %579, i64* %PC
  %580 = inttoptr i64 %577 to i32*
  %581 = load i32, i32* %580
  %582 = zext i32 %581 to i64
  store i64 %582, i64* %RAX, align 8, !tbaa !2428
  %583 = load i64, i64* %RAX
  %584 = load i64, i64* %PC
  %585 = add i64 %584, 3
  store i64 %585, i64* %PC
  %586 = trunc i64 %583 to i32
  %587 = add i32 1, %586
  %588 = zext i32 %587 to i64
  store i64 %588, i64* %RAX, align 8, !tbaa !2428
  %589 = icmp ult i32 %587, %586
  %590 = icmp ult i32 %587, 1
  %591 = or i1 %589, %590
  %592 = zext i1 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %592, i8* %593, align 1, !tbaa !2432
  %594 = and i32 %587, 255
  %595 = call i32 @llvm.ctpop.i32(i32 %594) #17
  %596 = trunc i32 %595 to i8
  %597 = and i8 %596, 1
  %598 = xor i8 %597, 1
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %598, i8* %599, align 1, !tbaa !2446
  %600 = xor i64 1, %583
  %601 = trunc i64 %600 to i32
  %602 = xor i32 %601, %587
  %603 = lshr i32 %602, 4
  %604 = trunc i32 %603 to i8
  %605 = and i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %605, i8* %606, align 1, !tbaa !2447
  %607 = icmp eq i32 %587, 0
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %608, i8* %609, align 1, !tbaa !2448
  %610 = lshr i32 %587, 31
  %611 = trunc i32 %610 to i8
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %611, i8* %612, align 1, !tbaa !2449
  %613 = lshr i32 %586, 31
  %614 = xor i32 %610, %613
  %615 = add nuw nsw i32 %614, %610
  %616 = icmp eq i32 %615, 2
  %617 = zext i1 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %617, i8* %618, align 1, !tbaa !2450
  %619 = load i64, i64* %RBP
  %620 = sub i64 %619, 20
  %621 = load i32, i32* %EAX
  %622 = zext i32 %621 to i64
  %623 = load i64, i64* %PC
  %624 = add i64 %623, 3
  store i64 %624, i64* %PC
  %625 = inttoptr i64 %620 to i32*
  store i32 %621, i32* %625
  %626 = load i64, i64* %PC
  %627 = sub i64 %626, 336
  %628 = load i64, i64* %PC
  %629 = add i64 %628, 5
  store i64 %629, i64* %PC
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %627, i64* %630, align 8, !tbaa !2428
  br label %block_400fb2

block_4010c8:                                     ; preds = %block_40109e
  %631 = load i64, i64* %PC
  %632 = add i64 %631, 10
  store i64 %632, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %633 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %634 = load i64, i64* %PC
  %635 = add i64 %634, 9
  store i64 %635, i64* %PC
  %636 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %637 = bitcast i8* %633 to double*
  store double %636, double* %637, align 1, !tbaa !2451
  %638 = getelementptr inbounds i8, i8* %633, i64 8
  %639 = bitcast i8* %638 to double*
  store double 0.000000e+00, double* %639, align 1, !tbaa !2451
  %640 = load i64, i64* %RBP
  %641 = sub i64 %640, 20
  %642 = load i64, i64* %PC
  %643 = add i64 %642, 4
  store i64 %643, i64* %PC
  %644 = inttoptr i64 %641 to i32*
  %645 = load i32, i32* %644
  %646 = sext i32 %645 to i64
  store i64 %646, i64* %RCX, align 8, !tbaa !2428
  %647 = load i64, i64* %RCX
  %648 = load i64, i64* %PC
  %649 = add i64 %648, 4
  store i64 %649, i64* %PC
  %650 = sext i64 %647 to i128
  %651 = and i128 %650, -18446744073709551616
  %652 = zext i64 %647 to i128
  %653 = or i128 %651, %652
  %654 = mul nsw i128 40, %653
  %655 = trunc i128 %654 to i64
  store i64 %655, i64* %RCX, align 8, !tbaa !2428
  %656 = sext i64 %655 to i128
  %657 = icmp ne i128 %656, %654
  %658 = zext i1 %657 to i8
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %658, i8* %659, align 1, !tbaa !2432
  %660 = trunc i128 %654 to i32
  %661 = and i32 %660, 255
  %662 = call i32 @llvm.ctpop.i32(i32 %661) #17
  %663 = trunc i32 %662 to i8
  %664 = and i8 %663, 1
  %665 = xor i8 %664, 1
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %665, i8* %666, align 1, !tbaa !2446
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %667, align 1, !tbaa !2447
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %668, align 1, !tbaa !2448
  %669 = lshr i64 %655, 63
  %670 = trunc i64 %669 to i8
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %670, i8* %671, align 1, !tbaa !2449
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %658, i8* %672, align 1, !tbaa !2450
  %673 = load i64, i64* %RAX
  %674 = load i64, i64* %RCX
  %675 = load i64, i64* %PC
  %676 = add i64 %675, 3
  store i64 %676, i64* %PC
  %677 = add i64 %674, %673
  store i64 %677, i64* %RAX, align 8, !tbaa !2428
  %678 = icmp ult i64 %677, %673
  %679 = icmp ult i64 %677, %674
  %680 = or i1 %678, %679
  %681 = zext i1 %680 to i8
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %681, i8* %682, align 1, !tbaa !2432
  %683 = trunc i64 %677 to i32
  %684 = and i32 %683, 255
  %685 = call i32 @llvm.ctpop.i32(i32 %684) #17
  %686 = trunc i32 %685 to i8
  %687 = and i8 %686, 1
  %688 = xor i8 %687, 1
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %688, i8* %689, align 1, !tbaa !2446
  %690 = xor i64 %674, %673
  %691 = xor i64 %690, %677
  %692 = lshr i64 %691, 4
  %693 = trunc i64 %692 to i8
  %694 = and i8 %693, 1
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %694, i8* %695, align 1, !tbaa !2447
  %696 = icmp eq i64 %677, 0
  %697 = zext i1 %696 to i8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %697, i8* %698, align 1, !tbaa !2448
  %699 = lshr i64 %677, 63
  %700 = trunc i64 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %700, i8* %701, align 1, !tbaa !2449
  %702 = lshr i64 %673, 63
  %703 = lshr i64 %674, 63
  %704 = xor i64 %699, %702
  %705 = xor i64 %699, %703
  %706 = add nuw nsw i64 %704, %705
  %707 = icmp eq i64 %706, 2
  %708 = zext i1 %707 to i8
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %708, i8* %709, align 1, !tbaa !2450
  %710 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %711 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %712 = load i64, i64* %RAX
  %713 = add i64 %712, 32
  %714 = load i64, i64* %PC
  %715 = add i64 %714, 5
  store i64 %715, i64* %PC
  %716 = bitcast i8* %711 to double*
  %717 = load double, double* %716, align 1
  %718 = getelementptr inbounds i8, i8* %711, i64 8
  %719 = bitcast i8* %718 to i64*
  %720 = load i64, i64* %719, align 1
  %721 = inttoptr i64 %713 to double*
  %722 = load double, double* %721
  %723 = fsub double %717, %722
  %724 = bitcast i8* %710 to double*
  store double %723, double* %724, align 1, !tbaa !2451
  %725 = getelementptr inbounds i8, i8* %710, i64 8
  %726 = bitcast i8* %725 to i64*
  store i64 %720, i64* %726, align 1, !tbaa !2451
  %727 = bitcast %union.vec128_t* %XMM0 to i8*
  %728 = load i64, i64* %PC
  %729 = add i64 %728, 9
  store i64 %729, i64* %PC
  %730 = bitcast i8* %727 to double*
  %731 = load double, double* %730, align 1
  store double %731, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  br label %block_4010f4

block_400fb2:                                     ; preds = %block_4010f4, %block_400f70
  %MEMORY.2 = phi %struct.Memory* [ %2, %block_400f70 ], [ %MEMORY.1, %block_4010f4 ]
  %732 = load i64, i64* %RBP
  %733 = sub i64 %732, 20
  %734 = load i64, i64* %PC
  %735 = add i64 %734, 3
  store i64 %735, i64* %PC
  %736 = inttoptr i64 %733 to i32*
  %737 = load i32, i32* %736
  %738 = zext i32 %737 to i64
  store i64 %738, i64* %RAX, align 8, !tbaa !2428
  %739 = load i64, i64* %PC
  %740 = add i64 %739, 8
  store i64 %740, i64* %PC
  %741 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %742 = sext i16 %741 to i64
  %743 = and i64 %742, 4294967295
  store i64 %743, i64* %RCX, align 8, !tbaa !2428
  %744 = load i32, i32* %EAX
  %745 = zext i32 %744 to i64
  %746 = load i32, i32* %ECX
  %747 = zext i32 %746 to i64
  %748 = load i64, i64* %PC
  %749 = add i64 %748, 2
  store i64 %749, i64* %PC
  %750 = sub i32 %744, %746
  %751 = icmp ult i32 %744, %746
  %752 = zext i1 %751 to i8
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %752, i8* %753, align 1, !tbaa !2432
  %754 = and i32 %750, 255
  %755 = call i32 @llvm.ctpop.i32(i32 %754) #17
  %756 = trunc i32 %755 to i8
  %757 = and i8 %756, 1
  %758 = xor i8 %757, 1
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %758, i8* %759, align 1, !tbaa !2446
  %760 = xor i64 %747, %745
  %761 = trunc i64 %760 to i32
  %762 = xor i32 %761, %750
  %763 = lshr i32 %762, 4
  %764 = trunc i32 %763 to i8
  %765 = and i8 %764, 1
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %765, i8* %766, align 1, !tbaa !2447
  %767 = icmp eq i32 %750, 0
  %768 = zext i1 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %768, i8* %769, align 1, !tbaa !2448
  %770 = lshr i32 %750, 31
  %771 = trunc i32 %770 to i8
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %771, i8* %772, align 1, !tbaa !2449
  %773 = lshr i32 %744, 31
  %774 = lshr i32 %746, 31
  %775 = xor i32 %774, %773
  %776 = xor i32 %770, %773
  %777 = add nuw nsw i32 %776, %775
  %778 = icmp eq i32 %777, 2
  %779 = zext i1 %778 to i8
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %779, i8* %780, align 1, !tbaa !2450
  %781 = load i64, i64* %PC
  %782 = add i64 %781, 328
  %783 = load i64, i64* %PC
  %784 = add i64 %783, 6
  %785 = load i64, i64* %PC
  %786 = add i64 %785, 6
  store i64 %786, i64* %PC
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %788 = load i8, i8* %787, align 1, !tbaa !2448
  %789 = icmp eq i8 %788, 0
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %791 = load i8, i8* %790, align 1, !tbaa !2449
  %792 = icmp ne i8 %791, 0
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %794 = load i8, i8* %793, align 1, !tbaa !2450
  %795 = icmp ne i8 %794, 0
  %796 = xor i1 %792, %795
  %797 = xor i1 %796, true
  %798 = and i1 %789, %797
  %799 = zext i1 %798 to i8
  store i8 %799, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %801 = select i1 %798, i64 %782, i64 %784
  store i64 %801, i64* %800, align 8, !tbaa !2428
  %802 = load i8, i8* %BRANCH_TAKEN
  %803 = icmp eq i8 %802, 1
  br i1 %803, label %block_401107, label %block_400fc5

block_401107:                                     ; preds = %block_400fb2
  %804 = load i64, i64* %RBP
  %805 = sub i64 %804, 4
  %806 = load i64, i64* %PC
  %807 = add i64 %806, 3
  store i64 %807, i64* %PC
  %808 = inttoptr i64 %805 to i32*
  %809 = load i32, i32* %808
  %810 = zext i32 %809 to i64
  store i64 %810, i64* %RAX, align 8, !tbaa !2428
  %811 = load i64, i64* %RSP
  %812 = load i64, i64* %PC
  %813 = add i64 %812, 4
  store i64 %813, i64* %PC
  %814 = add i64 32, %811
  store i64 %814, i64* %RSP, align 8, !tbaa !2428
  %815 = icmp ult i64 %814, %811
  %816 = icmp ult i64 %814, 32
  %817 = or i1 %815, %816
  %818 = zext i1 %817 to i8
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %818, i8* %819, align 1, !tbaa !2432
  %820 = trunc i64 %814 to i32
  %821 = and i32 %820, 255
  %822 = call i32 @llvm.ctpop.i32(i32 %821) #17
  %823 = trunc i32 %822 to i8
  %824 = and i8 %823, 1
  %825 = xor i8 %824, 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %825, i8* %826, align 1, !tbaa !2446
  %827 = xor i64 32, %811
  %828 = xor i64 %827, %814
  %829 = lshr i64 %828, 4
  %830 = trunc i64 %829 to i8
  %831 = and i8 %830, 1
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %831, i8* %832, align 1, !tbaa !2447
  %833 = icmp eq i64 %814, 0
  %834 = zext i1 %833 to i8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %834, i8* %835, align 1, !tbaa !2448
  %836 = lshr i64 %814, 63
  %837 = trunc i64 %836 to i8
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %837, i8* %838, align 1, !tbaa !2449
  %839 = lshr i64 %811, 63
  %840 = xor i64 %836, %839
  %841 = add nuw nsw i64 %840, %836
  %842 = icmp eq i64 %841, 2
  %843 = zext i1 %842 to i8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %843, i8* %844, align 1, !tbaa !2450
  %845 = load i64, i64* %PC
  %846 = add i64 %845, 1
  store i64 %846, i64* %PC
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %848 = load i64, i64* %847, align 8, !tbaa !2428
  %849 = add i64 %848, 8
  %850 = inttoptr i64 %848 to i64*
  %851 = load i64, i64* %850
  store i64 %851, i64* %RBP, align 8, !tbaa !2428
  store i64 %849, i64* %847, align 8, !tbaa !2428
  %852 = load i64, i64* %PC
  %853 = add i64 %852, 1
  store i64 %853, i64* %PC
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %856 = load i64, i64* %855, align 8, !tbaa !2428
  %857 = inttoptr i64 %856 to i64*
  %858 = load i64, i64* %857
  store i64 %858, i64* %854, align 8, !tbaa !2428
  %859 = add i64 %856, 8
  store i64 %859, i64* %855, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.2

block_400fc5:                                     ; preds = %block_400fb2
  %860 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %861 = load i64, i64* %PC
  %862 = add i64 %861, 8
  store i64 %862, i64* %PC
  %863 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015f0__rodata_type* @seg_4015f0__rodata to i64), i64 104) to double*)
  %864 = bitcast i8* %860 to double*
  store double %863, double* %864, align 1, !tbaa !2451
  %865 = getelementptr inbounds i8, i8* %860, i64 8
  %866 = bitcast i8* %865 to double*
  store double 0.000000e+00, double* %866, align 1, !tbaa !2451
  %867 = load i64, i64* %PC
  %868 = add i64 %867, 10
  store i64 %868, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %869 = load i64, i64* %RBP
  %870 = sub i64 %869, 20
  %871 = load i64, i64* %PC
  %872 = add i64 %871, 4
  store i64 %872, i64* %PC
  %873 = inttoptr i64 %870 to i32*
  %874 = load i32, i32* %873
  %875 = sext i32 %874 to i64
  store i64 %875, i64* %RCX, align 8, !tbaa !2428
  %876 = load i64, i64* %RCX
  %877 = load i64, i64* %PC
  %878 = add i64 %877, 4
  store i64 %878, i64* %PC
  %879 = sext i64 %876 to i128
  %880 = and i128 %879, -18446744073709551616
  %881 = zext i64 %876 to i128
  %882 = or i128 %880, %881
  %883 = mul nsw i128 40, %882
  %884 = trunc i128 %883 to i64
  store i64 %884, i64* %RCX, align 8, !tbaa !2428
  %885 = sext i64 %884 to i128
  %886 = icmp ne i128 %885, %883
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %887, i8* %888, align 1, !tbaa !2432
  %889 = trunc i128 %883 to i32
  %890 = and i32 %889, 255
  %891 = call i32 @llvm.ctpop.i32(i32 %890) #17
  %892 = trunc i32 %891 to i8
  %893 = and i8 %892, 1
  %894 = xor i8 %893, 1
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %894, i8* %895, align 1, !tbaa !2446
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %896, align 1, !tbaa !2447
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %897, align 1, !tbaa !2448
  %898 = lshr i64 %884, 63
  %899 = trunc i64 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %899, i8* %900, align 1, !tbaa !2449
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %887, i8* %901, align 1, !tbaa !2450
  %902 = load i64, i64* %RAX
  %903 = load i64, i64* %PC
  %904 = add i64 %903, 3
  store i64 %904, i64* %PC
  store i64 %902, i64* %RDX, align 8, !tbaa !2428
  %905 = load i64, i64* %RDX
  %906 = load i64, i64* %RCX
  %907 = load i64, i64* %PC
  %908 = add i64 %907, 3
  store i64 %908, i64* %PC
  %909 = add i64 %906, %905
  store i64 %909, i64* %RDX, align 8, !tbaa !2428
  %910 = icmp ult i64 %909, %905
  %911 = icmp ult i64 %909, %906
  %912 = or i1 %910, %911
  %913 = zext i1 %912 to i8
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %913, i8* %914, align 1, !tbaa !2432
  %915 = trunc i64 %909 to i32
  %916 = and i32 %915, 255
  %917 = call i32 @llvm.ctpop.i32(i32 %916) #17
  %918 = trunc i32 %917 to i8
  %919 = and i8 %918, 1
  %920 = xor i8 %919, 1
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %920, i8* %921, align 1, !tbaa !2446
  %922 = xor i64 %906, %905
  %923 = xor i64 %922, %909
  %924 = lshr i64 %923, 4
  %925 = trunc i64 %924 to i8
  %926 = and i8 %925, 1
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %926, i8* %927, align 1, !tbaa !2447
  %928 = icmp eq i64 %909, 0
  %929 = zext i1 %928 to i8
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %929, i8* %930, align 1, !tbaa !2448
  %931 = lshr i64 %909, 63
  %932 = trunc i64 %931 to i8
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %932, i8* %933, align 1, !tbaa !2449
  %934 = lshr i64 %905, 63
  %935 = lshr i64 %906, 63
  %936 = xor i64 %931, %934
  %937 = xor i64 %931, %935
  %938 = add nuw nsw i64 %936, %937
  %939 = icmp eq i64 %938, 2
  %940 = zext i1 %939 to i8
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %940, i8* %941, align 1, !tbaa !2450
  %942 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %943 = load i64, i64* %RDX
  %944 = add i64 %943, 8
  %945 = load i64, i64* %PC
  %946 = add i64 %945, 5
  store i64 %946, i64* %PC
  %947 = inttoptr i64 %944 to double*
  %948 = load double, double* %947
  %949 = bitcast i8* %942 to double*
  store double %948, double* %949, align 1, !tbaa !2451
  %950 = getelementptr inbounds i8, i8* %942, i64 8
  %951 = bitcast i8* %950 to double*
  store double 0.000000e+00, double* %951, align 1, !tbaa !2451
  %952 = bitcast %union.vec128_t* %XMM1 to i8*
  %953 = load i64, i64* %PC
  %954 = add i64 %953, 9
  store i64 %954, i64* %PC
  %955 = bitcast i8* %952 to double*
  %956 = load double, double* %955, align 1
  store double %956, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %957 = load i64, i64* %RBP
  %958 = sub i64 %957, 20
  %959 = load i64, i64* %PC
  %960 = add i64 %959, 4
  store i64 %960, i64* %PC
  %961 = inttoptr i64 %958 to i32*
  %962 = load i32, i32* %961
  %963 = sext i32 %962 to i64
  store i64 %963, i64* %RCX, align 8, !tbaa !2428
  %964 = load i64, i64* %RCX
  %965 = load i64, i64* %PC
  %966 = add i64 %965, 4
  store i64 %966, i64* %PC
  %967 = sext i64 %964 to i128
  %968 = and i128 %967, -18446744073709551616
  %969 = zext i64 %964 to i128
  %970 = or i128 %968, %969
  %971 = mul nsw i128 40, %970
  %972 = trunc i128 %971 to i64
  store i64 %972, i64* %RCX, align 8, !tbaa !2428
  %973 = sext i64 %972 to i128
  %974 = icmp ne i128 %973, %971
  %975 = zext i1 %974 to i8
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %975, i8* %976, align 1, !tbaa !2432
  %977 = trunc i128 %971 to i32
  %978 = and i32 %977, 255
  %979 = call i32 @llvm.ctpop.i32(i32 %978) #17
  %980 = trunc i32 %979 to i8
  %981 = and i8 %980, 1
  %982 = xor i8 %981, 1
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %982, i8* %983, align 1, !tbaa !2446
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %984, align 1, !tbaa !2447
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %985, align 1, !tbaa !2448
  %986 = lshr i64 %972, 63
  %987 = trunc i64 %986 to i8
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %987, i8* %988, align 1, !tbaa !2449
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %975, i8* %989, align 1, !tbaa !2450
  %990 = load i64, i64* %RAX
  %991 = load i64, i64* %RCX
  %992 = load i64, i64* %PC
  %993 = add i64 %992, 3
  store i64 %993, i64* %PC
  %994 = add i64 %991, %990
  store i64 %994, i64* %RAX, align 8, !tbaa !2428
  %995 = icmp ult i64 %994, %990
  %996 = icmp ult i64 %994, %991
  %997 = or i1 %995, %996
  %998 = zext i1 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %998, i8* %999, align 1, !tbaa !2432
  %1000 = trunc i64 %994 to i32
  %1001 = and i32 %1000, 255
  %1002 = call i32 @llvm.ctpop.i32(i32 %1001) #17
  %1003 = trunc i32 %1002 to i8
  %1004 = and i8 %1003, 1
  %1005 = xor i8 %1004, 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1005, i8* %1006, align 1, !tbaa !2446
  %1007 = xor i64 %991, %990
  %1008 = xor i64 %1007, %994
  %1009 = lshr i64 %1008, 4
  %1010 = trunc i64 %1009 to i8
  %1011 = and i8 %1010, 1
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1011, i8* %1012, align 1, !tbaa !2447
  %1013 = icmp eq i64 %994, 0
  %1014 = zext i1 %1013 to i8
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1014, i8* %1015, align 1, !tbaa !2448
  %1016 = lshr i64 %994, 63
  %1017 = trunc i64 %1016 to i8
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1017, i8* %1018, align 1, !tbaa !2449
  %1019 = lshr i64 %990, 63
  %1020 = lshr i64 %991, 63
  %1021 = xor i64 %1016, %1019
  %1022 = xor i64 %1016, %1020
  %1023 = add nuw nsw i64 %1021, %1022
  %1024 = icmp eq i64 %1023, 2
  %1025 = zext i1 %1024 to i8
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1025, i8* %1026, align 1, !tbaa !2450
  %1027 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1028 = load i64, i64* %RAX
  %1029 = add i64 %1028, 16
  %1030 = load i64, i64* %PC
  %1031 = add i64 %1030, 5
  store i64 %1031, i64* %PC
  %1032 = inttoptr i64 %1029 to double*
  %1033 = load double, double* %1032
  %1034 = bitcast i8* %1027 to double*
  store double %1033, double* %1034, align 1, !tbaa !2451
  %1035 = getelementptr inbounds i8, i8* %1027, i64 8
  %1036 = bitcast i8* %1035 to double*
  store double 0.000000e+00, double* %1036, align 1, !tbaa !2451
  %1037 = bitcast %union.vec128_t* %XMM1 to i8*
  %1038 = load i64, i64* %PC
  %1039 = add i64 %1038, 9
  store i64 %1039, i64* %PC
  %1040 = bitcast i8* %1037 to double*
  %1041 = load double, double* %1040, align 1
  store double %1041, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %1042 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1043 = load i64, i64* %PC
  %1044 = add i64 %1043, 9
  store i64 %1044, i64* %PC
  %1045 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %1046 = bitcast i8* %1042 to double*
  store double %1045, double* %1046, align 1, !tbaa !2451
  %1047 = getelementptr inbounds i8, i8* %1042, i64 8
  %1048 = bitcast i8* %1047 to double*
  store double 0.000000e+00, double* %1048, align 1, !tbaa !2451
  %1049 = bitcast %union.vec128_t* %XMM1 to i8*
  %1050 = bitcast %union.vec128_t* %XMM0 to i8*
  %1051 = load i64, i64* %PC
  %1052 = add i64 %1051, 4
  store i64 %1052, i64* %PC
  %1053 = bitcast i8* %1049 to double*
  %1054 = load double, double* %1053, align 1
  %1055 = bitcast i8* %1050 to double*
  %1056 = load double, double* %1055, align 1
  %1057 = fcmp uno double %1054, %1056
  br i1 %1057, label %1058, label %1070

; <label>:1058:                                   ; preds = %block_400fc5
  %1059 = fadd double %1054, %1056
  %1060 = bitcast double %1059 to i64
  %1061 = and i64 %1060, 9221120237041090560
  %1062 = icmp eq i64 %1061, 9218868437227405312
  %1063 = and i64 %1060, 2251799813685247
  %1064 = icmp ne i64 %1063, 0
  %1065 = and i1 %1062, %1064
  br i1 %1065, label %1066, label %1076

; <label>:1066:                                   ; preds = %1058
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1068 = load i64, i64* %1067, align 8, !tbaa !2428
  %1069 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1068, %struct.Memory* %MEMORY.2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:1070:                                   ; preds = %block_400fc5
  %1071 = fcmp ogt double %1054, %1056
  br i1 %1071, label %1076, label %1072

; <label>:1072:                                   ; preds = %1070
  %1073 = fcmp olt double %1054, %1056
  br i1 %1073, label %1076, label %1074

; <label>:1074:                                   ; preds = %1072
  %1075 = fcmp oeq double %1054, %1056
  br i1 %1075, label %1076, label %1083

; <label>:1076:                                   ; preds = %1074, %1072, %1070, %1058
  %1077 = phi i8 [ 0, %1070 ], [ 0, %1072 ], [ 1, %1074 ], [ 1, %1058 ]
  %1078 = phi i8 [ 0, %1070 ], [ 0, %1072 ], [ 0, %1074 ], [ 1, %1058 ]
  %1079 = phi i8 [ 0, %1070 ], [ 1, %1072 ], [ 0, %1074 ], [ 1, %1058 ]
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1077, i8* %1080, align 1, !tbaa !2453
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1078, i8* %1081, align 1, !tbaa !2453
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1079, i8* %1082, align 1, !tbaa !2453
  br label %1083

; <label>:1083:                                   ; preds = %1076, %1074
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1084, align 1, !tbaa !2453
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1085, align 1, !tbaa !2453
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1086, align 1, !tbaa !2453
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %1066, %1083
  %1087 = phi %struct.Memory* [ %1069, %1066 ], [ %MEMORY.2, %1083 ]
  %1088 = load i64, i64* %PC
  %1089 = add i64 %1088, 133
  %1090 = load i64, i64* %PC
  %1091 = add i64 %1090, 6
  %1092 = load i64, i64* %PC
  %1093 = add i64 %1092, 6
  store i64 %1093, i64* %PC
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1095 = load i8, i8* %1094, align 1, !tbaa !2432
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1097 = load i8, i8* %1096, align 1, !tbaa !2448
  %1098 = or i8 %1097, %1095
  %1099 = icmp ne i8 %1098, 0
  %1100 = zext i1 %1099 to i8
  store i8 %1100, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1102 = select i1 %1099, i64 %1089, i64 %1091
  store i64 %1102, i64* %1101, align 8, !tbaa !2428
  %1103 = load i8, i8* %BRANCH_TAKEN
  %1104 = icmp eq i8 %1103, 1
  br i1 %1104, label %block_40109e, label %block_40101f
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015e4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015e4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2446
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2447
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2448
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2449
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2450
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2432
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2446
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2447
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2448
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2449
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2450
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400650__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400650:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2432
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2446
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2448
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2449
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2450
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2447
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2432
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2446
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2450
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2447
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4015e0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401570___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602670___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
define %struct.Memory* @sub_4006c0_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4006c0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2432
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2446
  %50 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2447
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2448
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2449
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2450
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2453
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2453
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2453
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2453
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2453
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2453
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2453
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2453
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2453
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2453
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2453
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2453
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2432
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2446
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2447
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2448
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2449
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2450
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2453
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2453
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2453
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2453
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2453
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2453
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2448
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_4006f8, label %block_4006e3

block_4006fa:                                     ; preds = %block_4006ed
  %191 = load i64, i64* %RAX
  %192 = load i64, i64* %RAX
  %193 = add i64 %192, %191
  %194 = load i16, i16* %AX
  %195 = zext i16 %194 to i64
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 6
  store i64 %197, i64* %PC
  %198 = load i64, i64* %PC
  %199 = tail call %struct.Memory* @sub_400700___do_global_dtors_aux(%struct.State* %0, i64 %198, %struct.Memory* %2)
  ret %struct.Memory* %199

block_4006f5:                                     ; preds = %block_4006ed
  %200 = load i64, i64* %RAX
  %201 = load i32, i32* %EAX
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  br label %block_4006f8

block_4006ed:                                     ; preds = %block_4006e3
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 1
  store i64 %206, i64* %PC
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %208 = load i64, i64* %207, align 8, !tbaa !2428
  %209 = add i64 %208, 8
  %210 = inttoptr i64 %208 to i64*
  %211 = load i64, i64* %210
  store i64 %211, i64* %RBP, align 8, !tbaa !2428
  store i64 %209, i64* %207, align 8, !tbaa !2428
  %212 = load i64, i64* %PC
  %213 = add i64 %212, 5
  store i64 %213, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %214 = load i64, i64* %RAX
  %215 = load i64, i64* %PC
  %216 = add i64 %215, 2
  store i64 %216, i64* %PC
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %214, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  switch i64 %218, label %270 [
    i64 4196090, label %block_4006fa
    i64 4196085, label %block_4006f5
  ]

block_4006f8:                                     ; preds = %block_4006e3, %block_4006f5, %block_4006c0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4006c0 ], [ %2, %block_4006e3 ], [ %2, %block_4006f5 ]
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 1
  store i64 %220, i64* %PC
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %222 = load i64, i64* %221, align 8, !tbaa !2428
  %223 = add i64 %222, 8
  %224 = inttoptr i64 %222 to i64*
  %225 = load i64, i64* %224
  store i64 %225, i64* %RBP, align 8, !tbaa !2428
  store i64 %223, i64* %221, align 8, !tbaa !2428
  %226 = load i64, i64* %PC
  %227 = add i64 %226, 1
  store i64 %227, i64* %PC
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %230 = load i64, i64* %229, align 8, !tbaa !2428
  %231 = inttoptr i64 %230 to i64*
  %232 = load i64, i64* %231
  store i64 %232, i64* %228, align 8, !tbaa !2428
  %233 = add i64 %230, 8
  store i64 %233, i64* %229, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4006e3:                                     ; preds = %block_4006c0
  %234 = load i64, i64* %PC
  %235 = add i64 %234, 5
  store i64 %235, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %236 = load i64, i64* %RAX
  %237 = load i64, i64* %RAX
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 3
  store i64 %239, i64* %PC
  %240 = and i64 %237, %236
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %241, align 1, !tbaa !2432
  %242 = trunc i64 %240 to i32
  %243 = and i32 %242, 255
  %244 = call i32 @llvm.ctpop.i32(i32 %243) #17
  %245 = trunc i32 %244 to i8
  %246 = and i8 %245, 1
  %247 = xor i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %247, i8* %248, align 1, !tbaa !2446
  %249 = icmp eq i64 %240, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2448
  %252 = lshr i64 %240, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2449
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %255, align 1, !tbaa !2450
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %256, align 1, !tbaa !2447
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 13
  %259 = load i64, i64* %PC
  %260 = add i64 %259, 2
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 2
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %264 = load i8, i8* %263, align 1, !tbaa !2448
  store i8 %264, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %266 = icmp ne i8 %264, 0
  %267 = select i1 %266, i64 %258, i64 %260
  store i64 %267, i64* %265, align 8, !tbaa !2428
  %268 = load i8, i8* %BRANCH_TAKEN
  %269 = icmp eq i8 %268, 1
  br i1 %269, label %block_4006f8, label %block_4006ed

; <label>:270:                                    ; preds = %block_4006ed
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_400700___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400700:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2432
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2446
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2447
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2448
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2449
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2450
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2448
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_400720, label %block_400709

block_400720:                                     ; preds = %block_400700
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_400709:                                     ; preds = %block_400700
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_400690_deregister_tm_clones_renamed_(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_400730_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400730:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_4006c0_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
define %struct.Memory* @sub_400690_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400690:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %37 = icmp ult i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2432
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2446
  %47 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2447
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2448
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2449
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2450
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2448
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_4006b8, label %block_4006a1

block_4006b8:                                     ; preds = %block_4006a1, %block_4006b3, %block_400690
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400690 ], [ %2, %block_4006a1 ], [ %2, %block_4006b3 ]
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 1
  store i64 %90, i64* %PC
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %93 = load i64, i64* %92, align 8, !tbaa !2428
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94
  store i64 %95, i64* %91, align 8, !tbaa !2428
  %96 = add i64 %93, 8
  store i64 %96, i64* %92, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4006ba:                                     ; preds = %block_4006ab
  %97 = load i64, i64* %RAX
  %98 = load i64, i64* %RAX
  %99 = add i64 %98, %97
  %100 = load i16, i16* %AX
  %101 = zext i16 %100 to i64
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 6
  store i64 %103, i64* %PC
  %104 = load i64, i64* %PC
  %105 = tail call %struct.Memory* @sub_4006c0_register_tm_clones(%struct.State* %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_4006b3:                                     ; preds = %block_4006ab
  %106 = load i64, i64* %RAX
  %107 = load i64, i64* %RAX
  %108 = add i64 %107, %106
  %109 = load i32, i32* %EAX
  %110 = zext i32 %109 to i64
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 5
  store i64 %112, i64* %PC
  br label %block_4006b8

block_4006ab:                                     ; preds = %block_4006a1
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 5
  store i64 %121, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %122 = load i64, i64* %RAX
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %122, i64* %125, align 8, !tbaa !2428
  %126 = load i64, i64* %PC
  switch i64 %126, label %163 [
    i64 4196026, label %block_4006ba
    i64 4196019, label %block_4006b3
  ]

block_4006a1:                                     ; preds = %block_400690
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 5
  store i64 %128, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %129 = load i64, i64* %RAX
  %130 = load i64, i64* %RAX
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 3
  store i64 %132, i64* %PC
  %133 = and i64 %130, %129
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %134, align 1, !tbaa !2432
  %135 = trunc i64 %133 to i32
  %136 = and i32 %135, 255
  %137 = call i32 @llvm.ctpop.i32(i32 %136) #17
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 1
  %140 = xor i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %140, i8* %141, align 1, !tbaa !2446
  %142 = icmp eq i64 %133, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2448
  %145 = lshr i64 %133, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2449
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %148, align 1, !tbaa !2450
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %149, align 1, !tbaa !2447
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 15
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 2
  %154 = load i64, i64* %PC
  %155 = add i64 %154, 2
  store i64 %155, i64* %PC
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %157 = load i8, i8* %156, align 1, !tbaa !2448
  store i8 %157, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %159 = icmp ne i8 %157, 0
  %160 = select i1 %159, i64 %151, i64 %153
  store i64 %160, i64* %158, align 8, !tbaa !2428
  %161 = load i8, i8* %BRANCH_TAKEN
  %162 = icmp eq i8 %161, 1
  br i1 %162, label %block_4006b8, label %block_4006ab

; <label>:163:                                    ; preds = %block_4006ab
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_401570___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401570:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601de0__init_array_type* @seg_601de0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601de0__init_array_type* @seg_601de0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2432
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2446
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2447
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2448
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2449
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2450
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2432
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2446
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2447
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2448
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2449
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2450
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2453
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2453
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2453
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2453
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2453
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2453
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4092
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_4005a0__init_proc_renamed_(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2432
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2446
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2448
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2449
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2450
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2447
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2448
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_4015c6, label %block_4015a6

block_4015c6:                                     ; preds = %block_4015b0, %block_401570
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401570 ], [ %387, %block_4015b0 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2432
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2446
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2447
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2448
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2449
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2450
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4015a6:                                     ; preds = %block_401570
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2432
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2446
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2448
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2449
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2450
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2447
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_4015b0

block_4015b0:                                     ; preds = %block_4015b0, %block_4015a6
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_4015a6 ], [ %387, %block_4015b0 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2450
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2432
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2446
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2447
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2448
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2449
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2450
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2448
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2453
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_4015b0, label %block_4015c6
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400730_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400730;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400730_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400730_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400700___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400700;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400700___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400700___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_400620_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4005e0_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602678_strcmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026e0_sprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026a0_strlen(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602690_asin(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602668_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6026c8_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @tan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4015e0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015e0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4015e0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015e0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401570___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401570;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401570___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401570___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400740;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400740_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602670___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015e4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015e4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4005a0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4005a0__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4015e0___libc_csu_fini()
  ret void
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401570___libc_csu_init()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { alwaysinline nobuiltin nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2430, i64 2065}
!2433 = !{!"_ZTS5State", !2430, i64 16, !2434, i64 2064, !2430, i64 2080, !2435, i64 2088, !2437, i64 2112, !2439, i64 2208, !2440, i64 2480, !2441, i64 2608, !2442, i64 2736, !2430, i64 2760, !2430, i64 2768, !2443, i64 3280}
!2434 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2435 = !{!"_ZTS8Segments", !2436, i64 0, !2430, i64 2, !2436, i64 4, !2430, i64 6, !2436, i64 8, !2430, i64 10, !2436, i64 12, !2430, i64 14, !2436, i64 16, !2430, i64 18, !2436, i64 20, !2430, i64 22}
!2436 = !{!"short", !2430, i64 0}
!2437 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88}
!2438 = !{!"_ZTS3Reg", !2430, i64 0}
!2439 = !{!"_ZTS3GPR", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88, !2429, i64 96, !2438, i64 104, !2429, i64 112, !2438, i64 120, !2429, i64 128, !2438, i64 136, !2429, i64 144, !2438, i64 152, !2429, i64 160, !2438, i64 168, !2429, i64 176, !2438, i64 184, !2429, i64 192, !2438, i64 200, !2429, i64 208, !2438, i64 216, !2429, i64 224, !2438, i64 232, !2429, i64 240, !2438, i64 248, !2429, i64 256, !2438, i64 264}
!2440 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2441 = !{!"_ZTS3MMX", !2430, i64 0}
!2442 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2443 = !{!"_ZTS13SegmentCaches", !2444, i64 0, !2444, i64 16, !2444, i64 32, !2444, i64 48, !2444, i64 64, !2444, i64 80}
!2444 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2445, i64 8, !2445, i64 12}
!2445 = !{!"int", !2430, i64 0}
!2446 = !{!2433, !2430, i64 2067}
!2447 = !{!2433, !2430, i64 2069}
!2448 = !{!2433, !2430, i64 2071}
!2449 = !{!2433, !2430, i64 2073}
!2450 = !{!2433, !2430, i64 2077}
!2451 = !{!2452, !2452, i64 0}
!2452 = !{!"double", !2430, i64 0}
!2453 = !{!2430, !2430, i64 0}
!2454 = !{!2455, !2455, i64 0}
!2455 = !{!"float", !2430, i64 0}
!2456 = !{!2457, !2459}
!2457 = distinct !{!2457, !2458, !"ext_400620_sin: argument 0"}
!2458 = distinct !{!2458, !"ext_400620_sin"}
!2459 = distinct !{!2459, !2458, !"ext_400620_sin: argument 1"}
!2460 = !{!2457}
!2461 = !{!2459}
!2462 = !{!2463, !2465}
!2463 = distinct !{!2463, !2464, !"ext_400620_sin: argument 0"}
!2464 = distinct !{!2464, !"ext_400620_sin"}
!2465 = distinct !{!2465, !2464, !"ext_400620_sin: argument 1"}
!2466 = !{!2463}
!2467 = !{!2465}
!2468 = !{!2436, !2436, i64 0}
!2469 = !{!2445, !2445, i64 0}
!2470 = !{!2471, !2473}
!2471 = distinct !{!2471, !2472, !"ext_400620_sin: argument 0"}
!2472 = distinct !{!2472, !"ext_400620_sin"}
!2473 = distinct !{!2473, !2472, !"ext_400620_sin: argument 1"}
!2474 = !{!2471}
!2475 = !{!2473}
!2476 = !{!2477, !2479}
!2477 = distinct !{!2477, !2478, !"ext_400620_sin: argument 0"}
!2478 = distinct !{!2478, !"ext_400620_sin"}
!2479 = distinct !{!2479, !2478, !"ext_400620_sin: argument 1"}
!2480 = !{!2477}
!2481 = !{!2479}
!2482 = !{!2483, !2485}
!2483 = distinct !{!2483, !2484, !"ext_6026c8_tan: argument 0"}
!2484 = distinct !{!2484, !"ext_6026c8_tan"}
!2485 = distinct !{!2485, !2484, !"ext_6026c8_tan: argument 1"}
!2486 = !{!2483}
!2487 = !{!2485}
!2488 = !{!2489, !2491}
!2489 = distinct !{!2489, !2490, !"ext_400620_sin: argument 0"}
!2490 = distinct !{!2490, !"ext_400620_sin"}
!2491 = distinct !{!2491, !2490, !"ext_400620_sin: argument 1"}
!2492 = !{!2489}
!2493 = !{!2491}
!2494 = !{!2495, !2497}
!2495 = distinct !{!2495, !2496, !"ext_400620_sin: argument 0"}
!2496 = distinct !{!2496, !"ext_400620_sin"}
!2497 = distinct !{!2497, !2496, !"ext_400620_sin: argument 1"}
!2498 = !{!2495}
!2499 = !{!2497}
!2500 = !{!2501, !2503}
!2501 = distinct !{!2501, !2502, !"ext_602668_cos: argument 0"}
!2502 = distinct !{!2502, !"ext_602668_cos"}
!2503 = distinct !{!2503, !2502, !"ext_602668_cos: argument 1"}
!2504 = !{!2501}
!2505 = !{!2503}
!2506 = !{!2507, !2509}
!2507 = distinct !{!2507, !2508, !"ext_602668_cos: argument 0"}
!2508 = distinct !{!2508, !"ext_602668_cos"}
!2509 = distinct !{!2509, !2508, !"ext_602668_cos: argument 1"}
!2510 = !{!2507}
!2511 = !{!2509}
