; ModuleID = 'binary/test.mcsema.calls_renamed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400560__init_type = type <{ [23 x i8] }>
%seg_400580__plt_type = type <{ [144 x i8] }>
%seg_400610__text_type = type <{ [3986 x i8] }>
%seg_4015a4__fini_type = type <{ [9 x i8] }>
%seg_4015b0__rodata_type = type <{ [120 x i8], [54 x i8], [58 x i8], [56 x i8], [60 x i8], [67 x i8], [24 x i8], [13 x i8], [13 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [33 x i8], [17 x i8], [17 x i8], [13 x i8], [3 x i8], [2 x i8], [48 x i8], [24 x i8], [56 x i8], [56 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8] }>
%seg_401a6c__eh_frame_hdr_type = type <{ [76 x i8] }>
%seg_401ab8__eh_frame_type = type <{ [312 x i8] }>
%seg_601df0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602060__data_type = type <{ [16 x i8] }>
%niter_type = type <{ [16 x i8], [128 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%__bss_start_type = type <{ [16 x i8], [72 x i8], [8 x i8], [16 x i8], [400 x i8], [8 x i8], [8 x i8], [8 x i8], [24 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [640 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8] }>
%itercount_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400560__init = internal constant %seg_400560__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05\8D\1A \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_400580__plt = internal constant %seg_400580__plt_type <{ [144 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%\82\1A \00\00\00\00\00\00\00\00\00\00\00\FF%z\1A \00\00\00\00\00\00\00\00\00\00\00\FF%r\1A \00\00\00\00\00\00\00\00\00\00\00\FF%j\1A \00\00\00\00\00\00\00\00\00\00\00\FF%b\1A \00\00\00\00\00\00\00\00\00\00\00\FF%Z\1A \00\00\00\00\00\00\00\00\00\00\00\FF%R\1A \00\00\00\00\00\00\00\00\00\00\00\FF%J\1A \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400610__text = internal constant %seg_400610__text_type <{ [3986 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\A0\15@\00H\C7\C10\15@\00H\C7\C7\00\07@\00\FF\15\B6\19 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8@!`\00H=@!`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF@!`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE@!`\00UH\81\EE@!`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF@!`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=y\1A \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05g\1A \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC\C0\00\00\00\F2\0F\10\05\A5\0E\00\00\F2\0F\10\0D\A5\0E\00\00\F2\0F\10\15\A5\0E\00\00\F2\0F\10\1D\A5\0E\00\00\F2\0F\10%\A5\0E\00\00\F2\0F\10-\A5\0E\00\00\F2\0F\105\A5\0E\00\00\F2\0F\10=\A5\0E\00\00\F2D\0F\10\05\A4\0E\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0\F2D\0F\11\04%X!`\00\F2\0F\11<%`!`\00\F2\0F\114%h!`\00\F2\0F\11,%p!`\00\F2\0F\11$%x!`\00\F2\0F\11\1C%\80!`\00\F2\0F\11\14%\88!`\00\F2\0F\11\0C%\90!`\00\C7\04%p `\00@B\0F\00\F2\0F\11\04%\98!`\00f\C7\04%\A0!`\00\04\00\C7E\EC\00\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8Dx\00\00\00\C7E\E8\00\00\00\00\83}\E8\04\0F\8DT\00\00\00H\B8\B0!`\00\00\00\00\00H\B9\80 `\00\00\00\00\00HcU\ECH\C1\E2\05H\01\D1HcU\E8\F2\0F\10\04\D1\8Bu\EC\83\C6\01Hc\CEHk\C9(H\01\C8\8Bu\E8\83\C6\01Hc\CE\F2\0F\11\04\C8\8BE\E8\83\C0\01\89E\E8\E9\A2\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9u\FF\FF\FFH\BF(\16@\00\00\00\00\00\B0\00\E84\FD\FF\FFH\BF^\16@\00\00\00\00\00\8B4%p `\00\89E\CC\B0\00\E8\19\FD\FF\FFH\BF\98\16@\00\00\00\00\00\F2\0F\10\05g\0D\00\00\8B4%p `\00\F2\0F*\CE\F2\0F^\C8\0F(\C1\89E\C8\B0\01\E8\EB\FC\FF\FFH\BF\D0\16@\00\00\00\00\00\89E\C4\B0\00\E8\D7\FC\FF\FFH\BF\0C\17@\00\00\00\00\00\89E\C0\B0\00\E8\C3\FC\FF\FF\C7\04%P&`\00\00\00\00\00\89E\BC\8B\04%P&`\00;\04%p `\00\0F\8D#\02\00\00f\C7\04%@#`\00\00\00\0F\BF\04%@#`\00\83\F8\01\0F\8F\86\00\00\00\BF\04\00\00\00\F2\0F\10\05\F9\0C\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8\F4\05\00\00H\B9P#`\00\00\00\00\00\F2\0F\10\04%H#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\89\CEH\01\D6\F2\0F\11\06\F2\0F\10\04%p#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\01\D1\F2\0F\11A\08\89E\B8f\8B\04%@#`\00f\83\C0\01f\89\04%@#`\00\E9i\FF\FF\FF\BF\03\00\00\00\F2\0F\10\05s\0C\00\00f\C7\04%@#`\00\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8d\05\00\00\BF\06\00\00\00\F2\0F\10\05G\0C\00\00\F2\0F\10\0C%H#`\00\F2\0F\11M\D0\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\89E\B4\E81\05\00\00\F2\0F\10\05\01\0C\00\00\F2\0F\10\0D\01\0C\00\00\F2\0F\10\15\01\0C\00\00\F2\0F\10\1C%H#`\00\F2\0F\11]\D8\F2\0F\10\1C%`#`\00\F2\0F\5C\1C%P#`\00\F2\0F\11\1C%x#`\00\F2\0F\10\1C%`#`\00\F2\0FY\1C%h#`\00\F2\0F\10$%X#`\00\F2\0F\11E\A8\0F(\C4\89E\A4\F2\0F\11]\98\F2\0F\11M\90\F2\0F\11U\88\E8f\FB\FF\FF\F2\0FY\04%P#`\00\F2\0F\10M\98\F2\0F^\C8\F2\0F\10E\88\F2\0F\5C\C1\F2\0F\11\04%\80#`\00\F2\0F\10E\D8\F2\0F\5CE\D0\F2\0F\11\04%\88#`\00\F2\0F\10\04%X#`\00\E8!\FB\FF\FF\F2\0F\11\04%\90#`\00\F2\0F\10\04%\90#`\00\F2\0FY\04%\90#`\00\F2\0F\10M\90\F2\0F^\C8\F2\0F\11\0C%\90#`\00\F2\0F\10E\A8\F2\0F\11\04%\98#`\00\F2\0F\10\0C%\90#`\00\F2\0F\11\0C%\A0#`\00\8B\04%P&`\00\83\C0\01\89\04%P&`\00\E9\C9\FD\FF\FFH\BF\B0#`\00\00\00\00\00H\BEO\17@\00\00\00\00\00H\BAg\17@\00\00\00\00\00\F2\0F\10\04%P#`\00\F2\0F\10\0C%X#`\00\B0\02\E8\A7\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\83\C2PH\BEO\17@\00\00\00\00\00H\BFt\17@\00\00\00\00\00\F2\0F\10\04%`#`\00\F2\0F\10\0C%h#`\00H\89}\80H\89\D7H\8BU\80\89\85|\FF\FF\FF\B0\02\E8[\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\A0\00\00\00H\BE\81\17@\00\00\00\00\00\F2\0F\10\04%x#`\00H\89\D7\89\85x\FF\FF\FF\B0\01\E8'\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\F0\00\00\00H\BE\B1\17@\00\00\00\00\00\F2\0F\10\04%\90#`\00H\89\D7\89\85t\FF\FF\FF\B0\01\E8\F3\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2@\01\00\00H\BE\E1\17@\00\00\00\00\00\F2\0F\10\04%\80#`\00H\89\D7\89\85p\FF\FF\FF\B0\01\E8\BF\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\90\01\00\00H\BE\B1\17@\00\00\00\00\00\F2\0F\10\04%\98#`\00H\89\D7\89\85l\FF\FF\FF\B0\01\E8\8B\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\E0\01\00\00H\BE\11\18@\00\00\00\00\00\F2\0F\10\04%\88#`\00H\89\D7\89\85h\FF\FF\FF\B0\01\E8W\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C20\02\00\00H\BE\B1\17@\00\00\00\00\00\F2\0F\10\04%\A0#`\00H\89\D7\89\85d\FF\FF\FF\B0\01\E8#\F9\FF\FF\C7E\E0\00\00\00\00\C7E\EC\00\00\00\00\89\85`\FF\FF\FF\83}\EC\08\0F\8D\BF\01\00\00H\B8\B0#`\00\00\00\00\00HcM\ECHk\C9PH\01\C8HcM\ECH\8B4\CD\00!`\00H\89\C7\E8\9C\F8\FF\FF\83\F8\00\0F\84z\01\00\00H\BFA\18@\00\00\00\00\00\8BE\EC\83\C0\01\89\C6\B0\00\E8Z\F8\FF\FFH\BFb\18@\00\00\00\00\00HcM\ECH\8B4\CD\00!`\00\89\85\5C\FF\FF\FF\B0\00\E87\F8\FF\FFH\BFs\18@\00\00\00\00\00H\B9\B0#`\00\00\00\00\00Hcu\ECHk\F6PH\01\F1H\89\CE\89\85X\FF\FF\FF\B0\00\E8\08\F8\FF\FFH\BF\84\18@\00\00\00\00\00\89\85T\FF\FF\FF\B0\00\E8\F1\F7\FF\FFHcM\ECH\8B<\CD\00!`\00\89\85P\FF\FF\FF\E8\CA\F7\FF\FF\89\C2\89U\E4\C7E\E8\00\00\00\00\8BE\E8;E\E4\0F\8D\B2\00\00\00H\BF\91\18@\00\00\00\00\00\B8^\00\00\00\B9 \00\00\00H\BA\B0#`\00\00\00\00\00Hcu\ECH\8B4\F5\00!`\00LcE\E8F\0F\BE\0C\06Hcu\ECHk\F6PH\01\F2Hcu\E8D\0F\BE\142E9\D1\0FD\C1\89\C6\B0\00\E8l\F7\FF\FFH\BA\B0#`\00\00\00\00\00Hc}\ECH\8B<\FD\00!`\00LcE\E8B\0F\BE\0C\07Hc}\ECHk\FFPH\01\FAHc}\E8\0F\BE4:9\F1\89\85L\FF\FF\FF\0F\84\09\00\00\00\8BE\E0\83\C0\01\89E\E0\E9\00\00\00\00\8BE\E8\83\C0\01\89E\E8\E9B\FF\FF\FFH\BF\96\16@\00\00\00\00\00\B0\00\E8\FF\F6\FF\FF\89\85H\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E97\FE\FF\FF\83}\E0\00\0F\8E>\00\00\00H\BF\96\18@\00\00\00\00\00H\B8\97\16@\00\00\00\00\00H\B9\94\18@\00\00\00\00\00\8Bu\E0\83}\E0\01H\0FO\C1H\89\C2\B0\00\E8\A9\F6\FF\FF\89\85D\FF\FF\FF\E9\17\00\00\00H\BF\C6\18@\00\00\00\00\00\B0\00\E8\8D\F6\FF\FF\89\85@\FF\FF\FF1\C0H\81\C4\C0\00\00\00]\C3fff.\0F\1F\84\00\00\00\00\00UH\89\E5H\83\EC \F2\0F\10\0D\D8\06\00\00\0FW\D2\89}\F8\F2\0F\11E\F0\F2\0F\11\14%H#`\00\F2\0F\10E\F0\F2\0F\11\04%0&`\00\F2\0F\11\0C%8&`\00\C7E\EC\01\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8FB\01\00\00\F2\0F\10\05\8B\06\00\00H\B8\B0!`\00\00\00\00\00HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10J\08\F2\0F\11\0C%@&`\00HcM\ECHk\C9(H\01\C8\F2\0F\10H\10\F2\0F\11\0C%H&`\00\F2\0F\10\0C%H&`\00f\0F.\C8\0F\86\7F\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\05'\06\00\00\F2\0F\10\0C%H&`\00\F2\0F\10\14%p!`\00HcM\F8\F2\0F\5C\14\CDP!`\00\F2\0F\10\1C%h!`\00\F2\0F\5C\1C%\80!`\00\F2\0F^\D3HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10Z\10\F2\0F\5C\D8HcM\ECHk\C9(H\01\C8\F2\0F^X\18\F2\0FY\D3\F2\0FX\CA\F2\0F\11\0C%H&`\00\E8m\00\00\00\F2\0F\10\04%H&`\00\F2\0F\11\04%8&`\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8D,\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\04%H#`\00HcM\ECHk\C9(H\01\C8\F2\0F\5C@ \F2\0F\11\04%H#`\00\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9\AB\FE\FF\FF\8BE\FCH\83\C4 ]\C3UH\89\E5H\81\EC\90\00\00\00f\83<%@#`\00\00\0F\84\81\01\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\0B\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9)\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0FY\04%p#`\00\F2\0F\11E\E8\0FW\C0\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FYM\E8\F2\0F\11M\E0\F2\0F\10\0C%p#`\00\F2\0F\11M\D8\F2\0F\10\0C%p#`\00\F2\0FXM\E8\F2\0F\5CM\E0\F2\0F\11\0C%p#`\00\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\17\00\00\00\F2\0F\10\04%H#`\00\F2\0FYE\D8\F2\0F\11\04%0&`\00\F2\0F\10\04%0&`\00\F2\0F^\04%p#`\00\F2\0F\11\04%H#`\00\E9\0F\03\00\00\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F^\0C%8&`\00\F2\0FY\C1\F2\0F\11\04%H#`\00\F2\0F\10\04%p#`\00\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FY\C1\F2\0F\11\04%p#`\00\E9\BA\02\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\94\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9?\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\C8\0F(\C1\E8\DF\F2\FF\FF\F2\0F\10M\C8\F2\0FY\C8\F2\0F\11M\E8\F2\0F\10E\E8\E8\D7\F2\FF\FF\F2\0F\11E\F8\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0FYE\E8\F2\0F\11E\E0\F2\0F\10\04%p#`\00\F2\0F\11E\D8\F2\0F\10\04%p#`\00\F2\0FXE\F8\F2\0F\10M\E0\F2\0F\11E\C0\0F(\C1\E8\88\F2\FF\FF\F2\0F\10\0D\B0\02\00\00\F2\0F\10U\C0\F2\0F\5C\D0\F2\0F\11\14%p#`\00\F2\0F\10E\D8\F2\0FXE\F8\F2\0F^\C1\F2\0F\11M\B8\E8F\F2\FF\FF\F2\0F\11E\D0\F2\0F\10E\B8\F2\0FY\04%@&`\00\F2\0FYE\D0\F2\0FYE\D0\F2\0F\11E\D0\F2\0F\10\04%@&`\00\F2\0F\10M\D8\F2\0FXM\F8\F2\0F\11E\B0\0F(\C1\E8\04\F2\FF\FF\F2\0F\10M\B0\F2\0FY\C8\F2\0F\10\04%p#`\00\F2\0F\11M\A8\E8\D8\F1\FF\FF\F2\0F\10\0D\18\02\00\00\F2\0F^\C8\F2\0F\10E\A8\F2\0FY\C1\F2\0FXE\D0\F2\0F\11\04%H#`\00\E9\05\01\00\00\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\A0\0F(\C1\E8\98\F1\FF\FF\F2\0F\10M\A0\F2\0FY\C8\0F(\C1\E8\97\F1\FF\FFH\B8\00\00\00\00\00\00\00\80fH\0F~\C1H1\C1fH\0Fn\C1\F2\0F\11E\F0\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F\10U\F0fH\0F~\D1H1\C1fH\0Fn\D1\F2\0F\11E\98\0F(\C2H\89E\90\F2\0F\11M\88\E8\01\F1\FF\FF\F2\0F\10M\88\F2\0FY\C8\F2\0F\10\04%8&`\00\F2\0F\10\14%p#`\00\F2\0F\11E\80\0F(\C2\F2\0F\11\8Dx\FF\FF\FF\E8\D1\F0\FF\FF\F2\0F\10M\80\F2\0FY\C8\F2\0F\10\85x\FF\FF\FF\F2\0F^\C1\F2\0F\10M\98\F2\0FY\C8\F2\0F\11\0C%H#`\00\F2\0F\10E\F0fH\0F~\C0H\8BM\90H1\C8fH\0Fn\C0\F2\0F\11\04%p#`\00H\81\C4\90\00\00\00]\C3f\90AWAVI\89\D7AUATL\8D%\AE\08 \00UH\8D-\AE\08 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\FF\EF\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4015a4__fini = internal constant %seg_4015a4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_4015b0__rodata = internal constant %seg_4015b0__rodata_type <{ [120 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\10@sh\91\ED\FC\00\AF@1\08\AC\1Cz\F4\B0@\D3Mb\10X\FD\B2@\DFO\8D\97\8E\95\B4@m\E7\FB\A9\F1\07\B7@\89A`\E5\D0\A2\B9@\AEG\E1z\F4\D5\BA@\00\00\00\00\00\C5\BD@\00\00\00\00\00@\8F@{\14\AEG\E1zd?\82\A0\ED\E2GF\18?\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00@", [54 x i8] c"Ready to begin John Walker's floating point accuracy\0A\00", [58 x i8] c"and performance benchmark.  %d iterations will be made.\0A\0A\00", [56 x i8] c"\0AMeasured run time in seconds should be divided by %.f\0A\00", [60 x i8] c"to normalise for reporting results.  For archival results,\0A\00", [67 x i8] c"adjust iteration count so the benchmark runs about five minutes.\0A\0A\00", [24 x i8] c"%15s   %21.11f  %14.11f\00", [13 x i8] c"Marginal ray\00", [13 x i8] c"Paraxial ray\00", [48 x i8] c"Longitudinal spherical aberration:      %16.11f\00", [48 x i8] c"    (Maximum permissible):              %16.11f\00", [48 x i8] c"Offense against sine condition (coma):  %16.11f\00", [48 x i8] c"Axial chromatic aberration:             %16.11f\00", [33 x i8] c"\0AError in results on line %d...\0A\00", [17 x i8] c"Expected:  \22%s\22\0A\00", [17 x i8] c"Received:  \22%s\22\0A\00", [13 x i8] c"(Errors)    \00", [3 x i8] c"%c\00", [2 x i8] c"s\00", [48 x i8] c"\0A%d error%s in results.  This is VERY SERIOUS.\0A\00", [24 x i8] c"\0ANo errors in results.\0A\00", [56 x i8] c"   Marginal ray          47.09479120920   0.04178472683\00", [56 x i8] c"   Paraxial ray          47.08372160249   0.04177864821\00", [57 x i8] c"Longitudinal spherical aberration:        -0.01106960671\00", [57 x i8] c"    (Maximum permissible):                 0.05306749907\00", [57 x i8] c"Offense against sine condition (coma):     0.00008954761\00", [57 x i8] c"    (Maximum permissible):                 0.00250000000\00", [57 x i8] c"Axial chromatic aberration:                0.00448229032\00" }>
@seg_401a6c__eh_frame_hdr = internal constant %seg_401a6c__eh_frame_hdr_type <{ [76 x i8] c"\01\1B\03;H\00\00\00\08\00\00\00\14\EB\FF\FF\A4\00\00\00\A4\EB\FF\FFd\00\00\00\D4\EB\FF\FF\90\00\00\00\94\EC\FF\FF\CC\00\00\00\C4\F4\FF\FF\E8\00\00\00d\F6\FF\FF\04\01\00\00\C4\FA\FF\FF$\01\00\004\FB\FF\FFl\01\00\00" }>
@seg_401ab8__eh_frame = internal constant %seg_401ab8__eh_frame_type <{ [312 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\EB\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\EB\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00h\EA\FF\FF\90\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\C0\EB\FF\FF$\08\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\D4\F3\FF\FF\A0\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\90\00\00\00X\F5\FF\FF^\04\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\B0\00\00\00\98\F9\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\F8\00\00\00\C0\F9\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601df0__init_array = internal global %seg_601df0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_4006f0_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_4006c0___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64)* @strlen to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), i64 ptrtoint (double (double)* @tan to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (i64 (i64)* @asin to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64) }>
@seg_602060__data = internal global %seg_602060__data_type zeroinitializer
@niter = global %niter_type <{ [16 x i8] c"\E8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"\CD\CC\CC\CC\CC\0C;@\80H\BF}\1D8\F8?\CD\CC\CC\CC\CC\CCO@\A4p=\0A\D7\A3\E0?\AEG\E1z\14\AE0\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00D\8Bl\E7\FB\A9\C1?\AEG\E1z\14\AE0\C0\06\12\14?\C6\DC\F9?\9A\99\99\99\99YB@R\B8\1E\85\EBQ\D8?fffff\86S\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 814), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 870), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 926), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 983), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 1040), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 1097), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 1154), i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 983) }>
@__bss_start = global %__bss_start_type zeroinitializer
@itercount = global %itercount_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4006f0_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4006c0___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4015a0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401530___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]

declare %struct.Memory* @sub_400560__init_proc_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400650_deregister_tm_clones_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_400f30_trace_line_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @sub_4010d0_transit_surface_renamed_(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @asin(i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_400560__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400560:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2432
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2446
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2447
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2448
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2449
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2450
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2432
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2446
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2450
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2447
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2448
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_400572, label %block_400570

block_400570:                                     ; preds = %block_400560
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_400572

block_400572:                                     ; preds = %block_400570, %block_400560
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400560 ], [ %92, %block_400570 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2432
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2446
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2447
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2448
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2449
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2450
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_400700_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400700:
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %AX = bitcast %union.anon* %12 to i16*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %EAX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %ECX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDX = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %ESI = bitcast %union.anon* %24 to i32*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %EDI = bitcast %union.anon* %27 to i32*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 19
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %R9D = bitcast %union.anon* %30 to i32*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 21
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %R10D = bitcast %union.anon* %33 to i32*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RAX = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 5
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RCX = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 7
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RDX = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 9
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %RSI = bitcast %union.anon* %45 to i64*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %47 = getelementptr inbounds %struct.GPR, %struct.GPR* %46, i32 0, i32 11
  %48 = getelementptr inbounds %struct.Reg, %struct.Reg* %47, i32 0, i32 0
  %RDI = bitcast %union.anon* %48 to i64*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.GPR, %struct.GPR* %49, i32 0, i32 13
  %51 = getelementptr inbounds %struct.Reg, %struct.Reg* %50, i32 0, i32 0
  %RSP = bitcast %union.anon* %51 to i64*
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %53 = getelementptr inbounds %struct.GPR, %struct.GPR* %52, i32 0, i32 15
  %54 = getelementptr inbounds %struct.Reg, %struct.Reg* %53, i32 0, i32 0
  %RBP = bitcast %union.anon* %54 to i64*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %R8 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %59 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %58, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %59 to %"class.std::bitset"*
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %61 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %60, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %61 to %"class.std::bitset"*
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %63 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %62, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %63 to %"class.std::bitset"*
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %65 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %64, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %65 to %"class.std::bitset"*
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %67 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %66, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %67 to %"class.std::bitset"*
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %69 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %68, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %69 to %"class.std::bitset"*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %73 to %"class.std::bitset"*
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %75 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %74, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %75 to %"class.std::bitset"*
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %77 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %76, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %77 to %union.vec128_t*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %79 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %78, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %79 to %union.vec128_t*
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %81 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %80, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %81 to %union.vec128_t*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %83 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %82, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %83 to %union.vec128_t*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %85 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %84, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %85 to %union.vec128_t*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %87 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %86, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %87 to %union.vec128_t*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %89 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %88, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %89 to %union.vec128_t*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %91 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %90, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %91 to %union.vec128_t*
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %93 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %92, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %93 to %union.vec128_t*
  %94 = load i64, i64* %RBP
  %95 = load i64, i64* %PC
  %96 = add i64 %95, 1
  store i64 %96, i64* %PC
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %98 = load i64, i64* %97, align 8, !tbaa !2428
  %99 = add i64 %98, -8
  %100 = inttoptr i64 %99 to i64*
  store i64 %94, i64* %100
  store i64 %99, i64* %97, align 8, !tbaa !2428
  %101 = load i64, i64* %RSP
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 3
  store i64 %103, i64* %PC
  store i64 %101, i64* %RBP, align 8, !tbaa !2428
  %104 = load i64, i64* %RSP
  %105 = load i64, i64* %PC
  %106 = add i64 %105, 7
  store i64 %106, i64* %PC
  %107 = sub i64 %104, 192
  store i64 %107, i64* %RSP, align 8, !tbaa !2428
  %108 = icmp ult i64 %104, 192
  %109 = zext i1 %108 to i8
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %109, i8* %110, align 1, !tbaa !2432
  %111 = trunc i64 %107 to i32
  %112 = and i32 %111, 255
  %113 = call i32 @llvm.ctpop.i32(i32 %112) #17
  %114 = trunc i32 %113 to i8
  %115 = and i8 %114, 1
  %116 = xor i8 %115, 1
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %116, i8* %117, align 1, !tbaa !2446
  %118 = xor i64 192, %104
  %119 = xor i64 %118, %107
  %120 = lshr i64 %119, 4
  %121 = trunc i64 %120 to i8
  %122 = and i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %122, i8* %123, align 1, !tbaa !2447
  %124 = icmp eq i64 %107, 0
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %125, i8* %126, align 1, !tbaa !2448
  %127 = lshr i64 %107, 63
  %128 = trunc i64 %127 to i8
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %128, i8* %129, align 1, !tbaa !2449
  %130 = lshr i64 %104, 63
  %131 = xor i64 %127, %130
  %132 = add nuw nsw i64 %131, %130
  %133 = icmp eq i64 %132, 2
  %134 = zext i1 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %134, i8* %135, align 1, !tbaa !2450
  %136 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 8
  store i64 %138, i64* %PC
  %139 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 8) to double*)
  %140 = bitcast i8* %136 to double*
  store double %139, double* %140, align 1, !tbaa !2452
  %141 = getelementptr inbounds i8, i8* %136, i64 8
  %142 = bitcast i8* %141 to double*
  store double 0.000000e+00, double* %142, align 1, !tbaa !2452
  %143 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 8
  store i64 %145, i64* %PC
  %146 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 16) to double*)
  %147 = bitcast i8* %143 to double*
  store double %146, double* %147, align 1, !tbaa !2452
  %148 = getelementptr inbounds i8, i8* %143, i64 8
  %149 = bitcast i8* %148 to double*
  store double 0.000000e+00, double* %149, align 1, !tbaa !2452
  %150 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %151 = load i64, i64* %PC
  %152 = add i64 %151, 8
  store i64 %152, i64* %PC
  %153 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 24) to double*)
  %154 = bitcast i8* %150 to double*
  store double %153, double* %154, align 1, !tbaa !2452
  %155 = getelementptr inbounds i8, i8* %150, i64 8
  %156 = bitcast i8* %155 to double*
  store double 0.000000e+00, double* %156, align 1, !tbaa !2452
  %157 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 8
  store i64 %159, i64* %PC
  %160 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 32) to double*)
  %161 = bitcast i8* %157 to double*
  store double %160, double* %161, align 1, !tbaa !2452
  %162 = getelementptr inbounds i8, i8* %157, i64 8
  %163 = bitcast i8* %162 to double*
  store double 0.000000e+00, double* %163, align 1, !tbaa !2452
  %164 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 8
  store i64 %166, i64* %PC
  %167 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 40) to double*)
  %168 = bitcast i8* %164 to double*
  store double %167, double* %168, align 1, !tbaa !2452
  %169 = getelementptr inbounds i8, i8* %164, i64 8
  %170 = bitcast i8* %169 to double*
  store double 0.000000e+00, double* %170, align 1, !tbaa !2452
  %171 = bitcast %"class.std::bitset"* %YMM5 to i8*
  %172 = load i64, i64* %PC
  %173 = add i64 %172, 8
  store i64 %173, i64* %PC
  %174 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 48) to double*)
  %175 = bitcast i8* %171 to double*
  store double %174, double* %175, align 1, !tbaa !2452
  %176 = getelementptr inbounds i8, i8* %171, i64 8
  %177 = bitcast i8* %176 to double*
  store double 0.000000e+00, double* %177, align 1, !tbaa !2452
  %178 = bitcast %"class.std::bitset"* %YMM6 to i8*
  %179 = load i64, i64* %PC
  %180 = add i64 %179, 8
  store i64 %180, i64* %PC
  %181 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 56) to double*)
  %182 = bitcast i8* %178 to double*
  store double %181, double* %182, align 1, !tbaa !2452
  %183 = getelementptr inbounds i8, i8* %178, i64 8
  %184 = bitcast i8* %183 to double*
  store double 0.000000e+00, double* %184, align 1, !tbaa !2452
  %185 = bitcast %"class.std::bitset"* %YMM7 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 8
  store i64 %187, i64* %PC
  %188 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 64) to double*)
  %189 = bitcast i8* %185 to double*
  store double %188, double* %189, align 1, !tbaa !2452
  %190 = getelementptr inbounds i8, i8* %185, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2452
  %192 = bitcast %"class.std::bitset"* %YMM8 to i8*
  %193 = load i64, i64* %PC
  %194 = add i64 %193, 9
  store i64 %194, i64* %PC
  %195 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 72) to double*)
  %196 = bitcast i8* %192 to double*
  store double %195, double* %196, align 1, !tbaa !2452
  %197 = getelementptr inbounds i8, i8* %192, i64 8
  %198 = bitcast i8* %197 to double*
  store double 0.000000e+00, double* %198, align 1, !tbaa !2452
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 4
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 7
  store i64 %202, i64* %PC
  %203 = inttoptr i64 %200 to i32*
  store i32 0, i32* %203
  %204 = load i64, i64* %RBP
  %205 = sub i64 %204, 8
  %206 = load i32, i32* %EDI
  %207 = zext i32 %206 to i64
  %208 = load i64, i64* %PC
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC
  %210 = inttoptr i64 %205 to i32*
  store i32 %206, i32* %210
  %211 = load i64, i64* %RBP
  %212 = sub i64 %211, 16
  %213 = load i64, i64* %RSI
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 4
  store i64 %215, i64* %PC
  %216 = inttoptr i64 %212 to i64*
  store i64 %213, i64* %216
  %217 = bitcast %union.vec128_t* %XMM8 to i8*
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 10
  store i64 %219, i64* %PC
  %220 = bitcast i8* %217 to double*
  %221 = load double, double* %220, align 1
  store double %221, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 24) to double*)
  %222 = bitcast %union.vec128_t* %XMM7 to i8*
  %223 = load i64, i64* %PC
  %224 = add i64 %223, 9
  store i64 %224, i64* %PC
  %225 = bitcast i8* %222 to double*
  %226 = load double, double* %225, align 1
  store double %226, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 32) to double*)
  %227 = bitcast %union.vec128_t* %XMM6 to i8*
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 9
  store i64 %229, i64* %PC
  %230 = bitcast i8* %227 to double*
  %231 = load double, double* %230, align 1
  store double %231, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %232 = bitcast %union.vec128_t* %XMM5 to i8*
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 9
  store i64 %234, i64* %PC
  %235 = bitcast i8* %232 to double*
  %236 = load double, double* %235, align 1
  store double %236, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %237 = bitcast %union.vec128_t* %XMM4 to i8*
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 9
  store i64 %239, i64* %PC
  %240 = bitcast i8* %237 to double*
  %241 = load double, double* %240, align 1
  store double %241, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 56) to double*)
  %242 = bitcast %union.vec128_t* %XMM3 to i8*
  %243 = load i64, i64* %PC
  %244 = add i64 %243, 9
  store i64 %244, i64* %PC
  %245 = bitcast i8* %242 to double*
  %246 = load double, double* %245, align 1
  store double %246, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %247 = bitcast %union.vec128_t* %XMM2 to i8*
  %248 = load i64, i64* %PC
  %249 = add i64 %248, 9
  store i64 %249, i64* %PC
  %250 = bitcast i8* %247 to double*
  %251 = load double, double* %250, align 1
  store double %251, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 72) to double*)
  %252 = bitcast %union.vec128_t* %XMM1 to i8*
  %253 = load i64, i64* %PC
  %254 = add i64 %253, 9
  store i64 %254, i64* %PC
  %255 = bitcast i8* %252 to double*
  %256 = load double, double* %255, align 1
  store double %256, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 80) to double*)
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 11
  store i64 %258, i64* %PC
  store i32 1000000, i32* bitcast (%niter_type* @niter to i32*)
  %259 = bitcast %union.vec128_t* %XMM0 to i8*
  %260 = load i64, i64* %PC
  %261 = add i64 %260, 9
  store i64 %261, i64* %PC
  %262 = bitcast i8* %259 to double*
  %263 = load double, double* %262, align 1
  store double %263, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %264 = load i64, i64* %PC
  %265 = add i64 %264, 10
  store i64 %265, i64* %PC
  store i16 4, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %266 = load i64, i64* %RBP
  %267 = sub i64 %266, 20
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 7
  store i64 %269, i64* %PC
  %270 = inttoptr i64 %267 to i32*
  store i32 0, i32* %270
  br label %block_4007d0

block_4008ff:                                     ; preds = %block_4008eb
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  br label %block_400909

block_400cfb:                                     ; preds = %block_400cf1
  %271 = load i64, i64* %PC
  %272 = add i64 %271, 10
  store i64 %272, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RAX, align 8, !tbaa !2428
  %273 = load i64, i64* %RBP
  %274 = sub i64 %273, 20
  %275 = load i64, i64* %PC
  %276 = add i64 %275, 4
  store i64 %276, i64* %PC
  %277 = inttoptr i64 %274 to i32*
  %278 = load i32, i32* %277
  %279 = sext i32 %278 to i64
  store i64 %279, i64* %RCX, align 8, !tbaa !2428
  %280 = load i64, i64* %RCX
  %281 = load i64, i64* %PC
  %282 = add i64 %281, 4
  store i64 %282, i64* %PC
  %283 = sext i64 %280 to i128
  %284 = and i128 %283, -18446744073709551616
  %285 = zext i64 %280 to i128
  %286 = or i128 %284, %285
  %287 = mul nsw i128 80, %286
  %288 = trunc i128 %287 to i64
  store i64 %288, i64* %RCX, align 8, !tbaa !2428
  %289 = sext i64 %288 to i128
  %290 = icmp ne i128 %289, %287
  %291 = zext i1 %290 to i8
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %291, i8* %292, align 1, !tbaa !2432
  %293 = trunc i128 %287 to i32
  %294 = and i32 %293, 255
  %295 = call i32 @llvm.ctpop.i32(i32 %294) #17
  %296 = trunc i32 %295 to i8
  %297 = and i8 %296, 1
  %298 = xor i8 %297, 1
  %299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %298, i8* %299, align 1, !tbaa !2446
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %300, align 1, !tbaa !2447
  %301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %301, align 1, !tbaa !2448
  %302 = lshr i64 %288, 63
  %303 = trunc i64 %302 to i8
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %303, i8* %304, align 1, !tbaa !2449
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %291, i8* %305, align 1, !tbaa !2450
  %306 = load i64, i64* %RAX
  %307 = load i64, i64* %RCX
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 3
  store i64 %309, i64* %PC
  %310 = add i64 %307, %306
  store i64 %310, i64* %RAX, align 8, !tbaa !2428
  %311 = icmp ult i64 %310, %306
  %312 = icmp ult i64 %310, %307
  %313 = or i1 %311, %312
  %314 = zext i1 %313 to i8
  %315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %314, i8* %315, align 1, !tbaa !2432
  %316 = trunc i64 %310 to i32
  %317 = and i32 %316, 255
  %318 = call i32 @llvm.ctpop.i32(i32 %317) #17
  %319 = trunc i32 %318 to i8
  %320 = and i8 %319, 1
  %321 = xor i8 %320, 1
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %321, i8* %322, align 1, !tbaa !2446
  %323 = xor i64 %307, %306
  %324 = xor i64 %323, %310
  %325 = lshr i64 %324, 4
  %326 = trunc i64 %325 to i8
  %327 = and i8 %326, 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %327, i8* %328, align 1, !tbaa !2447
  %329 = icmp eq i64 %310, 0
  %330 = zext i1 %329 to i8
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %330, i8* %331, align 1, !tbaa !2448
  %332 = lshr i64 %310, 63
  %333 = trunc i64 %332 to i8
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %333, i8* %334, align 1, !tbaa !2449
  %335 = lshr i64 %306, 63
  %336 = lshr i64 %307, 63
  %337 = xor i64 %332, %335
  %338 = xor i64 %332, %336
  %339 = add nuw nsw i64 %337, %338
  %340 = icmp eq i64 %339, 2
  %341 = zext i1 %340 to i8
  %342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %341, i8* %342, align 1, !tbaa !2450
  %343 = load i64, i64* %RBP
  %344 = sub i64 %343, 20
  %345 = load i64, i64* %PC
  %346 = add i64 %345, 4
  store i64 %346, i64* %PC
  %347 = inttoptr i64 %344 to i32*
  %348 = load i32, i32* %347
  %349 = sext i32 %348 to i64
  store i64 %349, i64* %RCX, align 8, !tbaa !2428
  %350 = load i64, i64* %RCX
  %351 = mul i64 %350, 8
  %352 = add i64 %351, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %353 = load i64, i64* %PC
  %354 = add i64 %353, 8
  store i64 %354, i64* %PC
  %355 = inttoptr i64 %352 to i64*
  %356 = load i64, i64* %355
  store i64 %356, i64* %RSI, align 8, !tbaa !2428
  %357 = load i64, i64* %RAX
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 3
  store i64 %359, i64* %PC
  store i64 %357, i64* %RDI, align 8, !tbaa !2428
  %360 = load i64, i64* %PC
  %361 = sub i64 %360, 1887
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 5
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 5
  store i64 %365, i64* %PC
  %366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %367 = load i64, i64* %366, align 8, !tbaa !2428
  %368 = add i64 %367, -8
  %369 = inttoptr i64 %368 to i64*
  store i64 %363, i64* %369
  store i64 %368, i64* %366, align 8, !tbaa !2428
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %361, i64* %370, align 8, !tbaa !2428
  %371 = load i64, i64* %PC
  %372 = call %struct.Memory* @ext_602678_strcmp(%struct.State* %0, i64 %371, %struct.Memory* %MEMORY.0)
  %373 = load i32, i32* %EAX
  %374 = zext i32 %373 to i64
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 3
  store i64 %376, i64* %PC
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %377, align 1, !tbaa !2432
  %378 = and i32 %373, 255
  %379 = call i32 @llvm.ctpop.i32(i32 %378) #17
  %380 = trunc i32 %379 to i8
  %381 = and i8 %380, 1
  %382 = xor i8 %381, 1
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %382, i8* %383, align 1, !tbaa !2446
  %384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %384, align 1, !tbaa !2447
  %385 = icmp eq i32 %373, 0
  %386 = zext i1 %385 to i8
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %386, i8* %387, align 1, !tbaa !2448
  %388 = lshr i32 %373, 31
  %389 = trunc i32 %388 to i8
  %390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %389, i8* %390, align 1, !tbaa !2449
  %391 = lshr i32 %373, 31
  %392 = xor i32 %388, %391
  %393 = add nuw nsw i32 %392, %391
  %394 = icmp eq i32 %393, 2
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %395, i8* %396, align 1, !tbaa !2450
  %397 = load i64, i64* %PC
  %398 = add i64 %397, 384
  %399 = load i64, i64* %PC
  %400 = add i64 %399, 6
  %401 = load i64, i64* %PC
  %402 = add i64 %401, 6
  store i64 %402, i64* %PC
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %404 = load i8, i8* %403, align 1, !tbaa !2448
  store i8 %404, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %406 = icmp ne i8 %404, 0
  %407 = select i1 %406, i64 %398, i64 %400
  store i64 %407, i64* %405, align 8, !tbaa !2428
  %408 = load i8, i8* %BRANCH_TAKEN
  %409 = icmp eq i8 %408, 1
  br i1 %409, label %block_400ea7, label %block_400d2d

block_400cf1:                                     ; preds = %block_400b22, %block_400ea7
  %MEMORY.0 = phi %struct.Memory* [ %4289, %block_400b22 ], [ %MEMORY.6, %block_400ea7 ]
  %410 = load i64, i64* %RBP
  %411 = sub i64 %410, 20
  %412 = load i64, i64* %PC
  %413 = add i64 %412, 4
  store i64 %413, i64* %PC
  %414 = inttoptr i64 %411 to i32*
  %415 = load i32, i32* %414
  %416 = sub i32 %415, 8
  %417 = icmp ult i32 %415, 8
  %418 = zext i1 %417 to i8
  %419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %418, i8* %419, align 1, !tbaa !2432
  %420 = and i32 %416, 255
  %421 = call i32 @llvm.ctpop.i32(i32 %420) #17
  %422 = trunc i32 %421 to i8
  %423 = and i8 %422, 1
  %424 = xor i8 %423, 1
  %425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %424, i8* %425, align 1, !tbaa !2446
  %426 = xor i32 %415, 8
  %427 = xor i32 %426, %416
  %428 = lshr i32 %427, 4
  %429 = trunc i32 %428 to i8
  %430 = and i8 %429, 1
  %431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %430, i8* %431, align 1, !tbaa !2447
  %432 = icmp eq i32 %416, 0
  %433 = zext i1 %432 to i8
  %434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %433, i8* %434, align 1, !tbaa !2448
  %435 = lshr i32 %416, 31
  %436 = trunc i32 %435 to i8
  %437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %436, i8* %437, align 1, !tbaa !2449
  %438 = lshr i32 %415, 31
  %439 = xor i32 %435, %438
  %440 = add nuw nsw i32 %439, %438
  %441 = icmp eq i32 %440, 2
  %442 = zext i1 %441 to i8
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %442, i8* %443, align 1, !tbaa !2450
  %444 = load i64, i64* %PC
  %445 = add i64 %444, 453
  %446 = load i64, i64* %PC
  %447 = add i64 %446, 6
  %448 = load i64, i64* %PC
  %449 = add i64 %448, 6
  store i64 %449, i64* %PC
  %450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %451 = load i8, i8* %450, align 1, !tbaa !2449
  %452 = icmp ne i8 %451, 0
  %453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %454 = load i8, i8* %453, align 1, !tbaa !2450
  %455 = icmp ne i8 %454, 0
  %456 = xor i1 %452, %455
  %457 = xor i1 %456, true
  %458 = zext i1 %457 to i8
  store i8 %458, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %460 = select i1 %456, i64 %447, i64 %445
  store i64 %460, i64* %459, align 8, !tbaa !2428
  %461 = load i8, i8* %BRANCH_TAKEN
  %462 = icmp eq i8 %461, 1
  br i1 %462, label %block_400eba, label %block_400cfb

block_400e7d:                                     ; preds = %block_400dde, %block_400e74
  %MEMORY.1 = phi %struct.Memory* [ %948, %block_400dde ], [ %948, %block_400e74 ]
  %463 = load i64, i64* %PC
  %464 = add i64 %463, 5
  %465 = load i64, i64* %PC
  %466 = add i64 %465, 5
  store i64 %466, i64* %PC
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %464, i64* %467, align 8, !tbaa !2428
  %468 = load i64, i64* %RBP
  %469 = sub i64 %468, 24
  %470 = load i64, i64* %PC
  %471 = add i64 %470, 3
  store i64 %471, i64* %PC
  %472 = inttoptr i64 %469 to i32*
  %473 = load i32, i32* %472
  %474 = zext i32 %473 to i64
  store i64 %474, i64* %RAX, align 8, !tbaa !2428
  %475 = load i64, i64* %RAX
  %476 = load i64, i64* %PC
  %477 = add i64 %476, 3
  store i64 %477, i64* %PC
  %478 = trunc i64 %475 to i32
  %479 = add i32 1, %478
  %480 = zext i32 %479 to i64
  store i64 %480, i64* %RAX, align 8, !tbaa !2428
  %481 = icmp ult i32 %479, %478
  %482 = icmp ult i32 %479, 1
  %483 = or i1 %481, %482
  %484 = zext i1 %483 to i8
  %485 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %484, i8* %485, align 1, !tbaa !2432
  %486 = and i32 %479, 255
  %487 = call i32 @llvm.ctpop.i32(i32 %486) #17
  %488 = trunc i32 %487 to i8
  %489 = and i8 %488, 1
  %490 = xor i8 %489, 1
  %491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %490, i8* %491, align 1, !tbaa !2446
  %492 = xor i64 1, %475
  %493 = trunc i64 %492 to i32
  %494 = xor i32 %493, %479
  %495 = lshr i32 %494, 4
  %496 = trunc i32 %495 to i8
  %497 = and i8 %496, 1
  %498 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %497, i8* %498, align 1, !tbaa !2447
  %499 = icmp eq i32 %479, 0
  %500 = zext i1 %499 to i8
  %501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %500, i8* %501, align 1, !tbaa !2448
  %502 = lshr i32 %479, 31
  %503 = trunc i32 %502 to i8
  %504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %503, i8* %504, align 1, !tbaa !2449
  %505 = lshr i32 %478, 31
  %506 = xor i32 %502, %505
  %507 = add nuw nsw i32 %506, %502
  %508 = icmp eq i32 %507, 2
  %509 = zext i1 %508 to i8
  %510 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %509, i8* %510, align 1, !tbaa !2450
  %511 = load i64, i64* %RBP
  %512 = sub i64 %511, 24
  %513 = load i32, i32* %EAX
  %514 = zext i32 %513 to i64
  %515 = load i64, i64* %PC
  %516 = add i64 %515, 3
  store i64 %516, i64* %PC
  %517 = inttoptr i64 %512 to i32*
  store i32 %513, i32* %517
  %518 = load i64, i64* %PC
  %519 = sub i64 %518, 185
  %520 = load i64, i64* %PC
  %521 = add i64 %520, 5
  store i64 %521, i64* %PC
  %522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %519, i64* %522, align 8, !tbaa !2428
  br label %block_400dd2

block_4008eb:                                     ; preds = %block_4009a0, %block_40085b
  %MEMORY.2 = phi %struct.Memory* [ %1421, %block_40085b ], [ %2808, %block_4009a0 ]
  %523 = load i64, i64* %PC
  %524 = add i64 %523, 7
  store i64 %524, i64* %PC
  %525 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %526 = zext i32 %525 to i64
  store i64 %526, i64* %RAX, align 8, !tbaa !2428
  %527 = load i32, i32* %EAX
  %528 = zext i32 %527 to i64
  %529 = load i64, i64* %PC
  %530 = add i64 %529, 7
  store i64 %530, i64* %PC
  %531 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %532 = sub i32 %527, %531
  %533 = icmp ult i32 %527, %531
  %534 = zext i1 %533 to i8
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %534, i8* %535, align 1, !tbaa !2432
  %536 = and i32 %532, 255
  %537 = call i32 @llvm.ctpop.i32(i32 %536) #17
  %538 = trunc i32 %537 to i8
  %539 = and i8 %538, 1
  %540 = xor i8 %539, 1
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %540, i8* %541, align 1, !tbaa !2446
  %542 = xor i32 %531, %527
  %543 = xor i32 %542, %532
  %544 = lshr i32 %543, 4
  %545 = trunc i32 %544 to i8
  %546 = and i8 %545, 1
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %546, i8* %547, align 1, !tbaa !2447
  %548 = icmp eq i32 %532, 0
  %549 = zext i1 %548 to i8
  %550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %549, i8* %550, align 1, !tbaa !2448
  %551 = lshr i32 %532, 31
  %552 = trunc i32 %551 to i8
  %553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %552, i8* %553, align 1, !tbaa !2449
  %554 = lshr i32 %527, 31
  %555 = lshr i32 %531, 31
  %556 = xor i32 %555, %554
  %557 = xor i32 %551, %554
  %558 = add nuw nsw i32 %557, %556
  %559 = icmp eq i32 %558, 2
  %560 = zext i1 %559 to i8
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %560, i8* %561, align 1, !tbaa !2450
  %562 = load i64, i64* %PC
  %563 = add i64 %562, 553
  %564 = load i64, i64* %PC
  %565 = add i64 %564, 6
  %566 = load i64, i64* %PC
  %567 = add i64 %566, 6
  store i64 %567, i64* %PC
  %568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %569 = load i8, i8* %568, align 1, !tbaa !2449
  %570 = icmp ne i8 %569, 0
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %572 = load i8, i8* %571, align 1, !tbaa !2450
  %573 = icmp ne i8 %572, 0
  %574 = xor i1 %570, %573
  %575 = xor i1 %574, true
  %576 = zext i1 %575 to i8
  store i8 %576, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %578 = select i1 %574, i64 %565, i64 %563
  store i64 %578, i64* %577, align 8, !tbaa !2428
  %579 = load i8, i8* %BRANCH_TAKEN
  %580 = icmp eq i8 %579, 1
  %581 = load i64, i64* %PC
  %582 = add i64 %581, 10
  store i64 %582, i64* %PC
  br i1 %580, label %block_400b22, label %block_4008ff

block_400e74:                                     ; preds = %block_400dde
  %583 = load i64, i64* %RBP
  %584 = sub i64 %583, 32
  %585 = load i64, i64* %PC
  %586 = add i64 %585, 3
  store i64 %586, i64* %PC
  %587 = inttoptr i64 %584 to i32*
  %588 = load i32, i32* %587
  %589 = zext i32 %588 to i64
  store i64 %589, i64* %RAX, align 8, !tbaa !2428
  %590 = load i64, i64* %RAX
  %591 = load i64, i64* %PC
  %592 = add i64 %591, 3
  store i64 %592, i64* %PC
  %593 = trunc i64 %590 to i32
  %594 = add i32 1, %593
  %595 = zext i32 %594 to i64
  store i64 %595, i64* %RAX, align 8, !tbaa !2428
  %596 = icmp ult i32 %594, %593
  %597 = icmp ult i32 %594, 1
  %598 = or i1 %596, %597
  %599 = zext i1 %598 to i8
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %599, i8* %600, align 1, !tbaa !2432
  %601 = and i32 %594, 255
  %602 = call i32 @llvm.ctpop.i32(i32 %601) #17
  %603 = trunc i32 %602 to i8
  %604 = and i8 %603, 1
  %605 = xor i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %605, i8* %606, align 1, !tbaa !2446
  %607 = xor i64 1, %590
  %608 = trunc i64 %607 to i32
  %609 = xor i32 %608, %594
  %610 = lshr i32 %609, 4
  %611 = trunc i32 %610 to i8
  %612 = and i8 %611, 1
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %612, i8* %613, align 1, !tbaa !2447
  %614 = icmp eq i32 %594, 0
  %615 = zext i1 %614 to i8
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %615, i8* %616, align 1, !tbaa !2448
  %617 = lshr i32 %594, 31
  %618 = trunc i32 %617 to i8
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %618, i8* %619, align 1, !tbaa !2449
  %620 = lshr i32 %593, 31
  %621 = xor i32 %617, %620
  %622 = add nuw nsw i32 %621, %617
  %623 = icmp eq i32 %622, 2
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %624, i8* %625, align 1, !tbaa !2450
  %626 = load i64, i64* %RBP
  %627 = sub i64 %626, 32
  %628 = load i32, i32* %EAX
  %629 = zext i32 %628 to i64
  %630 = load i64, i64* %PC
  %631 = add i64 %630, 3
  store i64 %631, i64* %PC
  %632 = inttoptr i64 %627 to i32*
  store i32 %628, i32* %632
  br label %block_400e7d

block_4007ea:                                     ; preds = %block_4007f4, %block_4007e3
  %MEMORY.3 = phi %struct.Memory* [ %MEMORY.5, %block_4007e3 ], [ %MEMORY.3, %block_4007f4 ]
  %633 = load i64, i64* %RBP
  %634 = sub i64 %633, 24
  %635 = load i64, i64* %PC
  %636 = add i64 %635, 4
  store i64 %636, i64* %PC
  %637 = inttoptr i64 %634 to i32*
  %638 = load i32, i32* %637
  %639 = sub i32 %638, 4
  %640 = icmp ult i32 %638, 4
  %641 = zext i1 %640 to i8
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %641, i8* %642, align 1, !tbaa !2432
  %643 = and i32 %639, 255
  %644 = call i32 @llvm.ctpop.i32(i32 %643) #17
  %645 = trunc i32 %644 to i8
  %646 = and i8 %645, 1
  %647 = xor i8 %646, 1
  %648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %647, i8* %648, align 1, !tbaa !2446
  %649 = xor i32 %638, 4
  %650 = xor i32 %649, %639
  %651 = lshr i32 %650, 4
  %652 = trunc i32 %651 to i8
  %653 = and i8 %652, 1
  %654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %653, i8* %654, align 1, !tbaa !2447
  %655 = icmp eq i32 %639, 0
  %656 = zext i1 %655 to i8
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %656, i8* %657, align 1, !tbaa !2448
  %658 = lshr i32 %639, 31
  %659 = trunc i32 %658 to i8
  %660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %659, i8* %660, align 1, !tbaa !2449
  %661 = lshr i32 %638, 31
  %662 = xor i32 %658, %661
  %663 = add nuw nsw i32 %662, %661
  %664 = icmp eq i32 %663, 2
  %665 = zext i1 %664 to i8
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %665, i8* %666, align 1, !tbaa !2450
  %667 = load i64, i64* %PC
  %668 = add i64 %667, 90
  %669 = load i64, i64* %PC
  %670 = add i64 %669, 6
  %671 = load i64, i64* %PC
  %672 = add i64 %671, 6
  store i64 %672, i64* %PC
  %673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %674 = load i8, i8* %673, align 1, !tbaa !2449
  %675 = icmp ne i8 %674, 0
  %676 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %677 = load i8, i8* %676, align 1, !tbaa !2450
  %678 = icmp ne i8 %677, 0
  %679 = xor i1 %675, %678
  %680 = xor i1 %679, true
  %681 = zext i1 %680 to i8
  store i8 %681, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %683 = select i1 %679, i64 %670, i64 %668
  store i64 %683, i64* %682, align 8, !tbaa !2428
  %684 = load i8, i8* %BRANCH_TAKEN
  %685 = icmp eq i8 %684, 1
  %686 = load i64, i64* %PC
  br i1 %685, label %block_400848, label %block_4007f4

block_4007e3:                                     ; preds = %block_4007d0
  %687 = load i64, i64* %RBP
  %688 = sub i64 %687, 24
  %689 = load i64, i64* %PC
  %690 = add i64 %689, 7
  store i64 %690, i64* %PC
  %691 = inttoptr i64 %688 to i32*
  store i32 0, i32* %691
  br label %block_4007ea

block_400dd2:                                     ; preds = %block_400d2d, %block_400e7d
  %MEMORY.4 = phi %struct.Memory* [ %4701, %block_400d2d ], [ %MEMORY.1, %block_400e7d ]
  %692 = load i64, i64* %RBP
  %693 = sub i64 %692, 24
  %694 = load i64, i64* %PC
  %695 = add i64 %694, 3
  store i64 %695, i64* %PC
  %696 = inttoptr i64 %693 to i32*
  %697 = load i32, i32* %696
  %698 = zext i32 %697 to i64
  store i64 %698, i64* %RAX, align 8, !tbaa !2428
  %699 = load i32, i32* %EAX
  %700 = zext i32 %699 to i64
  %701 = load i64, i64* %RBP
  %702 = sub i64 %701, 28
  %703 = load i64, i64* %PC
  %704 = add i64 %703, 3
  store i64 %704, i64* %PC
  %705 = inttoptr i64 %702 to i32*
  %706 = load i32, i32* %705
  %707 = sub i32 %699, %706
  %708 = icmp ult i32 %699, %706
  %709 = zext i1 %708 to i8
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %709, i8* %710, align 1, !tbaa !2432
  %711 = and i32 %707, 255
  %712 = call i32 @llvm.ctpop.i32(i32 %711) #17
  %713 = trunc i32 %712 to i8
  %714 = and i8 %713, 1
  %715 = xor i8 %714, 1
  %716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %715, i8* %716, align 1, !tbaa !2446
  %717 = xor i32 %706, %699
  %718 = xor i32 %717, %707
  %719 = lshr i32 %718, 4
  %720 = trunc i32 %719 to i8
  %721 = and i8 %720, 1
  %722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %721, i8* %722, align 1, !tbaa !2447
  %723 = icmp eq i32 %707, 0
  %724 = zext i1 %723 to i8
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %724, i8* %725, align 1, !tbaa !2448
  %726 = lshr i32 %707, 31
  %727 = trunc i32 %726 to i8
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %727, i8* %728, align 1, !tbaa !2449
  %729 = lshr i32 %699, 31
  %730 = lshr i32 %706, 31
  %731 = xor i32 %730, %729
  %732 = xor i32 %726, %729
  %733 = add nuw nsw i32 %732, %731
  %734 = icmp eq i32 %733, 2
  %735 = zext i1 %734 to i8
  %736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %735, i8* %736, align 1, !tbaa !2450
  %737 = load i64, i64* %PC
  %738 = add i64 %737, 184
  %739 = load i64, i64* %PC
  %740 = add i64 %739, 6
  %741 = load i64, i64* %PC
  %742 = add i64 %741, 6
  store i64 %742, i64* %PC
  %743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %744 = load i8, i8* %743, align 1, !tbaa !2449
  %745 = icmp ne i8 %744, 0
  %746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %747 = load i8, i8* %746, align 1, !tbaa !2450
  %748 = icmp ne i8 %747, 0
  %749 = xor i1 %745, %748
  %750 = xor i1 %749, true
  %751 = zext i1 %750 to i8
  store i8 %751, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %753 = select i1 %749, i64 %740, i64 %738
  store i64 %753, i64* %752, align 8, !tbaa !2428
  %754 = load i8, i8* %BRANCH_TAKEN
  %755 = icmp eq i8 %754, 1
  %756 = load i64, i64* %PC
  %757 = add i64 %756, 10
  store i64 %757, i64* %PC
  br i1 %755, label %block_400e90, label %block_400dde

block_400dde:                                     ; preds = %block_400dd2
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 737), i64* %RDI, align 8, !tbaa !2428
  %758 = load i64, i64* %PC
  %759 = add i64 %758, 5
  store i64 %759, i64* %PC
  store i64 94, i64* %RAX, align 8, !tbaa !2428
  %760 = load i64, i64* %PC
  %761 = add i64 %760, 5
  store i64 %761, i64* %PC
  store i64 32, i64* %RCX, align 8, !tbaa !2428
  %762 = load i64, i64* %PC
  %763 = add i64 %762, 10
  store i64 %763, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %764 = load i64, i64* %RBP
  %765 = sub i64 %764, 20
  %766 = load i64, i64* %PC
  %767 = add i64 %766, 4
  store i64 %767, i64* %PC
  %768 = inttoptr i64 %765 to i32*
  %769 = load i32, i32* %768
  %770 = sext i32 %769 to i64
  store i64 %770, i64* %RSI, align 8, !tbaa !2428
  %771 = load i64, i64* %RSI
  %772 = mul i64 %771, 8
  %773 = add i64 %772, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %774 = load i64, i64* %PC
  %775 = add i64 %774, 8
  store i64 %775, i64* %PC
  %776 = inttoptr i64 %773 to i64*
  %777 = load i64, i64* %776
  store i64 %777, i64* %RSI, align 8, !tbaa !2428
  %778 = load i64, i64* %RBP
  %779 = sub i64 %778, 24
  %780 = load i64, i64* %PC
  %781 = add i64 %780, 4
  store i64 %781, i64* %PC
  %782 = inttoptr i64 %779 to i32*
  %783 = load i32, i32* %782
  %784 = sext i32 %783 to i64
  store i64 %784, i64* %R8, align 8, !tbaa !2428
  %785 = bitcast i32* %R9D to i64*
  %786 = load i64, i64* %RSI
  %787 = load i64, i64* %R8
  %788 = add i64 %787, %786
  %789 = load i64, i64* %PC
  %790 = add i64 %789, 5
  store i64 %790, i64* %PC
  %791 = inttoptr i64 %788 to i8*
  %792 = load i8, i8* %791
  %793 = sext i8 %792 to i64
  %794 = and i64 %793, 4294967295
  store i64 %794, i64* %785, align 8, !tbaa !2428
  %795 = load i64, i64* %RBP
  %796 = sub i64 %795, 20
  %797 = load i64, i64* %PC
  %798 = add i64 %797, 4
  store i64 %798, i64* %PC
  %799 = inttoptr i64 %796 to i32*
  %800 = load i32, i32* %799
  %801 = sext i32 %800 to i64
  store i64 %801, i64* %RSI, align 8, !tbaa !2428
  %802 = load i64, i64* %RSI
  %803 = load i64, i64* %PC
  %804 = add i64 %803, 4
  store i64 %804, i64* %PC
  %805 = sext i64 %802 to i128
  %806 = and i128 %805, -18446744073709551616
  %807 = zext i64 %802 to i128
  %808 = or i128 %806, %807
  %809 = mul nsw i128 80, %808
  %810 = trunc i128 %809 to i64
  store i64 %810, i64* %RSI, align 8, !tbaa !2428
  %811 = sext i64 %810 to i128
  %812 = icmp ne i128 %811, %809
  %813 = zext i1 %812 to i8
  %814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %813, i8* %814, align 1, !tbaa !2432
  %815 = trunc i128 %809 to i32
  %816 = and i32 %815, 255
  %817 = call i32 @llvm.ctpop.i32(i32 %816) #17
  %818 = trunc i32 %817 to i8
  %819 = and i8 %818, 1
  %820 = xor i8 %819, 1
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %820, i8* %821, align 1, !tbaa !2446
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %822, align 1, !tbaa !2447
  %823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %823, align 1, !tbaa !2448
  %824 = lshr i64 %810, 63
  %825 = trunc i64 %824 to i8
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %825, i8* %826, align 1, !tbaa !2449
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %813, i8* %827, align 1, !tbaa !2450
  %828 = load i64, i64* %RDX
  %829 = load i64, i64* %RSI
  %830 = load i64, i64* %PC
  %831 = add i64 %830, 3
  store i64 %831, i64* %PC
  %832 = add i64 %829, %828
  store i64 %832, i64* %RDX, align 8, !tbaa !2428
  %833 = icmp ult i64 %832, %828
  %834 = icmp ult i64 %832, %829
  %835 = or i1 %833, %834
  %836 = zext i1 %835 to i8
  %837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %836, i8* %837, align 1, !tbaa !2432
  %838 = trunc i64 %832 to i32
  %839 = and i32 %838, 255
  %840 = call i32 @llvm.ctpop.i32(i32 %839) #17
  %841 = trunc i32 %840 to i8
  %842 = and i8 %841, 1
  %843 = xor i8 %842, 1
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %843, i8* %844, align 1, !tbaa !2446
  %845 = xor i64 %829, %828
  %846 = xor i64 %845, %832
  %847 = lshr i64 %846, 4
  %848 = trunc i64 %847 to i8
  %849 = and i8 %848, 1
  %850 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %849, i8* %850, align 1, !tbaa !2447
  %851 = icmp eq i64 %832, 0
  %852 = zext i1 %851 to i8
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %852, i8* %853, align 1, !tbaa !2448
  %854 = lshr i64 %832, 63
  %855 = trunc i64 %854 to i8
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %855, i8* %856, align 1, !tbaa !2449
  %857 = lshr i64 %828, 63
  %858 = lshr i64 %829, 63
  %859 = xor i64 %854, %857
  %860 = xor i64 %854, %858
  %861 = add nuw nsw i64 %859, %860
  %862 = icmp eq i64 %861, 2
  %863 = zext i1 %862 to i8
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %863, i8* %864, align 1, !tbaa !2450
  %865 = load i64, i64* %RBP
  %866 = sub i64 %865, 24
  %867 = load i64, i64* %PC
  %868 = add i64 %867, 4
  store i64 %868, i64* %PC
  %869 = inttoptr i64 %866 to i32*
  %870 = load i32, i32* %869
  %871 = sext i32 %870 to i64
  store i64 %871, i64* %RSI, align 8, !tbaa !2428
  %872 = bitcast i32* %R10D to i64*
  %873 = load i64, i64* %RDX
  %874 = load i64, i64* %RSI
  %875 = add i64 %874, %873
  %876 = load i64, i64* %PC
  %877 = add i64 %876, 5
  store i64 %877, i64* %PC
  %878 = inttoptr i64 %875 to i8*
  %879 = load i8, i8* %878
  %880 = sext i8 %879 to i64
  %881 = and i64 %880, 4294967295
  store i64 %881, i64* %872, align 8, !tbaa !2428
  %882 = load i32, i32* %R9D
  %883 = zext i32 %882 to i64
  %884 = load i32, i32* %R10D
  %885 = zext i32 %884 to i64
  %886 = load i64, i64* %PC
  %887 = add i64 %886, 3
  store i64 %887, i64* %PC
  %888 = sub i32 %882, %884
  %889 = icmp ult i32 %882, %884
  %890 = zext i1 %889 to i8
  %891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %890, i8* %891, align 1, !tbaa !2432
  %892 = and i32 %888, 255
  %893 = call i32 @llvm.ctpop.i32(i32 %892) #17
  %894 = trunc i32 %893 to i8
  %895 = and i8 %894, 1
  %896 = xor i8 %895, 1
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %896, i8* %897, align 1, !tbaa !2446
  %898 = xor i64 %885, %883
  %899 = trunc i64 %898 to i32
  %900 = xor i32 %899, %888
  %901 = lshr i32 %900, 4
  %902 = trunc i32 %901 to i8
  %903 = and i8 %902, 1
  %904 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %903, i8* %904, align 1, !tbaa !2447
  %905 = icmp eq i32 %888, 0
  %906 = zext i1 %905 to i8
  %907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %906, i8* %907, align 1, !tbaa !2448
  %908 = lshr i32 %888, 31
  %909 = trunc i32 %908 to i8
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %909, i8* %910, align 1, !tbaa !2449
  %911 = lshr i32 %882, 31
  %912 = lshr i32 %884, 31
  %913 = xor i32 %912, %911
  %914 = xor i32 %908, %911
  %915 = add nuw nsw i32 %914, %913
  %916 = icmp eq i32 %915, 2
  %917 = zext i1 %916 to i8
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %917, i8* %918, align 1, !tbaa !2450
  %919 = load i32, i32* %ECX
  %920 = zext i32 %919 to i64
  %921 = load i64, i64* %PC
  %922 = add i64 %921, 3
  store i64 %922, i64* %PC
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %924 = load i8, i8* %923, align 1, !tbaa !2448
  %925 = icmp ne i8 %924, 0
  %926 = load i64, i64* %RAX, align 8, !tbaa !2428
  %927 = select i1 %925, i64 %920, i64 %926
  %928 = and i64 %927, 4294967295
  store i64 %928, i64* %RAX, align 8, !tbaa !2428
  %929 = load i32, i32* %EAX
  %930 = zext i32 %929 to i64
  %931 = load i64, i64* %PC
  %932 = add i64 %931, 2
  store i64 %932, i64* %PC
  %933 = and i64 %930, 4294967295
  store i64 %933, i64* %RSI, align 8, !tbaa !2428
  %934 = load i64, i64* %PC
  %935 = add i64 %934, 2
  store i64 %935, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %936 = load i64, i64* %PC
  %937 = sub i64 %936, 2191
  %938 = load i64, i64* %PC
  %939 = add i64 %938, 5
  %940 = load i64, i64* %PC
  %941 = add i64 %940, 5
  store i64 %941, i64* %PC
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %943 = load i64, i64* %942, align 8, !tbaa !2428
  %944 = add i64 %943, -8
  %945 = inttoptr i64 %944 to i64*
  store i64 %939, i64* %945
  store i64 %944, i64* %942, align 8, !tbaa !2428
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %937, i64* %946, align 8, !tbaa !2428
  %947 = load i64, i64* %PC
  %948 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %947, %struct.Memory* %MEMORY.4)
  %949 = load i64, i64* %PC
  %950 = add i64 %949, 10
  store i64 %950, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %951 = load i64, i64* %RBP
  %952 = sub i64 %951, 20
  %953 = load i64, i64* %PC
  %954 = add i64 %953, 4
  store i64 %954, i64* %PC
  %955 = inttoptr i64 %952 to i32*
  %956 = load i32, i32* %955
  %957 = sext i32 %956 to i64
  store i64 %957, i64* %RDI, align 8, !tbaa !2428
  %958 = load i64, i64* %RDI
  %959 = mul i64 %958, 8
  %960 = add i64 %959, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %961 = load i64, i64* %PC
  %962 = add i64 %961, 8
  store i64 %962, i64* %PC
  %963 = inttoptr i64 %960 to i64*
  %964 = load i64, i64* %963
  store i64 %964, i64* %RDI, align 8, !tbaa !2428
  %965 = load i64, i64* %RBP
  %966 = sub i64 %965, 24
  %967 = load i64, i64* %PC
  %968 = add i64 %967, 4
  store i64 %968, i64* %PC
  %969 = inttoptr i64 %966 to i32*
  %970 = load i32, i32* %969
  %971 = sext i32 %970 to i64
  store i64 %971, i64* %R8, align 8, !tbaa !2428
  %972 = load i64, i64* %RDI
  %973 = load i64, i64* %R8
  %974 = add i64 %973, %972
  %975 = load i64, i64* %PC
  %976 = add i64 %975, 5
  store i64 %976, i64* %PC
  %977 = inttoptr i64 %974 to i8*
  %978 = load i8, i8* %977
  %979 = sext i8 %978 to i64
  %980 = and i64 %979, 4294967295
  store i64 %980, i64* %RCX, align 8, !tbaa !2428
  %981 = load i64, i64* %RBP
  %982 = sub i64 %981, 20
  %983 = load i64, i64* %PC
  %984 = add i64 %983, 4
  store i64 %984, i64* %PC
  %985 = inttoptr i64 %982 to i32*
  %986 = load i32, i32* %985
  %987 = sext i32 %986 to i64
  store i64 %987, i64* %RDI, align 8, !tbaa !2428
  %988 = load i64, i64* %RDI
  %989 = load i64, i64* %PC
  %990 = add i64 %989, 4
  store i64 %990, i64* %PC
  %991 = sext i64 %988 to i128
  %992 = and i128 %991, -18446744073709551616
  %993 = zext i64 %988 to i128
  %994 = or i128 %992, %993
  %995 = mul nsw i128 80, %994
  %996 = trunc i128 %995 to i64
  store i64 %996, i64* %RDI, align 8, !tbaa !2428
  %997 = sext i64 %996 to i128
  %998 = icmp ne i128 %997, %995
  %999 = zext i1 %998 to i8
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %999, i8* %1000, align 1, !tbaa !2432
  %1001 = trunc i128 %995 to i32
  %1002 = and i32 %1001, 255
  %1003 = call i32 @llvm.ctpop.i32(i32 %1002) #17
  %1004 = trunc i32 %1003 to i8
  %1005 = and i8 %1004, 1
  %1006 = xor i8 %1005, 1
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1006, i8* %1007, align 1, !tbaa !2446
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1008, align 1, !tbaa !2447
  %1009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1009, align 1, !tbaa !2448
  %1010 = lshr i64 %996, 63
  %1011 = trunc i64 %1010 to i8
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1011, i8* %1012, align 1, !tbaa !2449
  %1013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %999, i8* %1013, align 1, !tbaa !2450
  %1014 = load i64, i64* %RDX
  %1015 = load i64, i64* %RDI
  %1016 = load i64, i64* %PC
  %1017 = add i64 %1016, 3
  store i64 %1017, i64* %PC
  %1018 = add i64 %1015, %1014
  store i64 %1018, i64* %RDX, align 8, !tbaa !2428
  %1019 = icmp ult i64 %1018, %1014
  %1020 = icmp ult i64 %1018, %1015
  %1021 = or i1 %1019, %1020
  %1022 = zext i1 %1021 to i8
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1022, i8* %1023, align 1, !tbaa !2432
  %1024 = trunc i64 %1018 to i32
  %1025 = and i32 %1024, 255
  %1026 = call i32 @llvm.ctpop.i32(i32 %1025) #17
  %1027 = trunc i32 %1026 to i8
  %1028 = and i8 %1027, 1
  %1029 = xor i8 %1028, 1
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1029, i8* %1030, align 1, !tbaa !2446
  %1031 = xor i64 %1015, %1014
  %1032 = xor i64 %1031, %1018
  %1033 = lshr i64 %1032, 4
  %1034 = trunc i64 %1033 to i8
  %1035 = and i8 %1034, 1
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1035, i8* %1036, align 1, !tbaa !2447
  %1037 = icmp eq i64 %1018, 0
  %1038 = zext i1 %1037 to i8
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1038, i8* %1039, align 1, !tbaa !2448
  %1040 = lshr i64 %1018, 63
  %1041 = trunc i64 %1040 to i8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1041, i8* %1042, align 1, !tbaa !2449
  %1043 = lshr i64 %1014, 63
  %1044 = lshr i64 %1015, 63
  %1045 = xor i64 %1040, %1043
  %1046 = xor i64 %1040, %1044
  %1047 = add nuw nsw i64 %1045, %1046
  %1048 = icmp eq i64 %1047, 2
  %1049 = zext i1 %1048 to i8
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1049, i8* %1050, align 1, !tbaa !2450
  %1051 = load i64, i64* %RBP
  %1052 = sub i64 %1051, 24
  %1053 = load i64, i64* %PC
  %1054 = add i64 %1053, 4
  store i64 %1054, i64* %PC
  %1055 = inttoptr i64 %1052 to i32*
  %1056 = load i32, i32* %1055
  %1057 = sext i32 %1056 to i64
  store i64 %1057, i64* %RDI, align 8, !tbaa !2428
  %1058 = load i64, i64* %RDX
  %1059 = load i64, i64* %RDI
  %1060 = add i64 %1059, %1058
  %1061 = load i64, i64* %PC
  %1062 = add i64 %1061, 4
  store i64 %1062, i64* %PC
  %1063 = inttoptr i64 %1060 to i8*
  %1064 = load i8, i8* %1063
  %1065 = sext i8 %1064 to i64
  %1066 = and i64 %1065, 4294967295
  store i64 %1066, i64* %RSI, align 8, !tbaa !2428
  %1067 = load i32, i32* %ECX
  %1068 = zext i32 %1067 to i64
  %1069 = load i32, i32* %ESI
  %1070 = zext i32 %1069 to i64
  %1071 = load i64, i64* %PC
  %1072 = add i64 %1071, 2
  store i64 %1072, i64* %PC
  %1073 = sub i32 %1067, %1069
  %1074 = icmp ult i32 %1067, %1069
  %1075 = zext i1 %1074 to i8
  %1076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1075, i8* %1076, align 1, !tbaa !2432
  %1077 = and i32 %1073, 255
  %1078 = call i32 @llvm.ctpop.i32(i32 %1077) #17
  %1079 = trunc i32 %1078 to i8
  %1080 = and i8 %1079, 1
  %1081 = xor i8 %1080, 1
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1081, i8* %1082, align 1, !tbaa !2446
  %1083 = xor i64 %1070, %1068
  %1084 = trunc i64 %1083 to i32
  %1085 = xor i32 %1084, %1073
  %1086 = lshr i32 %1085, 4
  %1087 = trunc i32 %1086 to i8
  %1088 = and i8 %1087, 1
  %1089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1088, i8* %1089, align 1, !tbaa !2447
  %1090 = icmp eq i32 %1073, 0
  %1091 = zext i1 %1090 to i8
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1091, i8* %1092, align 1, !tbaa !2448
  %1093 = lshr i32 %1073, 31
  %1094 = trunc i32 %1093 to i8
  %1095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1094, i8* %1095, align 1, !tbaa !2449
  %1096 = lshr i32 %1067, 31
  %1097 = lshr i32 %1069, 31
  %1098 = xor i32 %1097, %1096
  %1099 = xor i32 %1093, %1096
  %1100 = add nuw nsw i32 %1099, %1098
  %1101 = icmp eq i32 %1100, 2
  %1102 = zext i1 %1101 to i8
  %1103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1102, i8* %1103, align 1, !tbaa !2450
  %1104 = load i64, i64* %RBP
  %1105 = sub i64 %1104, 180
  %1106 = load i32, i32* %EAX
  %1107 = zext i32 %1106 to i64
  %1108 = load i64, i64* %PC
  %1109 = add i64 %1108, 6
  store i64 %1109, i64* %PC
  %1110 = inttoptr i64 %1105 to i32*
  store i32 %1106, i32* %1110
  %1111 = load i64, i64* %PC
  %1112 = add i64 %1111, 15
  %1113 = load i64, i64* %PC
  %1114 = add i64 %1113, 6
  %1115 = load i64, i64* %PC
  %1116 = add i64 %1115, 6
  store i64 %1116, i64* %PC
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1118 = load i8, i8* %1117, align 1, !tbaa !2448
  store i8 %1118, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1120 = icmp ne i8 %1118, 0
  %1121 = select i1 %1120, i64 %1112, i64 %1114
  store i64 %1121, i64* %1119, align 8, !tbaa !2428
  %1122 = load i8, i8* %BRANCH_TAKEN
  %1123 = icmp eq i8 %1122, 1
  br i1 %1123, label %block_400e7d, label %block_400e74

block_4007d0:                                     ; preds = %block_400848, %block_400700
  %MEMORY.5 = phi %struct.Memory* [ %2, %block_400700 ], [ %MEMORY.3, %block_400848 ]
  %1124 = load i64, i64* %RBP
  %1125 = sub i64 %1124, 20
  %1126 = load i64, i64* %PC
  %1127 = add i64 %1126, 3
  store i64 %1127, i64* %PC
  %1128 = inttoptr i64 %1125 to i32*
  %1129 = load i32, i32* %1128
  %1130 = zext i32 %1129 to i64
  store i64 %1130, i64* %RAX, align 8, !tbaa !2428
  %1131 = load i64, i64* %PC
  %1132 = add i64 %1131, 8
  store i64 %1132, i64* %PC
  %1133 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %1134 = sext i16 %1133 to i64
  %1135 = and i64 %1134, 4294967295
  store i64 %1135, i64* %RCX, align 8, !tbaa !2428
  %1136 = load i32, i32* %EAX
  %1137 = zext i32 %1136 to i64
  %1138 = load i32, i32* %ECX
  %1139 = zext i32 %1138 to i64
  %1140 = load i64, i64* %PC
  %1141 = add i64 %1140, 2
  store i64 %1141, i64* %PC
  %1142 = sub i32 %1136, %1138
  %1143 = icmp ult i32 %1136, %1138
  %1144 = zext i1 %1143 to i8
  %1145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1144, i8* %1145, align 1, !tbaa !2432
  %1146 = and i32 %1142, 255
  %1147 = call i32 @llvm.ctpop.i32(i32 %1146) #17
  %1148 = trunc i32 %1147 to i8
  %1149 = and i8 %1148, 1
  %1150 = xor i8 %1149, 1
  %1151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1150, i8* %1151, align 1, !tbaa !2446
  %1152 = xor i64 %1139, %1137
  %1153 = trunc i64 %1152 to i32
  %1154 = xor i32 %1153, %1142
  %1155 = lshr i32 %1154, 4
  %1156 = trunc i32 %1155 to i8
  %1157 = and i8 %1156, 1
  %1158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1157, i8* %1158, align 1, !tbaa !2447
  %1159 = icmp eq i32 %1142, 0
  %1160 = zext i1 %1159 to i8
  %1161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1160, i8* %1161, align 1, !tbaa !2448
  %1162 = lshr i32 %1142, 31
  %1163 = trunc i32 %1162 to i8
  %1164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1163, i8* %1164, align 1, !tbaa !2449
  %1165 = lshr i32 %1136, 31
  %1166 = lshr i32 %1138, 31
  %1167 = xor i32 %1166, %1165
  %1168 = xor i32 %1162, %1165
  %1169 = add nuw nsw i32 %1168, %1167
  %1170 = icmp eq i32 %1169, 2
  %1171 = zext i1 %1170 to i8
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1171, i8* %1172, align 1, !tbaa !2450
  %1173 = load i64, i64* %PC
  %1174 = add i64 %1173, 126
  %1175 = load i64, i64* %PC
  %1176 = add i64 %1175, 6
  %1177 = load i64, i64* %PC
  %1178 = add i64 %1177, 6
  store i64 %1178, i64* %PC
  %1179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1180 = load i8, i8* %1179, align 1, !tbaa !2449
  %1181 = icmp ne i8 %1180, 0
  %1182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1183 = load i8, i8* %1182, align 1, !tbaa !2450
  %1184 = icmp ne i8 %1183, 0
  %1185 = xor i1 %1181, %1184
  %1186 = xor i1 %1185, true
  %1187 = zext i1 %1186 to i8
  store i8 %1187, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %1188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1189 = select i1 %1185, i64 %1176, i64 %1174
  store i64 %1189, i64* %1188, align 8, !tbaa !2428
  %1190 = load i8, i8* %BRANCH_TAKEN
  %1191 = icmp eq i8 %1190, 1
  br i1 %1191, label %block_40085b, label %block_4007e3

block_400848:                                     ; preds = %block_4007ea
  %1192 = add i64 %686, 5
  %1193 = load i64, i64* %PC
  %1194 = add i64 %1193, 5
  store i64 %1194, i64* %PC
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1192, i64* %1195, align 8, !tbaa !2428
  %1196 = load i64, i64* %RBP
  %1197 = sub i64 %1196, 20
  %1198 = load i64, i64* %PC
  %1199 = add i64 %1198, 3
  store i64 %1199, i64* %PC
  %1200 = inttoptr i64 %1197 to i32*
  %1201 = load i32, i32* %1200
  %1202 = zext i32 %1201 to i64
  store i64 %1202, i64* %RAX, align 8, !tbaa !2428
  %1203 = load i64, i64* %RAX
  %1204 = load i64, i64* %PC
  %1205 = add i64 %1204, 3
  store i64 %1205, i64* %PC
  %1206 = trunc i64 %1203 to i32
  %1207 = add i32 1, %1206
  %1208 = zext i32 %1207 to i64
  store i64 %1208, i64* %RAX, align 8, !tbaa !2428
  %1209 = icmp ult i32 %1207, %1206
  %1210 = icmp ult i32 %1207, 1
  %1211 = or i1 %1209, %1210
  %1212 = zext i1 %1211 to i8
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1212, i8* %1213, align 1, !tbaa !2432
  %1214 = and i32 %1207, 255
  %1215 = call i32 @llvm.ctpop.i32(i32 %1214) #17
  %1216 = trunc i32 %1215 to i8
  %1217 = and i8 %1216, 1
  %1218 = xor i8 %1217, 1
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1218, i8* %1219, align 1, !tbaa !2446
  %1220 = xor i64 1, %1203
  %1221 = trunc i64 %1220 to i32
  %1222 = xor i32 %1221, %1207
  %1223 = lshr i32 %1222, 4
  %1224 = trunc i32 %1223 to i8
  %1225 = and i8 %1224, 1
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1225, i8* %1226, align 1, !tbaa !2447
  %1227 = icmp eq i32 %1207, 0
  %1228 = zext i1 %1227 to i8
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1228, i8* %1229, align 1, !tbaa !2448
  %1230 = lshr i32 %1207, 31
  %1231 = trunc i32 %1230 to i8
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1231, i8* %1232, align 1, !tbaa !2449
  %1233 = lshr i32 %1206, 31
  %1234 = xor i32 %1230, %1233
  %1235 = add nuw nsw i32 %1234, %1230
  %1236 = icmp eq i32 %1235, 2
  %1237 = zext i1 %1236 to i8
  %1238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1237, i8* %1238, align 1, !tbaa !2450
  %1239 = load i64, i64* %RBP
  %1240 = sub i64 %1239, 20
  %1241 = load i32, i32* %EAX
  %1242 = zext i32 %1241 to i64
  %1243 = load i64, i64* %PC
  %1244 = add i64 %1243, 3
  store i64 %1244, i64* %PC
  %1245 = inttoptr i64 %1240 to i32*
  store i32 %1241, i32* %1245
  %1246 = load i64, i64* %PC
  %1247 = sub i64 %1246, 134
  %1248 = load i64, i64* %PC
  %1249 = add i64 %1248, 5
  store i64 %1249, i64* %PC
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1247, i64* %1250, align 8, !tbaa !2428
  br label %block_4007d0

block_40085b:                                     ; preds = %block_4007d0
  %1251 = load i64, i64* %PC
  %1252 = add i64 %1251, 10
  store i64 %1252, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 120), i64* %RDI, align 8, !tbaa !2428
  %1253 = load i64, i64* %PC
  %1254 = add i64 %1253, 2
  store i64 %1254, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %1255 = load i64, i64* %PC
  %1256 = sub i64 %1255, 711
  %1257 = load i64, i64* %PC
  %1258 = add i64 %1257, 5
  %1259 = load i64, i64* %PC
  %1260 = add i64 %1259, 5
  store i64 %1260, i64* %PC
  %1261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1262 = load i64, i64* %1261, align 8, !tbaa !2428
  %1263 = add i64 %1262, -8
  %1264 = inttoptr i64 %1263 to i64*
  store i64 %1258, i64* %1264
  store i64 %1263, i64* %1261, align 8, !tbaa !2428
  %1265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1256, i64* %1265, align 8, !tbaa !2428
  %1266 = load i64, i64* %PC
  %1267 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %1266, %struct.Memory* %MEMORY.5)
  %1268 = load i64, i64* %PC
  %1269 = add i64 %1268, 10
  store i64 %1269, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 174), i64* %RDI, align 8, !tbaa !2428
  %1270 = load i64, i64* %PC
  %1271 = add i64 %1270, 7
  store i64 %1271, i64* %PC
  %1272 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %1273 = zext i32 %1272 to i64
  store i64 %1273, i64* %RSI, align 8, !tbaa !2428
  %1274 = load i64, i64* %RBP
  %1275 = sub i64 %1274, 52
  %1276 = load i32, i32* %EAX
  %1277 = zext i32 %1276 to i64
  %1278 = load i64, i64* %PC
  %1279 = add i64 %1278, 3
  store i64 %1279, i64* %PC
  %1280 = inttoptr i64 %1275 to i32*
  store i32 %1276, i32* %1280
  %1281 = load i64, i64* %PC
  %1282 = add i64 %1281, 2
  store i64 %1282, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %1283 = load i64, i64* %PC
  %1284 = sub i64 %1283, 738
  %1285 = load i64, i64* %PC
  %1286 = add i64 %1285, 5
  %1287 = load i64, i64* %PC
  %1288 = add i64 %1287, 5
  store i64 %1288, i64* %PC
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1290 = load i64, i64* %1289, align 8, !tbaa !2428
  %1291 = add i64 %1290, -8
  %1292 = inttoptr i64 %1291 to i64*
  store i64 %1286, i64* %1292
  store i64 %1291, i64* %1289, align 8, !tbaa !2428
  %1293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1284, i64* %1293, align 8, !tbaa !2428
  %1294 = load i64, i64* %PC
  %1295 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %1294, %struct.Memory* %1267)
  %1296 = load i64, i64* %PC
  %1297 = add i64 %1296, 10
  store i64 %1297, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 232), i64* %RDI, align 8, !tbaa !2428
  %1298 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1299 = load i64, i64* %PC
  %1300 = add i64 %1299, 8
  store i64 %1300, i64* %PC
  %1301 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 80) to double*)
  %1302 = bitcast i8* %1298 to double*
  store double %1301, double* %1302, align 1, !tbaa !2452
  %1303 = getelementptr inbounds i8, i8* %1298, i64 8
  %1304 = bitcast i8* %1303 to double*
  store double 0.000000e+00, double* %1304, align 1, !tbaa !2452
  %1305 = load i64, i64* %PC
  %1306 = add i64 %1305, 7
  store i64 %1306, i64* %PC
  %1307 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %1308 = zext i32 %1307 to i64
  store i64 %1308, i64* %RSI, align 8, !tbaa !2428
  %1309 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1310 = load i32, i32* %ESI
  %1311 = zext i32 %1310 to i64
  %1312 = load i64, i64* %PC
  %1313 = add i64 %1312, 4
  store i64 %1313, i64* %PC
  %1314 = sitofp i32 %1310 to double
  %1315 = bitcast i8* %1309 to double*
  store double %1314, double* %1315, align 1, !tbaa !2452
  %1316 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1317 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1318 = bitcast %union.vec128_t* %XMM0 to i8*
  %1319 = load i64, i64* %PC
  %1320 = add i64 %1319, 4
  store i64 %1320, i64* %PC
  %1321 = bitcast i8* %1317 to double*
  %1322 = load double, double* %1321, align 1
  %1323 = getelementptr inbounds i8, i8* %1317, i64 8
  %1324 = bitcast i8* %1323 to i64*
  %1325 = load i64, i64* %1324, align 1
  %1326 = bitcast i8* %1318 to double*
  %1327 = load double, double* %1326, align 1
  %1328 = fdiv double %1322, %1327
  %1329 = bitcast i8* %1316 to double*
  store double %1328, double* %1329, align 1, !tbaa !2452
  %1330 = getelementptr inbounds i8, i8* %1316, i64 8
  %1331 = bitcast i8* %1330 to i64*
  store i64 %1325, i64* %1331, align 1, !tbaa !2452
  %1332 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1333 = bitcast %union.vec128_t* %XMM1 to i8*
  %1334 = load i64, i64* %PC
  %1335 = add i64 %1334, 3
  store i64 %1335, i64* %PC
  %1336 = bitcast i8* %1333 to <2 x i32>*
  %1337 = load <2 x i32>, <2 x i32>* %1336, align 1
  %1338 = getelementptr inbounds i8, i8* %1333, i64 8
  %1339 = bitcast i8* %1338 to <2 x i32>*
  %1340 = load <2 x i32>, <2 x i32>* %1339, align 1
  %1341 = extractelement <2 x i32> %1337, i32 0
  %1342 = bitcast i8* %1332 to i32*
  store i32 %1341, i32* %1342, align 1, !tbaa !2454
  %1343 = extractelement <2 x i32> %1337, i32 1
  %1344 = getelementptr inbounds i8, i8* %1332, i64 4
  %1345 = bitcast i8* %1344 to i32*
  store i32 %1343, i32* %1345, align 1, !tbaa !2454
  %1346 = extractelement <2 x i32> %1340, i32 0
  %1347 = getelementptr inbounds i8, i8* %1332, i64 8
  %1348 = bitcast i8* %1347 to i32*
  store i32 %1346, i32* %1348, align 1, !tbaa !2454
  %1349 = extractelement <2 x i32> %1340, i32 1
  %1350 = getelementptr inbounds i8, i8* %1332, i64 12
  %1351 = bitcast i8* %1350 to i32*
  store i32 %1349, i32* %1351, align 1, !tbaa !2454
  %1352 = load i64, i64* %RBP
  %1353 = sub i64 %1352, 56
  %1354 = load i32, i32* %EAX
  %1355 = zext i32 %1354 to i64
  %1356 = load i64, i64* %PC
  %1357 = add i64 %1356, 3
  store i64 %1357, i64* %PC
  %1358 = inttoptr i64 %1353 to i32*
  store i32 %1354, i32* %1358
  %1359 = load i64, i64* %PC
  %1360 = add i64 %1359, 2
  store i64 %1360, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %1361 = load i64, i64* %PC
  %1362 = sub i64 %1361, 784
  %1363 = load i64, i64* %PC
  %1364 = add i64 %1363, 5
  %1365 = load i64, i64* %PC
  %1366 = add i64 %1365, 5
  store i64 %1366, i64* %PC
  %1367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1368 = load i64, i64* %1367, align 8, !tbaa !2428
  %1369 = add i64 %1368, -8
  %1370 = inttoptr i64 %1369 to i64*
  store i64 %1364, i64* %1370
  store i64 %1369, i64* %1367, align 8, !tbaa !2428
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1362, i64* %1371, align 8, !tbaa !2428
  %1372 = load i64, i64* %PC
  %1373 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %1372, %struct.Memory* %1295)
  %1374 = load i64, i64* %PC
  %1375 = add i64 %1374, 10
  store i64 %1375, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 288), i64* %RDI, align 8, !tbaa !2428
  %1376 = load i64, i64* %RBP
  %1377 = sub i64 %1376, 60
  %1378 = load i32, i32* %EAX
  %1379 = zext i32 %1378 to i64
  %1380 = load i64, i64* %PC
  %1381 = add i64 %1380, 3
  store i64 %1381, i64* %PC
  %1382 = inttoptr i64 %1377 to i32*
  store i32 %1378, i32* %1382
  %1383 = load i64, i64* %PC
  %1384 = add i64 %1383, 2
  store i64 %1384, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %1385 = load i64, i64* %PC
  %1386 = sub i64 %1385, 804
  %1387 = load i64, i64* %PC
  %1388 = add i64 %1387, 5
  %1389 = load i64, i64* %PC
  %1390 = add i64 %1389, 5
  store i64 %1390, i64* %PC
  %1391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1392 = load i64, i64* %1391, align 8, !tbaa !2428
  %1393 = add i64 %1392, -8
  %1394 = inttoptr i64 %1393 to i64*
  store i64 %1388, i64* %1394
  store i64 %1393, i64* %1391, align 8, !tbaa !2428
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1386, i64* %1395, align 8, !tbaa !2428
  %1396 = load i64, i64* %PC
  %1397 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %1396, %struct.Memory* %1373)
  %1398 = load i64, i64* %PC
  %1399 = add i64 %1398, 10
  store i64 %1399, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 348), i64* %RDI, align 8, !tbaa !2428
  %1400 = load i64, i64* %RBP
  %1401 = sub i64 %1400, 64
  %1402 = load i32, i32* %EAX
  %1403 = zext i32 %1402 to i64
  %1404 = load i64, i64* %PC
  %1405 = add i64 %1404, 3
  store i64 %1405, i64* %PC
  %1406 = inttoptr i64 %1401 to i32*
  store i32 %1402, i32* %1406
  %1407 = load i64, i64* %PC
  %1408 = add i64 %1407, 2
  store i64 %1408, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %1409 = load i64, i64* %PC
  %1410 = sub i64 %1409, 824
  %1411 = load i64, i64* %PC
  %1412 = add i64 %1411, 5
  %1413 = load i64, i64* %PC
  %1414 = add i64 %1413, 5
  store i64 %1414, i64* %PC
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1416 = load i64, i64* %1415, align 8, !tbaa !2428
  %1417 = add i64 %1416, -8
  %1418 = inttoptr i64 %1417 to i64*
  store i64 %1412, i64* %1418
  store i64 %1417, i64* %1415, align 8, !tbaa !2428
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1410, i64* %1419, align 8, !tbaa !2428
  %1420 = load i64, i64* %PC
  %1421 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %1420, %struct.Memory* %1397)
  %1422 = load i64, i64* %PC
  %1423 = add i64 %1422, 11
  store i64 %1423, i64* %PC
  store i32 0, i32* bitcast (%itercount_type* @itercount to i32*)
  %1424 = load i64, i64* %RBP
  %1425 = sub i64 %1424, 68
  %1426 = load i32, i32* %EAX
  %1427 = zext i32 %1426 to i64
  %1428 = load i64, i64* %PC
  %1429 = add i64 %1428, 3
  store i64 %1429, i64* %PC
  %1430 = inttoptr i64 %1425 to i32*
  store i32 %1426, i32* %1430
  br label %block_4008eb

block_400ea7:                                     ; preds = %block_400e90, %block_400cfb
  %MEMORY.6 = phi %struct.Memory* [ %372, %block_400cfb ], [ %3646, %block_400e90 ]
  %1431 = load i64, i64* %PC
  %1432 = add i64 %1431, 5
  %1433 = load i64, i64* %PC
  %1434 = add i64 %1433, 5
  store i64 %1434, i64* %PC
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1432, i64* %1435, align 8, !tbaa !2428
  %1436 = load i64, i64* %RBP
  %1437 = sub i64 %1436, 20
  %1438 = load i64, i64* %PC
  %1439 = add i64 %1438, 3
  store i64 %1439, i64* %PC
  %1440 = inttoptr i64 %1437 to i32*
  %1441 = load i32, i32* %1440
  %1442 = zext i32 %1441 to i64
  store i64 %1442, i64* %RAX, align 8, !tbaa !2428
  %1443 = load i64, i64* %RAX
  %1444 = load i64, i64* %PC
  %1445 = add i64 %1444, 3
  store i64 %1445, i64* %PC
  %1446 = trunc i64 %1443 to i32
  %1447 = add i32 1, %1446
  %1448 = zext i32 %1447 to i64
  store i64 %1448, i64* %RAX, align 8, !tbaa !2428
  %1449 = icmp ult i32 %1447, %1446
  %1450 = icmp ult i32 %1447, 1
  %1451 = or i1 %1449, %1450
  %1452 = zext i1 %1451 to i8
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1452, i8* %1453, align 1, !tbaa !2432
  %1454 = and i32 %1447, 255
  %1455 = call i32 @llvm.ctpop.i32(i32 %1454) #17
  %1456 = trunc i32 %1455 to i8
  %1457 = and i8 %1456, 1
  %1458 = xor i8 %1457, 1
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1458, i8* %1459, align 1, !tbaa !2446
  %1460 = xor i64 1, %1443
  %1461 = trunc i64 %1460 to i32
  %1462 = xor i32 %1461, %1447
  %1463 = lshr i32 %1462, 4
  %1464 = trunc i32 %1463 to i8
  %1465 = and i8 %1464, 1
  %1466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1465, i8* %1466, align 1, !tbaa !2447
  %1467 = icmp eq i32 %1447, 0
  %1468 = zext i1 %1467 to i8
  %1469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1468, i8* %1469, align 1, !tbaa !2448
  %1470 = lshr i32 %1447, 31
  %1471 = trunc i32 %1470 to i8
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1471, i8* %1472, align 1, !tbaa !2449
  %1473 = lshr i32 %1446, 31
  %1474 = xor i32 %1470, %1473
  %1475 = add nuw nsw i32 %1474, %1470
  %1476 = icmp eq i32 %1475, 2
  %1477 = zext i1 %1476 to i8
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1477, i8* %1478, align 1, !tbaa !2450
  %1479 = load i64, i64* %RBP
  %1480 = sub i64 %1479, 20
  %1481 = load i32, i32* %EAX
  %1482 = zext i32 %1481 to i64
  %1483 = load i64, i64* %PC
  %1484 = add i64 %1483, 3
  store i64 %1484, i64* %PC
  %1485 = inttoptr i64 %1480 to i32*
  store i32 %1481, i32* %1485
  %1486 = load i64, i64* %PC
  %1487 = sub i64 %1486, 452
  %1488 = load i64, i64* %PC
  %1489 = add i64 %1488, 5
  store i64 %1489, i64* %PC
  %1490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1487, i64* %1490, align 8, !tbaa !2428
  br label %block_400cf1

block_4009a0:                                     ; preds = %block_400909
  store i64 3, i64* %RDI, align 8, !tbaa !2428
  %1491 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1492 = load i64, i64* %PC
  %1493 = add i64 %1492, 8
  store i64 %1493, i64* %PC
  %1494 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 112) to double*)
  %1495 = bitcast i8* %1491 to double*
  store double %1494, double* %1495, align 1, !tbaa !2452
  %1496 = getelementptr inbounds i8, i8* %1491, i64 8
  %1497 = bitcast i8* %1496 to double*
  store double 0.000000e+00, double* %1497, align 1, !tbaa !2452
  %1498 = load i64, i64* %PC
  %1499 = add i64 %1498, 10
  store i64 %1499, i64* %PC
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %1500 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1501 = load i64, i64* %PC
  %1502 = add i64 %1501, 9
  store i64 %1502, i64* %PC
  %1503 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %1504 = bitcast i8* %1500 to double*
  store double %1503, double* %1504, align 1, !tbaa !2452
  %1505 = getelementptr inbounds i8, i8* %1500, i64 8
  %1506 = bitcast i8* %1505 to double*
  store double 0.000000e+00, double* %1506, align 1, !tbaa !2452
  %1507 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1508 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1509 = bitcast %union.vec128_t* %XMM0 to i8*
  %1510 = load i64, i64* %PC
  %1511 = add i64 %1510, 4
  store i64 %1511, i64* %PC
  %1512 = bitcast i8* %1508 to double*
  %1513 = load double, double* %1512, align 1
  %1514 = getelementptr inbounds i8, i8* %1508, i64 8
  %1515 = bitcast i8* %1514 to i64*
  %1516 = load i64, i64* %1515, align 1
  %1517 = bitcast i8* %1509 to double*
  %1518 = load double, double* %1517, align 1
  %1519 = fdiv double %1513, %1518
  %1520 = bitcast i8* %1507 to double*
  store double %1519, double* %1520, align 1, !tbaa !2452
  %1521 = getelementptr inbounds i8, i8* %1507, i64 8
  %1522 = bitcast i8* %1521 to i64*
  store i64 %1516, i64* %1522, align 1, !tbaa !2452
  %1523 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1524 = bitcast %union.vec128_t* %XMM1 to i8*
  %1525 = load i64, i64* %PC
  %1526 = add i64 %1525, 3
  store i64 %1526, i64* %PC
  %1527 = bitcast i8* %1524 to <2 x i32>*
  %1528 = load <2 x i32>, <2 x i32>* %1527, align 1
  %1529 = getelementptr inbounds i8, i8* %1524, i64 8
  %1530 = bitcast i8* %1529 to <2 x i32>*
  %1531 = load <2 x i32>, <2 x i32>* %1530, align 1
  %1532 = extractelement <2 x i32> %1528, i32 0
  %1533 = bitcast i8* %1523 to i32*
  store i32 %1532, i32* %1533, align 1, !tbaa !2454
  %1534 = extractelement <2 x i32> %1528, i32 1
  %1535 = getelementptr inbounds i8, i8* %1523, i64 4
  %1536 = bitcast i8* %1535 to i32*
  store i32 %1534, i32* %1536, align 1, !tbaa !2454
  %1537 = extractelement <2 x i32> %1531, i32 0
  %1538 = getelementptr inbounds i8, i8* %1523, i64 8
  %1539 = bitcast i8* %1538 to i32*
  store i32 %1537, i32* %1539, align 1, !tbaa !2454
  %1540 = extractelement <2 x i32> %1531, i32 1
  %1541 = getelementptr inbounds i8, i8* %1523, i64 12
  %1542 = bitcast i8* %1541 to i32*
  store i32 %1540, i32* %1542, align 1, !tbaa !2454
  %1543 = load i64, i64* %PC
  %1544 = add i64 %1543, 1385
  %1545 = load i64, i64* %PC
  %1546 = add i64 %1545, 5
  %1547 = load i64, i64* %PC
  %1548 = add i64 %1547, 5
  store i64 %1548, i64* %PC
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1550 = load i64, i64* %1549, align 8, !tbaa !2428
  %1551 = add i64 %1550, -8
  %1552 = inttoptr i64 %1551 to i64*
  store i64 %1546, i64* %1552
  store i64 %1551, i64* %1549, align 8, !tbaa !2428
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1544, i64* %1553, align 8, !tbaa !2428
  %1554 = load i64, i64* %PC
  %1555 = call %struct.Memory* @sub_400f30_trace_line_renamed_(%struct.State* %0, i64 %1554, %struct.Memory* %MEMORY.8)
  %1556 = load i64, i64* %PC
  %1557 = add i64 %1556, 5
  store i64 %1557, i64* %PC
  store i64 6, i64* %RDI, align 8, !tbaa !2428
  %1558 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1559 = load i64, i64* %PC
  %1560 = add i64 %1559, 8
  store i64 %1560, i64* %PC
  %1561 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 112) to double*)
  %1562 = bitcast i8* %1558 to double*
  store double %1561, double* %1562, align 1, !tbaa !2452
  %1563 = getelementptr inbounds i8, i8* %1558, i64 8
  %1564 = bitcast i8* %1563 to double*
  store double 0.000000e+00, double* %1564, align 1, !tbaa !2452
  %1565 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1566 = load i64, i64* %PC
  %1567 = add i64 %1566, 9
  store i64 %1567, i64* %PC
  %1568 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %1569 = bitcast i8* %1565 to double*
  store double %1568, double* %1569, align 1, !tbaa !2452
  %1570 = getelementptr inbounds i8, i8* %1565, i64 8
  %1571 = bitcast i8* %1570 to double*
  store double 0.000000e+00, double* %1571, align 1, !tbaa !2452
  %1572 = load i64, i64* %RBP
  %1573 = sub i64 %1572, 48
  %1574 = bitcast %union.vec128_t* %XMM1 to i8*
  %1575 = load i64, i64* %PC
  %1576 = add i64 %1575, 5
  store i64 %1576, i64* %PC
  %1577 = bitcast i8* %1574 to double*
  %1578 = load double, double* %1577, align 1
  %1579 = inttoptr i64 %1573 to double*
  store double %1578, double* %1579
  %1580 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1581 = load i64, i64* %PC
  %1582 = add i64 %1581, 9
  store i64 %1582, i64* %PC
  %1583 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %1584 = bitcast i8* %1580 to double*
  store double %1583, double* %1584, align 1, !tbaa !2452
  %1585 = getelementptr inbounds i8, i8* %1580, i64 8
  %1586 = bitcast i8* %1585 to double*
  store double 0.000000e+00, double* %1586, align 1, !tbaa !2452
  %1587 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1588 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1589 = bitcast %union.vec128_t* %XMM0 to i8*
  %1590 = load i64, i64* %PC
  %1591 = add i64 %1590, 4
  store i64 %1591, i64* %PC
  %1592 = bitcast i8* %1588 to double*
  %1593 = load double, double* %1592, align 1
  %1594 = getelementptr inbounds i8, i8* %1588, i64 8
  %1595 = bitcast i8* %1594 to i64*
  %1596 = load i64, i64* %1595, align 1
  %1597 = bitcast i8* %1589 to double*
  %1598 = load double, double* %1597, align 1
  %1599 = fdiv double %1593, %1598
  %1600 = bitcast i8* %1587 to double*
  store double %1599, double* %1600, align 1, !tbaa !2452
  %1601 = getelementptr inbounds i8, i8* %1587, i64 8
  %1602 = bitcast i8* %1601 to i64*
  store i64 %1596, i64* %1602, align 1, !tbaa !2452
  %1603 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1604 = bitcast %union.vec128_t* %XMM1 to i8*
  %1605 = load i64, i64* %PC
  %1606 = add i64 %1605, 3
  store i64 %1606, i64* %PC
  %1607 = bitcast i8* %1604 to <2 x i32>*
  %1608 = load <2 x i32>, <2 x i32>* %1607, align 1
  %1609 = getelementptr inbounds i8, i8* %1604, i64 8
  %1610 = bitcast i8* %1609 to <2 x i32>*
  %1611 = load <2 x i32>, <2 x i32>* %1610, align 1
  %1612 = extractelement <2 x i32> %1608, i32 0
  %1613 = bitcast i8* %1603 to i32*
  store i32 %1612, i32* %1613, align 1, !tbaa !2454
  %1614 = extractelement <2 x i32> %1608, i32 1
  %1615 = getelementptr inbounds i8, i8* %1603, i64 4
  %1616 = bitcast i8* %1615 to i32*
  store i32 %1614, i32* %1616, align 1, !tbaa !2454
  %1617 = extractelement <2 x i32> %1611, i32 0
  %1618 = getelementptr inbounds i8, i8* %1603, i64 8
  %1619 = bitcast i8* %1618 to i32*
  store i32 %1617, i32* %1619, align 1, !tbaa !2454
  %1620 = extractelement <2 x i32> %1611, i32 1
  %1621 = getelementptr inbounds i8, i8* %1603, i64 12
  %1622 = bitcast i8* %1621 to i32*
  store i32 %1620, i32* %1622, align 1, !tbaa !2454
  %1623 = load i64, i64* %RBP
  %1624 = sub i64 %1623, 76
  %1625 = load i32, i32* %EAX
  %1626 = zext i32 %1625 to i64
  %1627 = load i64, i64* %PC
  %1628 = add i64 %1627, 3
  store i64 %1628, i64* %PC
  %1629 = inttoptr i64 %1624 to i32*
  store i32 %1625, i32* %1629
  %1630 = load i64, i64* %PC
  %1631 = add i64 %1630, 1334
  %1632 = load i64, i64* %PC
  %1633 = add i64 %1632, 5
  %1634 = load i64, i64* %PC
  %1635 = add i64 %1634, 5
  store i64 %1635, i64* %PC
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1637 = load i64, i64* %1636, align 8, !tbaa !2428
  %1638 = add i64 %1637, -8
  %1639 = inttoptr i64 %1638 to i64*
  store i64 %1633, i64* %1639
  store i64 %1638, i64* %1636, align 8, !tbaa !2428
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1631, i64* %1640, align 8, !tbaa !2428
  %1641 = load i64, i64* %PC
  %1642 = call %struct.Memory* @sub_400f30_trace_line_renamed_(%struct.State* %0, i64 %1641, %struct.Memory* %1555)
  %1643 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1644 = load i64, i64* %PC
  %1645 = add i64 %1644, 8
  store i64 %1645, i64* %PC
  %1646 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 88) to double*)
  %1647 = bitcast i8* %1643 to double*
  store double %1646, double* %1647, align 1, !tbaa !2452
  %1648 = getelementptr inbounds i8, i8* %1643, i64 8
  %1649 = bitcast i8* %1648 to double*
  store double 0.000000e+00, double* %1649, align 1, !tbaa !2452
  %1650 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1651 = load i64, i64* %PC
  %1652 = add i64 %1651, 8
  store i64 %1652, i64* %PC
  %1653 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 96) to double*)
  %1654 = bitcast i8* %1650 to double*
  store double %1653, double* %1654, align 1, !tbaa !2452
  %1655 = getelementptr inbounds i8, i8* %1650, i64 8
  %1656 = bitcast i8* %1655 to double*
  store double 0.000000e+00, double* %1656, align 1, !tbaa !2452
  %1657 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %1658 = load i64, i64* %PC
  %1659 = add i64 %1658, 8
  store i64 %1659, i64* %PC
  %1660 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 104) to double*)
  %1661 = bitcast i8* %1657 to double*
  store double %1660, double* %1661, align 1, !tbaa !2452
  %1662 = getelementptr inbounds i8, i8* %1657, i64 8
  %1663 = bitcast i8* %1662 to double*
  store double 0.000000e+00, double* %1663, align 1, !tbaa !2452
  %1664 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1665 = load i64, i64* %PC
  %1666 = add i64 %1665, 9
  store i64 %1666, i64* %PC
  %1667 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %1668 = bitcast i8* %1664 to double*
  store double %1667, double* %1668, align 1, !tbaa !2452
  %1669 = getelementptr inbounds i8, i8* %1664, i64 8
  %1670 = bitcast i8* %1669 to double*
  store double 0.000000e+00, double* %1670, align 1, !tbaa !2452
  %1671 = load i64, i64* %RBP
  %1672 = sub i64 %1671, 40
  %1673 = bitcast %union.vec128_t* %XMM3 to i8*
  %1674 = load i64, i64* %PC
  %1675 = add i64 %1674, 5
  store i64 %1675, i64* %PC
  %1676 = bitcast i8* %1673 to double*
  %1677 = load double, double* %1676, align 1
  %1678 = inttoptr i64 %1672 to double*
  store double %1677, double* %1678
  %1679 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1680 = load i64, i64* %PC
  %1681 = add i64 %1680, 9
  store i64 %1681, i64* %PC
  %1682 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %1683 = bitcast i8* %1679 to double*
  store double %1682, double* %1683, align 1, !tbaa !2452
  %1684 = getelementptr inbounds i8, i8* %1679, i64 8
  %1685 = bitcast i8* %1684 to double*
  store double 0.000000e+00, double* %1685, align 1, !tbaa !2452
  %1686 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1687 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1688 = load i64, i64* %PC
  %1689 = add i64 %1688, 9
  store i64 %1689, i64* %PC
  %1690 = bitcast i8* %1687 to double*
  %1691 = load double, double* %1690, align 1
  %1692 = getelementptr inbounds i8, i8* %1687, i64 8
  %1693 = bitcast i8* %1692 to i64*
  %1694 = load i64, i64* %1693, align 1
  %1695 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %1696 = fsub double %1691, %1695
  %1697 = bitcast i8* %1686 to double*
  store double %1696, double* %1697, align 1, !tbaa !2452
  %1698 = getelementptr inbounds i8, i8* %1686, i64 8
  %1699 = bitcast i8* %1698 to i64*
  store i64 %1694, i64* %1699, align 1, !tbaa !2452
  %1700 = bitcast %union.vec128_t* %XMM3 to i8*
  %1701 = load i64, i64* %PC
  %1702 = add i64 %1701, 9
  store i64 %1702, i64* %PC
  %1703 = bitcast i8* %1700 to double*
  %1704 = load double, double* %1703, align 1
  store double %1704, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %1705 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1706 = load i64, i64* %PC
  %1707 = add i64 %1706, 9
  store i64 %1707, i64* %PC
  %1708 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %1709 = bitcast i8* %1705 to double*
  store double %1708, double* %1709, align 1, !tbaa !2452
  %1710 = getelementptr inbounds i8, i8* %1705, i64 8
  %1711 = bitcast i8* %1710 to double*
  store double 0.000000e+00, double* %1711, align 1, !tbaa !2452
  %1712 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1713 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %1714 = load i64, i64* %PC
  %1715 = add i64 %1714, 9
  store i64 %1715, i64* %PC
  %1716 = bitcast i8* %1713 to double*
  %1717 = load double, double* %1716, align 1
  %1718 = getelementptr inbounds i8, i8* %1713, i64 8
  %1719 = bitcast i8* %1718 to i64*
  %1720 = load i64, i64* %1719, align 1
  %1721 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %1722 = fmul double %1717, %1721
  %1723 = bitcast i8* %1712 to double*
  store double %1722, double* %1723, align 1, !tbaa !2452
  %1724 = getelementptr inbounds i8, i8* %1712, i64 8
  %1725 = bitcast i8* %1724 to i64*
  store i64 %1720, i64* %1725, align 1, !tbaa !2452
  %1726 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %1727 = load i64, i64* %PC
  %1728 = add i64 %1727, 9
  store i64 %1728, i64* %PC
  %1729 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %1730 = bitcast i8* %1726 to double*
  store double %1729, double* %1730, align 1, !tbaa !2452
  %1731 = getelementptr inbounds i8, i8* %1726, i64 8
  %1732 = bitcast i8* %1731 to double*
  store double 0.000000e+00, double* %1732, align 1, !tbaa !2452
  %1733 = load i64, i64* %RBP
  %1734 = sub i64 %1733, 88
  %1735 = bitcast %union.vec128_t* %XMM0 to i8*
  %1736 = load i64, i64* %PC
  %1737 = add i64 %1736, 5
  store i64 %1737, i64* %PC
  %1738 = bitcast i8* %1735 to double*
  %1739 = load double, double* %1738, align 1
  %1740 = inttoptr i64 %1734 to double*
  store double %1739, double* %1740
  %1741 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1742 = bitcast %union.vec128_t* %XMM4 to i8*
  %1743 = load i64, i64* %PC
  %1744 = add i64 %1743, 3
  store i64 %1744, i64* %PC
  %1745 = bitcast i8* %1742 to <2 x i32>*
  %1746 = load <2 x i32>, <2 x i32>* %1745, align 1
  %1747 = getelementptr inbounds i8, i8* %1742, i64 8
  %1748 = bitcast i8* %1747 to <2 x i32>*
  %1749 = load <2 x i32>, <2 x i32>* %1748, align 1
  %1750 = extractelement <2 x i32> %1746, i32 0
  %1751 = bitcast i8* %1741 to i32*
  store i32 %1750, i32* %1751, align 1, !tbaa !2454
  %1752 = extractelement <2 x i32> %1746, i32 1
  %1753 = getelementptr inbounds i8, i8* %1741, i64 4
  %1754 = bitcast i8* %1753 to i32*
  store i32 %1752, i32* %1754, align 1, !tbaa !2454
  %1755 = extractelement <2 x i32> %1749, i32 0
  %1756 = getelementptr inbounds i8, i8* %1741, i64 8
  %1757 = bitcast i8* %1756 to i32*
  store i32 %1755, i32* %1757, align 1, !tbaa !2454
  %1758 = extractelement <2 x i32> %1749, i32 1
  %1759 = getelementptr inbounds i8, i8* %1741, i64 12
  %1760 = bitcast i8* %1759 to i32*
  store i32 %1758, i32* %1760, align 1, !tbaa !2454
  %1761 = load i64, i64* %RBP
  %1762 = sub i64 %1761, 92
  %1763 = load i32, i32* %EAX
  %1764 = zext i32 %1763 to i64
  %1765 = load i64, i64* %PC
  %1766 = add i64 %1765, 3
  store i64 %1766, i64* %PC
  %1767 = inttoptr i64 %1762 to i32*
  store i32 %1763, i32* %1767
  %1768 = load i64, i64* %RBP
  %1769 = sub i64 %1768, 104
  %1770 = bitcast %union.vec128_t* %XMM3 to i8*
  %1771 = load i64, i64* %PC
  %1772 = add i64 %1771, 5
  store i64 %1772, i64* %PC
  %1773 = bitcast i8* %1770 to double*
  %1774 = load double, double* %1773, align 1
  %1775 = inttoptr i64 %1769 to double*
  store double %1774, double* %1775
  %1776 = load i64, i64* %RBP
  %1777 = sub i64 %1776, 112
  %1778 = bitcast %union.vec128_t* %XMM1 to i8*
  %1779 = load i64, i64* %PC
  %1780 = add i64 %1779, 5
  store i64 %1780, i64* %PC
  %1781 = bitcast i8* %1778 to double*
  %1782 = load double, double* %1781, align 1
  %1783 = inttoptr i64 %1777 to double*
  store double %1782, double* %1783
  %1784 = load i64, i64* %RBP
  %1785 = sub i64 %1784, 120
  %1786 = bitcast %union.vec128_t* %XMM2 to i8*
  %1787 = load i64, i64* %PC
  %1788 = add i64 %1787, 5
  store i64 %1788, i64* %PC
  %1789 = bitcast i8* %1786 to double*
  %1790 = load double, double* %1789, align 1
  %1791 = inttoptr i64 %1785 to double*
  store double %1790, double* %1791
  %1792 = load i64, i64* %PC
  %1793 = sub i64 %1792, 1173
  %1794 = load i64, i64* %PC
  %1795 = add i64 %1794, 5
  %1796 = load i64, i64* %PC
  %1797 = add i64 %1796, 5
  store i64 %1797, i64* %PC
  %1798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1799 = load i64, i64* %1798, align 8, !tbaa !2428
  %1800 = add i64 %1799, -8
  %1801 = inttoptr i64 %1800 to i64*
  store i64 %1795, i64* %1801
  store i64 %1800, i64* %1798, align 8, !tbaa !2428
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1793, i64* %1802, align 8, !tbaa !2428
  %1803 = load i64, i64* %PC
  %1804 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1804)
  %1805 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1805)
  %1806 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1806)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %1807 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1807)
  %1808 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1808)
  %1809 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1809)
  %1810 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1810)
  %1811 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1811)
  %1812 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1812)
  %1813 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1813)
  %1814 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1814)
  %1815 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1815)
  %1816 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1816)
  %1817 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1817)
  %1818 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1818)
  %1819 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1819)
  %1820 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1820)
  %1821 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1821)
  %1822 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1822)
  %1823 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1823)
  %1824 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1824)
  %1825 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1825)
  %1826 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1826)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2456
  store i64 %1803, i64* %curr_pc.i2, align 8, !noalias !2456
  store %struct.Memory* %1642, %struct.Memory** %memory.i3, align 8, !noalias !2456
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2456
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2456
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2456
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2456
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2456
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2456
  store %struct.Memory* %1642, %struct.Memory** %MEMORY.i10, align 8, !noalias !2456
  %1827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1828 = getelementptr inbounds %struct.GPR, %struct.GPR* %1827, i32 0, i32 33
  %1829 = getelementptr inbounds %struct.Reg, %struct.Reg* %1828, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %1829 to i64*
  store i64 %1803, i64* %PC.i25, align 8, !alias.scope !2460, !noalias !2461
  %1830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1831 = getelementptr inbounds %struct.GPR, %struct.GPR* %1830, i32 0, i32 1
  %1832 = getelementptr inbounds %struct.Reg, %struct.Reg* %1831, i32 0, i32 0
  %1833 = bitcast %union.anon* %1832 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1833, i32 0, i32 1
  %1834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1835 = getelementptr inbounds %struct.GPR, %struct.GPR* %1834, i32 0, i32 3
  %1836 = getelementptr inbounds %struct.Reg, %struct.Reg* %1835, i32 0, i32 0
  %1837 = bitcast %union.anon* %1836 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1837, i32 0, i32 1
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 5
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %1841 = bitcast %union.anon* %1840 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1841, i32 0, i32 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1843 = getelementptr inbounds %struct.GPR, %struct.GPR* %1842, i32 0, i32 7
  %1844 = getelementptr inbounds %struct.Reg, %struct.Reg* %1843, i32 0, i32 0
  %1845 = bitcast %union.anon* %1844 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1845, i32 0, i32 1
  %1846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1847 = getelementptr inbounds %struct.GPR, %struct.GPR* %1846, i32 0, i32 1
  %1848 = getelementptr inbounds %struct.Reg, %struct.Reg* %1847, i32 0, i32 0
  %1849 = bitcast %union.anon* %1848 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1849, i32 0, i32 0
  %1850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1851 = getelementptr inbounds %struct.GPR, %struct.GPR* %1850, i32 0, i32 3
  %1852 = getelementptr inbounds %struct.Reg, %struct.Reg* %1851, i32 0, i32 0
  %1853 = bitcast %union.anon* %1852 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1853, i32 0, i32 0
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1855 = getelementptr inbounds %struct.GPR, %struct.GPR* %1854, i32 0, i32 5
  %1856 = getelementptr inbounds %struct.Reg, %struct.Reg* %1855, i32 0, i32 0
  %1857 = bitcast %union.anon* %1856 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1857, i32 0, i32 0
  %1858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1859 = getelementptr inbounds %struct.GPR, %struct.GPR* %1858, i32 0, i32 7
  %1860 = getelementptr inbounds %struct.Reg, %struct.Reg* %1859, i32 0, i32 0
  %1861 = bitcast %union.anon* %1860 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1861, i32 0, i32 0
  %1862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1863 = getelementptr inbounds %struct.GPR, %struct.GPR* %1862, i32 0, i32 9
  %1864 = getelementptr inbounds %struct.Reg, %struct.Reg* %1863, i32 0, i32 0
  %1865 = bitcast %union.anon* %1864 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1865, i32 0, i32 0
  %1866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1867 = getelementptr inbounds %struct.GPR, %struct.GPR* %1866, i32 0, i32 11
  %1868 = getelementptr inbounds %struct.Reg, %struct.Reg* %1867, i32 0, i32 0
  %1869 = bitcast %union.anon* %1868 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1869, i32 0, i32 0
  %1870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1871 = getelementptr inbounds %struct.GPR, %struct.GPR* %1870, i32 0, i32 13
  %1872 = getelementptr inbounds %struct.Reg, %struct.Reg* %1871, i32 0, i32 0
  %1873 = bitcast %union.anon* %1872 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1873, i32 0, i32 0
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 15
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %1877 = bitcast %union.anon* %1876 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1877, i32 0, i32 0
  %1878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1879 = getelementptr inbounds %struct.GPR, %struct.GPR* %1878, i32 0, i32 17
  %1880 = getelementptr inbounds %struct.Reg, %struct.Reg* %1879, i32 0, i32 0
  %1881 = bitcast %union.anon* %1880 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1881, i32 0, i32 0
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1883 = getelementptr inbounds %struct.GPR, %struct.GPR* %1882, i32 0, i32 19
  %1884 = getelementptr inbounds %struct.Reg, %struct.Reg* %1883, i32 0, i32 0
  %1885 = bitcast %union.anon* %1884 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1885, i32 0, i32 0
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 21
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %1889 = bitcast %union.anon* %1888 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1889, i32 0, i32 0
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1891 = getelementptr inbounds %struct.GPR, %struct.GPR* %1890, i32 0, i32 23
  %1892 = getelementptr inbounds %struct.Reg, %struct.Reg* %1891, i32 0, i32 0
  %1893 = bitcast %union.anon* %1892 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1893, i32 0, i32 0
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1895 = getelementptr inbounds %struct.GPR, %struct.GPR* %1894, i32 0, i32 25
  %1896 = getelementptr inbounds %struct.Reg, %struct.Reg* %1895, i32 0, i32 0
  %1897 = bitcast %union.anon* %1896 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1897, i32 0, i32 0
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 27
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %1901 = bitcast %union.anon* %1900 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1901, i32 0, i32 0
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 29
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %1905 = bitcast %union.anon* %1904 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1905, i32 0, i32 0
  %1906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1907 = getelementptr inbounds %struct.GPR, %struct.GPR* %1906, i32 0, i32 31
  %1908 = getelementptr inbounds %struct.Reg, %struct.Reg* %1907, i32 0, i32 0
  %1909 = bitcast %union.anon* %1908 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1909, i32 0, i32 0
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 1
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %1912 to i16*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 3
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %1915 to i16*
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 5
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %1918 to i16*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 7
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %1921 to i16*
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1923 = getelementptr inbounds %struct.GPR, %struct.GPR* %1922, i32 0, i32 9
  %1924 = getelementptr inbounds %struct.Reg, %struct.Reg* %1923, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %1924 to i16*
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1926 = getelementptr inbounds %struct.GPR, %struct.GPR* %1925, i32 0, i32 11
  %1927 = getelementptr inbounds %struct.Reg, %struct.Reg* %1926, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %1927 to i16*
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 13
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %1930 to i16*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 15
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %1933 to i16*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 17
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %1936 to i16*
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1938 = getelementptr inbounds %struct.GPR, %struct.GPR* %1937, i32 0, i32 19
  %1939 = getelementptr inbounds %struct.Reg, %struct.Reg* %1938, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %1939 to i16*
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1941 = getelementptr inbounds %struct.GPR, %struct.GPR* %1940, i32 0, i32 21
  %1942 = getelementptr inbounds %struct.Reg, %struct.Reg* %1941, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %1942 to i16*
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 23
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %1945 to i16*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 25
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %1948 to i16*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1950 = getelementptr inbounds %struct.GPR, %struct.GPR* %1949, i32 0, i32 27
  %1951 = getelementptr inbounds %struct.Reg, %struct.Reg* %1950, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %1951 to i16*
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 29
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %1954 to i16*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 31
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %1957 to i16*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 33
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %1960 to i16*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 1
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %1963 to i32*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 3
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %1966 to i32*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 5
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %1969 to i32*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 7
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %1972 to i32*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 9
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %1975 to i32*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 11
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %1978 to i32*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 13
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %1981 to i32*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 15
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %1984 to i32*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 33
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %1987 to i32*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 17
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %1990 to i32*
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 19
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %1993 to i32*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 21
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %1996 to i32*
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 23
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %1999 to i32*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 25
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %2002 to i32*
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2004 = getelementptr inbounds %struct.GPR, %struct.GPR* %2003, i32 0, i32 27
  %2005 = getelementptr inbounds %struct.Reg, %struct.Reg* %2004, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %2005 to i32*
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 29
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %2008 to i32*
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 31
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %2011 to i32*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 1
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %2014 to i64*
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2016 = getelementptr inbounds %struct.GPR, %struct.GPR* %2015, i32 0, i32 3
  %2017 = getelementptr inbounds %struct.Reg, %struct.Reg* %2016, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %2017 to i64*
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2019 = getelementptr inbounds %struct.GPR, %struct.GPR* %2018, i32 0, i32 5
  %2020 = getelementptr inbounds %struct.Reg, %struct.Reg* %2019, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %2020 to i64*
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2022 = getelementptr inbounds %struct.GPR, %struct.GPR* %2021, i32 0, i32 7
  %2023 = getelementptr inbounds %struct.Reg, %struct.Reg* %2022, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %2023 to i64*
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 9
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %2026 to i64*
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2028 = getelementptr inbounds %struct.GPR, %struct.GPR* %2027, i32 0, i32 11
  %2029 = getelementptr inbounds %struct.Reg, %struct.Reg* %2028, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %2029 to i64*
  %2030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2031 = getelementptr inbounds %struct.GPR, %struct.GPR* %2030, i32 0, i32 13
  %2032 = getelementptr inbounds %struct.Reg, %struct.Reg* %2031, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %2032 to i64*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2034 = getelementptr inbounds %struct.GPR, %struct.GPR* %2033, i32 0, i32 15
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2037 = getelementptr inbounds %struct.GPR, %struct.GPR* %2036, i32 0, i32 17
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %2038 to i64*
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2040 = getelementptr inbounds %struct.GPR, %struct.GPR* %2039, i32 0, i32 19
  %2041 = getelementptr inbounds %struct.Reg, %struct.Reg* %2040, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %2041 to i64*
  %2042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2043 = getelementptr inbounds %struct.GPR, %struct.GPR* %2042, i32 0, i32 21
  %2044 = getelementptr inbounds %struct.Reg, %struct.Reg* %2043, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %2044 to i64*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2046 = getelementptr inbounds %struct.GPR, %struct.GPR* %2045, i32 0, i32 23
  %2047 = getelementptr inbounds %struct.Reg, %struct.Reg* %2046, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %2047 to i64*
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2049 = getelementptr inbounds %struct.GPR, %struct.GPR* %2048, i32 0, i32 25
  %2050 = getelementptr inbounds %struct.Reg, %struct.Reg* %2049, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %2050 to i64*
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2052 = getelementptr inbounds %struct.GPR, %struct.GPR* %2051, i32 0, i32 27
  %2053 = getelementptr inbounds %struct.Reg, %struct.Reg* %2052, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %2053 to i64*
  %2054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2055 = getelementptr inbounds %struct.GPR, %struct.GPR* %2054, i32 0, i32 29
  %2056 = getelementptr inbounds %struct.Reg, %struct.Reg* %2055, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %2056 to i64*
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2058 = getelementptr inbounds %struct.GPR, %struct.GPR* %2057, i32 0, i32 31
  %2059 = getelementptr inbounds %struct.Reg, %struct.Reg* %2058, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %2059 to i64*
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2061 = getelementptr inbounds %struct.GPR, %struct.GPR* %2060, i32 0, i32 33
  %2062 = getelementptr inbounds %struct.Reg, %struct.Reg* %2061, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %2062 to i64*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2064 = getelementptr inbounds %struct.Segments, %struct.Segments* %2063, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %2064 to i16*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2066 = getelementptr inbounds %struct.Segments, %struct.Segments* %2065, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %2066 to i16*
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2068 = getelementptr inbounds %struct.Segments, %struct.Segments* %2067, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %2068 to i16*
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2070 = getelementptr inbounds %struct.Segments, %struct.Segments* %2069, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %2070 to i16*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2072 = getelementptr inbounds %struct.Segments, %struct.Segments* %2071, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %2072 to i16*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2074 = getelementptr inbounds %struct.Segments, %struct.Segments* %2073, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %2074 to i16*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2076 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2075, i32 0, i32 5
  %2077 = getelementptr inbounds %struct.Reg, %struct.Reg* %2076, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %2077 to i64*
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2079 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2078, i32 0, i32 7
  %2080 = getelementptr inbounds %struct.Reg, %struct.Reg* %2079, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %2080 to i64*
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2081, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %2082 to %"class.std::bitset"*
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2084 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2083, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %2084 to %"class.std::bitset"*
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2086 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2085, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %2086 to %"class.std::bitset"*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2087, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %2088 to %"class.std::bitset"*
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2089, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %2090 to %"class.std::bitset"*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2091, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %2092 to %"class.std::bitset"*
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2093, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %2094 to %"class.std::bitset"*
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2096 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2095, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %2096 to %"class.std::bitset"*
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2097, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %2098 to %"class.std::bitset"*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2100 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2099, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %2100 to %"class.std::bitset"*
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2102 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2101, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %2102 to %"class.std::bitset"*
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2104 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2103, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %2104 to %"class.std::bitset"*
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2106 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2105, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %2106 to %"class.std::bitset"*
  %2107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2108 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2107, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %2108 to %"class.std::bitset"*
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2110 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2109, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %2110 to %"class.std::bitset"*
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2112 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2111, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %2112 to %"class.std::bitset"*
  %2113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2114 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2113, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %2114 to %union.vec128_t*
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2116 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2115, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %2116 to %union.vec128_t*
  %2117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2118 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2117, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %2118 to %union.vec128_t*
  %2119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2120 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2119, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %2120 to %union.vec128_t*
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2122 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2121, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %2122 to %union.vec128_t*
  %2123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2124 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2123, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %2124 to %union.vec128_t*
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2126 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2125, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %2126 to %union.vec128_t*
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2128 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2127, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %2128 to %union.vec128_t*
  %2129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2130 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2129, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %2130 to %union.vec128_t*
  %2131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2132 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2131, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %2132 to %union.vec128_t*
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2134 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2133, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %2134 to %union.vec128_t*
  %2135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2136 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2135, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %2136 to %union.vec128_t*
  %2137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2138 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2137, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %2138 to %union.vec128_t*
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2140 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2139, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %2140 to %union.vec128_t*
  %2141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2142 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2141, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %2142 to %union.vec128_t*
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2144 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2143, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %2144 to %union.vec128_t*
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2146 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2145, i32 0, i32 0
  %2147 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2146, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2147, i32 0, i32 1
  %2148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2149 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2148, i32 0, i32 0
  %2150 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2149, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2150, i32 0, i32 1
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2152 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2151, i32 0, i32 0
  %2153 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2152, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2153, i32 0, i32 1
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2155 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2154, i32 0, i32 0
  %2156 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2155, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2156, i32 0, i32 1
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2158 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2157, i32 0, i32 0
  %2159 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2158, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2159, i32 0, i32 1
  %2160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2161 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2160, i32 0, i32 0
  %2162 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2161, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2162, i32 0, i32 1
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2164 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2163, i32 0, i32 0
  %2165 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2164, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2165, i32 0, i32 1
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2167 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2166, i32 0, i32 0
  %2168 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2167, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2168, i32 0, i32 1
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2170 = getelementptr inbounds %struct.MMX, %struct.MMX* %2169, i32 0, i32 0
  %2171 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2170, i64 0, i64 0
  %2172 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2171, i32 0, i32 1
  %2173 = bitcast %union.vec64_t* %2172 to %struct.uint64v1_t*
  %2174 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2173, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %2174, i64 0, i64 0
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2176 = getelementptr inbounds %struct.MMX, %struct.MMX* %2175, i32 0, i32 0
  %2177 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2176, i64 0, i64 1
  %2178 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2177, i32 0, i32 1
  %2179 = bitcast %union.vec64_t* %2178 to %struct.uint64v1_t*
  %2180 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2179, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %2180, i64 0, i64 0
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2182 = getelementptr inbounds %struct.MMX, %struct.MMX* %2181, i32 0, i32 0
  %2183 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2182, i64 0, i64 2
  %2184 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2183, i32 0, i32 1
  %2185 = bitcast %union.vec64_t* %2184 to %struct.uint64v1_t*
  %2186 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2185, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %2186, i64 0, i64 0
  %2187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2188 = getelementptr inbounds %struct.MMX, %struct.MMX* %2187, i32 0, i32 0
  %2189 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2188, i64 0, i64 3
  %2190 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2189, i32 0, i32 1
  %2191 = bitcast %union.vec64_t* %2190 to %struct.uint64v1_t*
  %2192 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2191, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %2192, i64 0, i64 0
  %2193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2194 = getelementptr inbounds %struct.MMX, %struct.MMX* %2193, i32 0, i32 0
  %2195 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2194, i64 0, i64 4
  %2196 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2195, i32 0, i32 1
  %2197 = bitcast %union.vec64_t* %2196 to %struct.uint64v1_t*
  %2198 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2197, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %2198, i64 0, i64 0
  %2199 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2200 = getelementptr inbounds %struct.MMX, %struct.MMX* %2199, i32 0, i32 0
  %2201 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2200, i64 0, i64 5
  %2202 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2201, i32 0, i32 1
  %2203 = bitcast %union.vec64_t* %2202 to %struct.uint64v1_t*
  %2204 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2203, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %2204, i64 0, i64 0
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2206 = getelementptr inbounds %struct.MMX, %struct.MMX* %2205, i32 0, i32 0
  %2207 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2206, i64 0, i64 6
  %2208 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2207, i32 0, i32 1
  %2209 = bitcast %union.vec64_t* %2208 to %struct.uint64v1_t*
  %2210 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2209, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %2210, i64 0, i64 0
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2212 = getelementptr inbounds %struct.MMX, %struct.MMX* %2211, i32 0, i32 0
  %2213 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2212, i64 0, i64 7
  %2214 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2213, i32 0, i32 1
  %2215 = bitcast %union.vec64_t* %2214 to %struct.uint64v1_t*
  %2216 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2215, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %2216, i64 0, i64 0
  %2217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2217, i32 0, i32 5
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2218, i32 0, i32 1
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2219, i32 0, i32 11
  %2220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2220, i32 0, i32 13
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2221, i32 0, i32 3
  %2222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2222, i32 0, i32 9
  %2223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2223, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2456
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2456
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2456
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2456
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2456
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2456
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2456
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2456
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2456
  %2224 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %2225 = load double, double* %2224, !alias.scope !2460, !noalias !2461
  %2226 = load i64, i64* %RSP.i86, !alias.scope !2460, !noalias !2461
  %2227 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2456
  %2228 = inttoptr i64 %2226 to i64*
  %2229 = load i64, i64* %2228
  store i64 %2229, i64* %PC.i25, !alias.scope !2460, !noalias !2461
  %2230 = add i64 %2226, 8
  store i64 %2230, i64* %RSP.i86, !alias.scope !2460, !noalias !2461
  %2231 = call double @sin(double %2225)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2460, !noalias !2461
  %2232 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %2231, double* %2232, !alias.scope !2460, !noalias !2461
  %2233 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2456
  %2234 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2234)
  %2235 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2235)
  %2236 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2236)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %2237 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2237)
  %2238 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2238)
  %2239 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2239)
  %2240 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2240)
  %2241 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2241)
  %2242 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2242)
  %2243 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2243)
  %2244 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2244)
  %2245 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2245)
  %2246 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2246)
  %2247 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2247)
  %2248 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2248)
  %2249 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2249)
  %2250 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2250)
  %2251 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2251)
  %2252 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2252)
  %2253 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2253)
  %2254 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2254)
  %2255 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2255)
  %2256 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2256)
  %2257 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2258 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2259 = load i64, i64* %PC
  %2260 = add i64 %2259, 9
  store i64 %2260, i64* %PC
  %2261 = bitcast i8* %2258 to double*
  %2262 = load double, double* %2261, align 1
  %2263 = getelementptr inbounds i8, i8* %2258, i64 8
  %2264 = bitcast i8* %2263 to i64*
  %2265 = load i64, i64* %2264, align 1
  %2266 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %2267 = fmul double %2262, %2266
  %2268 = bitcast i8* %2257 to double*
  store double %2267, double* %2268, align 1, !tbaa !2452
  %2269 = getelementptr inbounds i8, i8* %2257, i64 8
  %2270 = bitcast i8* %2269 to i64*
  store i64 %2265, i64* %2270, align 1, !tbaa !2452
  %2271 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2272 = load i64, i64* %RBP
  %2273 = sub i64 %2272, 104
  %2274 = load i64, i64* %PC
  %2275 = add i64 %2274, 5
  store i64 %2275, i64* %PC
  %2276 = inttoptr i64 %2273 to double*
  %2277 = load double, double* %2276
  %2278 = bitcast i8* %2271 to double*
  store double %2277, double* %2278, align 1, !tbaa !2452
  %2279 = getelementptr inbounds i8, i8* %2271, i64 8
  %2280 = bitcast i8* %2279 to double*
  store double 0.000000e+00, double* %2280, align 1, !tbaa !2452
  %2281 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2282 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2283 = bitcast %union.vec128_t* %XMM0 to i8*
  %2284 = load i64, i64* %PC
  %2285 = add i64 %2284, 4
  store i64 %2285, i64* %PC
  %2286 = bitcast i8* %2282 to double*
  %2287 = load double, double* %2286, align 1
  %2288 = getelementptr inbounds i8, i8* %2282, i64 8
  %2289 = bitcast i8* %2288 to i64*
  %2290 = load i64, i64* %2289, align 1
  %2291 = bitcast i8* %2283 to double*
  %2292 = load double, double* %2291, align 1
  %2293 = fdiv double %2287, %2292
  %2294 = bitcast i8* %2281 to double*
  store double %2293, double* %2294, align 1, !tbaa !2452
  %2295 = getelementptr inbounds i8, i8* %2281, i64 8
  %2296 = bitcast i8* %2295 to i64*
  store i64 %2290, i64* %2296, align 1, !tbaa !2452
  %2297 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2298 = load i64, i64* %RBP
  %2299 = sub i64 %2298, 120
  %2300 = load i64, i64* %PC
  %2301 = add i64 %2300, 5
  store i64 %2301, i64* %PC
  %2302 = inttoptr i64 %2299 to double*
  %2303 = load double, double* %2302
  %2304 = bitcast i8* %2297 to double*
  store double %2303, double* %2304, align 1, !tbaa !2452
  %2305 = getelementptr inbounds i8, i8* %2297, i64 8
  %2306 = bitcast i8* %2305 to double*
  store double 0.000000e+00, double* %2306, align 1, !tbaa !2452
  %2307 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2308 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2309 = bitcast %union.vec128_t* %XMM1 to i8*
  %2310 = load i64, i64* %PC
  %2311 = add i64 %2310, 4
  store i64 %2311, i64* %PC
  %2312 = bitcast i8* %2308 to double*
  %2313 = load double, double* %2312, align 1
  %2314 = getelementptr inbounds i8, i8* %2308, i64 8
  %2315 = bitcast i8* %2314 to i64*
  %2316 = load i64, i64* %2315, align 1
  %2317 = bitcast i8* %2309 to double*
  %2318 = load double, double* %2317, align 1
  %2319 = fsub double %2313, %2318
  %2320 = bitcast i8* %2307 to double*
  store double %2319, double* %2320, align 1, !tbaa !2452
  %2321 = getelementptr inbounds i8, i8* %2307, i64 8
  %2322 = bitcast i8* %2321 to i64*
  store i64 %2316, i64* %2322, align 1, !tbaa !2452
  %2323 = bitcast %union.vec128_t* %XMM0 to i8*
  %2324 = load i64, i64* %PC
  %2325 = add i64 %2324, 9
  store i64 %2325, i64* %PC
  %2326 = bitcast i8* %2323 to double*
  %2327 = load double, double* %2326, align 1
  store double %2327, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %2328 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2329 = load i64, i64* %RBP
  %2330 = sub i64 %2329, 40
  %2331 = load i64, i64* %PC
  %2332 = add i64 %2331, 5
  store i64 %2332, i64* %PC
  %2333 = inttoptr i64 %2330 to double*
  %2334 = load double, double* %2333
  %2335 = bitcast i8* %2328 to double*
  store double %2334, double* %2335, align 1, !tbaa !2452
  %2336 = getelementptr inbounds i8, i8* %2328, i64 8
  %2337 = bitcast i8* %2336 to double*
  store double 0.000000e+00, double* %2337, align 1, !tbaa !2452
  %2338 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2339 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2340 = load i64, i64* %RBP
  %2341 = sub i64 %2340, 48
  %2342 = load i64, i64* %PC
  %2343 = add i64 %2342, 5
  store i64 %2343, i64* %PC
  %2344 = bitcast i8* %2339 to double*
  %2345 = load double, double* %2344, align 1
  %2346 = getelementptr inbounds i8, i8* %2339, i64 8
  %2347 = bitcast i8* %2346 to i64*
  %2348 = load i64, i64* %2347, align 1
  %2349 = inttoptr i64 %2341 to double*
  %2350 = load double, double* %2349
  %2351 = fsub double %2345, %2350
  %2352 = bitcast i8* %2338 to double*
  store double %2351, double* %2352, align 1, !tbaa !2452
  %2353 = getelementptr inbounds i8, i8* %2338, i64 8
  %2354 = bitcast i8* %2353 to i64*
  store i64 %2348, i64* %2354, align 1, !tbaa !2452
  %2355 = bitcast %union.vec128_t* %XMM0 to i8*
  %2356 = load i64, i64* %PC
  %2357 = add i64 %2356, 9
  store i64 %2357, i64* %PC
  %2358 = bitcast i8* %2355 to double*
  %2359 = load double, double* %2358, align 1
  store double %2359, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %2360 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2361 = load i64, i64* %PC
  %2362 = add i64 %2361, 9
  store i64 %2362, i64* %PC
  %2363 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %2364 = bitcast i8* %2360 to double*
  store double %2363, double* %2364, align 1, !tbaa !2452
  %2365 = getelementptr inbounds i8, i8* %2360, i64 8
  %2366 = bitcast i8* %2365 to double*
  store double 0.000000e+00, double* %2366, align 1, !tbaa !2452
  %2367 = load i64, i64* %PC
  %2368 = sub i64 %2367, 1242
  %2369 = load i64, i64* %PC
  %2370 = add i64 %2369, 5
  %2371 = load i64, i64* %PC
  %2372 = add i64 %2371, 5
  store i64 %2372, i64* %PC
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2374 = load i64, i64* %2373, align 8, !tbaa !2428
  %2375 = add i64 %2374, -8
  %2376 = inttoptr i64 %2375 to i64*
  store i64 %2370, i64* %2376
  store i64 %2375, i64* %2373, align 8, !tbaa !2428
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2368, i64* %2377, align 8, !tbaa !2428
  %2378 = load i64, i64* %PC
  %2379 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2379)
  %2380 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2380)
  %2381 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2381)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %2382 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2382)
  %2383 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2383)
  %2384 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2384)
  %2385 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2385)
  %2386 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2386)
  %2387 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2387)
  %2388 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2388)
  %2389 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2389)
  %2390 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2390)
  %2391 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2391)
  %2392 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2392)
  %2393 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2393)
  %2394 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2394)
  %2395 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2395)
  %2396 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2396)
  %2397 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2397)
  %2398 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2398)
  %2399 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2399)
  %2400 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2400)
  %2401 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2401)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2462
  store i64 %2378, i64* %curr_pc.i, align 8, !noalias !2462
  store %struct.Memory* %2233, %struct.Memory** %memory.i, align 8, !noalias !2462
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2462
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2462
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2462
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2462
  store %struct.Memory* %2233, %struct.Memory** %MEMORY.i, align 8, !noalias !2462
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2403 = getelementptr inbounds %struct.GPR, %struct.GPR* %2402, i32 0, i32 33
  %2404 = getelementptr inbounds %struct.Reg, %struct.Reg* %2403, i32 0, i32 0
  %PC.i = bitcast %union.anon* %2404 to i64*
  store i64 %2378, i64* %PC.i, align 8, !alias.scope !2466, !noalias !2467
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2406 = getelementptr inbounds %struct.GPR, %struct.GPR* %2405, i32 0, i32 1
  %2407 = getelementptr inbounds %struct.Reg, %struct.Reg* %2406, i32 0, i32 0
  %2408 = bitcast %union.anon* %2407 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2408, i32 0, i32 1
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2410 = getelementptr inbounds %struct.GPR, %struct.GPR* %2409, i32 0, i32 3
  %2411 = getelementptr inbounds %struct.Reg, %struct.Reg* %2410, i32 0, i32 0
  %2412 = bitcast %union.anon* %2411 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2412, i32 0, i32 1
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2414 = getelementptr inbounds %struct.GPR, %struct.GPR* %2413, i32 0, i32 5
  %2415 = getelementptr inbounds %struct.Reg, %struct.Reg* %2414, i32 0, i32 0
  %2416 = bitcast %union.anon* %2415 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2416, i32 0, i32 1
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 7
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %2420 = bitcast %union.anon* %2419 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2420, i32 0, i32 1
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2422 = getelementptr inbounds %struct.GPR, %struct.GPR* %2421, i32 0, i32 1
  %2423 = getelementptr inbounds %struct.Reg, %struct.Reg* %2422, i32 0, i32 0
  %2424 = bitcast %union.anon* %2423 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2424, i32 0, i32 0
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2426 = getelementptr inbounds %struct.GPR, %struct.GPR* %2425, i32 0, i32 3
  %2427 = getelementptr inbounds %struct.Reg, %struct.Reg* %2426, i32 0, i32 0
  %2428 = bitcast %union.anon* %2427 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2428, i32 0, i32 0
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2430 = getelementptr inbounds %struct.GPR, %struct.GPR* %2429, i32 0, i32 5
  %2431 = getelementptr inbounds %struct.Reg, %struct.Reg* %2430, i32 0, i32 0
  %2432 = bitcast %union.anon* %2431 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2432, i32 0, i32 0
  %2433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2434 = getelementptr inbounds %struct.GPR, %struct.GPR* %2433, i32 0, i32 7
  %2435 = getelementptr inbounds %struct.Reg, %struct.Reg* %2434, i32 0, i32 0
  %2436 = bitcast %union.anon* %2435 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2436, i32 0, i32 0
  %2437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2438 = getelementptr inbounds %struct.GPR, %struct.GPR* %2437, i32 0, i32 9
  %2439 = getelementptr inbounds %struct.Reg, %struct.Reg* %2438, i32 0, i32 0
  %2440 = bitcast %union.anon* %2439 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2440, i32 0, i32 0
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2442 = getelementptr inbounds %struct.GPR, %struct.GPR* %2441, i32 0, i32 11
  %2443 = getelementptr inbounds %struct.Reg, %struct.Reg* %2442, i32 0, i32 0
  %2444 = bitcast %union.anon* %2443 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2444, i32 0, i32 0
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2446 = getelementptr inbounds %struct.GPR, %struct.GPR* %2445, i32 0, i32 13
  %2447 = getelementptr inbounds %struct.Reg, %struct.Reg* %2446, i32 0, i32 0
  %2448 = bitcast %union.anon* %2447 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2448, i32 0, i32 0
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 15
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %2452 = bitcast %union.anon* %2451 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2452, i32 0, i32 0
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2454 = getelementptr inbounds %struct.GPR, %struct.GPR* %2453, i32 0, i32 17
  %2455 = getelementptr inbounds %struct.Reg, %struct.Reg* %2454, i32 0, i32 0
  %2456 = bitcast %union.anon* %2455 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2456, i32 0, i32 0
  %2457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2458 = getelementptr inbounds %struct.GPR, %struct.GPR* %2457, i32 0, i32 19
  %2459 = getelementptr inbounds %struct.Reg, %struct.Reg* %2458, i32 0, i32 0
  %2460 = bitcast %union.anon* %2459 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2460, i32 0, i32 0
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 21
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %2464 = bitcast %union.anon* %2463 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2464, i32 0, i32 0
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2466 = getelementptr inbounds %struct.GPR, %struct.GPR* %2465, i32 0, i32 23
  %2467 = getelementptr inbounds %struct.Reg, %struct.Reg* %2466, i32 0, i32 0
  %2468 = bitcast %union.anon* %2467 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2468, i32 0, i32 0
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2470 = getelementptr inbounds %struct.GPR, %struct.GPR* %2469, i32 0, i32 25
  %2471 = getelementptr inbounds %struct.Reg, %struct.Reg* %2470, i32 0, i32 0
  %2472 = bitcast %union.anon* %2471 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2472, i32 0, i32 0
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2474 = getelementptr inbounds %struct.GPR, %struct.GPR* %2473, i32 0, i32 27
  %2475 = getelementptr inbounds %struct.Reg, %struct.Reg* %2474, i32 0, i32 0
  %2476 = bitcast %union.anon* %2475 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2476, i32 0, i32 0
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2478 = getelementptr inbounds %struct.GPR, %struct.GPR* %2477, i32 0, i32 29
  %2479 = getelementptr inbounds %struct.Reg, %struct.Reg* %2478, i32 0, i32 0
  %2480 = bitcast %union.anon* %2479 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2480, i32 0, i32 0
  %2481 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2482 = getelementptr inbounds %struct.GPR, %struct.GPR* %2481, i32 0, i32 31
  %2483 = getelementptr inbounds %struct.Reg, %struct.Reg* %2482, i32 0, i32 0
  %2484 = bitcast %union.anon* %2483 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2484, i32 0, i32 0
  %2485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2486 = getelementptr inbounds %struct.GPR, %struct.GPR* %2485, i32 0, i32 1
  %2487 = getelementptr inbounds %struct.Reg, %struct.Reg* %2486, i32 0, i32 0
  %AX.i = bitcast %union.anon* %2487 to i16*
  %2488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2489 = getelementptr inbounds %struct.GPR, %struct.GPR* %2488, i32 0, i32 3
  %2490 = getelementptr inbounds %struct.Reg, %struct.Reg* %2489, i32 0, i32 0
  %BX.i = bitcast %union.anon* %2490 to i16*
  %2491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2492 = getelementptr inbounds %struct.GPR, %struct.GPR* %2491, i32 0, i32 5
  %2493 = getelementptr inbounds %struct.Reg, %struct.Reg* %2492, i32 0, i32 0
  %CX.i = bitcast %union.anon* %2493 to i16*
  %2494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2495 = getelementptr inbounds %struct.GPR, %struct.GPR* %2494, i32 0, i32 7
  %2496 = getelementptr inbounds %struct.Reg, %struct.Reg* %2495, i32 0, i32 0
  %DX.i = bitcast %union.anon* %2496 to i16*
  %2497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2498 = getelementptr inbounds %struct.GPR, %struct.GPR* %2497, i32 0, i32 9
  %2499 = getelementptr inbounds %struct.Reg, %struct.Reg* %2498, i32 0, i32 0
  %SI.i = bitcast %union.anon* %2499 to i16*
  %2500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2501 = getelementptr inbounds %struct.GPR, %struct.GPR* %2500, i32 0, i32 11
  %2502 = getelementptr inbounds %struct.Reg, %struct.Reg* %2501, i32 0, i32 0
  %DI.i = bitcast %union.anon* %2502 to i16*
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2504 = getelementptr inbounds %struct.GPR, %struct.GPR* %2503, i32 0, i32 13
  %2505 = getelementptr inbounds %struct.Reg, %struct.Reg* %2504, i32 0, i32 0
  %SP.i = bitcast %union.anon* %2505 to i16*
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2507 = getelementptr inbounds %struct.GPR, %struct.GPR* %2506, i32 0, i32 15
  %2508 = getelementptr inbounds %struct.Reg, %struct.Reg* %2507, i32 0, i32 0
  %BP.i = bitcast %union.anon* %2508 to i16*
  %2509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2510 = getelementptr inbounds %struct.GPR, %struct.GPR* %2509, i32 0, i32 17
  %2511 = getelementptr inbounds %struct.Reg, %struct.Reg* %2510, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %2511 to i16*
  %2512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2513 = getelementptr inbounds %struct.GPR, %struct.GPR* %2512, i32 0, i32 19
  %2514 = getelementptr inbounds %struct.Reg, %struct.Reg* %2513, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %2514 to i16*
  %2515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2516 = getelementptr inbounds %struct.GPR, %struct.GPR* %2515, i32 0, i32 21
  %2517 = getelementptr inbounds %struct.Reg, %struct.Reg* %2516, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %2517 to i16*
  %2518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2519 = getelementptr inbounds %struct.GPR, %struct.GPR* %2518, i32 0, i32 23
  %2520 = getelementptr inbounds %struct.Reg, %struct.Reg* %2519, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %2520 to i16*
  %2521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2522 = getelementptr inbounds %struct.GPR, %struct.GPR* %2521, i32 0, i32 25
  %2523 = getelementptr inbounds %struct.Reg, %struct.Reg* %2522, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %2523 to i16*
  %2524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2525 = getelementptr inbounds %struct.GPR, %struct.GPR* %2524, i32 0, i32 27
  %2526 = getelementptr inbounds %struct.Reg, %struct.Reg* %2525, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %2526 to i16*
  %2527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2528 = getelementptr inbounds %struct.GPR, %struct.GPR* %2527, i32 0, i32 29
  %2529 = getelementptr inbounds %struct.Reg, %struct.Reg* %2528, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %2529 to i16*
  %2530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2531 = getelementptr inbounds %struct.GPR, %struct.GPR* %2530, i32 0, i32 31
  %2532 = getelementptr inbounds %struct.Reg, %struct.Reg* %2531, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %2532 to i16*
  %2533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2534 = getelementptr inbounds %struct.GPR, %struct.GPR* %2533, i32 0, i32 33
  %2535 = getelementptr inbounds %struct.Reg, %struct.Reg* %2534, i32 0, i32 0
  %IP.i = bitcast %union.anon* %2535 to i16*
  %2536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2537 = getelementptr inbounds %struct.GPR, %struct.GPR* %2536, i32 0, i32 1
  %2538 = getelementptr inbounds %struct.Reg, %struct.Reg* %2537, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %2538 to i32*
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 3
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %2541 to i32*
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 5
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %2544 to i32*
  %2545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2546 = getelementptr inbounds %struct.GPR, %struct.GPR* %2545, i32 0, i32 7
  %2547 = getelementptr inbounds %struct.Reg, %struct.Reg* %2546, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %2547 to i32*
  %2548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2549 = getelementptr inbounds %struct.GPR, %struct.GPR* %2548, i32 0, i32 9
  %2550 = getelementptr inbounds %struct.Reg, %struct.Reg* %2549, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %2550 to i32*
  %2551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2552 = getelementptr inbounds %struct.GPR, %struct.GPR* %2551, i32 0, i32 11
  %2553 = getelementptr inbounds %struct.Reg, %struct.Reg* %2552, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %2553 to i32*
  %2554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2555 = getelementptr inbounds %struct.GPR, %struct.GPR* %2554, i32 0, i32 13
  %2556 = getelementptr inbounds %struct.Reg, %struct.Reg* %2555, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %2556 to i32*
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2558 = getelementptr inbounds %struct.GPR, %struct.GPR* %2557, i32 0, i32 15
  %2559 = getelementptr inbounds %struct.Reg, %struct.Reg* %2558, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %2559 to i32*
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2561 = getelementptr inbounds %struct.GPR, %struct.GPR* %2560, i32 0, i32 33
  %2562 = getelementptr inbounds %struct.Reg, %struct.Reg* %2561, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %2562 to i32*
  %2563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2564 = getelementptr inbounds %struct.GPR, %struct.GPR* %2563, i32 0, i32 17
  %2565 = getelementptr inbounds %struct.Reg, %struct.Reg* %2564, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %2565 to i32*
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2567 = getelementptr inbounds %struct.GPR, %struct.GPR* %2566, i32 0, i32 19
  %2568 = getelementptr inbounds %struct.Reg, %struct.Reg* %2567, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %2568 to i32*
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2570 = getelementptr inbounds %struct.GPR, %struct.GPR* %2569, i32 0, i32 21
  %2571 = getelementptr inbounds %struct.Reg, %struct.Reg* %2570, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %2571 to i32*
  %2572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2573 = getelementptr inbounds %struct.GPR, %struct.GPR* %2572, i32 0, i32 23
  %2574 = getelementptr inbounds %struct.Reg, %struct.Reg* %2573, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %2574 to i32*
  %2575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2576 = getelementptr inbounds %struct.GPR, %struct.GPR* %2575, i32 0, i32 25
  %2577 = getelementptr inbounds %struct.Reg, %struct.Reg* %2576, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %2577 to i32*
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2579 = getelementptr inbounds %struct.GPR, %struct.GPR* %2578, i32 0, i32 27
  %2580 = getelementptr inbounds %struct.Reg, %struct.Reg* %2579, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %2580 to i32*
  %2581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2582 = getelementptr inbounds %struct.GPR, %struct.GPR* %2581, i32 0, i32 29
  %2583 = getelementptr inbounds %struct.Reg, %struct.Reg* %2582, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %2583 to i32*
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2585 = getelementptr inbounds %struct.GPR, %struct.GPR* %2584, i32 0, i32 31
  %2586 = getelementptr inbounds %struct.Reg, %struct.Reg* %2585, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %2586 to i32*
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2588 = getelementptr inbounds %struct.GPR, %struct.GPR* %2587, i32 0, i32 1
  %2589 = getelementptr inbounds %struct.Reg, %struct.Reg* %2588, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %2589 to i64*
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2591 = getelementptr inbounds %struct.GPR, %struct.GPR* %2590, i32 0, i32 3
  %2592 = getelementptr inbounds %struct.Reg, %struct.Reg* %2591, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %2592 to i64*
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2594 = getelementptr inbounds %struct.GPR, %struct.GPR* %2593, i32 0, i32 5
  %2595 = getelementptr inbounds %struct.Reg, %struct.Reg* %2594, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %2595 to i64*
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2597 = getelementptr inbounds %struct.GPR, %struct.GPR* %2596, i32 0, i32 7
  %2598 = getelementptr inbounds %struct.Reg, %struct.Reg* %2597, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %2598 to i64*
  %2599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2600 = getelementptr inbounds %struct.GPR, %struct.GPR* %2599, i32 0, i32 9
  %2601 = getelementptr inbounds %struct.Reg, %struct.Reg* %2600, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %2601 to i64*
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2603 = getelementptr inbounds %struct.GPR, %struct.GPR* %2602, i32 0, i32 11
  %2604 = getelementptr inbounds %struct.Reg, %struct.Reg* %2603, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %2604 to i64*
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2606 = getelementptr inbounds %struct.GPR, %struct.GPR* %2605, i32 0, i32 13
  %2607 = getelementptr inbounds %struct.Reg, %struct.Reg* %2606, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %2607 to i64*
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2609 = getelementptr inbounds %struct.GPR, %struct.GPR* %2608, i32 0, i32 15
  %2610 = getelementptr inbounds %struct.Reg, %struct.Reg* %2609, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %2610 to i64*
  %2611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2612 = getelementptr inbounds %struct.GPR, %struct.GPR* %2611, i32 0, i32 17
  %2613 = getelementptr inbounds %struct.Reg, %struct.Reg* %2612, i32 0, i32 0
  %R8.i = bitcast %union.anon* %2613 to i64*
  %2614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2615 = getelementptr inbounds %struct.GPR, %struct.GPR* %2614, i32 0, i32 19
  %2616 = getelementptr inbounds %struct.Reg, %struct.Reg* %2615, i32 0, i32 0
  %R9.i = bitcast %union.anon* %2616 to i64*
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 21
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %R10.i = bitcast %union.anon* %2619 to i64*
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 23
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %R11.i = bitcast %union.anon* %2622 to i64*
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 25
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %R12.i = bitcast %union.anon* %2625 to i64*
  %2626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2627 = getelementptr inbounds %struct.GPR, %struct.GPR* %2626, i32 0, i32 27
  %2628 = getelementptr inbounds %struct.Reg, %struct.Reg* %2627, i32 0, i32 0
  %R13.i = bitcast %union.anon* %2628 to i64*
  %2629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2630 = getelementptr inbounds %struct.GPR, %struct.GPR* %2629, i32 0, i32 29
  %2631 = getelementptr inbounds %struct.Reg, %struct.Reg* %2630, i32 0, i32 0
  %R14.i = bitcast %union.anon* %2631 to i64*
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 31
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %R15.i = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 33
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %2637 to i64*
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2639 = getelementptr inbounds %struct.Segments, %struct.Segments* %2638, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %2639 to i16*
  %2640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2641 = getelementptr inbounds %struct.Segments, %struct.Segments* %2640, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %2641 to i16*
  %2642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2643 = getelementptr inbounds %struct.Segments, %struct.Segments* %2642, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %2643 to i16*
  %2644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2645 = getelementptr inbounds %struct.Segments, %struct.Segments* %2644, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %2645 to i16*
  %2646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2647 = getelementptr inbounds %struct.Segments, %struct.Segments* %2646, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %2647 to i16*
  %2648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2649 = getelementptr inbounds %struct.Segments, %struct.Segments* %2648, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %2649 to i16*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2651 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2650, i32 0, i32 5
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %2652 to i64*
  %2653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2654 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2653, i32 0, i32 7
  %2655 = getelementptr inbounds %struct.Reg, %struct.Reg* %2654, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %2655 to i64*
  %2656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2657 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2656, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %2657 to %"class.std::bitset"*
  %2658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2659 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2658, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %2659 to %"class.std::bitset"*
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2661 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2660, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %2661 to %"class.std::bitset"*
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2663 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2662, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %2663 to %"class.std::bitset"*
  %2664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2665 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2664, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %2665 to %"class.std::bitset"*
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2667 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2666, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %2667 to %"class.std::bitset"*
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2669 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2668, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %2669 to %"class.std::bitset"*
  %2670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2671 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2670, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %2671 to %"class.std::bitset"*
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2673 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2672, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %2673 to %"class.std::bitset"*
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2675 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2674, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %2675 to %"class.std::bitset"*
  %2676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2677 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2676, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %2677 to %"class.std::bitset"*
  %2678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2679 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2678, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %2679 to %"class.std::bitset"*
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2681 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2680, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %2681 to %"class.std::bitset"*
  %2682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2683 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2682, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %2683 to %"class.std::bitset"*
  %2684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2685 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2684, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %2685 to %"class.std::bitset"*
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2687 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2686, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %2687 to %"class.std::bitset"*
  %2688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2689 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2688, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %2689 to %union.vec128_t*
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2691 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2690, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %2691 to %union.vec128_t*
  %2692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2693 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2692, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %2693 to %union.vec128_t*
  %2694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2695 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2694, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %2695 to %union.vec128_t*
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2697 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2696, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %2697 to %union.vec128_t*
  %2698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2699 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2698, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %2699 to %union.vec128_t*
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2701 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2700, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %2701 to %union.vec128_t*
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2703 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2702, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %2703 to %union.vec128_t*
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2705 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2704, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %2705 to %union.vec128_t*
  %2706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2707 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2706, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %2707 to %union.vec128_t*
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2709 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2708, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %2709 to %union.vec128_t*
  %2710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2711 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2710, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %2711 to %union.vec128_t*
  %2712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2713 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2712, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %2713 to %union.vec128_t*
  %2714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2715 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2714, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %2715 to %union.vec128_t*
  %2716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2717 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2716, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %2717 to %union.vec128_t*
  %2718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2719 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2718, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %2719 to %union.vec128_t*
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2721 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2720, i32 0, i32 0
  %2722 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2721, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2722, i32 0, i32 1
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2724 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2723, i32 0, i32 0
  %2725 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2724, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2725, i32 0, i32 1
  %2726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2727 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2726, i32 0, i32 0
  %2728 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2727, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2728, i32 0, i32 1
  %2729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2730 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2729, i32 0, i32 0
  %2731 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2730, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2731, i32 0, i32 1
  %2732 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2733 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2732, i32 0, i32 0
  %2734 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2733, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2734, i32 0, i32 1
  %2735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2736 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2735, i32 0, i32 0
  %2737 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2736, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2737, i32 0, i32 1
  %2738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2739 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2738, i32 0, i32 0
  %2740 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2739, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2740, i32 0, i32 1
  %2741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2742 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2741, i32 0, i32 0
  %2743 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2742, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2743, i32 0, i32 1
  %2744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2745 = getelementptr inbounds %struct.MMX, %struct.MMX* %2744, i32 0, i32 0
  %2746 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2745, i64 0, i64 0
  %2747 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2746, i32 0, i32 1
  %2748 = bitcast %union.vec64_t* %2747 to %struct.uint64v1_t*
  %2749 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2748, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %2749, i64 0, i64 0
  %2750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2751 = getelementptr inbounds %struct.MMX, %struct.MMX* %2750, i32 0, i32 0
  %2752 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2751, i64 0, i64 1
  %2753 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2752, i32 0, i32 1
  %2754 = bitcast %union.vec64_t* %2753 to %struct.uint64v1_t*
  %2755 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2754, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %2755, i64 0, i64 0
  %2756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2757 = getelementptr inbounds %struct.MMX, %struct.MMX* %2756, i32 0, i32 0
  %2758 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2757, i64 0, i64 2
  %2759 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2758, i32 0, i32 1
  %2760 = bitcast %union.vec64_t* %2759 to %struct.uint64v1_t*
  %2761 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2760, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %2761, i64 0, i64 0
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2763 = getelementptr inbounds %struct.MMX, %struct.MMX* %2762, i32 0, i32 0
  %2764 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2763, i64 0, i64 3
  %2765 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2764, i32 0, i32 1
  %2766 = bitcast %union.vec64_t* %2765 to %struct.uint64v1_t*
  %2767 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2766, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %2767, i64 0, i64 0
  %2768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2769 = getelementptr inbounds %struct.MMX, %struct.MMX* %2768, i32 0, i32 0
  %2770 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2769, i64 0, i64 4
  %2771 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2770, i32 0, i32 1
  %2772 = bitcast %union.vec64_t* %2771 to %struct.uint64v1_t*
  %2773 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2772, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %2773, i64 0, i64 0
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2775 = getelementptr inbounds %struct.MMX, %struct.MMX* %2774, i32 0, i32 0
  %2776 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2775, i64 0, i64 5
  %2777 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2776, i32 0, i32 1
  %2778 = bitcast %union.vec64_t* %2777 to %struct.uint64v1_t*
  %2779 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2778, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %2779, i64 0, i64 0
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2781 = getelementptr inbounds %struct.MMX, %struct.MMX* %2780, i32 0, i32 0
  %2782 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2781, i64 0, i64 6
  %2783 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2782, i32 0, i32 1
  %2784 = bitcast %union.vec64_t* %2783 to %struct.uint64v1_t*
  %2785 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2784, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %2785, i64 0, i64 0
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2787 = getelementptr inbounds %struct.MMX, %struct.MMX* %2786, i32 0, i32 0
  %2788 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2787, i64 0, i64 7
  %2789 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2788, i32 0, i32 1
  %2790 = bitcast %union.vec64_t* %2789 to %struct.uint64v1_t*
  %2791 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2790, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %2791, i64 0, i64 0
  %2792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2792, i32 0, i32 5
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2793, i32 0, i32 1
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2794, i32 0, i32 11
  %2795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2795, i32 0, i32 13
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2796, i32 0, i32 3
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2797, i32 0, i32 9
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2798, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2462
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2462
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2462
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2462
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2462
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2462
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2462
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2462
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2462
  %2799 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %2800 = load double, double* %2799, !alias.scope !2466, !noalias !2467
  %2801 = load i64, i64* %RSP.i, !alias.scope !2466, !noalias !2467
  %2802 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2462
  %2803 = inttoptr i64 %2801 to i64*
  %2804 = load i64, i64* %2803
  store i64 %2804, i64* %PC.i, !alias.scope !2466, !noalias !2467
  %2805 = add i64 %2801, 8
  store i64 %2805, i64* %RSP.i, !alias.scope !2466, !noalias !2467
  %2806 = call double @sin(double %2800)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2466, !noalias !2467
  %2807 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %2806, double* %2807, !alias.scope !2466, !noalias !2467
  %2808 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2462
  %2809 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2809)
  %2810 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2810)
  %2811 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2811)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %2812 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2812)
  %2813 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2813)
  %2814 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2814)
  %2815 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2815)
  %2816 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2816)
  %2817 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2817)
  %2818 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2818)
  %2819 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2819)
  %2820 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2820)
  %2821 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2821)
  %2822 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2822)
  %2823 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2823)
  %2824 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2824)
  %2825 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2825)
  %2826 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2826)
  %2827 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2827)
  %2828 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2828)
  %2829 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2829)
  %2830 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2830)
  %2831 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2831)
  %2832 = bitcast %union.vec128_t* %XMM0 to i8*
  %2833 = load i64, i64* %PC
  %2834 = add i64 %2833, 9
  store i64 %2834, i64* %PC
  %2835 = bitcast i8* %2832 to double*
  %2836 = load double, double* %2835, align 1
  store double %2836, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2837 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2838 = load i64, i64* %PC
  %2839 = add i64 %2838, 9
  store i64 %2839, i64* %PC
  %2840 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2841 = bitcast i8* %2837 to double*
  store double %2840, double* %2841, align 1, !tbaa !2452
  %2842 = getelementptr inbounds i8, i8* %2837, i64 8
  %2843 = bitcast i8* %2842 to double*
  store double 0.000000e+00, double* %2843, align 1, !tbaa !2452
  %2844 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2845 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2846 = load i64, i64* %PC
  %2847 = add i64 %2846, 9
  store i64 %2847, i64* %PC
  %2848 = bitcast i8* %2845 to double*
  %2849 = load double, double* %2848, align 1
  %2850 = getelementptr inbounds i8, i8* %2845, i64 8
  %2851 = bitcast i8* %2850 to i64*
  %2852 = load i64, i64* %2851, align 1
  %2853 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2854 = fmul double %2849, %2853
  %2855 = bitcast i8* %2844 to double*
  store double %2854, double* %2855, align 1, !tbaa !2452
  %2856 = getelementptr inbounds i8, i8* %2844, i64 8
  %2857 = bitcast i8* %2856 to i64*
  store i64 %2852, i64* %2857, align 1, !tbaa !2452
  %2858 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2859 = load i64, i64* %RBP
  %2860 = sub i64 %2859, 112
  %2861 = load i64, i64* %PC
  %2862 = add i64 %2861, 5
  store i64 %2862, i64* %PC
  %2863 = inttoptr i64 %2860 to double*
  %2864 = load double, double* %2863
  %2865 = bitcast i8* %2858 to double*
  store double %2864, double* %2865, align 1, !tbaa !2452
  %2866 = getelementptr inbounds i8, i8* %2858, i64 8
  %2867 = bitcast i8* %2866 to double*
  store double 0.000000e+00, double* %2867, align 1, !tbaa !2452
  %2868 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2869 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2870 = bitcast %union.vec128_t* %XMM0 to i8*
  %2871 = load i64, i64* %PC
  %2872 = add i64 %2871, 4
  store i64 %2872, i64* %PC
  %2873 = bitcast i8* %2869 to double*
  %2874 = load double, double* %2873, align 1
  %2875 = getelementptr inbounds i8, i8* %2869, i64 8
  %2876 = bitcast i8* %2875 to i64*
  %2877 = load i64, i64* %2876, align 1
  %2878 = bitcast i8* %2870 to double*
  %2879 = load double, double* %2878, align 1
  %2880 = fdiv double %2874, %2879
  %2881 = bitcast i8* %2868 to double*
  store double %2880, double* %2881, align 1, !tbaa !2452
  %2882 = getelementptr inbounds i8, i8* %2868, i64 8
  %2883 = bitcast i8* %2882 to i64*
  store i64 %2877, i64* %2883, align 1, !tbaa !2452
  %2884 = bitcast %union.vec128_t* %XMM1 to i8*
  %2885 = load i64, i64* %PC
  %2886 = add i64 %2885, 9
  store i64 %2886, i64* %PC
  %2887 = bitcast i8* %2884 to double*
  %2888 = load double, double* %2887, align 1
  store double %2888, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2889 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2890 = load i64, i64* %RBP
  %2891 = sub i64 %2890, 88
  %2892 = load i64, i64* %PC
  %2893 = add i64 %2892, 5
  store i64 %2893, i64* %PC
  %2894 = inttoptr i64 %2891 to double*
  %2895 = load double, double* %2894
  %2896 = bitcast i8* %2889 to double*
  store double %2895, double* %2896, align 1, !tbaa !2452
  %2897 = getelementptr inbounds i8, i8* %2889, i64 8
  %2898 = bitcast i8* %2897 to double*
  store double 0.000000e+00, double* %2898, align 1, !tbaa !2452
  %2899 = bitcast %union.vec128_t* %XMM0 to i8*
  %2900 = load i64, i64* %PC
  %2901 = add i64 %2900, 9
  store i64 %2901, i64* %PC
  %2902 = bitcast i8* %2899 to double*
  %2903 = load double, double* %2902, align 1
  store double %2903, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %2904 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2905 = load i64, i64* %PC
  %2906 = add i64 %2905, 9
  store i64 %2906, i64* %PC
  %2907 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2908 = bitcast i8* %2904 to double*
  store double %2907, double* %2908, align 1, !tbaa !2452
  %2909 = getelementptr inbounds i8, i8* %2904, i64 8
  %2910 = bitcast i8* %2909 to double*
  store double 0.000000e+00, double* %2910, align 1, !tbaa !2452
  %2911 = bitcast %union.vec128_t* %XMM1 to i8*
  %2912 = load i64, i64* %PC
  %2913 = add i64 %2912, 9
  store i64 %2913, i64* %PC
  %2914 = bitcast i8* %2911 to double*
  %2915 = load double, double* %2914, align 1
  store double %2915, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %2916 = load i64, i64* %PC
  %2917 = add i64 %2916, 7
  store i64 %2917, i64* %PC
  %2918 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %2919 = zext i32 %2918 to i64
  store i64 %2919, i64* %RAX, align 8, !tbaa !2428
  %2920 = load i64, i64* %RAX
  %2921 = load i64, i64* %PC
  %2922 = add i64 %2921, 3
  store i64 %2922, i64* %PC
  %2923 = trunc i64 %2920 to i32
  %2924 = add i32 1, %2923
  %2925 = zext i32 %2924 to i64
  store i64 %2925, i64* %RAX, align 8, !tbaa !2428
  %2926 = icmp ult i32 %2924, %2923
  %2927 = icmp ult i32 %2924, 1
  %2928 = or i1 %2926, %2927
  %2929 = zext i1 %2928 to i8
  %2930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2929, i8* %2930, align 1, !tbaa !2432
  %2931 = and i32 %2924, 255
  %2932 = call i32 @llvm.ctpop.i32(i32 %2931) #17
  %2933 = trunc i32 %2932 to i8
  %2934 = and i8 %2933, 1
  %2935 = xor i8 %2934, 1
  %2936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2935, i8* %2936, align 1, !tbaa !2446
  %2937 = xor i64 1, %2920
  %2938 = trunc i64 %2937 to i32
  %2939 = xor i32 %2938, %2924
  %2940 = lshr i32 %2939, 4
  %2941 = trunc i32 %2940 to i8
  %2942 = and i8 %2941, 1
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2942, i8* %2943, align 1, !tbaa !2447
  %2944 = icmp eq i32 %2924, 0
  %2945 = zext i1 %2944 to i8
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2945, i8* %2946, align 1, !tbaa !2448
  %2947 = lshr i32 %2924, 31
  %2948 = trunc i32 %2947 to i8
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2948, i8* %2949, align 1, !tbaa !2449
  %2950 = lshr i32 %2923, 31
  %2951 = xor i32 %2947, %2950
  %2952 = add nuw nsw i32 %2951, %2947
  %2953 = icmp eq i32 %2952, 2
  %2954 = zext i1 %2953 to i8
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2954, i8* %2955, align 1, !tbaa !2450
  %2956 = load i32, i32* %EAX
  %2957 = zext i32 %2956 to i64
  %2958 = load i64, i64* %PC
  %2959 = add i64 %2958, 7
  store i64 %2959, i64* %PC
  store i32 %2956, i32* bitcast (%itercount_type* @itercount to i32*)
  %2960 = load i64, i64* %PC
  %2961 = sub i64 %2960, 562
  %2962 = load i64, i64* %PC
  %2963 = add i64 %2962, 5
  store i64 %2963, i64* %PC
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2961, i64* %2964, align 8, !tbaa !2428
  br label %block_4008eb

block_40091a:                                     ; preds = %block_400909
  store i64 4, i64* %RDI, align 8, !tbaa !2428
  %2965 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2966 = load i64, i64* %PC
  %2967 = add i64 %2966, 8
  store i64 %2967, i64* %PC
  %2968 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 112) to double*)
  %2969 = bitcast i8* %2965 to double*
  store double %2968, double* %2969, align 1, !tbaa !2452
  %2970 = getelementptr inbounds i8, i8* %2965, i64 8
  %2971 = bitcast i8* %2970 to double*
  store double 0.000000e+00, double* %2971, align 1, !tbaa !2452
  %2972 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2973 = load i64, i64* %PC
  %2974 = add i64 %2973, 9
  store i64 %2974, i64* %PC
  %2975 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %2976 = bitcast i8* %2972 to double*
  store double %2975, double* %2976, align 1, !tbaa !2452
  %2977 = getelementptr inbounds i8, i8* %2972, i64 8
  %2978 = bitcast i8* %2977 to double*
  store double 0.000000e+00, double* %2978, align 1, !tbaa !2452
  %2979 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2980 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2981 = bitcast %union.vec128_t* %XMM0 to i8*
  %2982 = load i64, i64* %PC
  %2983 = add i64 %2982, 4
  store i64 %2983, i64* %PC
  %2984 = bitcast i8* %2980 to double*
  %2985 = load double, double* %2984, align 1
  %2986 = getelementptr inbounds i8, i8* %2980, i64 8
  %2987 = bitcast i8* %2986 to i64*
  %2988 = load i64, i64* %2987, align 1
  %2989 = bitcast i8* %2981 to double*
  %2990 = load double, double* %2989, align 1
  %2991 = fdiv double %2985, %2990
  %2992 = bitcast i8* %2979 to double*
  store double %2991, double* %2992, align 1, !tbaa !2452
  %2993 = getelementptr inbounds i8, i8* %2979, i64 8
  %2994 = bitcast i8* %2993 to i64*
  store i64 %2988, i64* %2994, align 1, !tbaa !2452
  %2995 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2996 = bitcast %union.vec128_t* %XMM1 to i8*
  %2997 = load i64, i64* %PC
  %2998 = add i64 %2997, 3
  store i64 %2998, i64* %PC
  %2999 = bitcast i8* %2996 to <2 x i32>*
  %3000 = load <2 x i32>, <2 x i32>* %2999, align 1
  %3001 = getelementptr inbounds i8, i8* %2996, i64 8
  %3002 = bitcast i8* %3001 to <2 x i32>*
  %3003 = load <2 x i32>, <2 x i32>* %3002, align 1
  %3004 = extractelement <2 x i32> %3000, i32 0
  %3005 = bitcast i8* %2995 to i32*
  store i32 %3004, i32* %3005, align 1, !tbaa !2454
  %3006 = extractelement <2 x i32> %3000, i32 1
  %3007 = getelementptr inbounds i8, i8* %2995, i64 4
  %3008 = bitcast i8* %3007 to i32*
  store i32 %3006, i32* %3008, align 1, !tbaa !2454
  %3009 = extractelement <2 x i32> %3003, i32 0
  %3010 = getelementptr inbounds i8, i8* %2995, i64 8
  %3011 = bitcast i8* %3010 to i32*
  store i32 %3009, i32* %3011, align 1, !tbaa !2454
  %3012 = extractelement <2 x i32> %3003, i32 1
  %3013 = getelementptr inbounds i8, i8* %2995, i64 12
  %3014 = bitcast i8* %3013 to i32*
  store i32 %3012, i32* %3014, align 1, !tbaa !2454
  %3015 = load i64, i64* %PC
  %3016 = add i64 %3015, 1529
  %3017 = load i64, i64* %PC
  %3018 = add i64 %3017, 5
  %3019 = load i64, i64* %PC
  %3020 = add i64 %3019, 5
  store i64 %3020, i64* %PC
  %3021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3022 = load i64, i64* %3021, align 8, !tbaa !2428
  %3023 = add i64 %3022, -8
  %3024 = inttoptr i64 %3023 to i64*
  store i64 %3018, i64* %3024
  store i64 %3023, i64* %3021, align 8, !tbaa !2428
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3016, i64* %3025, align 8, !tbaa !2428
  %3026 = load i64, i64* %PC
  %3027 = call %struct.Memory* @sub_400f30_trace_line_renamed_(%struct.State* %0, i64 %3026, %struct.Memory* %MEMORY.8)
  %3028 = load i64, i64* %PC
  %3029 = add i64 %3028, 10
  store i64 %3029, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528), i64* %RCX, align 8, !tbaa !2428
  %3030 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3031 = load i64, i64* %PC
  %3032 = add i64 %3031, 9
  store i64 %3032, i64* %PC
  %3033 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %3034 = bitcast i8* %3030 to double*
  store double %3033, double* %3034, align 1, !tbaa !2452
  %3035 = getelementptr inbounds i8, i8* %3030, i64 8
  %3036 = bitcast i8* %3035 to double*
  store double 0.000000e+00, double* %3036, align 1, !tbaa !2452
  %3037 = load i64, i64* %PC
  %3038 = add i64 %3037, 9
  store i64 %3038, i64* %PC
  %3039 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %3040 = sext i16 %3039 to i64
  store i64 %3040, i64* %RDX, align 8, !tbaa !2428
  %3041 = load i64, i64* %RDX
  %3042 = load i64, i64* %PC
  %3043 = add i64 %3042, 4
  store i64 %3043, i64* %PC
  %3044 = shl i64 %3041, 3
  %3045 = icmp slt i64 %3044, 0
  %3046 = shl i64 %3044, 1
  store i64 %3046, i64* %RDX, align 8, !tbaa !2428
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3048 = zext i1 %3045 to i8
  store i8 %3048, i8* %3047, align 1, !tbaa !2451
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3050 = trunc i64 %3046 to i32
  %3051 = and i32 %3050, 254
  %3052 = call i32 @llvm.ctpop.i32(i32 %3051) #17
  %3053 = trunc i32 %3052 to i8
  %3054 = and i8 %3053, 1
  %3055 = xor i8 %3054, 1
  store i8 %3055, i8* %3049, align 1, !tbaa !2451
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3056, align 1, !tbaa !2451
  %3057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3058 = icmp eq i64 %3046, 0
  %3059 = zext i1 %3058 to i8
  store i8 %3059, i8* %3057, align 1, !tbaa !2451
  %3060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3061 = lshr i64 %3046, 63
  %3062 = trunc i64 %3061 to i8
  store i8 %3062, i8* %3060, align 1, !tbaa !2451
  %3063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3063, align 1, !tbaa !2451
  %3064 = load i64, i64* %RCX
  %3065 = load i64, i64* %PC
  %3066 = add i64 %3065, 3
  store i64 %3066, i64* %PC
  store i64 %3064, i64* %RSI, align 8, !tbaa !2428
  %3067 = load i64, i64* %RSI
  %3068 = load i64, i64* %RDX
  %3069 = load i64, i64* %PC
  %3070 = add i64 %3069, 3
  store i64 %3070, i64* %PC
  %3071 = add i64 %3068, %3067
  store i64 %3071, i64* %RSI, align 8, !tbaa !2428
  %3072 = icmp ult i64 %3071, %3067
  %3073 = icmp ult i64 %3071, %3068
  %3074 = or i1 %3072, %3073
  %3075 = zext i1 %3074 to i8
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3075, i8* %3076, align 1, !tbaa !2432
  %3077 = trunc i64 %3071 to i32
  %3078 = and i32 %3077, 255
  %3079 = call i32 @llvm.ctpop.i32(i32 %3078) #17
  %3080 = trunc i32 %3079 to i8
  %3081 = and i8 %3080, 1
  %3082 = xor i8 %3081, 1
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3082, i8* %3083, align 1, !tbaa !2446
  %3084 = xor i64 %3068, %3067
  %3085 = xor i64 %3084, %3071
  %3086 = lshr i64 %3085, 4
  %3087 = trunc i64 %3086 to i8
  %3088 = and i8 %3087, 1
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3088, i8* %3089, align 1, !tbaa !2447
  %3090 = icmp eq i64 %3071, 0
  %3091 = zext i1 %3090 to i8
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3091, i8* %3092, align 1, !tbaa !2448
  %3093 = lshr i64 %3071, 63
  %3094 = trunc i64 %3093 to i8
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3094, i8* %3095, align 1, !tbaa !2449
  %3096 = lshr i64 %3067, 63
  %3097 = lshr i64 %3068, 63
  %3098 = xor i64 %3093, %3096
  %3099 = xor i64 %3093, %3097
  %3100 = add nuw nsw i64 %3098, %3099
  %3101 = icmp eq i64 %3100, 2
  %3102 = zext i1 %3101 to i8
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3102, i8* %3103, align 1, !tbaa !2450
  %3104 = load i64, i64* %RSI
  %3105 = bitcast %union.vec128_t* %XMM0 to i8*
  %3106 = load i64, i64* %PC
  %3107 = add i64 %3106, 4
  store i64 %3107, i64* %PC
  %3108 = bitcast i8* %3105 to double*
  %3109 = load double, double* %3108, align 1
  %3110 = inttoptr i64 %3104 to double*
  store double %3109, double* %3110
  %3111 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3112 = load i64, i64* %PC
  %3113 = add i64 %3112, 9
  store i64 %3113, i64* %PC
  %3114 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %3115 = bitcast i8* %3111 to double*
  store double %3114, double* %3115, align 1, !tbaa !2452
  %3116 = getelementptr inbounds i8, i8* %3111, i64 8
  %3117 = bitcast i8* %3116 to double*
  store double 0.000000e+00, double* %3117, align 1, !tbaa !2452
  %3118 = load i64, i64* %PC
  %3119 = add i64 %3118, 9
  store i64 %3119, i64* %PC
  %3120 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %3121 = sext i16 %3120 to i64
  store i64 %3121, i64* %RDX, align 8, !tbaa !2428
  %3122 = load i64, i64* %RDX
  %3123 = load i64, i64* %PC
  %3124 = add i64 %3123, 4
  store i64 %3124, i64* %PC
  %3125 = shl i64 %3122, 3
  %3126 = icmp slt i64 %3125, 0
  %3127 = shl i64 %3125, 1
  store i64 %3127, i64* %RDX, align 8, !tbaa !2428
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3129 = zext i1 %3126 to i8
  store i8 %3129, i8* %3128, align 1, !tbaa !2451
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3131 = trunc i64 %3127 to i32
  %3132 = and i32 %3131, 254
  %3133 = call i32 @llvm.ctpop.i32(i32 %3132) #17
  %3134 = trunc i32 %3133 to i8
  %3135 = and i8 %3134, 1
  %3136 = xor i8 %3135, 1
  store i8 %3136, i8* %3130, align 1, !tbaa !2451
  %3137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3137, align 1, !tbaa !2451
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3139 = icmp eq i64 %3127, 0
  %3140 = zext i1 %3139 to i8
  store i8 %3140, i8* %3138, align 1, !tbaa !2451
  %3141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3142 = lshr i64 %3127, 63
  %3143 = trunc i64 %3142 to i8
  store i8 %3143, i8* %3141, align 1, !tbaa !2451
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3144, align 1, !tbaa !2451
  %3145 = load i64, i64* %RCX
  %3146 = load i64, i64* %RDX
  %3147 = load i64, i64* %PC
  %3148 = add i64 %3147, 3
  store i64 %3148, i64* %PC
  %3149 = add i64 %3146, %3145
  store i64 %3149, i64* %RCX, align 8, !tbaa !2428
  %3150 = icmp ult i64 %3149, %3145
  %3151 = icmp ult i64 %3149, %3146
  %3152 = or i1 %3150, %3151
  %3153 = zext i1 %3152 to i8
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3153, i8* %3154, align 1, !tbaa !2432
  %3155 = trunc i64 %3149 to i32
  %3156 = and i32 %3155, 255
  %3157 = call i32 @llvm.ctpop.i32(i32 %3156) #17
  %3158 = trunc i32 %3157 to i8
  %3159 = and i8 %3158, 1
  %3160 = xor i8 %3159, 1
  %3161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3160, i8* %3161, align 1, !tbaa !2446
  %3162 = xor i64 %3146, %3145
  %3163 = xor i64 %3162, %3149
  %3164 = lshr i64 %3163, 4
  %3165 = trunc i64 %3164 to i8
  %3166 = and i8 %3165, 1
  %3167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3166, i8* %3167, align 1, !tbaa !2447
  %3168 = icmp eq i64 %3149, 0
  %3169 = zext i1 %3168 to i8
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3169, i8* %3170, align 1, !tbaa !2448
  %3171 = lshr i64 %3149, 63
  %3172 = trunc i64 %3171 to i8
  %3173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3172, i8* %3173, align 1, !tbaa !2449
  %3174 = lshr i64 %3145, 63
  %3175 = lshr i64 %3146, 63
  %3176 = xor i64 %3171, %3174
  %3177 = xor i64 %3171, %3175
  %3178 = add nuw nsw i64 %3176, %3177
  %3179 = icmp eq i64 %3178, 2
  %3180 = zext i1 %3179 to i8
  %3181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3180, i8* %3181, align 1, !tbaa !2450
  %3182 = load i64, i64* %RCX
  %3183 = add i64 %3182, 8
  %3184 = bitcast %union.vec128_t* %XMM0 to i8*
  %3185 = load i64, i64* %PC
  %3186 = add i64 %3185, 5
  store i64 %3186, i64* %PC
  %3187 = bitcast i8* %3184 to double*
  %3188 = load double, double* %3187, align 1
  %3189 = inttoptr i64 %3183 to double*
  store double %3188, double* %3189
  %3190 = load i64, i64* %RBP
  %3191 = sub i64 %3190, 72
  %3192 = load i32, i32* %EAX
  %3193 = zext i32 %3192 to i64
  %3194 = load i64, i64* %PC
  %3195 = add i64 %3194, 3
  store i64 %3195, i64* %PC
  %3196 = inttoptr i64 %3191 to i32*
  store i32 %3192, i32* %3196
  %3197 = load i64, i64* %PC
  %3198 = add i64 %3197, 8
  store i64 %3198, i64* %PC
  %3199 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  store i16 %3199, i16* %AX, align 2, !tbaa !2468
  %3200 = load i16, i16* %AX
  %3201 = zext i16 %3200 to i64
  %3202 = load i64, i64* %PC
  %3203 = add i64 %3202, 4
  store i64 %3203, i64* %PC
  %3204 = add i16 1, %3200
  store i16 %3204, i16* %AX, align 2, !tbaa !2468
  %3205 = icmp ult i16 %3204, %3200
  %3206 = icmp ult i16 %3204, 1
  %3207 = or i1 %3205, %3206
  %3208 = zext i1 %3207 to i8
  %3209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3208, i8* %3209, align 1, !tbaa !2432
  %3210 = and i16 %3204, 255
  %3211 = zext i16 %3210 to i32
  %3212 = call i32 @llvm.ctpop.i32(i32 %3211) #17
  %3213 = trunc i32 %3212 to i8
  %3214 = and i8 %3213, 1
  %3215 = xor i8 %3214, 1
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3215, i8* %3216, align 1, !tbaa !2446
  %3217 = xor i64 1, %3201
  %3218 = trunc i64 %3217 to i16
  %3219 = xor i16 %3218, %3204
  %3220 = lshr i16 %3219, 4
  %3221 = trunc i16 %3220 to i8
  %3222 = and i8 %3221, 1
  %3223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3222, i8* %3223, align 1, !tbaa !2447
  %3224 = icmp eq i16 %3204, 0
  %3225 = zext i1 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3225, i8* %3226, align 1, !tbaa !2448
  %3227 = lshr i16 %3204, 15
  %3228 = trunc i16 %3227 to i8
  %3229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3228, i8* %3229, align 1, !tbaa !2449
  %3230 = lshr i16 %3200, 15
  %3231 = xor i16 %3227, %3230
  %3232 = add nuw nsw i16 %3231, %3227
  %3233 = icmp eq i16 %3232, 2
  %3234 = zext i1 %3233 to i8
  %3235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3234, i8* %3235, align 1, !tbaa !2450
  %3236 = load i16, i16* %AX
  %3237 = zext i16 %3236 to i64
  %3238 = load i64, i64* %PC
  %3239 = add i64 %3238, 8
  store i64 %3239, i64* %PC
  store i16 %3236, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %3240 = load i64, i64* %PC
  %3241 = sub i64 %3240, 146
  %3242 = load i64, i64* %PC
  %3243 = add i64 %3242, 5
  store i64 %3243, i64* %PC
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3241, i64* %3244, align 8, !tbaa !2428
  br label %block_400909

block_4007f4:                                     ; preds = %block_4007ea
  %3245 = add i64 %686, 10
  store i64 %3245, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %3246 = load i64, i64* %PC
  %3247 = add i64 %3246, 10
  store i64 %3247, i64* %PC
  store i64 add (i64 ptrtoint (%niter_type* @niter to i64), i64 16), i64* %RCX, align 8, !tbaa !2428
  %3248 = load i64, i64* %RBP
  %3249 = sub i64 %3248, 20
  %3250 = load i64, i64* %PC
  %3251 = add i64 %3250, 4
  store i64 %3251, i64* %PC
  %3252 = inttoptr i64 %3249 to i32*
  %3253 = load i32, i32* %3252
  %3254 = sext i32 %3253 to i64
  store i64 %3254, i64* %RDX, align 8, !tbaa !2428
  %3255 = load i64, i64* %RDX
  %3256 = load i64, i64* %PC
  %3257 = add i64 %3256, 4
  store i64 %3257, i64* %PC
  %3258 = shl i64 %3255, 4
  %3259 = icmp slt i64 %3258, 0
  %3260 = shl i64 %3258, 1
  store i64 %3260, i64* %RDX, align 8, !tbaa !2428
  %3261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3262 = zext i1 %3259 to i8
  store i8 %3262, i8* %3261, align 1, !tbaa !2451
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3264 = trunc i64 %3260 to i32
  %3265 = and i32 %3264, 254
  %3266 = call i32 @llvm.ctpop.i32(i32 %3265) #17
  %3267 = trunc i32 %3266 to i8
  %3268 = and i8 %3267, 1
  %3269 = xor i8 %3268, 1
  store i8 %3269, i8* %3263, align 1, !tbaa !2451
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3270, align 1, !tbaa !2451
  %3271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3272 = icmp eq i64 %3260, 0
  %3273 = zext i1 %3272 to i8
  store i8 %3273, i8* %3271, align 1, !tbaa !2451
  %3274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3275 = lshr i64 %3260, 63
  %3276 = trunc i64 %3275 to i8
  store i8 %3276, i8* %3274, align 1, !tbaa !2451
  %3277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3277, align 1, !tbaa !2451
  %3278 = load i64, i64* %RCX
  %3279 = load i64, i64* %RDX
  %3280 = load i64, i64* %PC
  %3281 = add i64 %3280, 3
  store i64 %3281, i64* %PC
  %3282 = add i64 %3279, %3278
  store i64 %3282, i64* %RCX, align 8, !tbaa !2428
  %3283 = icmp ult i64 %3282, %3278
  %3284 = icmp ult i64 %3282, %3279
  %3285 = or i1 %3283, %3284
  %3286 = zext i1 %3285 to i8
  %3287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3286, i8* %3287, align 1, !tbaa !2432
  %3288 = trunc i64 %3282 to i32
  %3289 = and i32 %3288, 255
  %3290 = call i32 @llvm.ctpop.i32(i32 %3289) #17
  %3291 = trunc i32 %3290 to i8
  %3292 = and i8 %3291, 1
  %3293 = xor i8 %3292, 1
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3293, i8* %3294, align 1, !tbaa !2446
  %3295 = xor i64 %3279, %3278
  %3296 = xor i64 %3295, %3282
  %3297 = lshr i64 %3296, 4
  %3298 = trunc i64 %3297 to i8
  %3299 = and i8 %3298, 1
  %3300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3299, i8* %3300, align 1, !tbaa !2447
  %3301 = icmp eq i64 %3282, 0
  %3302 = zext i1 %3301 to i8
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3302, i8* %3303, align 1, !tbaa !2448
  %3304 = lshr i64 %3282, 63
  %3305 = trunc i64 %3304 to i8
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3305, i8* %3306, align 1, !tbaa !2449
  %3307 = lshr i64 %3278, 63
  %3308 = lshr i64 %3279, 63
  %3309 = xor i64 %3304, %3307
  %3310 = xor i64 %3304, %3308
  %3311 = add nuw nsw i64 %3309, %3310
  %3312 = icmp eq i64 %3311, 2
  %3313 = zext i1 %3312 to i8
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3313, i8* %3314, align 1, !tbaa !2450
  %3315 = load i64, i64* %RBP
  %3316 = sub i64 %3315, 24
  %3317 = load i64, i64* %PC
  %3318 = add i64 %3317, 4
  store i64 %3318, i64* %PC
  %3319 = inttoptr i64 %3316 to i32*
  %3320 = load i32, i32* %3319
  %3321 = sext i32 %3320 to i64
  store i64 %3321, i64* %RDX, align 8, !tbaa !2428
  %3322 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3323 = load i64, i64* %RCX
  %3324 = load i64, i64* %RDX
  %3325 = mul i64 %3324, 8
  %3326 = add i64 %3325, %3323
  %3327 = load i64, i64* %PC
  %3328 = add i64 %3327, 5
  store i64 %3328, i64* %PC
  %3329 = inttoptr i64 %3326 to double*
  %3330 = load double, double* %3329
  %3331 = bitcast i8* %3322 to double*
  store double %3330, double* %3331, align 1, !tbaa !2452
  %3332 = getelementptr inbounds i8, i8* %3322, i64 8
  %3333 = bitcast i8* %3332 to double*
  store double 0.000000e+00, double* %3333, align 1, !tbaa !2452
  %3334 = load i64, i64* %RBP
  %3335 = sub i64 %3334, 20
  %3336 = load i64, i64* %PC
  %3337 = add i64 %3336, 3
  store i64 %3337, i64* %PC
  %3338 = inttoptr i64 %3335 to i32*
  %3339 = load i32, i32* %3338
  %3340 = zext i32 %3339 to i64
  store i64 %3340, i64* %RSI, align 8, !tbaa !2428
  %3341 = load i64, i64* %RSI
  %3342 = load i64, i64* %PC
  %3343 = add i64 %3342, 3
  store i64 %3343, i64* %PC
  %3344 = trunc i64 %3341 to i32
  %3345 = add i32 1, %3344
  %3346 = zext i32 %3345 to i64
  store i64 %3346, i64* %RSI, align 8, !tbaa !2428
  %3347 = icmp ult i32 %3345, %3344
  %3348 = icmp ult i32 %3345, 1
  %3349 = or i1 %3347, %3348
  %3350 = zext i1 %3349 to i8
  %3351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3350, i8* %3351, align 1, !tbaa !2432
  %3352 = and i32 %3345, 255
  %3353 = call i32 @llvm.ctpop.i32(i32 %3352) #17
  %3354 = trunc i32 %3353 to i8
  %3355 = and i8 %3354, 1
  %3356 = xor i8 %3355, 1
  %3357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3356, i8* %3357, align 1, !tbaa !2446
  %3358 = xor i64 1, %3341
  %3359 = trunc i64 %3358 to i32
  %3360 = xor i32 %3359, %3345
  %3361 = lshr i32 %3360, 4
  %3362 = trunc i32 %3361 to i8
  %3363 = and i8 %3362, 1
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3363, i8* %3364, align 1, !tbaa !2447
  %3365 = icmp eq i32 %3345, 0
  %3366 = zext i1 %3365 to i8
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3366, i8* %3367, align 1, !tbaa !2448
  %3368 = lshr i32 %3345, 31
  %3369 = trunc i32 %3368 to i8
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3369, i8* %3370, align 1, !tbaa !2449
  %3371 = lshr i32 %3344, 31
  %3372 = xor i32 %3368, %3371
  %3373 = add nuw nsw i32 %3372, %3368
  %3374 = icmp eq i32 %3373, 2
  %3375 = zext i1 %3374 to i8
  %3376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3375, i8* %3376, align 1, !tbaa !2450
  %3377 = load i32, i32* %ESI
  %3378 = zext i32 %3377 to i64
  %3379 = load i64, i64* %PC
  %3380 = add i64 %3379, 3
  store i64 %3380, i64* %PC
  %3381 = shl i64 %3378, 32
  %3382 = ashr exact i64 %3381, 32
  store i64 %3382, i64* %RCX, align 8, !tbaa !2428
  %3383 = load i64, i64* %RCX
  %3384 = load i64, i64* %PC
  %3385 = add i64 %3384, 4
  store i64 %3385, i64* %PC
  %3386 = sext i64 %3383 to i128
  %3387 = and i128 %3386, -18446744073709551616
  %3388 = zext i64 %3383 to i128
  %3389 = or i128 %3387, %3388
  %3390 = mul nsw i128 40, %3389
  %3391 = trunc i128 %3390 to i64
  store i64 %3391, i64* %RCX, align 8, !tbaa !2428
  %3392 = sext i64 %3391 to i128
  %3393 = icmp ne i128 %3392, %3390
  %3394 = zext i1 %3393 to i8
  %3395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3394, i8* %3395, align 1, !tbaa !2432
  %3396 = trunc i128 %3390 to i32
  %3397 = and i32 %3396, 255
  %3398 = call i32 @llvm.ctpop.i32(i32 %3397) #17
  %3399 = trunc i32 %3398 to i8
  %3400 = and i8 %3399, 1
  %3401 = xor i8 %3400, 1
  %3402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3401, i8* %3402, align 1, !tbaa !2446
  %3403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3403, align 1, !tbaa !2447
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3404, align 1, !tbaa !2448
  %3405 = lshr i64 %3391, 63
  %3406 = trunc i64 %3405 to i8
  %3407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3406, i8* %3407, align 1, !tbaa !2449
  %3408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3394, i8* %3408, align 1, !tbaa !2450
  %3409 = load i64, i64* %RAX
  %3410 = load i64, i64* %RCX
  %3411 = load i64, i64* %PC
  %3412 = add i64 %3411, 3
  store i64 %3412, i64* %PC
  %3413 = add i64 %3410, %3409
  store i64 %3413, i64* %RAX, align 8, !tbaa !2428
  %3414 = icmp ult i64 %3413, %3409
  %3415 = icmp ult i64 %3413, %3410
  %3416 = or i1 %3414, %3415
  %3417 = zext i1 %3416 to i8
  %3418 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3417, i8* %3418, align 1, !tbaa !2432
  %3419 = trunc i64 %3413 to i32
  %3420 = and i32 %3419, 255
  %3421 = call i32 @llvm.ctpop.i32(i32 %3420) #17
  %3422 = trunc i32 %3421 to i8
  %3423 = and i8 %3422, 1
  %3424 = xor i8 %3423, 1
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3424, i8* %3425, align 1, !tbaa !2446
  %3426 = xor i64 %3410, %3409
  %3427 = xor i64 %3426, %3413
  %3428 = lshr i64 %3427, 4
  %3429 = trunc i64 %3428 to i8
  %3430 = and i8 %3429, 1
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3430, i8* %3431, align 1, !tbaa !2447
  %3432 = icmp eq i64 %3413, 0
  %3433 = zext i1 %3432 to i8
  %3434 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3433, i8* %3434, align 1, !tbaa !2448
  %3435 = lshr i64 %3413, 63
  %3436 = trunc i64 %3435 to i8
  %3437 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3436, i8* %3437, align 1, !tbaa !2449
  %3438 = lshr i64 %3409, 63
  %3439 = lshr i64 %3410, 63
  %3440 = xor i64 %3435, %3438
  %3441 = xor i64 %3435, %3439
  %3442 = add nuw nsw i64 %3440, %3441
  %3443 = icmp eq i64 %3442, 2
  %3444 = zext i1 %3443 to i8
  %3445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3444, i8* %3445, align 1, !tbaa !2450
  %3446 = load i64, i64* %RBP
  %3447 = sub i64 %3446, 24
  %3448 = load i64, i64* %PC
  %3449 = add i64 %3448, 3
  store i64 %3449, i64* %PC
  %3450 = inttoptr i64 %3447 to i32*
  %3451 = load i32, i32* %3450
  %3452 = zext i32 %3451 to i64
  store i64 %3452, i64* %RSI, align 8, !tbaa !2428
  %3453 = load i64, i64* %RSI
  %3454 = load i64, i64* %PC
  %3455 = add i64 %3454, 3
  store i64 %3455, i64* %PC
  %3456 = trunc i64 %3453 to i32
  %3457 = add i32 1, %3456
  %3458 = zext i32 %3457 to i64
  store i64 %3458, i64* %RSI, align 8, !tbaa !2428
  %3459 = icmp ult i32 %3457, %3456
  %3460 = icmp ult i32 %3457, 1
  %3461 = or i1 %3459, %3460
  %3462 = zext i1 %3461 to i8
  %3463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3462, i8* %3463, align 1, !tbaa !2432
  %3464 = and i32 %3457, 255
  %3465 = call i32 @llvm.ctpop.i32(i32 %3464) #17
  %3466 = trunc i32 %3465 to i8
  %3467 = and i8 %3466, 1
  %3468 = xor i8 %3467, 1
  %3469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3468, i8* %3469, align 1, !tbaa !2446
  %3470 = xor i64 1, %3453
  %3471 = trunc i64 %3470 to i32
  %3472 = xor i32 %3471, %3457
  %3473 = lshr i32 %3472, 4
  %3474 = trunc i32 %3473 to i8
  %3475 = and i8 %3474, 1
  %3476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3475, i8* %3476, align 1, !tbaa !2447
  %3477 = icmp eq i32 %3457, 0
  %3478 = zext i1 %3477 to i8
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3478, i8* %3479, align 1, !tbaa !2448
  %3480 = lshr i32 %3457, 31
  %3481 = trunc i32 %3480 to i8
  %3482 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3481, i8* %3482, align 1, !tbaa !2449
  %3483 = lshr i32 %3456, 31
  %3484 = xor i32 %3480, %3483
  %3485 = add nuw nsw i32 %3484, %3480
  %3486 = icmp eq i32 %3485, 2
  %3487 = zext i1 %3486 to i8
  %3488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3487, i8* %3488, align 1, !tbaa !2450
  %3489 = load i32, i32* %ESI
  %3490 = zext i32 %3489 to i64
  %3491 = load i64, i64* %PC
  %3492 = add i64 %3491, 3
  store i64 %3492, i64* %PC
  %3493 = shl i64 %3490, 32
  %3494 = ashr exact i64 %3493, 32
  store i64 %3494, i64* %RCX, align 8, !tbaa !2428
  %3495 = load i64, i64* %RAX
  %3496 = load i64, i64* %RCX
  %3497 = mul i64 %3496, 8
  %3498 = add i64 %3497, %3495
  %3499 = bitcast %union.vec128_t* %XMM0 to i8*
  %3500 = load i64, i64* %PC
  %3501 = add i64 %3500, 5
  store i64 %3501, i64* %PC
  %3502 = bitcast i8* %3499 to double*
  %3503 = load double, double* %3502, align 1
  %3504 = inttoptr i64 %3498 to double*
  store double %3503, double* %3504
  %3505 = load i64, i64* %RBP
  %3506 = sub i64 %3505, 24
  %3507 = load i64, i64* %PC
  %3508 = add i64 %3507, 3
  store i64 %3508, i64* %PC
  %3509 = inttoptr i64 %3506 to i32*
  %3510 = load i32, i32* %3509
  %3511 = zext i32 %3510 to i64
  store i64 %3511, i64* %RAX, align 8, !tbaa !2428
  %3512 = load i64, i64* %RAX
  %3513 = load i64, i64* %PC
  %3514 = add i64 %3513, 3
  store i64 %3514, i64* %PC
  %3515 = trunc i64 %3512 to i32
  %3516 = add i32 1, %3515
  %3517 = zext i32 %3516 to i64
  store i64 %3517, i64* %RAX, align 8, !tbaa !2428
  %3518 = icmp ult i32 %3516, %3515
  %3519 = icmp ult i32 %3516, 1
  %3520 = or i1 %3518, %3519
  %3521 = zext i1 %3520 to i8
  %3522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3521, i8* %3522, align 1, !tbaa !2432
  %3523 = and i32 %3516, 255
  %3524 = call i32 @llvm.ctpop.i32(i32 %3523) #17
  %3525 = trunc i32 %3524 to i8
  %3526 = and i8 %3525, 1
  %3527 = xor i8 %3526, 1
  %3528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3527, i8* %3528, align 1, !tbaa !2446
  %3529 = xor i64 1, %3512
  %3530 = trunc i64 %3529 to i32
  %3531 = xor i32 %3530, %3516
  %3532 = lshr i32 %3531, 4
  %3533 = trunc i32 %3532 to i8
  %3534 = and i8 %3533, 1
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3534, i8* %3535, align 1, !tbaa !2447
  %3536 = icmp eq i32 %3516, 0
  %3537 = zext i1 %3536 to i8
  %3538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3537, i8* %3538, align 1, !tbaa !2448
  %3539 = lshr i32 %3516, 31
  %3540 = trunc i32 %3539 to i8
  %3541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3540, i8* %3541, align 1, !tbaa !2449
  %3542 = lshr i32 %3515, 31
  %3543 = xor i32 %3539, %3542
  %3544 = add nuw nsw i32 %3543, %3539
  %3545 = icmp eq i32 %3544, 2
  %3546 = zext i1 %3545 to i8
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3546, i8* %3547, align 1, !tbaa !2450
  %3548 = load i64, i64* %RBP
  %3549 = sub i64 %3548, 24
  %3550 = load i32, i32* %EAX
  %3551 = zext i32 %3550 to i64
  %3552 = load i64, i64* %PC
  %3553 = add i64 %3552, 3
  store i64 %3553, i64* %PC
  %3554 = inttoptr i64 %3549 to i32*
  store i32 %3550, i32* %3554
  %3555 = load i64, i64* %PC
  %3556 = sub i64 %3555, 89
  %3557 = load i64, i64* %PC
  %3558 = add i64 %3557, 5
  store i64 %3558, i64* %PC
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3556, i64* %3559, align 8, !tbaa !2428
  br label %block_4007ea

block_400f19:                                     ; preds = %block_400f02, %block_400ec4
  %MEMORY.7 = phi %struct.Memory* [ %4321, %block_400f02 ], [ %3733, %block_400ec4 ]
  %3560 = load i64, i64* %RAX
  %3561 = load i32, i32* %EAX
  %3562 = zext i32 %3561 to i64
  %3563 = load i64, i64* %PC
  %3564 = add i64 %3563, 2
  store i64 %3564, i64* %PC
  %3565 = xor i64 %3562, %3560
  %3566 = trunc i64 %3565 to i32
  %3567 = and i64 %3565, 4294967295
  store i64 %3567, i64* %RAX, align 8, !tbaa !2428
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3568, align 1, !tbaa !2432
  %3569 = and i32 %3566, 255
  %3570 = call i32 @llvm.ctpop.i32(i32 %3569) #17
  %3571 = trunc i32 %3570 to i8
  %3572 = and i8 %3571, 1
  %3573 = xor i8 %3572, 1
  %3574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3573, i8* %3574, align 1, !tbaa !2446
  %3575 = icmp eq i32 %3566, 0
  %3576 = zext i1 %3575 to i8
  %3577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3576, i8* %3577, align 1, !tbaa !2448
  %3578 = lshr i32 %3566, 31
  %3579 = trunc i32 %3578 to i8
  %3580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3579, i8* %3580, align 1, !tbaa !2449
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3581, align 1, !tbaa !2450
  %3582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3582, align 1, !tbaa !2447
  %3583 = load i64, i64* %RSP
  %3584 = load i64, i64* %PC
  %3585 = add i64 %3584, 7
  store i64 %3585, i64* %PC
  %3586 = add i64 192, %3583
  store i64 %3586, i64* %RSP, align 8, !tbaa !2428
  %3587 = icmp ult i64 %3586, %3583
  %3588 = icmp ult i64 %3586, 192
  %3589 = or i1 %3587, %3588
  %3590 = zext i1 %3589 to i8
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3590, i8* %3591, align 1, !tbaa !2432
  %3592 = trunc i64 %3586 to i32
  %3593 = and i32 %3592, 255
  %3594 = call i32 @llvm.ctpop.i32(i32 %3593) #17
  %3595 = trunc i32 %3594 to i8
  %3596 = and i8 %3595, 1
  %3597 = xor i8 %3596, 1
  %3598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3597, i8* %3598, align 1, !tbaa !2446
  %3599 = xor i64 192, %3583
  %3600 = xor i64 %3599, %3586
  %3601 = lshr i64 %3600, 4
  %3602 = trunc i64 %3601 to i8
  %3603 = and i8 %3602, 1
  %3604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3603, i8* %3604, align 1, !tbaa !2447
  %3605 = icmp eq i64 %3586, 0
  %3606 = zext i1 %3605 to i8
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3606, i8* %3607, align 1, !tbaa !2448
  %3608 = lshr i64 %3586, 63
  %3609 = trunc i64 %3608 to i8
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3609, i8* %3610, align 1, !tbaa !2449
  %3611 = lshr i64 %3583, 63
  %3612 = xor i64 %3608, %3611
  %3613 = add nuw nsw i64 %3612, %3608
  %3614 = icmp eq i64 %3613, 2
  %3615 = zext i1 %3614 to i8
  %3616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3615, i8* %3616, align 1, !tbaa !2450
  %3617 = load i64, i64* %PC
  %3618 = add i64 %3617, 1
  store i64 %3618, i64* %PC
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3620 = load i64, i64* %3619, align 8, !tbaa !2428
  %3621 = add i64 %3620, 8
  %3622 = inttoptr i64 %3620 to i64*
  %3623 = load i64, i64* %3622
  store i64 %3623, i64* %RBP, align 8, !tbaa !2428
  store i64 %3621, i64* %3619, align 8, !tbaa !2428
  %3624 = load i64, i64* %PC
  %3625 = add i64 %3624, 1
  store i64 %3625, i64* %PC
  %3626 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3628 = load i64, i64* %3627, align 8, !tbaa !2428
  %3629 = inttoptr i64 %3628 to i64*
  %3630 = load i64, i64* %3629
  store i64 %3630, i64* %3626, align 8, !tbaa !2428
  %3631 = add i64 %3628, 8
  store i64 %3631, i64* %3627, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.7

block_400e90:                                     ; preds = %block_400dd2
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 230), i64* %RDI, align 8, !tbaa !2428
  %3632 = load i64, i64* %PC
  %3633 = add i64 %3632, 2
  store i64 %3633, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3634 = load i64, i64* %PC
  %3635 = sub i64 %3634, 2300
  %3636 = load i64, i64* %PC
  %3637 = add i64 %3636, 5
  %3638 = load i64, i64* %PC
  %3639 = add i64 %3638, 5
  store i64 %3639, i64* %PC
  %3640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3641 = load i64, i64* %3640, align 8, !tbaa !2428
  %3642 = add i64 %3641, -8
  %3643 = inttoptr i64 %3642 to i64*
  store i64 %3637, i64* %3643
  store i64 %3642, i64* %3640, align 8, !tbaa !2428
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3635, i64* %3644, align 8, !tbaa !2428
  %3645 = load i64, i64* %PC
  %3646 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %3645, %struct.Memory* %MEMORY.4)
  %3647 = load i64, i64* %RBP
  %3648 = sub i64 %3647, 184
  %3649 = load i32, i32* %EAX
  %3650 = zext i32 %3649 to i64
  %3651 = load i64, i64* %PC
  %3652 = add i64 %3651, 6
  store i64 %3652, i64* %PC
  %3653 = inttoptr i64 %3648 to i32*
  store i32 %3649, i32* %3653
  br label %block_400ea7

block_400ec4:                                     ; preds = %block_400eba
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 742), i64* %RDI, align 8, !tbaa !2428
  %3654 = load i64, i64* %PC
  %3655 = add i64 %3654, 10
  store i64 %3655, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 231), i64* %RAX, align 8, !tbaa !2428
  %3656 = load i64, i64* %PC
  %3657 = add i64 %3656, 10
  store i64 %3657, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 740), i64* %RCX, align 8, !tbaa !2428
  %3658 = load i64, i64* %RBP
  %3659 = sub i64 %3658, 32
  %3660 = load i64, i64* %PC
  %3661 = add i64 %3660, 3
  store i64 %3661, i64* %PC
  %3662 = inttoptr i64 %3659 to i32*
  %3663 = load i32, i32* %3662
  %3664 = zext i32 %3663 to i64
  store i64 %3664, i64* %RSI, align 8, !tbaa !2428
  %3665 = load i64, i64* %RBP
  %3666 = sub i64 %3665, 32
  %3667 = load i64, i64* %PC
  %3668 = add i64 %3667, 4
  store i64 %3668, i64* %PC
  %3669 = inttoptr i64 %3666 to i32*
  %3670 = load i32, i32* %3669
  %3671 = sub i32 %3670, 1
  %3672 = icmp ult i32 %3670, 1
  %3673 = zext i1 %3672 to i8
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3673, i8* %3674, align 1, !tbaa !2432
  %3675 = and i32 %3671, 255
  %3676 = call i32 @llvm.ctpop.i32(i32 %3675) #17
  %3677 = trunc i32 %3676 to i8
  %3678 = and i8 %3677, 1
  %3679 = xor i8 %3678, 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3679, i8* %3680, align 1, !tbaa !2446
  %3681 = xor i32 %3670, 1
  %3682 = xor i32 %3681, %3671
  %3683 = lshr i32 %3682, 4
  %3684 = trunc i32 %3683 to i8
  %3685 = and i8 %3684, 1
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3685, i8* %3686, align 1, !tbaa !2447
  %3687 = icmp eq i32 %3671, 0
  %3688 = zext i1 %3687 to i8
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3688, i8* %3689, align 1, !tbaa !2448
  %3690 = lshr i32 %3671, 31
  %3691 = trunc i32 %3690 to i8
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3691, i8* %3692, align 1, !tbaa !2449
  %3693 = lshr i32 %3670, 31
  %3694 = xor i32 %3690, %3693
  %3695 = add nuw nsw i32 %3694, %3693
  %3696 = icmp eq i32 %3695, 2
  %3697 = zext i1 %3696 to i8
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3697, i8* %3698, align 1, !tbaa !2450
  %3699 = load i64, i64* %RCX
  %3700 = load i64, i64* %PC
  %3701 = add i64 %3700, 4
  store i64 %3701, i64* %PC
  %3702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3703 = load i8, i8* %3702, align 1, !tbaa !2448
  %3704 = icmp eq i8 %3703, 0
  %3705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3706 = load i8, i8* %3705, align 1, !tbaa !2449
  %3707 = icmp ne i8 %3706, 0
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3709 = load i8, i8* %3708, align 1, !tbaa !2450
  %3710 = icmp ne i8 %3709, 0
  %3711 = xor i1 %3707, %3710
  %3712 = xor i1 %3711, true
  %3713 = and i1 %3704, %3712
  %3714 = load i64, i64* %RAX, align 8, !tbaa !2428
  %3715 = select i1 %3713, i64 %3699, i64 %3714
  store i64 %3715, i64* %RAX, align 8, !tbaa !2428
  %3716 = load i64, i64* %RAX
  %3717 = load i64, i64* %PC
  %3718 = add i64 %3717, 3
  store i64 %3718, i64* %PC
  store i64 %3716, i64* %RDX, align 8, !tbaa !2428
  %3719 = load i64, i64* %PC
  %3720 = add i64 %3719, 2
  store i64 %3720, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3721 = load i64, i64* %PC
  %3722 = sub i64 %3721, 2386
  %3723 = load i64, i64* %PC
  %3724 = add i64 %3723, 5
  %3725 = load i64, i64* %PC
  %3726 = add i64 %3725, 5
  store i64 %3726, i64* %PC
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3728 = load i64, i64* %3727, align 8, !tbaa !2428
  %3729 = add i64 %3728, -8
  %3730 = inttoptr i64 %3729 to i64*
  store i64 %3724, i64* %3730
  store i64 %3729, i64* %3727, align 8, !tbaa !2428
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3722, i64* %3731, align 8, !tbaa !2428
  %3732 = load i64, i64* %PC
  %3733 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %3732, %struct.Memory* %MEMORY.0)
  %3734 = load i64, i64* %RBP
  %3735 = sub i64 %3734, 188
  %3736 = load i32, i32* %EAX
  %3737 = zext i32 %3736 to i64
  %3738 = load i64, i64* %PC
  %3739 = add i64 %3738, 6
  store i64 %3739, i64* %PC
  %3740 = inttoptr i64 %3735 to i32*
  store i32 %3736, i32* %3740
  %3741 = load i64, i64* %PC
  %3742 = add i64 %3741, 28
  %3743 = load i64, i64* %PC
  %3744 = add i64 %3743, 5
  store i64 %3744, i64* %PC
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3742, i64* %3745, align 8, !tbaa !2428
  br label %block_400f19

block_400b22:                                     ; preds = %block_4008eb
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDI, align 8, !tbaa !2428
  %3746 = load i64, i64* %PC
  %3747 = add i64 %3746, 10
  store i64 %3747, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %3748 = load i64, i64* %PC
  %3749 = add i64 %3748, 10
  store i64 %3749, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 439), i64* %RDX, align 8, !tbaa !2428
  %3750 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3751 = load i64, i64* %PC
  %3752 = add i64 %3751, 9
  store i64 %3752, i64* %PC
  %3753 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %3754 = bitcast i8* %3750 to double*
  store double %3753, double* %3754, align 1, !tbaa !2452
  %3755 = getelementptr inbounds i8, i8* %3750, i64 8
  %3756 = bitcast i8* %3755 to double*
  store double 0.000000e+00, double* %3756, align 1, !tbaa !2452
  %3757 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3758 = load i64, i64* %PC
  %3759 = add i64 %3758, 9
  store i64 %3759, i64* %PC
  %3760 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %3761 = bitcast i8* %3757 to double*
  store double %3760, double* %3761, align 1, !tbaa !2452
  %3762 = getelementptr inbounds i8, i8* %3757, i64 8
  %3763 = bitcast i8* %3762 to double*
  store double 0.000000e+00, double* %3763, align 1, !tbaa !2452
  %3764 = load i64, i64* %PC
  %3765 = add i64 %3764, 2
  store i64 %3765, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2451
  %3766 = load i64, i64* %PC
  %3767 = sub i64 %3766, 1364
  %3768 = load i64, i64* %PC
  %3769 = add i64 %3768, 5
  %3770 = load i64, i64* %PC
  %3771 = add i64 %3770, 5
  store i64 %3771, i64* %PC
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3773 = load i64, i64* %3772, align 8, !tbaa !2428
  %3774 = add i64 %3773, -8
  %3775 = inttoptr i64 %3774 to i64*
  store i64 %3769, i64* %3775
  store i64 %3774, i64* %3772, align 8, !tbaa !2428
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3767, i64* %3776, align 8, !tbaa !2428
  %3777 = load i64, i64* %PC
  %3778 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3777, %struct.Memory* %MEMORY.2)
  %3779 = load i64, i64* %PC
  %3780 = add i64 %3779, 10
  store i64 %3780, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3781 = load i64, i64* %RDX
  %3782 = load i64, i64* %PC
  %3783 = add i64 %3782, 4
  store i64 %3783, i64* %PC
  %3784 = add i64 80, %3781
  store i64 %3784, i64* %RDX, align 8, !tbaa !2428
  %3785 = icmp ult i64 %3784, %3781
  %3786 = icmp ult i64 %3784, 80
  %3787 = or i1 %3785, %3786
  %3788 = zext i1 %3787 to i8
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3788, i8* %3789, align 1, !tbaa !2432
  %3790 = trunc i64 %3784 to i32
  %3791 = and i32 %3790, 255
  %3792 = call i32 @llvm.ctpop.i32(i32 %3791) #17
  %3793 = trunc i32 %3792 to i8
  %3794 = and i8 %3793, 1
  %3795 = xor i8 %3794, 1
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3795, i8* %3796, align 1, !tbaa !2446
  %3797 = xor i64 80, %3781
  %3798 = xor i64 %3797, %3784
  %3799 = lshr i64 %3798, 4
  %3800 = trunc i64 %3799 to i8
  %3801 = and i8 %3800, 1
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3801, i8* %3802, align 1, !tbaa !2447
  %3803 = icmp eq i64 %3784, 0
  %3804 = zext i1 %3803 to i8
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3804, i8* %3805, align 1, !tbaa !2448
  %3806 = lshr i64 %3784, 63
  %3807 = trunc i64 %3806 to i8
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3807, i8* %3808, align 1, !tbaa !2449
  %3809 = lshr i64 %3781, 63
  %3810 = xor i64 %3806, %3809
  %3811 = add nuw nsw i64 %3810, %3806
  %3812 = icmp eq i64 %3811, 2
  %3813 = zext i1 %3812 to i8
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3813, i8* %3814, align 1, !tbaa !2450
  %3815 = load i64, i64* %PC
  %3816 = add i64 %3815, 10
  store i64 %3816, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %3817 = load i64, i64* %PC
  %3818 = add i64 %3817, 10
  store i64 %3818, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 452), i64* %RDI, align 8, !tbaa !2428
  %3819 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3820 = load i64, i64* %PC
  %3821 = add i64 %3820, 9
  store i64 %3821, i64* %PC
  %3822 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %3823 = bitcast i8* %3819 to double*
  store double %3822, double* %3823, align 1, !tbaa !2452
  %3824 = getelementptr inbounds i8, i8* %3819, i64 8
  %3825 = bitcast i8* %3824 to double*
  store double 0.000000e+00, double* %3825, align 1, !tbaa !2452
  %3826 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3827 = load i64, i64* %PC
  %3828 = add i64 %3827, 9
  store i64 %3828, i64* %PC
  %3829 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %3830 = bitcast i8* %3826 to double*
  store double %3829, double* %3830, align 1, !tbaa !2452
  %3831 = getelementptr inbounds i8, i8* %3826, i64 8
  %3832 = bitcast i8* %3831 to double*
  store double 0.000000e+00, double* %3832, align 1, !tbaa !2452
  %3833 = load i64, i64* %RBP
  %3834 = sub i64 %3833, 128
  %3835 = load i64, i64* %RDI
  %3836 = load i64, i64* %PC
  %3837 = add i64 %3836, 4
  store i64 %3837, i64* %PC
  %3838 = inttoptr i64 %3834 to i64*
  store i64 %3835, i64* %3838
  %3839 = load i64, i64* %RDX
  %3840 = load i64, i64* %PC
  %3841 = add i64 %3840, 3
  store i64 %3841, i64* %PC
  store i64 %3839, i64* %RDI, align 8, !tbaa !2428
  %3842 = load i64, i64* %RBP
  %3843 = sub i64 %3842, 128
  %3844 = load i64, i64* %PC
  %3845 = add i64 %3844, 4
  store i64 %3845, i64* %PC
  %3846 = inttoptr i64 %3843 to i64*
  %3847 = load i64, i64* %3846
  store i64 %3847, i64* %RDX, align 8, !tbaa !2428
  %3848 = load i64, i64* %RBP
  %3849 = sub i64 %3848, 132
  %3850 = load i32, i32* %EAX
  %3851 = zext i32 %3850 to i64
  %3852 = load i64, i64* %PC
  %3853 = add i64 %3852, 6
  store i64 %3853, i64* %PC
  %3854 = inttoptr i64 %3849 to i32*
  store i32 %3850, i32* %3854
  %3855 = load i64, i64* %PC
  %3856 = add i64 %3855, 2
  store i64 %3856, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2451
  %3857 = load i64, i64* %PC
  %3858 = sub i64 %3857, 1440
  %3859 = load i64, i64* %PC
  %3860 = add i64 %3859, 5
  %3861 = load i64, i64* %PC
  %3862 = add i64 %3861, 5
  store i64 %3862, i64* %PC
  %3863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3864 = load i64, i64* %3863, align 8, !tbaa !2428
  %3865 = add i64 %3864, -8
  %3866 = inttoptr i64 %3865 to i64*
  store i64 %3860, i64* %3866
  store i64 %3865, i64* %3863, align 8, !tbaa !2428
  %3867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3858, i64* %3867, align 8, !tbaa !2428
  %3868 = load i64, i64* %PC
  %3869 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3868, %struct.Memory* %3778)
  %3870 = load i64, i64* %PC
  %3871 = add i64 %3870, 10
  store i64 %3871, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3872 = load i64, i64* %RDX
  %3873 = load i64, i64* %PC
  %3874 = add i64 %3873, 7
  store i64 %3874, i64* %PC
  %3875 = add i64 160, %3872
  store i64 %3875, i64* %RDX, align 8, !tbaa !2428
  %3876 = icmp ult i64 %3875, %3872
  %3877 = icmp ult i64 %3875, 160
  %3878 = or i1 %3876, %3877
  %3879 = zext i1 %3878 to i8
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3879, i8* %3880, align 1, !tbaa !2432
  %3881 = trunc i64 %3875 to i32
  %3882 = and i32 %3881, 255
  %3883 = call i32 @llvm.ctpop.i32(i32 %3882) #17
  %3884 = trunc i32 %3883 to i8
  %3885 = and i8 %3884, 1
  %3886 = xor i8 %3885, 1
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3886, i8* %3887, align 1, !tbaa !2446
  %3888 = xor i64 160, %3872
  %3889 = xor i64 %3888, %3875
  %3890 = lshr i64 %3889, 4
  %3891 = trunc i64 %3890 to i8
  %3892 = and i8 %3891, 1
  %3893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3892, i8* %3893, align 1, !tbaa !2447
  %3894 = icmp eq i64 %3875, 0
  %3895 = zext i1 %3894 to i8
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3895, i8* %3896, align 1, !tbaa !2448
  %3897 = lshr i64 %3875, 63
  %3898 = trunc i64 %3897 to i8
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3898, i8* %3899, align 1, !tbaa !2449
  %3900 = lshr i64 %3872, 63
  %3901 = xor i64 %3897, %3900
  %3902 = add nuw nsw i64 %3901, %3897
  %3903 = icmp eq i64 %3902, 2
  %3904 = zext i1 %3903 to i8
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3904, i8* %3905, align 1, !tbaa !2450
  %3906 = load i64, i64* %PC
  %3907 = add i64 %3906, 10
  store i64 %3907, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 465), i64* %RSI, align 8, !tbaa !2428
  %3908 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3909 = load i64, i64* %PC
  %3910 = add i64 %3909, 9
  store i64 %3910, i64* %PC
  %3911 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %3912 = bitcast i8* %3908 to double*
  store double %3911, double* %3912, align 1, !tbaa !2452
  %3913 = getelementptr inbounds i8, i8* %3908, i64 8
  %3914 = bitcast i8* %3913 to double*
  store double 0.000000e+00, double* %3914, align 1, !tbaa !2452
  %3915 = load i64, i64* %RDX
  %3916 = load i64, i64* %PC
  %3917 = add i64 %3916, 3
  store i64 %3917, i64* %PC
  store i64 %3915, i64* %RDI, align 8, !tbaa !2428
  %3918 = load i64, i64* %RBP
  %3919 = sub i64 %3918, 136
  %3920 = load i32, i32* %EAX
  %3921 = zext i32 %3920 to i64
  %3922 = load i64, i64* %PC
  %3923 = add i64 %3922, 6
  store i64 %3923, i64* %PC
  %3924 = inttoptr i64 %3919 to i32*
  store i32 %3920, i32* %3924
  %3925 = load i64, i64* %PC
  %3926 = add i64 %3925, 2
  store i64 %3926, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %3927 = load i64, i64* %PC
  %3928 = sub i64 %3927, 1492
  %3929 = load i64, i64* %PC
  %3930 = add i64 %3929, 5
  %3931 = load i64, i64* %PC
  %3932 = add i64 %3931, 5
  store i64 %3932, i64* %PC
  %3933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3934 = load i64, i64* %3933, align 8, !tbaa !2428
  %3935 = add i64 %3934, -8
  %3936 = inttoptr i64 %3935 to i64*
  store i64 %3930, i64* %3936
  store i64 %3935, i64* %3933, align 8, !tbaa !2428
  %3937 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3928, i64* %3937, align 8, !tbaa !2428
  %3938 = load i64, i64* %PC
  %3939 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %3938, %struct.Memory* %3869)
  %3940 = load i64, i64* %PC
  %3941 = add i64 %3940, 10
  store i64 %3941, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %3942 = load i64, i64* %RDX
  %3943 = load i64, i64* %PC
  %3944 = add i64 %3943, 7
  store i64 %3944, i64* %PC
  %3945 = add i64 240, %3942
  store i64 %3945, i64* %RDX, align 8, !tbaa !2428
  %3946 = icmp ult i64 %3945, %3942
  %3947 = icmp ult i64 %3945, 240
  %3948 = or i1 %3946, %3947
  %3949 = zext i1 %3948 to i8
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3949, i8* %3950, align 1, !tbaa !2432
  %3951 = trunc i64 %3945 to i32
  %3952 = and i32 %3951, 255
  %3953 = call i32 @llvm.ctpop.i32(i32 %3952) #17
  %3954 = trunc i32 %3953 to i8
  %3955 = and i8 %3954, 1
  %3956 = xor i8 %3955, 1
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3956, i8* %3957, align 1, !tbaa !2446
  %3958 = xor i64 240, %3942
  %3959 = xor i64 %3958, %3945
  %3960 = lshr i64 %3959, 4
  %3961 = trunc i64 %3960 to i8
  %3962 = and i8 %3961, 1
  %3963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3962, i8* %3963, align 1, !tbaa !2447
  %3964 = icmp eq i64 %3945, 0
  %3965 = zext i1 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3965, i8* %3966, align 1, !tbaa !2448
  %3967 = lshr i64 %3945, 63
  %3968 = trunc i64 %3967 to i8
  %3969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3968, i8* %3969, align 1, !tbaa !2449
  %3970 = lshr i64 %3942, 63
  %3971 = xor i64 %3967, %3970
  %3972 = add nuw nsw i64 %3971, %3967
  %3973 = icmp eq i64 %3972, 2
  %3974 = zext i1 %3973 to i8
  %3975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3974, i8* %3975, align 1, !tbaa !2450
  %3976 = load i64, i64* %PC
  %3977 = add i64 %3976, 10
  store i64 %3977, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %3978 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3979 = load i64, i64* %PC
  %3980 = add i64 %3979, 9
  store i64 %3980, i64* %PC
  %3981 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %3982 = bitcast i8* %3978 to double*
  store double %3981, double* %3982, align 1, !tbaa !2452
  %3983 = getelementptr inbounds i8, i8* %3978, i64 8
  %3984 = bitcast i8* %3983 to double*
  store double 0.000000e+00, double* %3984, align 1, !tbaa !2452
  %3985 = load i64, i64* %RDX
  %3986 = load i64, i64* %PC
  %3987 = add i64 %3986, 3
  store i64 %3987, i64* %PC
  store i64 %3985, i64* %RDI, align 8, !tbaa !2428
  %3988 = load i64, i64* %RBP
  %3989 = sub i64 %3988, 140
  %3990 = load i32, i32* %EAX
  %3991 = zext i32 %3990 to i64
  %3992 = load i64, i64* %PC
  %3993 = add i64 %3992, 6
  store i64 %3993, i64* %PC
  %3994 = inttoptr i64 %3989 to i32*
  store i32 %3990, i32* %3994
  %3995 = load i64, i64* %PC
  %3996 = add i64 %3995, 2
  store i64 %3996, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %3997 = load i64, i64* %PC
  %3998 = sub i64 %3997, 1544
  %3999 = load i64, i64* %PC
  %4000 = add i64 %3999, 5
  %4001 = load i64, i64* %PC
  %4002 = add i64 %4001, 5
  store i64 %4002, i64* %PC
  %4003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4004 = load i64, i64* %4003, align 8, !tbaa !2428
  %4005 = add i64 %4004, -8
  %4006 = inttoptr i64 %4005 to i64*
  store i64 %4000, i64* %4006
  store i64 %4005, i64* %4003, align 8, !tbaa !2428
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3998, i64* %4007, align 8, !tbaa !2428
  %4008 = load i64, i64* %PC
  %4009 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4008, %struct.Memory* %3939)
  %4010 = load i64, i64* %PC
  %4011 = add i64 %4010, 10
  store i64 %4011, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4012 = load i64, i64* %RDX
  %4013 = load i64, i64* %PC
  %4014 = add i64 %4013, 7
  store i64 %4014, i64* %PC
  %4015 = add i64 320, %4012
  store i64 %4015, i64* %RDX, align 8, !tbaa !2428
  %4016 = icmp ult i64 %4015, %4012
  %4017 = icmp ult i64 %4015, 320
  %4018 = or i1 %4016, %4017
  %4019 = zext i1 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4019, i8* %4020, align 1, !tbaa !2432
  %4021 = trunc i64 %4015 to i32
  %4022 = and i32 %4021, 255
  %4023 = call i32 @llvm.ctpop.i32(i32 %4022) #17
  %4024 = trunc i32 %4023 to i8
  %4025 = and i8 %4024, 1
  %4026 = xor i8 %4025, 1
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4026, i8* %4027, align 1, !tbaa !2446
  %4028 = xor i64 320, %4012
  %4029 = xor i64 %4028, %4015
  %4030 = lshr i64 %4029, 4
  %4031 = trunc i64 %4030 to i8
  %4032 = and i8 %4031, 1
  %4033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4032, i8* %4033, align 1, !tbaa !2447
  %4034 = icmp eq i64 %4015, 0
  %4035 = zext i1 %4034 to i8
  %4036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4035, i8* %4036, align 1, !tbaa !2448
  %4037 = lshr i64 %4015, 63
  %4038 = trunc i64 %4037 to i8
  %4039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4038, i8* %4039, align 1, !tbaa !2449
  %4040 = lshr i64 %4012, 63
  %4041 = xor i64 %4037, %4040
  %4042 = add nuw nsw i64 %4041, %4037
  %4043 = icmp eq i64 %4042, 2
  %4044 = zext i1 %4043 to i8
  %4045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4044, i8* %4045, align 1, !tbaa !2450
  %4046 = load i64, i64* %PC
  %4047 = add i64 %4046, 10
  store i64 %4047, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 561), i64* %RSI, align 8, !tbaa !2428
  %4048 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4049 = load i64, i64* %PC
  %4050 = add i64 %4049, 9
  store i64 %4050, i64* %PC
  %4051 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %4052 = bitcast i8* %4048 to double*
  store double %4051, double* %4052, align 1, !tbaa !2452
  %4053 = getelementptr inbounds i8, i8* %4048, i64 8
  %4054 = bitcast i8* %4053 to double*
  store double 0.000000e+00, double* %4054, align 1, !tbaa !2452
  %4055 = load i64, i64* %RDX
  %4056 = load i64, i64* %PC
  %4057 = add i64 %4056, 3
  store i64 %4057, i64* %PC
  store i64 %4055, i64* %RDI, align 8, !tbaa !2428
  %4058 = load i64, i64* %RBP
  %4059 = sub i64 %4058, 144
  %4060 = load i32, i32* %EAX
  %4061 = zext i32 %4060 to i64
  %4062 = load i64, i64* %PC
  %4063 = add i64 %4062, 6
  store i64 %4063, i64* %PC
  %4064 = inttoptr i64 %4059 to i32*
  store i32 %4060, i32* %4064
  %4065 = load i64, i64* %PC
  %4066 = add i64 %4065, 2
  store i64 %4066, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %4067 = load i64, i64* %PC
  %4068 = sub i64 %4067, 1596
  %4069 = load i64, i64* %PC
  %4070 = add i64 %4069, 5
  %4071 = load i64, i64* %PC
  %4072 = add i64 %4071, 5
  store i64 %4072, i64* %PC
  %4073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4074 = load i64, i64* %4073, align 8, !tbaa !2428
  %4075 = add i64 %4074, -8
  %4076 = inttoptr i64 %4075 to i64*
  store i64 %4070, i64* %4076
  store i64 %4075, i64* %4073, align 8, !tbaa !2428
  %4077 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4068, i64* %4077, align 8, !tbaa !2428
  %4078 = load i64, i64* %PC
  %4079 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4078, %struct.Memory* %4009)
  %4080 = load i64, i64* %PC
  %4081 = add i64 %4080, 10
  store i64 %4081, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4082 = load i64, i64* %RDX
  %4083 = load i64, i64* %PC
  %4084 = add i64 %4083, 7
  store i64 %4084, i64* %PC
  %4085 = add i64 400, %4082
  store i64 %4085, i64* %RDX, align 8, !tbaa !2428
  %4086 = icmp ult i64 %4085, %4082
  %4087 = icmp ult i64 %4085, 400
  %4088 = or i1 %4086, %4087
  %4089 = zext i1 %4088 to i8
  %4090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4089, i8* %4090, align 1, !tbaa !2432
  %4091 = trunc i64 %4085 to i32
  %4092 = and i32 %4091, 255
  %4093 = call i32 @llvm.ctpop.i32(i32 %4092) #17
  %4094 = trunc i32 %4093 to i8
  %4095 = and i8 %4094, 1
  %4096 = xor i8 %4095, 1
  %4097 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4096, i8* %4097, align 1, !tbaa !2446
  %4098 = xor i64 400, %4082
  %4099 = xor i64 %4098, %4085
  %4100 = lshr i64 %4099, 4
  %4101 = trunc i64 %4100 to i8
  %4102 = and i8 %4101, 1
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4102, i8* %4103, align 1, !tbaa !2447
  %4104 = icmp eq i64 %4085, 0
  %4105 = zext i1 %4104 to i8
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4105, i8* %4106, align 1, !tbaa !2448
  %4107 = lshr i64 %4085, 63
  %4108 = trunc i64 %4107 to i8
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4108, i8* %4109, align 1, !tbaa !2449
  %4110 = lshr i64 %4082, 63
  %4111 = xor i64 %4107, %4110
  %4112 = add nuw nsw i64 %4111, %4107
  %4113 = icmp eq i64 %4112, 2
  %4114 = zext i1 %4113 to i8
  %4115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4114, i8* %4115, align 1, !tbaa !2450
  %4116 = load i64, i64* %PC
  %4117 = add i64 %4116, 10
  store i64 %4117, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %4118 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4119 = load i64, i64* %PC
  %4120 = add i64 %4119, 9
  store i64 %4120, i64* %PC
  %4121 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %4122 = bitcast i8* %4118 to double*
  store double %4121, double* %4122, align 1, !tbaa !2452
  %4123 = getelementptr inbounds i8, i8* %4118, i64 8
  %4124 = bitcast i8* %4123 to double*
  store double 0.000000e+00, double* %4124, align 1, !tbaa !2452
  %4125 = load i64, i64* %RDX
  %4126 = load i64, i64* %PC
  %4127 = add i64 %4126, 3
  store i64 %4127, i64* %PC
  store i64 %4125, i64* %RDI, align 8, !tbaa !2428
  %4128 = load i64, i64* %RBP
  %4129 = sub i64 %4128, 148
  %4130 = load i32, i32* %EAX
  %4131 = zext i32 %4130 to i64
  %4132 = load i64, i64* %PC
  %4133 = add i64 %4132, 6
  store i64 %4133, i64* %PC
  %4134 = inttoptr i64 %4129 to i32*
  store i32 %4130, i32* %4134
  %4135 = load i64, i64* %PC
  %4136 = add i64 %4135, 2
  store i64 %4136, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %4137 = load i64, i64* %PC
  %4138 = sub i64 %4137, 1648
  %4139 = load i64, i64* %PC
  %4140 = add i64 %4139, 5
  %4141 = load i64, i64* %PC
  %4142 = add i64 %4141, 5
  store i64 %4142, i64* %PC
  %4143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4144 = load i64, i64* %4143, align 8, !tbaa !2428
  %4145 = add i64 %4144, -8
  %4146 = inttoptr i64 %4145 to i64*
  store i64 %4140, i64* %4146
  store i64 %4145, i64* %4143, align 8, !tbaa !2428
  %4147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4138, i64* %4147, align 8, !tbaa !2428
  %4148 = load i64, i64* %PC
  %4149 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4148, %struct.Memory* %4079)
  %4150 = load i64, i64* %PC
  %4151 = add i64 %4150, 10
  store i64 %4151, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4152 = load i64, i64* %RDX
  %4153 = load i64, i64* %PC
  %4154 = add i64 %4153, 7
  store i64 %4154, i64* %PC
  %4155 = add i64 480, %4152
  store i64 %4155, i64* %RDX, align 8, !tbaa !2428
  %4156 = icmp ult i64 %4155, %4152
  %4157 = icmp ult i64 %4155, 480
  %4158 = or i1 %4156, %4157
  %4159 = zext i1 %4158 to i8
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4159, i8* %4160, align 1, !tbaa !2432
  %4161 = trunc i64 %4155 to i32
  %4162 = and i32 %4161, 255
  %4163 = call i32 @llvm.ctpop.i32(i32 %4162) #17
  %4164 = trunc i32 %4163 to i8
  %4165 = and i8 %4164, 1
  %4166 = xor i8 %4165, 1
  %4167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4166, i8* %4167, align 1, !tbaa !2446
  %4168 = xor i64 480, %4152
  %4169 = xor i64 %4168, %4155
  %4170 = lshr i64 %4169, 4
  %4171 = trunc i64 %4170 to i8
  %4172 = and i8 %4171, 1
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4172, i8* %4173, align 1, !tbaa !2447
  %4174 = icmp eq i64 %4155, 0
  %4175 = zext i1 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4175, i8* %4176, align 1, !tbaa !2448
  %4177 = lshr i64 %4155, 63
  %4178 = trunc i64 %4177 to i8
  %4179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4178, i8* %4179, align 1, !tbaa !2449
  %4180 = lshr i64 %4152, 63
  %4181 = xor i64 %4177, %4180
  %4182 = add nuw nsw i64 %4181, %4177
  %4183 = icmp eq i64 %4182, 2
  %4184 = zext i1 %4183 to i8
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4184, i8* %4185, align 1, !tbaa !2450
  %4186 = load i64, i64* %PC
  %4187 = add i64 %4186, 10
  store i64 %4187, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 609), i64* %RSI, align 8, !tbaa !2428
  %4188 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4189 = load i64, i64* %PC
  %4190 = add i64 %4189, 9
  store i64 %4190, i64* %PC
  %4191 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %4192 = bitcast i8* %4188 to double*
  store double %4191, double* %4192, align 1, !tbaa !2452
  %4193 = getelementptr inbounds i8, i8* %4188, i64 8
  %4194 = bitcast i8* %4193 to double*
  store double 0.000000e+00, double* %4194, align 1, !tbaa !2452
  %4195 = load i64, i64* %RDX
  %4196 = load i64, i64* %PC
  %4197 = add i64 %4196, 3
  store i64 %4197, i64* %PC
  store i64 %4195, i64* %RDI, align 8, !tbaa !2428
  %4198 = load i64, i64* %RBP
  %4199 = sub i64 %4198, 152
  %4200 = load i32, i32* %EAX
  %4201 = zext i32 %4200 to i64
  %4202 = load i64, i64* %PC
  %4203 = add i64 %4202, 6
  store i64 %4203, i64* %PC
  %4204 = inttoptr i64 %4199 to i32*
  store i32 %4200, i32* %4204
  %4205 = load i64, i64* %PC
  %4206 = add i64 %4205, 2
  store i64 %4206, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %4207 = load i64, i64* %PC
  %4208 = sub i64 %4207, 1700
  %4209 = load i64, i64* %PC
  %4210 = add i64 %4209, 5
  %4211 = load i64, i64* %PC
  %4212 = add i64 %4211, 5
  store i64 %4212, i64* %PC
  %4213 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4214 = load i64, i64* %4213, align 8, !tbaa !2428
  %4215 = add i64 %4214, -8
  %4216 = inttoptr i64 %4215 to i64*
  store i64 %4210, i64* %4216
  store i64 %4215, i64* %4213, align 8, !tbaa !2428
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4208, i64* %4217, align 8, !tbaa !2428
  %4218 = load i64, i64* %PC
  %4219 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4218, %struct.Memory* %4149)
  %4220 = load i64, i64* %PC
  %4221 = add i64 %4220, 10
  store i64 %4221, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4222 = load i64, i64* %RDX
  %4223 = load i64, i64* %PC
  %4224 = add i64 %4223, 7
  store i64 %4224, i64* %PC
  %4225 = add i64 560, %4222
  store i64 %4225, i64* %RDX, align 8, !tbaa !2428
  %4226 = icmp ult i64 %4225, %4222
  %4227 = icmp ult i64 %4225, 560
  %4228 = or i1 %4226, %4227
  %4229 = zext i1 %4228 to i8
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4229, i8* %4230, align 1, !tbaa !2432
  %4231 = trunc i64 %4225 to i32
  %4232 = and i32 %4231, 255
  %4233 = call i32 @llvm.ctpop.i32(i32 %4232) #17
  %4234 = trunc i32 %4233 to i8
  %4235 = and i8 %4234, 1
  %4236 = xor i8 %4235, 1
  %4237 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4236, i8* %4237, align 1, !tbaa !2446
  %4238 = xor i64 560, %4222
  %4239 = xor i64 %4238, %4225
  %4240 = lshr i64 %4239, 4
  %4241 = trunc i64 %4240 to i8
  %4242 = and i8 %4241, 1
  %4243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4242, i8* %4243, align 1, !tbaa !2447
  %4244 = icmp eq i64 %4225, 0
  %4245 = zext i1 %4244 to i8
  %4246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4245, i8* %4246, align 1, !tbaa !2448
  %4247 = lshr i64 %4225, 63
  %4248 = trunc i64 %4247 to i8
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4248, i8* %4249, align 1, !tbaa !2449
  %4250 = lshr i64 %4222, 63
  %4251 = xor i64 %4247, %4250
  %4252 = add nuw nsw i64 %4251, %4247
  %4253 = icmp eq i64 %4252, 2
  %4254 = zext i1 %4253 to i8
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4254, i8* %4255, align 1, !tbaa !2450
  %4256 = load i64, i64* %PC
  %4257 = add i64 %4256, 10
  store i64 %4257, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %4258 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4259 = load i64, i64* %PC
  %4260 = add i64 %4259, 9
  store i64 %4260, i64* %PC
  %4261 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %4262 = bitcast i8* %4258 to double*
  store double %4261, double* %4262, align 1, !tbaa !2452
  %4263 = getelementptr inbounds i8, i8* %4258, i64 8
  %4264 = bitcast i8* %4263 to double*
  store double 0.000000e+00, double* %4264, align 1, !tbaa !2452
  %4265 = load i64, i64* %RDX
  %4266 = load i64, i64* %PC
  %4267 = add i64 %4266, 3
  store i64 %4267, i64* %PC
  store i64 %4265, i64* %RDI, align 8, !tbaa !2428
  %4268 = load i64, i64* %RBP
  %4269 = sub i64 %4268, 156
  %4270 = load i32, i32* %EAX
  %4271 = zext i32 %4270 to i64
  %4272 = load i64, i64* %PC
  %4273 = add i64 %4272, 6
  store i64 %4273, i64* %PC
  %4274 = inttoptr i64 %4269 to i32*
  store i32 %4270, i32* %4274
  %4275 = load i64, i64* %PC
  %4276 = add i64 %4275, 2
  store i64 %4276, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %4277 = load i64, i64* %PC
  %4278 = sub i64 %4277, 1752
  %4279 = load i64, i64* %PC
  %4280 = add i64 %4279, 5
  %4281 = load i64, i64* %PC
  %4282 = add i64 %4281, 5
  store i64 %4282, i64* %PC
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4284 = load i64, i64* %4283, align 8, !tbaa !2428
  %4285 = add i64 %4284, -8
  %4286 = inttoptr i64 %4285 to i64*
  store i64 %4280, i64* %4286
  store i64 %4285, i64* %4283, align 8, !tbaa !2428
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4278, i64* %4287, align 8, !tbaa !2428
  %4288 = load i64, i64* %PC
  %4289 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %4288, %struct.Memory* %4219)
  %4290 = load i64, i64* %RBP
  %4291 = sub i64 %4290, 32
  %4292 = load i64, i64* %PC
  %4293 = add i64 %4292, 7
  store i64 %4293, i64* %PC
  %4294 = inttoptr i64 %4291 to i32*
  store i32 0, i32* %4294
  %4295 = load i64, i64* %RBP
  %4296 = sub i64 %4295, 20
  %4297 = load i64, i64* %PC
  %4298 = add i64 %4297, 7
  store i64 %4298, i64* %PC
  %4299 = inttoptr i64 %4296 to i32*
  store i32 0, i32* %4299
  %4300 = load i64, i64* %RBP
  %4301 = sub i64 %4300, 160
  %4302 = load i32, i32* %EAX
  %4303 = zext i32 %4302 to i64
  %4304 = load i64, i64* %PC
  %4305 = add i64 %4304, 6
  store i64 %4305, i64* %PC
  %4306 = inttoptr i64 %4301 to i32*
  store i32 %4302, i32* %4306
  br label %block_400cf1

block_400f02:                                     ; preds = %block_400eba
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 790), i64* %RDI, align 8, !tbaa !2428
  %4307 = load i64, i64* %PC
  %4308 = add i64 %4307, 2
  store i64 %4308, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4309 = load i64, i64* %PC
  %4310 = sub i64 %4309, 2414
  %4311 = load i64, i64* %PC
  %4312 = add i64 %4311, 5
  %4313 = load i64, i64* %PC
  %4314 = add i64 %4313, 5
  store i64 %4314, i64* %PC
  %4315 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4316 = load i64, i64* %4315, align 8, !tbaa !2428
  %4317 = add i64 %4316, -8
  %4318 = inttoptr i64 %4317 to i64*
  store i64 %4312, i64* %4318
  store i64 %4317, i64* %4315, align 8, !tbaa !2428
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4310, i64* %4319, align 8, !tbaa !2428
  %4320 = load i64, i64* %PC
  %4321 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %4320, %struct.Memory* %MEMORY.0)
  %4322 = load i64, i64* %RBP
  %4323 = sub i64 %4322, 192
  %4324 = load i32, i32* %EAX
  %4325 = zext i32 %4324 to i64
  %4326 = load i64, i64* %PC
  %4327 = add i64 %4326, 6
  store i64 %4327, i64* %PC
  %4328 = inttoptr i64 %4323 to i32*
  store i32 %4324, i32* %4328
  br label %block_400f19

block_400eba:                                     ; preds = %block_400cf1
  %4329 = load i64, i64* %RBP
  %4330 = sub i64 %4329, 32
  %4331 = load i64, i64* %PC
  %4332 = add i64 %4331, 4
  store i64 %4332, i64* %PC
  %4333 = inttoptr i64 %4330 to i32*
  %4334 = load i32, i32* %4333
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4335, align 1, !tbaa !2432
  %4336 = and i32 %4334, 255
  %4337 = call i32 @llvm.ctpop.i32(i32 %4336) #17
  %4338 = trunc i32 %4337 to i8
  %4339 = and i8 %4338, 1
  %4340 = xor i8 %4339, 1
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4340, i8* %4341, align 1, !tbaa !2446
  %4342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4342, align 1, !tbaa !2447
  %4343 = icmp eq i32 %4334, 0
  %4344 = zext i1 %4343 to i8
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4344, i8* %4345, align 1, !tbaa !2448
  %4346 = lshr i32 %4334, 31
  %4347 = trunc i32 %4346 to i8
  %4348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4347, i8* %4348, align 1, !tbaa !2449
  %4349 = lshr i32 %4334, 31
  %4350 = xor i32 %4346, %4349
  %4351 = add nuw nsw i32 %4350, %4349
  %4352 = icmp eq i32 %4351, 2
  %4353 = zext i1 %4352 to i8
  %4354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4353, i8* %4354, align 1, !tbaa !2450
  %4355 = load i64, i64* %PC
  %4356 = add i64 %4355, 68
  %4357 = load i64, i64* %PC
  %4358 = add i64 %4357, 6
  %4359 = load i64, i64* %PC
  %4360 = add i64 %4359, 6
  store i64 %4360, i64* %PC
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4362 = load i8, i8* %4361, align 1, !tbaa !2448
  %4363 = icmp ne i8 %4362, 0
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4365 = load i8, i8* %4364, align 1, !tbaa !2449
  %4366 = icmp ne i8 %4365, 0
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4368 = load i8, i8* %4367, align 1, !tbaa !2450
  %4369 = icmp ne i8 %4368, 0
  %4370 = xor i1 %4366, %4369
  %4371 = or i1 %4363, %4370
  %4372 = zext i1 %4371 to i8
  store i8 %4372, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4374 = select i1 %4371, i64 %4356, i64 %4358
  store i64 %4374, i64* %4373, align 8, !tbaa !2428
  %4375 = load i8, i8* %BRANCH_TAKEN
  %4376 = icmp eq i8 %4375, 1
  %4377 = load i64, i64* %PC
  %4378 = add i64 %4377, 10
  store i64 %4378, i64* %PC
  br i1 %4376, label %block_400f02, label %block_400ec4

block_400909:                                     ; preds = %block_40091a, %block_4008ff
  %MEMORY.8 = phi %struct.Memory* [ %MEMORY.2, %block_4008ff ], [ %3027, %block_40091a ]
  %4379 = load i64, i64* %PC
  %4380 = add i64 %4379, 8
  store i64 %4380, i64* %PC
  %4381 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %4382 = sext i16 %4381 to i64
  %4383 = and i64 %4382, 4294967295
  store i64 %4383, i64* %RAX, align 8, !tbaa !2428
  %4384 = load i32, i32* %EAX
  %4385 = zext i32 %4384 to i64
  %4386 = load i64, i64* %PC
  %4387 = add i64 %4386, 3
  store i64 %4387, i64* %PC
  %4388 = sub i32 %4384, 1
  %4389 = icmp ult i32 %4384, 1
  %4390 = zext i1 %4389 to i8
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4390, i8* %4391, align 1, !tbaa !2432
  %4392 = and i32 %4388, 255
  %4393 = call i32 @llvm.ctpop.i32(i32 %4392) #17
  %4394 = trunc i32 %4393 to i8
  %4395 = and i8 %4394, 1
  %4396 = xor i8 %4395, 1
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4396, i8* %4397, align 1, !tbaa !2446
  %4398 = xor i64 1, %4385
  %4399 = trunc i64 %4398 to i32
  %4400 = xor i32 %4399, %4388
  %4401 = lshr i32 %4400, 4
  %4402 = trunc i32 %4401 to i8
  %4403 = and i8 %4402, 1
  %4404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4403, i8* %4404, align 1, !tbaa !2447
  %4405 = icmp eq i32 %4388, 0
  %4406 = zext i1 %4405 to i8
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4406, i8* %4407, align 1, !tbaa !2448
  %4408 = lshr i32 %4388, 31
  %4409 = trunc i32 %4408 to i8
  %4410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4409, i8* %4410, align 1, !tbaa !2449
  %4411 = lshr i32 %4384, 31
  %4412 = xor i32 %4408, %4411
  %4413 = add nuw nsw i32 %4412, %4411
  %4414 = icmp eq i32 %4413, 2
  %4415 = zext i1 %4414 to i8
  %4416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4415, i8* %4416, align 1, !tbaa !2450
  %4417 = load i64, i64* %PC
  %4418 = add i64 %4417, 140
  %4419 = load i64, i64* %PC
  %4420 = add i64 %4419, 6
  %4421 = load i64, i64* %PC
  %4422 = add i64 %4421, 6
  store i64 %4422, i64* %PC
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4424 = load i8, i8* %4423, align 1, !tbaa !2448
  %4425 = icmp eq i8 %4424, 0
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4427 = load i8, i8* %4426, align 1, !tbaa !2449
  %4428 = icmp ne i8 %4427, 0
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4430 = load i8, i8* %4429, align 1, !tbaa !2450
  %4431 = icmp ne i8 %4430, 0
  %4432 = xor i1 %4428, %4431
  %4433 = xor i1 %4432, true
  %4434 = and i1 %4425, %4433
  %4435 = zext i1 %4434 to i8
  store i8 %4435, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4437 = select i1 %4434, i64 %4418, i64 %4420
  store i64 %4437, i64* %4436, align 8, !tbaa !2428
  %4438 = load i8, i8* %BRANCH_TAKEN
  %4439 = icmp eq i8 %4438, 1
  %4440 = load i64, i64* %PC
  %4441 = add i64 %4440, 5
  store i64 %4441, i64* %PC
  br i1 %4439, label %block_4009a0, label %block_40091a

block_400d2d:                                     ; preds = %block_400cfb
  %4442 = load i64, i64* %PC
  %4443 = add i64 %4442, 10
  store i64 %4443, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 657), i64* %RDI, align 8, !tbaa !2428
  %4444 = load i64, i64* %RBP
  %4445 = sub i64 %4444, 20
  %4446 = load i64, i64* %PC
  %4447 = add i64 %4446, 3
  store i64 %4447, i64* %PC
  %4448 = inttoptr i64 %4445 to i32*
  %4449 = load i32, i32* %4448
  %4450 = zext i32 %4449 to i64
  store i64 %4450, i64* %RAX, align 8, !tbaa !2428
  %4451 = load i64, i64* %RAX
  %4452 = load i64, i64* %PC
  %4453 = add i64 %4452, 3
  store i64 %4453, i64* %PC
  %4454 = trunc i64 %4451 to i32
  %4455 = add i32 1, %4454
  %4456 = zext i32 %4455 to i64
  store i64 %4456, i64* %RAX, align 8, !tbaa !2428
  %4457 = icmp ult i32 %4455, %4454
  %4458 = icmp ult i32 %4455, 1
  %4459 = or i1 %4457, %4458
  %4460 = zext i1 %4459 to i8
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4460, i8* %4461, align 1, !tbaa !2432
  %4462 = and i32 %4455, 255
  %4463 = call i32 @llvm.ctpop.i32(i32 %4462) #17
  %4464 = trunc i32 %4463 to i8
  %4465 = and i8 %4464, 1
  %4466 = xor i8 %4465, 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4466, i8* %4467, align 1, !tbaa !2446
  %4468 = xor i64 1, %4451
  %4469 = trunc i64 %4468 to i32
  %4470 = xor i32 %4469, %4455
  %4471 = lshr i32 %4470, 4
  %4472 = trunc i32 %4471 to i8
  %4473 = and i8 %4472, 1
  %4474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4473, i8* %4474, align 1, !tbaa !2447
  %4475 = icmp eq i32 %4455, 0
  %4476 = zext i1 %4475 to i8
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4476, i8* %4477, align 1, !tbaa !2448
  %4478 = lshr i32 %4455, 31
  %4479 = trunc i32 %4478 to i8
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4479, i8* %4480, align 1, !tbaa !2449
  %4481 = lshr i32 %4454, 31
  %4482 = xor i32 %4478, %4481
  %4483 = add nuw nsw i32 %4482, %4478
  %4484 = icmp eq i32 %4483, 2
  %4485 = zext i1 %4484 to i8
  %4486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4485, i8* %4486, align 1, !tbaa !2450
  %4487 = load i32, i32* %EAX
  %4488 = zext i32 %4487 to i64
  %4489 = load i64, i64* %PC
  %4490 = add i64 %4489, 2
  store i64 %4490, i64* %PC
  %4491 = and i64 %4488, 4294967295
  store i64 %4491, i64* %RSI, align 8, !tbaa !2428
  %4492 = load i64, i64* %PC
  %4493 = add i64 %4492, 2
  store i64 %4493, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4494 = load i64, i64* %PC
  %4495 = sub i64 %4494, 1953
  %4496 = load i64, i64* %PC
  %4497 = add i64 %4496, 5
  %4498 = load i64, i64* %PC
  %4499 = add i64 %4498, 5
  store i64 %4499, i64* %PC
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4501 = load i64, i64* %4500, align 8, !tbaa !2428
  %4502 = add i64 %4501, -8
  %4503 = inttoptr i64 %4502 to i64*
  store i64 %4497, i64* %4503
  store i64 %4502, i64* %4500, align 8, !tbaa !2428
  %4504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4495, i64* %4504, align 8, !tbaa !2428
  %4505 = load i64, i64* %PC
  %4506 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %4505, %struct.Memory* %372)
  %4507 = load i64, i64* %PC
  %4508 = add i64 %4507, 10
  store i64 %4508, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 690), i64* %RDI, align 8, !tbaa !2428
  %4509 = load i64, i64* %RBP
  %4510 = sub i64 %4509, 20
  %4511 = load i64, i64* %PC
  %4512 = add i64 %4511, 4
  store i64 %4512, i64* %PC
  %4513 = inttoptr i64 %4510 to i32*
  %4514 = load i32, i32* %4513
  %4515 = sext i32 %4514 to i64
  store i64 %4515, i64* %RCX, align 8, !tbaa !2428
  %4516 = load i64, i64* %RCX
  %4517 = mul i64 %4516, 8
  %4518 = add i64 %4517, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4519 = load i64, i64* %PC
  %4520 = add i64 %4519, 8
  store i64 %4520, i64* %PC
  %4521 = inttoptr i64 %4518 to i64*
  %4522 = load i64, i64* %4521
  store i64 %4522, i64* %RSI, align 8, !tbaa !2428
  %4523 = load i64, i64* %RBP
  %4524 = sub i64 %4523, 164
  %4525 = load i32, i32* %EAX
  %4526 = zext i32 %4525 to i64
  %4527 = load i64, i64* %PC
  %4528 = add i64 %4527, 6
  store i64 %4528, i64* %PC
  %4529 = inttoptr i64 %4524 to i32*
  store i32 %4525, i32* %4529
  %4530 = load i64, i64* %PC
  %4531 = add i64 %4530, 2
  store i64 %4531, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4532 = load i64, i64* %PC
  %4533 = sub i64 %4532, 1988
  %4534 = load i64, i64* %PC
  %4535 = add i64 %4534, 5
  %4536 = load i64, i64* %PC
  %4537 = add i64 %4536, 5
  store i64 %4537, i64* %PC
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4539 = load i64, i64* %4538, align 8, !tbaa !2428
  %4540 = add i64 %4539, -8
  %4541 = inttoptr i64 %4540 to i64*
  store i64 %4535, i64* %4541
  store i64 %4540, i64* %4538, align 8, !tbaa !2428
  %4542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4533, i64* %4542, align 8, !tbaa !2428
  %4543 = load i64, i64* %PC
  %4544 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %4543, %struct.Memory* %4506)
  %4545 = load i64, i64* %PC
  %4546 = add i64 %4545, 10
  store i64 %4546, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 707), i64* %RDI, align 8, !tbaa !2428
  %4547 = load i64, i64* %PC
  %4548 = add i64 %4547, 10
  store i64 %4548, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RCX, align 8, !tbaa !2428
  %4549 = load i64, i64* %RBP
  %4550 = sub i64 %4549, 20
  %4551 = load i64, i64* %PC
  %4552 = add i64 %4551, 4
  store i64 %4552, i64* %PC
  %4553 = inttoptr i64 %4550 to i32*
  %4554 = load i32, i32* %4553
  %4555 = sext i32 %4554 to i64
  store i64 %4555, i64* %RSI, align 8, !tbaa !2428
  %4556 = load i64, i64* %RSI
  %4557 = load i64, i64* %PC
  %4558 = add i64 %4557, 4
  store i64 %4558, i64* %PC
  %4559 = sext i64 %4556 to i128
  %4560 = and i128 %4559, -18446744073709551616
  %4561 = zext i64 %4556 to i128
  %4562 = or i128 %4560, %4561
  %4563 = mul nsw i128 80, %4562
  %4564 = trunc i128 %4563 to i64
  store i64 %4564, i64* %RSI, align 8, !tbaa !2428
  %4565 = sext i64 %4564 to i128
  %4566 = icmp ne i128 %4565, %4563
  %4567 = zext i1 %4566 to i8
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4567, i8* %4568, align 1, !tbaa !2432
  %4569 = trunc i128 %4563 to i32
  %4570 = and i32 %4569, 255
  %4571 = call i32 @llvm.ctpop.i32(i32 %4570) #17
  %4572 = trunc i32 %4571 to i8
  %4573 = and i8 %4572, 1
  %4574 = xor i8 %4573, 1
  %4575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4574, i8* %4575, align 1, !tbaa !2446
  %4576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4576, align 1, !tbaa !2447
  %4577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4577, align 1, !tbaa !2448
  %4578 = lshr i64 %4564, 63
  %4579 = trunc i64 %4578 to i8
  %4580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4579, i8* %4580, align 1, !tbaa !2449
  %4581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4567, i8* %4581, align 1, !tbaa !2450
  %4582 = load i64, i64* %RCX
  %4583 = load i64, i64* %RSI
  %4584 = load i64, i64* %PC
  %4585 = add i64 %4584, 3
  store i64 %4585, i64* %PC
  %4586 = add i64 %4583, %4582
  store i64 %4586, i64* %RCX, align 8, !tbaa !2428
  %4587 = icmp ult i64 %4586, %4582
  %4588 = icmp ult i64 %4586, %4583
  %4589 = or i1 %4587, %4588
  %4590 = zext i1 %4589 to i8
  %4591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4590, i8* %4591, align 1, !tbaa !2432
  %4592 = trunc i64 %4586 to i32
  %4593 = and i32 %4592, 255
  %4594 = call i32 @llvm.ctpop.i32(i32 %4593) #17
  %4595 = trunc i32 %4594 to i8
  %4596 = and i8 %4595, 1
  %4597 = xor i8 %4596, 1
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4597, i8* %4598, align 1, !tbaa !2446
  %4599 = xor i64 %4583, %4582
  %4600 = xor i64 %4599, %4586
  %4601 = lshr i64 %4600, 4
  %4602 = trunc i64 %4601 to i8
  %4603 = and i8 %4602, 1
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4603, i8* %4604, align 1, !tbaa !2447
  %4605 = icmp eq i64 %4586, 0
  %4606 = zext i1 %4605 to i8
  %4607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4606, i8* %4607, align 1, !tbaa !2448
  %4608 = lshr i64 %4586, 63
  %4609 = trunc i64 %4608 to i8
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4609, i8* %4610, align 1, !tbaa !2449
  %4611 = lshr i64 %4582, 63
  %4612 = lshr i64 %4583, 63
  %4613 = xor i64 %4608, %4611
  %4614 = xor i64 %4608, %4612
  %4615 = add nuw nsw i64 %4613, %4614
  %4616 = icmp eq i64 %4615, 2
  %4617 = zext i1 %4616 to i8
  %4618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4617, i8* %4618, align 1, !tbaa !2450
  %4619 = load i64, i64* %RCX
  %4620 = load i64, i64* %PC
  %4621 = add i64 %4620, 3
  store i64 %4621, i64* %PC
  store i64 %4619, i64* %RSI, align 8, !tbaa !2428
  %4622 = load i64, i64* %RBP
  %4623 = sub i64 %4622, 168
  %4624 = load i32, i32* %EAX
  %4625 = zext i32 %4624 to i64
  %4626 = load i64, i64* %PC
  %4627 = add i64 %4626, 6
  store i64 %4627, i64* %PC
  %4628 = inttoptr i64 %4623 to i32*
  store i32 %4624, i32* %4628
  %4629 = load i64, i64* %PC
  %4630 = add i64 %4629, 2
  store i64 %4630, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4631 = load i64, i64* %PC
  %4632 = sub i64 %4631, 2035
  %4633 = load i64, i64* %PC
  %4634 = add i64 %4633, 5
  %4635 = load i64, i64* %PC
  %4636 = add i64 %4635, 5
  store i64 %4636, i64* %PC
  %4637 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4638 = load i64, i64* %4637, align 8, !tbaa !2428
  %4639 = add i64 %4638, -8
  %4640 = inttoptr i64 %4639 to i64*
  store i64 %4634, i64* %4640
  store i64 %4639, i64* %4637, align 8, !tbaa !2428
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4632, i64* %4641, align 8, !tbaa !2428
  %4642 = load i64, i64* %PC
  %4643 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %4642, %struct.Memory* %4544)
  %4644 = load i64, i64* %PC
  %4645 = add i64 %4644, 10
  store i64 %4645, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 724), i64* %RDI, align 8, !tbaa !2428
  %4646 = load i64, i64* %RBP
  %4647 = sub i64 %4646, 172
  %4648 = load i32, i32* %EAX
  %4649 = zext i32 %4648 to i64
  %4650 = load i64, i64* %PC
  %4651 = add i64 %4650, 6
  store i64 %4651, i64* %PC
  %4652 = inttoptr i64 %4647 to i32*
  store i32 %4648, i32* %4652
  %4653 = load i64, i64* %PC
  %4654 = add i64 %4653, 2
  store i64 %4654, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4655 = load i64, i64* %PC
  %4656 = sub i64 %4655, 2058
  %4657 = load i64, i64* %PC
  %4658 = add i64 %4657, 5
  %4659 = load i64, i64* %PC
  %4660 = add i64 %4659, 5
  store i64 %4660, i64* %PC
  %4661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4662 = load i64, i64* %4661, align 8, !tbaa !2428
  %4663 = add i64 %4662, -8
  %4664 = inttoptr i64 %4663 to i64*
  store i64 %4658, i64* %4664
  store i64 %4663, i64* %4661, align 8, !tbaa !2428
  %4665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4656, i64* %4665, align 8, !tbaa !2428
  %4666 = load i64, i64* %PC
  %4667 = call %struct.Memory* @ext_602660_printf(%struct.State* %0, i64 %4666, %struct.Memory* %4643)
  %4668 = load i64, i64* %RBP
  %4669 = sub i64 %4668, 20
  %4670 = load i64, i64* %PC
  %4671 = add i64 %4670, 4
  store i64 %4671, i64* %PC
  %4672 = inttoptr i64 %4669 to i32*
  %4673 = load i32, i32* %4672
  %4674 = sext i32 %4673 to i64
  store i64 %4674, i64* %RCX, align 8, !tbaa !2428
  %4675 = load i64, i64* %RCX
  %4676 = mul i64 %4675, 8
  %4677 = add i64 %4676, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4678 = load i64, i64* %PC
  %4679 = add i64 %4678, 8
  store i64 %4679, i64* %PC
  %4680 = inttoptr i64 %4677 to i64*
  %4681 = load i64, i64* %4680
  store i64 %4681, i64* %RDI, align 8, !tbaa !2428
  %4682 = load i64, i64* %RBP
  %4683 = sub i64 %4682, 176
  %4684 = load i32, i32* %EAX
  %4685 = zext i32 %4684 to i64
  %4686 = load i64, i64* %PC
  %4687 = add i64 %4686, 6
  store i64 %4687, i64* %PC
  %4688 = inttoptr i64 %4683 to i32*
  store i32 %4684, i32* %4688
  %4689 = load i64, i64* %PC
  %4690 = sub i64 %4689, 2097
  %4691 = load i64, i64* %PC
  %4692 = add i64 %4691, 5
  %4693 = load i64, i64* %PC
  %4694 = add i64 %4693, 5
  store i64 %4694, i64* %PC
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4696 = load i64, i64* %4695, align 8, !tbaa !2428
  %4697 = add i64 %4696, -8
  %4698 = inttoptr i64 %4697 to i64*
  store i64 %4692, i64* %4698
  store i64 %4697, i64* %4695, align 8, !tbaa !2428
  %4699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4690, i64* %4699, align 8, !tbaa !2428
  %4700 = load i64, i64* %PC
  %4701 = call %struct.Memory* @ext_6026a0_strlen(%struct.State* %0, i64 %4700, %struct.Memory* %4667)
  %4702 = load i32, i32* %EAX
  %4703 = zext i32 %4702 to i64
  %4704 = load i64, i64* %PC
  %4705 = add i64 %4704, 2
  store i64 %4705, i64* %PC
  %4706 = and i64 %4703, 4294967295
  store i64 %4706, i64* %RDX, align 8, !tbaa !2428
  %4707 = load i64, i64* %RBP
  %4708 = sub i64 %4707, 28
  %4709 = load i32, i32* %EDX
  %4710 = zext i32 %4709 to i64
  %4711 = load i64, i64* %PC
  %4712 = add i64 %4711, 3
  store i64 %4712, i64* %PC
  %4713 = inttoptr i64 %4708 to i32*
  store i32 %4709, i32* %4713
  %4714 = load i64, i64* %RBP
  %4715 = sub i64 %4714, 24
  %4716 = load i64, i64* %PC
  %4717 = add i64 %4716, 7
  store i64 %4717, i64* %PC
  %4718 = inttoptr i64 %4715 to i32*
  store i32 0, i32* %4718
  br label %block_400dd2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400680_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400680:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2432
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2446
  %50 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2447
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2448
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2449
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2450
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2451
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2451
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2451
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2451
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2451
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2451
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2451
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2451
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2451
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2451
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2451
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2451
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2432
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2446
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2447
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2448
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2449
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2450
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2451
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2451
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2451
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2451
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2451
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2451
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2448
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_4006b8, label %block_4006a3

block_4006ba:                                     ; preds = %block_4006ad
  %191 = load i64, i64* %RAX
  %192 = load i64, i64* %RAX
  %193 = add i64 %192, %191
  %194 = load i16, i16* %AX
  %195 = zext i16 %194 to i64
  %196 = load i64, i64* %PC
  %197 = add i64 %196, 6
  store i64 %197, i64* %PC
  %198 = load i64, i64* %PC
  %199 = tail call %struct.Memory* @sub_4006c0___do_global_dtors_aux(%struct.State* %0, i64 %198, %struct.Memory* %2)
  ret %struct.Memory* %199

block_4006b5:                                     ; preds = %block_4006ad
  %200 = load i64, i64* %RAX
  %201 = load i32, i32* %EAX
  %202 = zext i32 %201 to i64
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 3
  store i64 %204, i64* %PC
  br label %block_4006b8

block_4006ad:                                     ; preds = %block_4006a3
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 1
  store i64 %206, i64* %PC
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %208 = load i64, i64* %207, align 8, !tbaa !2428
  %209 = add i64 %208, 8
  %210 = inttoptr i64 %208 to i64*
  %211 = load i64, i64* %210
  store i64 %211, i64* %RBP, align 8, !tbaa !2428
  store i64 %209, i64* %207, align 8, !tbaa !2428
  %212 = load i64, i64* %PC
  %213 = add i64 %212, 5
  store i64 %213, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %214 = load i64, i64* %RAX
  %215 = load i64, i64* %PC
  %216 = add i64 %215, 2
  store i64 %216, i64* %PC
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %214, i64* %217, align 8, !tbaa !2428
  %218 = load i64, i64* %PC
  switch i64 %218, label %270 [
    i64 4196026, label %block_4006ba
    i64 4196021, label %block_4006b5
  ]

block_4006b8:                                     ; preds = %block_4006a3, %block_4006b5, %block_400680
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400680 ], [ %2, %block_4006a3 ], [ %2, %block_4006b5 ]
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 1
  store i64 %220, i64* %PC
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %222 = load i64, i64* %221, align 8, !tbaa !2428
  %223 = add i64 %222, 8
  %224 = inttoptr i64 %222 to i64*
  %225 = load i64, i64* %224
  store i64 %225, i64* %RBP, align 8, !tbaa !2428
  store i64 %223, i64* %221, align 8, !tbaa !2428
  %226 = load i64, i64* %PC
  %227 = add i64 %226, 1
  store i64 %227, i64* %PC
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %229 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %230 = load i64, i64* %229, align 8, !tbaa !2428
  %231 = inttoptr i64 %230 to i64*
  %232 = load i64, i64* %231
  store i64 %232, i64* %228, align 8, !tbaa !2428
  %233 = add i64 %230, 8
  store i64 %233, i64* %229, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4006a3:                                     ; preds = %block_400680
  %234 = load i64, i64* %PC
  %235 = add i64 %234, 5
  store i64 %235, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %236 = load i64, i64* %RAX
  %237 = load i64, i64* %RAX
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 3
  store i64 %239, i64* %PC
  %240 = and i64 %237, %236
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %241, align 1, !tbaa !2432
  %242 = trunc i64 %240 to i32
  %243 = and i32 %242, 255
  %244 = call i32 @llvm.ctpop.i32(i32 %243) #17
  %245 = trunc i32 %244 to i8
  %246 = and i8 %245, 1
  %247 = xor i8 %246, 1
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %247, i8* %248, align 1, !tbaa !2446
  %249 = icmp eq i64 %240, 0
  %250 = zext i1 %249 to i8
  %251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %250, i8* %251, align 1, !tbaa !2448
  %252 = lshr i64 %240, 63
  %253 = trunc i64 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %253, i8* %254, align 1, !tbaa !2449
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %255, align 1, !tbaa !2450
  %256 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %256, align 1, !tbaa !2447
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 13
  %259 = load i64, i64* %PC
  %260 = add i64 %259, 2
  %261 = load i64, i64* %PC
  %262 = add i64 %261, 2
  store i64 %262, i64* %PC
  %263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %264 = load i8, i8* %263, align 1, !tbaa !2448
  store i8 %264, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %265 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %266 = icmp ne i8 %264, 0
  %267 = select i1 %266, i64 %258, i64 %260
  store i64 %267, i64* %265, align 8, !tbaa !2428
  %268 = load i8, i8* %BRANCH_TAKEN
  %269 = icmp eq i8 %268, 1
  br i1 %269, label %block_4006b8, label %block_4006ad

; <label>:270:                                    ; preds = %block_4006ad
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_4010d0_transit_surface(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4010d0:
  %state.i798 = alloca %struct.State*, align 8
  %curr_pc.i799 = alloca i64, align 8
  %memory.i800 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i801 = alloca i8, align 1
  %SS_BASE.i802 = alloca i64, align 8
  %ES_BASE.i803 = alloca i64, align 8
  %DS_BASE.i804 = alloca i64, align 8
  %CS_BASE.i805 = alloca i64, align 8
  %STATE.i806 = alloca %struct.State*, align 8
  %MEMORY.i807 = alloca %struct.Memory*, align 8
  %_DR0.i808 = alloca i64*, align 8
  %_DR1.i809 = alloca i64*, align 8
  %_DR2.i810 = alloca i64*, align 8
  %_DR3.i811 = alloca i64*, align 8
  %_DR4.i812 = alloca i64*, align 8
  %_DR5.i813 = alloca i64*, align 8
  %_DR6.i814 = alloca i64*, align 8
  %_DR7.i815 = alloca i64*, align 8
  %CR0.i816 = alloca i64*, align 8
  %CR1.i817 = alloca i64*, align 8
  %CR2.i818 = alloca i64*, align 8
  %CR3.i819 = alloca i64*, align 8
  %CR4.i820 = alloca i64*, align 8
  %CR8.i821 = alloca i64*, align 8
  %state.i639 = alloca %struct.State*, align 8
  %curr_pc.i640 = alloca i64, align 8
  %memory.i641 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i642 = alloca i8, align 1
  %SS_BASE.i643 = alloca i64, align 8
  %ES_BASE.i644 = alloca i64, align 8
  %DS_BASE.i645 = alloca i64, align 8
  %CS_BASE.i646 = alloca i64, align 8
  %STATE.i647 = alloca %struct.State*, align 8
  %MEMORY.i648 = alloca %struct.Memory*, align 8
  %_DR0.i649 = alloca i64*, align 8
  %_DR1.i650 = alloca i64*, align 8
  %_DR2.i651 = alloca i64*, align 8
  %_DR3.i652 = alloca i64*, align 8
  %_DR4.i653 = alloca i64*, align 8
  %_DR5.i654 = alloca i64*, align 8
  %_DR6.i655 = alloca i64*, align 8
  %_DR7.i656 = alloca i64*, align 8
  %CR0.i657 = alloca i64*, align 8
  %CR1.i658 = alloca i64*, align 8
  %CR2.i659 = alloca i64*, align 8
  %CR3.i660 = alloca i64*, align 8
  %CR4.i661 = alloca i64*, align 8
  %CR8.i662 = alloca i64*, align 8
  %state.i480 = alloca %struct.State*, align 8
  %curr_pc.i481 = alloca i64, align 8
  %memory.i482 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i483 = alloca i8, align 1
  %SS_BASE.i484 = alloca i64, align 8
  %ES_BASE.i485 = alloca i64, align 8
  %DS_BASE.i486 = alloca i64, align 8
  %CS_BASE.i487 = alloca i64, align 8
  %STATE.i488 = alloca %struct.State*, align 8
  %MEMORY.i489 = alloca %struct.Memory*, align 8
  %_DR0.i490 = alloca i64*, align 8
  %_DR1.i491 = alloca i64*, align 8
  %_DR2.i492 = alloca i64*, align 8
  %_DR3.i493 = alloca i64*, align 8
  %_DR4.i494 = alloca i64*, align 8
  %_DR5.i495 = alloca i64*, align 8
  %_DR6.i496 = alloca i64*, align 8
  %_DR7.i497 = alloca i64*, align 8
  %CR0.i498 = alloca i64*, align 8
  %CR1.i499 = alloca i64*, align 8
  %CR2.i500 = alloca i64*, align 8
  %CR3.i501 = alloca i64*, align 8
  %CR4.i502 = alloca i64*, align 8
  %CR8.i503 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 13
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 15
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RBP = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %19 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %18, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %19 to %"class.std::bitset"*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %21 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %20, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %21 to %"class.std::bitset"*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %23 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %22, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %23 to %"class.std::bitset"*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %25 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %24, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %25 to %union.vec128_t*
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %27 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %26, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %27 to %union.vec128_t*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %29 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %28, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %29 to %union.vec128_t*
  %30 = load i64, i64* %RBP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 1
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %34 = load i64, i64* %33, align 8, !tbaa !2428
  %35 = add i64 %34, -8
  %36 = inttoptr i64 %35 to i64*
  store i64 %30, i64* %36
  store i64 %35, i64* %33, align 8, !tbaa !2428
  %37 = load i64, i64* %RSP
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 3
  store i64 %39, i64* %PC
  store i64 %37, i64* %RBP, align 8, !tbaa !2428
  %40 = load i64, i64* %RSP
  %41 = load i64, i64* %PC
  %42 = add i64 %41, 7
  store i64 %42, i64* %PC
  %43 = sub i64 %40, 144
  store i64 %43, i64* %RSP, align 8, !tbaa !2428
  %44 = icmp ult i64 %40, 144
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %45, i8* %46, align 1, !tbaa !2432
  %47 = trunc i64 %43 to i32
  %48 = and i32 %47, 255
  %49 = call i32 @llvm.ctpop.i32(i32 %48) #17
  %50 = trunc i32 %49 to i8
  %51 = and i8 %50, 1
  %52 = xor i8 %51, 1
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %52, i8* %53, align 1, !tbaa !2446
  %54 = xor i64 144, %40
  %55 = xor i64 %54, %43
  %56 = lshr i64 %55, 4
  %57 = trunc i64 %56 to i8
  %58 = and i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %58, i8* %59, align 1, !tbaa !2447
  %60 = icmp eq i64 %43, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %43, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = lshr i64 %40, 63
  %67 = xor i64 %63, %66
  %68 = add nuw nsw i64 %67, %66
  %69 = icmp eq i64 %68, 2
  %70 = zext i1 %69 to i8
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %70, i8* %71, align 1, !tbaa !2450
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 9
  store i64 %73, i64* %PC
  %74 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %75, align 1, !tbaa !2432
  %76 = and i16 %74, 255
  %77 = zext i16 %76 to i32
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2446
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %83, align 1, !tbaa !2447
  %84 = icmp eq i16 %74, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i16 %74, 15
  %88 = trunc i16 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = lshr i16 %74, 15
  %91 = xor i16 %87, %90
  %92 = add nuw nsw i16 %91, %90
  %93 = icmp eq i16 %92, 2
  %94 = zext i1 %93 to i8
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %94, i8* %95, align 1, !tbaa !2450
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 391
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 6
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 6
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %103 = load i8, i8* %102, align 1, !tbaa !2448
  store i8 %103, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %105 = icmp ne i8 %103, 0
  %106 = select i1 %105, i64 %97, i64 %99
  store i64 %106, i64* %104, align 8, !tbaa !2428
  %107 = load i8, i8* %BRANCH_TAKEN
  %108 = icmp eq i8 %107, 1
  %109 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %union.vec128_t* %XMM0 to i8*
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC
  %114 = bitcast i8* %110 to i64*
  %115 = load i64, i64* %114, align 1
  %116 = getelementptr inbounds i8, i8* %110, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = bitcast i8* %111 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = getelementptr inbounds i8, i8* %111, i64 8
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 1
  %124 = xor i64 %120, %115
  %125 = xor i64 %123, %118
  %126 = trunc i64 %124 to i32
  %127 = lshr i64 %124, 32
  %128 = trunc i64 %127 to i32
  %129 = bitcast i8* %109 to i32*
  store i32 %126, i32* %129, align 1, !tbaa !2469
  %130 = getelementptr inbounds i8, i8* %109, i64 4
  %131 = bitcast i8* %130 to i32*
  store i32 %128, i32* %131, align 1, !tbaa !2469
  %132 = trunc i64 %125 to i32
  %133 = getelementptr inbounds i8, i8* %109, i64 8
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 1, !tbaa !2469
  %135 = lshr i64 %125, 32
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds i8, i8* %109, i64 12
  %138 = bitcast i8* %137 to i32*
  store i32 %136, i32* %138, align 1, !tbaa !2469
  %139 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %140 = load i64, i64* %PC
  %141 = add i64 %140, 9
  store i64 %141, i64* %PC
  %142 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %143 = bitcast i8* %139 to double*
  store double %142, double* %143, align 1, !tbaa !2452
  %144 = getelementptr inbounds i8, i8* %139, i64 8
  %145 = bitcast i8* %144 to double*
  store double 0.000000e+00, double* %145, align 1, !tbaa !2452
  %146 = bitcast %union.vec128_t* %XMM1 to i8*
  %147 = bitcast %union.vec128_t* %XMM0 to i8*
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 4
  store i64 %149, i64* %PC
  %150 = bitcast i8* %146 to double*
  %151 = load double, double* %150, align 1
  %152 = bitcast i8* %147 to double*
  %153 = load double, double* %152, align 1
  %154 = fcmp uno double %151, %153
  br i1 %154, label %155, label %167

; <label>:155:                                    ; preds = %block_4010d0
  %156 = fadd double %151, %153
  %157 = bitcast double %156 to i64
  %158 = and i64 %157, 9221120237041090560
  %159 = icmp eq i64 %158, 9218868437227405312
  %160 = and i64 %157, 2251799813685247
  %161 = icmp ne i64 %160, 0
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %173

; <label>:163:                                    ; preds = %155
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %165 = load i64, i64* %164, align 8, !tbaa !2428
  %166 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %165, %struct.Memory* %2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

; <label>:167:                                    ; preds = %block_4010d0
  %168 = fcmp ogt double %151, %153
  br i1 %168, label %173, label %169

; <label>:169:                                    ; preds = %167
  %170 = fcmp olt double %151, %153
  br i1 %170, label %173, label %171

; <label>:171:                                    ; preds = %169
  %172 = fcmp oeq double %151, %153
  br i1 %172, label %173, label %180

; <label>:173:                                    ; preds = %171, %169, %167, %155
  %174 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 1, %171 ], [ 1, %155 ]
  %175 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 0, %171 ], [ 1, %155 ]
  %176 = phi i8 [ 0, %167 ], [ 1, %169 ], [ 0, %171 ], [ 1, %155 ]
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %174, i8* %177, align 1, !tbaa !2451
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %175, i8* %178, align 1, !tbaa !2451
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %176, i8* %179, align 1, !tbaa !2451
  br label %180

; <label>:180:                                    ; preds = %173, %171
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %181, align 1, !tbaa !2451
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %182, align 1, !tbaa !2451
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %183, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479: ; preds = %163, %180
  %184 = phi %struct.Memory* [ %166, %163 ], [ %2, %180 ]
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 17
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 6
  %189 = load i64, i64* %PC
  %190 = add i64 %189, 6
  store i64 %190, i64* %PC
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %192 = load i8, i8* %191, align 1, !tbaa !2448
  %193 = icmp eq i8 %192, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %196 = select i1 %193, i64 %186, i64 %188
  store i64 %196, i64* %195, align 8, !tbaa !2428
  %197 = load i8, i8* %BRANCH_TAKEN
  %198 = icmp eq i8 %197, 1
  br i1 %108, label %block_40126b, label %block_4010ea

block_4010ea:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_40110b, label %block_401100

block_4011df:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957, %block_4011d4
  %MEMORY.0 = phi %struct.Memory* [ %636, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957 ], [ %636, %block_4011d4 ]
  %199 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %200 = load i64, i64* %PC
  %201 = add i64 %200, 9
  store i64 %201, i64* %PC
  %202 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %203 = bitcast i8* %199 to double*
  store double %202, double* %203, align 1, !tbaa !2452
  %204 = getelementptr inbounds i8, i8* %199, i64 8
  %205 = bitcast i8* %204 to double*
  store double 0.000000e+00, double* %205, align 1, !tbaa !2452
  %206 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %208 = load i64, i64* %RBP
  %209 = sub i64 %208, 40
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 5
  store i64 %211, i64* %PC
  %212 = bitcast i8* %207 to double*
  %213 = load double, double* %212, align 1
  %214 = getelementptr inbounds i8, i8* %207, i64 8
  %215 = bitcast i8* %214 to i64*
  %216 = load i64, i64* %215, align 1
  %217 = inttoptr i64 %209 to double*
  %218 = load double, double* %217
  %219 = fmul double %213, %218
  %220 = bitcast i8* %206 to double*
  store double %219, double* %220, align 1, !tbaa !2452
  %221 = getelementptr inbounds i8, i8* %206, i64 8
  %222 = bitcast i8* %221 to i64*
  store i64 %216, i64* %222, align 1, !tbaa !2452
  %223 = bitcast %union.vec128_t* %XMM0 to i8*
  %224 = load i64, i64* %PC
  %225 = add i64 %224, 9
  store i64 %225, i64* %PC
  %226 = bitcast i8* %223 to double*
  %227 = load double, double* %226, align 1
  store double %227, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  br label %block_4011f6

block_40126b:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_40128c, label %block_401281

block_4011da:                                     ; preds = %block_4011d4
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 28
  %230 = load i64, i64* %PC
  %231 = add i64 %230, 5
  store i64 %231, i64* %PC
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %229, i64* %232, align 8, !tbaa !2428
  br label %block_4011f6

block_4011d4:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 11
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 6
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 6
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %240 = load i8, i8* %239, align 1, !tbaa !2446
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_4011df, label %block_4011da

block_40114f:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit, %block_401121
  %MEMORY.1 = phi %struct.Memory* [ %2782, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %2782, %block_401121 ]
  %246 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 9
  store i64 %248, i64* %PC
  %249 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %250 = bitcast i8* %246 to double*
  store double %249, double* %250, align 1, !tbaa !2452
  %251 = getelementptr inbounds i8, i8* %246, i64 8
  %252 = bitcast i8* %251 to double*
  store double 0.000000e+00, double* %252, align 1, !tbaa !2452
  %253 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %254 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %255 = load i64, i64* %PC
  %256 = add i64 %255, 9
  store i64 %256, i64* %PC
  %257 = bitcast i8* %254 to double*
  %258 = load double, double* %257, align 1
  %259 = getelementptr inbounds i8, i8* %254, i64 8
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 1
  %262 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %263 = fsub double %258, %262
  %264 = bitcast i8* %253 to double*
  store double %263, double* %264, align 1, !tbaa !2452
  %265 = getelementptr inbounds i8, i8* %253, i64 8
  %266 = bitcast i8* %265 to i64*
  store i64 %261, i64* %266, align 1, !tbaa !2452
  %267 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %268 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %269 = load i64, i64* %PC
  %270 = add i64 %269, 9
  store i64 %270, i64* %PC
  %271 = bitcast i8* %268 to double*
  %272 = load double, double* %271, align 1
  %273 = getelementptr inbounds i8, i8* %268, i64 8
  %274 = bitcast i8* %273 to i64*
  %275 = load i64, i64* %274, align 1
  %276 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %277 = fdiv double %272, %276
  %278 = bitcast i8* %267 to double*
  store double %277, double* %278, align 1, !tbaa !2452
  %279 = getelementptr inbounds i8, i8* %267, i64 8
  %280 = bitcast i8* %279 to i64*
  store i64 %275, i64* %280, align 1, !tbaa !2452
  %281 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %282 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %283 = load i64, i64* %PC
  %284 = add i64 %283, 9
  store i64 %284, i64* %PC
  %285 = bitcast i8* %282 to double*
  %286 = load double, double* %285, align 1
  %287 = getelementptr inbounds i8, i8* %282, i64 8
  %288 = bitcast i8* %287 to i64*
  %289 = load i64, i64* %288, align 1
  %290 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %291 = fmul double %286, %290
  %292 = bitcast i8* %281 to double*
  store double %291, double* %292, align 1, !tbaa !2452
  %293 = getelementptr inbounds i8, i8* %281, i64 8
  %294 = bitcast i8* %293 to i64*
  store i64 %289, i64* %294, align 1, !tbaa !2452
  %295 = load i64, i64* %RBP
  %296 = sub i64 %295, 24
  %297 = bitcast %union.vec128_t* %XMM0 to i8*
  %298 = load i64, i64* %PC
  %299 = add i64 %298, 5
  store i64 %299, i64* %PC
  %300 = bitcast i8* %297 to double*
  %301 = load double, double* %300, align 1
  %302 = inttoptr i64 %296 to double*
  store double %301, double* %302
  br label %block_401178

block_4012a8:                                     ; preds = %block_4012a2
  %303 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %304 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %305 = bitcast %union.vec128_t* %XMM0 to i8*
  %306 = load i64, i64* %PC
  %307 = add i64 %306, 3
  store i64 %307, i64* %PC
  %308 = bitcast i8* %304 to i64*
  %309 = load i64, i64* %308, align 1
  %310 = getelementptr inbounds i8, i8* %304, i64 8
  %311 = bitcast i8* %310 to i64*
  %312 = load i64, i64* %311, align 1
  %313 = bitcast i8* %305 to i64*
  %314 = load i64, i64* %313, align 1
  %315 = getelementptr inbounds i8, i8* %305, i64 8
  %316 = bitcast i8* %315 to i64*
  %317 = load i64, i64* %316, align 1
  %318 = xor i64 %314, %309
  %319 = xor i64 %317, %312
  %320 = trunc i64 %318 to i32
  %321 = lshr i64 %318, 32
  %322 = trunc i64 %321 to i32
  %323 = bitcast i8* %303 to i32*
  store i32 %320, i32* %323, align 1, !tbaa !2469
  %324 = getelementptr inbounds i8, i8* %303, i64 4
  %325 = bitcast i8* %324 to i32*
  store i32 %322, i32* %325, align 1, !tbaa !2469
  %326 = trunc i64 %319 to i32
  %327 = getelementptr inbounds i8, i8* %303, i64 8
  %328 = bitcast i8* %327 to i32*
  store i32 %326, i32* %328, align 1, !tbaa !2469
  %329 = lshr i64 %319, 32
  %330 = trunc i64 %329 to i32
  %331 = getelementptr inbounds i8, i8* %303, i64 12
  %332 = bitcast i8* %331 to i32*
  store i32 %330, i32* %332, align 1, !tbaa !2469
  %333 = bitcast %union.vec128_t* %XMM0 to i8*
  %334 = load i64, i64* %PC
  %335 = add i64 %334, 9
  store i64 %335, i64* %PC
  %336 = bitcast i8* %333 to double*
  %337 = load double, double* %336, align 1
  store double %337, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %338 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %339 = load i64, i64* %PC
  %340 = add i64 %339, 9
  store i64 %340, i64* %PC
  %341 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %342 = bitcast i8* %338 to double*
  store double %341, double* %342, align 1, !tbaa !2452
  %343 = getelementptr inbounds i8, i8* %338, i64 8
  %344 = bitcast i8* %343 to double*
  store double 0.000000e+00, double* %344, align 1, !tbaa !2452
  %345 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %346 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %347 = load i64, i64* %PC
  %348 = add i64 %347, 9
  store i64 %348, i64* %PC
  %349 = bitcast i8* %346 to double*
  %350 = load double, double* %349, align 1
  %351 = getelementptr inbounds i8, i8* %346, i64 8
  %352 = bitcast i8* %351 to i64*
  %353 = load i64, i64* %352, align 1
  %354 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %355 = fdiv double %350, %354
  %356 = bitcast i8* %345 to double*
  store double %355, double* %356, align 1, !tbaa !2452
  %357 = getelementptr inbounds i8, i8* %345, i64 8
  %358 = bitcast i8* %357 to i64*
  store i64 %353, i64* %358, align 1, !tbaa !2452
  %359 = load i64, i64* %RBP
  %360 = sub i64 %359, 24
  %361 = bitcast %union.vec128_t* %XMM0 to i8*
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 5
  store i64 %363, i64* %PC
  %364 = bitcast i8* %361 to double*
  %365 = load double, double* %364, align 1
  %366 = inttoptr i64 %360 to double*
  store double %365, double* %366
  %367 = load i64, i64* %PC
  %368 = add i64 %367, 68
  %369 = load i64, i64* %PC
  %370 = add i64 %369, 5
  store i64 %370, i64* %PC
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %368, i64* %371, align 8, !tbaa !2428
  br label %block_40130f

block_401127:                                     ; preds = %block_401121
  %372 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %373 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %374 = bitcast %union.vec128_t* %XMM0 to i8*
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 3
  store i64 %376, i64* %PC
  %377 = bitcast i8* %373 to i64*
  %378 = load i64, i64* %377, align 1
  %379 = getelementptr inbounds i8, i8* %373, i64 8
  %380 = bitcast i8* %379 to i64*
  %381 = load i64, i64* %380, align 1
  %382 = bitcast i8* %374 to i64*
  %383 = load i64, i64* %382, align 1
  %384 = getelementptr inbounds i8, i8* %374, i64 8
  %385 = bitcast i8* %384 to i64*
  %386 = load i64, i64* %385, align 1
  %387 = xor i64 %383, %378
  %388 = xor i64 %386, %381
  %389 = trunc i64 %387 to i32
  %390 = lshr i64 %387, 32
  %391 = trunc i64 %390 to i32
  %392 = bitcast i8* %372 to i32*
  store i32 %389, i32* %392, align 1, !tbaa !2469
  %393 = getelementptr inbounds i8, i8* %372, i64 4
  %394 = bitcast i8* %393 to i32*
  store i32 %391, i32* %394, align 1, !tbaa !2469
  %395 = trunc i64 %388 to i32
  %396 = getelementptr inbounds i8, i8* %372, i64 8
  %397 = bitcast i8* %396 to i32*
  store i32 %395, i32* %397, align 1, !tbaa !2469
  %398 = lshr i64 %388, 32
  %399 = trunc i64 %398 to i32
  %400 = getelementptr inbounds i8, i8* %372, i64 12
  %401 = bitcast i8* %400 to i32*
  store i32 %399, i32* %401, align 1, !tbaa !2469
  %402 = bitcast %union.vec128_t* %XMM0 to i8*
  %403 = load i64, i64* %PC
  %404 = add i64 %403, 9
  store i64 %404, i64* %PC
  %405 = bitcast i8* %402 to double*
  %406 = load double, double* %405, align 1
  store double %406, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %407 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %408 = load i64, i64* %PC
  %409 = add i64 %408, 9
  store i64 %409, i64* %PC
  %410 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %411 = bitcast i8* %407 to double*
  store double %410, double* %411, align 1, !tbaa !2452
  %412 = getelementptr inbounds i8, i8* %407, i64 8
  %413 = bitcast i8* %412 to double*
  store double 0.000000e+00, double* %413, align 1, !tbaa !2452
  %414 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %415 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %416 = load i64, i64* %PC
  %417 = add i64 %416, 9
  store i64 %417, i64* %PC
  %418 = bitcast i8* %415 to double*
  %419 = load double, double* %418, align 1
  %420 = getelementptr inbounds i8, i8* %415, i64 8
  %421 = bitcast i8* %420 to i64*
  %422 = load i64, i64* %421, align 1
  %423 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %424 = fdiv double %419, %423
  %425 = bitcast i8* %414 to double*
  store double %424, double* %425, align 1, !tbaa !2452
  %426 = getelementptr inbounds i8, i8* %414, i64 8
  %427 = bitcast i8* %426 to i64*
  store i64 %422, i64* %427, align 1, !tbaa !2452
  %428 = load i64, i64* %RBP
  %429 = sub i64 %428, 24
  %430 = bitcast %union.vec128_t* %XMM0 to i8*
  %431 = load i64, i64* %PC
  %432 = add i64 %431, 5
  store i64 %432, i64* %PC
  %433 = bitcast i8* %430 to double*
  %434 = load double, double* %433, align 1
  %435 = inttoptr i64 %429 to double*
  store double %434, double* %435
  %436 = load i64, i64* %PC
  %437 = add i64 %436, 46
  %438 = load i64, i64* %PC
  %439 = add i64 %438, 5
  store i64 %439, i64* %PC
  %440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %437, i64* %440, align 8, !tbaa !2428
  br label %block_401178

block_4012a2:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478
  %441 = load i64, i64* %PC
  %442 = add i64 %441, 46
  %443 = load i64, i64* %PC
  %444 = add i64 %443, 6
  %445 = load i64, i64* %PC
  %446 = add i64 %445, 6
  store i64 %446, i64* %PC
  %447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %448 = load i8, i8* %447, align 1, !tbaa !2446
  store i8 %448, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %450 = icmp ne i8 %448, 0
  %451 = select i1 %450, i64 %442, i64 %444
  store i64 %451, i64* %449, align 8, !tbaa !2428
  %452 = load i8, i8* %BRANCH_TAKEN
  %453 = icmp eq i8 %452, 1
  br i1 %453, label %block_4012d0, label %block_4012a8

block_401178:                                     ; preds = %block_401127, %block_40114f
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.1, %block_40114f ], [ %2782, %block_401127 ]
  %454 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %455 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %456 = bitcast %union.vec128_t* %XMM0 to i8*
  %457 = load i64, i64* %PC
  %458 = add i64 %457, 3
  store i64 %458, i64* %PC
  %459 = bitcast i8* %455 to i64*
  %460 = load i64, i64* %459, align 1
  %461 = getelementptr inbounds i8, i8* %455, i64 8
  %462 = bitcast i8* %461 to i64*
  %463 = load i64, i64* %462, align 1
  %464 = bitcast i8* %456 to i64*
  %465 = load i64, i64* %464, align 1
  %466 = getelementptr inbounds i8, i8* %456, i64 8
  %467 = bitcast i8* %466 to i64*
  %468 = load i64, i64* %467, align 1
  %469 = xor i64 %465, %460
  %470 = xor i64 %468, %463
  %471 = trunc i64 %469 to i32
  %472 = lshr i64 %469, 32
  %473 = trunc i64 %472 to i32
  %474 = bitcast i8* %454 to i32*
  store i32 %471, i32* %474, align 1, !tbaa !2469
  %475 = getelementptr inbounds i8, i8* %454, i64 4
  %476 = bitcast i8* %475 to i32*
  store i32 %473, i32* %476, align 1, !tbaa !2469
  %477 = trunc i64 %470 to i32
  %478 = getelementptr inbounds i8, i8* %454, i64 8
  %479 = bitcast i8* %478 to i32*
  store i32 %477, i32* %479, align 1, !tbaa !2469
  %480 = lshr i64 %470, 32
  %481 = trunc i64 %480 to i32
  %482 = getelementptr inbounds i8, i8* %454, i64 12
  %483 = bitcast i8* %482 to i32*
  store i32 %481, i32* %483, align 1, !tbaa !2469
  %484 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %485 = load i64, i64* %PC
  %486 = add i64 %485, 9
  store i64 %486, i64* %PC
  %487 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %488 = bitcast i8* %484 to double*
  store double %487, double* %488, align 1, !tbaa !2452
  %489 = getelementptr inbounds i8, i8* %484, i64 8
  %490 = bitcast i8* %489 to double*
  store double 0.000000e+00, double* %490, align 1, !tbaa !2452
  %491 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %492 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %493 = load i64, i64* %PC
  %494 = add i64 %493, 9
  store i64 %494, i64* %PC
  %495 = bitcast i8* %492 to double*
  %496 = load double, double* %495, align 1
  %497 = getelementptr inbounds i8, i8* %492, i64 8
  %498 = bitcast i8* %497 to i64*
  %499 = load i64, i64* %498, align 1
  %500 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %501 = fdiv double %496, %500
  %502 = bitcast i8* %491 to double*
  store double %501, double* %502, align 1, !tbaa !2452
  %503 = getelementptr inbounds i8, i8* %491, i64 8
  %504 = bitcast i8* %503 to i64*
  store i64 %499, i64* %504, align 1, !tbaa !2452
  %505 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %506 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %507 = load i64, i64* %RBP
  %508 = sub i64 %507, 24
  %509 = load i64, i64* %PC
  %510 = add i64 %509, 5
  store i64 %510, i64* %PC
  %511 = bitcast i8* %506 to double*
  %512 = load double, double* %511, align 1
  %513 = getelementptr inbounds i8, i8* %506, i64 8
  %514 = bitcast i8* %513 to i64*
  %515 = load i64, i64* %514, align 1
  %516 = inttoptr i64 %508 to double*
  %517 = load double, double* %516
  %518 = fmul double %512, %517
  %519 = bitcast i8* %505 to double*
  store double %518, double* %519, align 1, !tbaa !2452
  %520 = getelementptr inbounds i8, i8* %505, i64 8
  %521 = bitcast i8* %520 to i64*
  store i64 %515, i64* %521, align 1, !tbaa !2452
  %522 = load i64, i64* %RBP
  %523 = sub i64 %522, 32
  %524 = bitcast %union.vec128_t* %XMM1 to i8*
  %525 = load i64, i64* %PC
  %526 = add i64 %525, 5
  store i64 %526, i64* %PC
  %527 = bitcast i8* %524 to double*
  %528 = load double, double* %527, align 1
  %529 = inttoptr i64 %523 to double*
  store double %528, double* %529
  %530 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %531 = load i64, i64* %PC
  %532 = add i64 %531, 9
  store i64 %532, i64* %PC
  %533 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %534 = bitcast i8* %530 to double*
  store double %533, double* %534, align 1, !tbaa !2452
  %535 = getelementptr inbounds i8, i8* %530, i64 8
  %536 = bitcast i8* %535 to double*
  store double 0.000000e+00, double* %536, align 1, !tbaa !2452
  %537 = load i64, i64* %RBP
  %538 = sub i64 %537, 40
  %539 = bitcast %union.vec128_t* %XMM1 to i8*
  %540 = load i64, i64* %PC
  %541 = add i64 %540, 5
  store i64 %541, i64* %PC
  %542 = bitcast i8* %539 to double*
  %543 = load double, double* %542, align 1
  %544 = inttoptr i64 %538 to double*
  store double %543, double* %544
  %545 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %546 = load i64, i64* %PC
  %547 = add i64 %546, 9
  store i64 %547, i64* %PC
  %548 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %549 = bitcast i8* %545 to double*
  store double %548, double* %549, align 1, !tbaa !2452
  %550 = getelementptr inbounds i8, i8* %545, i64 8
  %551 = bitcast i8* %550 to double*
  store double 0.000000e+00, double* %551, align 1, !tbaa !2452
  %552 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %553 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %554 = load i64, i64* %RBP
  %555 = sub i64 %554, 24
  %556 = load i64, i64* %PC
  %557 = add i64 %556, 5
  store i64 %557, i64* %PC
  %558 = bitcast i8* %553 to double*
  %559 = load double, double* %558, align 1
  %560 = getelementptr inbounds i8, i8* %553, i64 8
  %561 = bitcast i8* %560 to i64*
  %562 = load i64, i64* %561, align 1
  %563 = inttoptr i64 %555 to double*
  %564 = load double, double* %563
  %565 = fadd double %559, %564
  %566 = bitcast i8* %552 to double*
  store double %565, double* %566, align 1, !tbaa !2452
  %567 = getelementptr inbounds i8, i8* %552, i64 8
  %568 = bitcast i8* %567 to i64*
  store i64 %562, i64* %568, align 1, !tbaa !2452
  %569 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %570 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %571 = load i64, i64* %RBP
  %572 = sub i64 %571, 32
  %573 = load i64, i64* %PC
  %574 = add i64 %573, 5
  store i64 %574, i64* %PC
  %575 = bitcast i8* %570 to double*
  %576 = load double, double* %575, align 1
  %577 = getelementptr inbounds i8, i8* %570, i64 8
  %578 = bitcast i8* %577 to i64*
  %579 = load i64, i64* %578, align 1
  %580 = inttoptr i64 %572 to double*
  %581 = load double, double* %580
  %582 = fsub double %576, %581
  %583 = bitcast i8* %569 to double*
  store double %582, double* %583, align 1, !tbaa !2452
  %584 = getelementptr inbounds i8, i8* %569, i64 8
  %585 = bitcast i8* %584 to i64*
  store i64 %579, i64* %585, align 1, !tbaa !2452
  %586 = bitcast %union.vec128_t* %XMM1 to i8*
  %587 = load i64, i64* %PC
  %588 = add i64 %587, 9
  store i64 %588, i64* %PC
  %589 = bitcast i8* %586 to double*
  %590 = load double, double* %589, align 1
  store double %590, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %591 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %592 = load i64, i64* %PC
  %593 = add i64 %592, 9
  store i64 %593, i64* %PC
  %594 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %595 = bitcast i8* %591 to double*
  store double %594, double* %595, align 1, !tbaa !2452
  %596 = getelementptr inbounds i8, i8* %591, i64 8
  %597 = bitcast i8* %596 to double*
  store double 0.000000e+00, double* %597, align 1, !tbaa !2452
  %598 = bitcast %union.vec128_t* %XMM1 to i8*
  %599 = bitcast %union.vec128_t* %XMM0 to i8*
  %600 = load i64, i64* %PC
  %601 = add i64 %600, 4
  store i64 %601, i64* %PC
  %602 = bitcast i8* %598 to double*
  %603 = load double, double* %602, align 1
  %604 = bitcast i8* %599 to double*
  %605 = load double, double* %604, align 1
  %606 = fcmp uno double %603, %605
  br i1 %606, label %607, label %619

; <label>:607:                                    ; preds = %block_401178
  %608 = fadd double %603, %605
  %609 = bitcast double %608 to i64
  %610 = and i64 %609, 9221120237041090560
  %611 = icmp eq i64 %610, 9218868437227405312
  %612 = and i64 %609, 2251799813685247
  %613 = icmp ne i64 %612, 0
  %614 = and i1 %611, %613
  br i1 %614, label %615, label %625

; <label>:615:                                    ; preds = %607
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %617 = load i64, i64* %616, align 8, !tbaa !2428
  %618 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %617, %struct.Memory* %MEMORY.2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957

; <label>:619:                                    ; preds = %block_401178
  %620 = fcmp ogt double %603, %605
  br i1 %620, label %625, label %621

; <label>:621:                                    ; preds = %619
  %622 = fcmp olt double %603, %605
  br i1 %622, label %625, label %623

; <label>:623:                                    ; preds = %621
  %624 = fcmp oeq double %603, %605
  br i1 %624, label %625, label %632

; <label>:625:                                    ; preds = %623, %621, %619, %607
  %626 = phi i8 [ 0, %619 ], [ 0, %621 ], [ 1, %623 ], [ 1, %607 ]
  %627 = phi i8 [ 0, %619 ], [ 0, %621 ], [ 0, %623 ], [ 1, %607 ]
  %628 = phi i8 [ 0, %619 ], [ 1, %621 ], [ 0, %623 ], [ 1, %607 ]
  %629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %626, i8* %629, align 1, !tbaa !2451
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %627, i8* %630, align 1, !tbaa !2451
  %631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %628, i8* %631, align 1, !tbaa !2451
  br label %632

; <label>:632:                                    ; preds = %625, %623
  %633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %633, align 1, !tbaa !2451
  %634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %634, align 1, !tbaa !2451
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %635, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit957: ; preds = %615, %632
  %636 = phi %struct.Memory* [ %618, %615 ], [ %MEMORY.2, %632 ]
  %637 = load i64, i64* %PC
  %638 = add i64 %637, 17
  %639 = load i64, i64* %PC
  %640 = add i64 %639, 6
  %641 = load i64, i64* %PC
  %642 = add i64 %641, 6
  store i64 %642, i64* %PC
  %643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %644 = load i8, i8* %643, align 1, !tbaa !2448
  %645 = icmp eq i8 %644, 0
  %646 = zext i1 %645 to i8
  store i8 %646, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %648 = select i1 %645, i64 %638, i64 %640
  store i64 %648, i64* %647, align 8, !tbaa !2428
  %649 = load i8, i8* %BRANCH_TAKEN
  %650 = icmp eq i8 %649, 1
  br i1 %650, label %block_4011df, label %block_4011d4

block_401121:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %651 = load i64, i64* %PC
  %652 = add i64 %651, 46
  %653 = load i64, i64* %PC
  %654 = add i64 %653, 6
  %655 = load i64, i64* %PC
  %656 = add i64 %655, 6
  store i64 %656, i64* %PC
  %657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %658 = load i8, i8* %657, align 1, !tbaa !2446
  store i8 %658, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %660 = icmp ne i8 %658, 0
  %661 = select i1 %660, i64 %652, i64 %654
  store i64 %661, i64* %659, align 8, !tbaa !2428
  %662 = load i8, i8* %BRANCH_TAKEN
  %663 = icmp eq i8 %662, 1
  br i1 %663, label %block_40114f, label %block_401127

block_401525:                                     ; preds = %block_401106, %block_401287, %block_4011f6, %block_40130f
  %MEMORY.3 = phi %struct.Memory* [ %2517, %block_40130f ], [ %4537, %block_401287 ], [ %MEMORY.7, %block_4011f6 ], [ %184, %block_401106 ]
  %664 = load i64, i64* %RSP
  %665 = load i64, i64* %PC
  %666 = add i64 %665, 7
  store i64 %666, i64* %PC
  %667 = add i64 144, %664
  store i64 %667, i64* %RSP, align 8, !tbaa !2428
  %668 = icmp ult i64 %667, %664
  %669 = icmp ult i64 %667, 144
  %670 = or i1 %668, %669
  %671 = zext i1 %670 to i8
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %671, i8* %672, align 1, !tbaa !2432
  %673 = trunc i64 %667 to i32
  %674 = and i32 %673, 255
  %675 = call i32 @llvm.ctpop.i32(i32 %674) #17
  %676 = trunc i32 %675 to i8
  %677 = and i8 %676, 1
  %678 = xor i8 %677, 1
  %679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %678, i8* %679, align 1, !tbaa !2446
  %680 = xor i64 144, %664
  %681 = xor i64 %680, %667
  %682 = lshr i64 %681, 4
  %683 = trunc i64 %682 to i8
  %684 = and i8 %683, 1
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %684, i8* %685, align 1, !tbaa !2447
  %686 = icmp eq i64 %667, 0
  %687 = zext i1 %686 to i8
  %688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %687, i8* %688, align 1, !tbaa !2448
  %689 = lshr i64 %667, 63
  %690 = trunc i64 %689 to i8
  %691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %690, i8* %691, align 1, !tbaa !2449
  %692 = lshr i64 %664, 63
  %693 = xor i64 %689, %692
  %694 = add nuw nsw i64 %693, %689
  %695 = icmp eq i64 %694, 2
  %696 = zext i1 %695 to i8
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %696, i8* %697, align 1, !tbaa !2450
  %698 = load i64, i64* %PC
  %699 = add i64 %698, 1
  store i64 %699, i64* %PC
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %701 = load i64, i64* %700, align 8, !tbaa !2428
  %702 = add i64 %701, 8
  %703 = inttoptr i64 %701 to i64*
  %704 = load i64, i64* %703
  store i64 %704, i64* %RBP, align 8, !tbaa !2428
  store i64 %702, i64* %700, align 8, !tbaa !2428
  %705 = load i64, i64* %PC
  %706 = add i64 %705, 1
  store i64 %706, i64* %PC
  %707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %709 = load i64, i64* %708, align 8, !tbaa !2428
  %710 = inttoptr i64 %709 to i64*
  %711 = load i64, i64* %710
  store i64 %711, i64* %707, align 8, !tbaa !2428
  %712 = add i64 %709, 8
  store i64 %712, i64* %708, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.3

block_40130f:                                     ; preds = %block_4012d0, %block_4012a8
  %MEMORY.4 = phi %struct.Memory* [ %5330, %block_4012d0 ], [ %2692, %block_4012a8 ]
  %713 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %714 = load i64, i64* %RBP
  %715 = sub i64 %714, 24
  %716 = load i64, i64* %PC
  %717 = add i64 %716, 5
  store i64 %717, i64* %PC
  %718 = inttoptr i64 %715 to double*
  %719 = load double, double* %718
  %720 = bitcast i8* %713 to double*
  store double %719, double* %720, align 1, !tbaa !2452
  %721 = getelementptr inbounds i8, i8* %713, i64 8
  %722 = bitcast i8* %721 to double*
  store double 0.000000e+00, double* %722, align 1, !tbaa !2452
  %723 = load i64, i64* %PC
  %724 = sub i64 %723, 3364
  %725 = load i64, i64* %PC
  %726 = add i64 %725, 5
  %727 = load i64, i64* %PC
  %728 = add i64 %727, 5
  store i64 %728, i64* %PC
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %730 = load i64, i64* %729, align 8, !tbaa !2428
  %731 = add i64 %730, -8
  %732 = inttoptr i64 %731 to i64*
  store i64 %726, i64* %732
  store i64 %731, i64* %729, align 8, !tbaa !2428
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %724, i64* %733, align 8, !tbaa !2428
  %734 = load i64, i64* %PC
  %735 = call %struct.Memory* @ext_4005f0_asin(%struct.State* %0, i64 %734, %struct.Memory* %MEMORY.4)
  %736 = load i64, i64* %RBP
  %737 = sub i64 %736, 8
  %738 = bitcast %union.vec128_t* %XMM0 to i8*
  %739 = load i64, i64* %PC
  %740 = add i64 %739, 5
  store i64 %740, i64* %PC
  %741 = bitcast i8* %738 to double*
  %742 = load double, double* %741, align 1
  %743 = inttoptr i64 %737 to double*
  store double %742, double* %743
  %744 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %745 = load i64, i64* %PC
  %746 = add i64 %745, 9
  store i64 %746, i64* %PC
  %747 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %748 = bitcast i8* %744 to double*
  store double %747, double* %748, align 1, !tbaa !2452
  %749 = getelementptr inbounds i8, i8* %744, i64 8
  %750 = bitcast i8* %749 to double*
  store double 0.000000e+00, double* %750, align 1, !tbaa !2452
  %751 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %752 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %753 = load i64, i64* %PC
  %754 = add i64 %753, 9
  store i64 %754, i64* %PC
  %755 = bitcast i8* %752 to double*
  %756 = load double, double* %755, align 1
  %757 = getelementptr inbounds i8, i8* %752, i64 8
  %758 = bitcast i8* %757 to i64*
  %759 = load i64, i64* %758, align 1
  %760 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %761 = fdiv double %756, %760
  %762 = bitcast i8* %751 to double*
  store double %761, double* %762, align 1, !tbaa !2452
  %763 = getelementptr inbounds i8, i8* %751, i64 8
  %764 = bitcast i8* %763 to i64*
  store i64 %759, i64* %764, align 1, !tbaa !2452
  %765 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %766 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %767 = load i64, i64* %RBP
  %768 = sub i64 %767, 24
  %769 = load i64, i64* %PC
  %770 = add i64 %769, 5
  store i64 %770, i64* %PC
  %771 = bitcast i8* %766 to double*
  %772 = load double, double* %771, align 1
  %773 = getelementptr inbounds i8, i8* %766, i64 8
  %774 = bitcast i8* %773 to i64*
  %775 = load i64, i64* %774, align 1
  %776 = inttoptr i64 %768 to double*
  %777 = load double, double* %776
  %778 = fmul double %772, %777
  %779 = bitcast i8* %765 to double*
  store double %778, double* %779, align 1, !tbaa !2452
  %780 = getelementptr inbounds i8, i8* %765, i64 8
  %781 = bitcast i8* %780 to i64*
  store i64 %775, i64* %781, align 1, !tbaa !2452
  %782 = load i64, i64* %RBP
  %783 = sub i64 %782, 32
  %784 = bitcast %union.vec128_t* %XMM0 to i8*
  %785 = load i64, i64* %PC
  %786 = add i64 %785, 5
  store i64 %786, i64* %PC
  %787 = bitcast i8* %784 to double*
  %788 = load double, double* %787, align 1
  %789 = inttoptr i64 %783 to double*
  store double %788, double* %789
  %790 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %791 = load i64, i64* %PC
  %792 = add i64 %791, 9
  store i64 %792, i64* %PC
  %793 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %794 = bitcast i8* %790 to double*
  store double %793, double* %794, align 1, !tbaa !2452
  %795 = getelementptr inbounds i8, i8* %790, i64 8
  %796 = bitcast i8* %795 to double*
  store double 0.000000e+00, double* %796, align 1, !tbaa !2452
  %797 = load i64, i64* %RBP
  %798 = sub i64 %797, 40
  %799 = bitcast %union.vec128_t* %XMM0 to i8*
  %800 = load i64, i64* %PC
  %801 = add i64 %800, 5
  store i64 %801, i64* %PC
  %802 = bitcast i8* %799 to double*
  %803 = load double, double* %802, align 1
  %804 = inttoptr i64 %798 to double*
  store double %803, double* %804
  %805 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %806 = load i64, i64* %PC
  %807 = add i64 %806, 9
  store i64 %807, i64* %PC
  %808 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %809 = bitcast i8* %805 to double*
  store double %808, double* %809, align 1, !tbaa !2452
  %810 = getelementptr inbounds i8, i8* %805, i64 8
  %811 = bitcast i8* %810 to double*
  store double 0.000000e+00, double* %811, align 1, !tbaa !2452
  %812 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %813 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %814 = load i64, i64* %RBP
  %815 = sub i64 %814, 8
  %816 = load i64, i64* %PC
  %817 = add i64 %816, 5
  store i64 %817, i64* %PC
  %818 = bitcast i8* %813 to double*
  %819 = load double, double* %818, align 1
  %820 = getelementptr inbounds i8, i8* %813, i64 8
  %821 = bitcast i8* %820 to i64*
  %822 = load i64, i64* %821, align 1
  %823 = inttoptr i64 %815 to double*
  %824 = load double, double* %823
  %825 = fadd double %819, %824
  %826 = bitcast i8* %812 to double*
  store double %825, double* %826, align 1, !tbaa !2452
  %827 = getelementptr inbounds i8, i8* %812, i64 8
  %828 = bitcast i8* %827 to i64*
  store i64 %822, i64* %828, align 1, !tbaa !2452
  %829 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %830 = load i64, i64* %RBP
  %831 = sub i64 %830, 32
  %832 = load i64, i64* %PC
  %833 = add i64 %832, 5
  store i64 %833, i64* %PC
  %834 = inttoptr i64 %831 to double*
  %835 = load double, double* %834
  %836 = bitcast i8* %829 to double*
  store double %835, double* %836, align 1, !tbaa !2452
  %837 = getelementptr inbounds i8, i8* %829, i64 8
  %838 = bitcast i8* %837 to double*
  store double 0.000000e+00, double* %838, align 1, !tbaa !2452
  %839 = load i64, i64* %RBP
  %840 = sub i64 %839, 64
  %841 = bitcast %union.vec128_t* %XMM0 to i8*
  %842 = load i64, i64* %PC
  %843 = add i64 %842, 5
  store i64 %843, i64* %PC
  %844 = bitcast i8* %841 to double*
  %845 = load double, double* %844, align 1
  %846 = inttoptr i64 %840 to double*
  store double %845, double* %846
  %847 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %848 = bitcast %union.vec128_t* %XMM1 to i8*
  %849 = load i64, i64* %PC
  %850 = add i64 %849, 3
  store i64 %850, i64* %PC
  %851 = bitcast i8* %848 to <2 x i32>*
  %852 = load <2 x i32>, <2 x i32>* %851, align 1
  %853 = getelementptr inbounds i8, i8* %848, i64 8
  %854 = bitcast i8* %853 to <2 x i32>*
  %855 = load <2 x i32>, <2 x i32>* %854, align 1
  %856 = extractelement <2 x i32> %852, i32 0
  %857 = bitcast i8* %847 to i32*
  store i32 %856, i32* %857, align 1, !tbaa !2454
  %858 = extractelement <2 x i32> %852, i32 1
  %859 = getelementptr inbounds i8, i8* %847, i64 4
  %860 = bitcast i8* %859 to i32*
  store i32 %858, i32* %860, align 1, !tbaa !2454
  %861 = extractelement <2 x i32> %855, i32 0
  %862 = getelementptr inbounds i8, i8* %847, i64 8
  %863 = bitcast i8* %862 to i32*
  store i32 %861, i32* %863, align 1, !tbaa !2454
  %864 = extractelement <2 x i32> %855, i32 1
  %865 = getelementptr inbounds i8, i8* %847, i64 12
  %866 = bitcast i8* %865 to i32*
  store i32 %864, i32* %866, align 1, !tbaa !2454
  %867 = load i64, i64* %PC
  %868 = sub i64 %867, 3443
  %869 = load i64, i64* %PC
  %870 = add i64 %869, 5
  %871 = load i64, i64* %PC
  %872 = add i64 %871, 5
  store i64 %872, i64* %PC
  %873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %874 = load i64, i64* %873, align 8, !tbaa !2428
  %875 = add i64 %874, -8
  %876 = inttoptr i64 %875 to i64*
  store i64 %870, i64* %876
  store i64 %875, i64* %873, align 8, !tbaa !2428
  %877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %868, i64* %877, align 8, !tbaa !2428
  %878 = load i64, i64* %PC
  %879 = call %struct.Memory* @ext_4005f0_asin(%struct.State* %0, i64 %878, %struct.Memory* %735)
  %880 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %881 = load i64, i64* %PC
  %882 = add i64 %881, 8
  store i64 %882, i64* %PC
  %883 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 112) to double*)
  %884 = bitcast i8* %880 to double*
  store double %883, double* %884, align 1, !tbaa !2452
  %885 = getelementptr inbounds i8, i8* %880, i64 8
  %886 = bitcast i8* %885 to double*
  store double 0.000000e+00, double* %886, align 1, !tbaa !2452
  %887 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %888 = load i64, i64* %RBP
  %889 = sub i64 %888, 64
  %890 = load i64, i64* %PC
  %891 = add i64 %890, 5
  store i64 %891, i64* %PC
  %892 = inttoptr i64 %889 to double*
  %893 = load double, double* %892
  %894 = bitcast i8* %887 to double*
  store double %893, double* %894, align 1, !tbaa !2452
  %895 = getelementptr inbounds i8, i8* %887, i64 8
  %896 = bitcast i8* %895 to double*
  store double 0.000000e+00, double* %896, align 1, !tbaa !2452
  %897 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %898 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %899 = bitcast %union.vec128_t* %XMM0 to i8*
  %900 = load i64, i64* %PC
  %901 = add i64 %900, 4
  store i64 %901, i64* %PC
  %902 = bitcast i8* %898 to double*
  %903 = load double, double* %902, align 1
  %904 = getelementptr inbounds i8, i8* %898, i64 8
  %905 = bitcast i8* %904 to i64*
  %906 = load i64, i64* %905, align 1
  %907 = bitcast i8* %899 to double*
  %908 = load double, double* %907, align 1
  %909 = fsub double %903, %908
  %910 = bitcast i8* %897 to double*
  store double %909, double* %910, align 1, !tbaa !2452
  %911 = getelementptr inbounds i8, i8* %897, i64 8
  %912 = bitcast i8* %911 to i64*
  store i64 %906, i64* %912, align 1, !tbaa !2452
  %913 = bitcast %union.vec128_t* %XMM2 to i8*
  %914 = load i64, i64* %PC
  %915 = add i64 %914, 9
  store i64 %915, i64* %PC
  %916 = bitcast i8* %913 to double*
  %917 = load double, double* %916, align 1
  store double %917, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %918 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %919 = load i64, i64* %RBP
  %920 = sub i64 %919, 40
  %921 = load i64, i64* %PC
  %922 = add i64 %921, 5
  store i64 %922, i64* %PC
  %923 = inttoptr i64 %920 to double*
  %924 = load double, double* %923
  %925 = bitcast i8* %918 to double*
  store double %924, double* %925, align 1, !tbaa !2452
  %926 = getelementptr inbounds i8, i8* %918, i64 8
  %927 = bitcast i8* %926 to double*
  store double 0.000000e+00, double* %927, align 1, !tbaa !2452
  %928 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %929 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %930 = load i64, i64* %RBP
  %931 = sub i64 %930, 8
  %932 = load i64, i64* %PC
  %933 = add i64 %932, 5
  store i64 %933, i64* %PC
  %934 = bitcast i8* %929 to double*
  %935 = load double, double* %934, align 1
  %936 = getelementptr inbounds i8, i8* %929, i64 8
  %937 = bitcast i8* %936 to i64*
  %938 = load i64, i64* %937, align 1
  %939 = inttoptr i64 %931 to double*
  %940 = load double, double* %939
  %941 = fadd double %935, %940
  %942 = bitcast i8* %928 to double*
  store double %941, double* %942, align 1, !tbaa !2452
  %943 = getelementptr inbounds i8, i8* %928, i64 8
  %944 = bitcast i8* %943 to i64*
  store i64 %938, i64* %944, align 1, !tbaa !2452
  %945 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %946 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %947 = bitcast %union.vec128_t* %XMM1 to i8*
  %948 = load i64, i64* %PC
  %949 = add i64 %948, 4
  store i64 %949, i64* %PC
  %950 = bitcast i8* %946 to double*
  %951 = load double, double* %950, align 1
  %952 = getelementptr inbounds i8, i8* %946, i64 8
  %953 = bitcast i8* %952 to i64*
  %954 = load i64, i64* %953, align 1
  %955 = bitcast i8* %947 to double*
  %956 = load double, double* %955, align 1
  %957 = fdiv double %951, %956
  %958 = bitcast i8* %945 to double*
  store double %957, double* %958, align 1, !tbaa !2452
  %959 = getelementptr inbounds i8, i8* %945, i64 8
  %960 = bitcast i8* %959 to i64*
  store i64 %954, i64* %960, align 1, !tbaa !2452
  %961 = load i64, i64* %RBP
  %962 = sub i64 %961, 72
  %963 = bitcast %union.vec128_t* %XMM1 to i8*
  %964 = load i64, i64* %PC
  %965 = add i64 %964, 5
  store i64 %965, i64* %PC
  %966 = bitcast i8* %963 to double*
  %967 = load double, double* %966, align 1
  %968 = inttoptr i64 %962 to double*
  store double %967, double* %968
  %969 = load i64, i64* %PC
  %970 = sub i64 %969, 3509
  %971 = load i64, i64* %PC
  %972 = add i64 %971, 5
  %973 = load i64, i64* %PC
  %974 = add i64 %973, 5
  store i64 %974, i64* %PC
  %975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %976 = load i64, i64* %975, align 8, !tbaa !2428
  %977 = add i64 %976, -8
  %978 = inttoptr i64 %977 to i64*
  store i64 %972, i64* %978
  store i64 %977, i64* %975, align 8, !tbaa !2428
  %979 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %970, i64* %979, align 8, !tbaa !2428
  %980 = load i64, i64* %PC
  %981 = bitcast %struct.State** %state.i798 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %981)
  %982 = bitcast i64* %curr_pc.i799 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %982)
  %983 = bitcast %struct.Memory** %memory.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %983)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i801)
  %984 = bitcast i64* %SS_BASE.i802 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %984)
  %985 = bitcast i64* %ES_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %985)
  %986 = bitcast i64* %DS_BASE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %986)
  %987 = bitcast i64* %CS_BASE.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %987)
  %988 = bitcast %struct.State** %STATE.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %988)
  %989 = bitcast %struct.Memory** %MEMORY.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %989)
  %990 = bitcast i64** %_DR0.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %990)
  %991 = bitcast i64** %_DR1.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %991)
  %992 = bitcast i64** %_DR2.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %992)
  %993 = bitcast i64** %_DR3.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %993)
  %994 = bitcast i64** %_DR4.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %994)
  %995 = bitcast i64** %_DR5.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %995)
  %996 = bitcast i64** %_DR6.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %996)
  %997 = bitcast i64** %_DR7.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %997)
  %998 = bitcast i64** %CR0.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %998)
  %999 = bitcast i64** %CR1.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %999)
  %1000 = bitcast i64** %CR2.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1000)
  %1001 = bitcast i64** %CR3.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1001)
  %1002 = bitcast i64** %CR4.i820 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1002)
  %1003 = bitcast i64** %CR8.i821 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1003)
  store %struct.State* %0, %struct.State** %state.i798, align 8, !noalias !2470
  store i64 %980, i64* %curr_pc.i799, align 8, !noalias !2470
  store %struct.Memory* %879, %struct.Memory** %memory.i800, align 8, !noalias !2470
  store i8 0, i8* %BRANCH_TAKEN.i801, align 1, !noalias !2470
  store i64 0, i64* %SS_BASE.i802, align 8, !noalias !2470
  store i64 0, i64* %ES_BASE.i803, align 8, !noalias !2470
  store i64 0, i64* %DS_BASE.i804, align 8, !noalias !2470
  store i64 0, i64* %CS_BASE.i805, align 8, !noalias !2470
  store %struct.State* %0, %struct.State** %STATE.i806, align 8, !noalias !2470
  store %struct.Memory* %879, %struct.Memory** %MEMORY.i807, align 8, !noalias !2470
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 33
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %PC.i822 = bitcast %union.anon* %1006 to i64*
  store i64 %980, i64* %PC.i822, align 8, !alias.scope !2474, !noalias !2475
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 1
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %1010 = bitcast %union.anon* %1009 to %struct.anon.2*
  %AH.i823 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1010, i32 0, i32 1
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1012 = getelementptr inbounds %struct.GPR, %struct.GPR* %1011, i32 0, i32 3
  %1013 = getelementptr inbounds %struct.Reg, %struct.Reg* %1012, i32 0, i32 0
  %1014 = bitcast %union.anon* %1013 to %struct.anon.2*
  %BH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1014, i32 0, i32 1
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1016 = getelementptr inbounds %struct.GPR, %struct.GPR* %1015, i32 0, i32 5
  %1017 = getelementptr inbounds %struct.Reg, %struct.Reg* %1016, i32 0, i32 0
  %1018 = bitcast %union.anon* %1017 to %struct.anon.2*
  %CH.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1018, i32 0, i32 1
  %1019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1020 = getelementptr inbounds %struct.GPR, %struct.GPR* %1019, i32 0, i32 7
  %1021 = getelementptr inbounds %struct.Reg, %struct.Reg* %1020, i32 0, i32 0
  %1022 = bitcast %union.anon* %1021 to %struct.anon.2*
  %DH.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1022, i32 0, i32 1
  %1023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1024 = getelementptr inbounds %struct.GPR, %struct.GPR* %1023, i32 0, i32 1
  %1025 = getelementptr inbounds %struct.Reg, %struct.Reg* %1024, i32 0, i32 0
  %1026 = bitcast %union.anon* %1025 to %struct.anon.2*
  %AL.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1026, i32 0, i32 0
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1028 = getelementptr inbounds %struct.GPR, %struct.GPR* %1027, i32 0, i32 3
  %1029 = getelementptr inbounds %struct.Reg, %struct.Reg* %1028, i32 0, i32 0
  %1030 = bitcast %union.anon* %1029 to %struct.anon.2*
  %BL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1030, i32 0, i32 0
  %1031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1032 = getelementptr inbounds %struct.GPR, %struct.GPR* %1031, i32 0, i32 5
  %1033 = getelementptr inbounds %struct.Reg, %struct.Reg* %1032, i32 0, i32 0
  %1034 = bitcast %union.anon* %1033 to %struct.anon.2*
  %CL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1034, i32 0, i32 0
  %1035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1036 = getelementptr inbounds %struct.GPR, %struct.GPR* %1035, i32 0, i32 7
  %1037 = getelementptr inbounds %struct.Reg, %struct.Reg* %1036, i32 0, i32 0
  %1038 = bitcast %union.anon* %1037 to %struct.anon.2*
  %DL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1038, i32 0, i32 0
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1040 = getelementptr inbounds %struct.GPR, %struct.GPR* %1039, i32 0, i32 9
  %1041 = getelementptr inbounds %struct.Reg, %struct.Reg* %1040, i32 0, i32 0
  %1042 = bitcast %union.anon* %1041 to %struct.anon.2*
  %SIL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1042, i32 0, i32 0
  %1043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1044 = getelementptr inbounds %struct.GPR, %struct.GPR* %1043, i32 0, i32 11
  %1045 = getelementptr inbounds %struct.Reg, %struct.Reg* %1044, i32 0, i32 0
  %1046 = bitcast %union.anon* %1045 to %struct.anon.2*
  %DIL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1046, i32 0, i32 0
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1048 = getelementptr inbounds %struct.GPR, %struct.GPR* %1047, i32 0, i32 13
  %1049 = getelementptr inbounds %struct.Reg, %struct.Reg* %1048, i32 0, i32 0
  %1050 = bitcast %union.anon* %1049 to %struct.anon.2*
  %SPL.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1050, i32 0, i32 0
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 15
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %1054 = bitcast %union.anon* %1053 to %struct.anon.2*
  %BPL.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1054, i32 0, i32 0
  %1055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1056 = getelementptr inbounds %struct.GPR, %struct.GPR* %1055, i32 0, i32 17
  %1057 = getelementptr inbounds %struct.Reg, %struct.Reg* %1056, i32 0, i32 0
  %1058 = bitcast %union.anon* %1057 to %struct.anon.2*
  %R8B.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1058, i32 0, i32 0
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1060 = getelementptr inbounds %struct.GPR, %struct.GPR* %1059, i32 0, i32 19
  %1061 = getelementptr inbounds %struct.Reg, %struct.Reg* %1060, i32 0, i32 0
  %1062 = bitcast %union.anon* %1061 to %struct.anon.2*
  %R9B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1062, i32 0, i32 0
  %1063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1064 = getelementptr inbounds %struct.GPR, %struct.GPR* %1063, i32 0, i32 21
  %1065 = getelementptr inbounds %struct.Reg, %struct.Reg* %1064, i32 0, i32 0
  %1066 = bitcast %union.anon* %1065 to %struct.anon.2*
  %R10B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1066, i32 0, i32 0
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1068 = getelementptr inbounds %struct.GPR, %struct.GPR* %1067, i32 0, i32 23
  %1069 = getelementptr inbounds %struct.Reg, %struct.Reg* %1068, i32 0, i32 0
  %1070 = bitcast %union.anon* %1069 to %struct.anon.2*
  %R11B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1070, i32 0, i32 0
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1072 = getelementptr inbounds %struct.GPR, %struct.GPR* %1071, i32 0, i32 25
  %1073 = getelementptr inbounds %struct.Reg, %struct.Reg* %1072, i32 0, i32 0
  %1074 = bitcast %union.anon* %1073 to %struct.anon.2*
  %R12B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1074, i32 0, i32 0
  %1075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1076 = getelementptr inbounds %struct.GPR, %struct.GPR* %1075, i32 0, i32 27
  %1077 = getelementptr inbounds %struct.Reg, %struct.Reg* %1076, i32 0, i32 0
  %1078 = bitcast %union.anon* %1077 to %struct.anon.2*
  %R13B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1078, i32 0, i32 0
  %1079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1080 = getelementptr inbounds %struct.GPR, %struct.GPR* %1079, i32 0, i32 29
  %1081 = getelementptr inbounds %struct.Reg, %struct.Reg* %1080, i32 0, i32 0
  %1082 = bitcast %union.anon* %1081 to %struct.anon.2*
  %R14B.i841 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1082, i32 0, i32 0
  %1083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1084 = getelementptr inbounds %struct.GPR, %struct.GPR* %1083, i32 0, i32 31
  %1085 = getelementptr inbounds %struct.Reg, %struct.Reg* %1084, i32 0, i32 0
  %1086 = bitcast %union.anon* %1085 to %struct.anon.2*
  %R15B.i842 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1086, i32 0, i32 0
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1088 = getelementptr inbounds %struct.GPR, %struct.GPR* %1087, i32 0, i32 1
  %1089 = getelementptr inbounds %struct.Reg, %struct.Reg* %1088, i32 0, i32 0
  %AX.i843 = bitcast %union.anon* %1089 to i16*
  %1090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1091 = getelementptr inbounds %struct.GPR, %struct.GPR* %1090, i32 0, i32 3
  %1092 = getelementptr inbounds %struct.Reg, %struct.Reg* %1091, i32 0, i32 0
  %BX.i844 = bitcast %union.anon* %1092 to i16*
  %1093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1094 = getelementptr inbounds %struct.GPR, %struct.GPR* %1093, i32 0, i32 5
  %1095 = getelementptr inbounds %struct.Reg, %struct.Reg* %1094, i32 0, i32 0
  %CX.i845 = bitcast %union.anon* %1095 to i16*
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 7
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %DX.i846 = bitcast %union.anon* %1098 to i16*
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 9
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %SI.i847 = bitcast %union.anon* %1101 to i16*
  %1102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1103 = getelementptr inbounds %struct.GPR, %struct.GPR* %1102, i32 0, i32 11
  %1104 = getelementptr inbounds %struct.Reg, %struct.Reg* %1103, i32 0, i32 0
  %DI.i848 = bitcast %union.anon* %1104 to i16*
  %1105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1106 = getelementptr inbounds %struct.GPR, %struct.GPR* %1105, i32 0, i32 13
  %1107 = getelementptr inbounds %struct.Reg, %struct.Reg* %1106, i32 0, i32 0
  %SP.i849 = bitcast %union.anon* %1107 to i16*
  %1108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1109 = getelementptr inbounds %struct.GPR, %struct.GPR* %1108, i32 0, i32 15
  %1110 = getelementptr inbounds %struct.Reg, %struct.Reg* %1109, i32 0, i32 0
  %BP.i850 = bitcast %union.anon* %1110 to i16*
  %1111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1112 = getelementptr inbounds %struct.GPR, %struct.GPR* %1111, i32 0, i32 17
  %1113 = getelementptr inbounds %struct.Reg, %struct.Reg* %1112, i32 0, i32 0
  %R8W.i851 = bitcast %union.anon* %1113 to i16*
  %1114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1115 = getelementptr inbounds %struct.GPR, %struct.GPR* %1114, i32 0, i32 19
  %1116 = getelementptr inbounds %struct.Reg, %struct.Reg* %1115, i32 0, i32 0
  %R9W.i852 = bitcast %union.anon* %1116 to i16*
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1118 = getelementptr inbounds %struct.GPR, %struct.GPR* %1117, i32 0, i32 21
  %1119 = getelementptr inbounds %struct.Reg, %struct.Reg* %1118, i32 0, i32 0
  %R10W.i853 = bitcast %union.anon* %1119 to i16*
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1121 = getelementptr inbounds %struct.GPR, %struct.GPR* %1120, i32 0, i32 23
  %1122 = getelementptr inbounds %struct.Reg, %struct.Reg* %1121, i32 0, i32 0
  %R11W.i854 = bitcast %union.anon* %1122 to i16*
  %1123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1124 = getelementptr inbounds %struct.GPR, %struct.GPR* %1123, i32 0, i32 25
  %1125 = getelementptr inbounds %struct.Reg, %struct.Reg* %1124, i32 0, i32 0
  %R12W.i855 = bitcast %union.anon* %1125 to i16*
  %1126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1127 = getelementptr inbounds %struct.GPR, %struct.GPR* %1126, i32 0, i32 27
  %1128 = getelementptr inbounds %struct.Reg, %struct.Reg* %1127, i32 0, i32 0
  %R13W.i856 = bitcast %union.anon* %1128 to i16*
  %1129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1130 = getelementptr inbounds %struct.GPR, %struct.GPR* %1129, i32 0, i32 29
  %1131 = getelementptr inbounds %struct.Reg, %struct.Reg* %1130, i32 0, i32 0
  %R14W.i857 = bitcast %union.anon* %1131 to i16*
  %1132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1133 = getelementptr inbounds %struct.GPR, %struct.GPR* %1132, i32 0, i32 31
  %1134 = getelementptr inbounds %struct.Reg, %struct.Reg* %1133, i32 0, i32 0
  %R15W.i858 = bitcast %union.anon* %1134 to i16*
  %1135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1136 = getelementptr inbounds %struct.GPR, %struct.GPR* %1135, i32 0, i32 33
  %1137 = getelementptr inbounds %struct.Reg, %struct.Reg* %1136, i32 0, i32 0
  %IP.i859 = bitcast %union.anon* %1137 to i16*
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 1
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %EAX.i860 = bitcast %union.anon* %1140 to i32*
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1142 = getelementptr inbounds %struct.GPR, %struct.GPR* %1141, i32 0, i32 3
  %1143 = getelementptr inbounds %struct.Reg, %struct.Reg* %1142, i32 0, i32 0
  %EBX.i861 = bitcast %union.anon* %1143 to i32*
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 5
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %ECX.i862 = bitcast %union.anon* %1146 to i32*
  %1147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1148 = getelementptr inbounds %struct.GPR, %struct.GPR* %1147, i32 0, i32 7
  %1149 = getelementptr inbounds %struct.Reg, %struct.Reg* %1148, i32 0, i32 0
  %EDX.i863 = bitcast %union.anon* %1149 to i32*
  %1150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1151 = getelementptr inbounds %struct.GPR, %struct.GPR* %1150, i32 0, i32 9
  %1152 = getelementptr inbounds %struct.Reg, %struct.Reg* %1151, i32 0, i32 0
  %ESI.i864 = bitcast %union.anon* %1152 to i32*
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 11
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %EDI.i865 = bitcast %union.anon* %1155 to i32*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 13
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %ESP.i866 = bitcast %union.anon* %1158 to i32*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 15
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %EBP.i867 = bitcast %union.anon* %1161 to i32*
  %1162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1163 = getelementptr inbounds %struct.GPR, %struct.GPR* %1162, i32 0, i32 33
  %1164 = getelementptr inbounds %struct.Reg, %struct.Reg* %1163, i32 0, i32 0
  %EIP.i868 = bitcast %union.anon* %1164 to i32*
  %1165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1166 = getelementptr inbounds %struct.GPR, %struct.GPR* %1165, i32 0, i32 17
  %1167 = getelementptr inbounds %struct.Reg, %struct.Reg* %1166, i32 0, i32 0
  %R8D.i869 = bitcast %union.anon* %1167 to i32*
  %1168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1169 = getelementptr inbounds %struct.GPR, %struct.GPR* %1168, i32 0, i32 19
  %1170 = getelementptr inbounds %struct.Reg, %struct.Reg* %1169, i32 0, i32 0
  %R9D.i870 = bitcast %union.anon* %1170 to i32*
  %1171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1172 = getelementptr inbounds %struct.GPR, %struct.GPR* %1171, i32 0, i32 21
  %1173 = getelementptr inbounds %struct.Reg, %struct.Reg* %1172, i32 0, i32 0
  %R10D.i871 = bitcast %union.anon* %1173 to i32*
  %1174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1175 = getelementptr inbounds %struct.GPR, %struct.GPR* %1174, i32 0, i32 23
  %1176 = getelementptr inbounds %struct.Reg, %struct.Reg* %1175, i32 0, i32 0
  %R11D.i872 = bitcast %union.anon* %1176 to i32*
  %1177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1178 = getelementptr inbounds %struct.GPR, %struct.GPR* %1177, i32 0, i32 25
  %1179 = getelementptr inbounds %struct.Reg, %struct.Reg* %1178, i32 0, i32 0
  %R12D.i873 = bitcast %union.anon* %1179 to i32*
  %1180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1181 = getelementptr inbounds %struct.GPR, %struct.GPR* %1180, i32 0, i32 27
  %1182 = getelementptr inbounds %struct.Reg, %struct.Reg* %1181, i32 0, i32 0
  %R13D.i874 = bitcast %union.anon* %1182 to i32*
  %1183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1184 = getelementptr inbounds %struct.GPR, %struct.GPR* %1183, i32 0, i32 29
  %1185 = getelementptr inbounds %struct.Reg, %struct.Reg* %1184, i32 0, i32 0
  %R14D.i875 = bitcast %union.anon* %1185 to i32*
  %1186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1187 = getelementptr inbounds %struct.GPR, %struct.GPR* %1186, i32 0, i32 31
  %1188 = getelementptr inbounds %struct.Reg, %struct.Reg* %1187, i32 0, i32 0
  %R15D.i876 = bitcast %union.anon* %1188 to i32*
  %1189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1190 = getelementptr inbounds %struct.GPR, %struct.GPR* %1189, i32 0, i32 1
  %1191 = getelementptr inbounds %struct.Reg, %struct.Reg* %1190, i32 0, i32 0
  %RAX.i877 = bitcast %union.anon* %1191 to i64*
  %1192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1193 = getelementptr inbounds %struct.GPR, %struct.GPR* %1192, i32 0, i32 3
  %1194 = getelementptr inbounds %struct.Reg, %struct.Reg* %1193, i32 0, i32 0
  %RBX.i878 = bitcast %union.anon* %1194 to i64*
  %1195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1196 = getelementptr inbounds %struct.GPR, %struct.GPR* %1195, i32 0, i32 5
  %1197 = getelementptr inbounds %struct.Reg, %struct.Reg* %1196, i32 0, i32 0
  %RCX.i879 = bitcast %union.anon* %1197 to i64*
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1199 = getelementptr inbounds %struct.GPR, %struct.GPR* %1198, i32 0, i32 7
  %1200 = getelementptr inbounds %struct.Reg, %struct.Reg* %1199, i32 0, i32 0
  %RDX.i880 = bitcast %union.anon* %1200 to i64*
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1202 = getelementptr inbounds %struct.GPR, %struct.GPR* %1201, i32 0, i32 9
  %1203 = getelementptr inbounds %struct.Reg, %struct.Reg* %1202, i32 0, i32 0
  %RSI.i881 = bitcast %union.anon* %1203 to i64*
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1205 = getelementptr inbounds %struct.GPR, %struct.GPR* %1204, i32 0, i32 11
  %1206 = getelementptr inbounds %struct.Reg, %struct.Reg* %1205, i32 0, i32 0
  %RDI.i882 = bitcast %union.anon* %1206 to i64*
  %1207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1208 = getelementptr inbounds %struct.GPR, %struct.GPR* %1207, i32 0, i32 13
  %1209 = getelementptr inbounds %struct.Reg, %struct.Reg* %1208, i32 0, i32 0
  %RSP.i883 = bitcast %union.anon* %1209 to i64*
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1211 = getelementptr inbounds %struct.GPR, %struct.GPR* %1210, i32 0, i32 15
  %1212 = getelementptr inbounds %struct.Reg, %struct.Reg* %1211, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %1212 to i64*
  %1213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1214 = getelementptr inbounds %struct.GPR, %struct.GPR* %1213, i32 0, i32 17
  %1215 = getelementptr inbounds %struct.Reg, %struct.Reg* %1214, i32 0, i32 0
  %R8.i885 = bitcast %union.anon* %1215 to i64*
  %1216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1217 = getelementptr inbounds %struct.GPR, %struct.GPR* %1216, i32 0, i32 19
  %1218 = getelementptr inbounds %struct.Reg, %struct.Reg* %1217, i32 0, i32 0
  %R9.i886 = bitcast %union.anon* %1218 to i64*
  %1219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1220 = getelementptr inbounds %struct.GPR, %struct.GPR* %1219, i32 0, i32 21
  %1221 = getelementptr inbounds %struct.Reg, %struct.Reg* %1220, i32 0, i32 0
  %R10.i887 = bitcast %union.anon* %1221 to i64*
  %1222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1223 = getelementptr inbounds %struct.GPR, %struct.GPR* %1222, i32 0, i32 23
  %1224 = getelementptr inbounds %struct.Reg, %struct.Reg* %1223, i32 0, i32 0
  %R11.i888 = bitcast %union.anon* %1224 to i64*
  %1225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1226 = getelementptr inbounds %struct.GPR, %struct.GPR* %1225, i32 0, i32 25
  %1227 = getelementptr inbounds %struct.Reg, %struct.Reg* %1226, i32 0, i32 0
  %R12.i889 = bitcast %union.anon* %1227 to i64*
  %1228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1229 = getelementptr inbounds %struct.GPR, %struct.GPR* %1228, i32 0, i32 27
  %1230 = getelementptr inbounds %struct.Reg, %struct.Reg* %1229, i32 0, i32 0
  %R13.i890 = bitcast %union.anon* %1230 to i64*
  %1231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1232 = getelementptr inbounds %struct.GPR, %struct.GPR* %1231, i32 0, i32 29
  %1233 = getelementptr inbounds %struct.Reg, %struct.Reg* %1232, i32 0, i32 0
  %R14.i891 = bitcast %union.anon* %1233 to i64*
  %1234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1235 = getelementptr inbounds %struct.GPR, %struct.GPR* %1234, i32 0, i32 31
  %1236 = getelementptr inbounds %struct.Reg, %struct.Reg* %1235, i32 0, i32 0
  %R15.i892 = bitcast %union.anon* %1236 to i64*
  %1237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1238 = getelementptr inbounds %struct.GPR, %struct.GPR* %1237, i32 0, i32 33
  %1239 = getelementptr inbounds %struct.Reg, %struct.Reg* %1238, i32 0, i32 0
  %RIP.i893 = bitcast %union.anon* %1239 to i64*
  %1240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1241 = getelementptr inbounds %struct.Segments, %struct.Segments* %1240, i32 0, i32 1
  %SS.i894 = bitcast %union.SegmentSelector* %1241 to i16*
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1243 = getelementptr inbounds %struct.Segments, %struct.Segments* %1242, i32 0, i32 3
  %ES.i895 = bitcast %union.SegmentSelector* %1243 to i16*
  %1244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1245 = getelementptr inbounds %struct.Segments, %struct.Segments* %1244, i32 0, i32 5
  %GS.i896 = bitcast %union.SegmentSelector* %1245 to i16*
  %1246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1247 = getelementptr inbounds %struct.Segments, %struct.Segments* %1246, i32 0, i32 7
  %FS.i897 = bitcast %union.SegmentSelector* %1247 to i16*
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1249 = getelementptr inbounds %struct.Segments, %struct.Segments* %1248, i32 0, i32 9
  %DS.i898 = bitcast %union.SegmentSelector* %1249 to i16*
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1251 = getelementptr inbounds %struct.Segments, %struct.Segments* %1250, i32 0, i32 11
  %CS.i899 = bitcast %union.SegmentSelector* %1251 to i16*
  %1252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1252, i32 0, i32 5
  %1254 = getelementptr inbounds %struct.Reg, %struct.Reg* %1253, i32 0, i32 0
  %GS_BASE.i900 = bitcast %union.anon* %1254 to i64*
  %1255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1255, i32 0, i32 7
  %1257 = getelementptr inbounds %struct.Reg, %struct.Reg* %1256, i32 0, i32 0
  %FS_BASE.i901 = bitcast %union.anon* %1257 to i64*
  %1258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1258, i64 0, i64 0
  %YMM0.i902 = bitcast %union.VectorReg* %1259 to %"class.std::bitset"*
  %1260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1260, i64 0, i64 1
  %YMM1.i903 = bitcast %union.VectorReg* %1261 to %"class.std::bitset"*
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1262, i64 0, i64 2
  %YMM2.i904 = bitcast %union.VectorReg* %1263 to %"class.std::bitset"*
  %1264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1264, i64 0, i64 3
  %YMM3.i905 = bitcast %union.VectorReg* %1265 to %"class.std::bitset"*
  %1266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1266, i64 0, i64 4
  %YMM4.i906 = bitcast %union.VectorReg* %1267 to %"class.std::bitset"*
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1268, i64 0, i64 5
  %YMM5.i907 = bitcast %union.VectorReg* %1269 to %"class.std::bitset"*
  %1270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1270, i64 0, i64 6
  %YMM6.i908 = bitcast %union.VectorReg* %1271 to %"class.std::bitset"*
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1272, i64 0, i64 7
  %YMM7.i909 = bitcast %union.VectorReg* %1273 to %"class.std::bitset"*
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1274, i64 0, i64 8
  %YMM8.i910 = bitcast %union.VectorReg* %1275 to %"class.std::bitset"*
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1276, i64 0, i64 9
  %YMM9.i911 = bitcast %union.VectorReg* %1277 to %"class.std::bitset"*
  %1278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1278, i64 0, i64 10
  %YMM10.i912 = bitcast %union.VectorReg* %1279 to %"class.std::bitset"*
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1280, i64 0, i64 11
  %YMM11.i913 = bitcast %union.VectorReg* %1281 to %"class.std::bitset"*
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1282, i64 0, i64 12
  %YMM12.i914 = bitcast %union.VectorReg* %1283 to %"class.std::bitset"*
  %1284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1284, i64 0, i64 13
  %YMM13.i915 = bitcast %union.VectorReg* %1285 to %"class.std::bitset"*
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1286, i64 0, i64 14
  %YMM14.i916 = bitcast %union.VectorReg* %1287 to %"class.std::bitset"*
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1288, i64 0, i64 15
  %YMM15.i917 = bitcast %union.VectorReg* %1289 to %"class.std::bitset"*
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1290, i64 0, i64 0
  %XMM0.i918 = bitcast %union.VectorReg* %1291 to %union.vec128_t*
  %1292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1292, i64 0, i64 1
  %XMM1.i919 = bitcast %union.VectorReg* %1293 to %union.vec128_t*
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1294, i64 0, i64 2
  %XMM2.i920 = bitcast %union.VectorReg* %1295 to %union.vec128_t*
  %1296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1296, i64 0, i64 3
  %XMM3.i921 = bitcast %union.VectorReg* %1297 to %union.vec128_t*
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1298, i64 0, i64 4
  %XMM4.i922 = bitcast %union.VectorReg* %1299 to %union.vec128_t*
  %1300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1300, i64 0, i64 5
  %XMM5.i923 = bitcast %union.VectorReg* %1301 to %union.vec128_t*
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1302, i64 0, i64 6
  %XMM6.i924 = bitcast %union.VectorReg* %1303 to %union.vec128_t*
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1304, i64 0, i64 7
  %XMM7.i925 = bitcast %union.VectorReg* %1305 to %union.vec128_t*
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1306, i64 0, i64 8
  %XMM8.i926 = bitcast %union.VectorReg* %1307 to %union.vec128_t*
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1308, i64 0, i64 9
  %XMM9.i927 = bitcast %union.VectorReg* %1309 to %union.vec128_t*
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1310, i64 0, i64 10
  %XMM10.i928 = bitcast %union.VectorReg* %1311 to %union.vec128_t*
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1312, i64 0, i64 11
  %XMM11.i929 = bitcast %union.VectorReg* %1313 to %union.vec128_t*
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1314, i64 0, i64 12
  %XMM12.i930 = bitcast %union.VectorReg* %1315 to %union.vec128_t*
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1316, i64 0, i64 13
  %XMM13.i931 = bitcast %union.VectorReg* %1317 to %union.vec128_t*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1318, i64 0, i64 14
  %XMM14.i932 = bitcast %union.VectorReg* %1319 to %union.vec128_t*
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1320, i64 0, i64 15
  %XMM15.i933 = bitcast %union.VectorReg* %1321 to %union.vec128_t*
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1322, i32 0, i32 0
  %1324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1323, i64 0, i64 0
  %ST0.i934 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1324, i32 0, i32 1
  %1325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1325, i32 0, i32 0
  %1327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1326, i64 0, i64 1
  %ST1.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1327, i32 0, i32 1
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1328, i32 0, i32 0
  %1330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1329, i64 0, i64 2
  %ST2.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1330, i32 0, i32 1
  %1331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1331, i32 0, i32 0
  %1333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1332, i64 0, i64 3
  %ST3.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1333, i32 0, i32 1
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1334, i32 0, i32 0
  %1336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1335, i64 0, i64 4
  %ST4.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1336, i32 0, i32 1
  %1337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1337, i32 0, i32 0
  %1339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1338, i64 0, i64 5
  %ST5.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1339, i32 0, i32 1
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1340, i32 0, i32 0
  %1342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1341, i64 0, i64 6
  %ST6.i940 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1342, i32 0, i32 1
  %1343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1343, i32 0, i32 0
  %1345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1344, i64 0, i64 7
  %ST7.i941 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1345, i32 0, i32 1
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1347 = getelementptr inbounds %struct.MMX, %struct.MMX* %1346, i32 0, i32 0
  %1348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1347, i64 0, i64 0
  %1349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1348, i32 0, i32 1
  %1350 = bitcast %union.vec64_t* %1349 to %struct.uint64v1_t*
  %1351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1350, i32 0, i32 0
  %MM0.i942 = getelementptr inbounds [1 x i64], [1 x i64]* %1351, i64 0, i64 0
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1353 = getelementptr inbounds %struct.MMX, %struct.MMX* %1352, i32 0, i32 0
  %1354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1353, i64 0, i64 1
  %1355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1354, i32 0, i32 1
  %1356 = bitcast %union.vec64_t* %1355 to %struct.uint64v1_t*
  %1357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1356, i32 0, i32 0
  %MM1.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %1357, i64 0, i64 0
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1359 = getelementptr inbounds %struct.MMX, %struct.MMX* %1358, i32 0, i32 0
  %1360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1359, i64 0, i64 2
  %1361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1360, i32 0, i32 1
  %1362 = bitcast %union.vec64_t* %1361 to %struct.uint64v1_t*
  %1363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1362, i32 0, i32 0
  %MM2.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %1363, i64 0, i64 0
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1365 = getelementptr inbounds %struct.MMX, %struct.MMX* %1364, i32 0, i32 0
  %1366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1365, i64 0, i64 3
  %1367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1366, i32 0, i32 1
  %1368 = bitcast %union.vec64_t* %1367 to %struct.uint64v1_t*
  %1369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1368, i32 0, i32 0
  %MM3.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %1369, i64 0, i64 0
  %1370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1371 = getelementptr inbounds %struct.MMX, %struct.MMX* %1370, i32 0, i32 0
  %1372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1371, i64 0, i64 4
  %1373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1372, i32 0, i32 1
  %1374 = bitcast %union.vec64_t* %1373 to %struct.uint64v1_t*
  %1375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1374, i32 0, i32 0
  %MM4.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %1375, i64 0, i64 0
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1377 = getelementptr inbounds %struct.MMX, %struct.MMX* %1376, i32 0, i32 0
  %1378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1377, i64 0, i64 5
  %1379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1378, i32 0, i32 1
  %1380 = bitcast %union.vec64_t* %1379 to %struct.uint64v1_t*
  %1381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1380, i32 0, i32 0
  %MM5.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %1381, i64 0, i64 0
  %1382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1383 = getelementptr inbounds %struct.MMX, %struct.MMX* %1382, i32 0, i32 0
  %1384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1383, i64 0, i64 6
  %1385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1384, i32 0, i32 1
  %1386 = bitcast %union.vec64_t* %1385 to %struct.uint64v1_t*
  %1387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1386, i32 0, i32 0
  %MM6.i948 = getelementptr inbounds [1 x i64], [1 x i64]* %1387, i64 0, i64 0
  %1388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1389 = getelementptr inbounds %struct.MMX, %struct.MMX* %1388, i32 0, i32 0
  %1390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1389, i64 0, i64 7
  %1391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1390, i32 0, i32 1
  %1392 = bitcast %union.vec64_t* %1391 to %struct.uint64v1_t*
  %1393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1392, i32 0, i32 0
  %MM7.i949 = getelementptr inbounds [1 x i64], [1 x i64]* %1393, i64 0, i64 0
  %1394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i950 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1394, i32 0, i32 5
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1395, i32 0, i32 1
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1396, i32 0, i32 11
  %1397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1397, i32 0, i32 13
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1398, i32 0, i32 3
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i955 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1399, i32 0, i32 9
  %1400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i956 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i808, align 8, !noalias !2470
  store i64* @DR1, i64** %_DR1.i809, align 8, !noalias !2470
  store i64* @DR2, i64** %_DR2.i810, align 8, !noalias !2470
  store i64* @DR3, i64** %_DR3.i811, align 8, !noalias !2470
  store i64* @DR4, i64** %_DR4.i812, align 8, !noalias !2470
  store i64* @DR5, i64** %_DR5.i813, align 8, !noalias !2470
  store i64* @DR6, i64** %_DR6.i814, align 8, !noalias !2470
  store i64* @DR7, i64** %_DR7.i815, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i816, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i817, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i818, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i819, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i820, align 8, !noalias !2470
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i821, align 8, !noalias !2470
  %1401 = bitcast %"class.std::bitset"* %YMM0.i902 to double*
  %1402 = load double, double* %1401, !alias.scope !2474, !noalias !2475
  %1403 = load i64, i64* %RSP.i883, !alias.scope !2474, !noalias !2475
  %1404 = load %struct.Memory*, %struct.Memory** %MEMORY.i807, !noalias !2470
  %1405 = inttoptr i64 %1403 to i64*
  %1406 = load i64, i64* %1405
  store i64 %1406, i64* %PC.i822, !alias.scope !2474, !noalias !2475
  %1407 = add i64 %1403, 8
  store i64 %1407, i64* %RSP.i883, !alias.scope !2474, !noalias !2475
  %1408 = call double @sin(double %1402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i902, !alias.scope !2474, !noalias !2475
  %1409 = bitcast %"class.std::bitset"* %YMM0.i902 to double*
  store double %1408, double* %1409, !alias.scope !2474, !noalias !2475
  %1410 = load %struct.Memory*, %struct.Memory** %MEMORY.i807, !noalias !2470
  %1411 = bitcast %struct.State** %state.i798 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1411)
  %1412 = bitcast i64* %curr_pc.i799 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1412)
  %1413 = bitcast %struct.Memory** %memory.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1413)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i801)
  %1414 = bitcast i64* %SS_BASE.i802 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1414)
  %1415 = bitcast i64* %ES_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1415)
  %1416 = bitcast i64* %DS_BASE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1416)
  %1417 = bitcast i64* %CS_BASE.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1417)
  %1418 = bitcast %struct.State** %STATE.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1418)
  %1419 = bitcast %struct.Memory** %MEMORY.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1419)
  %1420 = bitcast i64** %_DR0.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1420)
  %1421 = bitcast i64** %_DR1.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1421)
  %1422 = bitcast i64** %_DR2.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1422)
  %1423 = bitcast i64** %_DR3.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1423)
  %1424 = bitcast i64** %_DR4.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1424)
  %1425 = bitcast i64** %_DR5.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1425)
  %1426 = bitcast i64** %_DR6.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1426)
  %1427 = bitcast i64** %_DR7.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1427)
  %1428 = bitcast i64** %CR0.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1428)
  %1429 = bitcast i64** %CR1.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1429)
  %1430 = bitcast i64** %CR2.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1430)
  %1431 = bitcast i64** %CR3.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1431)
  %1432 = bitcast i64** %CR4.i820 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1432)
  %1433 = bitcast i64** %CR8.i821 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1433)
  %1434 = load i64, i64* %RBP
  %1435 = sub i64 %1434, 48
  %1436 = bitcast %union.vec128_t* %XMM0 to i8*
  %1437 = load i64, i64* %PC
  %1438 = add i64 %1437, 5
  store i64 %1438, i64* %PC
  %1439 = bitcast i8* %1436 to double*
  %1440 = load double, double* %1439, align 1
  %1441 = inttoptr i64 %1435 to double*
  store double %1440, double* %1441
  %1442 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1443 = load i64, i64* %RBP
  %1444 = sub i64 %1443, 72
  %1445 = load i64, i64* %PC
  %1446 = add i64 %1445, 5
  store i64 %1446, i64* %PC
  %1447 = inttoptr i64 %1444 to double*
  %1448 = load double, double* %1447
  %1449 = bitcast i8* %1442 to double*
  store double %1448, double* %1449, align 1, !tbaa !2452
  %1450 = getelementptr inbounds i8, i8* %1442, i64 8
  %1451 = bitcast i8* %1450 to double*
  store double 0.000000e+00, double* %1451, align 1, !tbaa !2452
  %1452 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1453 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1454 = load i64, i64* %PC
  %1455 = add i64 %1454, 9
  store i64 %1455, i64* %PC
  %1456 = bitcast i8* %1453 to double*
  %1457 = load double, double* %1456, align 1
  %1458 = getelementptr inbounds i8, i8* %1453, i64 8
  %1459 = bitcast i8* %1458 to i64*
  %1460 = load i64, i64* %1459, align 1
  %1461 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1462 = fmul double %1457, %1461
  %1463 = bitcast i8* %1452 to double*
  store double %1462, double* %1463, align 1, !tbaa !2452
  %1464 = getelementptr inbounds i8, i8* %1452, i64 8
  %1465 = bitcast i8* %1464 to i64*
  store i64 %1460, i64* %1465, align 1, !tbaa !2452
  %1466 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1467 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1468 = load i64, i64* %RBP
  %1469 = sub i64 %1468, 48
  %1470 = load i64, i64* %PC
  %1471 = add i64 %1470, 5
  store i64 %1471, i64* %PC
  %1472 = bitcast i8* %1467 to double*
  %1473 = load double, double* %1472, align 1
  %1474 = getelementptr inbounds i8, i8* %1467, i64 8
  %1475 = bitcast i8* %1474 to i64*
  %1476 = load i64, i64* %1475, align 1
  %1477 = inttoptr i64 %1469 to double*
  %1478 = load double, double* %1477
  %1479 = fmul double %1473, %1478
  %1480 = bitcast i8* %1466 to double*
  store double %1479, double* %1480, align 1, !tbaa !2452
  %1481 = getelementptr inbounds i8, i8* %1466, i64 8
  %1482 = bitcast i8* %1481 to i64*
  store i64 %1476, i64* %1482, align 1, !tbaa !2452
  %1483 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1484 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1485 = load i64, i64* %RBP
  %1486 = sub i64 %1485, 48
  %1487 = load i64, i64* %PC
  %1488 = add i64 %1487, 5
  store i64 %1488, i64* %PC
  %1489 = bitcast i8* %1484 to double*
  %1490 = load double, double* %1489, align 1
  %1491 = getelementptr inbounds i8, i8* %1484, i64 8
  %1492 = bitcast i8* %1491 to i64*
  %1493 = load i64, i64* %1492, align 1
  %1494 = inttoptr i64 %1486 to double*
  %1495 = load double, double* %1494
  %1496 = fmul double %1490, %1495
  %1497 = bitcast i8* %1483 to double*
  store double %1496, double* %1497, align 1, !tbaa !2452
  %1498 = getelementptr inbounds i8, i8* %1483, i64 8
  %1499 = bitcast i8* %1498 to i64*
  store i64 %1493, i64* %1499, align 1, !tbaa !2452
  %1500 = load i64, i64* %RBP
  %1501 = sub i64 %1500, 48
  %1502 = bitcast %union.vec128_t* %XMM0 to i8*
  %1503 = load i64, i64* %PC
  %1504 = add i64 %1503, 5
  store i64 %1504, i64* %PC
  %1505 = bitcast i8* %1502 to double*
  %1506 = load double, double* %1505, align 1
  %1507 = inttoptr i64 %1501 to double*
  store double %1506, double* %1507
  %1508 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1509 = load i64, i64* %PC
  %1510 = add i64 %1509, 9
  store i64 %1510, i64* %PC
  %1511 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1512 = bitcast i8* %1508 to double*
  store double %1511, double* %1512, align 1, !tbaa !2452
  %1513 = getelementptr inbounds i8, i8* %1508, i64 8
  %1514 = bitcast i8* %1513 to double*
  store double 0.000000e+00, double* %1514, align 1, !tbaa !2452
  %1515 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1516 = load i64, i64* %RBP
  %1517 = sub i64 %1516, 40
  %1518 = load i64, i64* %PC
  %1519 = add i64 %1518, 5
  store i64 %1519, i64* %PC
  %1520 = inttoptr i64 %1517 to double*
  %1521 = load double, double* %1520
  %1522 = bitcast i8* %1515 to double*
  store double %1521, double* %1522, align 1, !tbaa !2452
  %1523 = getelementptr inbounds i8, i8* %1515, i64 8
  %1524 = bitcast i8* %1523 to double*
  store double 0.000000e+00, double* %1524, align 1, !tbaa !2452
  %1525 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1526 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1527 = load i64, i64* %RBP
  %1528 = sub i64 %1527, 8
  %1529 = load i64, i64* %PC
  %1530 = add i64 %1529, 5
  store i64 %1530, i64* %PC
  %1531 = bitcast i8* %1526 to double*
  %1532 = load double, double* %1531, align 1
  %1533 = getelementptr inbounds i8, i8* %1526, i64 8
  %1534 = bitcast i8* %1533 to i64*
  %1535 = load i64, i64* %1534, align 1
  %1536 = inttoptr i64 %1528 to double*
  %1537 = load double, double* %1536
  %1538 = fadd double %1532, %1537
  %1539 = bitcast i8* %1525 to double*
  store double %1538, double* %1539, align 1, !tbaa !2452
  %1540 = getelementptr inbounds i8, i8* %1525, i64 8
  %1541 = bitcast i8* %1540 to i64*
  store i64 %1535, i64* %1541, align 1, !tbaa !2452
  %1542 = load i64, i64* %RBP
  %1543 = sub i64 %1542, 80
  %1544 = bitcast %union.vec128_t* %XMM0 to i8*
  %1545 = load i64, i64* %PC
  %1546 = add i64 %1545, 5
  store i64 %1546, i64* %PC
  %1547 = bitcast i8* %1544 to double*
  %1548 = load double, double* %1547, align 1
  %1549 = inttoptr i64 %1543 to double*
  store double %1548, double* %1549
  %1550 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1551 = bitcast %union.vec128_t* %XMM1 to i8*
  %1552 = load i64, i64* %PC
  %1553 = add i64 %1552, 3
  store i64 %1553, i64* %PC
  %1554 = bitcast i8* %1551 to <2 x i32>*
  %1555 = load <2 x i32>, <2 x i32>* %1554, align 1
  %1556 = getelementptr inbounds i8, i8* %1551, i64 8
  %1557 = bitcast i8* %1556 to <2 x i32>*
  %1558 = load <2 x i32>, <2 x i32>* %1557, align 1
  %1559 = extractelement <2 x i32> %1555, i32 0
  %1560 = bitcast i8* %1550 to i32*
  store i32 %1559, i32* %1560, align 1, !tbaa !2454
  %1561 = extractelement <2 x i32> %1555, i32 1
  %1562 = getelementptr inbounds i8, i8* %1550, i64 4
  %1563 = bitcast i8* %1562 to i32*
  store i32 %1561, i32* %1563, align 1, !tbaa !2454
  %1564 = extractelement <2 x i32> %1558, i32 0
  %1565 = getelementptr inbounds i8, i8* %1550, i64 8
  %1566 = bitcast i8* %1565 to i32*
  store i32 %1564, i32* %1566, align 1, !tbaa !2454
  %1567 = extractelement <2 x i32> %1558, i32 1
  %1568 = getelementptr inbounds i8, i8* %1550, i64 12
  %1569 = bitcast i8* %1568 to i32*
  store i32 %1567, i32* %1569, align 1, !tbaa !2454
  %1570 = load i64, i64* %PC
  %1571 = sub i64 %1570, 3575
  %1572 = load i64, i64* %PC
  %1573 = add i64 %1572, 5
  %1574 = load i64, i64* %PC
  %1575 = add i64 %1574, 5
  store i64 %1575, i64* %PC
  %1576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1577 = load i64, i64* %1576, align 8, !tbaa !2428
  %1578 = add i64 %1577, -8
  %1579 = inttoptr i64 %1578 to i64*
  store i64 %1573, i64* %1579
  store i64 %1578, i64* %1576, align 8, !tbaa !2428
  %1580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1571, i64* %1580, align 8, !tbaa !2428
  %1581 = load i64, i64* %PC
  %1582 = bitcast %struct.State** %state.i639 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1582)
  %1583 = bitcast i64* %curr_pc.i640 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1583)
  %1584 = bitcast %struct.Memory** %memory.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1584)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i642)
  %1585 = bitcast i64* %SS_BASE.i643 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1585)
  %1586 = bitcast i64* %ES_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1586)
  %1587 = bitcast i64* %DS_BASE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1587)
  %1588 = bitcast i64* %CS_BASE.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1588)
  %1589 = bitcast %struct.State** %STATE.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1589)
  %1590 = bitcast %struct.Memory** %MEMORY.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1590)
  %1591 = bitcast i64** %_DR0.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1591)
  %1592 = bitcast i64** %_DR1.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1592)
  %1593 = bitcast i64** %_DR2.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1593)
  %1594 = bitcast i64** %_DR3.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1594)
  %1595 = bitcast i64** %_DR4.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1595)
  %1596 = bitcast i64** %_DR5.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1596)
  %1597 = bitcast i64** %_DR6.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1597)
  %1598 = bitcast i64** %_DR7.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1598)
  %1599 = bitcast i64** %CR0.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1599)
  %1600 = bitcast i64** %CR1.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1600)
  %1601 = bitcast i64** %CR2.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1601)
  %1602 = bitcast i64** %CR3.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1602)
  %1603 = bitcast i64** %CR4.i661 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1603)
  %1604 = bitcast i64** %CR8.i662 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1604)
  store %struct.State* %0, %struct.State** %state.i639, align 8, !noalias !2476
  store i64 %1581, i64* %curr_pc.i640, align 8, !noalias !2476
  store %struct.Memory* %1410, %struct.Memory** %memory.i641, align 8, !noalias !2476
  store i8 0, i8* %BRANCH_TAKEN.i642, align 1, !noalias !2476
  store i64 0, i64* %SS_BASE.i643, align 8, !noalias !2476
  store i64 0, i64* %ES_BASE.i644, align 8, !noalias !2476
  store i64 0, i64* %DS_BASE.i645, align 8, !noalias !2476
  store i64 0, i64* %CS_BASE.i646, align 8, !noalias !2476
  store %struct.State* %0, %struct.State** %STATE.i647, align 8, !noalias !2476
  store %struct.Memory* %1410, %struct.Memory** %MEMORY.i648, align 8, !noalias !2476
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1606 = getelementptr inbounds %struct.GPR, %struct.GPR* %1605, i32 0, i32 33
  %1607 = getelementptr inbounds %struct.Reg, %struct.Reg* %1606, i32 0, i32 0
  %PC.i663 = bitcast %union.anon* %1607 to i64*
  store i64 %1581, i64* %PC.i663, align 8, !alias.scope !2480, !noalias !2481
  %1608 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1609 = getelementptr inbounds %struct.GPR, %struct.GPR* %1608, i32 0, i32 1
  %1610 = getelementptr inbounds %struct.Reg, %struct.Reg* %1609, i32 0, i32 0
  %1611 = bitcast %union.anon* %1610 to %struct.anon.2*
  %AH.i664 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1611, i32 0, i32 1
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1613 = getelementptr inbounds %struct.GPR, %struct.GPR* %1612, i32 0, i32 3
  %1614 = getelementptr inbounds %struct.Reg, %struct.Reg* %1613, i32 0, i32 0
  %1615 = bitcast %union.anon* %1614 to %struct.anon.2*
  %BH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1615, i32 0, i32 1
  %1616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1617 = getelementptr inbounds %struct.GPR, %struct.GPR* %1616, i32 0, i32 5
  %1618 = getelementptr inbounds %struct.Reg, %struct.Reg* %1617, i32 0, i32 0
  %1619 = bitcast %union.anon* %1618 to %struct.anon.2*
  %CH.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1619, i32 0, i32 1
  %1620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1621 = getelementptr inbounds %struct.GPR, %struct.GPR* %1620, i32 0, i32 7
  %1622 = getelementptr inbounds %struct.Reg, %struct.Reg* %1621, i32 0, i32 0
  %1623 = bitcast %union.anon* %1622 to %struct.anon.2*
  %DH.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1623, i32 0, i32 1
  %1624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1625 = getelementptr inbounds %struct.GPR, %struct.GPR* %1624, i32 0, i32 1
  %1626 = getelementptr inbounds %struct.Reg, %struct.Reg* %1625, i32 0, i32 0
  %1627 = bitcast %union.anon* %1626 to %struct.anon.2*
  %AL.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1627, i32 0, i32 0
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1629 = getelementptr inbounds %struct.GPR, %struct.GPR* %1628, i32 0, i32 3
  %1630 = getelementptr inbounds %struct.Reg, %struct.Reg* %1629, i32 0, i32 0
  %1631 = bitcast %union.anon* %1630 to %struct.anon.2*
  %BL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1631, i32 0, i32 0
  %1632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1633 = getelementptr inbounds %struct.GPR, %struct.GPR* %1632, i32 0, i32 5
  %1634 = getelementptr inbounds %struct.Reg, %struct.Reg* %1633, i32 0, i32 0
  %1635 = bitcast %union.anon* %1634 to %struct.anon.2*
  %CL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1635, i32 0, i32 0
  %1636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1637 = getelementptr inbounds %struct.GPR, %struct.GPR* %1636, i32 0, i32 7
  %1638 = getelementptr inbounds %struct.Reg, %struct.Reg* %1637, i32 0, i32 0
  %1639 = bitcast %union.anon* %1638 to %struct.anon.2*
  %DL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1639, i32 0, i32 0
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1641 = getelementptr inbounds %struct.GPR, %struct.GPR* %1640, i32 0, i32 9
  %1642 = getelementptr inbounds %struct.Reg, %struct.Reg* %1641, i32 0, i32 0
  %1643 = bitcast %union.anon* %1642 to %struct.anon.2*
  %SIL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1643, i32 0, i32 0
  %1644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1645 = getelementptr inbounds %struct.GPR, %struct.GPR* %1644, i32 0, i32 11
  %1646 = getelementptr inbounds %struct.Reg, %struct.Reg* %1645, i32 0, i32 0
  %1647 = bitcast %union.anon* %1646 to %struct.anon.2*
  %DIL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1647, i32 0, i32 0
  %1648 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1649 = getelementptr inbounds %struct.GPR, %struct.GPR* %1648, i32 0, i32 13
  %1650 = getelementptr inbounds %struct.Reg, %struct.Reg* %1649, i32 0, i32 0
  %1651 = bitcast %union.anon* %1650 to %struct.anon.2*
  %SPL.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1651, i32 0, i32 0
  %1652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1653 = getelementptr inbounds %struct.GPR, %struct.GPR* %1652, i32 0, i32 15
  %1654 = getelementptr inbounds %struct.Reg, %struct.Reg* %1653, i32 0, i32 0
  %1655 = bitcast %union.anon* %1654 to %struct.anon.2*
  %BPL.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1655, i32 0, i32 0
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 17
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %1659 = bitcast %union.anon* %1658 to %struct.anon.2*
  %R8B.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1659, i32 0, i32 0
  %1660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1661 = getelementptr inbounds %struct.GPR, %struct.GPR* %1660, i32 0, i32 19
  %1662 = getelementptr inbounds %struct.Reg, %struct.Reg* %1661, i32 0, i32 0
  %1663 = bitcast %union.anon* %1662 to %struct.anon.2*
  %R9B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1663, i32 0, i32 0
  %1664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1665 = getelementptr inbounds %struct.GPR, %struct.GPR* %1664, i32 0, i32 21
  %1666 = getelementptr inbounds %struct.Reg, %struct.Reg* %1665, i32 0, i32 0
  %1667 = bitcast %union.anon* %1666 to %struct.anon.2*
  %R10B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1667, i32 0, i32 0
  %1668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1669 = getelementptr inbounds %struct.GPR, %struct.GPR* %1668, i32 0, i32 23
  %1670 = getelementptr inbounds %struct.Reg, %struct.Reg* %1669, i32 0, i32 0
  %1671 = bitcast %union.anon* %1670 to %struct.anon.2*
  %R11B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1671, i32 0, i32 0
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 25
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %1675 = bitcast %union.anon* %1674 to %struct.anon.2*
  %R12B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1675, i32 0, i32 0
  %1676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1677 = getelementptr inbounds %struct.GPR, %struct.GPR* %1676, i32 0, i32 27
  %1678 = getelementptr inbounds %struct.Reg, %struct.Reg* %1677, i32 0, i32 0
  %1679 = bitcast %union.anon* %1678 to %struct.anon.2*
  %R13B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1679, i32 0, i32 0
  %1680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1681 = getelementptr inbounds %struct.GPR, %struct.GPR* %1680, i32 0, i32 29
  %1682 = getelementptr inbounds %struct.Reg, %struct.Reg* %1681, i32 0, i32 0
  %1683 = bitcast %union.anon* %1682 to %struct.anon.2*
  %R14B.i682 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1683, i32 0, i32 0
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 31
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %1687 = bitcast %union.anon* %1686 to %struct.anon.2*
  %R15B.i683 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1687, i32 0, i32 0
  %1688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1689 = getelementptr inbounds %struct.GPR, %struct.GPR* %1688, i32 0, i32 1
  %1690 = getelementptr inbounds %struct.Reg, %struct.Reg* %1689, i32 0, i32 0
  %AX.i684 = bitcast %union.anon* %1690 to i16*
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1692 = getelementptr inbounds %struct.GPR, %struct.GPR* %1691, i32 0, i32 3
  %1693 = getelementptr inbounds %struct.Reg, %struct.Reg* %1692, i32 0, i32 0
  %BX.i685 = bitcast %union.anon* %1693 to i16*
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1695 = getelementptr inbounds %struct.GPR, %struct.GPR* %1694, i32 0, i32 5
  %1696 = getelementptr inbounds %struct.Reg, %struct.Reg* %1695, i32 0, i32 0
  %CX.i686 = bitcast %union.anon* %1696 to i16*
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1698 = getelementptr inbounds %struct.GPR, %struct.GPR* %1697, i32 0, i32 7
  %1699 = getelementptr inbounds %struct.Reg, %struct.Reg* %1698, i32 0, i32 0
  %DX.i687 = bitcast %union.anon* %1699 to i16*
  %1700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1701 = getelementptr inbounds %struct.GPR, %struct.GPR* %1700, i32 0, i32 9
  %1702 = getelementptr inbounds %struct.Reg, %struct.Reg* %1701, i32 0, i32 0
  %SI.i688 = bitcast %union.anon* %1702 to i16*
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1704 = getelementptr inbounds %struct.GPR, %struct.GPR* %1703, i32 0, i32 11
  %1705 = getelementptr inbounds %struct.Reg, %struct.Reg* %1704, i32 0, i32 0
  %DI.i689 = bitcast %union.anon* %1705 to i16*
  %1706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1707 = getelementptr inbounds %struct.GPR, %struct.GPR* %1706, i32 0, i32 13
  %1708 = getelementptr inbounds %struct.Reg, %struct.Reg* %1707, i32 0, i32 0
  %SP.i690 = bitcast %union.anon* %1708 to i16*
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1710 = getelementptr inbounds %struct.GPR, %struct.GPR* %1709, i32 0, i32 15
  %1711 = getelementptr inbounds %struct.Reg, %struct.Reg* %1710, i32 0, i32 0
  %BP.i691 = bitcast %union.anon* %1711 to i16*
  %1712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1713 = getelementptr inbounds %struct.GPR, %struct.GPR* %1712, i32 0, i32 17
  %1714 = getelementptr inbounds %struct.Reg, %struct.Reg* %1713, i32 0, i32 0
  %R8W.i692 = bitcast %union.anon* %1714 to i16*
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1716 = getelementptr inbounds %struct.GPR, %struct.GPR* %1715, i32 0, i32 19
  %1717 = getelementptr inbounds %struct.Reg, %struct.Reg* %1716, i32 0, i32 0
  %R9W.i693 = bitcast %union.anon* %1717 to i16*
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1719 = getelementptr inbounds %struct.GPR, %struct.GPR* %1718, i32 0, i32 21
  %1720 = getelementptr inbounds %struct.Reg, %struct.Reg* %1719, i32 0, i32 0
  %R10W.i694 = bitcast %union.anon* %1720 to i16*
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1722 = getelementptr inbounds %struct.GPR, %struct.GPR* %1721, i32 0, i32 23
  %1723 = getelementptr inbounds %struct.Reg, %struct.Reg* %1722, i32 0, i32 0
  %R11W.i695 = bitcast %union.anon* %1723 to i16*
  %1724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1725 = getelementptr inbounds %struct.GPR, %struct.GPR* %1724, i32 0, i32 25
  %1726 = getelementptr inbounds %struct.Reg, %struct.Reg* %1725, i32 0, i32 0
  %R12W.i696 = bitcast %union.anon* %1726 to i16*
  %1727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1728 = getelementptr inbounds %struct.GPR, %struct.GPR* %1727, i32 0, i32 27
  %1729 = getelementptr inbounds %struct.Reg, %struct.Reg* %1728, i32 0, i32 0
  %R13W.i697 = bitcast %union.anon* %1729 to i16*
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 29
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %R14W.i698 = bitcast %union.anon* %1732 to i16*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 31
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %R15W.i699 = bitcast %union.anon* %1735 to i16*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 33
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %IP.i700 = bitcast %union.anon* %1738 to i16*
  %1739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1740 = getelementptr inbounds %struct.GPR, %struct.GPR* %1739, i32 0, i32 1
  %1741 = getelementptr inbounds %struct.Reg, %struct.Reg* %1740, i32 0, i32 0
  %EAX.i701 = bitcast %union.anon* %1741 to i32*
  %1742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1743 = getelementptr inbounds %struct.GPR, %struct.GPR* %1742, i32 0, i32 3
  %1744 = getelementptr inbounds %struct.Reg, %struct.Reg* %1743, i32 0, i32 0
  %EBX.i702 = bitcast %union.anon* %1744 to i32*
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 5
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %ECX.i703 = bitcast %union.anon* %1747 to i32*
  %1748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1749 = getelementptr inbounds %struct.GPR, %struct.GPR* %1748, i32 0, i32 7
  %1750 = getelementptr inbounds %struct.Reg, %struct.Reg* %1749, i32 0, i32 0
  %EDX.i704 = bitcast %union.anon* %1750 to i32*
  %1751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1752 = getelementptr inbounds %struct.GPR, %struct.GPR* %1751, i32 0, i32 9
  %1753 = getelementptr inbounds %struct.Reg, %struct.Reg* %1752, i32 0, i32 0
  %ESI.i705 = bitcast %union.anon* %1753 to i32*
  %1754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1755 = getelementptr inbounds %struct.GPR, %struct.GPR* %1754, i32 0, i32 11
  %1756 = getelementptr inbounds %struct.Reg, %struct.Reg* %1755, i32 0, i32 0
  %EDI.i706 = bitcast %union.anon* %1756 to i32*
  %1757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1758 = getelementptr inbounds %struct.GPR, %struct.GPR* %1757, i32 0, i32 13
  %1759 = getelementptr inbounds %struct.Reg, %struct.Reg* %1758, i32 0, i32 0
  %ESP.i707 = bitcast %union.anon* %1759 to i32*
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1761 = getelementptr inbounds %struct.GPR, %struct.GPR* %1760, i32 0, i32 15
  %1762 = getelementptr inbounds %struct.Reg, %struct.Reg* %1761, i32 0, i32 0
  %EBP.i708 = bitcast %union.anon* %1762 to i32*
  %1763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1764 = getelementptr inbounds %struct.GPR, %struct.GPR* %1763, i32 0, i32 33
  %1765 = getelementptr inbounds %struct.Reg, %struct.Reg* %1764, i32 0, i32 0
  %EIP.i709 = bitcast %union.anon* %1765 to i32*
  %1766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1767 = getelementptr inbounds %struct.GPR, %struct.GPR* %1766, i32 0, i32 17
  %1768 = getelementptr inbounds %struct.Reg, %struct.Reg* %1767, i32 0, i32 0
  %R8D.i710 = bitcast %union.anon* %1768 to i32*
  %1769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1770 = getelementptr inbounds %struct.GPR, %struct.GPR* %1769, i32 0, i32 19
  %1771 = getelementptr inbounds %struct.Reg, %struct.Reg* %1770, i32 0, i32 0
  %R9D.i711 = bitcast %union.anon* %1771 to i32*
  %1772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1773 = getelementptr inbounds %struct.GPR, %struct.GPR* %1772, i32 0, i32 21
  %1774 = getelementptr inbounds %struct.Reg, %struct.Reg* %1773, i32 0, i32 0
  %R10D.i712 = bitcast %union.anon* %1774 to i32*
  %1775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1776 = getelementptr inbounds %struct.GPR, %struct.GPR* %1775, i32 0, i32 23
  %1777 = getelementptr inbounds %struct.Reg, %struct.Reg* %1776, i32 0, i32 0
  %R11D.i713 = bitcast %union.anon* %1777 to i32*
  %1778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1779 = getelementptr inbounds %struct.GPR, %struct.GPR* %1778, i32 0, i32 25
  %1780 = getelementptr inbounds %struct.Reg, %struct.Reg* %1779, i32 0, i32 0
  %R12D.i714 = bitcast %union.anon* %1780 to i32*
  %1781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1782 = getelementptr inbounds %struct.GPR, %struct.GPR* %1781, i32 0, i32 27
  %1783 = getelementptr inbounds %struct.Reg, %struct.Reg* %1782, i32 0, i32 0
  %R13D.i715 = bitcast %union.anon* %1783 to i32*
  %1784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1785 = getelementptr inbounds %struct.GPR, %struct.GPR* %1784, i32 0, i32 29
  %1786 = getelementptr inbounds %struct.Reg, %struct.Reg* %1785, i32 0, i32 0
  %R14D.i716 = bitcast %union.anon* %1786 to i32*
  %1787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1788 = getelementptr inbounds %struct.GPR, %struct.GPR* %1787, i32 0, i32 31
  %1789 = getelementptr inbounds %struct.Reg, %struct.Reg* %1788, i32 0, i32 0
  %R15D.i717 = bitcast %union.anon* %1789 to i32*
  %1790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1791 = getelementptr inbounds %struct.GPR, %struct.GPR* %1790, i32 0, i32 1
  %1792 = getelementptr inbounds %struct.Reg, %struct.Reg* %1791, i32 0, i32 0
  %RAX.i718 = bitcast %union.anon* %1792 to i64*
  %1793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1794 = getelementptr inbounds %struct.GPR, %struct.GPR* %1793, i32 0, i32 3
  %1795 = getelementptr inbounds %struct.Reg, %struct.Reg* %1794, i32 0, i32 0
  %RBX.i719 = bitcast %union.anon* %1795 to i64*
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 5
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %RCX.i720 = bitcast %union.anon* %1798 to i64*
  %1799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1800 = getelementptr inbounds %struct.GPR, %struct.GPR* %1799, i32 0, i32 7
  %1801 = getelementptr inbounds %struct.Reg, %struct.Reg* %1800, i32 0, i32 0
  %RDX.i721 = bitcast %union.anon* %1801 to i64*
  %1802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1803 = getelementptr inbounds %struct.GPR, %struct.GPR* %1802, i32 0, i32 9
  %1804 = getelementptr inbounds %struct.Reg, %struct.Reg* %1803, i32 0, i32 0
  %RSI.i722 = bitcast %union.anon* %1804 to i64*
  %1805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1806 = getelementptr inbounds %struct.GPR, %struct.GPR* %1805, i32 0, i32 11
  %1807 = getelementptr inbounds %struct.Reg, %struct.Reg* %1806, i32 0, i32 0
  %RDI.i723 = bitcast %union.anon* %1807 to i64*
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 13
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %RSP.i724 = bitcast %union.anon* %1810 to i64*
  %1811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1812 = getelementptr inbounds %struct.GPR, %struct.GPR* %1811, i32 0, i32 15
  %1813 = getelementptr inbounds %struct.Reg, %struct.Reg* %1812, i32 0, i32 0
  %RBP.i725 = bitcast %union.anon* %1813 to i64*
  %1814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1815 = getelementptr inbounds %struct.GPR, %struct.GPR* %1814, i32 0, i32 17
  %1816 = getelementptr inbounds %struct.Reg, %struct.Reg* %1815, i32 0, i32 0
  %R8.i726 = bitcast %union.anon* %1816 to i64*
  %1817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1818 = getelementptr inbounds %struct.GPR, %struct.GPR* %1817, i32 0, i32 19
  %1819 = getelementptr inbounds %struct.Reg, %struct.Reg* %1818, i32 0, i32 0
  %R9.i727 = bitcast %union.anon* %1819 to i64*
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 21
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %R10.i728 = bitcast %union.anon* %1822 to i64*
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1824 = getelementptr inbounds %struct.GPR, %struct.GPR* %1823, i32 0, i32 23
  %1825 = getelementptr inbounds %struct.Reg, %struct.Reg* %1824, i32 0, i32 0
  %R11.i729 = bitcast %union.anon* %1825 to i64*
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1827 = getelementptr inbounds %struct.GPR, %struct.GPR* %1826, i32 0, i32 25
  %1828 = getelementptr inbounds %struct.Reg, %struct.Reg* %1827, i32 0, i32 0
  %R12.i730 = bitcast %union.anon* %1828 to i64*
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1830 = getelementptr inbounds %struct.GPR, %struct.GPR* %1829, i32 0, i32 27
  %1831 = getelementptr inbounds %struct.Reg, %struct.Reg* %1830, i32 0, i32 0
  %R13.i731 = bitcast %union.anon* %1831 to i64*
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 29
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %R14.i732 = bitcast %union.anon* %1834 to i64*
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1836 = getelementptr inbounds %struct.GPR, %struct.GPR* %1835, i32 0, i32 31
  %1837 = getelementptr inbounds %struct.Reg, %struct.Reg* %1836, i32 0, i32 0
  %R15.i733 = bitcast %union.anon* %1837 to i64*
  %1838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1839 = getelementptr inbounds %struct.GPR, %struct.GPR* %1838, i32 0, i32 33
  %1840 = getelementptr inbounds %struct.Reg, %struct.Reg* %1839, i32 0, i32 0
  %RIP.i734 = bitcast %union.anon* %1840 to i64*
  %1841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1842 = getelementptr inbounds %struct.Segments, %struct.Segments* %1841, i32 0, i32 1
  %SS.i735 = bitcast %union.SegmentSelector* %1842 to i16*
  %1843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1844 = getelementptr inbounds %struct.Segments, %struct.Segments* %1843, i32 0, i32 3
  %ES.i736 = bitcast %union.SegmentSelector* %1844 to i16*
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1846 = getelementptr inbounds %struct.Segments, %struct.Segments* %1845, i32 0, i32 5
  %GS.i737 = bitcast %union.SegmentSelector* %1846 to i16*
  %1847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1848 = getelementptr inbounds %struct.Segments, %struct.Segments* %1847, i32 0, i32 7
  %FS.i738 = bitcast %union.SegmentSelector* %1848 to i16*
  %1849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1850 = getelementptr inbounds %struct.Segments, %struct.Segments* %1849, i32 0, i32 9
  %DS.i739 = bitcast %union.SegmentSelector* %1850 to i16*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1852 = getelementptr inbounds %struct.Segments, %struct.Segments* %1851, i32 0, i32 11
  %CS.i740 = bitcast %union.SegmentSelector* %1852 to i16*
  %1853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1854 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1853, i32 0, i32 5
  %1855 = getelementptr inbounds %struct.Reg, %struct.Reg* %1854, i32 0, i32 0
  %GS_BASE.i741 = bitcast %union.anon* %1855 to i64*
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1857 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1856, i32 0, i32 7
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %FS_BASE.i742 = bitcast %union.anon* %1858 to i64*
  %1859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1860 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1859, i64 0, i64 0
  %YMM0.i743 = bitcast %union.VectorReg* %1860 to %"class.std::bitset"*
  %1861 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1862 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1861, i64 0, i64 1
  %YMM1.i744 = bitcast %union.VectorReg* %1862 to %"class.std::bitset"*
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1864 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1863, i64 0, i64 2
  %YMM2.i745 = bitcast %union.VectorReg* %1864 to %"class.std::bitset"*
  %1865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1866 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1865, i64 0, i64 3
  %YMM3.i746 = bitcast %union.VectorReg* %1866 to %"class.std::bitset"*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1868 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1867, i64 0, i64 4
  %YMM4.i747 = bitcast %union.VectorReg* %1868 to %"class.std::bitset"*
  %1869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1870 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1869, i64 0, i64 5
  %YMM5.i748 = bitcast %union.VectorReg* %1870 to %"class.std::bitset"*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1872 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1871, i64 0, i64 6
  %YMM6.i749 = bitcast %union.VectorReg* %1872 to %"class.std::bitset"*
  %1873 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1874 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1873, i64 0, i64 7
  %YMM7.i750 = bitcast %union.VectorReg* %1874 to %"class.std::bitset"*
  %1875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1876 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1875, i64 0, i64 8
  %YMM8.i751 = bitcast %union.VectorReg* %1876 to %"class.std::bitset"*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1878 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1877, i64 0, i64 9
  %YMM9.i752 = bitcast %union.VectorReg* %1878 to %"class.std::bitset"*
  %1879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1880 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1879, i64 0, i64 10
  %YMM10.i753 = bitcast %union.VectorReg* %1880 to %"class.std::bitset"*
  %1881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1882 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1881, i64 0, i64 11
  %YMM11.i754 = bitcast %union.VectorReg* %1882 to %"class.std::bitset"*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1884 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1883, i64 0, i64 12
  %YMM12.i755 = bitcast %union.VectorReg* %1884 to %"class.std::bitset"*
  %1885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1886 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1885, i64 0, i64 13
  %YMM13.i756 = bitcast %union.VectorReg* %1886 to %"class.std::bitset"*
  %1887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1888 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1887, i64 0, i64 14
  %YMM14.i757 = bitcast %union.VectorReg* %1888 to %"class.std::bitset"*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1890 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1889, i64 0, i64 15
  %YMM15.i758 = bitcast %union.VectorReg* %1890 to %"class.std::bitset"*
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1892 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1891, i64 0, i64 0
  %XMM0.i759 = bitcast %union.VectorReg* %1892 to %union.vec128_t*
  %1893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1894 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1893, i64 0, i64 1
  %XMM1.i760 = bitcast %union.VectorReg* %1894 to %union.vec128_t*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1896 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1895, i64 0, i64 2
  %XMM2.i761 = bitcast %union.VectorReg* %1896 to %union.vec128_t*
  %1897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1898 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1897, i64 0, i64 3
  %XMM3.i762 = bitcast %union.VectorReg* %1898 to %union.vec128_t*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1900 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1899, i64 0, i64 4
  %XMM4.i763 = bitcast %union.VectorReg* %1900 to %union.vec128_t*
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1902 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1901, i64 0, i64 5
  %XMM5.i764 = bitcast %union.VectorReg* %1902 to %union.vec128_t*
  %1903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1904 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1903, i64 0, i64 6
  %XMM6.i765 = bitcast %union.VectorReg* %1904 to %union.vec128_t*
  %1905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1906 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1905, i64 0, i64 7
  %XMM7.i766 = bitcast %union.VectorReg* %1906 to %union.vec128_t*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1908 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1907, i64 0, i64 8
  %XMM8.i767 = bitcast %union.VectorReg* %1908 to %union.vec128_t*
  %1909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1910 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1909, i64 0, i64 9
  %XMM9.i768 = bitcast %union.VectorReg* %1910 to %union.vec128_t*
  %1911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1912 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1911, i64 0, i64 10
  %XMM10.i769 = bitcast %union.VectorReg* %1912 to %union.vec128_t*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1914 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1913, i64 0, i64 11
  %XMM11.i770 = bitcast %union.VectorReg* %1914 to %union.vec128_t*
  %1915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1916 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1915, i64 0, i64 12
  %XMM12.i771 = bitcast %union.VectorReg* %1916 to %union.vec128_t*
  %1917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1918 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1917, i64 0, i64 13
  %XMM13.i772 = bitcast %union.VectorReg* %1918 to %union.vec128_t*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1920 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1919, i64 0, i64 14
  %XMM14.i773 = bitcast %union.VectorReg* %1920 to %union.vec128_t*
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1922 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1921, i64 0, i64 15
  %XMM15.i774 = bitcast %union.VectorReg* %1922 to %union.vec128_t*
  %1923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1924 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1923, i32 0, i32 0
  %1925 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1924, i64 0, i64 0
  %ST0.i775 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1925, i32 0, i32 1
  %1926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1927 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1926, i32 0, i32 0
  %1928 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1927, i64 0, i64 1
  %ST1.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1928, i32 0, i32 1
  %1929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1930 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1929, i32 0, i32 0
  %1931 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1930, i64 0, i64 2
  %ST2.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1931, i32 0, i32 1
  %1932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1933 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1932, i32 0, i32 0
  %1934 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1933, i64 0, i64 3
  %ST3.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1934, i32 0, i32 1
  %1935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1936 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1935, i32 0, i32 0
  %1937 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1936, i64 0, i64 4
  %ST4.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1937, i32 0, i32 1
  %1938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1939 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1938, i32 0, i32 0
  %1940 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1939, i64 0, i64 5
  %ST5.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1940, i32 0, i32 1
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1942 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1941, i32 0, i32 0
  %1943 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1942, i64 0, i64 6
  %ST6.i781 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1943, i32 0, i32 1
  %1944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1945 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1944, i32 0, i32 0
  %1946 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1945, i64 0, i64 7
  %ST7.i782 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1946, i32 0, i32 1
  %1947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1948 = getelementptr inbounds %struct.MMX, %struct.MMX* %1947, i32 0, i32 0
  %1949 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1948, i64 0, i64 0
  %1950 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1949, i32 0, i32 1
  %1951 = bitcast %union.vec64_t* %1950 to %struct.uint64v1_t*
  %1952 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1951, i32 0, i32 0
  %MM0.i783 = getelementptr inbounds [1 x i64], [1 x i64]* %1952, i64 0, i64 0
  %1953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1954 = getelementptr inbounds %struct.MMX, %struct.MMX* %1953, i32 0, i32 0
  %1955 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1954, i64 0, i64 1
  %1956 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1955, i32 0, i32 1
  %1957 = bitcast %union.vec64_t* %1956 to %struct.uint64v1_t*
  %1958 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1957, i32 0, i32 0
  %MM1.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %1958, i64 0, i64 0
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1960 = getelementptr inbounds %struct.MMX, %struct.MMX* %1959, i32 0, i32 0
  %1961 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1960, i64 0, i64 2
  %1962 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1961, i32 0, i32 1
  %1963 = bitcast %union.vec64_t* %1962 to %struct.uint64v1_t*
  %1964 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1963, i32 0, i32 0
  %MM2.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %1964, i64 0, i64 0
  %1965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1966 = getelementptr inbounds %struct.MMX, %struct.MMX* %1965, i32 0, i32 0
  %1967 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1966, i64 0, i64 3
  %1968 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1967, i32 0, i32 1
  %1969 = bitcast %union.vec64_t* %1968 to %struct.uint64v1_t*
  %1970 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1969, i32 0, i32 0
  %MM3.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %1970, i64 0, i64 0
  %1971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1972 = getelementptr inbounds %struct.MMX, %struct.MMX* %1971, i32 0, i32 0
  %1973 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1972, i64 0, i64 4
  %1974 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1973, i32 0, i32 1
  %1975 = bitcast %union.vec64_t* %1974 to %struct.uint64v1_t*
  %1976 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1975, i32 0, i32 0
  %MM4.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %1976, i64 0, i64 0
  %1977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1978 = getelementptr inbounds %struct.MMX, %struct.MMX* %1977, i32 0, i32 0
  %1979 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1978, i64 0, i64 5
  %1980 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1979, i32 0, i32 1
  %1981 = bitcast %union.vec64_t* %1980 to %struct.uint64v1_t*
  %1982 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1981, i32 0, i32 0
  %MM5.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %1982, i64 0, i64 0
  %1983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1984 = getelementptr inbounds %struct.MMX, %struct.MMX* %1983, i32 0, i32 0
  %1985 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1984, i64 0, i64 6
  %1986 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1985, i32 0, i32 1
  %1987 = bitcast %union.vec64_t* %1986 to %struct.uint64v1_t*
  %1988 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1987, i32 0, i32 0
  %MM6.i789 = getelementptr inbounds [1 x i64], [1 x i64]* %1988, i64 0, i64 0
  %1989 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1990 = getelementptr inbounds %struct.MMX, %struct.MMX* %1989, i32 0, i32 0
  %1991 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1990, i64 0, i64 7
  %1992 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1991, i32 0, i32 1
  %1993 = bitcast %union.vec64_t* %1992 to %struct.uint64v1_t*
  %1994 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1993, i32 0, i32 0
  %MM7.i790 = getelementptr inbounds [1 x i64], [1 x i64]* %1994, i64 0, i64 0
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i791 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1995, i32 0, i32 5
  %1996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1996, i32 0, i32 1
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1997, i32 0, i32 11
  %1998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1998, i32 0, i32 13
  %1999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1999, i32 0, i32 3
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i796 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2000, i32 0, i32 9
  %2001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i797 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2001, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i649, align 8, !noalias !2476
  store i64* @DR1, i64** %_DR1.i650, align 8, !noalias !2476
  store i64* @DR2, i64** %_DR2.i651, align 8, !noalias !2476
  store i64* @DR3, i64** %_DR3.i652, align 8, !noalias !2476
  store i64* @DR4, i64** %_DR4.i653, align 8, !noalias !2476
  store i64* @DR5, i64** %_DR5.i654, align 8, !noalias !2476
  store i64* @DR6, i64** %_DR6.i655, align 8, !noalias !2476
  store i64* @DR7, i64** %_DR7.i656, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i657, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i658, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i659, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i660, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i661, align 8, !noalias !2476
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i662, align 8, !noalias !2476
  %2002 = bitcast %"class.std::bitset"* %YMM0.i743 to double*
  %2003 = load double, double* %2002, !alias.scope !2480, !noalias !2481
  %2004 = load i64, i64* %RSP.i724, !alias.scope !2480, !noalias !2481
  %2005 = load %struct.Memory*, %struct.Memory** %MEMORY.i648, !noalias !2476
  %2006 = inttoptr i64 %2004 to i64*
  %2007 = load i64, i64* %2006
  store i64 %2007, i64* %PC.i663, !alias.scope !2480, !noalias !2481
  %2008 = add i64 %2004, 8
  store i64 %2008, i64* %RSP.i724, !alias.scope !2480, !noalias !2481
  %2009 = call double @sin(double %2003)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i743, !alias.scope !2480, !noalias !2481
  %2010 = bitcast %"class.std::bitset"* %YMM0.i743 to double*
  store double %2009, double* %2010, !alias.scope !2480, !noalias !2481
  %2011 = load %struct.Memory*, %struct.Memory** %MEMORY.i648, !noalias !2476
  %2012 = bitcast %struct.State** %state.i639 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2012)
  %2013 = bitcast i64* %curr_pc.i640 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2013)
  %2014 = bitcast %struct.Memory** %memory.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2014)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i642)
  %2015 = bitcast i64* %SS_BASE.i643 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2015)
  %2016 = bitcast i64* %ES_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2016)
  %2017 = bitcast i64* %DS_BASE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2017)
  %2018 = bitcast i64* %CS_BASE.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2018)
  %2019 = bitcast %struct.State** %STATE.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2019)
  %2020 = bitcast %struct.Memory** %MEMORY.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2020)
  %2021 = bitcast i64** %_DR0.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2021)
  %2022 = bitcast i64** %_DR1.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2022)
  %2023 = bitcast i64** %_DR2.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2023)
  %2024 = bitcast i64** %_DR3.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2024)
  %2025 = bitcast i64** %_DR4.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2025)
  %2026 = bitcast i64** %_DR5.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2026)
  %2027 = bitcast i64** %_DR6.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2027)
  %2028 = bitcast i64** %_DR7.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2028)
  %2029 = bitcast i64** %CR0.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2029)
  %2030 = bitcast i64** %CR1.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2030)
  %2031 = bitcast i64** %CR2.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2031)
  %2032 = bitcast i64** %CR3.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2032)
  %2033 = bitcast i64** %CR4.i661 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2033)
  %2034 = bitcast i64** %CR8.i662 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2034)
  %2035 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2036 = load i64, i64* %RBP
  %2037 = sub i64 %2036, 80
  %2038 = load i64, i64* %PC
  %2039 = add i64 %2038, 5
  store i64 %2039, i64* %PC
  %2040 = inttoptr i64 %2037 to double*
  %2041 = load double, double* %2040
  %2042 = bitcast i8* %2035 to double*
  store double %2041, double* %2042, align 1, !tbaa !2452
  %2043 = getelementptr inbounds i8, i8* %2035, i64 8
  %2044 = bitcast i8* %2043 to double*
  store double 0.000000e+00, double* %2044, align 1, !tbaa !2452
  %2045 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2046 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2047 = bitcast %union.vec128_t* %XMM0 to i8*
  %2048 = load i64, i64* %PC
  %2049 = add i64 %2048, 4
  store i64 %2049, i64* %PC
  %2050 = bitcast i8* %2046 to double*
  %2051 = load double, double* %2050, align 1
  %2052 = getelementptr inbounds i8, i8* %2046, i64 8
  %2053 = bitcast i8* %2052 to i64*
  %2054 = load i64, i64* %2053, align 1
  %2055 = bitcast i8* %2047 to double*
  %2056 = load double, double* %2055, align 1
  %2057 = fmul double %2051, %2056
  %2058 = bitcast i8* %2045 to double*
  store double %2057, double* %2058, align 1, !tbaa !2452
  %2059 = getelementptr inbounds i8, i8* %2045, i64 8
  %2060 = bitcast i8* %2059 to i64*
  store i64 %2054, i64* %2060, align 1, !tbaa !2452
  %2061 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2062 = load i64, i64* %PC
  %2063 = add i64 %2062, 9
  store i64 %2063, i64* %PC
  %2064 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2065 = bitcast i8* %2061 to double*
  store double %2064, double* %2065, align 1, !tbaa !2452
  %2066 = getelementptr inbounds i8, i8* %2061, i64 8
  %2067 = bitcast i8* %2066 to double*
  store double 0.000000e+00, double* %2067, align 1, !tbaa !2452
  %2068 = load i64, i64* %RBP
  %2069 = sub i64 %2068, 88
  %2070 = bitcast %union.vec128_t* %XMM1 to i8*
  %2071 = load i64, i64* %PC
  %2072 = add i64 %2071, 5
  store i64 %2072, i64* %PC
  %2073 = bitcast i8* %2070 to double*
  %2074 = load double, double* %2073, align 1
  %2075 = inttoptr i64 %2069 to double*
  store double %2074, double* %2075
  %2076 = load i64, i64* %PC
  %2077 = sub i64 %2076, 3619
  %2078 = load i64, i64* %PC
  %2079 = add i64 %2078, 5
  %2080 = load i64, i64* %PC
  %2081 = add i64 %2080, 5
  store i64 %2081, i64* %PC
  %2082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2083 = load i64, i64* %2082, align 8, !tbaa !2428
  %2084 = add i64 %2083, -8
  %2085 = inttoptr i64 %2084 to i64*
  store i64 %2079, i64* %2085
  store i64 %2084, i64* %2082, align 8, !tbaa !2428
  %2086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2077, i64* %2086, align 8, !tbaa !2428
  %2087 = load i64, i64* %PC
  %2088 = bitcast %struct.State** %state.i480 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2088)
  %2089 = bitcast i64* %curr_pc.i481 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2089)
  %2090 = bitcast %struct.Memory** %memory.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2090)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i483)
  %2091 = bitcast i64* %SS_BASE.i484 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2091)
  %2092 = bitcast i64* %ES_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2092)
  %2093 = bitcast i64* %DS_BASE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2093)
  %2094 = bitcast i64* %CS_BASE.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2094)
  %2095 = bitcast %struct.State** %STATE.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2095)
  %2096 = bitcast %struct.Memory** %MEMORY.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2096)
  %2097 = bitcast i64** %_DR0.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2097)
  %2098 = bitcast i64** %_DR1.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2098)
  %2099 = bitcast i64** %_DR2.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2099)
  %2100 = bitcast i64** %_DR3.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2100)
  %2101 = bitcast i64** %_DR4.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2101)
  %2102 = bitcast i64** %_DR5.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2102)
  %2103 = bitcast i64** %_DR6.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2103)
  %2104 = bitcast i64** %_DR7.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2104)
  %2105 = bitcast i64** %CR0.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2105)
  %2106 = bitcast i64** %CR1.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2106)
  %2107 = bitcast i64** %CR2.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2107)
  %2108 = bitcast i64** %CR3.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2108)
  %2109 = bitcast i64** %CR4.i502 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2109)
  %2110 = bitcast i64** %CR8.i503 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2110)
  store %struct.State* %0, %struct.State** %state.i480, align 8, !noalias !2482
  store i64 %2087, i64* %curr_pc.i481, align 8, !noalias !2482
  store %struct.Memory* %2011, %struct.Memory** %memory.i482, align 8, !noalias !2482
  store i8 0, i8* %BRANCH_TAKEN.i483, align 1, !noalias !2482
  store i64 0, i64* %SS_BASE.i484, align 8, !noalias !2482
  store i64 0, i64* %ES_BASE.i485, align 8, !noalias !2482
  store i64 0, i64* %DS_BASE.i486, align 8, !noalias !2482
  store i64 0, i64* %CS_BASE.i487, align 8, !noalias !2482
  store %struct.State* %0, %struct.State** %STATE.i488, align 8, !noalias !2482
  store %struct.Memory* %2011, %struct.Memory** %MEMORY.i489, align 8, !noalias !2482
  %2111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2112 = getelementptr inbounds %struct.GPR, %struct.GPR* %2111, i32 0, i32 33
  %2113 = getelementptr inbounds %struct.Reg, %struct.Reg* %2112, i32 0, i32 0
  %PC.i504 = bitcast %union.anon* %2113 to i64*
  store i64 %2087, i64* %PC.i504, align 8, !alias.scope !2486, !noalias !2487
  %2114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2115 = getelementptr inbounds %struct.GPR, %struct.GPR* %2114, i32 0, i32 1
  %2116 = getelementptr inbounds %struct.Reg, %struct.Reg* %2115, i32 0, i32 0
  %2117 = bitcast %union.anon* %2116 to %struct.anon.2*
  %AH.i505 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2117, i32 0, i32 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 3
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %2121 = bitcast %union.anon* %2120 to %struct.anon.2*
  %BH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2121, i32 0, i32 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2123 = getelementptr inbounds %struct.GPR, %struct.GPR* %2122, i32 0, i32 5
  %2124 = getelementptr inbounds %struct.Reg, %struct.Reg* %2123, i32 0, i32 0
  %2125 = bitcast %union.anon* %2124 to %struct.anon.2*
  %CH.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2125, i32 0, i32 1
  %2126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2127 = getelementptr inbounds %struct.GPR, %struct.GPR* %2126, i32 0, i32 7
  %2128 = getelementptr inbounds %struct.Reg, %struct.Reg* %2127, i32 0, i32 0
  %2129 = bitcast %union.anon* %2128 to %struct.anon.2*
  %DH.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2129, i32 0, i32 1
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2131 = getelementptr inbounds %struct.GPR, %struct.GPR* %2130, i32 0, i32 1
  %2132 = getelementptr inbounds %struct.Reg, %struct.Reg* %2131, i32 0, i32 0
  %2133 = bitcast %union.anon* %2132 to %struct.anon.2*
  %AL.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2133, i32 0, i32 0
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2135 = getelementptr inbounds %struct.GPR, %struct.GPR* %2134, i32 0, i32 3
  %2136 = getelementptr inbounds %struct.Reg, %struct.Reg* %2135, i32 0, i32 0
  %2137 = bitcast %union.anon* %2136 to %struct.anon.2*
  %BL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2137, i32 0, i32 0
  %2138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2139 = getelementptr inbounds %struct.GPR, %struct.GPR* %2138, i32 0, i32 5
  %2140 = getelementptr inbounds %struct.Reg, %struct.Reg* %2139, i32 0, i32 0
  %2141 = bitcast %union.anon* %2140 to %struct.anon.2*
  %CL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2141, i32 0, i32 0
  %2142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2143 = getelementptr inbounds %struct.GPR, %struct.GPR* %2142, i32 0, i32 7
  %2144 = getelementptr inbounds %struct.Reg, %struct.Reg* %2143, i32 0, i32 0
  %2145 = bitcast %union.anon* %2144 to %struct.anon.2*
  %DL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2145, i32 0, i32 0
  %2146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2147 = getelementptr inbounds %struct.GPR, %struct.GPR* %2146, i32 0, i32 9
  %2148 = getelementptr inbounds %struct.Reg, %struct.Reg* %2147, i32 0, i32 0
  %2149 = bitcast %union.anon* %2148 to %struct.anon.2*
  %SIL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2149, i32 0, i32 0
  %2150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2151 = getelementptr inbounds %struct.GPR, %struct.GPR* %2150, i32 0, i32 11
  %2152 = getelementptr inbounds %struct.Reg, %struct.Reg* %2151, i32 0, i32 0
  %2153 = bitcast %union.anon* %2152 to %struct.anon.2*
  %DIL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2153, i32 0, i32 0
  %2154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2155 = getelementptr inbounds %struct.GPR, %struct.GPR* %2154, i32 0, i32 13
  %2156 = getelementptr inbounds %struct.Reg, %struct.Reg* %2155, i32 0, i32 0
  %2157 = bitcast %union.anon* %2156 to %struct.anon.2*
  %SPL.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2157, i32 0, i32 0
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2159 = getelementptr inbounds %struct.GPR, %struct.GPR* %2158, i32 0, i32 15
  %2160 = getelementptr inbounds %struct.Reg, %struct.Reg* %2159, i32 0, i32 0
  %2161 = bitcast %union.anon* %2160 to %struct.anon.2*
  %BPL.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2161, i32 0, i32 0
  %2162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2163 = getelementptr inbounds %struct.GPR, %struct.GPR* %2162, i32 0, i32 17
  %2164 = getelementptr inbounds %struct.Reg, %struct.Reg* %2163, i32 0, i32 0
  %2165 = bitcast %union.anon* %2164 to %struct.anon.2*
  %R8B.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2165, i32 0, i32 0
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2167 = getelementptr inbounds %struct.GPR, %struct.GPR* %2166, i32 0, i32 19
  %2168 = getelementptr inbounds %struct.Reg, %struct.Reg* %2167, i32 0, i32 0
  %2169 = bitcast %union.anon* %2168 to %struct.anon.2*
  %R9B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2169, i32 0, i32 0
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2171 = getelementptr inbounds %struct.GPR, %struct.GPR* %2170, i32 0, i32 21
  %2172 = getelementptr inbounds %struct.Reg, %struct.Reg* %2171, i32 0, i32 0
  %2173 = bitcast %union.anon* %2172 to %struct.anon.2*
  %R10B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2173, i32 0, i32 0
  %2174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2175 = getelementptr inbounds %struct.GPR, %struct.GPR* %2174, i32 0, i32 23
  %2176 = getelementptr inbounds %struct.Reg, %struct.Reg* %2175, i32 0, i32 0
  %2177 = bitcast %union.anon* %2176 to %struct.anon.2*
  %R11B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2177, i32 0, i32 0
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2179 = getelementptr inbounds %struct.GPR, %struct.GPR* %2178, i32 0, i32 25
  %2180 = getelementptr inbounds %struct.Reg, %struct.Reg* %2179, i32 0, i32 0
  %2181 = bitcast %union.anon* %2180 to %struct.anon.2*
  %R12B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2181, i32 0, i32 0
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 27
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %2185 = bitcast %union.anon* %2184 to %struct.anon.2*
  %R13B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2185, i32 0, i32 0
  %2186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2187 = getelementptr inbounds %struct.GPR, %struct.GPR* %2186, i32 0, i32 29
  %2188 = getelementptr inbounds %struct.Reg, %struct.Reg* %2187, i32 0, i32 0
  %2189 = bitcast %union.anon* %2188 to %struct.anon.2*
  %R14B.i523 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2189, i32 0, i32 0
  %2190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2191 = getelementptr inbounds %struct.GPR, %struct.GPR* %2190, i32 0, i32 31
  %2192 = getelementptr inbounds %struct.Reg, %struct.Reg* %2191, i32 0, i32 0
  %2193 = bitcast %union.anon* %2192 to %struct.anon.2*
  %R15B.i524 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2193, i32 0, i32 0
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 1
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %AX.i525 = bitcast %union.anon* %2196 to i16*
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2198 = getelementptr inbounds %struct.GPR, %struct.GPR* %2197, i32 0, i32 3
  %2199 = getelementptr inbounds %struct.Reg, %struct.Reg* %2198, i32 0, i32 0
  %BX.i526 = bitcast %union.anon* %2199 to i16*
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2201 = getelementptr inbounds %struct.GPR, %struct.GPR* %2200, i32 0, i32 5
  %2202 = getelementptr inbounds %struct.Reg, %struct.Reg* %2201, i32 0, i32 0
  %CX.i527 = bitcast %union.anon* %2202 to i16*
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2204 = getelementptr inbounds %struct.GPR, %struct.GPR* %2203, i32 0, i32 7
  %2205 = getelementptr inbounds %struct.Reg, %struct.Reg* %2204, i32 0, i32 0
  %DX.i528 = bitcast %union.anon* %2205 to i16*
  %2206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2207 = getelementptr inbounds %struct.GPR, %struct.GPR* %2206, i32 0, i32 9
  %2208 = getelementptr inbounds %struct.Reg, %struct.Reg* %2207, i32 0, i32 0
  %SI.i529 = bitcast %union.anon* %2208 to i16*
  %2209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2210 = getelementptr inbounds %struct.GPR, %struct.GPR* %2209, i32 0, i32 11
  %2211 = getelementptr inbounds %struct.Reg, %struct.Reg* %2210, i32 0, i32 0
  %DI.i530 = bitcast %union.anon* %2211 to i16*
  %2212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2213 = getelementptr inbounds %struct.GPR, %struct.GPR* %2212, i32 0, i32 13
  %2214 = getelementptr inbounds %struct.Reg, %struct.Reg* %2213, i32 0, i32 0
  %SP.i531 = bitcast %union.anon* %2214 to i16*
  %2215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2216 = getelementptr inbounds %struct.GPR, %struct.GPR* %2215, i32 0, i32 15
  %2217 = getelementptr inbounds %struct.Reg, %struct.Reg* %2216, i32 0, i32 0
  %BP.i532 = bitcast %union.anon* %2217 to i16*
  %2218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2219 = getelementptr inbounds %struct.GPR, %struct.GPR* %2218, i32 0, i32 17
  %2220 = getelementptr inbounds %struct.Reg, %struct.Reg* %2219, i32 0, i32 0
  %R8W.i533 = bitcast %union.anon* %2220 to i16*
  %2221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2222 = getelementptr inbounds %struct.GPR, %struct.GPR* %2221, i32 0, i32 19
  %2223 = getelementptr inbounds %struct.Reg, %struct.Reg* %2222, i32 0, i32 0
  %R9W.i534 = bitcast %union.anon* %2223 to i16*
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2225 = getelementptr inbounds %struct.GPR, %struct.GPR* %2224, i32 0, i32 21
  %2226 = getelementptr inbounds %struct.Reg, %struct.Reg* %2225, i32 0, i32 0
  %R10W.i535 = bitcast %union.anon* %2226 to i16*
  %2227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2228 = getelementptr inbounds %struct.GPR, %struct.GPR* %2227, i32 0, i32 23
  %2229 = getelementptr inbounds %struct.Reg, %struct.Reg* %2228, i32 0, i32 0
  %R11W.i536 = bitcast %union.anon* %2229 to i16*
  %2230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2231 = getelementptr inbounds %struct.GPR, %struct.GPR* %2230, i32 0, i32 25
  %2232 = getelementptr inbounds %struct.Reg, %struct.Reg* %2231, i32 0, i32 0
  %R12W.i537 = bitcast %union.anon* %2232 to i16*
  %2233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2234 = getelementptr inbounds %struct.GPR, %struct.GPR* %2233, i32 0, i32 27
  %2235 = getelementptr inbounds %struct.Reg, %struct.Reg* %2234, i32 0, i32 0
  %R13W.i538 = bitcast %union.anon* %2235 to i16*
  %2236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2237 = getelementptr inbounds %struct.GPR, %struct.GPR* %2236, i32 0, i32 29
  %2238 = getelementptr inbounds %struct.Reg, %struct.Reg* %2237, i32 0, i32 0
  %R14W.i539 = bitcast %union.anon* %2238 to i16*
  %2239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2240 = getelementptr inbounds %struct.GPR, %struct.GPR* %2239, i32 0, i32 31
  %2241 = getelementptr inbounds %struct.Reg, %struct.Reg* %2240, i32 0, i32 0
  %R15W.i540 = bitcast %union.anon* %2241 to i16*
  %2242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2243 = getelementptr inbounds %struct.GPR, %struct.GPR* %2242, i32 0, i32 33
  %2244 = getelementptr inbounds %struct.Reg, %struct.Reg* %2243, i32 0, i32 0
  %IP.i541 = bitcast %union.anon* %2244 to i16*
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 1
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %EAX.i542 = bitcast %union.anon* %2247 to i32*
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 3
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %EBX.i543 = bitcast %union.anon* %2250 to i32*
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2252 = getelementptr inbounds %struct.GPR, %struct.GPR* %2251, i32 0, i32 5
  %2253 = getelementptr inbounds %struct.Reg, %struct.Reg* %2252, i32 0, i32 0
  %ECX.i544 = bitcast %union.anon* %2253 to i32*
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2255 = getelementptr inbounds %struct.GPR, %struct.GPR* %2254, i32 0, i32 7
  %2256 = getelementptr inbounds %struct.Reg, %struct.Reg* %2255, i32 0, i32 0
  %EDX.i545 = bitcast %union.anon* %2256 to i32*
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2258 = getelementptr inbounds %struct.GPR, %struct.GPR* %2257, i32 0, i32 9
  %2259 = getelementptr inbounds %struct.Reg, %struct.Reg* %2258, i32 0, i32 0
  %ESI.i546 = bitcast %union.anon* %2259 to i32*
  %2260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2261 = getelementptr inbounds %struct.GPR, %struct.GPR* %2260, i32 0, i32 11
  %2262 = getelementptr inbounds %struct.Reg, %struct.Reg* %2261, i32 0, i32 0
  %EDI.i547 = bitcast %union.anon* %2262 to i32*
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2264 = getelementptr inbounds %struct.GPR, %struct.GPR* %2263, i32 0, i32 13
  %2265 = getelementptr inbounds %struct.Reg, %struct.Reg* %2264, i32 0, i32 0
  %ESP.i548 = bitcast %union.anon* %2265 to i32*
  %2266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2267 = getelementptr inbounds %struct.GPR, %struct.GPR* %2266, i32 0, i32 15
  %2268 = getelementptr inbounds %struct.Reg, %struct.Reg* %2267, i32 0, i32 0
  %EBP.i549 = bitcast %union.anon* %2268 to i32*
  %2269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2270 = getelementptr inbounds %struct.GPR, %struct.GPR* %2269, i32 0, i32 33
  %2271 = getelementptr inbounds %struct.Reg, %struct.Reg* %2270, i32 0, i32 0
  %EIP.i550 = bitcast %union.anon* %2271 to i32*
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2273 = getelementptr inbounds %struct.GPR, %struct.GPR* %2272, i32 0, i32 17
  %2274 = getelementptr inbounds %struct.Reg, %struct.Reg* %2273, i32 0, i32 0
  %R8D.i551 = bitcast %union.anon* %2274 to i32*
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2276 = getelementptr inbounds %struct.GPR, %struct.GPR* %2275, i32 0, i32 19
  %2277 = getelementptr inbounds %struct.Reg, %struct.Reg* %2276, i32 0, i32 0
  %R9D.i552 = bitcast %union.anon* %2277 to i32*
  %2278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2279 = getelementptr inbounds %struct.GPR, %struct.GPR* %2278, i32 0, i32 21
  %2280 = getelementptr inbounds %struct.Reg, %struct.Reg* %2279, i32 0, i32 0
  %R10D.i553 = bitcast %union.anon* %2280 to i32*
  %2281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2282 = getelementptr inbounds %struct.GPR, %struct.GPR* %2281, i32 0, i32 23
  %2283 = getelementptr inbounds %struct.Reg, %struct.Reg* %2282, i32 0, i32 0
  %R11D.i554 = bitcast %union.anon* %2283 to i32*
  %2284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2285 = getelementptr inbounds %struct.GPR, %struct.GPR* %2284, i32 0, i32 25
  %2286 = getelementptr inbounds %struct.Reg, %struct.Reg* %2285, i32 0, i32 0
  %R12D.i555 = bitcast %union.anon* %2286 to i32*
  %2287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2288 = getelementptr inbounds %struct.GPR, %struct.GPR* %2287, i32 0, i32 27
  %2289 = getelementptr inbounds %struct.Reg, %struct.Reg* %2288, i32 0, i32 0
  %R13D.i556 = bitcast %union.anon* %2289 to i32*
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2291 = getelementptr inbounds %struct.GPR, %struct.GPR* %2290, i32 0, i32 29
  %2292 = getelementptr inbounds %struct.Reg, %struct.Reg* %2291, i32 0, i32 0
  %R14D.i557 = bitcast %union.anon* %2292 to i32*
  %2293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2294 = getelementptr inbounds %struct.GPR, %struct.GPR* %2293, i32 0, i32 31
  %2295 = getelementptr inbounds %struct.Reg, %struct.Reg* %2294, i32 0, i32 0
  %R15D.i558 = bitcast %union.anon* %2295 to i32*
  %2296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2297 = getelementptr inbounds %struct.GPR, %struct.GPR* %2296, i32 0, i32 1
  %2298 = getelementptr inbounds %struct.Reg, %struct.Reg* %2297, i32 0, i32 0
  %RAX.i559 = bitcast %union.anon* %2298 to i64*
  %2299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2300 = getelementptr inbounds %struct.GPR, %struct.GPR* %2299, i32 0, i32 3
  %2301 = getelementptr inbounds %struct.Reg, %struct.Reg* %2300, i32 0, i32 0
  %RBX.i560 = bitcast %union.anon* %2301 to i64*
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2303 = getelementptr inbounds %struct.GPR, %struct.GPR* %2302, i32 0, i32 5
  %2304 = getelementptr inbounds %struct.Reg, %struct.Reg* %2303, i32 0, i32 0
  %RCX.i561 = bitcast %union.anon* %2304 to i64*
  %2305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2306 = getelementptr inbounds %struct.GPR, %struct.GPR* %2305, i32 0, i32 7
  %2307 = getelementptr inbounds %struct.Reg, %struct.Reg* %2306, i32 0, i32 0
  %RDX.i562 = bitcast %union.anon* %2307 to i64*
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2309 = getelementptr inbounds %struct.GPR, %struct.GPR* %2308, i32 0, i32 9
  %2310 = getelementptr inbounds %struct.Reg, %struct.Reg* %2309, i32 0, i32 0
  %RSI.i563 = bitcast %union.anon* %2310 to i64*
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2312 = getelementptr inbounds %struct.GPR, %struct.GPR* %2311, i32 0, i32 11
  %2313 = getelementptr inbounds %struct.Reg, %struct.Reg* %2312, i32 0, i32 0
  %RDI.i564 = bitcast %union.anon* %2313 to i64*
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2315 = getelementptr inbounds %struct.GPR, %struct.GPR* %2314, i32 0, i32 13
  %2316 = getelementptr inbounds %struct.Reg, %struct.Reg* %2315, i32 0, i32 0
  %RSP.i565 = bitcast %union.anon* %2316 to i64*
  %2317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2318 = getelementptr inbounds %struct.GPR, %struct.GPR* %2317, i32 0, i32 15
  %2319 = getelementptr inbounds %struct.Reg, %struct.Reg* %2318, i32 0, i32 0
  %RBP.i566 = bitcast %union.anon* %2319 to i64*
  %2320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2321 = getelementptr inbounds %struct.GPR, %struct.GPR* %2320, i32 0, i32 17
  %2322 = getelementptr inbounds %struct.Reg, %struct.Reg* %2321, i32 0, i32 0
  %R8.i567 = bitcast %union.anon* %2322 to i64*
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 19
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %R9.i568 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 21
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %R10.i569 = bitcast %union.anon* %2328 to i64*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 23
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %R11.i570 = bitcast %union.anon* %2331 to i64*
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2333 = getelementptr inbounds %struct.GPR, %struct.GPR* %2332, i32 0, i32 25
  %2334 = getelementptr inbounds %struct.Reg, %struct.Reg* %2333, i32 0, i32 0
  %R12.i571 = bitcast %union.anon* %2334 to i64*
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2336 = getelementptr inbounds %struct.GPR, %struct.GPR* %2335, i32 0, i32 27
  %2337 = getelementptr inbounds %struct.Reg, %struct.Reg* %2336, i32 0, i32 0
  %R13.i572 = bitcast %union.anon* %2337 to i64*
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2339 = getelementptr inbounds %struct.GPR, %struct.GPR* %2338, i32 0, i32 29
  %2340 = getelementptr inbounds %struct.Reg, %struct.Reg* %2339, i32 0, i32 0
  %R14.i573 = bitcast %union.anon* %2340 to i64*
  %2341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2342 = getelementptr inbounds %struct.GPR, %struct.GPR* %2341, i32 0, i32 31
  %2343 = getelementptr inbounds %struct.Reg, %struct.Reg* %2342, i32 0, i32 0
  %R15.i574 = bitcast %union.anon* %2343 to i64*
  %2344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2345 = getelementptr inbounds %struct.GPR, %struct.GPR* %2344, i32 0, i32 33
  %2346 = getelementptr inbounds %struct.Reg, %struct.Reg* %2345, i32 0, i32 0
  %RIP.i575 = bitcast %union.anon* %2346 to i64*
  %2347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2348 = getelementptr inbounds %struct.Segments, %struct.Segments* %2347, i32 0, i32 1
  %SS.i576 = bitcast %union.SegmentSelector* %2348 to i16*
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2350 = getelementptr inbounds %struct.Segments, %struct.Segments* %2349, i32 0, i32 3
  %ES.i577 = bitcast %union.SegmentSelector* %2350 to i16*
  %2351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2352 = getelementptr inbounds %struct.Segments, %struct.Segments* %2351, i32 0, i32 5
  %GS.i578 = bitcast %union.SegmentSelector* %2352 to i16*
  %2353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2354 = getelementptr inbounds %struct.Segments, %struct.Segments* %2353, i32 0, i32 7
  %FS.i579 = bitcast %union.SegmentSelector* %2354 to i16*
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2356 = getelementptr inbounds %struct.Segments, %struct.Segments* %2355, i32 0, i32 9
  %DS.i580 = bitcast %union.SegmentSelector* %2356 to i16*
  %2357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2358 = getelementptr inbounds %struct.Segments, %struct.Segments* %2357, i32 0, i32 11
  %CS.i581 = bitcast %union.SegmentSelector* %2358 to i16*
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2360 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2359, i32 0, i32 5
  %2361 = getelementptr inbounds %struct.Reg, %struct.Reg* %2360, i32 0, i32 0
  %GS_BASE.i582 = bitcast %union.anon* %2361 to i64*
  %2362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2363 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2362, i32 0, i32 7
  %2364 = getelementptr inbounds %struct.Reg, %struct.Reg* %2363, i32 0, i32 0
  %FS_BASE.i583 = bitcast %union.anon* %2364 to i64*
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2365, i64 0, i64 0
  %YMM0.i584 = bitcast %union.VectorReg* %2366 to %"class.std::bitset"*
  %2367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2368 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2367, i64 0, i64 1
  %YMM1.i585 = bitcast %union.VectorReg* %2368 to %"class.std::bitset"*
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2369, i64 0, i64 2
  %YMM2.i586 = bitcast %union.VectorReg* %2370 to %"class.std::bitset"*
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2371, i64 0, i64 3
  %YMM3.i587 = bitcast %union.VectorReg* %2372 to %"class.std::bitset"*
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2374 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2373, i64 0, i64 4
  %YMM4.i588 = bitcast %union.VectorReg* %2374 to %"class.std::bitset"*
  %2375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2375, i64 0, i64 5
  %YMM5.i589 = bitcast %union.VectorReg* %2376 to %"class.std::bitset"*
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2378 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2377, i64 0, i64 6
  %YMM6.i590 = bitcast %union.VectorReg* %2378 to %"class.std::bitset"*
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2380 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2379, i64 0, i64 7
  %YMM7.i591 = bitcast %union.VectorReg* %2380 to %"class.std::bitset"*
  %2381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2382 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2381, i64 0, i64 8
  %YMM8.i592 = bitcast %union.VectorReg* %2382 to %"class.std::bitset"*
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2383, i64 0, i64 9
  %YMM9.i593 = bitcast %union.VectorReg* %2384 to %"class.std::bitset"*
  %2385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2386 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2385, i64 0, i64 10
  %YMM10.i594 = bitcast %union.VectorReg* %2386 to %"class.std::bitset"*
  %2387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2387, i64 0, i64 11
  %YMM11.i595 = bitcast %union.VectorReg* %2388 to %"class.std::bitset"*
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2389, i64 0, i64 12
  %YMM12.i596 = bitcast %union.VectorReg* %2390 to %"class.std::bitset"*
  %2391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2391, i64 0, i64 13
  %YMM13.i597 = bitcast %union.VectorReg* %2392 to %"class.std::bitset"*
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2394 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2393, i64 0, i64 14
  %YMM14.i598 = bitcast %union.VectorReg* %2394 to %"class.std::bitset"*
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2395, i64 0, i64 15
  %YMM15.i599 = bitcast %union.VectorReg* %2396 to %"class.std::bitset"*
  %2397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2397, i64 0, i64 0
  %XMM0.i600 = bitcast %union.VectorReg* %2398 to %union.vec128_t*
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2400 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2399, i64 0, i64 1
  %XMM1.i601 = bitcast %union.VectorReg* %2400 to %union.vec128_t*
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2401, i64 0, i64 2
  %XMM2.i602 = bitcast %union.VectorReg* %2402 to %union.vec128_t*
  %2403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2403, i64 0, i64 3
  %XMM3.i603 = bitcast %union.VectorReg* %2404 to %union.vec128_t*
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2405, i64 0, i64 4
  %XMM4.i604 = bitcast %union.VectorReg* %2406 to %union.vec128_t*
  %2407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2407, i64 0, i64 5
  %XMM5.i605 = bitcast %union.VectorReg* %2408 to %union.vec128_t*
  %2409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2410 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2409, i64 0, i64 6
  %XMM6.i606 = bitcast %union.VectorReg* %2410 to %union.vec128_t*
  %2411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2412 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2411, i64 0, i64 7
  %XMM7.i607 = bitcast %union.VectorReg* %2412 to %union.vec128_t*
  %2413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2414 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2413, i64 0, i64 8
  %XMM8.i608 = bitcast %union.VectorReg* %2414 to %union.vec128_t*
  %2415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2415, i64 0, i64 9
  %XMM9.i609 = bitcast %union.VectorReg* %2416 to %union.vec128_t*
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2418 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2417, i64 0, i64 10
  %XMM10.i610 = bitcast %union.VectorReg* %2418 to %union.vec128_t*
  %2419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2419, i64 0, i64 11
  %XMM11.i611 = bitcast %union.VectorReg* %2420 to %union.vec128_t*
  %2421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2421, i64 0, i64 12
  %XMM12.i612 = bitcast %union.VectorReg* %2422 to %union.vec128_t*
  %2423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2424 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2423, i64 0, i64 13
  %XMM13.i613 = bitcast %union.VectorReg* %2424 to %union.vec128_t*
  %2425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2426 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2425, i64 0, i64 14
  %XMM14.i614 = bitcast %union.VectorReg* %2426 to %union.vec128_t*
  %2427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2428 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2427, i64 0, i64 15
  %XMM15.i615 = bitcast %union.VectorReg* %2428 to %union.vec128_t*
  %2429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2430 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2429, i32 0, i32 0
  %2431 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2430, i64 0, i64 0
  %ST0.i616 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2431, i32 0, i32 1
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2433 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2432, i32 0, i32 0
  %2434 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2433, i64 0, i64 1
  %ST1.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2434, i32 0, i32 1
  %2435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2436 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2435, i32 0, i32 0
  %2437 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2436, i64 0, i64 2
  %ST2.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2437, i32 0, i32 1
  %2438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2439 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2438, i32 0, i32 0
  %2440 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2439, i64 0, i64 3
  %ST3.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2440, i32 0, i32 1
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2442 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2441, i32 0, i32 0
  %2443 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2442, i64 0, i64 4
  %ST4.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2443, i32 0, i32 1
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2445 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2444, i32 0, i32 0
  %2446 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2445, i64 0, i64 5
  %ST5.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2446, i32 0, i32 1
  %2447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2448 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2447, i32 0, i32 0
  %2449 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2448, i64 0, i64 6
  %ST6.i622 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2449, i32 0, i32 1
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2451 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2450, i32 0, i32 0
  %2452 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2451, i64 0, i64 7
  %ST7.i623 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2452, i32 0, i32 1
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2454 = getelementptr inbounds %struct.MMX, %struct.MMX* %2453, i32 0, i32 0
  %2455 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2454, i64 0, i64 0
  %2456 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2455, i32 0, i32 1
  %2457 = bitcast %union.vec64_t* %2456 to %struct.uint64v1_t*
  %2458 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2457, i32 0, i32 0
  %MM0.i624 = getelementptr inbounds [1 x i64], [1 x i64]* %2458, i64 0, i64 0
  %2459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2460 = getelementptr inbounds %struct.MMX, %struct.MMX* %2459, i32 0, i32 0
  %2461 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2460, i64 0, i64 1
  %2462 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2461, i32 0, i32 1
  %2463 = bitcast %union.vec64_t* %2462 to %struct.uint64v1_t*
  %2464 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2463, i32 0, i32 0
  %MM1.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %2464, i64 0, i64 0
  %2465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2466 = getelementptr inbounds %struct.MMX, %struct.MMX* %2465, i32 0, i32 0
  %2467 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2466, i64 0, i64 2
  %2468 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2467, i32 0, i32 1
  %2469 = bitcast %union.vec64_t* %2468 to %struct.uint64v1_t*
  %2470 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2469, i32 0, i32 0
  %MM2.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %2470, i64 0, i64 0
  %2471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2472 = getelementptr inbounds %struct.MMX, %struct.MMX* %2471, i32 0, i32 0
  %2473 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2472, i64 0, i64 3
  %2474 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2473, i32 0, i32 1
  %2475 = bitcast %union.vec64_t* %2474 to %struct.uint64v1_t*
  %2476 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2475, i32 0, i32 0
  %MM3.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %2476, i64 0, i64 0
  %2477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2478 = getelementptr inbounds %struct.MMX, %struct.MMX* %2477, i32 0, i32 0
  %2479 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2478, i64 0, i64 4
  %2480 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2479, i32 0, i32 1
  %2481 = bitcast %union.vec64_t* %2480 to %struct.uint64v1_t*
  %2482 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2481, i32 0, i32 0
  %MM4.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %2482, i64 0, i64 0
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2484 = getelementptr inbounds %struct.MMX, %struct.MMX* %2483, i32 0, i32 0
  %2485 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2484, i64 0, i64 5
  %2486 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2485, i32 0, i32 1
  %2487 = bitcast %union.vec64_t* %2486 to %struct.uint64v1_t*
  %2488 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2487, i32 0, i32 0
  %MM5.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %2488, i64 0, i64 0
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2490 = getelementptr inbounds %struct.MMX, %struct.MMX* %2489, i32 0, i32 0
  %2491 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2490, i64 0, i64 6
  %2492 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2491, i32 0, i32 1
  %2493 = bitcast %union.vec64_t* %2492 to %struct.uint64v1_t*
  %2494 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2493, i32 0, i32 0
  %MM6.i630 = getelementptr inbounds [1 x i64], [1 x i64]* %2494, i64 0, i64 0
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2496 = getelementptr inbounds %struct.MMX, %struct.MMX* %2495, i32 0, i32 0
  %2497 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2496, i64 0, i64 7
  %2498 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2497, i32 0, i32 1
  %2499 = bitcast %union.vec64_t* %2498 to %struct.uint64v1_t*
  %2500 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2499, i32 0, i32 0
  %MM7.i631 = getelementptr inbounds [1 x i64], [1 x i64]* %2500, i64 0, i64 0
  %2501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i632 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2501, i32 0, i32 5
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2502, i32 0, i32 1
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2503, i32 0, i32 11
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2504, i32 0, i32 13
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2505, i32 0, i32 3
  %2506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i637 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2506, i32 0, i32 9
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i638 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2507, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i490, align 8, !noalias !2482
  store i64* @DR1, i64** %_DR1.i491, align 8, !noalias !2482
  store i64* @DR2, i64** %_DR2.i492, align 8, !noalias !2482
  store i64* @DR3, i64** %_DR3.i493, align 8, !noalias !2482
  store i64* @DR4, i64** %_DR4.i494, align 8, !noalias !2482
  store i64* @DR5, i64** %_DR5.i495, align 8, !noalias !2482
  store i64* @DR6, i64** %_DR6.i496, align 8, !noalias !2482
  store i64* @DR7, i64** %_DR7.i497, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i498, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i499, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i500, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i501, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i502, align 8, !noalias !2482
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i503, align 8, !noalias !2482
  %2508 = bitcast %"class.std::bitset"* %YMM0.i584 to double*
  %2509 = load double, double* %2508, !alias.scope !2486, !noalias !2487
  %2510 = load i64, i64* %RSP.i565, !alias.scope !2486, !noalias !2487
  %2511 = load %struct.Memory*, %struct.Memory** %MEMORY.i489, !noalias !2482
  %2512 = inttoptr i64 %2510 to i64*
  %2513 = load i64, i64* %2512
  store i64 %2513, i64* %PC.i504, !alias.scope !2486, !noalias !2487
  %2514 = add i64 %2510, 8
  store i64 %2514, i64* %RSP.i565, !alias.scope !2486, !noalias !2487
  %2515 = call double @tan(double %2509)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i584, !alias.scope !2486, !noalias !2487
  %2516 = bitcast %"class.std::bitset"* %YMM0.i584 to double*
  store double %2515, double* %2516, !alias.scope !2486, !noalias !2487
  %2517 = load %struct.Memory*, %struct.Memory** %MEMORY.i489, !noalias !2482
  %2518 = bitcast %struct.State** %state.i480 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2518)
  %2519 = bitcast i64* %curr_pc.i481 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2519)
  %2520 = bitcast %struct.Memory** %memory.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2520)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i483)
  %2521 = bitcast i64* %SS_BASE.i484 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2521)
  %2522 = bitcast i64* %ES_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2522)
  %2523 = bitcast i64* %DS_BASE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2523)
  %2524 = bitcast i64* %CS_BASE.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2524)
  %2525 = bitcast %struct.State** %STATE.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2525)
  %2526 = bitcast %struct.Memory** %MEMORY.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2526)
  %2527 = bitcast i64** %_DR0.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2527)
  %2528 = bitcast i64** %_DR1.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2528)
  %2529 = bitcast i64** %_DR2.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2529)
  %2530 = bitcast i64** %_DR3.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2530)
  %2531 = bitcast i64** %_DR4.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2531)
  %2532 = bitcast i64** %_DR5.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2532)
  %2533 = bitcast i64** %_DR6.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2533)
  %2534 = bitcast i64** %_DR7.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2534)
  %2535 = bitcast i64** %CR0.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2535)
  %2536 = bitcast i64** %CR1.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2536)
  %2537 = bitcast i64** %CR2.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2537)
  %2538 = bitcast i64** %CR3.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2538)
  %2539 = bitcast i64** %CR4.i502 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2539)
  %2540 = bitcast i64** %CR8.i503 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2540)
  %2541 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2542 = load i64, i64* %PC
  %2543 = add i64 %2542, 8
  store i64 %2543, i64* %PC
  %2544 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 104) to double*)
  %2545 = bitcast i8* %2541 to double*
  store double %2544, double* %2545, align 1, !tbaa !2452
  %2546 = getelementptr inbounds i8, i8* %2541, i64 8
  %2547 = bitcast i8* %2546 to double*
  store double 0.000000e+00, double* %2547, align 1, !tbaa !2452
  %2548 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2549 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2550 = bitcast %union.vec128_t* %XMM0 to i8*
  %2551 = load i64, i64* %PC
  %2552 = add i64 %2551, 4
  store i64 %2552, i64* %PC
  %2553 = bitcast i8* %2549 to double*
  %2554 = load double, double* %2553, align 1
  %2555 = getelementptr inbounds i8, i8* %2549, i64 8
  %2556 = bitcast i8* %2555 to i64*
  %2557 = load i64, i64* %2556, align 1
  %2558 = bitcast i8* %2550 to double*
  %2559 = load double, double* %2558, align 1
  %2560 = fdiv double %2554, %2559
  %2561 = bitcast i8* %2548 to double*
  store double %2560, double* %2561, align 1, !tbaa !2452
  %2562 = getelementptr inbounds i8, i8* %2548, i64 8
  %2563 = bitcast i8* %2562 to i64*
  store i64 %2557, i64* %2563, align 1, !tbaa !2452
  %2564 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2565 = load i64, i64* %RBP
  %2566 = sub i64 %2565, 88
  %2567 = load i64, i64* %PC
  %2568 = add i64 %2567, 5
  store i64 %2568, i64* %PC
  %2569 = inttoptr i64 %2566 to double*
  %2570 = load double, double* %2569
  %2571 = bitcast i8* %2564 to double*
  store double %2570, double* %2571, align 1, !tbaa !2452
  %2572 = getelementptr inbounds i8, i8* %2564, i64 8
  %2573 = bitcast i8* %2572 to double*
  store double 0.000000e+00, double* %2573, align 1, !tbaa !2452
  %2574 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2575 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2576 = bitcast %union.vec128_t* %XMM1 to i8*
  %2577 = load i64, i64* %PC
  %2578 = add i64 %2577, 4
  store i64 %2578, i64* %PC
  %2579 = bitcast i8* %2575 to double*
  %2580 = load double, double* %2579, align 1
  %2581 = getelementptr inbounds i8, i8* %2575, i64 8
  %2582 = bitcast i8* %2581 to i64*
  %2583 = load i64, i64* %2582, align 1
  %2584 = bitcast i8* %2576 to double*
  %2585 = load double, double* %2584, align 1
  %2586 = fmul double %2580, %2585
  %2587 = bitcast i8* %2574 to double*
  store double %2586, double* %2587, align 1, !tbaa !2452
  %2588 = getelementptr inbounds i8, i8* %2574, i64 8
  %2589 = bitcast i8* %2588 to i64*
  store i64 %2583, i64* %2589, align 1, !tbaa !2452
  %2590 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2591 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2592 = load i64, i64* %RBP
  %2593 = sub i64 %2592, 48
  %2594 = load i64, i64* %PC
  %2595 = add i64 %2594, 5
  store i64 %2595, i64* %PC
  %2596 = bitcast i8* %2591 to double*
  %2597 = load double, double* %2596, align 1
  %2598 = getelementptr inbounds i8, i8* %2591, i64 8
  %2599 = bitcast i8* %2598 to i64*
  %2600 = load i64, i64* %2599, align 1
  %2601 = inttoptr i64 %2593 to double*
  %2602 = load double, double* %2601
  %2603 = fadd double %2597, %2602
  %2604 = bitcast i8* %2590 to double*
  store double %2603, double* %2604, align 1, !tbaa !2452
  %2605 = getelementptr inbounds i8, i8* %2590, i64 8
  %2606 = bitcast i8* %2605 to i64*
  store i64 %2600, i64* %2606, align 1, !tbaa !2452
  %2607 = bitcast %union.vec128_t* %XMM0 to i8*
  %2608 = load i64, i64* %PC
  %2609 = add i64 %2608, 9
  store i64 %2609, i64* %PC
  %2610 = bitcast i8* %2607 to double*
  %2611 = load double, double* %2610, align 1
  store double %2611, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2612 = load i64, i64* %PC
  %2613 = add i64 %2612, 266
  %2614 = load i64, i64* %PC
  %2615 = add i64 %2614, 5
  store i64 %2615, i64* %PC
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2613, i64* %2616, align 8, !tbaa !2428
  br label %block_401525

block_40128c:                                     ; preds = %block_401281, %block_40126b
  %MEMORY.5 = phi %struct.Memory* [ %184, %block_40126b ], [ %184, %block_401281 ]
  %2617 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2618 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2619 = bitcast %union.vec128_t* %XMM0 to i8*
  %2620 = load i64, i64* %PC
  %2621 = add i64 %2620, 3
  store i64 %2621, i64* %PC
  %2622 = bitcast i8* %2618 to i64*
  %2623 = load i64, i64* %2622, align 1
  %2624 = getelementptr inbounds i8, i8* %2618, i64 8
  %2625 = bitcast i8* %2624 to i64*
  %2626 = load i64, i64* %2625, align 1
  %2627 = bitcast i8* %2619 to i64*
  %2628 = load i64, i64* %2627, align 1
  %2629 = getelementptr inbounds i8, i8* %2619, i64 8
  %2630 = bitcast i8* %2629 to i64*
  %2631 = load i64, i64* %2630, align 1
  %2632 = xor i64 %2628, %2623
  %2633 = xor i64 %2631, %2626
  %2634 = trunc i64 %2632 to i32
  %2635 = lshr i64 %2632, 32
  %2636 = trunc i64 %2635 to i32
  %2637 = bitcast i8* %2617 to i32*
  store i32 %2634, i32* %2637, align 1, !tbaa !2469
  %2638 = getelementptr inbounds i8, i8* %2617, i64 4
  %2639 = bitcast i8* %2638 to i32*
  store i32 %2636, i32* %2639, align 1, !tbaa !2469
  %2640 = trunc i64 %2633 to i32
  %2641 = getelementptr inbounds i8, i8* %2617, i64 8
  %2642 = bitcast i8* %2641 to i32*
  store i32 %2640, i32* %2642, align 1, !tbaa !2469
  %2643 = lshr i64 %2633, 32
  %2644 = trunc i64 %2643 to i32
  %2645 = getelementptr inbounds i8, i8* %2617, i64 12
  %2646 = bitcast i8* %2645 to i32*
  store i32 %2644, i32* %2646, align 1, !tbaa !2469
  %2647 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2648 = load i64, i64* %PC
  %2649 = add i64 %2648, 9
  store i64 %2649, i64* %PC
  %2650 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2651 = bitcast i8* %2647 to double*
  store double %2650, double* %2651, align 1, !tbaa !2452
  %2652 = getelementptr inbounds i8, i8* %2647, i64 8
  %2653 = bitcast i8* %2652 to double*
  store double 0.000000e+00, double* %2653, align 1, !tbaa !2452
  %2654 = bitcast %union.vec128_t* %XMM1 to i8*
  %2655 = bitcast %union.vec128_t* %XMM0 to i8*
  %2656 = load i64, i64* %PC
  %2657 = add i64 %2656, 4
  store i64 %2657, i64* %PC
  %2658 = bitcast i8* %2654 to double*
  %2659 = load double, double* %2658, align 1
  %2660 = bitcast i8* %2655 to double*
  %2661 = load double, double* %2660, align 1
  %2662 = fcmp uno double %2659, %2661
  br i1 %2662, label %2663, label %2675

; <label>:2663:                                   ; preds = %block_40128c
  %2664 = fadd double %2659, %2661
  %2665 = bitcast double %2664 to i64
  %2666 = and i64 %2665, 9221120237041090560
  %2667 = icmp eq i64 %2666, 9218868437227405312
  %2668 = and i64 %2665, 2251799813685247
  %2669 = icmp ne i64 %2668, 0
  %2670 = and i1 %2667, %2669
  br i1 %2670, label %2671, label %2681

; <label>:2671:                                   ; preds = %2663
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2673 = load i64, i64* %2672, align 8, !tbaa !2428
  %2674 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2673, %struct.Memory* %MEMORY.5) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

; <label>:2675:                                   ; preds = %block_40128c
  %2676 = fcmp ogt double %2659, %2661
  br i1 %2676, label %2681, label %2677

; <label>:2677:                                   ; preds = %2675
  %2678 = fcmp olt double %2659, %2661
  br i1 %2678, label %2681, label %2679

; <label>:2679:                                   ; preds = %2677
  %2680 = fcmp oeq double %2659, %2661
  br i1 %2680, label %2681, label %2688

; <label>:2681:                                   ; preds = %2679, %2677, %2675, %2663
  %2682 = phi i8 [ 0, %2675 ], [ 0, %2677 ], [ 1, %2679 ], [ 1, %2663 ]
  %2683 = phi i8 [ 0, %2675 ], [ 0, %2677 ], [ 0, %2679 ], [ 1, %2663 ]
  %2684 = phi i8 [ 0, %2675 ], [ 1, %2677 ], [ 0, %2679 ], [ 1, %2663 ]
  %2685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2682, i8* %2685, align 1, !tbaa !2451
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2683, i8* %2686, align 1, !tbaa !2451
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2684, i8* %2687, align 1, !tbaa !2451
  br label %2688

; <label>:2688:                                   ; preds = %2681, %2679
  %2689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2689, align 1, !tbaa !2451
  %2690 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2690, align 1, !tbaa !2451
  %2691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2691, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478: ; preds = %2671, %2688
  %2692 = phi %struct.Memory* [ %2674, %2671 ], [ %MEMORY.5, %2688 ]
  %2693 = load i64, i64* %PC
  %2694 = add i64 %2693, 52
  %2695 = load i64, i64* %PC
  %2696 = add i64 %2695, 6
  %2697 = load i64, i64* %PC
  %2698 = add i64 %2697, 6
  store i64 %2698, i64* %PC
  %2699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2700 = load i8, i8* %2699, align 1, !tbaa !2448
  %2701 = icmp eq i8 %2700, 0
  %2702 = zext i1 %2701 to i8
  store i8 %2702, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2704 = select i1 %2701, i64 %2694, i64 %2696
  store i64 %2704, i64* %2703, align 8, !tbaa !2428
  %2705 = load i8, i8* %BRANCH_TAKEN
  %2706 = icmp eq i8 %2705, 1
  br i1 %2706, label %block_4012d0, label %block_4012a2

block_40110b:                                     ; preds = %block_401100, %block_4010ea
  %MEMORY.6 = phi %struct.Memory* [ %184, %block_4010ea ], [ %184, %block_401100 ]
  %2707 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2708 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2709 = bitcast %union.vec128_t* %XMM0 to i8*
  %2710 = load i64, i64* %PC
  %2711 = add i64 %2710, 3
  store i64 %2711, i64* %PC
  %2712 = bitcast i8* %2708 to i64*
  %2713 = load i64, i64* %2712, align 1
  %2714 = getelementptr inbounds i8, i8* %2708, i64 8
  %2715 = bitcast i8* %2714 to i64*
  %2716 = load i64, i64* %2715, align 1
  %2717 = bitcast i8* %2709 to i64*
  %2718 = load i64, i64* %2717, align 1
  %2719 = getelementptr inbounds i8, i8* %2709, i64 8
  %2720 = bitcast i8* %2719 to i64*
  %2721 = load i64, i64* %2720, align 1
  %2722 = xor i64 %2718, %2713
  %2723 = xor i64 %2721, %2716
  %2724 = trunc i64 %2722 to i32
  %2725 = lshr i64 %2722, 32
  %2726 = trunc i64 %2725 to i32
  %2727 = bitcast i8* %2707 to i32*
  store i32 %2724, i32* %2727, align 1, !tbaa !2469
  %2728 = getelementptr inbounds i8, i8* %2707, i64 4
  %2729 = bitcast i8* %2728 to i32*
  store i32 %2726, i32* %2729, align 1, !tbaa !2469
  %2730 = trunc i64 %2723 to i32
  %2731 = getelementptr inbounds i8, i8* %2707, i64 8
  %2732 = bitcast i8* %2731 to i32*
  store i32 %2730, i32* %2732, align 1, !tbaa !2469
  %2733 = lshr i64 %2723, 32
  %2734 = trunc i64 %2733 to i32
  %2735 = getelementptr inbounds i8, i8* %2707, i64 12
  %2736 = bitcast i8* %2735 to i32*
  store i32 %2734, i32* %2736, align 1, !tbaa !2469
  %2737 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2738 = load i64, i64* %PC
  %2739 = add i64 %2738, 9
  store i64 %2739, i64* %PC
  %2740 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2741 = bitcast i8* %2737 to double*
  store double %2740, double* %2741, align 1, !tbaa !2452
  %2742 = getelementptr inbounds i8, i8* %2737, i64 8
  %2743 = bitcast i8* %2742 to double*
  store double 0.000000e+00, double* %2743, align 1, !tbaa !2452
  %2744 = bitcast %union.vec128_t* %XMM1 to i8*
  %2745 = bitcast %union.vec128_t* %XMM0 to i8*
  %2746 = load i64, i64* %PC
  %2747 = add i64 %2746, 4
  store i64 %2747, i64* %PC
  %2748 = bitcast i8* %2744 to double*
  %2749 = load double, double* %2748, align 1
  %2750 = bitcast i8* %2745 to double*
  %2751 = load double, double* %2750, align 1
  %2752 = fcmp uno double %2749, %2751
  br i1 %2752, label %2753, label %2765

; <label>:2753:                                   ; preds = %block_40110b
  %2754 = fadd double %2749, %2751
  %2755 = bitcast double %2754 to i64
  %2756 = and i64 %2755, 9221120237041090560
  %2757 = icmp eq i64 %2756, 9218868437227405312
  %2758 = and i64 %2755, 2251799813685247
  %2759 = icmp ne i64 %2758, 0
  %2760 = and i1 %2757, %2759
  br i1 %2760, label %2761, label %2771

; <label>:2761:                                   ; preds = %2753
  %2762 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2763 = load i64, i64* %2762, align 8, !tbaa !2428
  %2764 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2763, %struct.Memory* %MEMORY.6) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:2765:                                   ; preds = %block_40110b
  %2766 = fcmp ogt double %2749, %2751
  br i1 %2766, label %2771, label %2767

; <label>:2767:                                   ; preds = %2765
  %2768 = fcmp olt double %2749, %2751
  br i1 %2768, label %2771, label %2769

; <label>:2769:                                   ; preds = %2767
  %2770 = fcmp oeq double %2749, %2751
  br i1 %2770, label %2771, label %2778

; <label>:2771:                                   ; preds = %2769, %2767, %2765, %2753
  %2772 = phi i8 [ 0, %2765 ], [ 0, %2767 ], [ 1, %2769 ], [ 1, %2753 ]
  %2773 = phi i8 [ 0, %2765 ], [ 0, %2767 ], [ 0, %2769 ], [ 1, %2753 ]
  %2774 = phi i8 [ 0, %2765 ], [ 1, %2767 ], [ 0, %2769 ], [ 1, %2753 ]
  %2775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2772, i8* %2775, align 1, !tbaa !2451
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2773, i8* %2776, align 1, !tbaa !2451
  %2777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2774, i8* %2777, align 1, !tbaa !2451
  br label %2778

; <label>:2778:                                   ; preds = %2771, %2769
  %2779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2779, align 1, !tbaa !2451
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2780, align 1, !tbaa !2451
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2781, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %2761, %2778
  %2782 = phi %struct.Memory* [ %2764, %2761 ], [ %MEMORY.6, %2778 ]
  %2783 = load i64, i64* %PC
  %2784 = add i64 %2783, 52
  %2785 = load i64, i64* %PC
  %2786 = add i64 %2785, 6
  %2787 = load i64, i64* %PC
  %2788 = add i64 %2787, 6
  store i64 %2788, i64* %PC
  %2789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2790 = load i8, i8* %2789, align 1, !tbaa !2448
  %2791 = icmp eq i8 %2790, 0
  %2792 = zext i1 %2791 to i8
  store i8 %2792, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2794 = select i1 %2791, i64 %2784, i64 %2786
  store i64 %2794, i64* %2793, align 8, !tbaa !2428
  %2795 = load i8, i8* %BRANCH_TAKEN
  %2796 = icmp eq i8 %2795, 1
  br i1 %2796, label %block_40114f, label %block_401121

block_4011f6:                                     ; preds = %block_4011da, %block_4011df
  %MEMORY.7 = phi %struct.Memory* [ %MEMORY.0, %block_4011df ], [ %636, %block_4011da ]
  %2797 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2798 = load i64, i64* %PC
  %2799 = add i64 %2798, 9
  store i64 %2799, i64* %PC
  %2800 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %2801 = bitcast i8* %2797 to double*
  store double %2800, double* %2801, align 1, !tbaa !2452
  %2802 = getelementptr inbounds i8, i8* %2797, i64 8
  %2803 = bitcast i8* %2802 to double*
  store double 0.000000e+00, double* %2803, align 1, !tbaa !2452
  %2804 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2805 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2806 = load i64, i64* %PC
  %2807 = add i64 %2806, 9
  store i64 %2807, i64* %PC
  %2808 = bitcast i8* %2805 to double*
  %2809 = load double, double* %2808, align 1
  %2810 = getelementptr inbounds i8, i8* %2805, i64 8
  %2811 = bitcast i8* %2810 to i64*
  %2812 = load i64, i64* %2811, align 1
  %2813 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2814 = fdiv double %2809, %2813
  %2815 = bitcast i8* %2804 to double*
  store double %2814, double* %2815, align 1, !tbaa !2452
  %2816 = getelementptr inbounds i8, i8* %2804, i64 8
  %2817 = bitcast i8* %2816 to i64*
  store i64 %2812, i64* %2817, align 1, !tbaa !2452
  %2818 = bitcast %union.vec128_t* %XMM0 to i8*
  %2819 = load i64, i64* %PC
  %2820 = add i64 %2819, 9
  store i64 %2820, i64* %PC
  %2821 = bitcast i8* %2818 to double*
  %2822 = load double, double* %2821, align 1
  store double %2822, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2823 = load i64, i64* %PC
  %2824 = add i64 %2823, 788
  %2825 = load i64, i64* %PC
  %2826 = add i64 %2825, 5
  store i64 %2826, i64* %PC
  %2827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2824, i64* %2827, align 8, !tbaa !2428
  br label %block_401525

block_401287:                                     ; preds = %block_401281
  %2828 = load i64, i64* %PC
  %2829 = add i64 %2828, 409
  %2830 = load i64, i64* %PC
  %2831 = add i64 %2830, 5
  store i64 %2831, i64* %PC
  %2832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2829, i64* %2832, align 8, !tbaa !2428
  %2833 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2834 = load i64, i64* %PC
  %2835 = add i64 %2834, 9
  store i64 %2835, i64* %PC
  %2836 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2837 = bitcast i8* %2833 to double*
  store double %2836, double* %2837, align 1, !tbaa !2452
  %2838 = getelementptr inbounds i8, i8* %2833, i64 8
  %2839 = bitcast i8* %2838 to double*
  store double 0.000000e+00, double* %2839, align 1, !tbaa !2452
  %2840 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2841 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2842 = load i64, i64* %PC
  %2843 = add i64 %2842, 9
  store i64 %2843, i64* %PC
  %2844 = bitcast i8* %2841 to double*
  %2845 = load double, double* %2844, align 1
  %2846 = getelementptr inbounds i8, i8* %2841, i64 8
  %2847 = bitcast i8* %2846 to i64*
  %2848 = load i64, i64* %2847, align 1
  %2849 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2850 = fdiv double %2845, %2849
  %2851 = bitcast i8* %2840 to double*
  store double %2850, double* %2851, align 1, !tbaa !2452
  %2852 = getelementptr inbounds i8, i8* %2840, i64 8
  %2853 = bitcast i8* %2852 to i64*
  store i64 %2848, i64* %2853, align 1, !tbaa !2452
  %2854 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2855 = load i64, i64* %PC
  %2856 = add i64 %2855, 9
  store i64 %2856, i64* %PC
  %2857 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2858 = bitcast i8* %2854 to double*
  store double %2857, double* %2858, align 1, !tbaa !2452
  %2859 = getelementptr inbounds i8, i8* %2854, i64 8
  %2860 = bitcast i8* %2859 to double*
  store double 0.000000e+00, double* %2860, align 1, !tbaa !2452
  %2861 = load i64, i64* %RBP
  %2862 = sub i64 %2861, 96
  %2863 = bitcast %union.vec128_t* %XMM0 to i8*
  %2864 = load i64, i64* %PC
  %2865 = add i64 %2864, 5
  store i64 %2865, i64* %PC
  %2866 = bitcast i8* %2863 to double*
  %2867 = load double, double* %2866, align 1
  %2868 = inttoptr i64 %2862 to double*
  store double %2867, double* %2868
  %2869 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2870 = bitcast %union.vec128_t* %XMM1 to i8*
  %2871 = load i64, i64* %PC
  %2872 = add i64 %2871, 3
  store i64 %2872, i64* %PC
  %2873 = bitcast i8* %2870 to <2 x i32>*
  %2874 = load <2 x i32>, <2 x i32>* %2873, align 1
  %2875 = getelementptr inbounds i8, i8* %2870, i64 8
  %2876 = bitcast i8* %2875 to <2 x i32>*
  %2877 = load <2 x i32>, <2 x i32>* %2876, align 1
  %2878 = extractelement <2 x i32> %2874, i32 0
  %2879 = bitcast i8* %2869 to i32*
  store i32 %2878, i32* %2879, align 1, !tbaa !2454
  %2880 = extractelement <2 x i32> %2874, i32 1
  %2881 = getelementptr inbounds i8, i8* %2869, i64 4
  %2882 = bitcast i8* %2881 to i32*
  store i32 %2880, i32* %2882, align 1, !tbaa !2454
  %2883 = extractelement <2 x i32> %2877, i32 0
  %2884 = getelementptr inbounds i8, i8* %2869, i64 8
  %2885 = bitcast i8* %2884 to i32*
  store i32 %2883, i32* %2885, align 1, !tbaa !2454
  %2886 = extractelement <2 x i32> %2877, i32 1
  %2887 = getelementptr inbounds i8, i8* %2869, i64 12
  %2888 = bitcast i8* %2887 to i32*
  store i32 %2886, i32* %2888, align 1, !tbaa !2454
  %2889 = load i64, i64* %PC
  %2890 = sub i64 %2889, 3683
  %2891 = load i64, i64* %PC
  %2892 = add i64 %2891, 5
  %2893 = load i64, i64* %PC
  %2894 = add i64 %2893, 5
  store i64 %2894, i64* %PC
  %2895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2896 = load i64, i64* %2895, align 8, !tbaa !2428
  %2897 = add i64 %2896, -8
  %2898 = inttoptr i64 %2897 to i64*
  store i64 %2892, i64* %2898
  store i64 %2897, i64* %2895, align 8, !tbaa !2428
  %2899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2890, i64* %2899, align 8, !tbaa !2428
  %2900 = load i64, i64* %PC
  %2901 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2901)
  %2902 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2902)
  %2903 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2903)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %2904 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2904)
  %2905 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2905)
  %2906 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2906)
  %2907 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2907)
  %2908 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2908)
  %2909 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2909)
  %2910 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2910)
  %2911 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2911)
  %2912 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2912)
  %2913 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2913)
  %2914 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2914)
  %2915 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2915)
  %2916 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2916)
  %2917 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2917)
  %2918 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2918)
  %2919 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2919)
  %2920 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2920)
  %2921 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2921)
  %2922 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2922)
  %2923 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2923)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2488
  store i64 %2900, i64* %curr_pc.i320, align 8, !noalias !2488
  store %struct.Memory* %184, %struct.Memory** %memory.i321, align 8, !noalias !2488
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2488
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2488
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2488
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2488
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2488
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2488
  store %struct.Memory* %184, %struct.Memory** %MEMORY.i328, align 8, !noalias !2488
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 33
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %2926 to i64*
  store i64 %2900, i64* %PC.i343, align 8, !alias.scope !2492, !noalias !2493
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2928 = getelementptr inbounds %struct.GPR, %struct.GPR* %2927, i32 0, i32 1
  %2929 = getelementptr inbounds %struct.Reg, %struct.Reg* %2928, i32 0, i32 0
  %2930 = bitcast %union.anon* %2929 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2930, i32 0, i32 1
  %2931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2932 = getelementptr inbounds %struct.GPR, %struct.GPR* %2931, i32 0, i32 3
  %2933 = getelementptr inbounds %struct.Reg, %struct.Reg* %2932, i32 0, i32 0
  %2934 = bitcast %union.anon* %2933 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2934, i32 0, i32 1
  %2935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2936 = getelementptr inbounds %struct.GPR, %struct.GPR* %2935, i32 0, i32 5
  %2937 = getelementptr inbounds %struct.Reg, %struct.Reg* %2936, i32 0, i32 0
  %2938 = bitcast %union.anon* %2937 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2938, i32 0, i32 1
  %2939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2940 = getelementptr inbounds %struct.GPR, %struct.GPR* %2939, i32 0, i32 7
  %2941 = getelementptr inbounds %struct.Reg, %struct.Reg* %2940, i32 0, i32 0
  %2942 = bitcast %union.anon* %2941 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2942, i32 0, i32 1
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2944 = getelementptr inbounds %struct.GPR, %struct.GPR* %2943, i32 0, i32 1
  %2945 = getelementptr inbounds %struct.Reg, %struct.Reg* %2944, i32 0, i32 0
  %2946 = bitcast %union.anon* %2945 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2946, i32 0, i32 0
  %2947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2948 = getelementptr inbounds %struct.GPR, %struct.GPR* %2947, i32 0, i32 3
  %2949 = getelementptr inbounds %struct.Reg, %struct.Reg* %2948, i32 0, i32 0
  %2950 = bitcast %union.anon* %2949 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2950, i32 0, i32 0
  %2951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2952 = getelementptr inbounds %struct.GPR, %struct.GPR* %2951, i32 0, i32 5
  %2953 = getelementptr inbounds %struct.Reg, %struct.Reg* %2952, i32 0, i32 0
  %2954 = bitcast %union.anon* %2953 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2954, i32 0, i32 0
  %2955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2956 = getelementptr inbounds %struct.GPR, %struct.GPR* %2955, i32 0, i32 7
  %2957 = getelementptr inbounds %struct.Reg, %struct.Reg* %2956, i32 0, i32 0
  %2958 = bitcast %union.anon* %2957 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2958, i32 0, i32 0
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2960 = getelementptr inbounds %struct.GPR, %struct.GPR* %2959, i32 0, i32 9
  %2961 = getelementptr inbounds %struct.Reg, %struct.Reg* %2960, i32 0, i32 0
  %2962 = bitcast %union.anon* %2961 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2962, i32 0, i32 0
  %2963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2964 = getelementptr inbounds %struct.GPR, %struct.GPR* %2963, i32 0, i32 11
  %2965 = getelementptr inbounds %struct.Reg, %struct.Reg* %2964, i32 0, i32 0
  %2966 = bitcast %union.anon* %2965 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2966, i32 0, i32 0
  %2967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2968 = getelementptr inbounds %struct.GPR, %struct.GPR* %2967, i32 0, i32 13
  %2969 = getelementptr inbounds %struct.Reg, %struct.Reg* %2968, i32 0, i32 0
  %2970 = bitcast %union.anon* %2969 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2970, i32 0, i32 0
  %2971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2972 = getelementptr inbounds %struct.GPR, %struct.GPR* %2971, i32 0, i32 15
  %2973 = getelementptr inbounds %struct.Reg, %struct.Reg* %2972, i32 0, i32 0
  %2974 = bitcast %union.anon* %2973 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2974, i32 0, i32 0
  %2975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2976 = getelementptr inbounds %struct.GPR, %struct.GPR* %2975, i32 0, i32 17
  %2977 = getelementptr inbounds %struct.Reg, %struct.Reg* %2976, i32 0, i32 0
  %2978 = bitcast %union.anon* %2977 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2978, i32 0, i32 0
  %2979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2980 = getelementptr inbounds %struct.GPR, %struct.GPR* %2979, i32 0, i32 19
  %2981 = getelementptr inbounds %struct.Reg, %struct.Reg* %2980, i32 0, i32 0
  %2982 = bitcast %union.anon* %2981 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2982, i32 0, i32 0
  %2983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2984 = getelementptr inbounds %struct.GPR, %struct.GPR* %2983, i32 0, i32 21
  %2985 = getelementptr inbounds %struct.Reg, %struct.Reg* %2984, i32 0, i32 0
  %2986 = bitcast %union.anon* %2985 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2986, i32 0, i32 0
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 23
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %2990 = bitcast %union.anon* %2989 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2990, i32 0, i32 0
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2992 = getelementptr inbounds %struct.GPR, %struct.GPR* %2991, i32 0, i32 25
  %2993 = getelementptr inbounds %struct.Reg, %struct.Reg* %2992, i32 0, i32 0
  %2994 = bitcast %union.anon* %2993 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2994, i32 0, i32 0
  %2995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2996 = getelementptr inbounds %struct.GPR, %struct.GPR* %2995, i32 0, i32 27
  %2997 = getelementptr inbounds %struct.Reg, %struct.Reg* %2996, i32 0, i32 0
  %2998 = bitcast %union.anon* %2997 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2998, i32 0, i32 0
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 29
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %3002 = bitcast %union.anon* %3001 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3002, i32 0, i32 0
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3004 = getelementptr inbounds %struct.GPR, %struct.GPR* %3003, i32 0, i32 31
  %3005 = getelementptr inbounds %struct.Reg, %struct.Reg* %3004, i32 0, i32 0
  %3006 = bitcast %union.anon* %3005 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3006, i32 0, i32 0
  %3007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3008 = getelementptr inbounds %struct.GPR, %struct.GPR* %3007, i32 0, i32 1
  %3009 = getelementptr inbounds %struct.Reg, %struct.Reg* %3008, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %3009 to i16*
  %3010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3011 = getelementptr inbounds %struct.GPR, %struct.GPR* %3010, i32 0, i32 3
  %3012 = getelementptr inbounds %struct.Reg, %struct.Reg* %3011, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %3012 to i16*
  %3013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3014 = getelementptr inbounds %struct.GPR, %struct.GPR* %3013, i32 0, i32 5
  %3015 = getelementptr inbounds %struct.Reg, %struct.Reg* %3014, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %3015 to i16*
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3017 = getelementptr inbounds %struct.GPR, %struct.GPR* %3016, i32 0, i32 7
  %3018 = getelementptr inbounds %struct.Reg, %struct.Reg* %3017, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %3018 to i16*
  %3019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3020 = getelementptr inbounds %struct.GPR, %struct.GPR* %3019, i32 0, i32 9
  %3021 = getelementptr inbounds %struct.Reg, %struct.Reg* %3020, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %3021 to i16*
  %3022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3023 = getelementptr inbounds %struct.GPR, %struct.GPR* %3022, i32 0, i32 11
  %3024 = getelementptr inbounds %struct.Reg, %struct.Reg* %3023, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %3024 to i16*
  %3025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3026 = getelementptr inbounds %struct.GPR, %struct.GPR* %3025, i32 0, i32 13
  %3027 = getelementptr inbounds %struct.Reg, %struct.Reg* %3026, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %3027 to i16*
  %3028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3029 = getelementptr inbounds %struct.GPR, %struct.GPR* %3028, i32 0, i32 15
  %3030 = getelementptr inbounds %struct.Reg, %struct.Reg* %3029, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %3030 to i16*
  %3031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3032 = getelementptr inbounds %struct.GPR, %struct.GPR* %3031, i32 0, i32 17
  %3033 = getelementptr inbounds %struct.Reg, %struct.Reg* %3032, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %3033 to i16*
  %3034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3035 = getelementptr inbounds %struct.GPR, %struct.GPR* %3034, i32 0, i32 19
  %3036 = getelementptr inbounds %struct.Reg, %struct.Reg* %3035, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %3036 to i16*
  %3037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3038 = getelementptr inbounds %struct.GPR, %struct.GPR* %3037, i32 0, i32 21
  %3039 = getelementptr inbounds %struct.Reg, %struct.Reg* %3038, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %3039 to i16*
  %3040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3041 = getelementptr inbounds %struct.GPR, %struct.GPR* %3040, i32 0, i32 23
  %3042 = getelementptr inbounds %struct.Reg, %struct.Reg* %3041, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %3042 to i16*
  %3043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3044 = getelementptr inbounds %struct.GPR, %struct.GPR* %3043, i32 0, i32 25
  %3045 = getelementptr inbounds %struct.Reg, %struct.Reg* %3044, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %3045 to i16*
  %3046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3047 = getelementptr inbounds %struct.GPR, %struct.GPR* %3046, i32 0, i32 27
  %3048 = getelementptr inbounds %struct.Reg, %struct.Reg* %3047, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %3048 to i16*
  %3049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3050 = getelementptr inbounds %struct.GPR, %struct.GPR* %3049, i32 0, i32 29
  %3051 = getelementptr inbounds %struct.Reg, %struct.Reg* %3050, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %3051 to i16*
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 31
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %3054 to i16*
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3056 = getelementptr inbounds %struct.GPR, %struct.GPR* %3055, i32 0, i32 33
  %3057 = getelementptr inbounds %struct.Reg, %struct.Reg* %3056, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %3057 to i16*
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3059 = getelementptr inbounds %struct.GPR, %struct.GPR* %3058, i32 0, i32 1
  %3060 = getelementptr inbounds %struct.Reg, %struct.Reg* %3059, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %3060 to i32*
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3062 = getelementptr inbounds %struct.GPR, %struct.GPR* %3061, i32 0, i32 3
  %3063 = getelementptr inbounds %struct.Reg, %struct.Reg* %3062, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %3063 to i32*
  %3064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3065 = getelementptr inbounds %struct.GPR, %struct.GPR* %3064, i32 0, i32 5
  %3066 = getelementptr inbounds %struct.Reg, %struct.Reg* %3065, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %3066 to i32*
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 7
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %3069 to i32*
  %3070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3071 = getelementptr inbounds %struct.GPR, %struct.GPR* %3070, i32 0, i32 9
  %3072 = getelementptr inbounds %struct.Reg, %struct.Reg* %3071, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %3072 to i32*
  %3073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3074 = getelementptr inbounds %struct.GPR, %struct.GPR* %3073, i32 0, i32 11
  %3075 = getelementptr inbounds %struct.Reg, %struct.Reg* %3074, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %3075 to i32*
  %3076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3077 = getelementptr inbounds %struct.GPR, %struct.GPR* %3076, i32 0, i32 13
  %3078 = getelementptr inbounds %struct.Reg, %struct.Reg* %3077, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %3078 to i32*
  %3079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3080 = getelementptr inbounds %struct.GPR, %struct.GPR* %3079, i32 0, i32 15
  %3081 = getelementptr inbounds %struct.Reg, %struct.Reg* %3080, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %3081 to i32*
  %3082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3083 = getelementptr inbounds %struct.GPR, %struct.GPR* %3082, i32 0, i32 33
  %3084 = getelementptr inbounds %struct.Reg, %struct.Reg* %3083, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %3084 to i32*
  %3085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3086 = getelementptr inbounds %struct.GPR, %struct.GPR* %3085, i32 0, i32 17
  %3087 = getelementptr inbounds %struct.Reg, %struct.Reg* %3086, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %3087 to i32*
  %3088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3089 = getelementptr inbounds %struct.GPR, %struct.GPR* %3088, i32 0, i32 19
  %3090 = getelementptr inbounds %struct.Reg, %struct.Reg* %3089, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %3090 to i32*
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 21
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %3093 to i32*
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 23
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %3096 to i32*
  %3097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3098 = getelementptr inbounds %struct.GPR, %struct.GPR* %3097, i32 0, i32 25
  %3099 = getelementptr inbounds %struct.Reg, %struct.Reg* %3098, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %3099 to i32*
  %3100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3101 = getelementptr inbounds %struct.GPR, %struct.GPR* %3100, i32 0, i32 27
  %3102 = getelementptr inbounds %struct.Reg, %struct.Reg* %3101, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %3102 to i32*
  %3103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3104 = getelementptr inbounds %struct.GPR, %struct.GPR* %3103, i32 0, i32 29
  %3105 = getelementptr inbounds %struct.Reg, %struct.Reg* %3104, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %3105 to i32*
  %3106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3107 = getelementptr inbounds %struct.GPR, %struct.GPR* %3106, i32 0, i32 31
  %3108 = getelementptr inbounds %struct.Reg, %struct.Reg* %3107, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %3108 to i32*
  %3109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3110 = getelementptr inbounds %struct.GPR, %struct.GPR* %3109, i32 0, i32 1
  %3111 = getelementptr inbounds %struct.Reg, %struct.Reg* %3110, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %3111 to i64*
  %3112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3113 = getelementptr inbounds %struct.GPR, %struct.GPR* %3112, i32 0, i32 3
  %3114 = getelementptr inbounds %struct.Reg, %struct.Reg* %3113, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %3114 to i64*
  %3115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3116 = getelementptr inbounds %struct.GPR, %struct.GPR* %3115, i32 0, i32 5
  %3117 = getelementptr inbounds %struct.Reg, %struct.Reg* %3116, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %3117 to i64*
  %3118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3119 = getelementptr inbounds %struct.GPR, %struct.GPR* %3118, i32 0, i32 7
  %3120 = getelementptr inbounds %struct.Reg, %struct.Reg* %3119, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %3120 to i64*
  %3121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3122 = getelementptr inbounds %struct.GPR, %struct.GPR* %3121, i32 0, i32 9
  %3123 = getelementptr inbounds %struct.Reg, %struct.Reg* %3122, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %3123 to i64*
  %3124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3125 = getelementptr inbounds %struct.GPR, %struct.GPR* %3124, i32 0, i32 11
  %3126 = getelementptr inbounds %struct.Reg, %struct.Reg* %3125, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %3126 to i64*
  %3127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3128 = getelementptr inbounds %struct.GPR, %struct.GPR* %3127, i32 0, i32 13
  %3129 = getelementptr inbounds %struct.Reg, %struct.Reg* %3128, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %3129 to i64*
  %3130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3131 = getelementptr inbounds %struct.GPR, %struct.GPR* %3130, i32 0, i32 15
  %3132 = getelementptr inbounds %struct.Reg, %struct.Reg* %3131, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %3132 to i64*
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3134 = getelementptr inbounds %struct.GPR, %struct.GPR* %3133, i32 0, i32 17
  %3135 = getelementptr inbounds %struct.Reg, %struct.Reg* %3134, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %3135 to i64*
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 19
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %3138 to i64*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 21
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %3141 to i64*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3143 = getelementptr inbounds %struct.GPR, %struct.GPR* %3142, i32 0, i32 23
  %3144 = getelementptr inbounds %struct.Reg, %struct.Reg* %3143, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %3144 to i64*
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3146 = getelementptr inbounds %struct.GPR, %struct.GPR* %3145, i32 0, i32 25
  %3147 = getelementptr inbounds %struct.Reg, %struct.Reg* %3146, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %3147 to i64*
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 27
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %3150 to i64*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 29
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %3153 to i64*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3155 = getelementptr inbounds %struct.GPR, %struct.GPR* %3154, i32 0, i32 31
  %3156 = getelementptr inbounds %struct.Reg, %struct.Reg* %3155, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %3156 to i64*
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3158 = getelementptr inbounds %struct.GPR, %struct.GPR* %3157, i32 0, i32 33
  %3159 = getelementptr inbounds %struct.Reg, %struct.Reg* %3158, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %3159 to i64*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3161 = getelementptr inbounds %struct.Segments, %struct.Segments* %3160, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %3161 to i16*
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3163 = getelementptr inbounds %struct.Segments, %struct.Segments* %3162, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %3163 to i16*
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3165 = getelementptr inbounds %struct.Segments, %struct.Segments* %3164, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %3165 to i16*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3167 = getelementptr inbounds %struct.Segments, %struct.Segments* %3166, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %3167 to i16*
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3169 = getelementptr inbounds %struct.Segments, %struct.Segments* %3168, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %3169 to i16*
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3171 = getelementptr inbounds %struct.Segments, %struct.Segments* %3170, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %3171 to i16*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3173 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3172, i32 0, i32 5
  %3174 = getelementptr inbounds %struct.Reg, %struct.Reg* %3173, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %3174 to i64*
  %3175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3176 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3175, i32 0, i32 7
  %3177 = getelementptr inbounds %struct.Reg, %struct.Reg* %3176, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %3177 to i64*
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3179 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3178, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %3179 to %"class.std::bitset"*
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3180, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %3181 to %"class.std::bitset"*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3182, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %3183 to %"class.std::bitset"*
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3184, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %3185 to %"class.std::bitset"*
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3186, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %3187 to %"class.std::bitset"*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3188, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %3189 to %"class.std::bitset"*
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3190, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %3191 to %"class.std::bitset"*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3193 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3192, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %3193 to %"class.std::bitset"*
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3195 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3194, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %3195 to %"class.std::bitset"*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3196, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %3197 to %"class.std::bitset"*
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3199 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3198, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %3199 to %"class.std::bitset"*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3201 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3200, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %3201 to %"class.std::bitset"*
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3203 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3202, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %3203 to %"class.std::bitset"*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3204, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %3205 to %"class.std::bitset"*
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3206, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %3207 to %"class.std::bitset"*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3208, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %3209 to %"class.std::bitset"*
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3210, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %3211 to %union.vec128_t*
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3212, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %3213 to %union.vec128_t*
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3214, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %3215 to %union.vec128_t*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3216, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %3217 to %union.vec128_t*
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3218, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %3219 to %union.vec128_t*
  %3220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3221 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3220, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %3221 to %union.vec128_t*
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3223 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3222, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %3223 to %union.vec128_t*
  %3224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3225 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3224, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %3225 to %union.vec128_t*
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3226, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %3227 to %union.vec128_t*
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3229 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3228, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %3229 to %union.vec128_t*
  %3230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3231 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3230, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %3231 to %union.vec128_t*
  %3232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3232, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %3233 to %union.vec128_t*
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3234, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %3235 to %union.vec128_t*
  %3236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3237 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3236, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %3237 to %union.vec128_t*
  %3238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3239 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3238, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %3239 to %union.vec128_t*
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3240, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %3241 to %union.vec128_t*
  %3242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3243 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3242, i32 0, i32 0
  %3244 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3243, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3244, i32 0, i32 1
  %3245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3246 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3245, i32 0, i32 0
  %3247 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3246, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3247, i32 0, i32 1
  %3248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3249 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3248, i32 0, i32 0
  %3250 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3249, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3250, i32 0, i32 1
  %3251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3252 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3251, i32 0, i32 0
  %3253 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3252, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3253, i32 0, i32 1
  %3254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3255 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3254, i32 0, i32 0
  %3256 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3255, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3256, i32 0, i32 1
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3258 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3257, i32 0, i32 0
  %3259 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3258, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3259, i32 0, i32 1
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3261 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3260, i32 0, i32 0
  %3262 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3261, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3262, i32 0, i32 1
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3264 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3263, i32 0, i32 0
  %3265 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3264, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3265, i32 0, i32 1
  %3266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3267 = getelementptr inbounds %struct.MMX, %struct.MMX* %3266, i32 0, i32 0
  %3268 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3267, i64 0, i64 0
  %3269 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3268, i32 0, i32 1
  %3270 = bitcast %union.vec64_t* %3269 to %struct.uint64v1_t*
  %3271 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3270, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %3271, i64 0, i64 0
  %3272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3273 = getelementptr inbounds %struct.MMX, %struct.MMX* %3272, i32 0, i32 0
  %3274 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3273, i64 0, i64 1
  %3275 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3274, i32 0, i32 1
  %3276 = bitcast %union.vec64_t* %3275 to %struct.uint64v1_t*
  %3277 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3276, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %3277, i64 0, i64 0
  %3278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3279 = getelementptr inbounds %struct.MMX, %struct.MMX* %3278, i32 0, i32 0
  %3280 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3279, i64 0, i64 2
  %3281 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3280, i32 0, i32 1
  %3282 = bitcast %union.vec64_t* %3281 to %struct.uint64v1_t*
  %3283 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3282, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %3283, i64 0, i64 0
  %3284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3285 = getelementptr inbounds %struct.MMX, %struct.MMX* %3284, i32 0, i32 0
  %3286 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3285, i64 0, i64 3
  %3287 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3286, i32 0, i32 1
  %3288 = bitcast %union.vec64_t* %3287 to %struct.uint64v1_t*
  %3289 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3288, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %3289, i64 0, i64 0
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3291 = getelementptr inbounds %struct.MMX, %struct.MMX* %3290, i32 0, i32 0
  %3292 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3291, i64 0, i64 4
  %3293 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3292, i32 0, i32 1
  %3294 = bitcast %union.vec64_t* %3293 to %struct.uint64v1_t*
  %3295 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3294, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %3295, i64 0, i64 0
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3297 = getelementptr inbounds %struct.MMX, %struct.MMX* %3296, i32 0, i32 0
  %3298 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3297, i64 0, i64 5
  %3299 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3298, i32 0, i32 1
  %3300 = bitcast %union.vec64_t* %3299 to %struct.uint64v1_t*
  %3301 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3300, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %3301, i64 0, i64 0
  %3302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3303 = getelementptr inbounds %struct.MMX, %struct.MMX* %3302, i32 0, i32 0
  %3304 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3303, i64 0, i64 6
  %3305 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3304, i32 0, i32 1
  %3306 = bitcast %union.vec64_t* %3305 to %struct.uint64v1_t*
  %3307 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3306, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %3307, i64 0, i64 0
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3309 = getelementptr inbounds %struct.MMX, %struct.MMX* %3308, i32 0, i32 0
  %3310 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3309, i64 0, i64 7
  %3311 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3310, i32 0, i32 1
  %3312 = bitcast %union.vec64_t* %3311 to %struct.uint64v1_t*
  %3313 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3312, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %3313, i64 0, i64 0
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3314, i32 0, i32 5
  %3315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3315, i32 0, i32 1
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3316, i32 0, i32 11
  %3317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3317, i32 0, i32 13
  %3318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3318, i32 0, i32 3
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3319, i32 0, i32 9
  %3320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3320, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2488
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2488
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2488
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2488
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2488
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2488
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2488
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2488
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2488
  %3321 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %3322 = load double, double* %3321, !alias.scope !2492, !noalias !2493
  %3323 = load i64, i64* %RSP.i404, !alias.scope !2492, !noalias !2493
  %3324 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2488
  %3325 = inttoptr i64 %3323 to i64*
  %3326 = load i64, i64* %3325
  store i64 %3326, i64* %PC.i343, !alias.scope !2492, !noalias !2493
  %3327 = add i64 %3323, 8
  store i64 %3327, i64* %RSP.i404, !alias.scope !2492, !noalias !2493
  %3328 = call double @sin(double %3322)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2492, !noalias !2493
  %3329 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %3328, double* %3329, !alias.scope !2492, !noalias !2493
  %3330 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2488
  %3331 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3331)
  %3332 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3332)
  %3333 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3333)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %3334 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3334)
  %3335 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3335)
  %3336 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3336)
  %3337 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3337)
  %3338 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3338)
  %3339 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3339)
  %3340 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3340)
  %3341 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3341)
  %3342 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3342)
  %3343 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3343)
  %3344 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3344)
  %3345 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3345)
  %3346 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3346)
  %3347 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3347)
  %3348 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3348)
  %3349 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3349)
  %3350 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3350)
  %3351 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3351)
  %3352 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3352)
  %3353 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3353)
  %3354 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3355 = load i64, i64* %RBP
  %3356 = sub i64 %3355, 96
  %3357 = load i64, i64* %PC
  %3358 = add i64 %3357, 5
  store i64 %3358, i64* %PC
  %3359 = inttoptr i64 %3356 to double*
  %3360 = load double, double* %3359
  %3361 = bitcast i8* %3354 to double*
  store double %3360, double* %3361, align 1, !tbaa !2452
  %3362 = getelementptr inbounds i8, i8* %3354, i64 8
  %3363 = bitcast i8* %3362 to double*
  store double 0.000000e+00, double* %3363, align 1, !tbaa !2452
  %3364 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3365 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3366 = bitcast %union.vec128_t* %XMM0 to i8*
  %3367 = load i64, i64* %PC
  %3368 = add i64 %3367, 4
  store i64 %3368, i64* %PC
  %3369 = bitcast i8* %3365 to double*
  %3370 = load double, double* %3369, align 1
  %3371 = getelementptr inbounds i8, i8* %3365, i64 8
  %3372 = bitcast i8* %3371 to i64*
  %3373 = load i64, i64* %3372, align 1
  %3374 = bitcast i8* %3366 to double*
  %3375 = load double, double* %3374, align 1
  %3376 = fmul double %3370, %3375
  %3377 = bitcast i8* %3364 to double*
  store double %3376, double* %3377, align 1, !tbaa !2452
  %3378 = getelementptr inbounds i8, i8* %3364, i64 8
  %3379 = bitcast i8* %3378 to i64*
  store i64 %3373, i64* %3379, align 1, !tbaa !2452
  %3380 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3381 = bitcast %union.vec128_t* %XMM1 to i8*
  %3382 = load i64, i64* %PC
  %3383 = add i64 %3382, 3
  store i64 %3383, i64* %PC
  %3384 = bitcast i8* %3381 to <2 x i32>*
  %3385 = load <2 x i32>, <2 x i32>* %3384, align 1
  %3386 = getelementptr inbounds i8, i8* %3381, i64 8
  %3387 = bitcast i8* %3386 to <2 x i32>*
  %3388 = load <2 x i32>, <2 x i32>* %3387, align 1
  %3389 = extractelement <2 x i32> %3385, i32 0
  %3390 = bitcast i8* %3380 to i32*
  store i32 %3389, i32* %3390, align 1, !tbaa !2454
  %3391 = extractelement <2 x i32> %3385, i32 1
  %3392 = getelementptr inbounds i8, i8* %3380, i64 4
  %3393 = bitcast i8* %3392 to i32*
  store i32 %3391, i32* %3393, align 1, !tbaa !2454
  %3394 = extractelement <2 x i32> %3388, i32 0
  %3395 = getelementptr inbounds i8, i8* %3380, i64 8
  %3396 = bitcast i8* %3395 to i32*
  store i32 %3394, i32* %3396, align 1, !tbaa !2454
  %3397 = extractelement <2 x i32> %3388, i32 1
  %3398 = getelementptr inbounds i8, i8* %3380, i64 12
  %3399 = bitcast i8* %3398 to i32*
  store i32 %3397, i32* %3399, align 1, !tbaa !2454
  %3400 = load i64, i64* %PC
  %3401 = sub i64 %3400, 3684
  %3402 = load i64, i64* %PC
  %3403 = add i64 %3402, 5
  %3404 = load i64, i64* %PC
  %3405 = add i64 %3404, 5
  store i64 %3405, i64* %PC
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3407 = load i64, i64* %3406, align 8, !tbaa !2428
  %3408 = add i64 %3407, -8
  %3409 = inttoptr i64 %3408 to i64*
  store i64 %3403, i64* %3409
  store i64 %3408, i64* %3406, align 8, !tbaa !2428
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3401, i64* %3410, align 8, !tbaa !2428
  %3411 = load i64, i64* %PC
  %3412 = call %struct.Memory* @ext_4005f0_asin(%struct.State* %0, i64 %3411, %struct.Memory* %3330)
  %3413 = load i64, i64* %PC
  %3414 = add i64 %3413, 10
  store i64 %3414, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %3415 = bitcast %union.vec128_t* %XMM0 to i8*
  %3416 = load i64, i64* %PC
  %3417 = add i64 %3416, 5
  store i64 %3417, i64* %PC
  %3418 = bitcast i8* %3415 to i64*
  %3419 = load i64, i64* %3418, align 1
  store i64 %3419, i64* %RCX, align 1, !tbaa !2428
  %3420 = load i64, i64* %RCX
  %3421 = load i64, i64* %RAX
  %3422 = load i64, i64* %PC
  %3423 = add i64 %3422, 3
  store i64 %3423, i64* %PC
  %3424 = xor i64 %3421, %3420
  store i64 %3424, i64* %RCX, align 8, !tbaa !2428
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3425, align 1, !tbaa !2432
  %3426 = trunc i64 %3424 to i32
  %3427 = and i32 %3426, 255
  %3428 = call i32 @llvm.ctpop.i32(i32 %3427) #17
  %3429 = trunc i32 %3428 to i8
  %3430 = and i8 %3429, 1
  %3431 = xor i8 %3430, 1
  %3432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3431, i8* %3432, align 1, !tbaa !2446
  %3433 = icmp eq i64 %3424, 0
  %3434 = zext i1 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3434, i8* %3435, align 1, !tbaa !2448
  %3436 = lshr i64 %3424, 63
  %3437 = trunc i64 %3436 to i8
  %3438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3437, i8* %3438, align 1, !tbaa !2449
  %3439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3439, align 1, !tbaa !2450
  %3440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3440, align 1, !tbaa !2447
  %3441 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3442 = load i64, i64* %RCX
  %3443 = load i64, i64* %PC
  %3444 = add i64 %3443, 5
  store i64 %3444, i64* %PC
  %3445 = bitcast i8* %3441 to i64*
  store i64 %3442, i64* %3445, align 1, !tbaa !2428
  %3446 = getelementptr inbounds i8, i8* %3441, i64 8
  %3447 = bitcast i8* %3446 to i64*
  store i64 0, i64* %3447, align 1, !tbaa !2428
  %3448 = load i64, i64* %RBP
  %3449 = sub i64 %3448, 16
  %3450 = bitcast %union.vec128_t* %XMM0 to i8*
  %3451 = load i64, i64* %PC
  %3452 = add i64 %3451, 5
  store i64 %3452, i64* %PC
  %3453 = bitcast i8* %3450 to double*
  %3454 = load double, double* %3453, align 1
  %3455 = inttoptr i64 %3449 to double*
  store double %3454, double* %3455
  %3456 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3457 = load i64, i64* %PC
  %3458 = add i64 %3457, 9
  store i64 %3458, i64* %PC
  %3459 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %3460 = bitcast i8* %3456 to double*
  store double %3459, double* %3460, align 1, !tbaa !2452
  %3461 = getelementptr inbounds i8, i8* %3456, i64 8
  %3462 = bitcast i8* %3461 to double*
  store double 0.000000e+00, double* %3462, align 1, !tbaa !2452
  %3463 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3464 = load i64, i64* %PC
  %3465 = add i64 %3464, 9
  store i64 %3465, i64* %PC
  %3466 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %3467 = bitcast i8* %3463 to double*
  store double %3466, double* %3467, align 1, !tbaa !2452
  %3468 = getelementptr inbounds i8, i8* %3463, i64 8
  %3469 = bitcast i8* %3468 to double*
  store double 0.000000e+00, double* %3469, align 1, !tbaa !2452
  %3470 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3471 = load i64, i64* %RBP
  %3472 = sub i64 %3471, 16
  %3473 = load i64, i64* %PC
  %3474 = add i64 %3473, 5
  store i64 %3474, i64* %PC
  %3475 = inttoptr i64 %3472 to double*
  %3476 = load double, double* %3475
  %3477 = bitcast i8* %3470 to double*
  store double %3476, double* %3477, align 1, !tbaa !2452
  %3478 = getelementptr inbounds i8, i8* %3470, i64 8
  %3479 = bitcast i8* %3478 to double*
  store double 0.000000e+00, double* %3479, align 1, !tbaa !2452
  %3480 = bitcast %union.vec128_t* %XMM2 to i8*
  %3481 = load i64, i64* %PC
  %3482 = add i64 %3481, 5
  store i64 %3482, i64* %PC
  %3483 = bitcast i8* %3480 to i64*
  %3484 = load i64, i64* %3483, align 1
  store i64 %3484, i64* %RCX, align 1, !tbaa !2428
  %3485 = load i64, i64* %RCX
  %3486 = load i64, i64* %RAX
  %3487 = load i64, i64* %PC
  %3488 = add i64 %3487, 3
  store i64 %3488, i64* %PC
  %3489 = xor i64 %3486, %3485
  store i64 %3489, i64* %RCX, align 8, !tbaa !2428
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3490, align 1, !tbaa !2432
  %3491 = trunc i64 %3489 to i32
  %3492 = and i32 %3491, 255
  %3493 = call i32 @llvm.ctpop.i32(i32 %3492) #17
  %3494 = trunc i32 %3493 to i8
  %3495 = and i8 %3494, 1
  %3496 = xor i8 %3495, 1
  %3497 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3496, i8* %3497, align 1, !tbaa !2446
  %3498 = icmp eq i64 %3489, 0
  %3499 = zext i1 %3498 to i8
  %3500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3499, i8* %3500, align 1, !tbaa !2448
  %3501 = lshr i64 %3489, 63
  %3502 = trunc i64 %3501 to i8
  %3503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3502, i8* %3503, align 1, !tbaa !2449
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3504, align 1, !tbaa !2450
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3505, align 1, !tbaa !2447
  %3506 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3507 = load i64, i64* %RCX
  %3508 = load i64, i64* %PC
  %3509 = add i64 %3508, 5
  store i64 %3509, i64* %PC
  %3510 = bitcast i8* %3506 to i64*
  store i64 %3507, i64* %3510, align 1, !tbaa !2428
  %3511 = getelementptr inbounds i8, i8* %3506, i64 8
  %3512 = bitcast i8* %3511 to i64*
  store i64 0, i64* %3512, align 1, !tbaa !2428
  %3513 = load i64, i64* %RBP
  %3514 = sub i64 %3513, 104
  %3515 = bitcast %union.vec128_t* %XMM0 to i8*
  %3516 = load i64, i64* %PC
  %3517 = add i64 %3516, 5
  store i64 %3517, i64* %PC
  %3518 = bitcast i8* %3515 to double*
  %3519 = load double, double* %3518, align 1
  %3520 = inttoptr i64 %3514 to double*
  store double %3519, double* %3520
  %3521 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3522 = bitcast %union.vec128_t* %XMM2 to i8*
  %3523 = load i64, i64* %PC
  %3524 = add i64 %3523, 3
  store i64 %3524, i64* %PC
  %3525 = bitcast i8* %3522 to <2 x i32>*
  %3526 = load <2 x i32>, <2 x i32>* %3525, align 1
  %3527 = getelementptr inbounds i8, i8* %3522, i64 8
  %3528 = bitcast i8* %3527 to <2 x i32>*
  %3529 = load <2 x i32>, <2 x i32>* %3528, align 1
  %3530 = extractelement <2 x i32> %3526, i32 0
  %3531 = bitcast i8* %3521 to i32*
  store i32 %3530, i32* %3531, align 1, !tbaa !2454
  %3532 = extractelement <2 x i32> %3526, i32 1
  %3533 = getelementptr inbounds i8, i8* %3521, i64 4
  %3534 = bitcast i8* %3533 to i32*
  store i32 %3532, i32* %3534, align 1, !tbaa !2454
  %3535 = extractelement <2 x i32> %3529, i32 0
  %3536 = getelementptr inbounds i8, i8* %3521, i64 8
  %3537 = bitcast i8* %3536 to i32*
  store i32 %3535, i32* %3537, align 1, !tbaa !2454
  %3538 = extractelement <2 x i32> %3529, i32 1
  %3539 = getelementptr inbounds i8, i8* %3521, i64 12
  %3540 = bitcast i8* %3539 to i32*
  store i32 %3538, i32* %3540, align 1, !tbaa !2454
  %3541 = load i64, i64* %RBP
  %3542 = sub i64 %3541, 112
  %3543 = load i64, i64* %RAX
  %3544 = load i64, i64* %PC
  %3545 = add i64 %3544, 4
  store i64 %3545, i64* %PC
  %3546 = inttoptr i64 %3542 to i64*
  store i64 %3543, i64* %3546
  %3547 = load i64, i64* %RBP
  %3548 = sub i64 %3547, 120
  %3549 = bitcast %union.vec128_t* %XMM1 to i8*
  %3550 = load i64, i64* %PC
  %3551 = add i64 %3550, 5
  store i64 %3551, i64* %PC
  %3552 = bitcast i8* %3549 to double*
  %3553 = load double, double* %3552, align 1
  %3554 = inttoptr i64 %3548 to double*
  store double %3553, double* %3554
  %3555 = load i64, i64* %PC
  %3556 = sub i64 %3555, 3834
  %3557 = load i64, i64* %PC
  %3558 = add i64 %3557, 5
  %3559 = load i64, i64* %PC
  %3560 = add i64 %3559, 5
  store i64 %3560, i64* %PC
  %3561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3562 = load i64, i64* %3561, align 8, !tbaa !2428
  %3563 = add i64 %3562, -8
  %3564 = inttoptr i64 %3563 to i64*
  store i64 %3558, i64* %3564
  store i64 %3563, i64* %3561, align 8, !tbaa !2428
  %3565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3556, i64* %3565, align 8, !tbaa !2428
  %3566 = load i64, i64* %PC
  %3567 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3567)
  %3568 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3568)
  %3569 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3569)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %3570 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3570)
  %3571 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3571)
  %3572 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3572)
  %3573 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3573)
  %3574 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3574)
  %3575 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3575)
  %3576 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3576)
  %3577 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3577)
  %3578 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3578)
  %3579 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3579)
  %3580 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3580)
  %3581 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3581)
  %3582 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3582)
  %3583 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3583)
  %3584 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3584)
  %3585 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3585)
  %3586 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3586)
  %3587 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3587)
  %3588 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3588)
  %3589 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3589)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2494
  store i64 %3566, i64* %curr_pc.i161, align 8, !noalias !2494
  store %struct.Memory* %3412, %struct.Memory** %memory.i162, align 8, !noalias !2494
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2494
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2494
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2494
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2494
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2494
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2494
  store %struct.Memory* %3412, %struct.Memory** %MEMORY.i169, align 8, !noalias !2494
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3591 = getelementptr inbounds %struct.GPR, %struct.GPR* %3590, i32 0, i32 33
  %3592 = getelementptr inbounds %struct.Reg, %struct.Reg* %3591, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %3592 to i64*
  store i64 %3566, i64* %PC.i184, align 8, !alias.scope !2498, !noalias !2499
  %3593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3594 = getelementptr inbounds %struct.GPR, %struct.GPR* %3593, i32 0, i32 1
  %3595 = getelementptr inbounds %struct.Reg, %struct.Reg* %3594, i32 0, i32 0
  %3596 = bitcast %union.anon* %3595 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3596, i32 0, i32 1
  %3597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3598 = getelementptr inbounds %struct.GPR, %struct.GPR* %3597, i32 0, i32 3
  %3599 = getelementptr inbounds %struct.Reg, %struct.Reg* %3598, i32 0, i32 0
  %3600 = bitcast %union.anon* %3599 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3600, i32 0, i32 1
  %3601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3602 = getelementptr inbounds %struct.GPR, %struct.GPR* %3601, i32 0, i32 5
  %3603 = getelementptr inbounds %struct.Reg, %struct.Reg* %3602, i32 0, i32 0
  %3604 = bitcast %union.anon* %3603 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3604, i32 0, i32 1
  %3605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3606 = getelementptr inbounds %struct.GPR, %struct.GPR* %3605, i32 0, i32 7
  %3607 = getelementptr inbounds %struct.Reg, %struct.Reg* %3606, i32 0, i32 0
  %3608 = bitcast %union.anon* %3607 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3608, i32 0, i32 1
  %3609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3610 = getelementptr inbounds %struct.GPR, %struct.GPR* %3609, i32 0, i32 1
  %3611 = getelementptr inbounds %struct.Reg, %struct.Reg* %3610, i32 0, i32 0
  %3612 = bitcast %union.anon* %3611 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3612, i32 0, i32 0
  %3613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3614 = getelementptr inbounds %struct.GPR, %struct.GPR* %3613, i32 0, i32 3
  %3615 = getelementptr inbounds %struct.Reg, %struct.Reg* %3614, i32 0, i32 0
  %3616 = bitcast %union.anon* %3615 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3616, i32 0, i32 0
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 5
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %3620 = bitcast %union.anon* %3619 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3620, i32 0, i32 0
  %3621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3622 = getelementptr inbounds %struct.GPR, %struct.GPR* %3621, i32 0, i32 7
  %3623 = getelementptr inbounds %struct.Reg, %struct.Reg* %3622, i32 0, i32 0
  %3624 = bitcast %union.anon* %3623 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3624, i32 0, i32 0
  %3625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3626 = getelementptr inbounds %struct.GPR, %struct.GPR* %3625, i32 0, i32 9
  %3627 = getelementptr inbounds %struct.Reg, %struct.Reg* %3626, i32 0, i32 0
  %3628 = bitcast %union.anon* %3627 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3628, i32 0, i32 0
  %3629 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3630 = getelementptr inbounds %struct.GPR, %struct.GPR* %3629, i32 0, i32 11
  %3631 = getelementptr inbounds %struct.Reg, %struct.Reg* %3630, i32 0, i32 0
  %3632 = bitcast %union.anon* %3631 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3632, i32 0, i32 0
  %3633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3634 = getelementptr inbounds %struct.GPR, %struct.GPR* %3633, i32 0, i32 13
  %3635 = getelementptr inbounds %struct.Reg, %struct.Reg* %3634, i32 0, i32 0
  %3636 = bitcast %union.anon* %3635 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3636, i32 0, i32 0
  %3637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3638 = getelementptr inbounds %struct.GPR, %struct.GPR* %3637, i32 0, i32 15
  %3639 = getelementptr inbounds %struct.Reg, %struct.Reg* %3638, i32 0, i32 0
  %3640 = bitcast %union.anon* %3639 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3640, i32 0, i32 0
  %3641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3642 = getelementptr inbounds %struct.GPR, %struct.GPR* %3641, i32 0, i32 17
  %3643 = getelementptr inbounds %struct.Reg, %struct.Reg* %3642, i32 0, i32 0
  %3644 = bitcast %union.anon* %3643 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3644, i32 0, i32 0
  %3645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3646 = getelementptr inbounds %struct.GPR, %struct.GPR* %3645, i32 0, i32 19
  %3647 = getelementptr inbounds %struct.Reg, %struct.Reg* %3646, i32 0, i32 0
  %3648 = bitcast %union.anon* %3647 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3648, i32 0, i32 0
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3650 = getelementptr inbounds %struct.GPR, %struct.GPR* %3649, i32 0, i32 21
  %3651 = getelementptr inbounds %struct.Reg, %struct.Reg* %3650, i32 0, i32 0
  %3652 = bitcast %union.anon* %3651 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3652, i32 0, i32 0
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 23
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %3656 = bitcast %union.anon* %3655 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3656, i32 0, i32 0
  %3657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3658 = getelementptr inbounds %struct.GPR, %struct.GPR* %3657, i32 0, i32 25
  %3659 = getelementptr inbounds %struct.Reg, %struct.Reg* %3658, i32 0, i32 0
  %3660 = bitcast %union.anon* %3659 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3660, i32 0, i32 0
  %3661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3662 = getelementptr inbounds %struct.GPR, %struct.GPR* %3661, i32 0, i32 27
  %3663 = getelementptr inbounds %struct.Reg, %struct.Reg* %3662, i32 0, i32 0
  %3664 = bitcast %union.anon* %3663 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3664, i32 0, i32 0
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3666 = getelementptr inbounds %struct.GPR, %struct.GPR* %3665, i32 0, i32 29
  %3667 = getelementptr inbounds %struct.Reg, %struct.Reg* %3666, i32 0, i32 0
  %3668 = bitcast %union.anon* %3667 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3668, i32 0, i32 0
  %3669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3670 = getelementptr inbounds %struct.GPR, %struct.GPR* %3669, i32 0, i32 31
  %3671 = getelementptr inbounds %struct.Reg, %struct.Reg* %3670, i32 0, i32 0
  %3672 = bitcast %union.anon* %3671 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3672, i32 0, i32 0
  %3673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3674 = getelementptr inbounds %struct.GPR, %struct.GPR* %3673, i32 0, i32 1
  %3675 = getelementptr inbounds %struct.Reg, %struct.Reg* %3674, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %3675 to i16*
  %3676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3677 = getelementptr inbounds %struct.GPR, %struct.GPR* %3676, i32 0, i32 3
  %3678 = getelementptr inbounds %struct.Reg, %struct.Reg* %3677, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %3678 to i16*
  %3679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3680 = getelementptr inbounds %struct.GPR, %struct.GPR* %3679, i32 0, i32 5
  %3681 = getelementptr inbounds %struct.Reg, %struct.Reg* %3680, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %3681 to i16*
  %3682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3683 = getelementptr inbounds %struct.GPR, %struct.GPR* %3682, i32 0, i32 7
  %3684 = getelementptr inbounds %struct.Reg, %struct.Reg* %3683, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %3684 to i16*
  %3685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3686 = getelementptr inbounds %struct.GPR, %struct.GPR* %3685, i32 0, i32 9
  %3687 = getelementptr inbounds %struct.Reg, %struct.Reg* %3686, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %3687 to i16*
  %3688 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3689 = getelementptr inbounds %struct.GPR, %struct.GPR* %3688, i32 0, i32 11
  %3690 = getelementptr inbounds %struct.Reg, %struct.Reg* %3689, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %3690 to i16*
  %3691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3692 = getelementptr inbounds %struct.GPR, %struct.GPR* %3691, i32 0, i32 13
  %3693 = getelementptr inbounds %struct.Reg, %struct.Reg* %3692, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %3693 to i16*
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3695 = getelementptr inbounds %struct.GPR, %struct.GPR* %3694, i32 0, i32 15
  %3696 = getelementptr inbounds %struct.Reg, %struct.Reg* %3695, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %3696 to i16*
  %3697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3698 = getelementptr inbounds %struct.GPR, %struct.GPR* %3697, i32 0, i32 17
  %3699 = getelementptr inbounds %struct.Reg, %struct.Reg* %3698, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %3699 to i16*
  %3700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3701 = getelementptr inbounds %struct.GPR, %struct.GPR* %3700, i32 0, i32 19
  %3702 = getelementptr inbounds %struct.Reg, %struct.Reg* %3701, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %3702 to i16*
  %3703 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3704 = getelementptr inbounds %struct.GPR, %struct.GPR* %3703, i32 0, i32 21
  %3705 = getelementptr inbounds %struct.Reg, %struct.Reg* %3704, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %3705 to i16*
  %3706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3707 = getelementptr inbounds %struct.GPR, %struct.GPR* %3706, i32 0, i32 23
  %3708 = getelementptr inbounds %struct.Reg, %struct.Reg* %3707, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %3708 to i16*
  %3709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3710 = getelementptr inbounds %struct.GPR, %struct.GPR* %3709, i32 0, i32 25
  %3711 = getelementptr inbounds %struct.Reg, %struct.Reg* %3710, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %3711 to i16*
  %3712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3713 = getelementptr inbounds %struct.GPR, %struct.GPR* %3712, i32 0, i32 27
  %3714 = getelementptr inbounds %struct.Reg, %struct.Reg* %3713, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %3714 to i16*
  %3715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3716 = getelementptr inbounds %struct.GPR, %struct.GPR* %3715, i32 0, i32 29
  %3717 = getelementptr inbounds %struct.Reg, %struct.Reg* %3716, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %3717 to i16*
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3719 = getelementptr inbounds %struct.GPR, %struct.GPR* %3718, i32 0, i32 31
  %3720 = getelementptr inbounds %struct.Reg, %struct.Reg* %3719, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %3720 to i16*
  %3721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3722 = getelementptr inbounds %struct.GPR, %struct.GPR* %3721, i32 0, i32 33
  %3723 = getelementptr inbounds %struct.Reg, %struct.Reg* %3722, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %3723 to i16*
  %3724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3725 = getelementptr inbounds %struct.GPR, %struct.GPR* %3724, i32 0, i32 1
  %3726 = getelementptr inbounds %struct.Reg, %struct.Reg* %3725, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %3726 to i32*
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 3
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %3729 to i32*
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3731 = getelementptr inbounds %struct.GPR, %struct.GPR* %3730, i32 0, i32 5
  %3732 = getelementptr inbounds %struct.Reg, %struct.Reg* %3731, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %3732 to i32*
  %3733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3734 = getelementptr inbounds %struct.GPR, %struct.GPR* %3733, i32 0, i32 7
  %3735 = getelementptr inbounds %struct.Reg, %struct.Reg* %3734, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %3735 to i32*
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3737 = getelementptr inbounds %struct.GPR, %struct.GPR* %3736, i32 0, i32 9
  %3738 = getelementptr inbounds %struct.Reg, %struct.Reg* %3737, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %3738 to i32*
  %3739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3740 = getelementptr inbounds %struct.GPR, %struct.GPR* %3739, i32 0, i32 11
  %3741 = getelementptr inbounds %struct.Reg, %struct.Reg* %3740, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %3741 to i32*
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3743 = getelementptr inbounds %struct.GPR, %struct.GPR* %3742, i32 0, i32 13
  %3744 = getelementptr inbounds %struct.Reg, %struct.Reg* %3743, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %3744 to i32*
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3746 = getelementptr inbounds %struct.GPR, %struct.GPR* %3745, i32 0, i32 15
  %3747 = getelementptr inbounds %struct.Reg, %struct.Reg* %3746, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %3747 to i32*
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3749 = getelementptr inbounds %struct.GPR, %struct.GPR* %3748, i32 0, i32 33
  %3750 = getelementptr inbounds %struct.Reg, %struct.Reg* %3749, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %3750 to i32*
  %3751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3752 = getelementptr inbounds %struct.GPR, %struct.GPR* %3751, i32 0, i32 17
  %3753 = getelementptr inbounds %struct.Reg, %struct.Reg* %3752, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %3753 to i32*
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3755 = getelementptr inbounds %struct.GPR, %struct.GPR* %3754, i32 0, i32 19
  %3756 = getelementptr inbounds %struct.Reg, %struct.Reg* %3755, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %3756 to i32*
  %3757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3758 = getelementptr inbounds %struct.GPR, %struct.GPR* %3757, i32 0, i32 21
  %3759 = getelementptr inbounds %struct.Reg, %struct.Reg* %3758, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %3759 to i32*
  %3760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3761 = getelementptr inbounds %struct.GPR, %struct.GPR* %3760, i32 0, i32 23
  %3762 = getelementptr inbounds %struct.Reg, %struct.Reg* %3761, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %3762 to i32*
  %3763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3764 = getelementptr inbounds %struct.GPR, %struct.GPR* %3763, i32 0, i32 25
  %3765 = getelementptr inbounds %struct.Reg, %struct.Reg* %3764, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %3765 to i32*
  %3766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3767 = getelementptr inbounds %struct.GPR, %struct.GPR* %3766, i32 0, i32 27
  %3768 = getelementptr inbounds %struct.Reg, %struct.Reg* %3767, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %3768 to i32*
  %3769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3770 = getelementptr inbounds %struct.GPR, %struct.GPR* %3769, i32 0, i32 29
  %3771 = getelementptr inbounds %struct.Reg, %struct.Reg* %3770, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %3771 to i32*
  %3772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3773 = getelementptr inbounds %struct.GPR, %struct.GPR* %3772, i32 0, i32 31
  %3774 = getelementptr inbounds %struct.Reg, %struct.Reg* %3773, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %3774 to i32*
  %3775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3776 = getelementptr inbounds %struct.GPR, %struct.GPR* %3775, i32 0, i32 1
  %3777 = getelementptr inbounds %struct.Reg, %struct.Reg* %3776, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %3777 to i64*
  %3778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3779 = getelementptr inbounds %struct.GPR, %struct.GPR* %3778, i32 0, i32 3
  %3780 = getelementptr inbounds %struct.Reg, %struct.Reg* %3779, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %3780 to i64*
  %3781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3782 = getelementptr inbounds %struct.GPR, %struct.GPR* %3781, i32 0, i32 5
  %3783 = getelementptr inbounds %struct.Reg, %struct.Reg* %3782, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %3783 to i64*
  %3784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3785 = getelementptr inbounds %struct.GPR, %struct.GPR* %3784, i32 0, i32 7
  %3786 = getelementptr inbounds %struct.Reg, %struct.Reg* %3785, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %3786 to i64*
  %3787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3788 = getelementptr inbounds %struct.GPR, %struct.GPR* %3787, i32 0, i32 9
  %3789 = getelementptr inbounds %struct.Reg, %struct.Reg* %3788, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %3789 to i64*
  %3790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3791 = getelementptr inbounds %struct.GPR, %struct.GPR* %3790, i32 0, i32 11
  %3792 = getelementptr inbounds %struct.Reg, %struct.Reg* %3791, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %3792 to i64*
  %3793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3794 = getelementptr inbounds %struct.GPR, %struct.GPR* %3793, i32 0, i32 13
  %3795 = getelementptr inbounds %struct.Reg, %struct.Reg* %3794, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %3795 to i64*
  %3796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3797 = getelementptr inbounds %struct.GPR, %struct.GPR* %3796, i32 0, i32 15
  %3798 = getelementptr inbounds %struct.Reg, %struct.Reg* %3797, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %3798 to i64*
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 17
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %3801 to i64*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 19
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %3804 to i64*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 21
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %3807 to i64*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3809 = getelementptr inbounds %struct.GPR, %struct.GPR* %3808, i32 0, i32 23
  %3810 = getelementptr inbounds %struct.Reg, %struct.Reg* %3809, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %3810 to i64*
  %3811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3812 = getelementptr inbounds %struct.GPR, %struct.GPR* %3811, i32 0, i32 25
  %3813 = getelementptr inbounds %struct.Reg, %struct.Reg* %3812, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %3813 to i64*
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 27
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %3816 to i64*
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3818 = getelementptr inbounds %struct.GPR, %struct.GPR* %3817, i32 0, i32 29
  %3819 = getelementptr inbounds %struct.Reg, %struct.Reg* %3818, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %3819 to i64*
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 31
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %3822 to i64*
  %3823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3824 = getelementptr inbounds %struct.GPR, %struct.GPR* %3823, i32 0, i32 33
  %3825 = getelementptr inbounds %struct.Reg, %struct.Reg* %3824, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %3825 to i64*
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3827 = getelementptr inbounds %struct.Segments, %struct.Segments* %3826, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %3827 to i16*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3829 = getelementptr inbounds %struct.Segments, %struct.Segments* %3828, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %3829 to i16*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3831 = getelementptr inbounds %struct.Segments, %struct.Segments* %3830, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %3831 to i16*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3833 = getelementptr inbounds %struct.Segments, %struct.Segments* %3832, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %3833 to i16*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3835 = getelementptr inbounds %struct.Segments, %struct.Segments* %3834, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %3835 to i16*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3837 = getelementptr inbounds %struct.Segments, %struct.Segments* %3836, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %3837 to i16*
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3839 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3838, i32 0, i32 5
  %3840 = getelementptr inbounds %struct.Reg, %struct.Reg* %3839, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %3840 to i64*
  %3841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3842 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3841, i32 0, i32 7
  %3843 = getelementptr inbounds %struct.Reg, %struct.Reg* %3842, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %3843 to i64*
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3845 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3844, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %3845 to %"class.std::bitset"*
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3847 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3846, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %3847 to %"class.std::bitset"*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3848, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %3849 to %"class.std::bitset"*
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3851 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3850, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %3851 to %"class.std::bitset"*
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3853 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3852, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %3853 to %"class.std::bitset"*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3855 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3854, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %3855 to %"class.std::bitset"*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3857 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3856, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %3857 to %"class.std::bitset"*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3859 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3858, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %3859 to %"class.std::bitset"*
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3861 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3860, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %3861 to %"class.std::bitset"*
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3863 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3862, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %3863 to %"class.std::bitset"*
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3865 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3864, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %3865 to %"class.std::bitset"*
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3867 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3866, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %3867 to %"class.std::bitset"*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3869 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3868, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %3869 to %"class.std::bitset"*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3871 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3870, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %3871 to %"class.std::bitset"*
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3873 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3872, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %3873 to %"class.std::bitset"*
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3874, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %3875 to %"class.std::bitset"*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3877 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3876, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %3877 to %union.vec128_t*
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3879 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3878, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %3879 to %union.vec128_t*
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3880, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %3881 to %union.vec128_t*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3883 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3882, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %3883 to %union.vec128_t*
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3885 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3884, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %3885 to %union.vec128_t*
  %3886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3887 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3886, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %3887 to %union.vec128_t*
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3889 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3888, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %3889 to %union.vec128_t*
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3891 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3890, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %3891 to %union.vec128_t*
  %3892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3893 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3892, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %3893 to %union.vec128_t*
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3895 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3894, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %3895 to %union.vec128_t*
  %3896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3897 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3896, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %3897 to %union.vec128_t*
  %3898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3899 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3898, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %3899 to %union.vec128_t*
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3901 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3900, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %3901 to %union.vec128_t*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3903 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3902, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %3903 to %union.vec128_t*
  %3904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3905 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3904, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %3905 to %union.vec128_t*
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3907 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3906, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %3907 to %union.vec128_t*
  %3908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3909 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3908, i32 0, i32 0
  %3910 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3909, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3910, i32 0, i32 1
  %3911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3912 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3911, i32 0, i32 0
  %3913 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3912, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3913, i32 0, i32 1
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3915 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3914, i32 0, i32 0
  %3916 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3915, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3916, i32 0, i32 1
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3918 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3917, i32 0, i32 0
  %3919 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3918, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3919, i32 0, i32 1
  %3920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3921 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3920, i32 0, i32 0
  %3922 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3921, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3922, i32 0, i32 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3924 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3923, i32 0, i32 0
  %3925 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3924, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3925, i32 0, i32 1
  %3926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3927 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3926, i32 0, i32 0
  %3928 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3927, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3928, i32 0, i32 1
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3930 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3929, i32 0, i32 0
  %3931 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3930, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3931, i32 0, i32 1
  %3932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3933 = getelementptr inbounds %struct.MMX, %struct.MMX* %3932, i32 0, i32 0
  %3934 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3933, i64 0, i64 0
  %3935 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3934, i32 0, i32 1
  %3936 = bitcast %union.vec64_t* %3935 to %struct.uint64v1_t*
  %3937 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3936, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %3937, i64 0, i64 0
  %3938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3939 = getelementptr inbounds %struct.MMX, %struct.MMX* %3938, i32 0, i32 0
  %3940 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3939, i64 0, i64 1
  %3941 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3940, i32 0, i32 1
  %3942 = bitcast %union.vec64_t* %3941 to %struct.uint64v1_t*
  %3943 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3942, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %3943, i64 0, i64 0
  %3944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3945 = getelementptr inbounds %struct.MMX, %struct.MMX* %3944, i32 0, i32 0
  %3946 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3945, i64 0, i64 2
  %3947 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3946, i32 0, i32 1
  %3948 = bitcast %union.vec64_t* %3947 to %struct.uint64v1_t*
  %3949 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3948, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %3949, i64 0, i64 0
  %3950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3951 = getelementptr inbounds %struct.MMX, %struct.MMX* %3950, i32 0, i32 0
  %3952 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3951, i64 0, i64 3
  %3953 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3952, i32 0, i32 1
  %3954 = bitcast %union.vec64_t* %3953 to %struct.uint64v1_t*
  %3955 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3954, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %3955, i64 0, i64 0
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3957 = getelementptr inbounds %struct.MMX, %struct.MMX* %3956, i32 0, i32 0
  %3958 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3957, i64 0, i64 4
  %3959 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3958, i32 0, i32 1
  %3960 = bitcast %union.vec64_t* %3959 to %struct.uint64v1_t*
  %3961 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3960, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %3961, i64 0, i64 0
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3963 = getelementptr inbounds %struct.MMX, %struct.MMX* %3962, i32 0, i32 0
  %3964 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3963, i64 0, i64 5
  %3965 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3964, i32 0, i32 1
  %3966 = bitcast %union.vec64_t* %3965 to %struct.uint64v1_t*
  %3967 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3966, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %3967, i64 0, i64 0
  %3968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3969 = getelementptr inbounds %struct.MMX, %struct.MMX* %3968, i32 0, i32 0
  %3970 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3969, i64 0, i64 6
  %3971 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3970, i32 0, i32 1
  %3972 = bitcast %union.vec64_t* %3971 to %struct.uint64v1_t*
  %3973 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3972, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %3973, i64 0, i64 0
  %3974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3975 = getelementptr inbounds %struct.MMX, %struct.MMX* %3974, i32 0, i32 0
  %3976 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3975, i64 0, i64 7
  %3977 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3976, i32 0, i32 1
  %3978 = bitcast %union.vec64_t* %3977 to %struct.uint64v1_t*
  %3979 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3978, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %3979, i64 0, i64 0
  %3980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3980, i32 0, i32 5
  %3981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3981, i32 0, i32 1
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3982, i32 0, i32 11
  %3983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3983, i32 0, i32 13
  %3984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3984, i32 0, i32 3
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3985, i32 0, i32 9
  %3986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3986, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2494
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2494
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2494
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2494
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2494
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2494
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2494
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2494
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2494
  %3987 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %3988 = load double, double* %3987, !alias.scope !2498, !noalias !2499
  %3989 = load i64, i64* %RSP.i245, !alias.scope !2498, !noalias !2499
  %3990 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2494
  %3991 = inttoptr i64 %3989 to i64*
  %3992 = load i64, i64* %3991
  store i64 %3992, i64* %PC.i184, !alias.scope !2498, !noalias !2499
  %3993 = add i64 %3989, 8
  store i64 %3993, i64* %RSP.i245, !alias.scope !2498, !noalias !2499
  %3994 = call double @cos(double %3988)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2498, !noalias !2499
  %3995 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %3994, double* %3995, !alias.scope !2498, !noalias !2499
  %3996 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2494
  %3997 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3997)
  %3998 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3998)
  %3999 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3999)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %4000 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4000)
  %4001 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4001)
  %4002 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4002)
  %4003 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4003)
  %4004 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4004)
  %4005 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4005)
  %4006 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4006)
  %4007 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4007)
  %4008 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4008)
  %4009 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4009)
  %4010 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4010)
  %4011 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4011)
  %4012 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4012)
  %4013 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4013)
  %4014 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4014)
  %4015 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4015)
  %4016 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4016)
  %4017 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4017)
  %4018 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4018)
  %4019 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4019)
  %4020 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4021 = load i64, i64* %RBP
  %4022 = sub i64 %4021, 120
  %4023 = load i64, i64* %PC
  %4024 = add i64 %4023, 5
  store i64 %4024, i64* %PC
  %4025 = inttoptr i64 %4022 to double*
  %4026 = load double, double* %4025
  %4027 = bitcast i8* %4020 to double*
  store double %4026, double* %4027, align 1, !tbaa !2452
  %4028 = getelementptr inbounds i8, i8* %4020, i64 8
  %4029 = bitcast i8* %4028 to double*
  store double 0.000000e+00, double* %4029, align 1, !tbaa !2452
  %4030 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4031 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4032 = bitcast %union.vec128_t* %XMM0 to i8*
  %4033 = load i64, i64* %PC
  %4034 = add i64 %4033, 4
  store i64 %4034, i64* %PC
  %4035 = bitcast i8* %4031 to double*
  %4036 = load double, double* %4035, align 1
  %4037 = getelementptr inbounds i8, i8* %4031, i64 8
  %4038 = bitcast i8* %4037 to i64*
  %4039 = load i64, i64* %4038, align 1
  %4040 = bitcast i8* %4032 to double*
  %4041 = load double, double* %4040, align 1
  %4042 = fmul double %4036, %4041
  %4043 = bitcast i8* %4030 to double*
  store double %4042, double* %4043, align 1, !tbaa !2452
  %4044 = getelementptr inbounds i8, i8* %4030, i64 8
  %4045 = bitcast i8* %4044 to i64*
  store i64 %4039, i64* %4045, align 1, !tbaa !2452
  %4046 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4047 = load i64, i64* %PC
  %4048 = add i64 %4047, 9
  store i64 %4048, i64* %PC
  %4049 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %4050 = bitcast i8* %4046 to double*
  store double %4049, double* %4050, align 1, !tbaa !2452
  %4051 = getelementptr inbounds i8, i8* %4046, i64 8
  %4052 = bitcast i8* %4051 to double*
  store double 0.000000e+00, double* %4052, align 1, !tbaa !2452
  %4053 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4054 = load i64, i64* %PC
  %4055 = add i64 %4054, 9
  store i64 %4055, i64* %PC
  %4056 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4057 = bitcast i8* %4053 to double*
  store double %4056, double* %4057, align 1, !tbaa !2452
  %4058 = getelementptr inbounds i8, i8* %4053, i64 8
  %4059 = bitcast i8* %4058 to double*
  store double 0.000000e+00, double* %4059, align 1, !tbaa !2452
  %4060 = load i64, i64* %RBP
  %4061 = sub i64 %4060, 128
  %4062 = bitcast %union.vec128_t* %XMM0 to i8*
  %4063 = load i64, i64* %PC
  %4064 = add i64 %4063, 5
  store i64 %4064, i64* %PC
  %4065 = bitcast i8* %4062 to double*
  %4066 = load double, double* %4065, align 1
  %4067 = inttoptr i64 %4061 to double*
  store double %4066, double* %4067
  %4068 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4069 = bitcast %union.vec128_t* %XMM2 to i8*
  %4070 = load i64, i64* %PC
  %4071 = add i64 %4070, 3
  store i64 %4071, i64* %PC
  %4072 = bitcast i8* %4069 to <2 x i32>*
  %4073 = load <2 x i32>, <2 x i32>* %4072, align 1
  %4074 = getelementptr inbounds i8, i8* %4069, i64 8
  %4075 = bitcast i8* %4074 to <2 x i32>*
  %4076 = load <2 x i32>, <2 x i32>* %4075, align 1
  %4077 = extractelement <2 x i32> %4073, i32 0
  %4078 = bitcast i8* %4068 to i32*
  store i32 %4077, i32* %4078, align 1, !tbaa !2454
  %4079 = extractelement <2 x i32> %4073, i32 1
  %4080 = getelementptr inbounds i8, i8* %4068, i64 4
  %4081 = bitcast i8* %4080 to i32*
  store i32 %4079, i32* %4081, align 1, !tbaa !2454
  %4082 = extractelement <2 x i32> %4076, i32 0
  %4083 = getelementptr inbounds i8, i8* %4068, i64 8
  %4084 = bitcast i8* %4083 to i32*
  store i32 %4082, i32* %4084, align 1, !tbaa !2454
  %4085 = extractelement <2 x i32> %4076, i32 1
  %4086 = getelementptr inbounds i8, i8* %4068, i64 12
  %4087 = bitcast i8* %4086 to i32*
  store i32 %4085, i32* %4087, align 1, !tbaa !2454
  %4088 = load i64, i64* %RBP
  %4089 = sub i64 %4088, 136
  %4090 = bitcast %union.vec128_t* %XMM1 to i8*
  %4091 = load i64, i64* %PC
  %4092 = add i64 %4091, 8
  store i64 %4092, i64* %PC
  %4093 = bitcast i8* %4090 to double*
  %4094 = load double, double* %4093, align 1
  %4095 = inttoptr i64 %4089 to double*
  store double %4094, double* %4095
  %4096 = load i64, i64* %PC
  %4097 = sub i64 %4096, 3882
  %4098 = load i64, i64* %PC
  %4099 = add i64 %4098, 5
  %4100 = load i64, i64* %PC
  %4101 = add i64 %4100, 5
  store i64 %4101, i64* %PC
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4103 = load i64, i64* %4102, align 8, !tbaa !2428
  %4104 = add i64 %4103, -8
  %4105 = inttoptr i64 %4104 to i64*
  store i64 %4099, i64* %4105
  store i64 %4104, i64* %4102, align 8, !tbaa !2428
  %4106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4097, i64* %4106, align 8, !tbaa !2428
  %4107 = load i64, i64* %PC
  %4108 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4108)
  %4109 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4109)
  %4110 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4110)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %4111 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4111)
  %4112 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4112)
  %4113 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4113)
  %4114 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4114)
  %4115 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4115)
  %4116 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4116)
  %4117 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4117)
  %4118 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4118)
  %4119 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4119)
  %4120 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4120)
  %4121 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4121)
  %4122 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4122)
  %4123 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4123)
  %4124 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4124)
  %4125 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4125)
  %4126 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4126)
  %4127 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4127)
  %4128 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4128)
  %4129 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4129)
  %4130 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4130)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2500
  store i64 %4107, i64* %curr_pc.i2, align 8, !noalias !2500
  store %struct.Memory* %3996, %struct.Memory** %memory.i3, align 8, !noalias !2500
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2500
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2500
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2500
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2500
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2500
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2500
  store %struct.Memory* %3996, %struct.Memory** %MEMORY.i10, align 8, !noalias !2500
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4132 = getelementptr inbounds %struct.GPR, %struct.GPR* %4131, i32 0, i32 33
  %4133 = getelementptr inbounds %struct.Reg, %struct.Reg* %4132, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %4133 to i64*
  store i64 %4107, i64* %PC.i25, align 8, !alias.scope !2504, !noalias !2505
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4135 = getelementptr inbounds %struct.GPR, %struct.GPR* %4134, i32 0, i32 1
  %4136 = getelementptr inbounds %struct.Reg, %struct.Reg* %4135, i32 0, i32 0
  %4137 = bitcast %union.anon* %4136 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4137, i32 0, i32 1
  %4138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4139 = getelementptr inbounds %struct.GPR, %struct.GPR* %4138, i32 0, i32 3
  %4140 = getelementptr inbounds %struct.Reg, %struct.Reg* %4139, i32 0, i32 0
  %4141 = bitcast %union.anon* %4140 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4141, i32 0, i32 1
  %4142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4143 = getelementptr inbounds %struct.GPR, %struct.GPR* %4142, i32 0, i32 5
  %4144 = getelementptr inbounds %struct.Reg, %struct.Reg* %4143, i32 0, i32 0
  %4145 = bitcast %union.anon* %4144 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4145, i32 0, i32 1
  %4146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4147 = getelementptr inbounds %struct.GPR, %struct.GPR* %4146, i32 0, i32 7
  %4148 = getelementptr inbounds %struct.Reg, %struct.Reg* %4147, i32 0, i32 0
  %4149 = bitcast %union.anon* %4148 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4149, i32 0, i32 1
  %4150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4151 = getelementptr inbounds %struct.GPR, %struct.GPR* %4150, i32 0, i32 1
  %4152 = getelementptr inbounds %struct.Reg, %struct.Reg* %4151, i32 0, i32 0
  %4153 = bitcast %union.anon* %4152 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4153, i32 0, i32 0
  %4154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4155 = getelementptr inbounds %struct.GPR, %struct.GPR* %4154, i32 0, i32 3
  %4156 = getelementptr inbounds %struct.Reg, %struct.Reg* %4155, i32 0, i32 0
  %4157 = bitcast %union.anon* %4156 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4157, i32 0, i32 0
  %4158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4159 = getelementptr inbounds %struct.GPR, %struct.GPR* %4158, i32 0, i32 5
  %4160 = getelementptr inbounds %struct.Reg, %struct.Reg* %4159, i32 0, i32 0
  %4161 = bitcast %union.anon* %4160 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4161, i32 0, i32 0
  %4162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4163 = getelementptr inbounds %struct.GPR, %struct.GPR* %4162, i32 0, i32 7
  %4164 = getelementptr inbounds %struct.Reg, %struct.Reg* %4163, i32 0, i32 0
  %4165 = bitcast %union.anon* %4164 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4165, i32 0, i32 0
  %4166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4167 = getelementptr inbounds %struct.GPR, %struct.GPR* %4166, i32 0, i32 9
  %4168 = getelementptr inbounds %struct.Reg, %struct.Reg* %4167, i32 0, i32 0
  %4169 = bitcast %union.anon* %4168 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4169, i32 0, i32 0
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4171 = getelementptr inbounds %struct.GPR, %struct.GPR* %4170, i32 0, i32 11
  %4172 = getelementptr inbounds %struct.Reg, %struct.Reg* %4171, i32 0, i32 0
  %4173 = bitcast %union.anon* %4172 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4173, i32 0, i32 0
  %4174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4175 = getelementptr inbounds %struct.GPR, %struct.GPR* %4174, i32 0, i32 13
  %4176 = getelementptr inbounds %struct.Reg, %struct.Reg* %4175, i32 0, i32 0
  %4177 = bitcast %union.anon* %4176 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4177, i32 0, i32 0
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4179 = getelementptr inbounds %struct.GPR, %struct.GPR* %4178, i32 0, i32 15
  %4180 = getelementptr inbounds %struct.Reg, %struct.Reg* %4179, i32 0, i32 0
  %4181 = bitcast %union.anon* %4180 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4181, i32 0, i32 0
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4183 = getelementptr inbounds %struct.GPR, %struct.GPR* %4182, i32 0, i32 17
  %4184 = getelementptr inbounds %struct.Reg, %struct.Reg* %4183, i32 0, i32 0
  %4185 = bitcast %union.anon* %4184 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4185, i32 0, i32 0
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 19
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %4189 = bitcast %union.anon* %4188 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4189, i32 0, i32 0
  %4190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4191 = getelementptr inbounds %struct.GPR, %struct.GPR* %4190, i32 0, i32 21
  %4192 = getelementptr inbounds %struct.Reg, %struct.Reg* %4191, i32 0, i32 0
  %4193 = bitcast %union.anon* %4192 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4193, i32 0, i32 0
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 23
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %4197 = bitcast %union.anon* %4196 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4197, i32 0, i32 0
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 25
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %4201 = bitcast %union.anon* %4200 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4201, i32 0, i32 0
  %4202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4203 = getelementptr inbounds %struct.GPR, %struct.GPR* %4202, i32 0, i32 27
  %4204 = getelementptr inbounds %struct.Reg, %struct.Reg* %4203, i32 0, i32 0
  %4205 = bitcast %union.anon* %4204 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4205, i32 0, i32 0
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 29
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %4209 = bitcast %union.anon* %4208 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4209, i32 0, i32 0
  %4210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4211 = getelementptr inbounds %struct.GPR, %struct.GPR* %4210, i32 0, i32 31
  %4212 = getelementptr inbounds %struct.Reg, %struct.Reg* %4211, i32 0, i32 0
  %4213 = bitcast %union.anon* %4212 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4213, i32 0, i32 0
  %4214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4215 = getelementptr inbounds %struct.GPR, %struct.GPR* %4214, i32 0, i32 1
  %4216 = getelementptr inbounds %struct.Reg, %struct.Reg* %4215, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %4216 to i16*
  %4217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4218 = getelementptr inbounds %struct.GPR, %struct.GPR* %4217, i32 0, i32 3
  %4219 = getelementptr inbounds %struct.Reg, %struct.Reg* %4218, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %4219 to i16*
  %4220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4221 = getelementptr inbounds %struct.GPR, %struct.GPR* %4220, i32 0, i32 5
  %4222 = getelementptr inbounds %struct.Reg, %struct.Reg* %4221, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %4222 to i16*
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4224 = getelementptr inbounds %struct.GPR, %struct.GPR* %4223, i32 0, i32 7
  %4225 = getelementptr inbounds %struct.Reg, %struct.Reg* %4224, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %4225 to i16*
  %4226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4227 = getelementptr inbounds %struct.GPR, %struct.GPR* %4226, i32 0, i32 9
  %4228 = getelementptr inbounds %struct.Reg, %struct.Reg* %4227, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %4228 to i16*
  %4229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4230 = getelementptr inbounds %struct.GPR, %struct.GPR* %4229, i32 0, i32 11
  %4231 = getelementptr inbounds %struct.Reg, %struct.Reg* %4230, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %4231 to i16*
  %4232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4233 = getelementptr inbounds %struct.GPR, %struct.GPR* %4232, i32 0, i32 13
  %4234 = getelementptr inbounds %struct.Reg, %struct.Reg* %4233, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %4234 to i16*
  %4235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4236 = getelementptr inbounds %struct.GPR, %struct.GPR* %4235, i32 0, i32 15
  %4237 = getelementptr inbounds %struct.Reg, %struct.Reg* %4236, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %4237 to i16*
  %4238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4239 = getelementptr inbounds %struct.GPR, %struct.GPR* %4238, i32 0, i32 17
  %4240 = getelementptr inbounds %struct.Reg, %struct.Reg* %4239, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %4240 to i16*
  %4241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4242 = getelementptr inbounds %struct.GPR, %struct.GPR* %4241, i32 0, i32 19
  %4243 = getelementptr inbounds %struct.Reg, %struct.Reg* %4242, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %4243 to i16*
  %4244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4245 = getelementptr inbounds %struct.GPR, %struct.GPR* %4244, i32 0, i32 21
  %4246 = getelementptr inbounds %struct.Reg, %struct.Reg* %4245, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %4246 to i16*
  %4247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4248 = getelementptr inbounds %struct.GPR, %struct.GPR* %4247, i32 0, i32 23
  %4249 = getelementptr inbounds %struct.Reg, %struct.Reg* %4248, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %4249 to i16*
  %4250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4251 = getelementptr inbounds %struct.GPR, %struct.GPR* %4250, i32 0, i32 25
  %4252 = getelementptr inbounds %struct.Reg, %struct.Reg* %4251, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %4252 to i16*
  %4253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4254 = getelementptr inbounds %struct.GPR, %struct.GPR* %4253, i32 0, i32 27
  %4255 = getelementptr inbounds %struct.Reg, %struct.Reg* %4254, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %4255 to i16*
  %4256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4257 = getelementptr inbounds %struct.GPR, %struct.GPR* %4256, i32 0, i32 29
  %4258 = getelementptr inbounds %struct.Reg, %struct.Reg* %4257, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %4258 to i16*
  %4259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4260 = getelementptr inbounds %struct.GPR, %struct.GPR* %4259, i32 0, i32 31
  %4261 = getelementptr inbounds %struct.Reg, %struct.Reg* %4260, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %4261 to i16*
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 33
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %4264 to i16*
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 1
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %4267 to i32*
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 3
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %4270 to i32*
  %4271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4272 = getelementptr inbounds %struct.GPR, %struct.GPR* %4271, i32 0, i32 5
  %4273 = getelementptr inbounds %struct.Reg, %struct.Reg* %4272, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %4273 to i32*
  %4274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4275 = getelementptr inbounds %struct.GPR, %struct.GPR* %4274, i32 0, i32 7
  %4276 = getelementptr inbounds %struct.Reg, %struct.Reg* %4275, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %4276 to i32*
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 9
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %4279 to i32*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 11
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %4282 to i32*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 13
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %4285 to i32*
  %4286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4287 = getelementptr inbounds %struct.GPR, %struct.GPR* %4286, i32 0, i32 15
  %4288 = getelementptr inbounds %struct.Reg, %struct.Reg* %4287, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %4288 to i32*
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4290 = getelementptr inbounds %struct.GPR, %struct.GPR* %4289, i32 0, i32 33
  %4291 = getelementptr inbounds %struct.Reg, %struct.Reg* %4290, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %4291 to i32*
  %4292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4293 = getelementptr inbounds %struct.GPR, %struct.GPR* %4292, i32 0, i32 17
  %4294 = getelementptr inbounds %struct.Reg, %struct.Reg* %4293, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %4294 to i32*
  %4295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4296 = getelementptr inbounds %struct.GPR, %struct.GPR* %4295, i32 0, i32 19
  %4297 = getelementptr inbounds %struct.Reg, %struct.Reg* %4296, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %4297 to i32*
  %4298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4299 = getelementptr inbounds %struct.GPR, %struct.GPR* %4298, i32 0, i32 21
  %4300 = getelementptr inbounds %struct.Reg, %struct.Reg* %4299, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %4300 to i32*
  %4301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4302 = getelementptr inbounds %struct.GPR, %struct.GPR* %4301, i32 0, i32 23
  %4303 = getelementptr inbounds %struct.Reg, %struct.Reg* %4302, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %4303 to i32*
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4305 = getelementptr inbounds %struct.GPR, %struct.GPR* %4304, i32 0, i32 25
  %4306 = getelementptr inbounds %struct.Reg, %struct.Reg* %4305, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %4306 to i32*
  %4307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4308 = getelementptr inbounds %struct.GPR, %struct.GPR* %4307, i32 0, i32 27
  %4309 = getelementptr inbounds %struct.Reg, %struct.Reg* %4308, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %4309 to i32*
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 29
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %4312 to i32*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 31
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %4315 to i32*
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 1
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %4318 to i64*
  %4319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4320 = getelementptr inbounds %struct.GPR, %struct.GPR* %4319, i32 0, i32 3
  %4321 = getelementptr inbounds %struct.Reg, %struct.Reg* %4320, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %4321 to i64*
  %4322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4323 = getelementptr inbounds %struct.GPR, %struct.GPR* %4322, i32 0, i32 5
  %4324 = getelementptr inbounds %struct.Reg, %struct.Reg* %4323, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %4324 to i64*
  %4325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4326 = getelementptr inbounds %struct.GPR, %struct.GPR* %4325, i32 0, i32 7
  %4327 = getelementptr inbounds %struct.Reg, %struct.Reg* %4326, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %4327 to i64*
  %4328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4329 = getelementptr inbounds %struct.GPR, %struct.GPR* %4328, i32 0, i32 9
  %4330 = getelementptr inbounds %struct.Reg, %struct.Reg* %4329, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %4330 to i64*
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4332 = getelementptr inbounds %struct.GPR, %struct.GPR* %4331, i32 0, i32 11
  %4333 = getelementptr inbounds %struct.Reg, %struct.Reg* %4332, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %4333 to i64*
  %4334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4335 = getelementptr inbounds %struct.GPR, %struct.GPR* %4334, i32 0, i32 13
  %4336 = getelementptr inbounds %struct.Reg, %struct.Reg* %4335, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %4336 to i64*
  %4337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4338 = getelementptr inbounds %struct.GPR, %struct.GPR* %4337, i32 0, i32 15
  %4339 = getelementptr inbounds %struct.Reg, %struct.Reg* %4338, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %4339 to i64*
  %4340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4341 = getelementptr inbounds %struct.GPR, %struct.GPR* %4340, i32 0, i32 17
  %4342 = getelementptr inbounds %struct.Reg, %struct.Reg* %4341, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %4342 to i64*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 19
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 21
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %4348 to i64*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 23
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %4351 to i64*
  %4352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4353 = getelementptr inbounds %struct.GPR, %struct.GPR* %4352, i32 0, i32 25
  %4354 = getelementptr inbounds %struct.Reg, %struct.Reg* %4353, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %4354 to i64*
  %4355 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4356 = getelementptr inbounds %struct.GPR, %struct.GPR* %4355, i32 0, i32 27
  %4357 = getelementptr inbounds %struct.Reg, %struct.Reg* %4356, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %4357 to i64*
  %4358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4359 = getelementptr inbounds %struct.GPR, %struct.GPR* %4358, i32 0, i32 29
  %4360 = getelementptr inbounds %struct.Reg, %struct.Reg* %4359, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %4360 to i64*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4362 = getelementptr inbounds %struct.GPR, %struct.GPR* %4361, i32 0, i32 31
  %4363 = getelementptr inbounds %struct.Reg, %struct.Reg* %4362, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %4363 to i64*
  %4364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4365 = getelementptr inbounds %struct.GPR, %struct.GPR* %4364, i32 0, i32 33
  %4366 = getelementptr inbounds %struct.Reg, %struct.Reg* %4365, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %4366 to i64*
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4368 = getelementptr inbounds %struct.Segments, %struct.Segments* %4367, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %4368 to i16*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4370 = getelementptr inbounds %struct.Segments, %struct.Segments* %4369, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %4370 to i16*
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4372 = getelementptr inbounds %struct.Segments, %struct.Segments* %4371, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %4372 to i16*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4374 = getelementptr inbounds %struct.Segments, %struct.Segments* %4373, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %4374 to i16*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4376 = getelementptr inbounds %struct.Segments, %struct.Segments* %4375, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %4376 to i16*
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4378 = getelementptr inbounds %struct.Segments, %struct.Segments* %4377, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %4378 to i16*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4380 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4379, i32 0, i32 5
  %4381 = getelementptr inbounds %struct.Reg, %struct.Reg* %4380, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %4381 to i64*
  %4382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4383 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4382, i32 0, i32 7
  %4384 = getelementptr inbounds %struct.Reg, %struct.Reg* %4383, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %4384 to i64*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4386 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4385, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %4386 to %"class.std::bitset"*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4387, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %4388 to %"class.std::bitset"*
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4389, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %4390 to %"class.std::bitset"*
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4391, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %4392 to %"class.std::bitset"*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4394 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4393, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %4394 to %"class.std::bitset"*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4395, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %4396 to %"class.std::bitset"*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4397, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %4398 to %"class.std::bitset"*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4400 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4399, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %4400 to %"class.std::bitset"*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4401, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %4402 to %"class.std::bitset"*
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4403, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %4404 to %"class.std::bitset"*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4405, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %4406 to %"class.std::bitset"*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4407, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %4408 to %"class.std::bitset"*
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4410 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4409, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %4410 to %"class.std::bitset"*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4412 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4411, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %4412 to %"class.std::bitset"*
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4414 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4413, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %4414 to %"class.std::bitset"*
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4415, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %4416 to %"class.std::bitset"*
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4418 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4417, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %4418 to %union.vec128_t*
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4419, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %4420 to %union.vec128_t*
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4421, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %4422 to %union.vec128_t*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4424 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4423, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %4424 to %union.vec128_t*
  %4425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4426 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4425, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %4426 to %union.vec128_t*
  %4427 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4428 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4427, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %4428 to %union.vec128_t*
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4430 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4429, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %4430 to %union.vec128_t*
  %4431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4432 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4431, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %4432 to %union.vec128_t*
  %4433 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4434 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4433, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %4434 to %union.vec128_t*
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4436 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4435, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %4436 to %union.vec128_t*
  %4437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4438 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4437, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %4438 to %union.vec128_t*
  %4439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4440 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4439, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %4440 to %union.vec128_t*
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4442 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4441, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %4442 to %union.vec128_t*
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4444 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4443, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %4444 to %union.vec128_t*
  %4445 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4446 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4445, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %4446 to %union.vec128_t*
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4448 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4447, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %4448 to %union.vec128_t*
  %4449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4450 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4449, i32 0, i32 0
  %4451 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4450, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4451, i32 0, i32 1
  %4452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4453 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4452, i32 0, i32 0
  %4454 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4453, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4454, i32 0, i32 1
  %4455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4456 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4455, i32 0, i32 0
  %4457 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4456, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4457, i32 0, i32 1
  %4458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4459 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4458, i32 0, i32 0
  %4460 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4459, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4460, i32 0, i32 1
  %4461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4462 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4461, i32 0, i32 0
  %4463 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4462, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4463, i32 0, i32 1
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4465 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4464, i32 0, i32 0
  %4466 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4465, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4466, i32 0, i32 1
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4468 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4467, i32 0, i32 0
  %4469 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4468, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4469, i32 0, i32 1
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4471 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4470, i32 0, i32 0
  %4472 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4471, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4472, i32 0, i32 1
  %4473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4474 = getelementptr inbounds %struct.MMX, %struct.MMX* %4473, i32 0, i32 0
  %4475 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4474, i64 0, i64 0
  %4476 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4475, i32 0, i32 1
  %4477 = bitcast %union.vec64_t* %4476 to %struct.uint64v1_t*
  %4478 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4477, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %4478, i64 0, i64 0
  %4479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4480 = getelementptr inbounds %struct.MMX, %struct.MMX* %4479, i32 0, i32 0
  %4481 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4480, i64 0, i64 1
  %4482 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4481, i32 0, i32 1
  %4483 = bitcast %union.vec64_t* %4482 to %struct.uint64v1_t*
  %4484 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4483, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %4484, i64 0, i64 0
  %4485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4486 = getelementptr inbounds %struct.MMX, %struct.MMX* %4485, i32 0, i32 0
  %4487 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4486, i64 0, i64 2
  %4488 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4487, i32 0, i32 1
  %4489 = bitcast %union.vec64_t* %4488 to %struct.uint64v1_t*
  %4490 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4489, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %4490, i64 0, i64 0
  %4491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4492 = getelementptr inbounds %struct.MMX, %struct.MMX* %4491, i32 0, i32 0
  %4493 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4492, i64 0, i64 3
  %4494 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4493, i32 0, i32 1
  %4495 = bitcast %union.vec64_t* %4494 to %struct.uint64v1_t*
  %4496 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4495, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %4496, i64 0, i64 0
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4498 = getelementptr inbounds %struct.MMX, %struct.MMX* %4497, i32 0, i32 0
  %4499 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4498, i64 0, i64 4
  %4500 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4499, i32 0, i32 1
  %4501 = bitcast %union.vec64_t* %4500 to %struct.uint64v1_t*
  %4502 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4501, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %4502, i64 0, i64 0
  %4503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4504 = getelementptr inbounds %struct.MMX, %struct.MMX* %4503, i32 0, i32 0
  %4505 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4504, i64 0, i64 5
  %4506 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4505, i32 0, i32 1
  %4507 = bitcast %union.vec64_t* %4506 to %struct.uint64v1_t*
  %4508 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4507, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %4508, i64 0, i64 0
  %4509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4510 = getelementptr inbounds %struct.MMX, %struct.MMX* %4509, i32 0, i32 0
  %4511 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4510, i64 0, i64 6
  %4512 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4511, i32 0, i32 1
  %4513 = bitcast %union.vec64_t* %4512 to %struct.uint64v1_t*
  %4514 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4513, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %4514, i64 0, i64 0
  %4515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4516 = getelementptr inbounds %struct.MMX, %struct.MMX* %4515, i32 0, i32 0
  %4517 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4516, i64 0, i64 7
  %4518 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4517, i32 0, i32 1
  %4519 = bitcast %union.vec64_t* %4518 to %struct.uint64v1_t*
  %4520 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4519, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %4520, i64 0, i64 0
  %4521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4521, i32 0, i32 5
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4522, i32 0, i32 1
  %4523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4523, i32 0, i32 11
  %4524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4524, i32 0, i32 13
  %4525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4525, i32 0, i32 3
  %4526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4526, i32 0, i32 9
  %4527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4527, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2500
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2500
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2500
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2500
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2500
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2500
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2500
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2500
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2500
  %4528 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %4529 = load double, double* %4528, !alias.scope !2504, !noalias !2505
  %4530 = load i64, i64* %RSP.i86, !alias.scope !2504, !noalias !2505
  %4531 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2500
  %4532 = inttoptr i64 %4530 to i64*
  %4533 = load i64, i64* %4532
  store i64 %4533, i64* %PC.i25, !alias.scope !2504, !noalias !2505
  %4534 = add i64 %4530, 8
  store i64 %4534, i64* %RSP.i86, !alias.scope !2504, !noalias !2505
  %4535 = call double @cos(double %4529)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2504, !noalias !2505
  %4536 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %4535, double* %4536, !alias.scope !2504, !noalias !2505
  %4537 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2500
  %4538 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4538)
  %4539 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4539)
  %4540 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4540)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %4541 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4541)
  %4542 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4542)
  %4543 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4543)
  %4544 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4544)
  %4545 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4545)
  %4546 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4546)
  %4547 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4547)
  %4548 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4548)
  %4549 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4549)
  %4550 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4550)
  %4551 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4551)
  %4552 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4552)
  %4553 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4553)
  %4554 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4554)
  %4555 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4555)
  %4556 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4556)
  %4557 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4557)
  %4558 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4558)
  %4559 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4559)
  %4560 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4560)
  %4561 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4562 = load i64, i64* %RBP
  %4563 = sub i64 %4562, 128
  %4564 = load i64, i64* %PC
  %4565 = add i64 %4564, 5
  store i64 %4565, i64* %PC
  %4566 = inttoptr i64 %4563 to double*
  %4567 = load double, double* %4566
  %4568 = bitcast i8* %4561 to double*
  store double %4567, double* %4568, align 1, !tbaa !2452
  %4569 = getelementptr inbounds i8, i8* %4561, i64 8
  %4570 = bitcast i8* %4569 to double*
  store double 0.000000e+00, double* %4570, align 1, !tbaa !2452
  %4571 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4572 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4573 = bitcast %union.vec128_t* %XMM0 to i8*
  %4574 = load i64, i64* %PC
  %4575 = add i64 %4574, 4
  store i64 %4575, i64* %PC
  %4576 = bitcast i8* %4572 to double*
  %4577 = load double, double* %4576, align 1
  %4578 = getelementptr inbounds i8, i8* %4572, i64 8
  %4579 = bitcast i8* %4578 to i64*
  %4580 = load i64, i64* %4579, align 1
  %4581 = bitcast i8* %4573 to double*
  %4582 = load double, double* %4581, align 1
  %4583 = fmul double %4577, %4582
  %4584 = bitcast i8* %4571 to double*
  store double %4583, double* %4584, align 1, !tbaa !2452
  %4585 = getelementptr inbounds i8, i8* %4571, i64 8
  %4586 = bitcast i8* %4585 to i64*
  store i64 %4580, i64* %4586, align 1, !tbaa !2452
  %4587 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4588 = load i64, i64* %RBP
  %4589 = sub i64 %4588, 136
  %4590 = load i64, i64* %PC
  %4591 = add i64 %4590, 8
  store i64 %4591, i64* %PC
  %4592 = inttoptr i64 %4589 to double*
  %4593 = load double, double* %4592
  %4594 = bitcast i8* %4587 to double*
  store double %4593, double* %4594, align 1, !tbaa !2452
  %4595 = getelementptr inbounds i8, i8* %4587, i64 8
  %4596 = bitcast i8* %4595 to double*
  store double 0.000000e+00, double* %4596, align 1, !tbaa !2452
  %4597 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4598 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4599 = bitcast %union.vec128_t* %XMM1 to i8*
  %4600 = load i64, i64* %PC
  %4601 = add i64 %4600, 4
  store i64 %4601, i64* %PC
  %4602 = bitcast i8* %4598 to double*
  %4603 = load double, double* %4602, align 1
  %4604 = getelementptr inbounds i8, i8* %4598, i64 8
  %4605 = bitcast i8* %4604 to i64*
  %4606 = load i64, i64* %4605, align 1
  %4607 = bitcast i8* %4599 to double*
  %4608 = load double, double* %4607, align 1
  %4609 = fdiv double %4603, %4608
  %4610 = bitcast i8* %4597 to double*
  store double %4609, double* %4610, align 1, !tbaa !2452
  %4611 = getelementptr inbounds i8, i8* %4597, i64 8
  %4612 = bitcast i8* %4611 to i64*
  store i64 %4606, i64* %4612, align 1, !tbaa !2452
  %4613 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4614 = load i64, i64* %RBP
  %4615 = sub i64 %4614, 104
  %4616 = load i64, i64* %PC
  %4617 = add i64 %4616, 5
  store i64 %4617, i64* %PC
  %4618 = inttoptr i64 %4615 to double*
  %4619 = load double, double* %4618
  %4620 = bitcast i8* %4613 to double*
  store double %4619, double* %4620, align 1, !tbaa !2452
  %4621 = getelementptr inbounds i8, i8* %4613, i64 8
  %4622 = bitcast i8* %4621 to double*
  store double 0.000000e+00, double* %4622, align 1, !tbaa !2452
  %4623 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4624 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4625 = bitcast %union.vec128_t* %XMM0 to i8*
  %4626 = load i64, i64* %PC
  %4627 = add i64 %4626, 4
  store i64 %4627, i64* %PC
  %4628 = bitcast i8* %4624 to double*
  %4629 = load double, double* %4628, align 1
  %4630 = getelementptr inbounds i8, i8* %4624, i64 8
  %4631 = bitcast i8* %4630 to i64*
  %4632 = load i64, i64* %4631, align 1
  %4633 = bitcast i8* %4625 to double*
  %4634 = load double, double* %4633, align 1
  %4635 = fmul double %4629, %4634
  %4636 = bitcast i8* %4623 to double*
  store double %4635, double* %4636, align 1, !tbaa !2452
  %4637 = getelementptr inbounds i8, i8* %4623, i64 8
  %4638 = bitcast i8* %4637 to i64*
  store i64 %4632, i64* %4638, align 1, !tbaa !2452
  %4639 = bitcast %union.vec128_t* %XMM1 to i8*
  %4640 = load i64, i64* %PC
  %4641 = add i64 %4640, 9
  store i64 %4641, i64* %PC
  %4642 = bitcast i8* %4639 to double*
  %4643 = load double, double* %4642, align 1
  store double %4643, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4644 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4645 = load i64, i64* %RBP
  %4646 = sub i64 %4645, 16
  %4647 = load i64, i64* %PC
  %4648 = add i64 %4647, 5
  store i64 %4648, i64* %PC
  %4649 = inttoptr i64 %4646 to double*
  %4650 = load double, double* %4649
  %4651 = bitcast i8* %4644 to double*
  store double %4650, double* %4651, align 1, !tbaa !2452
  %4652 = getelementptr inbounds i8, i8* %4644, i64 8
  %4653 = bitcast i8* %4652 to double*
  store double 0.000000e+00, double* %4653, align 1, !tbaa !2452
  %4654 = bitcast %union.vec128_t* %XMM0 to i8*
  %4655 = load i64, i64* %PC
  %4656 = add i64 %4655, 5
  store i64 %4656, i64* %PC
  %4657 = bitcast i8* %4654 to i64*
  %4658 = load i64, i64* %4657, align 1
  store i64 %4658, i64* %RAX, align 1, !tbaa !2428
  %4659 = load i64, i64* %RBP
  %4660 = sub i64 %4659, 112
  %4661 = load i64, i64* %PC
  %4662 = add i64 %4661, 4
  store i64 %4662, i64* %PC
  %4663 = inttoptr i64 %4660 to i64*
  %4664 = load i64, i64* %4663
  store i64 %4664, i64* %RCX, align 8, !tbaa !2428
  %4665 = load i64, i64* %RAX
  %4666 = load i64, i64* %RCX
  %4667 = load i64, i64* %PC
  %4668 = add i64 %4667, 3
  store i64 %4668, i64* %PC
  %4669 = xor i64 %4666, %4665
  store i64 %4669, i64* %RAX, align 8, !tbaa !2428
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4670, align 1, !tbaa !2432
  %4671 = trunc i64 %4669 to i32
  %4672 = and i32 %4671, 255
  %4673 = call i32 @llvm.ctpop.i32(i32 %4672) #17
  %4674 = trunc i32 %4673 to i8
  %4675 = and i8 %4674, 1
  %4676 = xor i8 %4675, 1
  %4677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4676, i8* %4677, align 1, !tbaa !2446
  %4678 = icmp eq i64 %4669, 0
  %4679 = zext i1 %4678 to i8
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4679, i8* %4680, align 1, !tbaa !2448
  %4681 = lshr i64 %4669, 63
  %4682 = trunc i64 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4682, i8* %4683, align 1, !tbaa !2449
  %4684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4684, align 1, !tbaa !2450
  %4685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4685, align 1, !tbaa !2447
  %4686 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4687 = load i64, i64* %RAX
  %4688 = load i64, i64* %PC
  %4689 = add i64 %4688, 5
  store i64 %4689, i64* %PC
  %4690 = bitcast i8* %4686 to i64*
  store i64 %4687, i64* %4690, align 1, !tbaa !2428
  %4691 = getelementptr inbounds i8, i8* %4686, i64 8
  %4692 = bitcast i8* %4691 to i64*
  store i64 0, i64* %4692, align 1, !tbaa !2428
  %4693 = bitcast %union.vec128_t* %XMM0 to i8*
  %4694 = load i64, i64* %PC
  %4695 = add i64 %4694, 9
  store i64 %4695, i64* %PC
  %4696 = bitcast i8* %4693 to double*
  %4697 = load double, double* %4696, align 1
  store double %4697, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  br label %block_401525

block_401106:                                     ; preds = %block_401100
  %4698 = load i64, i64* %PC
  %4699 = add i64 %4698, 272
  %4700 = load i64, i64* %PC
  %4701 = add i64 %4700, 5
  store i64 %4701, i64* %PC
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4699, i64* %4702, align 8, !tbaa !2428
  %4703 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4704 = load i64, i64* %PC
  %4705 = add i64 %4704, 9
  store i64 %4705, i64* %PC
  %4706 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4707 = bitcast i8* %4703 to double*
  store double %4706, double* %4707, align 1, !tbaa !2452
  %4708 = getelementptr inbounds i8, i8* %4703, i64 8
  %4709 = bitcast i8* %4708 to double*
  store double 0.000000e+00, double* %4709, align 1, !tbaa !2452
  %4710 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4711 = load i64, i64* %PC
  %4712 = add i64 %4711, 9
  store i64 %4712, i64* %PC
  %4713 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %4714 = bitcast i8* %4710 to double*
  store double %4713, double* %4714, align 1, !tbaa !2452
  %4715 = getelementptr inbounds i8, i8* %4710, i64 8
  %4716 = bitcast i8* %4715 to double*
  store double 0.000000e+00, double* %4716, align 1, !tbaa !2452
  %4717 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4718 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4719 = load i64, i64* %PC
  %4720 = add i64 %4719, 9
  store i64 %4720, i64* %PC
  %4721 = bitcast i8* %4718 to double*
  %4722 = load double, double* %4721, align 1
  %4723 = getelementptr inbounds i8, i8* %4718, i64 8
  %4724 = bitcast i8* %4723 to i64*
  %4725 = load i64, i64* %4724, align 1
  %4726 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %4727 = fdiv double %4722, %4726
  %4728 = bitcast i8* %4717 to double*
  store double %4727, double* %4728, align 1, !tbaa !2452
  %4729 = getelementptr inbounds i8, i8* %4717, i64 8
  %4730 = bitcast i8* %4729 to i64*
  store i64 %4725, i64* %4730, align 1, !tbaa !2452
  %4731 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4732 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4733 = bitcast %union.vec128_t* %XMM1 to i8*
  %4734 = load i64, i64* %PC
  %4735 = add i64 %4734, 4
  store i64 %4735, i64* %PC
  %4736 = bitcast i8* %4732 to double*
  %4737 = load double, double* %4736, align 1
  %4738 = getelementptr inbounds i8, i8* %4732, i64 8
  %4739 = bitcast i8* %4738 to i64*
  %4740 = load i64, i64* %4739, align 1
  %4741 = bitcast i8* %4733 to double*
  %4742 = load double, double* %4741, align 1
  %4743 = fmul double %4737, %4742
  %4744 = bitcast i8* %4731 to double*
  store double %4743, double* %4744, align 1, !tbaa !2452
  %4745 = getelementptr inbounds i8, i8* %4731, i64 8
  %4746 = bitcast i8* %4745 to i64*
  store i64 %4740, i64* %4746, align 1, !tbaa !2452
  %4747 = bitcast %union.vec128_t* %XMM0 to i8*
  %4748 = load i64, i64* %PC
  %4749 = add i64 %4748, 9
  store i64 %4749, i64* %PC
  %4750 = bitcast i8* %4747 to double*
  %4751 = load double, double* %4750, align 1
  store double %4751, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4752 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4753 = load i64, i64* %PC
  %4754 = add i64 %4753, 9
  store i64 %4754, i64* %PC
  %4755 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4756 = bitcast i8* %4752 to double*
  store double %4755, double* %4756, align 1, !tbaa !2452
  %4757 = getelementptr inbounds i8, i8* %4752, i64 8
  %4758 = bitcast i8* %4757 to double*
  store double 0.000000e+00, double* %4758, align 1, !tbaa !2452
  %4759 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4760 = load i64, i64* %PC
  %4761 = add i64 %4760, 9
  store i64 %4761, i64* %PC
  %4762 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %4763 = bitcast i8* %4759 to double*
  store double %4762, double* %4763, align 1, !tbaa !2452
  %4764 = getelementptr inbounds i8, i8* %4759, i64 8
  %4765 = bitcast i8* %4764 to double*
  store double 0.000000e+00, double* %4765, align 1, !tbaa !2452
  %4766 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4767 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4768 = load i64, i64* %PC
  %4769 = add i64 %4768, 9
  store i64 %4769, i64* %PC
  %4770 = bitcast i8* %4767 to double*
  %4771 = load double, double* %4770, align 1
  %4772 = getelementptr inbounds i8, i8* %4767, i64 8
  %4773 = bitcast i8* %4772 to i64*
  %4774 = load i64, i64* %4773, align 1
  %4775 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %4776 = fdiv double %4771, %4775
  %4777 = bitcast i8* %4766 to double*
  store double %4776, double* %4777, align 1, !tbaa !2452
  %4778 = getelementptr inbounds i8, i8* %4766, i64 8
  %4779 = bitcast i8* %4778 to i64*
  store i64 %4774, i64* %4779, align 1, !tbaa !2452
  %4780 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4781 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4782 = bitcast %union.vec128_t* %XMM1 to i8*
  %4783 = load i64, i64* %PC
  %4784 = add i64 %4783, 4
  store i64 %4784, i64* %PC
  %4785 = bitcast i8* %4781 to double*
  %4786 = load double, double* %4785, align 1
  %4787 = getelementptr inbounds i8, i8* %4781, i64 8
  %4788 = bitcast i8* %4787 to i64*
  %4789 = load i64, i64* %4788, align 1
  %4790 = bitcast i8* %4782 to double*
  %4791 = load double, double* %4790, align 1
  %4792 = fmul double %4786, %4791
  %4793 = bitcast i8* %4780 to double*
  store double %4792, double* %4793, align 1, !tbaa !2452
  %4794 = getelementptr inbounds i8, i8* %4780, i64 8
  %4795 = bitcast i8* %4794 to i64*
  store i64 %4789, i64* %4795, align 1, !tbaa !2452
  %4796 = bitcast %union.vec128_t* %XMM0 to i8*
  %4797 = load i64, i64* %PC
  %4798 = add i64 %4797, 9
  store i64 %4798, i64* %PC
  %4799 = bitcast i8* %4796 to double*
  %4800 = load double, double* %4799, align 1
  store double %4800, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4801 = load i64, i64* %PC
  %4802 = add i64 %4801, 703
  %4803 = load i64, i64* %PC
  %4804 = add i64 %4803, 5
  store i64 %4804, i64* %PC
  %4805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4802, i64* %4805, align 8, !tbaa !2428
  br label %block_401525

block_401281:                                     ; preds = %block_40126b
  %4806 = load i64, i64* %PC
  %4807 = add i64 %4806, 11
  %4808 = load i64, i64* %PC
  %4809 = add i64 %4808, 6
  %4810 = load i64, i64* %PC
  %4811 = add i64 %4810, 6
  store i64 %4811, i64* %PC
  %4812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4813 = load i8, i8* %4812, align 1, !tbaa !2446
  store i8 %4813, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4814 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4815 = icmp ne i8 %4813, 0
  %4816 = select i1 %4815, i64 %4807, i64 %4809
  store i64 %4816, i64* %4814, align 8, !tbaa !2428
  %4817 = load i8, i8* %BRANCH_TAKEN
  %4818 = icmp eq i8 %4817, 1
  br i1 %4818, label %block_40128c, label %block_401287

block_4012d0:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478, %block_4012a2
  %MEMORY.8 = phi %struct.Memory* [ %2692, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478 ], [ %2692, %block_4012a2 ]
  %4819 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4820 = load i64, i64* %PC
  %4821 = add i64 %4820, 9
  store i64 %4821, i64* %PC
  %4822 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4823 = bitcast i8* %4819 to double*
  store double %4822, double* %4823, align 1, !tbaa !2452
  %4824 = getelementptr inbounds i8, i8* %4819, i64 8
  %4825 = bitcast i8* %4824 to double*
  store double 0.000000e+00, double* %4825, align 1, !tbaa !2452
  %4826 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4827 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4828 = load i64, i64* %PC
  %4829 = add i64 %4828, 9
  store i64 %4829, i64* %PC
  %4830 = bitcast i8* %4827 to double*
  %4831 = load double, double* %4830, align 1
  %4832 = getelementptr inbounds i8, i8* %4827, i64 8
  %4833 = bitcast i8* %4832 to i64*
  %4834 = load i64, i64* %4833, align 1
  %4835 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %4836 = fsub double %4831, %4835
  %4837 = bitcast i8* %4826 to double*
  store double %4836, double* %4837, align 1, !tbaa !2452
  %4838 = getelementptr inbounds i8, i8* %4826, i64 8
  %4839 = bitcast i8* %4838 to i64*
  store i64 %4834, i64* %4839, align 1, !tbaa !2452
  %4840 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4841 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4842 = load i64, i64* %PC
  %4843 = add i64 %4842, 9
  store i64 %4843, i64* %PC
  %4844 = bitcast i8* %4841 to double*
  %4845 = load double, double* %4844, align 1
  %4846 = getelementptr inbounds i8, i8* %4841, i64 8
  %4847 = bitcast i8* %4846 to i64*
  %4848 = load i64, i64* %4847, align 1
  %4849 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %4850 = fdiv double %4845, %4849
  %4851 = bitcast i8* %4840 to double*
  store double %4850, double* %4851, align 1, !tbaa !2452
  %4852 = getelementptr inbounds i8, i8* %4840, i64 8
  %4853 = bitcast i8* %4852 to i64*
  store i64 %4848, i64* %4853, align 1, !tbaa !2452
  %4854 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4855 = load i64, i64* %PC
  %4856 = add i64 %4855, 9
  store i64 %4856, i64* %PC
  %4857 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4858 = bitcast i8* %4854 to double*
  store double %4857, double* %4858, align 1, !tbaa !2452
  %4859 = getelementptr inbounds i8, i8* %4854, i64 8
  %4860 = bitcast i8* %4859 to double*
  store double 0.000000e+00, double* %4860, align 1, !tbaa !2452
  %4861 = load i64, i64* %RBP
  %4862 = sub i64 %4861, 56
  %4863 = bitcast %union.vec128_t* %XMM0 to i8*
  %4864 = load i64, i64* %PC
  %4865 = add i64 %4864, 5
  store i64 %4865, i64* %PC
  %4866 = bitcast i8* %4863 to double*
  %4867 = load double, double* %4866, align 1
  %4868 = inttoptr i64 %4862 to double*
  store double %4867, double* %4868
  %4869 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4870 = bitcast %union.vec128_t* %XMM1 to i8*
  %4871 = load i64, i64* %PC
  %4872 = add i64 %4871, 3
  store i64 %4872, i64* %PC
  %4873 = bitcast i8* %4870 to <2 x i32>*
  %4874 = load <2 x i32>, <2 x i32>* %4873, align 1
  %4875 = getelementptr inbounds i8, i8* %4870, i64 8
  %4876 = bitcast i8* %4875 to <2 x i32>*
  %4877 = load <2 x i32>, <2 x i32>* %4876, align 1
  %4878 = extractelement <2 x i32> %4874, i32 0
  %4879 = bitcast i8* %4869 to i32*
  store i32 %4878, i32* %4879, align 1, !tbaa !2454
  %4880 = extractelement <2 x i32> %4874, i32 1
  %4881 = getelementptr inbounds i8, i8* %4869, i64 4
  %4882 = bitcast i8* %4881 to i32*
  store i32 %4880, i32* %4882, align 1, !tbaa !2454
  %4883 = extractelement <2 x i32> %4877, i32 0
  %4884 = getelementptr inbounds i8, i8* %4869, i64 8
  %4885 = bitcast i8* %4884 to i32*
  store i32 %4883, i32* %4885, align 1, !tbaa !2454
  %4886 = extractelement <2 x i32> %4877, i32 1
  %4887 = getelementptr inbounds i8, i8* %4869, i64 12
  %4888 = bitcast i8* %4887 to i32*
  store i32 %4886, i32* %4888, align 1, !tbaa !2454
  %4889 = load i64, i64* %PC
  %4890 = sub i64 %4889, 3356
  %4891 = load i64, i64* %PC
  %4892 = add i64 %4891, 5
  %4893 = load i64, i64* %PC
  %4894 = add i64 %4893, 5
  store i64 %4894, i64* %PC
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4896 = load i64, i64* %4895, align 8, !tbaa !2428
  %4897 = add i64 %4896, -8
  %4898 = inttoptr i64 %4897 to i64*
  store i64 %4892, i64* %4898
  store i64 %4897, i64* %4895, align 8, !tbaa !2428
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4890, i64* %4899, align 8, !tbaa !2428
  %4900 = load i64, i64* %PC
  %4901 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4901)
  %4902 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4902)
  %4903 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4903)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %4904 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4904)
  %4905 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4905)
  %4906 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4906)
  %4907 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4907)
  %4908 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4908)
  %4909 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4909)
  %4910 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4910)
  %4911 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4911)
  %4912 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4912)
  %4913 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4913)
  %4914 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4914)
  %4915 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4915)
  %4916 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4916)
  %4917 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4917)
  %4918 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4918)
  %4919 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4919)
  %4920 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4920)
  %4921 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4921)
  %4922 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4922)
  %4923 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4923)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2506
  store i64 %4900, i64* %curr_pc.i, align 8, !noalias !2506
  store %struct.Memory* %MEMORY.8, %struct.Memory** %memory.i, align 8, !noalias !2506
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2506
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2506
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2506
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2506
  store %struct.Memory* %MEMORY.8, %struct.Memory** %MEMORY.i, align 8, !noalias !2506
  %4924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4925 = getelementptr inbounds %struct.GPR, %struct.GPR* %4924, i32 0, i32 33
  %4926 = getelementptr inbounds %struct.Reg, %struct.Reg* %4925, i32 0, i32 0
  %PC.i = bitcast %union.anon* %4926 to i64*
  store i64 %4900, i64* %PC.i, align 8, !alias.scope !2510, !noalias !2511
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4928 = getelementptr inbounds %struct.GPR, %struct.GPR* %4927, i32 0, i32 1
  %4929 = getelementptr inbounds %struct.Reg, %struct.Reg* %4928, i32 0, i32 0
  %4930 = bitcast %union.anon* %4929 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4930, i32 0, i32 1
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 3
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %4934 = bitcast %union.anon* %4933 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4934, i32 0, i32 1
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 5
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %4938 = bitcast %union.anon* %4937 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4938, i32 0, i32 1
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 7
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %4942 = bitcast %union.anon* %4941 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4942, i32 0, i32 1
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 1
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %4946 = bitcast %union.anon* %4945 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4946, i32 0, i32 0
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 3
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %4950 = bitcast %union.anon* %4949 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4950, i32 0, i32 0
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 5
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %4954 = bitcast %union.anon* %4953 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4954, i32 0, i32 0
  %4955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4956 = getelementptr inbounds %struct.GPR, %struct.GPR* %4955, i32 0, i32 7
  %4957 = getelementptr inbounds %struct.Reg, %struct.Reg* %4956, i32 0, i32 0
  %4958 = bitcast %union.anon* %4957 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4958, i32 0, i32 0
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4960 = getelementptr inbounds %struct.GPR, %struct.GPR* %4959, i32 0, i32 9
  %4961 = getelementptr inbounds %struct.Reg, %struct.Reg* %4960, i32 0, i32 0
  %4962 = bitcast %union.anon* %4961 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4962, i32 0, i32 0
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 11
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %4966 = bitcast %union.anon* %4965 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4966, i32 0, i32 0
  %4967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4968 = getelementptr inbounds %struct.GPR, %struct.GPR* %4967, i32 0, i32 13
  %4969 = getelementptr inbounds %struct.Reg, %struct.Reg* %4968, i32 0, i32 0
  %4970 = bitcast %union.anon* %4969 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4970, i32 0, i32 0
  %4971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4972 = getelementptr inbounds %struct.GPR, %struct.GPR* %4971, i32 0, i32 15
  %4973 = getelementptr inbounds %struct.Reg, %struct.Reg* %4972, i32 0, i32 0
  %4974 = bitcast %union.anon* %4973 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4974, i32 0, i32 0
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 17
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %4978 = bitcast %union.anon* %4977 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4978, i32 0, i32 0
  %4979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4980 = getelementptr inbounds %struct.GPR, %struct.GPR* %4979, i32 0, i32 19
  %4981 = getelementptr inbounds %struct.Reg, %struct.Reg* %4980, i32 0, i32 0
  %4982 = bitcast %union.anon* %4981 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4982, i32 0, i32 0
  %4983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4984 = getelementptr inbounds %struct.GPR, %struct.GPR* %4983, i32 0, i32 21
  %4985 = getelementptr inbounds %struct.Reg, %struct.Reg* %4984, i32 0, i32 0
  %4986 = bitcast %union.anon* %4985 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4986, i32 0, i32 0
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 23
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %4990 = bitcast %union.anon* %4989 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4990, i32 0, i32 0
  %4991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4992 = getelementptr inbounds %struct.GPR, %struct.GPR* %4991, i32 0, i32 25
  %4993 = getelementptr inbounds %struct.Reg, %struct.Reg* %4992, i32 0, i32 0
  %4994 = bitcast %union.anon* %4993 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4994, i32 0, i32 0
  %4995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4996 = getelementptr inbounds %struct.GPR, %struct.GPR* %4995, i32 0, i32 27
  %4997 = getelementptr inbounds %struct.Reg, %struct.Reg* %4996, i32 0, i32 0
  %4998 = bitcast %union.anon* %4997 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4998, i32 0, i32 0
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 29
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %5002 = bitcast %union.anon* %5001 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5002, i32 0, i32 0
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 31
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %5006 = bitcast %union.anon* %5005 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %5006, i32 0, i32 0
  %5007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5008 = getelementptr inbounds %struct.GPR, %struct.GPR* %5007, i32 0, i32 1
  %5009 = getelementptr inbounds %struct.Reg, %struct.Reg* %5008, i32 0, i32 0
  %AX.i = bitcast %union.anon* %5009 to i16*
  %5010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5011 = getelementptr inbounds %struct.GPR, %struct.GPR* %5010, i32 0, i32 3
  %5012 = getelementptr inbounds %struct.Reg, %struct.Reg* %5011, i32 0, i32 0
  %BX.i = bitcast %union.anon* %5012 to i16*
  %5013 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5014 = getelementptr inbounds %struct.GPR, %struct.GPR* %5013, i32 0, i32 5
  %5015 = getelementptr inbounds %struct.Reg, %struct.Reg* %5014, i32 0, i32 0
  %CX.i = bitcast %union.anon* %5015 to i16*
  %5016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5017 = getelementptr inbounds %struct.GPR, %struct.GPR* %5016, i32 0, i32 7
  %5018 = getelementptr inbounds %struct.Reg, %struct.Reg* %5017, i32 0, i32 0
  %DX.i = bitcast %union.anon* %5018 to i16*
  %5019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5020 = getelementptr inbounds %struct.GPR, %struct.GPR* %5019, i32 0, i32 9
  %5021 = getelementptr inbounds %struct.Reg, %struct.Reg* %5020, i32 0, i32 0
  %SI.i = bitcast %union.anon* %5021 to i16*
  %5022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5023 = getelementptr inbounds %struct.GPR, %struct.GPR* %5022, i32 0, i32 11
  %5024 = getelementptr inbounds %struct.Reg, %struct.Reg* %5023, i32 0, i32 0
  %DI.i = bitcast %union.anon* %5024 to i16*
  %5025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5026 = getelementptr inbounds %struct.GPR, %struct.GPR* %5025, i32 0, i32 13
  %5027 = getelementptr inbounds %struct.Reg, %struct.Reg* %5026, i32 0, i32 0
  %SP.i = bitcast %union.anon* %5027 to i16*
  %5028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5029 = getelementptr inbounds %struct.GPR, %struct.GPR* %5028, i32 0, i32 15
  %5030 = getelementptr inbounds %struct.Reg, %struct.Reg* %5029, i32 0, i32 0
  %BP.i = bitcast %union.anon* %5030 to i16*
  %5031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5032 = getelementptr inbounds %struct.GPR, %struct.GPR* %5031, i32 0, i32 17
  %5033 = getelementptr inbounds %struct.Reg, %struct.Reg* %5032, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %5033 to i16*
  %5034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5035 = getelementptr inbounds %struct.GPR, %struct.GPR* %5034, i32 0, i32 19
  %5036 = getelementptr inbounds %struct.Reg, %struct.Reg* %5035, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %5036 to i16*
  %5037 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5038 = getelementptr inbounds %struct.GPR, %struct.GPR* %5037, i32 0, i32 21
  %5039 = getelementptr inbounds %struct.Reg, %struct.Reg* %5038, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %5039 to i16*
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5041 = getelementptr inbounds %struct.GPR, %struct.GPR* %5040, i32 0, i32 23
  %5042 = getelementptr inbounds %struct.Reg, %struct.Reg* %5041, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %5042 to i16*
  %5043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5044 = getelementptr inbounds %struct.GPR, %struct.GPR* %5043, i32 0, i32 25
  %5045 = getelementptr inbounds %struct.Reg, %struct.Reg* %5044, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %5045 to i16*
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5047 = getelementptr inbounds %struct.GPR, %struct.GPR* %5046, i32 0, i32 27
  %5048 = getelementptr inbounds %struct.Reg, %struct.Reg* %5047, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %5048 to i16*
  %5049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5050 = getelementptr inbounds %struct.GPR, %struct.GPR* %5049, i32 0, i32 29
  %5051 = getelementptr inbounds %struct.Reg, %struct.Reg* %5050, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %5051 to i16*
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5053 = getelementptr inbounds %struct.GPR, %struct.GPR* %5052, i32 0, i32 31
  %5054 = getelementptr inbounds %struct.Reg, %struct.Reg* %5053, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %5054 to i16*
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5056 = getelementptr inbounds %struct.GPR, %struct.GPR* %5055, i32 0, i32 33
  %5057 = getelementptr inbounds %struct.Reg, %struct.Reg* %5056, i32 0, i32 0
  %IP.i = bitcast %union.anon* %5057 to i16*
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5059 = getelementptr inbounds %struct.GPR, %struct.GPR* %5058, i32 0, i32 1
  %5060 = getelementptr inbounds %struct.Reg, %struct.Reg* %5059, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %5060 to i32*
  %5061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5062 = getelementptr inbounds %struct.GPR, %struct.GPR* %5061, i32 0, i32 3
  %5063 = getelementptr inbounds %struct.Reg, %struct.Reg* %5062, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %5063 to i32*
  %5064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5065 = getelementptr inbounds %struct.GPR, %struct.GPR* %5064, i32 0, i32 5
  %5066 = getelementptr inbounds %struct.Reg, %struct.Reg* %5065, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %5066 to i32*
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 7
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %5069 to i32*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 9
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %5072 to i32*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 11
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %5075 to i32*
  %5076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5077 = getelementptr inbounds %struct.GPR, %struct.GPR* %5076, i32 0, i32 13
  %5078 = getelementptr inbounds %struct.Reg, %struct.Reg* %5077, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %5078 to i32*
  %5079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5080 = getelementptr inbounds %struct.GPR, %struct.GPR* %5079, i32 0, i32 15
  %5081 = getelementptr inbounds %struct.Reg, %struct.Reg* %5080, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %5081 to i32*
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 33
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %5084 to i32*
  %5085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5086 = getelementptr inbounds %struct.GPR, %struct.GPR* %5085, i32 0, i32 17
  %5087 = getelementptr inbounds %struct.Reg, %struct.Reg* %5086, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %5087 to i32*
  %5088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5089 = getelementptr inbounds %struct.GPR, %struct.GPR* %5088, i32 0, i32 19
  %5090 = getelementptr inbounds %struct.Reg, %struct.Reg* %5089, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %5090 to i32*
  %5091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5092 = getelementptr inbounds %struct.GPR, %struct.GPR* %5091, i32 0, i32 21
  %5093 = getelementptr inbounds %struct.Reg, %struct.Reg* %5092, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %5093 to i32*
  %5094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5095 = getelementptr inbounds %struct.GPR, %struct.GPR* %5094, i32 0, i32 23
  %5096 = getelementptr inbounds %struct.Reg, %struct.Reg* %5095, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %5096 to i32*
  %5097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5098 = getelementptr inbounds %struct.GPR, %struct.GPR* %5097, i32 0, i32 25
  %5099 = getelementptr inbounds %struct.Reg, %struct.Reg* %5098, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %5099 to i32*
  %5100 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5101 = getelementptr inbounds %struct.GPR, %struct.GPR* %5100, i32 0, i32 27
  %5102 = getelementptr inbounds %struct.Reg, %struct.Reg* %5101, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %5102 to i32*
  %5103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5104 = getelementptr inbounds %struct.GPR, %struct.GPR* %5103, i32 0, i32 29
  %5105 = getelementptr inbounds %struct.Reg, %struct.Reg* %5104, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %5105 to i32*
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5107 = getelementptr inbounds %struct.GPR, %struct.GPR* %5106, i32 0, i32 31
  %5108 = getelementptr inbounds %struct.Reg, %struct.Reg* %5107, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %5108 to i32*
  %5109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5110 = getelementptr inbounds %struct.GPR, %struct.GPR* %5109, i32 0, i32 1
  %5111 = getelementptr inbounds %struct.Reg, %struct.Reg* %5110, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %5111 to i64*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5113 = getelementptr inbounds %struct.GPR, %struct.GPR* %5112, i32 0, i32 3
  %5114 = getelementptr inbounds %struct.Reg, %struct.Reg* %5113, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %5114 to i64*
  %5115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5116 = getelementptr inbounds %struct.GPR, %struct.GPR* %5115, i32 0, i32 5
  %5117 = getelementptr inbounds %struct.Reg, %struct.Reg* %5116, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %5117 to i64*
  %5118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5119 = getelementptr inbounds %struct.GPR, %struct.GPR* %5118, i32 0, i32 7
  %5120 = getelementptr inbounds %struct.Reg, %struct.Reg* %5119, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %5120 to i64*
  %5121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5122 = getelementptr inbounds %struct.GPR, %struct.GPR* %5121, i32 0, i32 9
  %5123 = getelementptr inbounds %struct.Reg, %struct.Reg* %5122, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %5123 to i64*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5125 = getelementptr inbounds %struct.GPR, %struct.GPR* %5124, i32 0, i32 11
  %5126 = getelementptr inbounds %struct.Reg, %struct.Reg* %5125, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %5126 to i64*
  %5127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5128 = getelementptr inbounds %struct.GPR, %struct.GPR* %5127, i32 0, i32 13
  %5129 = getelementptr inbounds %struct.Reg, %struct.Reg* %5128, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %5129 to i64*
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5131 = getelementptr inbounds %struct.GPR, %struct.GPR* %5130, i32 0, i32 15
  %5132 = getelementptr inbounds %struct.Reg, %struct.Reg* %5131, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %5132 to i64*
  %5133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5134 = getelementptr inbounds %struct.GPR, %struct.GPR* %5133, i32 0, i32 17
  %5135 = getelementptr inbounds %struct.Reg, %struct.Reg* %5134, i32 0, i32 0
  %R8.i = bitcast %union.anon* %5135 to i64*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5137 = getelementptr inbounds %struct.GPR, %struct.GPR* %5136, i32 0, i32 19
  %5138 = getelementptr inbounds %struct.Reg, %struct.Reg* %5137, i32 0, i32 0
  %R9.i = bitcast %union.anon* %5138 to i64*
  %5139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5140 = getelementptr inbounds %struct.GPR, %struct.GPR* %5139, i32 0, i32 21
  %5141 = getelementptr inbounds %struct.Reg, %struct.Reg* %5140, i32 0, i32 0
  %R10.i = bitcast %union.anon* %5141 to i64*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5143 = getelementptr inbounds %struct.GPR, %struct.GPR* %5142, i32 0, i32 23
  %5144 = getelementptr inbounds %struct.Reg, %struct.Reg* %5143, i32 0, i32 0
  %R11.i = bitcast %union.anon* %5144 to i64*
  %5145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5146 = getelementptr inbounds %struct.GPR, %struct.GPR* %5145, i32 0, i32 25
  %5147 = getelementptr inbounds %struct.Reg, %struct.Reg* %5146, i32 0, i32 0
  %R12.i = bitcast %union.anon* %5147 to i64*
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5149 = getelementptr inbounds %struct.GPR, %struct.GPR* %5148, i32 0, i32 27
  %5150 = getelementptr inbounds %struct.Reg, %struct.Reg* %5149, i32 0, i32 0
  %R13.i = bitcast %union.anon* %5150 to i64*
  %5151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5152 = getelementptr inbounds %struct.GPR, %struct.GPR* %5151, i32 0, i32 29
  %5153 = getelementptr inbounds %struct.Reg, %struct.Reg* %5152, i32 0, i32 0
  %R14.i = bitcast %union.anon* %5153 to i64*
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5155 = getelementptr inbounds %struct.GPR, %struct.GPR* %5154, i32 0, i32 31
  %5156 = getelementptr inbounds %struct.Reg, %struct.Reg* %5155, i32 0, i32 0
  %R15.i = bitcast %union.anon* %5156 to i64*
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5158 = getelementptr inbounds %struct.GPR, %struct.GPR* %5157, i32 0, i32 33
  %5159 = getelementptr inbounds %struct.Reg, %struct.Reg* %5158, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %5159 to i64*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5161 = getelementptr inbounds %struct.Segments, %struct.Segments* %5160, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %5161 to i16*
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5163 = getelementptr inbounds %struct.Segments, %struct.Segments* %5162, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %5163 to i16*
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5165 = getelementptr inbounds %struct.Segments, %struct.Segments* %5164, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %5165 to i16*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5167 = getelementptr inbounds %struct.Segments, %struct.Segments* %5166, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %5167 to i16*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5169 = getelementptr inbounds %struct.Segments, %struct.Segments* %5168, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %5169 to i16*
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5171 = getelementptr inbounds %struct.Segments, %struct.Segments* %5170, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %5171 to i16*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5173 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5172, i32 0, i32 5
  %5174 = getelementptr inbounds %struct.Reg, %struct.Reg* %5173, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %5174 to i64*
  %5175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5176 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5175, i32 0, i32 7
  %5177 = getelementptr inbounds %struct.Reg, %struct.Reg* %5176, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %5177 to i64*
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5179 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5178, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %5179 to %"class.std::bitset"*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5180, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %5181 to %"class.std::bitset"*
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5182, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %5183 to %"class.std::bitset"*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5184, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %5185 to %"class.std::bitset"*
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5186, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %5187 to %"class.std::bitset"*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5188, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %5189 to %"class.std::bitset"*
  %5190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5190, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %5191 to %"class.std::bitset"*
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5193 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5192, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %5193 to %"class.std::bitset"*
  %5194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5195 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5194, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %5195 to %"class.std::bitset"*
  %5196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5196, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %5197 to %"class.std::bitset"*
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5199 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5198, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %5199 to %"class.std::bitset"*
  %5200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5201 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5200, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %5201 to %"class.std::bitset"*
  %5202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5203 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5202, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %5203 to %"class.std::bitset"*
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5204, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %5205 to %"class.std::bitset"*
  %5206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5206, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %5207 to %"class.std::bitset"*
  %5208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5208, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %5209 to %"class.std::bitset"*
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5210, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %5211 to %union.vec128_t*
  %5212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5212, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %5213 to %union.vec128_t*
  %5214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5214, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %5215 to %union.vec128_t*
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5217 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5216, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %5217 to %union.vec128_t*
  %5218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5219 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5218, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %5219 to %union.vec128_t*
  %5220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5221 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5220, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %5221 to %union.vec128_t*
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5223 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5222, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %5223 to %union.vec128_t*
  %5224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5225 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5224, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %5225 to %union.vec128_t*
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5227 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5226, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %5227 to %union.vec128_t*
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5229 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5228, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %5229 to %union.vec128_t*
  %5230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5231 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5230, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %5231 to %union.vec128_t*
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5233 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5232, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %5233 to %union.vec128_t*
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5235 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5234, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %5235 to %union.vec128_t*
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5237 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5236, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %5237 to %union.vec128_t*
  %5238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5239 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5238, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %5239 to %union.vec128_t*
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5241 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5240, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %5241 to %union.vec128_t*
  %5242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5243 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5242, i32 0, i32 0
  %5244 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5243, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5244, i32 0, i32 1
  %5245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5246 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5245, i32 0, i32 0
  %5247 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5246, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5247, i32 0, i32 1
  %5248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5249 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5248, i32 0, i32 0
  %5250 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5249, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5250, i32 0, i32 1
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5252 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5251, i32 0, i32 0
  %5253 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5252, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5253, i32 0, i32 1
  %5254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5255 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5254, i32 0, i32 0
  %5256 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5255, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5256, i32 0, i32 1
  %5257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5258 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5257, i32 0, i32 0
  %5259 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5258, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5259, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5261 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5260, i32 0, i32 0
  %5262 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5261, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5262, i32 0, i32 1
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5264 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5263, i32 0, i32 0
  %5265 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5264, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5265, i32 0, i32 1
  %5266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5267 = getelementptr inbounds %struct.MMX, %struct.MMX* %5266, i32 0, i32 0
  %5268 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5267, i64 0, i64 0
  %5269 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5268, i32 0, i32 1
  %5270 = bitcast %union.vec64_t* %5269 to %struct.uint64v1_t*
  %5271 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5270, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %5271, i64 0, i64 0
  %5272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5273 = getelementptr inbounds %struct.MMX, %struct.MMX* %5272, i32 0, i32 0
  %5274 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5273, i64 0, i64 1
  %5275 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5274, i32 0, i32 1
  %5276 = bitcast %union.vec64_t* %5275 to %struct.uint64v1_t*
  %5277 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5276, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %5277, i64 0, i64 0
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5279 = getelementptr inbounds %struct.MMX, %struct.MMX* %5278, i32 0, i32 0
  %5280 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5279, i64 0, i64 2
  %5281 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5280, i32 0, i32 1
  %5282 = bitcast %union.vec64_t* %5281 to %struct.uint64v1_t*
  %5283 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5282, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %5283, i64 0, i64 0
  %5284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5285 = getelementptr inbounds %struct.MMX, %struct.MMX* %5284, i32 0, i32 0
  %5286 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5285, i64 0, i64 3
  %5287 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5286, i32 0, i32 1
  %5288 = bitcast %union.vec64_t* %5287 to %struct.uint64v1_t*
  %5289 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5288, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %5289, i64 0, i64 0
  %5290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5291 = getelementptr inbounds %struct.MMX, %struct.MMX* %5290, i32 0, i32 0
  %5292 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5291, i64 0, i64 4
  %5293 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5292, i32 0, i32 1
  %5294 = bitcast %union.vec64_t* %5293 to %struct.uint64v1_t*
  %5295 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5294, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %5295, i64 0, i64 0
  %5296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5297 = getelementptr inbounds %struct.MMX, %struct.MMX* %5296, i32 0, i32 0
  %5298 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5297, i64 0, i64 5
  %5299 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5298, i32 0, i32 1
  %5300 = bitcast %union.vec64_t* %5299 to %struct.uint64v1_t*
  %5301 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5300, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %5301, i64 0, i64 0
  %5302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5303 = getelementptr inbounds %struct.MMX, %struct.MMX* %5302, i32 0, i32 0
  %5304 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5303, i64 0, i64 6
  %5305 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5304, i32 0, i32 1
  %5306 = bitcast %union.vec64_t* %5305 to %struct.uint64v1_t*
  %5307 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5306, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %5307, i64 0, i64 0
  %5308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5309 = getelementptr inbounds %struct.MMX, %struct.MMX* %5308, i32 0, i32 0
  %5310 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5309, i64 0, i64 7
  %5311 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5310, i32 0, i32 1
  %5312 = bitcast %union.vec64_t* %5311 to %struct.uint64v1_t*
  %5313 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5312, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %5313, i64 0, i64 0
  %5314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5314, i32 0, i32 5
  %5315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5315, i32 0, i32 1
  %5316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5316, i32 0, i32 11
  %5317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5317, i32 0, i32 13
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5318, i32 0, i32 3
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5319, i32 0, i32 9
  %5320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5320, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2506
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2506
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2506
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2506
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2506
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2506
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2506
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2506
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2506
  %5321 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %5322 = load double, double* %5321, !alias.scope !2510, !noalias !2511
  %5323 = load i64, i64* %RSP.i, !alias.scope !2510, !noalias !2511
  %5324 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2506
  %5325 = inttoptr i64 %5323 to i64*
  %5326 = load i64, i64* %5325
  store i64 %5326, i64* %PC.i, !alias.scope !2510, !noalias !2511
  %5327 = add i64 %5323, 8
  store i64 %5327, i64* %RSP.i, !alias.scope !2510, !noalias !2511
  %5328 = call double @sin(double %5322)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2510, !noalias !2511
  %5329 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %5328, double* %5329, !alias.scope !2510, !noalias !2511
  %5330 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2506
  %5331 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5331)
  %5332 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5332)
  %5333 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5333)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %5334 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5334)
  %5335 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5335)
  %5336 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5336)
  %5337 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5337)
  %5338 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5338)
  %5339 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5339)
  %5340 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5340)
  %5341 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5341)
  %5342 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5342)
  %5343 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5343)
  %5344 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5344)
  %5345 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5345)
  %5346 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5346)
  %5347 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5347)
  %5348 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5348)
  %5349 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5349)
  %5350 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5350)
  %5351 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5351)
  %5352 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5352)
  %5353 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5353)
  %5354 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5355 = load i64, i64* %RBP
  %5356 = sub i64 %5355, 56
  %5357 = load i64, i64* %PC
  %5358 = add i64 %5357, 5
  store i64 %5358, i64* %PC
  %5359 = inttoptr i64 %5356 to double*
  %5360 = load double, double* %5359
  %5361 = bitcast i8* %5354 to double*
  store double %5360, double* %5361, align 1, !tbaa !2452
  %5362 = getelementptr inbounds i8, i8* %5354, i64 8
  %5363 = bitcast i8* %5362 to double*
  store double 0.000000e+00, double* %5363, align 1, !tbaa !2452
  %5364 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5365 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5366 = bitcast %union.vec128_t* %XMM0 to i8*
  %5367 = load i64, i64* %PC
  %5368 = add i64 %5367, 4
  store i64 %5368, i64* %PC
  %5369 = bitcast i8* %5365 to double*
  %5370 = load double, double* %5369, align 1
  %5371 = getelementptr inbounds i8, i8* %5365, i64 8
  %5372 = bitcast i8* %5371 to i64*
  %5373 = load i64, i64* %5372, align 1
  %5374 = bitcast i8* %5366 to double*
  %5375 = load double, double* %5374, align 1
  %5376 = fmul double %5370, %5375
  %5377 = bitcast i8* %5364 to double*
  store double %5376, double* %5377, align 1, !tbaa !2452
  %5378 = getelementptr inbounds i8, i8* %5364, i64 8
  %5379 = bitcast i8* %5378 to i64*
  store i64 %5373, i64* %5379, align 1, !tbaa !2452
  %5380 = load i64, i64* %RBP
  %5381 = sub i64 %5380, 24
  %5382 = bitcast %union.vec128_t* %XMM1 to i8*
  %5383 = load i64, i64* %PC
  %5384 = add i64 %5383, 5
  store i64 %5384, i64* %PC
  %5385 = bitcast i8* %5382 to double*
  %5386 = load double, double* %5385, align 1
  %5387 = inttoptr i64 %5381 to double*
  store double %5386, double* %5387
  br label %block_40130f

block_401100:                                     ; preds = %block_4010ea
  %5388 = load i64, i64* %PC
  %5389 = add i64 %5388, 11
  %5390 = load i64, i64* %PC
  %5391 = add i64 %5390, 6
  %5392 = load i64, i64* %PC
  %5393 = add i64 %5392, 6
  store i64 %5393, i64* %PC
  %5394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %5395 = load i8, i8* %5394, align 1, !tbaa !2446
  store i8 %5395, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5397 = icmp ne i8 %5395, 0
  %5398 = select i1 %5397, i64 %5389, i64 %5391
  store i64 %5398, i64* %5396, align 8, !tbaa !2428
  %5399 = load i8, i8* %BRANCH_TAKEN
  %5400 = icmp eq i8 %5399, 1
  br i1 %5400, label %block_40110b, label %block_401106
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015a0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015a0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400640__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400640:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400f30_trace_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400f30:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 1
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RAX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 5
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RCX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 7
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %31 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %30, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %31 to %"class.std::bitset"*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %33 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %32, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %33 to %"class.std::bitset"*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %39 to %union.vec128_t*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %41 to %union.vec128_t*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = load i64, i64* %RBP
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 1
  store i64 %48, i64* %PC
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %50 = load i64, i64* %49, align 8, !tbaa !2428
  %51 = add i64 %50, -8
  %52 = inttoptr i64 %51 to i64*
  store i64 %46, i64* %52
  store i64 %51, i64* %49, align 8, !tbaa !2428
  %53 = load i64, i64* %RSP
  %54 = load i64, i64* %PC
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC
  store i64 %53, i64* %RBP, align 8, !tbaa !2428
  %56 = load i64, i64* %RSP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 4
  store i64 %58, i64* %PC
  %59 = sub i64 %56, 32
  store i64 %59, i64* %RSP, align 8, !tbaa !2428
  %60 = icmp ult i64 %56, 32
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %61, i8* %62, align 1, !tbaa !2432
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 255
  %65 = call i32 @llvm.ctpop.i32(i32 %64) #17
  %66 = trunc i32 %65 to i8
  %67 = and i8 %66, 1
  %68 = xor i8 %67, 1
  %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %68, i8* %69, align 1, !tbaa !2446
  %70 = xor i64 32, %56
  %71 = xor i64 %70, %59
  %72 = lshr i64 %71, 4
  %73 = trunc i64 %72 to i8
  %74 = and i8 %73, 1
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %74, i8* %75, align 1, !tbaa !2447
  %76 = icmp eq i64 %59, 0
  %77 = zext i1 %76 to i8
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %77, i8* %78, align 1, !tbaa !2448
  %79 = lshr i64 %59, 63
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %80, i8* %81, align 1, !tbaa !2449
  %82 = lshr i64 %56, 63
  %83 = xor i64 %79, %82
  %84 = add nuw nsw i64 %83, %82
  %85 = icmp eq i64 %84, 2
  %86 = zext i1 %85 to i8
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %86, i8* %87, align 1, !tbaa !2450
  %88 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 8
  store i64 %90, i64* %PC
  %91 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 104) to double*)
  %92 = bitcast i8* %88 to double*
  store double %91, double* %92, align 1, !tbaa !2452
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to double*
  store double 0.000000e+00, double* %94, align 1, !tbaa !2452
  %95 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %96 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %97 = bitcast %union.vec128_t* %XMM2 to i8*
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 3
  store i64 %99, i64* %PC
  %100 = bitcast i8* %96 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = getelementptr inbounds i8, i8* %96, i64 8
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 1
  %105 = bitcast i8* %97 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = getelementptr inbounds i8, i8* %97, i64 8
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 1
  %110 = xor i64 %106, %101
  %111 = xor i64 %109, %104
  %112 = trunc i64 %110 to i32
  %113 = lshr i64 %110, 32
  %114 = trunc i64 %113 to i32
  %115 = bitcast i8* %95 to i32*
  store i32 %112, i32* %115, align 1, !tbaa !2469
  %116 = getelementptr inbounds i8, i8* %95, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 %114, i32* %117, align 1, !tbaa !2469
  %118 = trunc i64 %111 to i32
  %119 = getelementptr inbounds i8, i8* %95, i64 8
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 1, !tbaa !2469
  %121 = lshr i64 %111, 32
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds i8, i8* %95, i64 12
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 1, !tbaa !2469
  %125 = load i64, i64* %RBP
  %126 = sub i64 %125, 8
  %127 = load i32, i32* %EDI
  %128 = zext i32 %127 to i64
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %126 to i32*
  store i32 %127, i32* %131
  %132 = load i64, i64* %RBP
  %133 = sub i64 %132, 16
  %134 = bitcast %union.vec128_t* %XMM0 to i8*
  %135 = load i64, i64* %PC
  %136 = add i64 %135, 5
  store i64 %136, i64* %PC
  %137 = bitcast i8* %134 to double*
  %138 = load double, double* %137, align 1
  %139 = inttoptr i64 %133 to double*
  store double %138, double* %139
  %140 = bitcast %union.vec128_t* %XMM2 to i8*
  %141 = load i64, i64* %PC
  %142 = add i64 %141, 9
  store i64 %142, i64* %PC
  %143 = bitcast i8* %140 to double*
  %144 = load double, double* %143, align 1
  store double %144, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %145 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %146 = load i64, i64* %RBP
  %147 = sub i64 %146, 16
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 5
  store i64 %149, i64* %PC
  %150 = inttoptr i64 %147 to double*
  %151 = load double, double* %150
  %152 = bitcast i8* %145 to double*
  store double %151, double* %152, align 1, !tbaa !2452
  %153 = getelementptr inbounds i8, i8* %145, i64 8
  %154 = bitcast i8* %153 to double*
  store double 0.000000e+00, double* %154, align 1, !tbaa !2452
  %155 = bitcast %union.vec128_t* %XMM0 to i8*
  %156 = load i64, i64* %PC
  %157 = add i64 %156, 9
  store i64 %157, i64* %PC
  %158 = bitcast i8* %155 to double*
  %159 = load double, double* %158, align 1
  store double %159, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %160 = bitcast %union.vec128_t* %XMM1 to i8*
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 9
  store i64 %162, i64* %PC
  %163 = bitcast i8* %160 to double*
  %164 = load double, double* %163, align 1
  store double %164, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %165 = load i64, i64* %RBP
  %166 = sub i64 %165, 20
  %167 = load i64, i64* %PC
  %168 = add i64 %167, 7
  store i64 %168, i64* %PC
  %169 = inttoptr i64 %166 to i32*
  store i32 1, i32* %169
  br label %block_400f72

block_400fdf:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 10
  store i64 %171, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %172 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 8
  store i64 %174, i64* %PC
  %175 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 104) to double*)
  %176 = bitcast i8* %172 to double*
  store double %175, double* %176, align 1, !tbaa !2452
  %177 = getelementptr inbounds i8, i8* %172, i64 8
  %178 = bitcast i8* %177 to double*
  store double 0.000000e+00, double* %178, align 1, !tbaa !2452
  %179 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 9
  store i64 %181, i64* %PC
  %182 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %183 = bitcast i8* %179 to double*
  store double %182, double* %183, align 1, !tbaa !2452
  %184 = getelementptr inbounds i8, i8* %179, i64 8
  %185 = bitcast i8* %184 to double*
  store double 0.000000e+00, double* %185, align 1, !tbaa !2452
  %186 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 9
  store i64 %188, i64* %PC
  %189 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %190 = bitcast i8* %186 to double*
  store double %189, double* %190, align 1, !tbaa !2452
  %191 = getelementptr inbounds i8, i8* %186, i64 8
  %192 = bitcast i8* %191 to double*
  store double 0.000000e+00, double* %192, align 1, !tbaa !2452
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 8
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 4
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to i32*
  %198 = load i32, i32* %197
  %199 = sext i32 %198 to i64
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %202 = load i64, i64* %RCX
  %203 = mul i64 %202, 8
  %204 = add i64 %203, add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 16)
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 9
  store i64 %206, i64* %PC
  %207 = bitcast i8* %201 to double*
  %208 = load double, double* %207, align 1
  %209 = getelementptr inbounds i8, i8* %201, i64 8
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 1
  %212 = inttoptr i64 %204 to double*
  %213 = load double, double* %212
  %214 = fsub double %208, %213
  %215 = bitcast i8* %200 to double*
  store double %214, double* %215, align 1, !tbaa !2452
  %216 = getelementptr inbounds i8, i8* %200, i64 8
  %217 = bitcast i8* %216 to i64*
  store i64 %211, i64* %217, align 1, !tbaa !2452
  %218 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 9
  store i64 %220, i64* %PC
  %221 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %222 = bitcast i8* %218 to double*
  store double %221, double* %222, align 1, !tbaa !2452
  %223 = getelementptr inbounds i8, i8* %218, i64 8
  %224 = bitcast i8* %223 to double*
  store double 0.000000e+00, double* %224, align 1, !tbaa !2452
  %225 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %226 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 9
  store i64 %228, i64* %PC
  %229 = bitcast i8* %226 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %226, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %235 = fsub double %230, %234
  %236 = bitcast i8* %225 to double*
  store double %235, double* %236, align 1, !tbaa !2452
  %237 = getelementptr inbounds i8, i8* %225, i64 8
  %238 = bitcast i8* %237 to i64*
  store i64 %233, i64* %238, align 1, !tbaa !2452
  %239 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %240 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %241 = bitcast %union.vec128_t* %XMM3 to i8*
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = bitcast i8* %240 to double*
  %245 = load double, double* %244, align 1
  %246 = getelementptr inbounds i8, i8* %240, i64 8
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = bitcast i8* %241 to double*
  %250 = load double, double* %249, align 1
  %251 = fdiv double %245, %250
  %252 = bitcast i8* %239 to double*
  store double %251, double* %252, align 1, !tbaa !2452
  %253 = getelementptr inbounds i8, i8* %239, i64 8
  %254 = bitcast i8* %253 to i64*
  store i64 %248, i64* %254, align 1, !tbaa !2452
  %255 = load i64, i64* %RBP
  %256 = sub i64 %255, 20
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 4
  store i64 %258, i64* %PC
  %259 = inttoptr i64 %256 to i32*
  %260 = load i32, i32* %259
  %261 = sext i32 %260 to i64
  store i64 %261, i64* %RCX, align 8, !tbaa !2428
  %262 = load i64, i64* %RCX
  %263 = load i64, i64* %PC
  %264 = add i64 %263, 4
  store i64 %264, i64* %PC
  %265 = sext i64 %262 to i128
  %266 = and i128 %265, -18446744073709551616
  %267 = zext i64 %262 to i128
  %268 = or i128 %266, %267
  %269 = mul nsw i128 40, %268
  %270 = trunc i128 %269 to i64
  store i64 %270, i64* %RCX, align 8, !tbaa !2428
  %271 = sext i64 %270 to i128
  %272 = icmp ne i128 %271, %269
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %273, i8* %274, align 1, !tbaa !2432
  %275 = trunc i128 %269 to i32
  %276 = and i32 %275, 255
  %277 = call i32 @llvm.ctpop.i32(i32 %276) #17
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  %280 = xor i8 %279, 1
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %280, i8* %281, align 1, !tbaa !2446
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %282, align 1, !tbaa !2447
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %283, align 1, !tbaa !2448
  %284 = lshr i64 %270, 63
  %285 = trunc i64 %284 to i8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %285, i8* %286, align 1, !tbaa !2449
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %273, i8* %287, align 1, !tbaa !2450
  %288 = load i64, i64* %RAX
  %289 = load i64, i64* %PC
  %290 = add i64 %289, 3
  store i64 %290, i64* %PC
  store i64 %288, i64* %RDX, align 8, !tbaa !2428
  %291 = load i64, i64* %RDX
  %292 = load i64, i64* %RCX
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 3
  store i64 %294, i64* %PC
  %295 = add i64 %292, %291
  store i64 %295, i64* %RDX, align 8, !tbaa !2428
  %296 = icmp ult i64 %295, %291
  %297 = icmp ult i64 %295, %292
  %298 = or i1 %296, %297
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %299, i8* %300, align 1, !tbaa !2432
  %301 = trunc i64 %295 to i32
  %302 = and i32 %301, 255
  %303 = call i32 @llvm.ctpop.i32(i32 %302) #17
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = xor i8 %305, 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %306, i8* %307, align 1, !tbaa !2446
  %308 = xor i64 %292, %291
  %309 = xor i64 %308, %295
  %310 = lshr i64 %309, 4
  %311 = trunc i64 %310 to i8
  %312 = and i8 %311, 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %312, i8* %313, align 1, !tbaa !2447
  %314 = icmp eq i64 %295, 0
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %315, i8* %316, align 1, !tbaa !2448
  %317 = lshr i64 %295, 63
  %318 = trunc i64 %317 to i8
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %318, i8* %319, align 1, !tbaa !2449
  %320 = lshr i64 %291, 63
  %321 = lshr i64 %292, 63
  %322 = xor i64 %317, %320
  %323 = xor i64 %317, %321
  %324 = add nuw nsw i64 %322, %323
  %325 = icmp eq i64 %324, 2
  %326 = zext i1 %325 to i8
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %326, i8* %327, align 1, !tbaa !2450
  %328 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %329 = load i64, i64* %RDX
  %330 = add i64 %329, 16
  %331 = load i64, i64* %PC
  %332 = add i64 %331, 5
  store i64 %332, i64* %PC
  %333 = inttoptr i64 %330 to double*
  %334 = load double, double* %333
  %335 = bitcast i8* %328 to double*
  store double %334, double* %335, align 1, !tbaa !2452
  %336 = getelementptr inbounds i8, i8* %328, i64 8
  %337 = bitcast i8* %336 to double*
  store double 0.000000e+00, double* %337, align 1, !tbaa !2452
  %338 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %339 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %340 = bitcast %union.vec128_t* %XMM0 to i8*
  %341 = load i64, i64* %PC
  %342 = add i64 %341, 4
  store i64 %342, i64* %PC
  %343 = bitcast i8* %339 to double*
  %344 = load double, double* %343, align 1
  %345 = getelementptr inbounds i8, i8* %339, i64 8
  %346 = bitcast i8* %345 to i64*
  %347 = load i64, i64* %346, align 1
  %348 = bitcast i8* %340 to double*
  %349 = load double, double* %348, align 1
  %350 = fsub double %344, %349
  %351 = bitcast i8* %338 to double*
  store double %350, double* %351, align 1, !tbaa !2452
  %352 = getelementptr inbounds i8, i8* %338, i64 8
  %353 = bitcast i8* %352 to i64*
  store i64 %347, i64* %353, align 1, !tbaa !2452
  %354 = load i64, i64* %RBP
  %355 = sub i64 %354, 20
  %356 = load i64, i64* %PC
  %357 = add i64 %356, 4
  store i64 %357, i64* %PC
  %358 = inttoptr i64 %355 to i32*
  %359 = load i32, i32* %358
  %360 = sext i32 %359 to i64
  store i64 %360, i64* %RCX, align 8, !tbaa !2428
  %361 = load i64, i64* %RCX
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 4
  store i64 %363, i64* %PC
  %364 = sext i64 %361 to i128
  %365 = and i128 %364, -18446744073709551616
  %366 = zext i64 %361 to i128
  %367 = or i128 %365, %366
  %368 = mul nsw i128 40, %367
  %369 = trunc i128 %368 to i64
  store i64 %369, i64* %RCX, align 8, !tbaa !2428
  %370 = sext i64 %369 to i128
  %371 = icmp ne i128 %370, %368
  %372 = zext i1 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %372, i8* %373, align 1, !tbaa !2432
  %374 = trunc i128 %368 to i32
  %375 = and i32 %374, 255
  %376 = call i32 @llvm.ctpop.i32(i32 %375) #17
  %377 = trunc i32 %376 to i8
  %378 = and i8 %377, 1
  %379 = xor i8 %378, 1
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %379, i8* %380, align 1, !tbaa !2446
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %381, align 1, !tbaa !2447
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %382, align 1, !tbaa !2448
  %383 = lshr i64 %369, 63
  %384 = trunc i64 %383 to i8
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %384, i8* %385, align 1, !tbaa !2449
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %372, i8* %386, align 1, !tbaa !2450
  %387 = load i64, i64* %RAX
  %388 = load i64, i64* %RCX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 3
  store i64 %390, i64* %PC
  %391 = add i64 %388, %387
  store i64 %391, i64* %RAX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %387
  %393 = icmp ult i64 %391, %388
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 %388, %387
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %387, 63
  %417 = lshr i64 %388, 63
  %418 = xor i64 %413, %416
  %419 = xor i64 %413, %417
  %420 = add nuw nsw i64 %418, %419
  %421 = icmp eq i64 %420, 2
  %422 = zext i1 %421 to i8
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %422, i8* %423, align 1, !tbaa !2450
  %424 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %425 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %426 = load i64, i64* %RAX
  %427 = add i64 %426, 24
  %428 = load i64, i64* %PC
  %429 = add i64 %428, 5
  store i64 %429, i64* %PC
  %430 = bitcast i8* %425 to double*
  %431 = load double, double* %430, align 1
  %432 = getelementptr inbounds i8, i8* %425, i64 8
  %433 = bitcast i8* %432 to i64*
  %434 = load i64, i64* %433, align 1
  %435 = inttoptr i64 %427 to double*
  %436 = load double, double* %435
  %437 = fdiv double %431, %436
  %438 = bitcast i8* %424 to double*
  store double %437, double* %438, align 1, !tbaa !2452
  %439 = getelementptr inbounds i8, i8* %424, i64 8
  %440 = bitcast i8* %439 to i64*
  store i64 %434, i64* %440, align 1, !tbaa !2452
  %441 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %442 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %443 = bitcast %union.vec128_t* %XMM3 to i8*
  %444 = load i64, i64* %PC
  %445 = add i64 %444, 4
  store i64 %445, i64* %PC
  %446 = bitcast i8* %442 to double*
  %447 = load double, double* %446, align 1
  %448 = getelementptr inbounds i8, i8* %442, i64 8
  %449 = bitcast i8* %448 to i64*
  %450 = load i64, i64* %449, align 1
  %451 = bitcast i8* %443 to double*
  %452 = load double, double* %451, align 1
  %453 = fmul double %447, %452
  %454 = bitcast i8* %441 to double*
  store double %453, double* %454, align 1, !tbaa !2452
  %455 = getelementptr inbounds i8, i8* %441, i64 8
  %456 = bitcast i8* %455 to i64*
  store i64 %450, i64* %456, align 1, !tbaa !2452
  %457 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %458 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %459 = bitcast %union.vec128_t* %XMM2 to i8*
  %460 = load i64, i64* %PC
  %461 = add i64 %460, 4
  store i64 %461, i64* %PC
  %462 = bitcast i8* %458 to double*
  %463 = load double, double* %462, align 1
  %464 = getelementptr inbounds i8, i8* %458, i64 8
  %465 = bitcast i8* %464 to i64*
  %466 = load i64, i64* %465, align 1
  %467 = bitcast i8* %459 to double*
  %468 = load double, double* %467, align 1
  %469 = fadd double %463, %468
  %470 = bitcast i8* %457 to double*
  store double %469, double* %470, align 1, !tbaa !2452
  %471 = getelementptr inbounds i8, i8* %457, i64 8
  %472 = bitcast i8* %471 to i64*
  store i64 %466, i64* %472, align 1, !tbaa !2452
  %473 = bitcast %union.vec128_t* %XMM1 to i8*
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 9
  store i64 %475, i64* %PC
  %476 = bitcast i8* %473 to double*
  %477 = load double, double* %476, align 1
  store double %477, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  br label %block_40105e

block_40105e:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit, %block_400fdf
  %MEMORY.0 = phi %struct.Memory* [ %1087, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %1087, %block_400fdf ]
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 114
  %480 = load i64, i64* %PC
  %481 = add i64 %480, 5
  %482 = load i64, i64* %PC
  %483 = add i64 %482, 5
  store i64 %483, i64* %PC
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %485 = load i64, i64* %484, align 8, !tbaa !2428
  %486 = add i64 %485, -8
  %487 = inttoptr i64 %486 to i64*
  store i64 %481, i64* %487
  store i64 %486, i64* %484, align 8, !tbaa !2428
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %479, i64* %488, align 8, !tbaa !2428
  %489 = load i64, i64* %PC
  %490 = call %struct.Memory* @sub_4010d0_transit_surface_renamed_(%struct.State* %0, i64 %489, %struct.Memory* %MEMORY.0)
  %491 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %492 = load i64, i64* %PC
  %493 = add i64 %492, 9
  store i64 %493, i64* %PC
  %494 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %495 = bitcast i8* %491 to double*
  store double %494, double* %495, align 1, !tbaa !2452
  %496 = getelementptr inbounds i8, i8* %491, i64 8
  %497 = bitcast i8* %496 to double*
  store double 0.000000e+00, double* %497, align 1, !tbaa !2452
  %498 = bitcast %union.vec128_t* %XMM0 to i8*
  %499 = load i64, i64* %PC
  %500 = add i64 %499, 9
  store i64 %500, i64* %PC
  %501 = bitcast i8* %498 to double*
  %502 = load double, double* %501, align 1
  store double %502, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %503 = load i64, i64* %RBP
  %504 = sub i64 %503, 20
  %505 = load i64, i64* %PC
  %506 = add i64 %505, 3
  store i64 %506, i64* %PC
  %507 = inttoptr i64 %504 to i32*
  %508 = load i32, i32* %507
  %509 = zext i32 %508 to i64
  store i64 %509, i64* %RAX, align 8, !tbaa !2428
  %510 = load i64, i64* %PC
  %511 = add i64 %510, 8
  store i64 %511, i64* %PC
  %512 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %513 = sext i16 %512 to i64
  %514 = and i64 %513, 4294967295
  store i64 %514, i64* %RCX, align 8, !tbaa !2428
  %515 = load i32, i32* %EAX
  %516 = zext i32 %515 to i64
  %517 = load i32, i32* %ECX
  %518 = zext i32 %517 to i64
  %519 = load i64, i64* %PC
  %520 = add i64 %519, 2
  store i64 %520, i64* %PC
  %521 = sub i32 %515, %517
  %522 = icmp ult i32 %515, %517
  %523 = zext i1 %522 to i8
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %523, i8* %524, align 1, !tbaa !2432
  %525 = and i32 %521, 255
  %526 = call i32 @llvm.ctpop.i32(i32 %525) #17
  %527 = trunc i32 %526 to i8
  %528 = and i8 %527, 1
  %529 = xor i8 %528, 1
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %529, i8* %530, align 1, !tbaa !2446
  %531 = xor i64 %518, %516
  %532 = trunc i64 %531 to i32
  %533 = xor i32 %532, %521
  %534 = lshr i32 %533, 4
  %535 = trunc i32 %534 to i8
  %536 = and i8 %535, 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %536, i8* %537, align 1, !tbaa !2447
  %538 = icmp eq i32 %521, 0
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %539, i8* %540, align 1, !tbaa !2448
  %541 = lshr i32 %521, 31
  %542 = trunc i32 %541 to i8
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %542, i8* %543, align 1, !tbaa !2449
  %544 = lshr i32 %515, 31
  %545 = lshr i32 %517, 31
  %546 = xor i32 %545, %544
  %547 = xor i32 %541, %544
  %548 = add nuw nsw i32 %547, %546
  %549 = icmp eq i32 %548, 2
  %550 = zext i1 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %550, i8* %551, align 1, !tbaa !2450
  %552 = load i64, i64* %PC
  %553 = add i64 %552, 50
  %554 = load i64, i64* %PC
  %555 = add i64 %554, 6
  %556 = load i64, i64* %PC
  %557 = add i64 %556, 6
  store i64 %557, i64* %PC
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %559 = load i8, i8* %558, align 1, !tbaa !2449
  %560 = icmp ne i8 %559, 0
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %562 = load i8, i8* %561, align 1, !tbaa !2450
  %563 = icmp ne i8 %562, 0
  %564 = xor i1 %560, %563
  %565 = xor i1 %564, true
  %566 = zext i1 %565 to i8
  store i8 %566, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %568 = select i1 %564, i64 %555, i64 %553
  store i64 %568, i64* %567, align 8, !tbaa !2428
  %569 = load i8, i8* %BRANCH_TAKEN
  %570 = icmp eq i8 %569, 1
  br i1 %570, label %block_4010b4, label %block_401088

block_4010b4:                                     ; preds = %block_401088, %block_40105e
  %MEMORY.1 = phi %struct.Memory* [ %490, %block_40105e ], [ %490, %block_401088 ]
  %571 = load i64, i64* %PC
  %572 = add i64 %571, 5
  %573 = load i64, i64* %PC
  %574 = add i64 %573, 5
  store i64 %574, i64* %PC
  %575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %572, i64* %575, align 8, !tbaa !2428
  %576 = load i64, i64* %RBP
  %577 = sub i64 %576, 20
  %578 = load i64, i64* %PC
  %579 = add i64 %578, 3
  store i64 %579, i64* %PC
  %580 = inttoptr i64 %577 to i32*
  %581 = load i32, i32* %580
  %582 = zext i32 %581 to i64
  store i64 %582, i64* %RAX, align 8, !tbaa !2428
  %583 = load i64, i64* %RAX
  %584 = load i64, i64* %PC
  %585 = add i64 %584, 3
  store i64 %585, i64* %PC
  %586 = trunc i64 %583 to i32
  %587 = add i32 1, %586
  %588 = zext i32 %587 to i64
  store i64 %588, i64* %RAX, align 8, !tbaa !2428
  %589 = icmp ult i32 %587, %586
  %590 = icmp ult i32 %587, 1
  %591 = or i1 %589, %590
  %592 = zext i1 %591 to i8
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %592, i8* %593, align 1, !tbaa !2432
  %594 = and i32 %587, 255
  %595 = call i32 @llvm.ctpop.i32(i32 %594) #17
  %596 = trunc i32 %595 to i8
  %597 = and i8 %596, 1
  %598 = xor i8 %597, 1
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %598, i8* %599, align 1, !tbaa !2446
  %600 = xor i64 1, %583
  %601 = trunc i64 %600 to i32
  %602 = xor i32 %601, %587
  %603 = lshr i32 %602, 4
  %604 = trunc i32 %603 to i8
  %605 = and i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %605, i8* %606, align 1, !tbaa !2447
  %607 = icmp eq i32 %587, 0
  %608 = zext i1 %607 to i8
  %609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %608, i8* %609, align 1, !tbaa !2448
  %610 = lshr i32 %587, 31
  %611 = trunc i32 %610 to i8
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %611, i8* %612, align 1, !tbaa !2449
  %613 = lshr i32 %586, 31
  %614 = xor i32 %610, %613
  %615 = add nuw nsw i32 %614, %610
  %616 = icmp eq i32 %615, 2
  %617 = zext i1 %616 to i8
  %618 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %617, i8* %618, align 1, !tbaa !2450
  %619 = load i64, i64* %RBP
  %620 = sub i64 %619, 20
  %621 = load i32, i32* %EAX
  %622 = zext i32 %621 to i64
  %623 = load i64, i64* %PC
  %624 = add i64 %623, 3
  store i64 %624, i64* %PC
  %625 = inttoptr i64 %620 to i32*
  store i32 %621, i32* %625
  %626 = load i64, i64* %PC
  %627 = sub i64 %626, 336
  %628 = load i64, i64* %PC
  %629 = add i64 %628, 5
  store i64 %629, i64* %PC
  %630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %627, i64* %630, align 8, !tbaa !2428
  br label %block_400f72

block_401088:                                     ; preds = %block_40105e
  %631 = load i64, i64* %PC
  %632 = add i64 %631, 10
  store i64 %632, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %633 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %634 = load i64, i64* %PC
  %635 = add i64 %634, 9
  store i64 %635, i64* %PC
  %636 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %637 = bitcast i8* %633 to double*
  store double %636, double* %637, align 1, !tbaa !2452
  %638 = getelementptr inbounds i8, i8* %633, i64 8
  %639 = bitcast i8* %638 to double*
  store double 0.000000e+00, double* %639, align 1, !tbaa !2452
  %640 = load i64, i64* %RBP
  %641 = sub i64 %640, 20
  %642 = load i64, i64* %PC
  %643 = add i64 %642, 4
  store i64 %643, i64* %PC
  %644 = inttoptr i64 %641 to i32*
  %645 = load i32, i32* %644
  %646 = sext i32 %645 to i64
  store i64 %646, i64* %RCX, align 8, !tbaa !2428
  %647 = load i64, i64* %RCX
  %648 = load i64, i64* %PC
  %649 = add i64 %648, 4
  store i64 %649, i64* %PC
  %650 = sext i64 %647 to i128
  %651 = and i128 %650, -18446744073709551616
  %652 = zext i64 %647 to i128
  %653 = or i128 %651, %652
  %654 = mul nsw i128 40, %653
  %655 = trunc i128 %654 to i64
  store i64 %655, i64* %RCX, align 8, !tbaa !2428
  %656 = sext i64 %655 to i128
  %657 = icmp ne i128 %656, %654
  %658 = zext i1 %657 to i8
  %659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %658, i8* %659, align 1, !tbaa !2432
  %660 = trunc i128 %654 to i32
  %661 = and i32 %660, 255
  %662 = call i32 @llvm.ctpop.i32(i32 %661) #17
  %663 = trunc i32 %662 to i8
  %664 = and i8 %663, 1
  %665 = xor i8 %664, 1
  %666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %665, i8* %666, align 1, !tbaa !2446
  %667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %667, align 1, !tbaa !2447
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %668, align 1, !tbaa !2448
  %669 = lshr i64 %655, 63
  %670 = trunc i64 %669 to i8
  %671 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %670, i8* %671, align 1, !tbaa !2449
  %672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %658, i8* %672, align 1, !tbaa !2450
  %673 = load i64, i64* %RAX
  %674 = load i64, i64* %RCX
  %675 = load i64, i64* %PC
  %676 = add i64 %675, 3
  store i64 %676, i64* %PC
  %677 = add i64 %674, %673
  store i64 %677, i64* %RAX, align 8, !tbaa !2428
  %678 = icmp ult i64 %677, %673
  %679 = icmp ult i64 %677, %674
  %680 = or i1 %678, %679
  %681 = zext i1 %680 to i8
  %682 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %681, i8* %682, align 1, !tbaa !2432
  %683 = trunc i64 %677 to i32
  %684 = and i32 %683, 255
  %685 = call i32 @llvm.ctpop.i32(i32 %684) #17
  %686 = trunc i32 %685 to i8
  %687 = and i8 %686, 1
  %688 = xor i8 %687, 1
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %688, i8* %689, align 1, !tbaa !2446
  %690 = xor i64 %674, %673
  %691 = xor i64 %690, %677
  %692 = lshr i64 %691, 4
  %693 = trunc i64 %692 to i8
  %694 = and i8 %693, 1
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %694, i8* %695, align 1, !tbaa !2447
  %696 = icmp eq i64 %677, 0
  %697 = zext i1 %696 to i8
  %698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %697, i8* %698, align 1, !tbaa !2448
  %699 = lshr i64 %677, 63
  %700 = trunc i64 %699 to i8
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %700, i8* %701, align 1, !tbaa !2449
  %702 = lshr i64 %673, 63
  %703 = lshr i64 %674, 63
  %704 = xor i64 %699, %702
  %705 = xor i64 %699, %703
  %706 = add nuw nsw i64 %704, %705
  %707 = icmp eq i64 %706, 2
  %708 = zext i1 %707 to i8
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %708, i8* %709, align 1, !tbaa !2450
  %710 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %711 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %712 = load i64, i64* %RAX
  %713 = add i64 %712, 32
  %714 = load i64, i64* %PC
  %715 = add i64 %714, 5
  store i64 %715, i64* %PC
  %716 = bitcast i8* %711 to double*
  %717 = load double, double* %716, align 1
  %718 = getelementptr inbounds i8, i8* %711, i64 8
  %719 = bitcast i8* %718 to i64*
  %720 = load i64, i64* %719, align 1
  %721 = inttoptr i64 %713 to double*
  %722 = load double, double* %721
  %723 = fsub double %717, %722
  %724 = bitcast i8* %710 to double*
  store double %723, double* %724, align 1, !tbaa !2452
  %725 = getelementptr inbounds i8, i8* %710, i64 8
  %726 = bitcast i8* %725 to i64*
  store i64 %720, i64* %726, align 1, !tbaa !2452
  %727 = bitcast %union.vec128_t* %XMM0 to i8*
  %728 = load i64, i64* %PC
  %729 = add i64 %728, 9
  store i64 %729, i64* %PC
  %730 = bitcast i8* %727 to double*
  %731 = load double, double* %730, align 1
  store double %731, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  br label %block_4010b4

block_400f72:                                     ; preds = %block_4010b4, %block_400f30
  %MEMORY.2 = phi %struct.Memory* [ %2, %block_400f30 ], [ %MEMORY.1, %block_4010b4 ]
  %732 = load i64, i64* %RBP
  %733 = sub i64 %732, 20
  %734 = load i64, i64* %PC
  %735 = add i64 %734, 3
  store i64 %735, i64* %PC
  %736 = inttoptr i64 %733 to i32*
  %737 = load i32, i32* %736
  %738 = zext i32 %737 to i64
  store i64 %738, i64* %RAX, align 8, !tbaa !2428
  %739 = load i64, i64* %PC
  %740 = add i64 %739, 8
  store i64 %740, i64* %PC
  %741 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %742 = sext i16 %741 to i64
  %743 = and i64 %742, 4294967295
  store i64 %743, i64* %RCX, align 8, !tbaa !2428
  %744 = load i32, i32* %EAX
  %745 = zext i32 %744 to i64
  %746 = load i32, i32* %ECX
  %747 = zext i32 %746 to i64
  %748 = load i64, i64* %PC
  %749 = add i64 %748, 2
  store i64 %749, i64* %PC
  %750 = sub i32 %744, %746
  %751 = icmp ult i32 %744, %746
  %752 = zext i1 %751 to i8
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %752, i8* %753, align 1, !tbaa !2432
  %754 = and i32 %750, 255
  %755 = call i32 @llvm.ctpop.i32(i32 %754) #17
  %756 = trunc i32 %755 to i8
  %757 = and i8 %756, 1
  %758 = xor i8 %757, 1
  %759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %758, i8* %759, align 1, !tbaa !2446
  %760 = xor i64 %747, %745
  %761 = trunc i64 %760 to i32
  %762 = xor i32 %761, %750
  %763 = lshr i32 %762, 4
  %764 = trunc i32 %763 to i8
  %765 = and i8 %764, 1
  %766 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %765, i8* %766, align 1, !tbaa !2447
  %767 = icmp eq i32 %750, 0
  %768 = zext i1 %767 to i8
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %768, i8* %769, align 1, !tbaa !2448
  %770 = lshr i32 %750, 31
  %771 = trunc i32 %770 to i8
  %772 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %771, i8* %772, align 1, !tbaa !2449
  %773 = lshr i32 %744, 31
  %774 = lshr i32 %746, 31
  %775 = xor i32 %774, %773
  %776 = xor i32 %770, %773
  %777 = add nuw nsw i32 %776, %775
  %778 = icmp eq i32 %777, 2
  %779 = zext i1 %778 to i8
  %780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %779, i8* %780, align 1, !tbaa !2450
  %781 = load i64, i64* %PC
  %782 = add i64 %781, 328
  %783 = load i64, i64* %PC
  %784 = add i64 %783, 6
  %785 = load i64, i64* %PC
  %786 = add i64 %785, 6
  store i64 %786, i64* %PC
  %787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %788 = load i8, i8* %787, align 1, !tbaa !2448
  %789 = icmp eq i8 %788, 0
  %790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %791 = load i8, i8* %790, align 1, !tbaa !2449
  %792 = icmp ne i8 %791, 0
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %794 = load i8, i8* %793, align 1, !tbaa !2450
  %795 = icmp ne i8 %794, 0
  %796 = xor i1 %792, %795
  %797 = xor i1 %796, true
  %798 = and i1 %789, %797
  %799 = zext i1 %798 to i8
  store i8 %799, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %801 = select i1 %798, i64 %782, i64 %784
  store i64 %801, i64* %800, align 8, !tbaa !2428
  %802 = load i8, i8* %BRANCH_TAKEN
  %803 = icmp eq i8 %802, 1
  br i1 %803, label %block_4010c7, label %block_400f85

block_4010c7:                                     ; preds = %block_400f72
  %804 = load i64, i64* %RBP
  %805 = sub i64 %804, 4
  %806 = load i64, i64* %PC
  %807 = add i64 %806, 3
  store i64 %807, i64* %PC
  %808 = inttoptr i64 %805 to i32*
  %809 = load i32, i32* %808
  %810 = zext i32 %809 to i64
  store i64 %810, i64* %RAX, align 8, !tbaa !2428
  %811 = load i64, i64* %RSP
  %812 = load i64, i64* %PC
  %813 = add i64 %812, 4
  store i64 %813, i64* %PC
  %814 = add i64 32, %811
  store i64 %814, i64* %RSP, align 8, !tbaa !2428
  %815 = icmp ult i64 %814, %811
  %816 = icmp ult i64 %814, 32
  %817 = or i1 %815, %816
  %818 = zext i1 %817 to i8
  %819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %818, i8* %819, align 1, !tbaa !2432
  %820 = trunc i64 %814 to i32
  %821 = and i32 %820, 255
  %822 = call i32 @llvm.ctpop.i32(i32 %821) #17
  %823 = trunc i32 %822 to i8
  %824 = and i8 %823, 1
  %825 = xor i8 %824, 1
  %826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %825, i8* %826, align 1, !tbaa !2446
  %827 = xor i64 32, %811
  %828 = xor i64 %827, %814
  %829 = lshr i64 %828, 4
  %830 = trunc i64 %829 to i8
  %831 = and i8 %830, 1
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %831, i8* %832, align 1, !tbaa !2447
  %833 = icmp eq i64 %814, 0
  %834 = zext i1 %833 to i8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %834, i8* %835, align 1, !tbaa !2448
  %836 = lshr i64 %814, 63
  %837 = trunc i64 %836 to i8
  %838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %837, i8* %838, align 1, !tbaa !2449
  %839 = lshr i64 %811, 63
  %840 = xor i64 %836, %839
  %841 = add nuw nsw i64 %840, %836
  %842 = icmp eq i64 %841, 2
  %843 = zext i1 %842 to i8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %843, i8* %844, align 1, !tbaa !2450
  %845 = load i64, i64* %PC
  %846 = add i64 %845, 1
  store i64 %846, i64* %PC
  %847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %848 = load i64, i64* %847, align 8, !tbaa !2428
  %849 = add i64 %848, 8
  %850 = inttoptr i64 %848 to i64*
  %851 = load i64, i64* %850
  store i64 %851, i64* %RBP, align 8, !tbaa !2428
  store i64 %849, i64* %847, align 8, !tbaa !2428
  %852 = load i64, i64* %PC
  %853 = add i64 %852, 1
  store i64 %853, i64* %PC
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %856 = load i64, i64* %855, align 8, !tbaa !2428
  %857 = inttoptr i64 %856 to i64*
  %858 = load i64, i64* %857
  store i64 %858, i64* %854, align 8, !tbaa !2428
  %859 = add i64 %856, 8
  store i64 %859, i64* %855, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.2

block_400f85:                                     ; preds = %block_400f72
  %860 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %861 = load i64, i64* %PC
  %862 = add i64 %861, 8
  store i64 %862, i64* %PC
  %863 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015b0__rodata_type* @seg_4015b0__rodata to i64), i64 104) to double*)
  %864 = bitcast i8* %860 to double*
  store double %863, double* %864, align 1, !tbaa !2452
  %865 = getelementptr inbounds i8, i8* %860, i64 8
  %866 = bitcast i8* %865 to double*
  store double 0.000000e+00, double* %866, align 1, !tbaa !2452
  %867 = load i64, i64* %PC
  %868 = add i64 %867, 10
  store i64 %868, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %869 = load i64, i64* %RBP
  %870 = sub i64 %869, 20
  %871 = load i64, i64* %PC
  %872 = add i64 %871, 4
  store i64 %872, i64* %PC
  %873 = inttoptr i64 %870 to i32*
  %874 = load i32, i32* %873
  %875 = sext i32 %874 to i64
  store i64 %875, i64* %RCX, align 8, !tbaa !2428
  %876 = load i64, i64* %RCX
  %877 = load i64, i64* %PC
  %878 = add i64 %877, 4
  store i64 %878, i64* %PC
  %879 = sext i64 %876 to i128
  %880 = and i128 %879, -18446744073709551616
  %881 = zext i64 %876 to i128
  %882 = or i128 %880, %881
  %883 = mul nsw i128 40, %882
  %884 = trunc i128 %883 to i64
  store i64 %884, i64* %RCX, align 8, !tbaa !2428
  %885 = sext i64 %884 to i128
  %886 = icmp ne i128 %885, %883
  %887 = zext i1 %886 to i8
  %888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %887, i8* %888, align 1, !tbaa !2432
  %889 = trunc i128 %883 to i32
  %890 = and i32 %889, 255
  %891 = call i32 @llvm.ctpop.i32(i32 %890) #17
  %892 = trunc i32 %891 to i8
  %893 = and i8 %892, 1
  %894 = xor i8 %893, 1
  %895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %894, i8* %895, align 1, !tbaa !2446
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %896, align 1, !tbaa !2447
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %897, align 1, !tbaa !2448
  %898 = lshr i64 %884, 63
  %899 = trunc i64 %898 to i8
  %900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %899, i8* %900, align 1, !tbaa !2449
  %901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %887, i8* %901, align 1, !tbaa !2450
  %902 = load i64, i64* %RAX
  %903 = load i64, i64* %PC
  %904 = add i64 %903, 3
  store i64 %904, i64* %PC
  store i64 %902, i64* %RDX, align 8, !tbaa !2428
  %905 = load i64, i64* %RDX
  %906 = load i64, i64* %RCX
  %907 = load i64, i64* %PC
  %908 = add i64 %907, 3
  store i64 %908, i64* %PC
  %909 = add i64 %906, %905
  store i64 %909, i64* %RDX, align 8, !tbaa !2428
  %910 = icmp ult i64 %909, %905
  %911 = icmp ult i64 %909, %906
  %912 = or i1 %910, %911
  %913 = zext i1 %912 to i8
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %913, i8* %914, align 1, !tbaa !2432
  %915 = trunc i64 %909 to i32
  %916 = and i32 %915, 255
  %917 = call i32 @llvm.ctpop.i32(i32 %916) #17
  %918 = trunc i32 %917 to i8
  %919 = and i8 %918, 1
  %920 = xor i8 %919, 1
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %920, i8* %921, align 1, !tbaa !2446
  %922 = xor i64 %906, %905
  %923 = xor i64 %922, %909
  %924 = lshr i64 %923, 4
  %925 = trunc i64 %924 to i8
  %926 = and i8 %925, 1
  %927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %926, i8* %927, align 1, !tbaa !2447
  %928 = icmp eq i64 %909, 0
  %929 = zext i1 %928 to i8
  %930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %929, i8* %930, align 1, !tbaa !2448
  %931 = lshr i64 %909, 63
  %932 = trunc i64 %931 to i8
  %933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %932, i8* %933, align 1, !tbaa !2449
  %934 = lshr i64 %905, 63
  %935 = lshr i64 %906, 63
  %936 = xor i64 %931, %934
  %937 = xor i64 %931, %935
  %938 = add nuw nsw i64 %936, %937
  %939 = icmp eq i64 %938, 2
  %940 = zext i1 %939 to i8
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %940, i8* %941, align 1, !tbaa !2450
  %942 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %943 = load i64, i64* %RDX
  %944 = add i64 %943, 8
  %945 = load i64, i64* %PC
  %946 = add i64 %945, 5
  store i64 %946, i64* %PC
  %947 = inttoptr i64 %944 to double*
  %948 = load double, double* %947
  %949 = bitcast i8* %942 to double*
  store double %948, double* %949, align 1, !tbaa !2452
  %950 = getelementptr inbounds i8, i8* %942, i64 8
  %951 = bitcast i8* %950 to double*
  store double 0.000000e+00, double* %951, align 1, !tbaa !2452
  %952 = bitcast %union.vec128_t* %XMM1 to i8*
  %953 = load i64, i64* %PC
  %954 = add i64 %953, 9
  store i64 %954, i64* %PC
  %955 = bitcast i8* %952 to double*
  %956 = load double, double* %955, align 1
  store double %956, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %957 = load i64, i64* %RBP
  %958 = sub i64 %957, 20
  %959 = load i64, i64* %PC
  %960 = add i64 %959, 4
  store i64 %960, i64* %PC
  %961 = inttoptr i64 %958 to i32*
  %962 = load i32, i32* %961
  %963 = sext i32 %962 to i64
  store i64 %963, i64* %RCX, align 8, !tbaa !2428
  %964 = load i64, i64* %RCX
  %965 = load i64, i64* %PC
  %966 = add i64 %965, 4
  store i64 %966, i64* %PC
  %967 = sext i64 %964 to i128
  %968 = and i128 %967, -18446744073709551616
  %969 = zext i64 %964 to i128
  %970 = or i128 %968, %969
  %971 = mul nsw i128 40, %970
  %972 = trunc i128 %971 to i64
  store i64 %972, i64* %RCX, align 8, !tbaa !2428
  %973 = sext i64 %972 to i128
  %974 = icmp ne i128 %973, %971
  %975 = zext i1 %974 to i8
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %975, i8* %976, align 1, !tbaa !2432
  %977 = trunc i128 %971 to i32
  %978 = and i32 %977, 255
  %979 = call i32 @llvm.ctpop.i32(i32 %978) #17
  %980 = trunc i32 %979 to i8
  %981 = and i8 %980, 1
  %982 = xor i8 %981, 1
  %983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %982, i8* %983, align 1, !tbaa !2446
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %984, align 1, !tbaa !2447
  %985 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %985, align 1, !tbaa !2448
  %986 = lshr i64 %972, 63
  %987 = trunc i64 %986 to i8
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %987, i8* %988, align 1, !tbaa !2449
  %989 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %975, i8* %989, align 1, !tbaa !2450
  %990 = load i64, i64* %RAX
  %991 = load i64, i64* %RCX
  %992 = load i64, i64* %PC
  %993 = add i64 %992, 3
  store i64 %993, i64* %PC
  %994 = add i64 %991, %990
  store i64 %994, i64* %RAX, align 8, !tbaa !2428
  %995 = icmp ult i64 %994, %990
  %996 = icmp ult i64 %994, %991
  %997 = or i1 %995, %996
  %998 = zext i1 %997 to i8
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %998, i8* %999, align 1, !tbaa !2432
  %1000 = trunc i64 %994 to i32
  %1001 = and i32 %1000, 255
  %1002 = call i32 @llvm.ctpop.i32(i32 %1001) #17
  %1003 = trunc i32 %1002 to i8
  %1004 = and i8 %1003, 1
  %1005 = xor i8 %1004, 1
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1005, i8* %1006, align 1, !tbaa !2446
  %1007 = xor i64 %991, %990
  %1008 = xor i64 %1007, %994
  %1009 = lshr i64 %1008, 4
  %1010 = trunc i64 %1009 to i8
  %1011 = and i8 %1010, 1
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1011, i8* %1012, align 1, !tbaa !2447
  %1013 = icmp eq i64 %994, 0
  %1014 = zext i1 %1013 to i8
  %1015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1014, i8* %1015, align 1, !tbaa !2448
  %1016 = lshr i64 %994, 63
  %1017 = trunc i64 %1016 to i8
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1017, i8* %1018, align 1, !tbaa !2449
  %1019 = lshr i64 %990, 63
  %1020 = lshr i64 %991, 63
  %1021 = xor i64 %1016, %1019
  %1022 = xor i64 %1016, %1020
  %1023 = add nuw nsw i64 %1021, %1022
  %1024 = icmp eq i64 %1023, 2
  %1025 = zext i1 %1024 to i8
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1025, i8* %1026, align 1, !tbaa !2450
  %1027 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1028 = load i64, i64* %RAX
  %1029 = add i64 %1028, 16
  %1030 = load i64, i64* %PC
  %1031 = add i64 %1030, 5
  store i64 %1031, i64* %PC
  %1032 = inttoptr i64 %1029 to double*
  %1033 = load double, double* %1032
  %1034 = bitcast i8* %1027 to double*
  store double %1033, double* %1034, align 1, !tbaa !2452
  %1035 = getelementptr inbounds i8, i8* %1027, i64 8
  %1036 = bitcast i8* %1035 to double*
  store double 0.000000e+00, double* %1036, align 1, !tbaa !2452
  %1037 = bitcast %union.vec128_t* %XMM1 to i8*
  %1038 = load i64, i64* %PC
  %1039 = add i64 %1038, 9
  store i64 %1039, i64* %PC
  %1040 = bitcast i8* %1037 to double*
  %1041 = load double, double* %1040, align 1
  store double %1041, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %1042 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1043 = load i64, i64* %PC
  %1044 = add i64 %1043, 9
  store i64 %1044, i64* %PC
  %1045 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %1046 = bitcast i8* %1042 to double*
  store double %1045, double* %1046, align 1, !tbaa !2452
  %1047 = getelementptr inbounds i8, i8* %1042, i64 8
  %1048 = bitcast i8* %1047 to double*
  store double 0.000000e+00, double* %1048, align 1, !tbaa !2452
  %1049 = bitcast %union.vec128_t* %XMM1 to i8*
  %1050 = bitcast %union.vec128_t* %XMM0 to i8*
  %1051 = load i64, i64* %PC
  %1052 = add i64 %1051, 4
  store i64 %1052, i64* %PC
  %1053 = bitcast i8* %1049 to double*
  %1054 = load double, double* %1053, align 1
  %1055 = bitcast i8* %1050 to double*
  %1056 = load double, double* %1055, align 1
  %1057 = fcmp uno double %1054, %1056
  br i1 %1057, label %1058, label %1070

; <label>:1058:                                   ; preds = %block_400f85
  %1059 = fadd double %1054, %1056
  %1060 = bitcast double %1059 to i64
  %1061 = and i64 %1060, 9221120237041090560
  %1062 = icmp eq i64 %1061, 9218868437227405312
  %1063 = and i64 %1060, 2251799813685247
  %1064 = icmp ne i64 %1063, 0
  %1065 = and i1 %1062, %1064
  br i1 %1065, label %1066, label %1076

; <label>:1066:                                   ; preds = %1058
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1068 = load i64, i64* %1067, align 8, !tbaa !2428
  %1069 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %1068, %struct.Memory* %MEMORY.2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:1070:                                   ; preds = %block_400f85
  %1071 = fcmp ogt double %1054, %1056
  br i1 %1071, label %1076, label %1072

; <label>:1072:                                   ; preds = %1070
  %1073 = fcmp olt double %1054, %1056
  br i1 %1073, label %1076, label %1074

; <label>:1074:                                   ; preds = %1072
  %1075 = fcmp oeq double %1054, %1056
  br i1 %1075, label %1076, label %1083

; <label>:1076:                                   ; preds = %1074, %1072, %1070, %1058
  %1077 = phi i8 [ 0, %1070 ], [ 0, %1072 ], [ 1, %1074 ], [ 1, %1058 ]
  %1078 = phi i8 [ 0, %1070 ], [ 0, %1072 ], [ 0, %1074 ], [ 1, %1058 ]
  %1079 = phi i8 [ 0, %1070 ], [ 1, %1072 ], [ 0, %1074 ], [ 1, %1058 ]
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1077, i8* %1080, align 1, !tbaa !2451
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1078, i8* %1081, align 1, !tbaa !2451
  %1082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1079, i8* %1082, align 1, !tbaa !2451
  br label %1083

; <label>:1083:                                   ; preds = %1076, %1074
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1084, align 1, !tbaa !2451
  %1085 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %1085, align 1, !tbaa !2451
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1086, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %1066, %1083
  %1087 = phi %struct.Memory* [ %1069, %1066 ], [ %MEMORY.2, %1083 ]
  %1088 = load i64, i64* %PC
  %1089 = add i64 %1088, 133
  %1090 = load i64, i64* %PC
  %1091 = add i64 %1090, 6
  %1092 = load i64, i64* %PC
  %1093 = add i64 %1092, 6
  store i64 %1093, i64* %PC
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1095 = load i8, i8* %1094, align 1, !tbaa !2432
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1097 = load i8, i8* %1096, align 1, !tbaa !2448
  %1098 = or i8 %1097, %1095
  %1099 = icmp ne i8 %1098, 0
  %1100 = zext i1 %1099 to i8
  store i8 %1100, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1102 = select i1 %1099, i64 %1089, i64 %1091
  store i64 %1102, i64* %1101, align 8, !tbaa !2428
  %1103 = load i8, i8* %BRANCH_TAKEN
  %1104 = icmp eq i8 %1103, 1
  br i1 %1104, label %block_40105e, label %block_400fdf
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015a4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015a4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2446
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2447
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2448
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2449
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2450
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2432
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2446
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2447
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2448
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2449
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2450
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_401530___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401530:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2432
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2446
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2447
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2448
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2449
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2450
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2432
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2446
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2447
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2448
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2449
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2450
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2451
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2451
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2451
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2451
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2451
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2451
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4092
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_400560__init_proc_renamed_(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2432
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2446
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2448
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2449
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2450
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2447
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2448
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_401586, label %block_401566

block_401586:                                     ; preds = %block_401570, %block_401530
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401530 ], [ %387, %block_401570 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2432
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2446
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2447
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2448
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2449
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2450
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401566:                                     ; preds = %block_401530
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2432
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2446
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2448
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2449
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2450
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2447
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_401570

block_401570:                                     ; preds = %block_401570, %block_401566
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_401566 ], [ %387, %block_401570 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2450
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2432
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2446
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2447
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2448
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2449
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2450
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2448
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_401570, label %block_401586
}

; Function Attrs: noinline
define %struct.Memory* @sub_400650_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400650:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %37 = icmp ult i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2432
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2446
  %47 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2447
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2448
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2449
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2450
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2448
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_400678, label %block_400661

block_400678:                                     ; preds = %block_400661, %block_400673, %block_400650
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400650 ], [ %2, %block_400661 ], [ %2, %block_400673 ]
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 1
  store i64 %90, i64* %PC
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %93 = load i64, i64* %92, align 8, !tbaa !2428
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94
  store i64 %95, i64* %91, align 8, !tbaa !2428
  %96 = add i64 %93, 8
  store i64 %96, i64* %92, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_40067a:                                     ; preds = %block_40066b
  %97 = load i64, i64* %RAX
  %98 = load i64, i64* %RAX
  %99 = add i64 %98, %97
  %100 = load i16, i16* %AX
  %101 = zext i16 %100 to i64
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 6
  store i64 %103, i64* %PC
  %104 = load i64, i64* %PC
  %105 = tail call %struct.Memory* @sub_400680_register_tm_clones(%struct.State* %0, i64 %104, %struct.Memory* %2)
  ret %struct.Memory* %105

block_400673:                                     ; preds = %block_40066b
  %106 = load i64, i64* %RAX
  %107 = load i64, i64* %RAX
  %108 = add i64 %107, %106
  %109 = load i32, i32* %EAX
  %110 = zext i32 %109 to i64
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 5
  store i64 %112, i64* %PC
  br label %block_400678

block_40066b:                                     ; preds = %block_400661
  %113 = load i64, i64* %PC
  %114 = add i64 %113, 1
  store i64 %114, i64* %PC
  %115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %116 = load i64, i64* %115, align 8, !tbaa !2428
  %117 = add i64 %116, 8
  %118 = inttoptr i64 %116 to i64*
  %119 = load i64, i64* %118
  store i64 %119, i64* %RBP, align 8, !tbaa !2428
  store i64 %117, i64* %115, align 8, !tbaa !2428
  %120 = load i64, i64* %PC
  %121 = add i64 %120, 5
  store i64 %121, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %122 = load i64, i64* %RAX
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %122, i64* %125, align 8, !tbaa !2428
  %126 = load i64, i64* %PC
  switch i64 %126, label %163 [
    i64 4195962, label %block_40067a
    i64 4195955, label %block_400673
  ]

block_400661:                                     ; preds = %block_400650
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 5
  store i64 %128, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %129 = load i64, i64* %RAX
  %130 = load i64, i64* %RAX
  %131 = load i64, i64* %PC
  %132 = add i64 %131, 3
  store i64 %132, i64* %PC
  %133 = and i64 %130, %129
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %134, align 1, !tbaa !2432
  %135 = trunc i64 %133 to i32
  %136 = and i32 %135, 255
  %137 = call i32 @llvm.ctpop.i32(i32 %136) #17
  %138 = trunc i32 %137 to i8
  %139 = and i8 %138, 1
  %140 = xor i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %140, i8* %141, align 1, !tbaa !2446
  %142 = icmp eq i64 %133, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2448
  %145 = lshr i64 %133, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2449
  %148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %148, align 1, !tbaa !2450
  %149 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %149, align 1, !tbaa !2447
  %150 = load i64, i64* %PC
  %151 = add i64 %150, 15
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 2
  %154 = load i64, i64* %PC
  %155 = add i64 %154, 2
  store i64 %155, i64* %PC
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %157 = load i8, i8* %156, align 1, !tbaa !2448
  store i8 %157, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %159 = icmp ne i8 %157, 0
  %160 = select i1 %159, i64 %151, i64 %153
  store i64 %160, i64* %158, align 8, !tbaa !2428
  %161 = load i8, i8* %BRANCH_TAKEN
  %162 = icmp eq i8 %161, 1
  br i1 %162, label %block_400678, label %block_40066b

; <label>:163:                                    ; preds = %block_40066b
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_4006c0___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4006c0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2432
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2446
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2447
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2448
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2449
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2450
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2448
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_4006e0, label %block_4006c9

block_4006e0:                                     ; preds = %block_4006c0
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4006c9:                                     ; preds = %block_4006c0
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_400650_deregister_tm_clones_renamed_(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_4006f0_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4006f0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_400680_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
define %struct.Memory* @sub_400610__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400610:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2432
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2446
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2448
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2449
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2450
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2447
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2432
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2446
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2450
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2447
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4015a0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401530___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602670___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4006f0_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4006f0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4006f0_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4006f0_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4006c0___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4006c0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4006c0___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4006c0___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602678_strcmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602660_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_4005e0_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026e0_sprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026a0_strlen(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4005f0_asin(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602668_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_4005d0_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @tan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4015a0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015a0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4015a0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015a0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401530___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401530;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401530___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401530___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400700;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400700_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602670___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400560;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400560__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015a4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015a4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4015a0___libc_csu_fini()
  ret void
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401530___libc_csu_init()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { alwaysinline nobuiltin nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2430, i64 2065}
!2433 = !{!"_ZTS5State", !2430, i64 16, !2434, i64 2064, !2430, i64 2080, !2435, i64 2088, !2437, i64 2112, !2439, i64 2208, !2440, i64 2480, !2441, i64 2608, !2442, i64 2736, !2430, i64 2760, !2430, i64 2768, !2443, i64 3280}
!2434 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2435 = !{!"_ZTS8Segments", !2436, i64 0, !2430, i64 2, !2436, i64 4, !2430, i64 6, !2436, i64 8, !2430, i64 10, !2436, i64 12, !2430, i64 14, !2436, i64 16, !2430, i64 18, !2436, i64 20, !2430, i64 22}
!2436 = !{!"short", !2430, i64 0}
!2437 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88}
!2438 = !{!"_ZTS3Reg", !2430, i64 0}
!2439 = !{!"_ZTS3GPR", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88, !2429, i64 96, !2438, i64 104, !2429, i64 112, !2438, i64 120, !2429, i64 128, !2438, i64 136, !2429, i64 144, !2438, i64 152, !2429, i64 160, !2438, i64 168, !2429, i64 176, !2438, i64 184, !2429, i64 192, !2438, i64 200, !2429, i64 208, !2438, i64 216, !2429, i64 224, !2438, i64 232, !2429, i64 240, !2438, i64 248, !2429, i64 256, !2438, i64 264}
!2440 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2441 = !{!"_ZTS3MMX", !2430, i64 0}
!2442 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2443 = !{!"_ZTS13SegmentCaches", !2444, i64 0, !2444, i64 16, !2444, i64 32, !2444, i64 48, !2444, i64 64, !2444, i64 80}
!2444 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2445, i64 8, !2445, i64 12}
!2445 = !{!"int", !2430, i64 0}
!2446 = !{!2433, !2430, i64 2067}
!2447 = !{!2433, !2430, i64 2069}
!2448 = !{!2433, !2430, i64 2071}
!2449 = !{!2433, !2430, i64 2073}
!2450 = !{!2433, !2430, i64 2077}
!2451 = !{!2430, !2430, i64 0}
!2452 = !{!2453, !2453, i64 0}
!2453 = !{!"double", !2430, i64 0}
!2454 = !{!2455, !2455, i64 0}
!2455 = !{!"float", !2430, i64 0}
!2456 = !{!2457, !2459}
!2457 = distinct !{!2457, !2458, !"ext_4005e0_sin: argument 0"}
!2458 = distinct !{!2458, !"ext_4005e0_sin"}
!2459 = distinct !{!2459, !2458, !"ext_4005e0_sin: argument 1"}
!2460 = !{!2457}
!2461 = !{!2459}
!2462 = !{!2463, !2465}
!2463 = distinct !{!2463, !2464, !"ext_4005e0_sin: argument 0"}
!2464 = distinct !{!2464, !"ext_4005e0_sin"}
!2465 = distinct !{!2465, !2464, !"ext_4005e0_sin: argument 1"}
!2466 = !{!2463}
!2467 = !{!2465}
!2468 = !{!2436, !2436, i64 0}
!2469 = !{!2445, !2445, i64 0}
!2470 = !{!2471, !2473}
!2471 = distinct !{!2471, !2472, !"ext_4005e0_sin: argument 0"}
!2472 = distinct !{!2472, !"ext_4005e0_sin"}
!2473 = distinct !{!2473, !2472, !"ext_4005e0_sin: argument 1"}
!2474 = !{!2471}
!2475 = !{!2473}
!2476 = !{!2477, !2479}
!2477 = distinct !{!2477, !2478, !"ext_4005e0_sin: argument 0"}
!2478 = distinct !{!2478, !"ext_4005e0_sin"}
!2479 = distinct !{!2479, !2478, !"ext_4005e0_sin: argument 1"}
!2480 = !{!2477}
!2481 = !{!2479}
!2482 = !{!2483, !2485}
!2483 = distinct !{!2483, !2484, !"ext_4005d0_tan: argument 0"}
!2484 = distinct !{!2484, !"ext_4005d0_tan"}
!2485 = distinct !{!2485, !2484, !"ext_4005d0_tan: argument 1"}
!2486 = !{!2483}
!2487 = !{!2485}
!2488 = !{!2489, !2491}
!2489 = distinct !{!2489, !2490, !"ext_4005e0_sin: argument 0"}
!2490 = distinct !{!2490, !"ext_4005e0_sin"}
!2491 = distinct !{!2491, !2490, !"ext_4005e0_sin: argument 1"}
!2492 = !{!2489}
!2493 = !{!2491}
!2494 = !{!2495, !2497}
!2495 = distinct !{!2495, !2496, !"ext_602668_cos: argument 0"}
!2496 = distinct !{!2496, !"ext_602668_cos"}
!2497 = distinct !{!2497, !2496, !"ext_602668_cos: argument 1"}
!2498 = !{!2495}
!2499 = !{!2497}
!2500 = !{!2501, !2503}
!2501 = distinct !{!2501, !2502, !"ext_602668_cos: argument 0"}
!2502 = distinct !{!2502, !"ext_602668_cos"}
!2503 = distinct !{!2503, !2502, !"ext_602668_cos: argument 1"}
!2504 = !{!2501}
!2505 = !{!2503}
!2506 = !{!2507, !2509}
!2507 = distinct !{!2507, !2508, !"ext_4005e0_sin: argument 0"}
!2508 = distinct !{!2508, !"ext_4005e0_sin"}
!2509 = distinct !{!2509, !2508, !"ext_4005e0_sin: argument 1"}
!2510 = !{!2507}
!2511 = !{!2509}
