; ModuleID = '../binary/test.mcsema.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400590__init_type = type <{ [23 x i8] }>
%seg_4005b0__plt_type = type <{ [144 x i8] }>
%seg_400640__text_type = type <{ [3986 x i8] }>
%seg_4015d4__fini_type = type <{ [9 x i8] }>
%seg_4015e0__rodata_type = type <{ [120 x i8], [54 x i8], [58 x i8], [56 x i8], [60 x i8], [67 x i8], [24 x i8], [13 x i8], [13 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [33 x i8], [17 x i8], [17 x i8], [13 x i8], [3 x i8], [2 x i8], [48 x i8], [24 x i8], [56 x i8], [56 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8], [57 x i8] }>
%seg_401a9c__eh_frame_hdr_type = type <{ [76 x i8] }>
%seg_401ae8__eh_frame_type = type <{ [312 x i8] }>
%seg_601df0__init_array_type = type <{ i64, i64 }>
%seg_601ff0__got_type = type <{ i64, i64 }>
%seg_602000__got_plt_type = type <{ [24 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%seg_602060__data_type = type <{ [16 x i8] }>
%niter_type = type <{ [16 x i8], [128 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }>
%__bss_start_type = type <{ [16 x i8], [72 x i8], [8 x i8], [16 x i8], [400 x i8], [8 x i8], [8 x i8], [8 x i8], [24 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8], [16 x i8], [640 x i8], [8 x i8], [8 x i8], [8 x i8], [8 x i8] }>
%itercount_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.anon.2 = type { i8, i8 }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.uint64v4_t = type { [4 x i64] }

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400590__init = internal constant %seg_400590__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05]\1A \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4005b0__plt = internal constant %seg_4005b0__plt_type <{ [144 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF%R\1A \00\00\00\00\00\00\00\00\00\00\00\FF%J\1A \00\00\00\00\00\00\00\00\00\00\00\FF%B\1A \00\00\00\00\00\00\00\00\00\00\00\FF%:\1A \00\00\00\00\00\00\00\00\00\00\00\FF%2\1A \00\00\00\00\00\00\00\00\00\00\00\FF%*\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\22\1A \00\00\00\00\00\00\00\00\00\00\00\FF%\1A\1A \00\00\00\00\00\00\00\00\00\00\00" }>
@seg_400640__text = internal constant %seg_400640__text_type <{ [3986 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\D0\15@\00H\C7\C1`\15@\00H\C7\C70\07@\00\FF\15\86\19 \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8@!`\00H=@!`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF@!`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE@!`\00UH\81\EE@!`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF@!`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=I\1A \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\057\1A \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89f\0F\1F\84\00\00\00\00\00UH\89\E5H\81\EC\C0\00\00\00\F2\0F\10\05\A5\0E\00\00\F2\0F\10\0D\A5\0E\00\00\F2\0F\10\15\A5\0E\00\00\F2\0F\10\1D\A5\0E\00\00\F2\0F\10%\A5\0E\00\00\F2\0F\10-\A5\0E\00\00\F2\0F\105\A5\0E\00\00\F2\0F\10=\A5\0E\00\00\F2D\0F\10\05\A4\0E\00\00\C7E\FC\00\00\00\00\89}\F8H\89u\F0\F2D\0F\11\04%X!`\00\F2\0F\11<%`!`\00\F2\0F\114%h!`\00\F2\0F\11,%p!`\00\F2\0F\11$%x!`\00\F2\0F\11\1C%\80!`\00\F2\0F\11\14%\88!`\00\F2\0F\11\0C%\90!`\00\C7\04%p `\00@B\0F\00\F2\0F\11\04%\98!`\00f\C7\04%\A0!`\00\04\00\C7E\EC\00\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8Dx\00\00\00\C7E\E8\00\00\00\00\83}\E8\04\0F\8DT\00\00\00H\B8\B0!`\00\00\00\00\00H\B9\80 `\00\00\00\00\00HcU\ECH\C1\E2\05H\01\D1HcU\E8\F2\0F\10\04\D1\8Bu\EC\83\C6\01Hc\CEHk\C9(H\01\C8\8Bu\E8\83\C6\01Hc\CE\F2\0F\11\04\C8\8BE\E8\83\C0\01\89E\E8\E9\A2\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9u\FF\FF\FFH\BFX\16@\00\00\00\00\00\B0\00\E84\FD\FF\FFH\BF\8E\16@\00\00\00\00\00\8B4%p `\00\89E\CC\B0\00\E8\19\FD\FF\FFH\BF\C8\16@\00\00\00\00\00\F2\0F\10\05g\0D\00\00\F2\0F*\0C%p `\00\F2\0F^\C8\0F(\C1\89E\C8\B0\01\E8\ED\FC\FF\FFH\BF\00\17@\00\00\00\00\00\89E\C4\B0\00\E8\D9\FC\FF\FFH\BF<\17@\00\00\00\00\00\89E\C0\B0\00\E8\C5\FC\FF\FF\C7\04%P&`\00\00\00\00\00\89E\BC\8B\04%P&`\00;\04%p `\00\0F\8D#\02\00\00f\C7\04%@#`\00\00\00\0F\BF\04%@#`\00\83\F8\01\0F\8F\86\00\00\00\BF\04\00\00\00\F2\0F\10\05\FB\0C\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8\F6\05\00\00H\B9P#`\00\00\00\00\00\F2\0F\10\04%H#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\89\CEH\01\D6\F2\0F\11\06\F2\0F\10\04%p#`\00H\0F\BF\14%@#`\00H\C1\E2\04H\01\D1\F2\0F\11A\08\89E\B8f\8B\04%@#`\00f\83\C0\01f\89\04%@#`\00\E9i\FF\FF\FF\BF\03\00\00\00\F2\0F\10\05u\0C\00\00f\C7\04%@#`\00\00\00\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\E8f\05\00\00\BF\06\00\00\00\F2\0F\10\05I\0C\00\00\F2\0F\10\0C%H#`\00\F2\0F\11M\D0\F2\0F\10\0C%\98!`\00\F2\0F^\C8\0F(\C1\89E\B4\E83\05\00\00\F2\0F\10\05\03\0C\00\00\F2\0F\10\0D\03\0C\00\00\F2\0F\10\15\03\0C\00\00\F2\0F\10\1C%H#`\00\F2\0F\11]\D8\F2\0F\10\1C%`#`\00\F2\0F\5C\1C%P#`\00\F2\0F\11\1C%x#`\00\F2\0F\10\1C%`#`\00\F2\0FY\1C%h#`\00\F2\0F\10$%X#`\00\F2\0F\11E\A8\0F(\C4\89E\A4\F2\0F\11]\98\F2\0F\11M\90\F2\0F\11U\88\E8h\FB\FF\FF\F2\0FY\04%P#`\00\F2\0F\10M\98\F2\0F^\C8\F2\0F\10E\88\F2\0F\5C\C1\F2\0F\11\04%\80#`\00\F2\0F\10E\D8\F2\0F\5CE\D0\F2\0F\11\04%\88#`\00\F2\0F\10\04%X#`\00\E8#\FB\FF\FF\F2\0F\11\04%\90#`\00\F2\0F\10\04%\90#`\00\F2\0FY\04%\90#`\00\F2\0F\10M\90\F2\0F^\C8\F2\0F\11\0C%\90#`\00\F2\0F\10E\A8\F2\0F\11\04%\98#`\00\F2\0F\10\0C%\90#`\00\F2\0F\11\0C%\A0#`\00\8B\04%P&`\00\83\C0\01\89\04%P&`\00\E9\C9\FD\FF\FFH\BF\B0#`\00\00\00\00\00H\BE\7F\17@\00\00\00\00\00H\BA\97\17@\00\00\00\00\00\F2\0F\10\04%P#`\00\F2\0F\10\0C%X#`\00\B0\02\E8\A9\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\83\C2PH\BE\7F\17@\00\00\00\00\00H\BF\A4\17@\00\00\00\00\00\F2\0F\10\04%`#`\00\F2\0F\10\0C%h#`\00H\89}\80H\89\D7H\8BU\80\89\85|\FF\FF\FF\B0\02\E8]\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\A0\00\00\00H\BE\B1\17@\00\00\00\00\00\F2\0F\10\04%x#`\00H\89\D7\89\85x\FF\FF\FF\B0\01\E8)\FA\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\F0\00\00\00H\BE\E1\17@\00\00\00\00\00\F2\0F\10\04%\90#`\00H\89\D7\89\85t\FF\FF\FF\B0\01\E8\F5\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2@\01\00\00H\BE\11\18@\00\00\00\00\00\F2\0F\10\04%\80#`\00H\89\D7\89\85p\FF\FF\FF\B0\01\E8\C1\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\90\01\00\00H\BE\E1\17@\00\00\00\00\00\F2\0F\10\04%\98#`\00H\89\D7\89\85l\FF\FF\FF\B0\01\E8\8D\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C2\E0\01\00\00H\BEA\18@\00\00\00\00\00\F2\0F\10\04%\88#`\00H\89\D7\89\85h\FF\FF\FF\B0\01\E8Y\F9\FF\FFH\BA\B0#`\00\00\00\00\00H\81\C20\02\00\00H\BE\E1\17@\00\00\00\00\00\F2\0F\10\04%\A0#`\00H\89\D7\89\85d\FF\FF\FF\B0\01\E8%\F9\FF\FF\C7E\E0\00\00\00\00\C7E\EC\00\00\00\00\89\85`\FF\FF\FF\83}\EC\08\0F\8D\BF\01\00\00H\B8\B0#`\00\00\00\00\00HcM\ECHk\C9PH\01\C8HcM\ECH\8B4\CD\00!`\00H\89\C7\E8\9E\F8\FF\FF\83\F8\00\0F\84z\01\00\00H\BFq\18@\00\00\00\00\00\8BE\EC\83\C0\01\89\C6\B0\00\E8\5C\F8\FF\FFH\BF\92\18@\00\00\00\00\00HcM\ECH\8B4\CD\00!`\00\89\85\5C\FF\FF\FF\B0\00\E89\F8\FF\FFH\BF\A3\18@\00\00\00\00\00H\B9\B0#`\00\00\00\00\00Hcu\ECHk\F6PH\01\F1H\89\CE\89\85X\FF\FF\FF\B0\00\E8\0A\F8\FF\FFH\BF\B4\18@\00\00\00\00\00\89\85T\FF\FF\FF\B0\00\E8\F3\F7\FF\FFHcM\ECH\8B<\CD\00!`\00\89\85P\FF\FF\FF\E8\CC\F7\FF\FF\89\C2\89U\E4\C7E\E8\00\00\00\00\8BE\E8;E\E4\0F\8D\B2\00\00\00H\BF\C1\18@\00\00\00\00\00\B8^\00\00\00\B9 \00\00\00H\BA\B0#`\00\00\00\00\00Hcu\ECH\8B4\F5\00!`\00LcE\E8F\0F\BE\0C\06Hcu\ECHk\F6PH\01\F2Hcu\E8D\0F\BE\142E9\D1\0FD\C1\89\C6\B0\00\E8n\F7\FF\FFH\BA\B0#`\00\00\00\00\00Hc}\ECH\8B<\FD\00!`\00LcE\E8B\0F\BE\0C\07Hc}\ECHk\FFPH\01\FAHc}\E8\0F\BE4:9\F1\89\85L\FF\FF\FF\0F\84\09\00\00\00\8BE\E0\83\C0\01\89E\E0\E9\00\00\00\00\8BE\E8\83\C0\01\89E\E8\E9B\FF\FF\FFH\BF\C6\16@\00\00\00\00\00\B0\00\E8\01\F7\FF\FF\89\85H\FF\FF\FF\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E97\FE\FF\FF\83}\E0\00\0F\8E>\00\00\00H\BF\C6\18@\00\00\00\00\00H\B8\C7\16@\00\00\00\00\00H\B9\C4\18@\00\00\00\00\00\8Bu\E0\83}\E0\01H\0FO\C1H\89\C2\B0\00\E8\AB\F6\FF\FF\89\85D\FF\FF\FF\E9\17\00\00\00H\BF\F6\18@\00\00\00\00\00\B0\00\E8\8F\F6\FF\FF\89\85@\FF\FF\FF1\C0H\81\C4\C0\00\00\00]\C3fffff.\0F\1F\84\00\00\00\00\00UH\89\E5H\83\EC \F2\0F\10\0D\D8\06\00\00\0FW\D2\89}\F8\F2\0F\11E\F0\F2\0F\11\14%H#`\00\F2\0F\10E\F0\F2\0F\11\04%0&`\00\F2\0F\11\0C%8&`\00\C7E\EC\01\00\00\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8FB\01\00\00\F2\0F\10\05\8B\06\00\00H\B8\B0!`\00\00\00\00\00HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10J\08\F2\0F\11\0C%@&`\00HcM\ECHk\C9(H\01\C8\F2\0F\10H\10\F2\0F\11\0C%H&`\00\F2\0F\10\0C%H&`\00f\0F.\C8\0F\86\7F\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\05'\06\00\00\F2\0F\10\0C%H&`\00\F2\0F\10\14%p!`\00HcM\F8\F2\0F\5C\14\CDP!`\00\F2\0F\10\1C%h!`\00\F2\0F\5C\1C%\80!`\00\F2\0F^\D3HcM\ECHk\C9(H\89\C2H\01\CA\F2\0F\10Z\10\F2\0F\5C\D8HcM\ECHk\C9(H\01\C8\F2\0F^X\18\F2\0FY\D3\F2\0FX\CA\F2\0F\11\0C%H&`\00\E8m\00\00\00\F2\0F\10\04%H&`\00\F2\0F\11\04%8&`\00\8BE\EC\0F\BF\0C%\A0!`\009\C8\0F\8D,\00\00\00H\B8\B0!`\00\00\00\00\00\F2\0F\10\04%H#`\00HcM\ECHk\C9(H\01\C8\F2\0F\5C@ \F2\0F\11\04%H#`\00\E9\00\00\00\00\8BE\EC\83\C0\01\89E\EC\E9\AB\FE\FF\FF\8BE\FCH\83\C4 ]\C3UH\89\E5H\81\EC\90\00\00\00f\83<%@#`\00\00\0F\84\81\01\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\0B\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9)\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0FY\04%p#`\00\F2\0F\11E\E8\0FW\C0\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FYM\E8\F2\0F\11M\E0\F2\0F\10\0C%p#`\00\F2\0F\11M\D8\F2\0F\10\0C%p#`\00\F2\0FXM\E8\F2\0F\5CM\E0\F2\0F\11\0C%p#`\00\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\17\00\00\00\F2\0F\10\04%H#`\00\F2\0FYE\D8\F2\0F\11\04%0&`\00\F2\0F\10\04%0&`\00\F2\0F^\04%p#`\00\F2\0F\11\04%H#`\00\E9\0F\03\00\00\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F^\0C%8&`\00\F2\0FY\C1\F2\0F\11\04%H#`\00\F2\0F\10\04%p#`\00\F2\0F\10\0C%8&`\00\F2\0F^\0C%H&`\00\F2\0FY\C1\F2\0F\11\04%p#`\00\E9\BA\02\00\00\0FW\C0\F2\0F\10\0C%@&`\00f\0F.\C8\0F\85\0B\00\00\00\0F\8A\05\00\00\00\E9\94\01\00\00\0FW\C0\F2\0F\10\0C%H#`\00f\0F.\C8\0F\85.\00\00\00\0F\8A(\00\00\00\0FW\C0\F2\0F\11\04%p#`\00\F2\0F\10\04%0&`\00\F2\0F^\04%@&`\00\F2\0F\11E\E8\E9?\00\00\00\F2\0F\10\04%H#`\00\F2\0F\5C\04%@&`\00\F2\0F^\04%@&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\C8\0F(\C1\E8\DF\F2\FF\FF\F2\0F\10M\C8\F2\0FY\C8\F2\0F\11M\E8\F2\0F\10E\E8\E8\D7\F2\FF\FF\F2\0F\11E\F8\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0FYE\E8\F2\0F\11E\E0\F2\0F\10\04%p#`\00\F2\0F\11E\D8\F2\0F\10\04%p#`\00\F2\0FXE\F8\F2\0F\10M\E0\F2\0F\11E\C0\0F(\C1\E8\88\F2\FF\FF\F2\0F\10\0D\B0\02\00\00\F2\0F\10U\C0\F2\0F\5C\D0\F2\0F\11\14%p#`\00\F2\0F\10E\D8\F2\0FXE\F8\F2\0F^\C1\F2\0F\11M\B8\E8F\F2\FF\FF\F2\0F\11E\D0\F2\0F\10E\B8\F2\0FY\04%@&`\00\F2\0FYE\D0\F2\0FYE\D0\F2\0F\11E\D0\F2\0F\10\04%@&`\00\F2\0F\10M\D8\F2\0FXM\F8\F2\0F\11E\B0\0F(\C1\E8\04\F2\FF\FF\F2\0F\10M\B0\F2\0FY\C8\F2\0F\10\04%p#`\00\F2\0F\11M\A8\E8\D8\F1\FF\FF\F2\0F\10\0D\18\02\00\00\F2\0F^\C8\F2\0F\10E\A8\F2\0FY\C1\F2\0FXE\D0\F2\0F\11\04%H#`\00\E9\05\01\00\00\F2\0F\10\04%8&`\00\F2\0F^\04%H&`\00\F2\0F\10\0C%p#`\00\F2\0F\11E\A0\0F(\C1\E8\98\F1\FF\FF\F2\0F\10M\A0\F2\0FY\C8\0F(\C1\E8\97\F1\FF\FFH\B8\00\00\00\00\00\00\00\80fH\0F~\C1H1\C1fH\0Fn\C1\F2\0F\11E\F0\F2\0F\10\04%H#`\00\F2\0F\10\0C%H&`\00\F2\0F\10U\F0fH\0F~\D1H1\C1fH\0Fn\D1\F2\0F\11E\98\0F(\C2H\89E\90\F2\0F\11M\88\E8\01\F1\FF\FF\F2\0F\10M\88\F2\0FY\C8\F2\0F\10\04%8&`\00\F2\0F\10\14%p#`\00\F2\0F\11E\80\0F(\C2\F2\0F\11\8Dx\FF\FF\FF\E8\D1\F0\FF\FF\F2\0F\10M\80\F2\0FY\C8\F2\0F\10\85x\FF\FF\FF\F2\0F^\C1\F2\0F\10M\98\F2\0FY\C8\F2\0F\11\0C%H#`\00\F2\0F\10E\F0fH\0F~\C0H\8BM\90H1\C8fH\0Fn\C0\F2\0F\11\04%p#`\00H\81\C4\90\00\00\00]\C3f\90AWAVI\89\D7AUATL\8D%~\08 \00UH\8D-~\08 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\FF\EF\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_4015d4__fini = internal constant %seg_4015d4__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_4015e0__rodata = internal constant %seg_4015e0__rodata_type <{ [120 x i8] c"\01\00\02\00\00\00\00\00\00\00\00\00\00\00\10@sh\91\ED\FC\00\AF@1\08\AC\1Cz\F4\B0@\D3Mb\10X\FD\B2@\DFO\8D\97\8E\95\B4@m\E7\FB\A9\F1\07\B7@\89A`\E5\D0\A2\B9@\AEG\E1z\F4\D5\BA@\00\00\00\00\00\C5\BD@\00\00\00\00\00@\8F@{\14\AEG\E1zd?\82\A0\ED\E2GF\18?\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00@", [54 x i8] c"Ready to begin John Walker's floating point accuracy\0A\00", [58 x i8] c"and performance benchmark.  %d iterations will be made.\0A\0A\00", [56 x i8] c"\0AMeasured run time in seconds should be divided by %.f\0A\00", [60 x i8] c"to normalise for reporting results.  For archival results,\0A\00", [67 x i8] c"adjust iteration count so the benchmark runs about five minutes.\0A\0A\00", [24 x i8] c"%15s   %21.11f  %14.11f\00", [13 x i8] c"Marginal ray\00", [13 x i8] c"Paraxial ray\00", [48 x i8] c"Longitudinal spherical aberration:      %16.11f\00", [48 x i8] c"    (Maximum permissible):              %16.11f\00", [48 x i8] c"Offense against sine condition (coma):  %16.11f\00", [48 x i8] c"Axial chromatic aberration:             %16.11f\00", [33 x i8] c"\0AError in results on line %d...\0A\00", [17 x i8] c"Expected:  \22%s\22\0A\00", [17 x i8] c"Received:  \22%s\22\0A\00", [13 x i8] c"(Errors)    \00", [3 x i8] c"%c\00", [2 x i8] c"s\00", [48 x i8] c"\0A%d error%s in results.  This is VERY SERIOUS.\0A\00", [24 x i8] c"\0ANo errors in results.\0A\00", [56 x i8] c"   Marginal ray          47.09479120920   0.04178472683\00", [56 x i8] c"   Paraxial ray          47.08372160249   0.04177864821\00", [57 x i8] c"Longitudinal spherical aberration:        -0.01106960671\00", [57 x i8] c"    (Maximum permissible):                 0.05306749907\00", [57 x i8] c"Offense against sine condition (coma):     0.00008954761\00", [57 x i8] c"    (Maximum permissible):                 0.00250000000\00", [57 x i8] c"Axial chromatic aberration:                0.00448229032\00" }>
@seg_401a9c__eh_frame_hdr = internal constant %seg_401a9c__eh_frame_hdr_type <{ [76 x i8] c"\01\1B\03;H\00\00\00\08\00\00\00\14\EB\FF\FF\A4\00\00\00\A4\EB\FF\FFd\00\00\00\D4\EB\FF\FF\90\00\00\00\94\EC\FF\FF\CC\00\00\00\C4\F4\FF\FF\E8\00\00\00d\F6\FF\FF\04\01\00\00\C4\FA\FF\FF$\01\00\004\FB\FF\FFl\01\00\00" }>
@seg_401ae8__eh_frame = internal constant %seg_401ae8__eh_frame_type <{ [312 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\EB\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\EB\FF\FF\02\00\00\00\00\00\00\00$\00\00\000\00\00\00h\EA\FF\FF\90\00\00\00\00\0E\10F\0E\18J\0F\0Bw\08\80\00?\1A;*3$\22\00\00\00\00\18\00\00\00X\00\00\00\C0\EB\FF\FF\22\08\00\00\00A\0E\10\86\02C\0D\06\00\00\00\18\00\00\00t\00\00\00\D4\F3\FF\FF\A0\01\00\00\00A\0E\10\86\02C\0D\06\00\00\00\1C\00\00\00\90\00\00\00X\F5\FF\FF^\04\00\00\00A\0E\10\86\02C\0D\06\00\00\00\00\00\00\00D\00\00\00\B0\00\00\00\98\F9\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\F8\00\00\00\C0\F9\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601df0__init_array = internal global %seg_601df0__init_array_type <{ i64 ptrtoint (void ()* @callback_sub_400720_frame_dummy to i64), i64 ptrtoint (void ()* @callback_sub_4006f0___do_global_dtors_aux to i64) }>
@seg_601ff0__got = internal global %seg_601ff0__got_type <{ i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), i64 ptrtoint (i64 ()* @__gmon_start__ to i64) }>
@seg_602000__got_plt = internal global %seg_602000__got_plt_type <{ [24 x i8] zeroinitializer, i64 ptrtoint (i64 (i64)* @strlen to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), i64 ptrtoint (double (double)* @cos to i64), i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), i64 ptrtoint (double (double)* @tan to i64), i64 ptrtoint (double (double)* @sin to i64), i64 ptrtoint (i64 (i64)* @asin to i64), i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64) }>
@seg_602060__data = internal global %seg_602060__data_type zeroinitializer
@niter = global %niter_type <{ [16 x i8] c"\E8\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [128 x i8] c"\CD\CC\CC\CC\CC\0C;@\80H\BF}\1D8\F8?\CD\CC\CC\CC\CC\CCO@\A4p=\0A\D7\A3\E0?\AEG\E1z\14\AE0\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00D\8Bl\E7\FB\A9\C1?\AEG\E1z\14\AE0\C0\06\12\14?\C6\DC\F9?\9A\99\99\99\99YB@R\B8\1E\85\EBQ\D8?fffff\86S\C0\00\00\00\00\00\00\F0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 814), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 870), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 926), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 983), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 1040), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 1097), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 1154), i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 983) }>
@__bss_start = global %__bss_start_type zeroinitializer
@itercount = global %itercount_type zeroinitializer
@0 = internal global i1 false
@1 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_400720_frame_dummy_wrapper
@2 = internal constant void ()* @__mcsema_attach_call
@3 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4006f0___do_global_dtors_aux_wrapper
@4 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_4015d0___libc_csu_fini_wrapper
@5 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @callback_sub_401560___libc_csu_init_wrapper
@6 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @main_wrapper
@7 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.term_proc_wrapper
@8 = internal constant %struct.Memory* (%struct.State*, i64, %struct.Memory*)* @.init_proc_wrapper
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_destructor, i8* null }]
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 101, void ()* @__mcsema_constructor, i8* null }]

declare %struct.Memory* @__remill_sync_hyper_call(%struct.State* dereferenceable(3376), %struct.Memory*, i32) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_read_memory_8(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_8(%struct.Memory*, i64, i8 zeroext) #2

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_read_memory_16(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_16(%struct.Memory*, i64, i16 zeroext) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_read_memory_32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_32(%struct.Memory*, i64, i32) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_read_memory_64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_64(%struct.Memory*, i64, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_read_memory_f32(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f64(%struct.Memory*, i64) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i8 @__remill_undefined_8() #2

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #4

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #3

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #3

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #3

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #3

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #3

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #3

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #3

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #3

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #3

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f32(%struct.Memory*, i64, float) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f64(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare zeroext i8 @__remill_read_io_port_8(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare zeroext i16 @__remill_read_io_port_16(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32 @__remill_read_io_port_32(%struct.Memory*, i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_8(%struct.Memory*, i64, i8 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_16(%struct.Memory*, i64, i16 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare %struct.Memory* @__remill_write_io_port_32(%struct.Memory*, i64, i32) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_load(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_store_store(%struct.Memory*) #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_load(%struct.Memory*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #1

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i64 @__remill_undefined_64() #2

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_undefined_f64() #2

declare %struct.Memory* @__remill_compare_exchange_memory_8(%struct.Memory*, i64, i8* dereferenceable(1), i8 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_16(%struct.Memory*, i64, i16* dereferenceable(2), i16 zeroext) #0

declare %struct.Memory* @__remill_compare_exchange_memory_32(%struct.Memory*, i64, i32* dereferenceable(4), i32) #0

declare %struct.Memory* @__remill_compare_exchange_memory_64(%struct.Memory*, i64, i64* dereferenceable(8), i64) #0

declare %struct.Memory* @__remill_compare_exchange_memory_128(%struct.Memory*, i64, i128* dereferenceable(16), i128* dereferenceable(16)) local_unnamed_addr #0

declare %struct.Memory* @__remill_fetch_and_add_8(%struct.Memory*, i64, i8* dereferenceable(1)) #0

declare %struct.Memory* @__remill_fetch_and_add_16(%struct.Memory*, i64, i16* dereferenceable(2)) #0

declare %struct.Memory* @__remill_fetch_and_add_32(%struct.Memory*, i64, i32* dereferenceable(4)) #0

declare %struct.Memory* @__remill_fetch_and_add_64(%struct.Memory*, i64, i64* dereferenceable(8)) #0

; Function Attrs: nounwind readnone
declare float @sqrtf(float) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sqrt(double) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @fesetround(i32) local_unnamed_addr #6

; Function Attrs: nounwind readonly
declare i32 @fegetround() local_unnamed_addr #7

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare double @__remill_read_memory_f80(%struct.Memory*, i64) #2

; Function Attrs: nounwind
declare i32 @fetestexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feraiseexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32 @feclearexcept(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32) #5

; Function Attrs: nounwind readnone
declare double @cos(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @sin(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @tan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @atan(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @exp2(double) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare double @remainder(double, double) local_unnamed_addr #5

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_write_memory_f80(%struct.Memory*, i64, double) #2

; Function Attrs: nounwind readnone
declare double @log2(double) local_unnamed_addr #5

; Function Attrs: noinline nounwind optnone
define %struct.Memory* @__remill_basic_block(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #8 !dbg !1261 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1, !dbg !1952
  store i64 0, i64* %SS_BASE, align 8, !dbg !1953
  store i64 0, i64* %ES_BASE, align 8, !dbg !1954
  store i64 0, i64* %DS_BASE, align 8, !dbg !1955
  store i64 0, i64* %CS_BASE, align 8, !dbg !1956
  store %struct.State* %0, %struct.State** %STATE, align 8, !dbg !1957
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8, !dbg !1958
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1959
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33, !dbg !1960
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0, !dbg !1961
  %PC = bitcast %union.anon* %6 to i64*, !dbg !1961
  store i64 %1, i64* %PC, align 8, !dbg !1962
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1963
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1, !dbg !1964
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0, !dbg !1965
  %10 = bitcast %union.anon* %9 to %struct.anon.2*, !dbg !1965
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1, !dbg !1966
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1967
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3, !dbg !1968
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0, !dbg !1969
  %14 = bitcast %union.anon* %13 to %struct.anon.2*, !dbg !1969
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1, !dbg !1970
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1971
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5, !dbg !1972
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0, !dbg !1973
  %18 = bitcast %union.anon* %17 to %struct.anon.2*, !dbg !1973
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1, !dbg !1974
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1975
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7, !dbg !1976
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0, !dbg !1977
  %22 = bitcast %union.anon* %21 to %struct.anon.2*, !dbg !1977
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1, !dbg !1978
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1979
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1, !dbg !1980
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0, !dbg !1981
  %26 = bitcast %union.anon* %25 to %struct.anon.2*, !dbg !1981
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0, !dbg !1982
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1983
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3, !dbg !1984
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0, !dbg !1985
  %30 = bitcast %union.anon* %29 to %struct.anon.2*, !dbg !1985
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0, !dbg !1986
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1987
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5, !dbg !1988
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0, !dbg !1989
  %34 = bitcast %union.anon* %33 to %struct.anon.2*, !dbg !1989
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0, !dbg !1990
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1991
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7, !dbg !1992
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0, !dbg !1993
  %38 = bitcast %union.anon* %37 to %struct.anon.2*, !dbg !1993
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0, !dbg !1994
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1995
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9, !dbg !1996
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0, !dbg !1997
  %42 = bitcast %union.anon* %41 to %struct.anon.2*, !dbg !1997
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0, !dbg !1998
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !1999
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11, !dbg !2000
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0, !dbg !2001
  %46 = bitcast %union.anon* %45 to %struct.anon.2*, !dbg !2001
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0, !dbg !2002
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2003
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13, !dbg !2004
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0, !dbg !2005
  %50 = bitcast %union.anon* %49 to %struct.anon.2*, !dbg !2005
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0, !dbg !2006
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2007
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15, !dbg !2008
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0, !dbg !2009
  %54 = bitcast %union.anon* %53 to %struct.anon.2*, !dbg !2009
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0, !dbg !2010
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2011
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17, !dbg !2012
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0, !dbg !2013
  %58 = bitcast %union.anon* %57 to %struct.anon.2*, !dbg !2013
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0, !dbg !2014
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2015
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19, !dbg !2016
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0, !dbg !2017
  %62 = bitcast %union.anon* %61 to %struct.anon.2*, !dbg !2017
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0, !dbg !2018
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2019
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21, !dbg !2020
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0, !dbg !2021
  %66 = bitcast %union.anon* %65 to %struct.anon.2*, !dbg !2021
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0, !dbg !2022
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2023
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23, !dbg !2024
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0, !dbg !2025
  %70 = bitcast %union.anon* %69 to %struct.anon.2*, !dbg !2025
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0, !dbg !2026
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2027
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25, !dbg !2028
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0, !dbg !2029
  %74 = bitcast %union.anon* %73 to %struct.anon.2*, !dbg !2029
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0, !dbg !2030
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2031
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27, !dbg !2032
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0, !dbg !2033
  %78 = bitcast %union.anon* %77 to %struct.anon.2*, !dbg !2033
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0, !dbg !2034
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2035
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29, !dbg !2036
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0, !dbg !2037
  %82 = bitcast %union.anon* %81 to %struct.anon.2*, !dbg !2037
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0, !dbg !2038
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2039
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31, !dbg !2040
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0, !dbg !2041
  %86 = bitcast %union.anon* %85 to %struct.anon.2*, !dbg !2041
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0, !dbg !2042
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2043
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1, !dbg !2044
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0, !dbg !2045
  %AX = bitcast %union.anon* %89 to i16*, !dbg !2045
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2046
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3, !dbg !2047
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0, !dbg !2048
  %BX = bitcast %union.anon* %92 to i16*, !dbg !2048
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2049
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5, !dbg !2050
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0, !dbg !2051
  %CX = bitcast %union.anon* %95 to i16*, !dbg !2051
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2052
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7, !dbg !2053
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0, !dbg !2054
  %DX = bitcast %union.anon* %98 to i16*, !dbg !2054
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2055
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9, !dbg !2056
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0, !dbg !2057
  %SI = bitcast %union.anon* %101 to i16*, !dbg !2057
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2058
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11, !dbg !2059
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0, !dbg !2060
  %DI = bitcast %union.anon* %104 to i16*, !dbg !2060
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2061
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13, !dbg !2062
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0, !dbg !2063
  %SP = bitcast %union.anon* %107 to i16*, !dbg !2063
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2064
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15, !dbg !2065
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0, !dbg !2066
  %BP = bitcast %union.anon* %110 to i16*, !dbg !2066
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2067
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17, !dbg !2068
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0, !dbg !2069
  %R8W = bitcast %union.anon* %113 to i16*, !dbg !2069
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2070
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19, !dbg !2071
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0, !dbg !2072
  %R9W = bitcast %union.anon* %116 to i16*, !dbg !2072
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2073
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21, !dbg !2074
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0, !dbg !2075
  %R10W = bitcast %union.anon* %119 to i16*, !dbg !2075
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2076
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23, !dbg !2077
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0, !dbg !2078
  %R11W = bitcast %union.anon* %122 to i16*, !dbg !2078
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2079
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25, !dbg !2080
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0, !dbg !2081
  %R12W = bitcast %union.anon* %125 to i16*, !dbg !2081
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2082
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27, !dbg !2083
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0, !dbg !2084
  %R13W = bitcast %union.anon* %128 to i16*, !dbg !2084
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2085
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29, !dbg !2086
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0, !dbg !2087
  %R14W = bitcast %union.anon* %131 to i16*, !dbg !2087
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2088
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31, !dbg !2089
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0, !dbg !2090
  %R15W = bitcast %union.anon* %134 to i16*, !dbg !2090
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2091
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33, !dbg !2092
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0, !dbg !2093
  %IP = bitcast %union.anon* %137 to i16*, !dbg !2093
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2094
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1, !dbg !2095
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0, !dbg !2096
  %EAX = bitcast %union.anon* %140 to i32*, !dbg !2096
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2097
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3, !dbg !2098
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0, !dbg !2099
  %EBX = bitcast %union.anon* %143 to i32*, !dbg !2099
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2100
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5, !dbg !2101
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0, !dbg !2102
  %ECX = bitcast %union.anon* %146 to i32*, !dbg !2102
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2103
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7, !dbg !2104
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0, !dbg !2105
  %EDX = bitcast %union.anon* %149 to i32*, !dbg !2105
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2106
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9, !dbg !2107
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0, !dbg !2108
  %ESI = bitcast %union.anon* %152 to i32*, !dbg !2108
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2109
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11, !dbg !2110
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0, !dbg !2111
  %EDI = bitcast %union.anon* %155 to i32*, !dbg !2111
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2112
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13, !dbg !2113
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0, !dbg !2114
  %ESP = bitcast %union.anon* %158 to i32*, !dbg !2114
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2115
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15, !dbg !2116
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0, !dbg !2117
  %EBP = bitcast %union.anon* %161 to i32*, !dbg !2117
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2118
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33, !dbg !2119
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0, !dbg !2120
  %EIP = bitcast %union.anon* %164 to i32*, !dbg !2120
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2121
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17, !dbg !2122
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0, !dbg !2123
  %R8D = bitcast %union.anon* %167 to i32*, !dbg !2123
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2124
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19, !dbg !2125
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0, !dbg !2126
  %R9D = bitcast %union.anon* %170 to i32*, !dbg !2126
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2127
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21, !dbg !2128
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0, !dbg !2129
  %R10D = bitcast %union.anon* %173 to i32*, !dbg !2129
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2130
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23, !dbg !2131
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0, !dbg !2132
  %R11D = bitcast %union.anon* %176 to i32*, !dbg !2132
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2133
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25, !dbg !2134
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0, !dbg !2135
  %R12D = bitcast %union.anon* %179 to i32*, !dbg !2135
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2136
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27, !dbg !2137
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0, !dbg !2138
  %R13D = bitcast %union.anon* %182 to i32*, !dbg !2138
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2139
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29, !dbg !2140
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0, !dbg !2141
  %R14D = bitcast %union.anon* %185 to i32*, !dbg !2141
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2142
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31, !dbg !2143
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0, !dbg !2144
  %R15D = bitcast %union.anon* %188 to i32*, !dbg !2144
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2145
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1, !dbg !2146
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0, !dbg !2147
  %RAX = bitcast %union.anon* %191 to i64*, !dbg !2147
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2148
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3, !dbg !2149
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0, !dbg !2150
  %RBX = bitcast %union.anon* %194 to i64*, !dbg !2150
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2151
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5, !dbg !2152
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0, !dbg !2153
  %RCX = bitcast %union.anon* %197 to i64*, !dbg !2153
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2154
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7, !dbg !2155
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0, !dbg !2156
  %RDX = bitcast %union.anon* %200 to i64*, !dbg !2156
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2157
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9, !dbg !2158
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0, !dbg !2159
  %RSI = bitcast %union.anon* %203 to i64*, !dbg !2159
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2160
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11, !dbg !2161
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0, !dbg !2162
  %RDI = bitcast %union.anon* %206 to i64*, !dbg !2162
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2163
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13, !dbg !2164
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0, !dbg !2165
  %RSP = bitcast %union.anon* %209 to i64*, !dbg !2165
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2166
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15, !dbg !2167
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0, !dbg !2168
  %RBP = bitcast %union.anon* %212 to i64*, !dbg !2168
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2169
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17, !dbg !2170
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0, !dbg !2171
  %R8 = bitcast %union.anon* %215 to i64*, !dbg !2171
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2172
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19, !dbg !2173
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0, !dbg !2174
  %R9 = bitcast %union.anon* %218 to i64*, !dbg !2174
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2175
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21, !dbg !2176
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0, !dbg !2177
  %R10 = bitcast %union.anon* %221 to i64*, !dbg !2177
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2178
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23, !dbg !2179
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0, !dbg !2180
  %R11 = bitcast %union.anon* %224 to i64*, !dbg !2180
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2181
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25, !dbg !2182
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0, !dbg !2183
  %R12 = bitcast %union.anon* %227 to i64*, !dbg !2183
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2184
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27, !dbg !2185
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0, !dbg !2186
  %R13 = bitcast %union.anon* %230 to i64*, !dbg !2186
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2187
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29, !dbg !2188
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0, !dbg !2189
  %R14 = bitcast %union.anon* %233 to i64*, !dbg !2189
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2190
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31, !dbg !2191
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0, !dbg !2192
  %R15 = bitcast %union.anon* %236 to i64*, !dbg !2192
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6, !dbg !2193
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33, !dbg !2194
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0, !dbg !2195
  %RIP = bitcast %union.anon* %239 to i64*, !dbg !2195
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2196
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1, !dbg !2197
  %SS = bitcast %union.SegmentSelector* %241 to i16*, !dbg !2198
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2199
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3, !dbg !2200
  %ES = bitcast %union.SegmentSelector* %243 to i16*, !dbg !2201
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2202
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5, !dbg !2203
  %GS = bitcast %union.SegmentSelector* %245 to i16*, !dbg !2204
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2205
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7, !dbg !2206
  %FS = bitcast %union.SegmentSelector* %247 to i16*, !dbg !2207
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2208
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9, !dbg !2209
  %DS = bitcast %union.SegmentSelector* %249 to i16*, !dbg !2210
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4, !dbg !2211
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11, !dbg !2212
  %CS = bitcast %union.SegmentSelector* %251 to i16*, !dbg !2213
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2214
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5, !dbg !2215
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0, !dbg !2216
  %GS_BASE = bitcast %union.anon* %254 to i64*, !dbg !2216
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5, !dbg !2217
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7, !dbg !2218
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0, !dbg !2219
  %FS_BASE = bitcast %union.anon* %257 to i64*, !dbg !2219
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2220
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0, !dbg !2221
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*, !dbg !2222
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2223
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1, !dbg !2224
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*, !dbg !2225
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2226
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2, !dbg !2227
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*, !dbg !2228
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2229
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3, !dbg !2230
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*, !dbg !2231
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2232
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4, !dbg !2233
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*, !dbg !2234
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2235
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5, !dbg !2236
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*, !dbg !2237
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2238
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6, !dbg !2239
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*, !dbg !2240
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2241
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7, !dbg !2242
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*, !dbg !2243
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2244
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8, !dbg !2245
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*, !dbg !2246
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2247
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9, !dbg !2248
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*, !dbg !2249
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2250
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10, !dbg !2251
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*, !dbg !2252
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2253
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11, !dbg !2254
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*, !dbg !2255
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2256
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12, !dbg !2257
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*, !dbg !2258
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2259
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13, !dbg !2260
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*, !dbg !2261
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2262
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14, !dbg !2263
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*, !dbg !2264
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2265
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15, !dbg !2266
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*, !dbg !2267
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2268
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0, !dbg !2269
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*, !dbg !2270
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2271
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1, !dbg !2272
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*, !dbg !2273
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2274
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2, !dbg !2275
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*, !dbg !2276
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2277
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3, !dbg !2278
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*, !dbg !2279
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2280
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4, !dbg !2281
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*, !dbg !2282
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2283
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5, !dbg !2284
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*, !dbg !2285
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2286
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6, !dbg !2287
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*, !dbg !2288
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2289
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7, !dbg !2290
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*, !dbg !2291
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2292
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8, !dbg !2293
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*, !dbg !2294
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2295
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9, !dbg !2296
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*, !dbg !2297
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2298
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10, !dbg !2299
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*, !dbg !2300
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2301
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11, !dbg !2302
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*, !dbg !2303
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2304
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12, !dbg !2305
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*, !dbg !2306
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2307
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13, !dbg !2308
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*, !dbg !2309
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2310
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14, !dbg !2311
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*, !dbg !2312
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1, !dbg !2313
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15, !dbg !2314
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*, !dbg !2315
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2316
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0, !dbg !2317
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0, !dbg !2318
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1, !dbg !2319
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2320
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0, !dbg !2321
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1, !dbg !2322
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1, !dbg !2323
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2324
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0, !dbg !2325
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2, !dbg !2326
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1, !dbg !2327
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2328
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0, !dbg !2329
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3, !dbg !2330
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1, !dbg !2331
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2332
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0, !dbg !2333
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4, !dbg !2334
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1, !dbg !2335
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2336
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0, !dbg !2337
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5, !dbg !2338
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1, !dbg !2339
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2340
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0, !dbg !2341
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6, !dbg !2342
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1, !dbg !2343
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7, !dbg !2344
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0, !dbg !2345
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7, !dbg !2346
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1, !dbg !2347
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2348
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0, !dbg !2349
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0, !dbg !2350
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1, !dbg !2351
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*, !dbg !2352
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0, !dbg !2353
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0, !dbg !2350
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2354
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0, !dbg !2355
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1, !dbg !2356
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1, !dbg !2357
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*, !dbg !2358
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0, !dbg !2359
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0, !dbg !2356
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2360
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0, !dbg !2361
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2, !dbg !2362
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1, !dbg !2363
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*, !dbg !2364
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0, !dbg !2365
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0, !dbg !2362
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2366
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0, !dbg !2367
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3, !dbg !2368
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1, !dbg !2369
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*, !dbg !2370
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0, !dbg !2371
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0, !dbg !2368
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2372
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0, !dbg !2373
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4, !dbg !2374
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1, !dbg !2375
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*, !dbg !2376
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0, !dbg !2377
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0, !dbg !2374
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2378
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0, !dbg !2379
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5, !dbg !2380
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1, !dbg !2381
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*, !dbg !2382
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0, !dbg !2383
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0, !dbg !2380
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2384
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0, !dbg !2385
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6, !dbg !2386
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1, !dbg !2387
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*, !dbg !2388
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0, !dbg !2389
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0, !dbg !2386
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8, !dbg !2390
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0, !dbg !2391
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7, !dbg !2392
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1, !dbg !2393
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*, !dbg !2394
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0, !dbg !2395
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0, !dbg !2392
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2396
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5, !dbg !2397
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2398
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1, !dbg !2399
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2400
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11, !dbg !2401
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2402
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13, !dbg !2403
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2404
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3, !dbg !2405
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2406
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9, !dbg !2407
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2, !dbg !2408
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7, !dbg !2409
  store i64* @DR0, i64** %_DR0, align 8, !dbg !2410
  store i64* @DR1, i64** %_DR1, align 8, !dbg !2411
  store i64* @DR2, i64** %_DR2, align 8, !dbg !2412
  store i64* @DR3, i64** %_DR3, align 8, !dbg !2413
  store i64* @DR4, i64** %_DR4, align 8, !dbg !2414
  store i64* @DR5, i64** %_DR5, align 8, !dbg !2415
  store i64* @DR6, i64** %_DR6, align 8, !dbg !2416
  store i64* @DR7, i64** %_DR7, align 8, !dbg !2417
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8, !dbg !2418
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8, !dbg !2419
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8, !dbg !2420
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8, !dbg !2421
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8, !dbg !2422
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8, !dbg !2423
  ret %struct.Memory* %2, !dbg !2424
}

; Function Attrs: noduplicate noinline nounwind optnone
define void @__remill_intrinsics() #9 !dbg !2425 {
  ret void, !dbg !2427
}

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_barrier_load_store(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_begin(%struct.Memory*) #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare %struct.Memory* @__remill_atomic_end(%struct.Memory*) #10

declare %struct.Memory* @__remill_fetch_and_sub_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_sub_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_sub_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_sub_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_or_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_or_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_or_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_or_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_and_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_and_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_and_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_and_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

declare %struct.Memory* @__remill_fetch_and_xor_8(%struct.Memory*, i64, i8* dereferenceable(1)) #11

declare %struct.Memory* @__remill_fetch_and_xor_16(%struct.Memory*, i64, i16* dereferenceable(2)) #11

declare %struct.Memory* @__remill_fetch_and_xor_32(%struct.Memory*, i64, i32* dereferenceable(4)) #11

declare %struct.Memory* @__remill_fetch_and_xor_64(%struct.Memory*, i64, i64* dereferenceable(8)) #11

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_function_return(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_jump(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_missing_block(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone
declare %struct.Memory* @__remill_async_hyper_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*) #12

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare zeroext i16 @__remill_undefined_16() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare i32 @__remill_undefined_32() #10

; Function Attrs: noduplicate noinline nounwind optnone readnone
declare float @__remill_undefined_f32() #10

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__libc_start_main(i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @asin(i64) #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @__gmon_start__() #13

; Function Attrs: noinline
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #13

; Function Attrs: noinline
define %struct.Memory* @sub_400590__init_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400590:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 4
  store i64 %14, i64* %PC
  %15 = sub i64 %12, 8
  store i64 %15, i64* %RSP, align 8, !tbaa !2428
  %16 = icmp ult i64 %12, 8
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1, !tbaa !2432
  %19 = trunc i64 %15 to i32
  %20 = and i32 %19, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20) #17
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1, !tbaa !2446
  %26 = xor i64 8, %12
  %27 = xor i64 %26, %15
  %28 = lshr i64 %27, 4
  %29 = trunc i64 %28 to i8
  %30 = and i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %30, i8* %31, align 1, !tbaa !2447
  %32 = icmp eq i64 %15, 0
  %33 = zext i1 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %33, i8* %34, align 1, !tbaa !2448
  %35 = lshr i64 %15, 63
  %36 = trunc i64 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %36, i8* %37, align 1, !tbaa !2449
  %38 = lshr i64 %12, 63
  %39 = xor i64 %35, %38
  %40 = add nuw nsw i64 %39, %38
  %41 = icmp eq i64 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1, !tbaa !2450
  %44 = load i64, i64* %PC
  %45 = add i64 %44, 7
  store i64 %45, i64* %PC
  %46 = load i64, i64* inttoptr (i64 add (i64 ptrtoint (%seg_601ff0__got_type* @seg_601ff0__got to i64), i64 8) to i64*)
  store i64 %46, i64* %RAX, align 8, !tbaa !2428
  %47 = load i64, i64* %RAX
  %48 = load i64, i64* %RAX
  %49 = load i64, i64* %PC
  %50 = add i64 %49, 3
  store i64 %50, i64* %PC
  %51 = and i64 %48, %47
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %52, align 1, !tbaa !2432
  %53 = trunc i64 %51 to i32
  %54 = and i32 %53, 255
  %55 = call i32 @llvm.ctpop.i32(i32 %54) #17
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  %58 = xor i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %58, i8* %59, align 1, !tbaa !2446
  %60 = icmp eq i64 %51, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %51, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %66, align 1, !tbaa !2450
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %67, align 1, !tbaa !2447
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 4
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 2
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 2
  store i64 %73, i64* %PC
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %75 = load i8, i8* %74, align 1, !tbaa !2448
  store i8 %75, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %77 = icmp ne i8 %75, 0
  %78 = select i1 %77, i64 %69, i64 %71
  store i64 %78, i64* %76, align 8, !tbaa !2428
  %79 = load i8, i8* %BRANCH_TAKEN
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %block_4005a2, label %block_4005a0

block_4005a0:                                     ; preds = %block_400590
  %81 = load i64, i64* %RAX
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 2
  %84 = load i64, i64* %PC
  %85 = add i64 %84, 2
  store i64 %85, i64* %PC
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %87 = load i64, i64* %86, align 8, !tbaa !2428
  %88 = add i64 %87, -8
  %89 = inttoptr i64 %88 to i64*
  store i64 %83, i64* %89
  store i64 %88, i64* %86, align 8, !tbaa !2428
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %81, i64* %90, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %91, %struct.Memory* %2)
  br label %block_4005a2

block_4005a2:                                     ; preds = %block_4005a0, %block_400590
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400590 ], [ %92, %block_4005a0 ]
  %93 = load i64, i64* %RSP
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 4
  store i64 %95, i64* %PC
  %96 = add i64 8, %93
  store i64 %96, i64* %RSP, align 8, !tbaa !2428
  %97 = icmp ult i64 %96, %93
  %98 = icmp ult i64 %96, 8
  %99 = or i1 %97, %98
  %100 = zext i1 %99 to i8
  %101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %100, i8* %101, align 1, !tbaa !2432
  %102 = trunc i64 %96 to i32
  %103 = and i32 %102, 255
  %104 = call i32 @llvm.ctpop.i32(i32 %103) #17
  %105 = trunc i32 %104 to i8
  %106 = and i8 %105, 1
  %107 = xor i8 %106, 1
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !2446
  %109 = xor i64 8, %93
  %110 = xor i64 %109, %96
  %111 = lshr i64 %110, 4
  %112 = trunc i64 %111 to i8
  %113 = and i8 %112, 1
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %113, i8* %114, align 1, !tbaa !2447
  %115 = icmp eq i64 %96, 0
  %116 = zext i1 %115 to i8
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %116, i8* %117, align 1, !tbaa !2448
  %118 = lshr i64 %96, 63
  %119 = trunc i64 %118 to i8
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %119, i8* %120, align 1, !tbaa !2449
  %121 = lshr i64 %93, 63
  %122 = xor i64 %118, %121
  %123 = add nuw nsw i64 %122, %118
  %124 = icmp eq i64 %123, 2
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %125, i8* %126, align 1, !tbaa !2450
  %127 = load i64, i64* %PC
  %128 = add i64 %127, 1
  store i64 %128, i64* %PC
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %130 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %131 = load i64, i64* %130, align 8, !tbaa !2428
  %132 = inttoptr i64 %131 to i64*
  %133 = load i64, i64* %132
  store i64 %133, i64* %129, align 8, !tbaa !2428
  %134 = add i64 %131, 8
  store i64 %134, i64* %130, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0
}

; Function Attrs: noinline
define %struct.Memory* @sub_400f60_trace_line(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400f60:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %ECX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 1
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RAX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 5
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RCX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 7
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %31 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %30, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %31 to %"class.std::bitset"*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %33 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %32, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %33 to %"class.std::bitset"*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %35 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %34, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %35 to %"class.std::bitset"*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %37 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %36, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %37 to %"class.std::bitset"*
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %39 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %38, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %39 to %union.vec128_t*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %41 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %40, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %41 to %union.vec128_t*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %43 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %42, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %43 to %union.vec128_t*
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %45 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %44, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %45 to %union.vec128_t*
  %46 = load i64, i64* %RBP
  %47 = load i64, i64* %PC
  %48 = add i64 %47, 1
  store i64 %48, i64* %PC
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %50 = load i64, i64* %49, align 8, !tbaa !2428
  %51 = add i64 %50, -8
  %52 = inttoptr i64 %51 to i64*
  store i64 %46, i64* %52
  store i64 %51, i64* %49, align 8, !tbaa !2428
  %53 = load i64, i64* %RSP
  %54 = load i64, i64* %PC
  %55 = add i64 %54, 3
  store i64 %55, i64* %PC
  store i64 %53, i64* %RBP, align 8, !tbaa !2428
  %56 = load i64, i64* %RSP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 4
  store i64 %58, i64* %PC
  %59 = sub i64 %56, 32
  store i64 %59, i64* %RSP, align 8, !tbaa !2428
  %60 = icmp ult i64 %56, 32
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %61, i8* %62, align 1, !tbaa !2432
  %63 = trunc i64 %59 to i32
  %64 = and i32 %63, 255
  %65 = call i32 @llvm.ctpop.i32(i32 %64) #17
  %66 = trunc i32 %65 to i8
  %67 = and i8 %66, 1
  %68 = xor i8 %67, 1
  %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %68, i8* %69, align 1, !tbaa !2446
  %70 = xor i64 32, %56
  %71 = xor i64 %70, %59
  %72 = lshr i64 %71, 4
  %73 = trunc i64 %72 to i8
  %74 = and i8 %73, 1
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %74, i8* %75, align 1, !tbaa !2447
  %76 = icmp eq i64 %59, 0
  %77 = zext i1 %76 to i8
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %77, i8* %78, align 1, !tbaa !2448
  %79 = lshr i64 %59, 63
  %80 = trunc i64 %79 to i8
  %81 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %80, i8* %81, align 1, !tbaa !2449
  %82 = lshr i64 %56, 63
  %83 = xor i64 %79, %82
  %84 = add nuw nsw i64 %83, %82
  %85 = icmp eq i64 %84, 2
  %86 = zext i1 %85 to i8
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %86, i8* %87, align 1, !tbaa !2450
  %88 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 8
  store i64 %90, i64* %PC
  %91 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 104) to double*)
  %92 = bitcast i8* %88 to double*
  store double %91, double* %92, align 1, !tbaa !2452
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to double*
  store double 0.000000e+00, double* %94, align 1, !tbaa !2452
  %95 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %96 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %97 = bitcast %union.vec128_t* %XMM2 to i8*
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 3
  store i64 %99, i64* %PC
  %100 = bitcast i8* %96 to i64*
  %101 = load i64, i64* %100, align 1
  %102 = getelementptr inbounds i8, i8* %96, i64 8
  %103 = bitcast i8* %102 to i64*
  %104 = load i64, i64* %103, align 1
  %105 = bitcast i8* %97 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = getelementptr inbounds i8, i8* %97, i64 8
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 1
  %110 = xor i64 %106, %101
  %111 = xor i64 %109, %104
  %112 = trunc i64 %110 to i32
  %113 = lshr i64 %110, 32
  %114 = trunc i64 %113 to i32
  %115 = bitcast i8* %95 to i32*
  store i32 %112, i32* %115, align 1, !tbaa !2454
  %116 = getelementptr inbounds i8, i8* %95, i64 4
  %117 = bitcast i8* %116 to i32*
  store i32 %114, i32* %117, align 1, !tbaa !2454
  %118 = trunc i64 %111 to i32
  %119 = getelementptr inbounds i8, i8* %95, i64 8
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 1, !tbaa !2454
  %121 = lshr i64 %111, 32
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds i8, i8* %95, i64 12
  %124 = bitcast i8* %123 to i32*
  store i32 %122, i32* %124, align 1, !tbaa !2454
  %125 = load i64, i64* %RBP
  %126 = sub i64 %125, 8
  %127 = load i32, i32* %EDI
  %128 = zext i32 %127 to i64
  %129 = load i64, i64* %PC
  %130 = add i64 %129, 3
  store i64 %130, i64* %PC
  %131 = inttoptr i64 %126 to i32*
  store i32 %127, i32* %131
  %132 = load i64, i64* %RBP
  %133 = sub i64 %132, 16
  %134 = bitcast %union.vec128_t* %XMM0 to i8*
  %135 = load i64, i64* %PC
  %136 = add i64 %135, 5
  store i64 %136, i64* %PC
  %137 = bitcast i8* %134 to double*
  %138 = load double, double* %137, align 1
  %139 = inttoptr i64 %133 to double*
  store double %138, double* %139
  %140 = bitcast %union.vec128_t* %XMM2 to i8*
  %141 = load i64, i64* %PC
  %142 = add i64 %141, 9
  store i64 %142, i64* %PC
  %143 = bitcast i8* %140 to double*
  %144 = load double, double* %143, align 1
  store double %144, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %145 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %146 = load i64, i64* %RBP
  %147 = sub i64 %146, 16
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 5
  store i64 %149, i64* %PC
  %150 = inttoptr i64 %147 to double*
  %151 = load double, double* %150
  %152 = bitcast i8* %145 to double*
  store double %151, double* %152, align 1, !tbaa !2452
  %153 = getelementptr inbounds i8, i8* %145, i64 8
  %154 = bitcast i8* %153 to double*
  store double 0.000000e+00, double* %154, align 1, !tbaa !2452
  %155 = bitcast %union.vec128_t* %XMM0 to i8*
  %156 = load i64, i64* %PC
  %157 = add i64 %156, 9
  store i64 %157, i64* %PC
  %158 = bitcast i8* %155 to double*
  %159 = load double, double* %158, align 1
  store double %159, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %160 = bitcast %union.vec128_t* %XMM1 to i8*
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 9
  store i64 %162, i64* %PC
  %163 = bitcast i8* %160 to double*
  %164 = load double, double* %163, align 1
  store double %164, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %165 = load i64, i64* %RBP
  %166 = sub i64 %165, 20
  %167 = load i64, i64* %PC
  %168 = add i64 %167, 7
  store i64 %168, i64* %PC
  %169 = inttoptr i64 %166 to i32*
  store i32 1, i32* %169
  br label %block_400fa2

block_40100f:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %170 = load i64, i64* %PC
  %171 = add i64 %170, 10
  store i64 %171, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %172 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %173 = load i64, i64* %PC
  %174 = add i64 %173, 8
  store i64 %174, i64* %PC
  %175 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 104) to double*)
  %176 = bitcast i8* %172 to double*
  store double %175, double* %176, align 1, !tbaa !2452
  %177 = getelementptr inbounds i8, i8* %172, i64 8
  %178 = bitcast i8* %177 to double*
  store double 0.000000e+00, double* %178, align 1, !tbaa !2452
  %179 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 9
  store i64 %181, i64* %PC
  %182 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %183 = bitcast i8* %179 to double*
  store double %182, double* %183, align 1, !tbaa !2452
  %184 = getelementptr inbounds i8, i8* %179, i64 8
  %185 = bitcast i8* %184 to double*
  store double 0.000000e+00, double* %185, align 1, !tbaa !2452
  %186 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 9
  store i64 %188, i64* %PC
  %189 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %190 = bitcast i8* %186 to double*
  store double %189, double* %190, align 1, !tbaa !2452
  %191 = getelementptr inbounds i8, i8* %186, i64 8
  %192 = bitcast i8* %191 to double*
  store double 0.000000e+00, double* %192, align 1, !tbaa !2452
  %193 = load i64, i64* %RBP
  %194 = sub i64 %193, 8
  %195 = load i64, i64* %PC
  %196 = add i64 %195, 4
  store i64 %196, i64* %PC
  %197 = inttoptr i64 %194 to i32*
  %198 = load i32, i32* %197
  %199 = sext i32 %198 to i64
  store i64 %199, i64* %RCX, align 8, !tbaa !2428
  %200 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %201 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %202 = load i64, i64* %RCX
  %203 = mul i64 %202, 8
  %204 = add i64 %203, add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 16)
  %205 = load i64, i64* %PC
  %206 = add i64 %205, 9
  store i64 %206, i64* %PC
  %207 = bitcast i8* %201 to double*
  %208 = load double, double* %207, align 1
  %209 = getelementptr inbounds i8, i8* %201, i64 8
  %210 = bitcast i8* %209 to i64*
  %211 = load i64, i64* %210, align 1
  %212 = inttoptr i64 %204 to double*
  %213 = load double, double* %212
  %214 = fsub double %208, %213
  %215 = bitcast i8* %200 to double*
  store double %214, double* %215, align 1, !tbaa !2452
  %216 = getelementptr inbounds i8, i8* %200, i64 8
  %217 = bitcast i8* %216 to i64*
  store i64 %211, i64* %217, align 1, !tbaa !2452
  %218 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %219 = load i64, i64* %PC
  %220 = add i64 %219, 9
  store i64 %220, i64* %PC
  %221 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %222 = bitcast i8* %218 to double*
  store double %221, double* %222, align 1, !tbaa !2452
  %223 = getelementptr inbounds i8, i8* %218, i64 8
  %224 = bitcast i8* %223 to double*
  store double 0.000000e+00, double* %224, align 1, !tbaa !2452
  %225 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %226 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %227 = load i64, i64* %PC
  %228 = add i64 %227, 9
  store i64 %228, i64* %PC
  %229 = bitcast i8* %226 to double*
  %230 = load double, double* %229, align 1
  %231 = getelementptr inbounds i8, i8* %226, i64 8
  %232 = bitcast i8* %231 to i64*
  %233 = load i64, i64* %232, align 1
  %234 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %235 = fsub double %230, %234
  %236 = bitcast i8* %225 to double*
  store double %235, double* %236, align 1, !tbaa !2452
  %237 = getelementptr inbounds i8, i8* %225, i64 8
  %238 = bitcast i8* %237 to i64*
  store i64 %233, i64* %238, align 1, !tbaa !2452
  %239 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %240 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %241 = bitcast %union.vec128_t* %XMM3 to i8*
  %242 = load i64, i64* %PC
  %243 = add i64 %242, 4
  store i64 %243, i64* %PC
  %244 = bitcast i8* %240 to double*
  %245 = load double, double* %244, align 1
  %246 = getelementptr inbounds i8, i8* %240, i64 8
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = bitcast i8* %241 to double*
  %250 = load double, double* %249, align 1
  %251 = fdiv double %245, %250
  %252 = bitcast i8* %239 to double*
  store double %251, double* %252, align 1, !tbaa !2452
  %253 = getelementptr inbounds i8, i8* %239, i64 8
  %254 = bitcast i8* %253 to i64*
  store i64 %248, i64* %254, align 1, !tbaa !2452
  %255 = load i64, i64* %RBP
  %256 = sub i64 %255, 20
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 4
  store i64 %258, i64* %PC
  %259 = inttoptr i64 %256 to i32*
  %260 = load i32, i32* %259
  %261 = sext i32 %260 to i64
  store i64 %261, i64* %RCX, align 8, !tbaa !2428
  %262 = load i64, i64* %RCX
  %263 = load i64, i64* %PC
  %264 = add i64 %263, 4
  store i64 %264, i64* %PC
  %265 = sext i64 %262 to i128
  %266 = and i128 %265, -18446744073709551616
  %267 = zext i64 %262 to i128
  %268 = or i128 %266, %267
  %269 = mul nsw i128 40, %268
  %270 = trunc i128 %269 to i64
  store i64 %270, i64* %RCX, align 8, !tbaa !2428
  %271 = sext i64 %270 to i128
  %272 = icmp ne i128 %271, %269
  %273 = zext i1 %272 to i8
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %273, i8* %274, align 1, !tbaa !2432
  %275 = trunc i128 %269 to i32
  %276 = and i32 %275, 255
  %277 = call i32 @llvm.ctpop.i32(i32 %276) #17
  %278 = trunc i32 %277 to i8
  %279 = and i8 %278, 1
  %280 = xor i8 %279, 1
  %281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %280, i8* %281, align 1, !tbaa !2446
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %282, align 1, !tbaa !2447
  %283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %283, align 1, !tbaa !2448
  %284 = lshr i64 %270, 63
  %285 = trunc i64 %284 to i8
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %285, i8* %286, align 1, !tbaa !2449
  %287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %273, i8* %287, align 1, !tbaa !2450
  %288 = load i64, i64* %RAX
  %289 = load i64, i64* %PC
  %290 = add i64 %289, 3
  store i64 %290, i64* %PC
  store i64 %288, i64* %RDX, align 8, !tbaa !2428
  %291 = load i64, i64* %RDX
  %292 = load i64, i64* %RCX
  %293 = load i64, i64* %PC
  %294 = add i64 %293, 3
  store i64 %294, i64* %PC
  %295 = add i64 %292, %291
  store i64 %295, i64* %RDX, align 8, !tbaa !2428
  %296 = icmp ult i64 %295, %291
  %297 = icmp ult i64 %295, %292
  %298 = or i1 %296, %297
  %299 = zext i1 %298 to i8
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %299, i8* %300, align 1, !tbaa !2432
  %301 = trunc i64 %295 to i32
  %302 = and i32 %301, 255
  %303 = call i32 @llvm.ctpop.i32(i32 %302) #17
  %304 = trunc i32 %303 to i8
  %305 = and i8 %304, 1
  %306 = xor i8 %305, 1
  %307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %306, i8* %307, align 1, !tbaa !2446
  %308 = xor i64 %292, %291
  %309 = xor i64 %308, %295
  %310 = lshr i64 %309, 4
  %311 = trunc i64 %310 to i8
  %312 = and i8 %311, 1
  %313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %312, i8* %313, align 1, !tbaa !2447
  %314 = icmp eq i64 %295, 0
  %315 = zext i1 %314 to i8
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %315, i8* %316, align 1, !tbaa !2448
  %317 = lshr i64 %295, 63
  %318 = trunc i64 %317 to i8
  %319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %318, i8* %319, align 1, !tbaa !2449
  %320 = lshr i64 %291, 63
  %321 = lshr i64 %292, 63
  %322 = xor i64 %317, %320
  %323 = xor i64 %317, %321
  %324 = add nuw nsw i64 %322, %323
  %325 = icmp eq i64 %324, 2
  %326 = zext i1 %325 to i8
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %326, i8* %327, align 1, !tbaa !2450
  %328 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %329 = load i64, i64* %RDX
  %330 = add i64 %329, 16
  %331 = load i64, i64* %PC
  %332 = add i64 %331, 5
  store i64 %332, i64* %PC
  %333 = inttoptr i64 %330 to double*
  %334 = load double, double* %333
  %335 = bitcast i8* %328 to double*
  store double %334, double* %335, align 1, !tbaa !2452
  %336 = getelementptr inbounds i8, i8* %328, i64 8
  %337 = bitcast i8* %336 to double*
  store double 0.000000e+00, double* %337, align 1, !tbaa !2452
  %338 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %339 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %340 = bitcast %union.vec128_t* %XMM0 to i8*
  %341 = load i64, i64* %PC
  %342 = add i64 %341, 4
  store i64 %342, i64* %PC
  %343 = bitcast i8* %339 to double*
  %344 = load double, double* %343, align 1
  %345 = getelementptr inbounds i8, i8* %339, i64 8
  %346 = bitcast i8* %345 to i64*
  %347 = load i64, i64* %346, align 1
  %348 = bitcast i8* %340 to double*
  %349 = load double, double* %348, align 1
  %350 = fsub double %344, %349
  %351 = bitcast i8* %338 to double*
  store double %350, double* %351, align 1, !tbaa !2452
  %352 = getelementptr inbounds i8, i8* %338, i64 8
  %353 = bitcast i8* %352 to i64*
  store i64 %347, i64* %353, align 1, !tbaa !2452
  %354 = load i64, i64* %RBP
  %355 = sub i64 %354, 20
  %356 = load i64, i64* %PC
  %357 = add i64 %356, 4
  store i64 %357, i64* %PC
  %358 = inttoptr i64 %355 to i32*
  %359 = load i32, i32* %358
  %360 = sext i32 %359 to i64
  store i64 %360, i64* %RCX, align 8, !tbaa !2428
  %361 = load i64, i64* %RCX
  %362 = load i64, i64* %PC
  %363 = add i64 %362, 4
  store i64 %363, i64* %PC
  %364 = sext i64 %361 to i128
  %365 = and i128 %364, -18446744073709551616
  %366 = zext i64 %361 to i128
  %367 = or i128 %365, %366
  %368 = mul nsw i128 40, %367
  %369 = trunc i128 %368 to i64
  store i64 %369, i64* %RCX, align 8, !tbaa !2428
  %370 = sext i64 %369 to i128
  %371 = icmp ne i128 %370, %368
  %372 = zext i1 %371 to i8
  %373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %372, i8* %373, align 1, !tbaa !2432
  %374 = trunc i128 %368 to i32
  %375 = and i32 %374, 255
  %376 = call i32 @llvm.ctpop.i32(i32 %375) #17
  %377 = trunc i32 %376 to i8
  %378 = and i8 %377, 1
  %379 = xor i8 %378, 1
  %380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %379, i8* %380, align 1, !tbaa !2446
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %381, align 1, !tbaa !2447
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %382, align 1, !tbaa !2448
  %383 = lshr i64 %369, 63
  %384 = trunc i64 %383 to i8
  %385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %384, i8* %385, align 1, !tbaa !2449
  %386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %372, i8* %386, align 1, !tbaa !2450
  %387 = load i64, i64* %RAX
  %388 = load i64, i64* %RCX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 3
  store i64 %390, i64* %PC
  %391 = add i64 %388, %387
  store i64 %391, i64* %RAX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %387
  %393 = icmp ult i64 %391, %388
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 %388, %387
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %387, 63
  %417 = lshr i64 %388, 63
  %418 = xor i64 %413, %416
  %419 = xor i64 %413, %417
  %420 = add nuw nsw i64 %418, %419
  %421 = icmp eq i64 %420, 2
  %422 = zext i1 %421 to i8
  %423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %422, i8* %423, align 1, !tbaa !2450
  %424 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %425 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %426 = load i64, i64* %RAX
  %427 = add i64 %426, 24
  %428 = load i64, i64* %PC
  %429 = add i64 %428, 5
  store i64 %429, i64* %PC
  %430 = bitcast i8* %425 to double*
  %431 = load double, double* %430, align 1
  %432 = getelementptr inbounds i8, i8* %425, i64 8
  %433 = bitcast i8* %432 to i64*
  %434 = load i64, i64* %433, align 1
  %435 = inttoptr i64 %427 to double*
  %436 = load double, double* %435
  %437 = fdiv double %431, %436
  %438 = bitcast i8* %424 to double*
  store double %437, double* %438, align 1, !tbaa !2452
  %439 = getelementptr inbounds i8, i8* %424, i64 8
  %440 = bitcast i8* %439 to i64*
  store i64 %434, i64* %440, align 1, !tbaa !2452
  %441 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %442 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %443 = bitcast %union.vec128_t* %XMM3 to i8*
  %444 = load i64, i64* %PC
  %445 = add i64 %444, 4
  store i64 %445, i64* %PC
  %446 = bitcast i8* %442 to double*
  %447 = load double, double* %446, align 1
  %448 = getelementptr inbounds i8, i8* %442, i64 8
  %449 = bitcast i8* %448 to i64*
  %450 = load i64, i64* %449, align 1
  %451 = bitcast i8* %443 to double*
  %452 = load double, double* %451, align 1
  %453 = fmul double %447, %452
  %454 = bitcast i8* %441 to double*
  store double %453, double* %454, align 1, !tbaa !2452
  %455 = getelementptr inbounds i8, i8* %441, i64 8
  %456 = bitcast i8* %455 to i64*
  store i64 %450, i64* %456, align 1, !tbaa !2452
  %457 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %458 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %459 = bitcast %union.vec128_t* %XMM2 to i8*
  %460 = load i64, i64* %PC
  %461 = add i64 %460, 4
  store i64 %461, i64* %PC
  %462 = bitcast i8* %458 to double*
  %463 = load double, double* %462, align 1
  %464 = getelementptr inbounds i8, i8* %458, i64 8
  %465 = bitcast i8* %464 to i64*
  %466 = load i64, i64* %465, align 1
  %467 = bitcast i8* %459 to double*
  %468 = load double, double* %467, align 1
  %469 = fadd double %463, %468
  %470 = bitcast i8* %457 to double*
  store double %469, double* %470, align 1, !tbaa !2452
  %471 = getelementptr inbounds i8, i8* %457, i64 8
  %472 = bitcast i8* %471 to i64*
  store i64 %466, i64* %472, align 1, !tbaa !2452
  %473 = bitcast %union.vec128_t* %XMM1 to i8*
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 9
  store i64 %475, i64* %PC
  %476 = bitcast i8* %473 to double*
  %477 = load double, double* %476, align 1
  store double %477, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  br label %block_40108e

block_40108e:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit, %block_40100f
  %MEMORY.0 = phi %struct.Memory* [ %798, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %798, %block_40100f ]
  %478 = load i64, i64* %PC
  %479 = add i64 %478, 114
  %480 = load i64, i64* %PC
  %481 = add i64 %480, 5
  %482 = load i64, i64* %PC
  %483 = add i64 %482, 5
  store i64 %483, i64* %PC
  %484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %485 = load i64, i64* %484, align 8, !tbaa !2428
  %486 = add i64 %485, -8
  %487 = inttoptr i64 %486 to i64*
  store i64 %481, i64* %487
  store i64 %486, i64* %484, align 8, !tbaa !2428
  %488 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %479, i64* %488, align 8, !tbaa !2428
  %489 = load i64, i64* %PC
  %490 = call %struct.Memory* @sub_401100_transit_surface(%struct.State* %0, i64 %489, %struct.Memory* %MEMORY.0)
  %491 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %492 = load i64, i64* %PC
  %493 = add i64 %492, 9
  store i64 %493, i64* %PC
  %494 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %495 = bitcast i8* %491 to double*
  store double %494, double* %495, align 1, !tbaa !2452
  %496 = getelementptr inbounds i8, i8* %491, i64 8
  %497 = bitcast i8* %496 to double*
  store double 0.000000e+00, double* %497, align 1, !tbaa !2452
  %498 = bitcast %union.vec128_t* %XMM0 to i8*
  %499 = load i64, i64* %PC
  %500 = add i64 %499, 9
  store i64 %500, i64* %PC
  %501 = bitcast i8* %498 to double*
  %502 = load double, double* %501, align 1
  store double %502, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %503 = load i64, i64* %RBP
  %504 = sub i64 %503, 20
  %505 = load i64, i64* %PC
  %506 = add i64 %505, 3
  store i64 %506, i64* %PC
  %507 = inttoptr i64 %504 to i32*
  %508 = load i32, i32* %507
  %509 = zext i32 %508 to i64
  store i64 %509, i64* %RAX, align 8, !tbaa !2428
  %510 = load i64, i64* %PC
  %511 = add i64 %510, 8
  store i64 %511, i64* %PC
  %512 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %513 = sext i16 %512 to i64
  %514 = and i64 %513, 4294967295
  store i64 %514, i64* %RCX, align 8, !tbaa !2428
  %515 = load i32, i32* %EAX
  %516 = zext i32 %515 to i64
  %517 = load i32, i32* %ECX
  %518 = zext i32 %517 to i64
  %519 = load i64, i64* %PC
  %520 = add i64 %519, 2
  store i64 %520, i64* %PC
  %521 = sub i32 %515, %517
  %522 = icmp ult i32 %515, %517
  %523 = zext i1 %522 to i8
  %524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %523, i8* %524, align 1, !tbaa !2432
  %525 = and i32 %521, 255
  %526 = call i32 @llvm.ctpop.i32(i32 %525) #17
  %527 = trunc i32 %526 to i8
  %528 = and i8 %527, 1
  %529 = xor i8 %528, 1
  %530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %529, i8* %530, align 1, !tbaa !2446
  %531 = xor i64 %518, %516
  %532 = trunc i64 %531 to i32
  %533 = xor i32 %532, %521
  %534 = lshr i32 %533, 4
  %535 = trunc i32 %534 to i8
  %536 = and i8 %535, 1
  %537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %536, i8* %537, align 1, !tbaa !2447
  %538 = icmp eq i32 %521, 0
  %539 = zext i1 %538 to i8
  %540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %539, i8* %540, align 1, !tbaa !2448
  %541 = lshr i32 %521, 31
  %542 = trunc i32 %541 to i8
  %543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %542, i8* %543, align 1, !tbaa !2449
  %544 = lshr i32 %515, 31
  %545 = lshr i32 %517, 31
  %546 = xor i32 %545, %544
  %547 = xor i32 %541, %544
  %548 = add nuw nsw i32 %547, %546
  %549 = icmp eq i32 %548, 2
  %550 = zext i1 %549 to i8
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %550, i8* %551, align 1, !tbaa !2450
  %552 = load i64, i64* %PC
  %553 = add i64 %552, 50
  %554 = load i64, i64* %PC
  %555 = add i64 %554, 6
  %556 = load i64, i64* %PC
  %557 = add i64 %556, 6
  store i64 %557, i64* %PC
  %558 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %559 = load i8, i8* %558, align 1, !tbaa !2449
  %560 = icmp ne i8 %559, 0
  %561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %562 = load i8, i8* %561, align 1, !tbaa !2450
  %563 = icmp ne i8 %562, 0
  %564 = xor i1 %560, %563
  %565 = xor i1 %564, true
  %566 = zext i1 %565 to i8
  store i8 %566, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %568 = select i1 %564, i64 %555, i64 %553
  store i64 %568, i64* %567, align 8, !tbaa !2428
  %569 = load i8, i8* %BRANCH_TAKEN
  %570 = icmp eq i8 %569, 1
  br i1 %570, label %block_4010e4, label %block_4010b8

block_400fb5:                                     ; preds = %block_400fa2
  %571 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %572 = load i64, i64* %PC
  %573 = add i64 %572, 8
  store i64 %573, i64* %PC
  %574 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 104) to double*)
  %575 = bitcast i8* %571 to double*
  store double %574, double* %575, align 1, !tbaa !2452
  %576 = getelementptr inbounds i8, i8* %571, i64 8
  %577 = bitcast i8* %576 to double*
  store double 0.000000e+00, double* %577, align 1, !tbaa !2452
  %578 = load i64, i64* %PC
  %579 = add i64 %578, 10
  store i64 %579, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %580 = load i64, i64* %RBP
  %581 = sub i64 %580, 20
  %582 = load i64, i64* %PC
  %583 = add i64 %582, 4
  store i64 %583, i64* %PC
  %584 = inttoptr i64 %581 to i32*
  %585 = load i32, i32* %584
  %586 = sext i32 %585 to i64
  store i64 %586, i64* %RCX, align 8, !tbaa !2428
  %587 = load i64, i64* %RCX
  %588 = load i64, i64* %PC
  %589 = add i64 %588, 4
  store i64 %589, i64* %PC
  %590 = sext i64 %587 to i128
  %591 = and i128 %590, -18446744073709551616
  %592 = zext i64 %587 to i128
  %593 = or i128 %591, %592
  %594 = mul nsw i128 40, %593
  %595 = trunc i128 %594 to i64
  store i64 %595, i64* %RCX, align 8, !tbaa !2428
  %596 = sext i64 %595 to i128
  %597 = icmp ne i128 %596, %594
  %598 = zext i1 %597 to i8
  %599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %598, i8* %599, align 1, !tbaa !2432
  %600 = trunc i128 %594 to i32
  %601 = and i32 %600, 255
  %602 = call i32 @llvm.ctpop.i32(i32 %601) #17
  %603 = trunc i32 %602 to i8
  %604 = and i8 %603, 1
  %605 = xor i8 %604, 1
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %605, i8* %606, align 1, !tbaa !2446
  %607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %607, align 1, !tbaa !2447
  %608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %608, align 1, !tbaa !2448
  %609 = lshr i64 %595, 63
  %610 = trunc i64 %609 to i8
  %611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %610, i8* %611, align 1, !tbaa !2449
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %598, i8* %612, align 1, !tbaa !2450
  %613 = load i64, i64* %RAX
  %614 = load i64, i64* %PC
  %615 = add i64 %614, 3
  store i64 %615, i64* %PC
  store i64 %613, i64* %RDX, align 8, !tbaa !2428
  %616 = load i64, i64* %RDX
  %617 = load i64, i64* %RCX
  %618 = load i64, i64* %PC
  %619 = add i64 %618, 3
  store i64 %619, i64* %PC
  %620 = add i64 %617, %616
  store i64 %620, i64* %RDX, align 8, !tbaa !2428
  %621 = icmp ult i64 %620, %616
  %622 = icmp ult i64 %620, %617
  %623 = or i1 %621, %622
  %624 = zext i1 %623 to i8
  %625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %624, i8* %625, align 1, !tbaa !2432
  %626 = trunc i64 %620 to i32
  %627 = and i32 %626, 255
  %628 = call i32 @llvm.ctpop.i32(i32 %627) #17
  %629 = trunc i32 %628 to i8
  %630 = and i8 %629, 1
  %631 = xor i8 %630, 1
  %632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %631, i8* %632, align 1, !tbaa !2446
  %633 = xor i64 %617, %616
  %634 = xor i64 %633, %620
  %635 = lshr i64 %634, 4
  %636 = trunc i64 %635 to i8
  %637 = and i8 %636, 1
  %638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %637, i8* %638, align 1, !tbaa !2447
  %639 = icmp eq i64 %620, 0
  %640 = zext i1 %639 to i8
  %641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %640, i8* %641, align 1, !tbaa !2448
  %642 = lshr i64 %620, 63
  %643 = trunc i64 %642 to i8
  %644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %643, i8* %644, align 1, !tbaa !2449
  %645 = lshr i64 %616, 63
  %646 = lshr i64 %617, 63
  %647 = xor i64 %642, %645
  %648 = xor i64 %642, %646
  %649 = add nuw nsw i64 %647, %648
  %650 = icmp eq i64 %649, 2
  %651 = zext i1 %650 to i8
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %651, i8* %652, align 1, !tbaa !2450
  %653 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %654 = load i64, i64* %RDX
  %655 = add i64 %654, 8
  %656 = load i64, i64* %PC
  %657 = add i64 %656, 5
  store i64 %657, i64* %PC
  %658 = inttoptr i64 %655 to double*
  %659 = load double, double* %658
  %660 = bitcast i8* %653 to double*
  store double %659, double* %660, align 1, !tbaa !2452
  %661 = getelementptr inbounds i8, i8* %653, i64 8
  %662 = bitcast i8* %661 to double*
  store double 0.000000e+00, double* %662, align 1, !tbaa !2452
  %663 = bitcast %union.vec128_t* %XMM1 to i8*
  %664 = load i64, i64* %PC
  %665 = add i64 %664, 9
  store i64 %665, i64* %PC
  %666 = bitcast i8* %663 to double*
  %667 = load double, double* %666, align 1
  store double %667, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %668 = load i64, i64* %RBP
  %669 = sub i64 %668, 20
  %670 = load i64, i64* %PC
  %671 = add i64 %670, 4
  store i64 %671, i64* %PC
  %672 = inttoptr i64 %669 to i32*
  %673 = load i32, i32* %672
  %674 = sext i32 %673 to i64
  store i64 %674, i64* %RCX, align 8, !tbaa !2428
  %675 = load i64, i64* %RCX
  %676 = load i64, i64* %PC
  %677 = add i64 %676, 4
  store i64 %677, i64* %PC
  %678 = sext i64 %675 to i128
  %679 = and i128 %678, -18446744073709551616
  %680 = zext i64 %675 to i128
  %681 = or i128 %679, %680
  %682 = mul nsw i128 40, %681
  %683 = trunc i128 %682 to i64
  store i64 %683, i64* %RCX, align 8, !tbaa !2428
  %684 = sext i64 %683 to i128
  %685 = icmp ne i128 %684, %682
  %686 = zext i1 %685 to i8
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %686, i8* %687, align 1, !tbaa !2432
  %688 = trunc i128 %682 to i32
  %689 = and i32 %688, 255
  %690 = call i32 @llvm.ctpop.i32(i32 %689) #17
  %691 = trunc i32 %690 to i8
  %692 = and i8 %691, 1
  %693 = xor i8 %692, 1
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %693, i8* %694, align 1, !tbaa !2446
  %695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %695, align 1, !tbaa !2447
  %696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %696, align 1, !tbaa !2448
  %697 = lshr i64 %683, 63
  %698 = trunc i64 %697 to i8
  %699 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %698, i8* %699, align 1, !tbaa !2449
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %686, i8* %700, align 1, !tbaa !2450
  %701 = load i64, i64* %RAX
  %702 = load i64, i64* %RCX
  %703 = load i64, i64* %PC
  %704 = add i64 %703, 3
  store i64 %704, i64* %PC
  %705 = add i64 %702, %701
  store i64 %705, i64* %RAX, align 8, !tbaa !2428
  %706 = icmp ult i64 %705, %701
  %707 = icmp ult i64 %705, %702
  %708 = or i1 %706, %707
  %709 = zext i1 %708 to i8
  %710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %709, i8* %710, align 1, !tbaa !2432
  %711 = trunc i64 %705 to i32
  %712 = and i32 %711, 255
  %713 = call i32 @llvm.ctpop.i32(i32 %712) #17
  %714 = trunc i32 %713 to i8
  %715 = and i8 %714, 1
  %716 = xor i8 %715, 1
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %716, i8* %717, align 1, !tbaa !2446
  %718 = xor i64 %702, %701
  %719 = xor i64 %718, %705
  %720 = lshr i64 %719, 4
  %721 = trunc i64 %720 to i8
  %722 = and i8 %721, 1
  %723 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %722, i8* %723, align 1, !tbaa !2447
  %724 = icmp eq i64 %705, 0
  %725 = zext i1 %724 to i8
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %725, i8* %726, align 1, !tbaa !2448
  %727 = lshr i64 %705, 63
  %728 = trunc i64 %727 to i8
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %728, i8* %729, align 1, !tbaa !2449
  %730 = lshr i64 %701, 63
  %731 = lshr i64 %702, 63
  %732 = xor i64 %727, %730
  %733 = xor i64 %727, %731
  %734 = add nuw nsw i64 %732, %733
  %735 = icmp eq i64 %734, 2
  %736 = zext i1 %735 to i8
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %736, i8* %737, align 1, !tbaa !2450
  %738 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %739 = load i64, i64* %RAX
  %740 = add i64 %739, 16
  %741 = load i64, i64* %PC
  %742 = add i64 %741, 5
  store i64 %742, i64* %PC
  %743 = inttoptr i64 %740 to double*
  %744 = load double, double* %743
  %745 = bitcast i8* %738 to double*
  store double %744, double* %745, align 1, !tbaa !2452
  %746 = getelementptr inbounds i8, i8* %738, i64 8
  %747 = bitcast i8* %746 to double*
  store double 0.000000e+00, double* %747, align 1, !tbaa !2452
  %748 = bitcast %union.vec128_t* %XMM1 to i8*
  %749 = load i64, i64* %PC
  %750 = add i64 %749, 9
  store i64 %750, i64* %PC
  %751 = bitcast i8* %748 to double*
  %752 = load double, double* %751, align 1
  store double %752, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %753 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %754 = load i64, i64* %PC
  %755 = add i64 %754, 9
  store i64 %755, i64* %PC
  %756 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %757 = bitcast i8* %753 to double*
  store double %756, double* %757, align 1, !tbaa !2452
  %758 = getelementptr inbounds i8, i8* %753, i64 8
  %759 = bitcast i8* %758 to double*
  store double 0.000000e+00, double* %759, align 1, !tbaa !2452
  %760 = bitcast %union.vec128_t* %XMM1 to i8*
  %761 = bitcast %union.vec128_t* %XMM0 to i8*
  %762 = load i64, i64* %PC
  %763 = add i64 %762, 4
  store i64 %763, i64* %PC
  %764 = bitcast i8* %760 to double*
  %765 = load double, double* %764, align 1
  %766 = bitcast i8* %761 to double*
  %767 = load double, double* %766, align 1
  %768 = fcmp uno double %765, %767
  br i1 %768, label %769, label %781

; <label>:769:                                    ; preds = %block_400fb5
  %770 = fadd double %765, %767
  %771 = bitcast double %770 to i64
  %772 = and i64 %771, 9221120237041090560
  %773 = icmp eq i64 %772, 9218868437227405312
  %774 = and i64 %771, 2251799813685247
  %775 = icmp ne i64 %774, 0
  %776 = and i1 %773, %775
  br i1 %776, label %777, label %787

; <label>:777:                                    ; preds = %769
  %778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %779 = load i64, i64* %778, align 8, !tbaa !2428
  %780 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %779, %struct.Memory* %MEMORY.2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:781:                                    ; preds = %block_400fb5
  %782 = fcmp ogt double %765, %767
  br i1 %782, label %787, label %783

; <label>:783:                                    ; preds = %781
  %784 = fcmp olt double %765, %767
  br i1 %784, label %787, label %785

; <label>:785:                                    ; preds = %783
  %786 = fcmp oeq double %765, %767
  br i1 %786, label %787, label %794

; <label>:787:                                    ; preds = %785, %783, %781, %769
  %788 = phi i8 [ 0, %781 ], [ 0, %783 ], [ 1, %785 ], [ 1, %769 ]
  %789 = phi i8 [ 0, %781 ], [ 0, %783 ], [ 0, %785 ], [ 1, %769 ]
  %790 = phi i8 [ 0, %781 ], [ 1, %783 ], [ 0, %785 ], [ 1, %769 ]
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %788, i8* %791, align 1, !tbaa !2451
  %792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %789, i8* %792, align 1, !tbaa !2451
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %790, i8* %793, align 1, !tbaa !2451
  br label %794

; <label>:794:                                    ; preds = %787, %785
  %795 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %795, align 1, !tbaa !2451
  %796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %796, align 1, !tbaa !2451
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %797, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %777, %794
  %798 = phi %struct.Memory* [ %780, %777 ], [ %MEMORY.2, %794 ]
  %799 = load i64, i64* %PC
  %800 = add i64 %799, 133
  %801 = load i64, i64* %PC
  %802 = add i64 %801, 6
  %803 = load i64, i64* %PC
  %804 = add i64 %803, 6
  store i64 %804, i64* %PC
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %806 = load i8, i8* %805, align 1, !tbaa !2432
  %807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %808 = load i8, i8* %807, align 1, !tbaa !2448
  %809 = or i8 %808, %806
  %810 = icmp ne i8 %809, 0
  %811 = zext i1 %810 to i8
  store i8 %811, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %813 = select i1 %810, i64 %800, i64 %802
  store i64 %813, i64* %812, align 8, !tbaa !2428
  %814 = load i8, i8* %BRANCH_TAKEN
  %815 = icmp eq i8 %814, 1
  br i1 %815, label %block_40108e, label %block_40100f

block_4010b8:                                     ; preds = %block_40108e
  %816 = load i64, i64* %PC
  %817 = add i64 %816, 10
  store i64 %817, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %818 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %819 = load i64, i64* %PC
  %820 = add i64 %819, 9
  store i64 %820, i64* %PC
  %821 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %822 = bitcast i8* %818 to double*
  store double %821, double* %822, align 1, !tbaa !2452
  %823 = getelementptr inbounds i8, i8* %818, i64 8
  %824 = bitcast i8* %823 to double*
  store double 0.000000e+00, double* %824, align 1, !tbaa !2452
  %825 = load i64, i64* %RBP
  %826 = sub i64 %825, 20
  %827 = load i64, i64* %PC
  %828 = add i64 %827, 4
  store i64 %828, i64* %PC
  %829 = inttoptr i64 %826 to i32*
  %830 = load i32, i32* %829
  %831 = sext i32 %830 to i64
  store i64 %831, i64* %RCX, align 8, !tbaa !2428
  %832 = load i64, i64* %RCX
  %833 = load i64, i64* %PC
  %834 = add i64 %833, 4
  store i64 %834, i64* %PC
  %835 = sext i64 %832 to i128
  %836 = and i128 %835, -18446744073709551616
  %837 = zext i64 %832 to i128
  %838 = or i128 %836, %837
  %839 = mul nsw i128 40, %838
  %840 = trunc i128 %839 to i64
  store i64 %840, i64* %RCX, align 8, !tbaa !2428
  %841 = sext i64 %840 to i128
  %842 = icmp ne i128 %841, %839
  %843 = zext i1 %842 to i8
  %844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %843, i8* %844, align 1, !tbaa !2432
  %845 = trunc i128 %839 to i32
  %846 = and i32 %845, 255
  %847 = call i32 @llvm.ctpop.i32(i32 %846) #17
  %848 = trunc i32 %847 to i8
  %849 = and i8 %848, 1
  %850 = xor i8 %849, 1
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %850, i8* %851, align 1, !tbaa !2446
  %852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %852, align 1, !tbaa !2447
  %853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %853, align 1, !tbaa !2448
  %854 = lshr i64 %840, 63
  %855 = trunc i64 %854 to i8
  %856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %855, i8* %856, align 1, !tbaa !2449
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %843, i8* %857, align 1, !tbaa !2450
  %858 = load i64, i64* %RAX
  %859 = load i64, i64* %RCX
  %860 = load i64, i64* %PC
  %861 = add i64 %860, 3
  store i64 %861, i64* %PC
  %862 = add i64 %859, %858
  store i64 %862, i64* %RAX, align 8, !tbaa !2428
  %863 = icmp ult i64 %862, %858
  %864 = icmp ult i64 %862, %859
  %865 = or i1 %863, %864
  %866 = zext i1 %865 to i8
  %867 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %866, i8* %867, align 1, !tbaa !2432
  %868 = trunc i64 %862 to i32
  %869 = and i32 %868, 255
  %870 = call i32 @llvm.ctpop.i32(i32 %869) #17
  %871 = trunc i32 %870 to i8
  %872 = and i8 %871, 1
  %873 = xor i8 %872, 1
  %874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %873, i8* %874, align 1, !tbaa !2446
  %875 = xor i64 %859, %858
  %876 = xor i64 %875, %862
  %877 = lshr i64 %876, 4
  %878 = trunc i64 %877 to i8
  %879 = and i8 %878, 1
  %880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %879, i8* %880, align 1, !tbaa !2447
  %881 = icmp eq i64 %862, 0
  %882 = zext i1 %881 to i8
  %883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %882, i8* %883, align 1, !tbaa !2448
  %884 = lshr i64 %862, 63
  %885 = trunc i64 %884 to i8
  %886 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %885, i8* %886, align 1, !tbaa !2449
  %887 = lshr i64 %858, 63
  %888 = lshr i64 %859, 63
  %889 = xor i64 %884, %887
  %890 = xor i64 %884, %888
  %891 = add nuw nsw i64 %889, %890
  %892 = icmp eq i64 %891, 2
  %893 = zext i1 %892 to i8
  %894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %893, i8* %894, align 1, !tbaa !2450
  %895 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %896 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %897 = load i64, i64* %RAX
  %898 = add i64 %897, 32
  %899 = load i64, i64* %PC
  %900 = add i64 %899, 5
  store i64 %900, i64* %PC
  %901 = bitcast i8* %896 to double*
  %902 = load double, double* %901, align 1
  %903 = getelementptr inbounds i8, i8* %896, i64 8
  %904 = bitcast i8* %903 to i64*
  %905 = load i64, i64* %904, align 1
  %906 = inttoptr i64 %898 to double*
  %907 = load double, double* %906
  %908 = fsub double %902, %907
  %909 = bitcast i8* %895 to double*
  store double %908, double* %909, align 1, !tbaa !2452
  %910 = getelementptr inbounds i8, i8* %895, i64 8
  %911 = bitcast i8* %910 to i64*
  store i64 %905, i64* %911, align 1, !tbaa !2452
  %912 = bitcast %union.vec128_t* %XMM0 to i8*
  %913 = load i64, i64* %PC
  %914 = add i64 %913, 9
  store i64 %914, i64* %PC
  %915 = bitcast i8* %912 to double*
  %916 = load double, double* %915, align 1
  store double %916, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  br label %block_4010e4

block_4010e4:                                     ; preds = %block_4010b8, %block_40108e
  %MEMORY.1 = phi %struct.Memory* [ %490, %block_40108e ], [ %490, %block_4010b8 ]
  %917 = load i64, i64* %PC
  %918 = add i64 %917, 5
  %919 = load i64, i64* %PC
  %920 = add i64 %919, 5
  store i64 %920, i64* %PC
  %921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %918, i64* %921, align 8, !tbaa !2428
  %922 = load i64, i64* %RBP
  %923 = sub i64 %922, 20
  %924 = load i64, i64* %PC
  %925 = add i64 %924, 3
  store i64 %925, i64* %PC
  %926 = inttoptr i64 %923 to i32*
  %927 = load i32, i32* %926
  %928 = zext i32 %927 to i64
  store i64 %928, i64* %RAX, align 8, !tbaa !2428
  %929 = load i64, i64* %RAX
  %930 = load i64, i64* %PC
  %931 = add i64 %930, 3
  store i64 %931, i64* %PC
  %932 = trunc i64 %929 to i32
  %933 = add i32 1, %932
  %934 = zext i32 %933 to i64
  store i64 %934, i64* %RAX, align 8, !tbaa !2428
  %935 = icmp ult i32 %933, %932
  %936 = icmp ult i32 %933, 1
  %937 = or i1 %935, %936
  %938 = zext i1 %937 to i8
  %939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %938, i8* %939, align 1, !tbaa !2432
  %940 = and i32 %933, 255
  %941 = call i32 @llvm.ctpop.i32(i32 %940) #17
  %942 = trunc i32 %941 to i8
  %943 = and i8 %942, 1
  %944 = xor i8 %943, 1
  %945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %944, i8* %945, align 1, !tbaa !2446
  %946 = xor i64 1, %929
  %947 = trunc i64 %946 to i32
  %948 = xor i32 %947, %933
  %949 = lshr i32 %948, 4
  %950 = trunc i32 %949 to i8
  %951 = and i8 %950, 1
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %951, i8* %952, align 1, !tbaa !2447
  %953 = icmp eq i32 %933, 0
  %954 = zext i1 %953 to i8
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %954, i8* %955, align 1, !tbaa !2448
  %956 = lshr i32 %933, 31
  %957 = trunc i32 %956 to i8
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %957, i8* %958, align 1, !tbaa !2449
  %959 = lshr i32 %932, 31
  %960 = xor i32 %956, %959
  %961 = add nuw nsw i32 %960, %956
  %962 = icmp eq i32 %961, 2
  %963 = zext i1 %962 to i8
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %963, i8* %964, align 1, !tbaa !2450
  %965 = load i64, i64* %RBP
  %966 = sub i64 %965, 20
  %967 = load i32, i32* %EAX
  %968 = zext i32 %967 to i64
  %969 = load i64, i64* %PC
  %970 = add i64 %969, 3
  store i64 %970, i64* %PC
  %971 = inttoptr i64 %966 to i32*
  store i32 %967, i32* %971
  %972 = load i64, i64* %PC
  %973 = sub i64 %972, 336
  %974 = load i64, i64* %PC
  %975 = add i64 %974, 5
  store i64 %975, i64* %PC
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %973, i64* %976, align 8, !tbaa !2428
  br label %block_400fa2

block_4010f7:                                     ; preds = %block_400fa2
  %977 = load i64, i64* %RBP
  %978 = sub i64 %977, 4
  %979 = load i64, i64* %PC
  %980 = add i64 %979, 3
  store i64 %980, i64* %PC
  %981 = inttoptr i64 %978 to i32*
  %982 = load i32, i32* %981
  %983 = zext i32 %982 to i64
  store i64 %983, i64* %RAX, align 8, !tbaa !2428
  %984 = load i64, i64* %RSP
  %985 = load i64, i64* %PC
  %986 = add i64 %985, 4
  store i64 %986, i64* %PC
  %987 = add i64 32, %984
  store i64 %987, i64* %RSP, align 8, !tbaa !2428
  %988 = icmp ult i64 %987, %984
  %989 = icmp ult i64 %987, 32
  %990 = or i1 %988, %989
  %991 = zext i1 %990 to i8
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %991, i8* %992, align 1, !tbaa !2432
  %993 = trunc i64 %987 to i32
  %994 = and i32 %993, 255
  %995 = call i32 @llvm.ctpop.i32(i32 %994) #17
  %996 = trunc i32 %995 to i8
  %997 = and i8 %996, 1
  %998 = xor i8 %997, 1
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %998, i8* %999, align 1, !tbaa !2446
  %1000 = xor i64 32, %984
  %1001 = xor i64 %1000, %987
  %1002 = lshr i64 %1001, 4
  %1003 = trunc i64 %1002 to i8
  %1004 = and i8 %1003, 1
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1004, i8* %1005, align 1, !tbaa !2447
  %1006 = icmp eq i64 %987, 0
  %1007 = zext i1 %1006 to i8
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1007, i8* %1008, align 1, !tbaa !2448
  %1009 = lshr i64 %987, 63
  %1010 = trunc i64 %1009 to i8
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1010, i8* %1011, align 1, !tbaa !2449
  %1012 = lshr i64 %984, 63
  %1013 = xor i64 %1009, %1012
  %1014 = add nuw nsw i64 %1013, %1009
  %1015 = icmp eq i64 %1014, 2
  %1016 = zext i1 %1015 to i8
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1016, i8* %1017, align 1, !tbaa !2450
  %1018 = load i64, i64* %PC
  %1019 = add i64 %1018, 1
  store i64 %1019, i64* %PC
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1021 = load i64, i64* %1020, align 8, !tbaa !2428
  %1022 = add i64 %1021, 8
  %1023 = inttoptr i64 %1021 to i64*
  %1024 = load i64, i64* %1023
  store i64 %1024, i64* %RBP, align 8, !tbaa !2428
  store i64 %1022, i64* %1020, align 8, !tbaa !2428
  %1025 = load i64, i64* %PC
  %1026 = add i64 %1025, 1
  store i64 %1026, i64* %PC
  %1027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1029 = load i64, i64* %1028, align 8, !tbaa !2428
  %1030 = inttoptr i64 %1029 to i64*
  %1031 = load i64, i64* %1030
  store i64 %1031, i64* %1027, align 8, !tbaa !2428
  %1032 = add i64 %1029, 8
  store i64 %1032, i64* %1028, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.2

block_400fa2:                                     ; preds = %block_4010e4, %block_400f60
  %MEMORY.2 = phi %struct.Memory* [ %2, %block_400f60 ], [ %MEMORY.1, %block_4010e4 ]
  %1033 = load i64, i64* %RBP
  %1034 = sub i64 %1033, 20
  %1035 = load i64, i64* %PC
  %1036 = add i64 %1035, 3
  store i64 %1036, i64* %PC
  %1037 = inttoptr i64 %1034 to i32*
  %1038 = load i32, i32* %1037
  %1039 = zext i32 %1038 to i64
  store i64 %1039, i64* %RAX, align 8, !tbaa !2428
  %1040 = load i64, i64* %PC
  %1041 = add i64 %1040, 8
  store i64 %1041, i64* %PC
  %1042 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %1043 = sext i16 %1042 to i64
  %1044 = and i64 %1043, 4294967295
  store i64 %1044, i64* %RCX, align 8, !tbaa !2428
  %1045 = load i32, i32* %EAX
  %1046 = zext i32 %1045 to i64
  %1047 = load i32, i32* %ECX
  %1048 = zext i32 %1047 to i64
  %1049 = load i64, i64* %PC
  %1050 = add i64 %1049, 2
  store i64 %1050, i64* %PC
  %1051 = sub i32 %1045, %1047
  %1052 = icmp ult i32 %1045, %1047
  %1053 = zext i1 %1052 to i8
  %1054 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1053, i8* %1054, align 1, !tbaa !2432
  %1055 = and i32 %1051, 255
  %1056 = call i32 @llvm.ctpop.i32(i32 %1055) #17
  %1057 = trunc i32 %1056 to i8
  %1058 = and i8 %1057, 1
  %1059 = xor i8 %1058, 1
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1059, i8* %1060, align 1, !tbaa !2446
  %1061 = xor i64 %1048, %1046
  %1062 = trunc i64 %1061 to i32
  %1063 = xor i32 %1062, %1051
  %1064 = lshr i32 %1063, 4
  %1065 = trunc i32 %1064 to i8
  %1066 = and i8 %1065, 1
  %1067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1066, i8* %1067, align 1, !tbaa !2447
  %1068 = icmp eq i32 %1051, 0
  %1069 = zext i1 %1068 to i8
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1069, i8* %1070, align 1, !tbaa !2448
  %1071 = lshr i32 %1051, 31
  %1072 = trunc i32 %1071 to i8
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1072, i8* %1073, align 1, !tbaa !2449
  %1074 = lshr i32 %1045, 31
  %1075 = lshr i32 %1047, 31
  %1076 = xor i32 %1075, %1074
  %1077 = xor i32 %1071, %1074
  %1078 = add nuw nsw i32 %1077, %1076
  %1079 = icmp eq i32 %1078, 2
  %1080 = zext i1 %1079 to i8
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1080, i8* %1081, align 1, !tbaa !2450
  %1082 = load i64, i64* %PC
  %1083 = add i64 %1082, 328
  %1084 = load i64, i64* %PC
  %1085 = add i64 %1084, 6
  %1086 = load i64, i64* %PC
  %1087 = add i64 %1086, 6
  store i64 %1087, i64* %PC
  %1088 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1089 = load i8, i8* %1088, align 1, !tbaa !2448
  %1090 = icmp eq i8 %1089, 0
  %1091 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1092 = load i8, i8* %1091, align 1, !tbaa !2449
  %1093 = icmp ne i8 %1092, 0
  %1094 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %1095 = load i8, i8* %1094, align 1, !tbaa !2450
  %1096 = icmp ne i8 %1095, 0
  %1097 = xor i1 %1093, %1096
  %1098 = xor i1 %1097, true
  %1099 = and i1 %1090, %1098
  %1100 = zext i1 %1099 to i8
  store i8 %1100, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %1101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1102 = select i1 %1099, i64 %1083, i64 %1085
  store i64 %1102, i64* %1101, align 8, !tbaa !2428
  %1103 = load i8, i8* %BRANCH_TAKEN
  %1104 = icmp eq i8 %1103, 1
  br i1 %1104, label %block_4010f7, label %block_400fb5
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015d4__term_proc(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015d4:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 8
  store i64 %12, i64* %RSP, align 8, !tbaa !2428
  %13 = icmp ult i64 %9, 8
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1, !tbaa !2432
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17) #17
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1, !tbaa !2446
  %23 = xor i64 8, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1, !tbaa !2447
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1, !tbaa !2448
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1, !tbaa !2449
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add nuw nsw i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1, !tbaa !2450
  %41 = load i64, i64* %RSP
  %42 = load i64, i64* %PC
  %43 = add i64 %42, 4
  store i64 %43, i64* %PC
  %44 = add i64 8, %41
  store i64 %44, i64* %RSP, align 8, !tbaa !2428
  %45 = icmp ult i64 %44, %41
  %46 = icmp ult i64 %44, 8
  %47 = or i1 %45, %46
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %48, i8* %49, align 1, !tbaa !2432
  %50 = trunc i64 %44 to i32
  %51 = and i32 %50, 255
  %52 = call i32 @llvm.ctpop.i32(i32 %51) #17
  %53 = trunc i32 %52 to i8
  %54 = and i8 %53, 1
  %55 = xor i8 %54, 1
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %55, i8* %56, align 1, !tbaa !2446
  %57 = xor i64 8, %41
  %58 = xor i64 %57, %44
  %59 = lshr i64 %58, 4
  %60 = trunc i64 %59 to i8
  %61 = and i8 %60, 1
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %61, i8* %62, align 1, !tbaa !2447
  %63 = icmp eq i64 %44, 0
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %64, i8* %65, align 1, !tbaa !2448
  %66 = lshr i64 %44, 63
  %67 = trunc i64 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %67, i8* %68, align 1, !tbaa !2449
  %69 = lshr i64 %41, 63
  %70 = xor i64 %66, %69
  %71 = add nuw nsw i64 %70, %66
  %72 = icmp eq i64 %71, 2
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %73, i8* %74, align 1, !tbaa !2450
  %75 = load i64, i64* %PC
  %76 = add i64 %75, 1
  store i64 %76, i64* %PC
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80
  store i64 %81, i64* %77, align 8, !tbaa !2428
  %82 = add i64 %79, 8
  store i64 %82, i64* %78, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_401100_transit_surface(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401100:
  %state.i799 = alloca %struct.State*, align 8
  %curr_pc.i800 = alloca i64, align 8
  %memory.i801 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i802 = alloca i8, align 1
  %SS_BASE.i803 = alloca i64, align 8
  %ES_BASE.i804 = alloca i64, align 8
  %DS_BASE.i805 = alloca i64, align 8
  %CS_BASE.i806 = alloca i64, align 8
  %STATE.i807 = alloca %struct.State*, align 8
  %MEMORY.i808 = alloca %struct.Memory*, align 8
  %_DR0.i809 = alloca i64*, align 8
  %_DR1.i810 = alloca i64*, align 8
  %_DR2.i811 = alloca i64*, align 8
  %_DR3.i812 = alloca i64*, align 8
  %_DR4.i813 = alloca i64*, align 8
  %_DR5.i814 = alloca i64*, align 8
  %_DR6.i815 = alloca i64*, align 8
  %_DR7.i816 = alloca i64*, align 8
  %CR0.i817 = alloca i64*, align 8
  %CR1.i818 = alloca i64*, align 8
  %CR2.i819 = alloca i64*, align 8
  %CR3.i820 = alloca i64*, align 8
  %CR4.i821 = alloca i64*, align 8
  %CR8.i822 = alloca i64*, align 8
  %state.i640 = alloca %struct.State*, align 8
  %curr_pc.i641 = alloca i64, align 8
  %memory.i642 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i643 = alloca i8, align 1
  %SS_BASE.i644 = alloca i64, align 8
  %ES_BASE.i645 = alloca i64, align 8
  %DS_BASE.i646 = alloca i64, align 8
  %CS_BASE.i647 = alloca i64, align 8
  %STATE.i648 = alloca %struct.State*, align 8
  %MEMORY.i649 = alloca %struct.Memory*, align 8
  %_DR0.i650 = alloca i64*, align 8
  %_DR1.i651 = alloca i64*, align 8
  %_DR2.i652 = alloca i64*, align 8
  %_DR3.i653 = alloca i64*, align 8
  %_DR4.i654 = alloca i64*, align 8
  %_DR5.i655 = alloca i64*, align 8
  %_DR6.i656 = alloca i64*, align 8
  %_DR7.i657 = alloca i64*, align 8
  %CR0.i658 = alloca i64*, align 8
  %CR1.i659 = alloca i64*, align 8
  %CR2.i660 = alloca i64*, align 8
  %CR3.i661 = alloca i64*, align 8
  %CR4.i662 = alloca i64*, align 8
  %CR8.i663 = alloca i64*, align 8
  %state.i481 = alloca %struct.State*, align 8
  %curr_pc.i482 = alloca i64, align 8
  %memory.i483 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i484 = alloca i8, align 1
  %SS_BASE.i485 = alloca i64, align 8
  %ES_BASE.i486 = alloca i64, align 8
  %DS_BASE.i487 = alloca i64, align 8
  %CS_BASE.i488 = alloca i64, align 8
  %STATE.i489 = alloca %struct.State*, align 8
  %MEMORY.i490 = alloca %struct.Memory*, align 8
  %_DR0.i491 = alloca i64*, align 8
  %_DR1.i492 = alloca i64*, align 8
  %_DR2.i493 = alloca i64*, align 8
  %_DR3.i494 = alloca i64*, align 8
  %_DR4.i495 = alloca i64*, align 8
  %_DR5.i496 = alloca i64*, align 8
  %_DR6.i497 = alloca i64*, align 8
  %_DR7.i498 = alloca i64*, align 8
  %CR0.i499 = alloca i64*, align 8
  %CR1.i500 = alloca i64*, align 8
  %CR2.i501 = alloca i64*, align 8
  %CR3.i502 = alloca i64*, align 8
  %CR4.i503 = alloca i64*, align 8
  %CR8.i504 = alloca i64*, align 8
  %state.i319 = alloca %struct.State*, align 8
  %curr_pc.i320 = alloca i64, align 8
  %memory.i321 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i322 = alloca i8, align 1
  %SS_BASE.i323 = alloca i64, align 8
  %ES_BASE.i324 = alloca i64, align 8
  %DS_BASE.i325 = alloca i64, align 8
  %CS_BASE.i326 = alloca i64, align 8
  %STATE.i327 = alloca %struct.State*, align 8
  %MEMORY.i328 = alloca %struct.Memory*, align 8
  %_DR0.i329 = alloca i64*, align 8
  %_DR1.i330 = alloca i64*, align 8
  %_DR2.i331 = alloca i64*, align 8
  %_DR3.i332 = alloca i64*, align 8
  %_DR4.i333 = alloca i64*, align 8
  %_DR5.i334 = alloca i64*, align 8
  %_DR6.i335 = alloca i64*, align 8
  %_DR7.i336 = alloca i64*, align 8
  %CR0.i337 = alloca i64*, align 8
  %CR1.i338 = alloca i64*, align 8
  %CR2.i339 = alloca i64*, align 8
  %CR3.i340 = alloca i64*, align 8
  %CR4.i341 = alloca i64*, align 8
  %CR8.i342 = alloca i64*, align 8
  %state.i160 = alloca %struct.State*, align 8
  %curr_pc.i161 = alloca i64, align 8
  %memory.i162 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i163 = alloca i8, align 1
  %SS_BASE.i164 = alloca i64, align 8
  %ES_BASE.i165 = alloca i64, align 8
  %DS_BASE.i166 = alloca i64, align 8
  %CS_BASE.i167 = alloca i64, align 8
  %STATE.i168 = alloca %struct.State*, align 8
  %MEMORY.i169 = alloca %struct.Memory*, align 8
  %_DR0.i170 = alloca i64*, align 8
  %_DR1.i171 = alloca i64*, align 8
  %_DR2.i172 = alloca i64*, align 8
  %_DR3.i173 = alloca i64*, align 8
  %_DR4.i174 = alloca i64*, align 8
  %_DR5.i175 = alloca i64*, align 8
  %_DR6.i176 = alloca i64*, align 8
  %_DR7.i177 = alloca i64*, align 8
  %CR0.i178 = alloca i64*, align 8
  %CR1.i179 = alloca i64*, align 8
  %CR2.i180 = alloca i64*, align 8
  %CR3.i181 = alloca i64*, align 8
  %CR4.i182 = alloca i64*, align 8
  %CR8.i183 = alloca i64*, align 8
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 13
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSP = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 15
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RBP = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %19 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %18, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %19 to %"class.std::bitset"*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %21 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %20, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %21 to %"class.std::bitset"*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %23 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %22, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %23 to %"class.std::bitset"*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %25 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %24, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %25 to %union.vec128_t*
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %27 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %26, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %27 to %union.vec128_t*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %29 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %28, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %29 to %union.vec128_t*
  %30 = load i64, i64* %RBP
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 1
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %34 = load i64, i64* %33, align 8, !tbaa !2428
  %35 = add i64 %34, -8
  %36 = inttoptr i64 %35 to i64*
  store i64 %30, i64* %36
  store i64 %35, i64* %33, align 8, !tbaa !2428
  %37 = load i64, i64* %RSP
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 3
  store i64 %39, i64* %PC
  store i64 %37, i64* %RBP, align 8, !tbaa !2428
  %40 = load i64, i64* %RSP
  %41 = load i64, i64* %PC
  %42 = add i64 %41, 7
  store i64 %42, i64* %PC
  %43 = sub i64 %40, 144
  store i64 %43, i64* %RSP, align 8, !tbaa !2428
  %44 = icmp ult i64 %40, 144
  %45 = zext i1 %44 to i8
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %45, i8* %46, align 1, !tbaa !2432
  %47 = trunc i64 %43 to i32
  %48 = and i32 %47, 255
  %49 = call i32 @llvm.ctpop.i32(i32 %48) #17
  %50 = trunc i32 %49 to i8
  %51 = and i8 %50, 1
  %52 = xor i8 %51, 1
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %52, i8* %53, align 1, !tbaa !2446
  %54 = xor i64 144, %40
  %55 = xor i64 %54, %43
  %56 = lshr i64 %55, 4
  %57 = trunc i64 %56 to i8
  %58 = and i8 %57, 1
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %58, i8* %59, align 1, !tbaa !2447
  %60 = icmp eq i64 %43, 0
  %61 = zext i1 %60 to i8
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %61, i8* %62, align 1, !tbaa !2448
  %63 = lshr i64 %43, 63
  %64 = trunc i64 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %64, i8* %65, align 1, !tbaa !2449
  %66 = lshr i64 %40, 63
  %67 = xor i64 %63, %66
  %68 = add nuw nsw i64 %67, %66
  %69 = icmp eq i64 %68, 2
  %70 = zext i1 %69 to i8
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %70, i8* %71, align 1, !tbaa !2450
  %72 = load i64, i64* %PC
  %73 = add i64 %72, 9
  store i64 %73, i64* %PC
  %74 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %75, align 1, !tbaa !2432
  %76 = and i16 %74, 255
  %77 = zext i16 %76 to i32
  %78 = call i32 @llvm.ctpop.i32(i32 %77) #17
  %79 = trunc i32 %78 to i8
  %80 = and i8 %79, 1
  %81 = xor i8 %80, 1
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %81, i8* %82, align 1, !tbaa !2446
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %83, align 1, !tbaa !2447
  %84 = icmp eq i16 %74, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i16 %74, 15
  %88 = trunc i16 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = lshr i16 %74, 15
  %91 = xor i16 %87, %90
  %92 = add nuw nsw i16 %91, %90
  %93 = icmp eq i16 %92, 2
  %94 = zext i1 %93 to i8
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %94, i8* %95, align 1, !tbaa !2450
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 391
  %98 = load i64, i64* %PC
  %99 = add i64 %98, 6
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 6
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %103 = load i8, i8* %102, align 1, !tbaa !2448
  store i8 %103, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %105 = icmp ne i8 %103, 0
  %106 = select i1 %105, i64 %97, i64 %99
  store i64 %106, i64* %104, align 8, !tbaa !2428
  %107 = load i8, i8* %BRANCH_TAKEN
  %108 = icmp eq i8 %107, 1
  %109 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %110 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %111 = bitcast %union.vec128_t* %XMM0 to i8*
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 3
  store i64 %113, i64* %PC
  %114 = bitcast i8* %110 to i64*
  %115 = load i64, i64* %114, align 1
  %116 = getelementptr inbounds i8, i8* %110, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 1
  %119 = bitcast i8* %111 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = getelementptr inbounds i8, i8* %111, i64 8
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 1
  %124 = xor i64 %120, %115
  %125 = xor i64 %123, %118
  %126 = trunc i64 %124 to i32
  %127 = lshr i64 %124, 32
  %128 = trunc i64 %127 to i32
  %129 = bitcast i8* %109 to i32*
  store i32 %126, i32* %129, align 1, !tbaa !2454
  %130 = getelementptr inbounds i8, i8* %109, i64 4
  %131 = bitcast i8* %130 to i32*
  store i32 %128, i32* %131, align 1, !tbaa !2454
  %132 = trunc i64 %125 to i32
  %133 = getelementptr inbounds i8, i8* %109, i64 8
  %134 = bitcast i8* %133 to i32*
  store i32 %132, i32* %134, align 1, !tbaa !2454
  %135 = lshr i64 %125, 32
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds i8, i8* %109, i64 12
  %138 = bitcast i8* %137 to i32*
  store i32 %136, i32* %138, align 1, !tbaa !2454
  %139 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %140 = load i64, i64* %PC
  %141 = add i64 %140, 9
  store i64 %141, i64* %PC
  %142 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %143 = bitcast i8* %139 to double*
  store double %142, double* %143, align 1, !tbaa !2452
  %144 = getelementptr inbounds i8, i8* %139, i64 8
  %145 = bitcast i8* %144 to double*
  store double 0.000000e+00, double* %145, align 1, !tbaa !2452
  %146 = bitcast %union.vec128_t* %XMM1 to i8*
  %147 = bitcast %union.vec128_t* %XMM0 to i8*
  %148 = load i64, i64* %PC
  %149 = add i64 %148, 4
  store i64 %149, i64* %PC
  %150 = bitcast i8* %146 to double*
  %151 = load double, double* %150, align 1
  %152 = bitcast i8* %147 to double*
  %153 = load double, double* %152, align 1
  %154 = fcmp uno double %151, %153
  br i1 %154, label %155, label %167

; <label>:155:                                    ; preds = %block_401100
  %156 = fadd double %151, %153
  %157 = bitcast double %156 to i64
  %158 = and i64 %157, 9221120237041090560
  %159 = icmp eq i64 %158, 9218868437227405312
  %160 = and i64 %157, 2251799813685247
  %161 = icmp ne i64 %160, 0
  %162 = and i1 %159, %161
  br i1 %162, label %163, label %173

; <label>:163:                                    ; preds = %155
  %164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %165 = load i64, i64* %164, align 8, !tbaa !2428
  %166 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %165, %struct.Memory* %2) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

; <label>:167:                                    ; preds = %block_401100
  %168 = fcmp ogt double %151, %153
  br i1 %168, label %173, label %169

; <label>:169:                                    ; preds = %167
  %170 = fcmp olt double %151, %153
  br i1 %170, label %173, label %171

; <label>:171:                                    ; preds = %169
  %172 = fcmp oeq double %151, %153
  br i1 %172, label %173, label %180

; <label>:173:                                    ; preds = %171, %169, %167, %155
  %174 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 1, %171 ], [ 1, %155 ]
  %175 = phi i8 [ 0, %167 ], [ 0, %169 ], [ 0, %171 ], [ 1, %155 ]
  %176 = phi i8 [ 0, %167 ], [ 1, %169 ], [ 0, %171 ], [ 1, %155 ]
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %174, i8* %177, align 1, !tbaa !2451
  %178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %175, i8* %178, align 1, !tbaa !2451
  %179 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %176, i8* %179, align 1, !tbaa !2451
  br label %180

; <label>:180:                                    ; preds = %173, %171
  %181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %181, align 1, !tbaa !2451
  %182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %182, align 1, !tbaa !2451
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %183, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479: ; preds = %163, %180
  %184 = phi %struct.Memory* [ %166, %163 ], [ %2, %180 ]
  %185 = load i64, i64* %PC
  %186 = add i64 %185, 17
  %187 = load i64, i64* %PC
  %188 = add i64 %187, 6
  %189 = load i64, i64* %PC
  %190 = add i64 %189, 6
  store i64 %190, i64* %PC
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %192 = load i8, i8* %191, align 1, !tbaa !2448
  %193 = icmp eq i8 %192, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %196 = select i1 %193, i64 %186, i64 %188
  store i64 %196, i64* %195, align 8, !tbaa !2428
  %197 = load i8, i8* %BRANCH_TAKEN
  %198 = icmp eq i8 %197, 1
  br i1 %108, label %block_40129b, label %block_40111a

block_40117f:                                     ; preds = %block_401151, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478
  %MEMORY.0 = phi %struct.Memory* [ %2456, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478 ], [ %2456, %block_401151 ]
  %199 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %200 = load i64, i64* %PC
  %201 = add i64 %200, 9
  store i64 %201, i64* %PC
  %202 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %203 = bitcast i8* %199 to double*
  store double %202, double* %203, align 1, !tbaa !2452
  %204 = getelementptr inbounds i8, i8* %199, i64 8
  %205 = bitcast i8* %204 to double*
  store double 0.000000e+00, double* %205, align 1, !tbaa !2452
  %206 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %208 = load i64, i64* %PC
  %209 = add i64 %208, 9
  store i64 %209, i64* %PC
  %210 = bitcast i8* %207 to double*
  %211 = load double, double* %210, align 1
  %212 = getelementptr inbounds i8, i8* %207, i64 8
  %213 = bitcast i8* %212 to i64*
  %214 = load i64, i64* %213, align 1
  %215 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %216 = fsub double %211, %215
  %217 = bitcast i8* %206 to double*
  store double %216, double* %217, align 1, !tbaa !2452
  %218 = getelementptr inbounds i8, i8* %206, i64 8
  %219 = bitcast i8* %218 to i64*
  store i64 %214, i64* %219, align 1, !tbaa !2452
  %220 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %221 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %222 = load i64, i64* %PC
  %223 = add i64 %222, 9
  store i64 %223, i64* %PC
  %224 = bitcast i8* %221 to double*
  %225 = load double, double* %224, align 1
  %226 = getelementptr inbounds i8, i8* %221, i64 8
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %230 = fdiv double %225, %229
  %231 = bitcast i8* %220 to double*
  store double %230, double* %231, align 1, !tbaa !2452
  %232 = getelementptr inbounds i8, i8* %220, i64 8
  %233 = bitcast i8* %232 to i64*
  store i64 %228, i64* %233, align 1, !tbaa !2452
  %234 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %235 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %236 = load i64, i64* %PC
  %237 = add i64 %236, 9
  store i64 %237, i64* %PC
  %238 = bitcast i8* %235 to double*
  %239 = load double, double* %238, align 1
  %240 = getelementptr inbounds i8, i8* %235, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 1
  %243 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %244 = fmul double %239, %243
  %245 = bitcast i8* %234 to double*
  store double %244, double* %245, align 1, !tbaa !2452
  %246 = getelementptr inbounds i8, i8* %234, i64 8
  %247 = bitcast i8* %246 to i64*
  store i64 %242, i64* %247, align 1, !tbaa !2452
  %248 = load i64, i64* %RBP
  %249 = sub i64 %248, 24
  %250 = bitcast %union.vec128_t* %XMM0 to i8*
  %251 = load i64, i64* %PC
  %252 = add i64 %251, 5
  store i64 %252, i64* %PC
  %253 = bitcast i8* %250 to double*
  %254 = load double, double* %253, align 1
  %255 = inttoptr i64 %249 to double*
  store double %254, double* %255
  br label %block_4011a8

block_4012d8:                                     ; preds = %block_4012d2
  %256 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %257 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %258 = bitcast %union.vec128_t* %XMM0 to i8*
  %259 = load i64, i64* %PC
  %260 = add i64 %259, 3
  store i64 %260, i64* %PC
  %261 = bitcast i8* %257 to i64*
  %262 = load i64, i64* %261, align 1
  %263 = getelementptr inbounds i8, i8* %257, i64 8
  %264 = bitcast i8* %263 to i64*
  %265 = load i64, i64* %264, align 1
  %266 = bitcast i8* %258 to i64*
  %267 = load i64, i64* %266, align 1
  %268 = getelementptr inbounds i8, i8* %258, i64 8
  %269 = bitcast i8* %268 to i64*
  %270 = load i64, i64* %269, align 1
  %271 = xor i64 %267, %262
  %272 = xor i64 %270, %265
  %273 = trunc i64 %271 to i32
  %274 = lshr i64 %271, 32
  %275 = trunc i64 %274 to i32
  %276 = bitcast i8* %256 to i32*
  store i32 %273, i32* %276, align 1, !tbaa !2454
  %277 = getelementptr inbounds i8, i8* %256, i64 4
  %278 = bitcast i8* %277 to i32*
  store i32 %275, i32* %278, align 1, !tbaa !2454
  %279 = trunc i64 %272 to i32
  %280 = getelementptr inbounds i8, i8* %256, i64 8
  %281 = bitcast i8* %280 to i32*
  store i32 %279, i32* %281, align 1, !tbaa !2454
  %282 = lshr i64 %272, 32
  %283 = trunc i64 %282 to i32
  %284 = getelementptr inbounds i8, i8* %256, i64 12
  %285 = bitcast i8* %284 to i32*
  store i32 %283, i32* %285, align 1, !tbaa !2454
  %286 = bitcast %union.vec128_t* %XMM0 to i8*
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 9
  store i64 %288, i64* %PC
  %289 = bitcast i8* %286 to double*
  %290 = load double, double* %289, align 1
  store double %290, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %291 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %292 = load i64, i64* %PC
  %293 = add i64 %292, 9
  store i64 %293, i64* %PC
  %294 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %295 = bitcast i8* %291 to double*
  store double %294, double* %295, align 1, !tbaa !2452
  %296 = getelementptr inbounds i8, i8* %291, i64 8
  %297 = bitcast i8* %296 to double*
  store double 0.000000e+00, double* %297, align 1, !tbaa !2452
  %298 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %299 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %300 = load i64, i64* %PC
  %301 = add i64 %300, 9
  store i64 %301, i64* %PC
  %302 = bitcast i8* %299 to double*
  %303 = load double, double* %302, align 1
  %304 = getelementptr inbounds i8, i8* %299, i64 8
  %305 = bitcast i8* %304 to i64*
  %306 = load i64, i64* %305, align 1
  %307 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %308 = fdiv double %303, %307
  %309 = bitcast i8* %298 to double*
  store double %308, double* %309, align 1, !tbaa !2452
  %310 = getelementptr inbounds i8, i8* %298, i64 8
  %311 = bitcast i8* %310 to i64*
  store i64 %306, i64* %311, align 1, !tbaa !2452
  %312 = load i64, i64* %RBP
  %313 = sub i64 %312, 24
  %314 = bitcast %union.vec128_t* %XMM0 to i8*
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 5
  store i64 %316, i64* %PC
  %317 = bitcast i8* %314 to double*
  %318 = load double, double* %317, align 1
  %319 = inttoptr i64 %313 to double*
  store double %318, double* %319
  %320 = load i64, i64* %PC
  %321 = add i64 %320, 68
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 5
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %321, i64* %324, align 8, !tbaa !2428
  br label %block_40133f

block_4012d2:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480
  %325 = load i64, i64* %PC
  %326 = add i64 %325, 46
  %327 = load i64, i64* %PC
  %328 = add i64 %327, 6
  %329 = load i64, i64* %PC
  %330 = add i64 %329, 6
  store i64 %330, i64* %PC
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %332 = load i8, i8* %331, align 1, !tbaa !2446
  store i8 %332, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %334 = icmp ne i8 %332, 0
  %335 = select i1 %334, i64 %326, i64 %328
  store i64 %335, i64* %333, align 8, !tbaa !2428
  %336 = load i8, i8* %BRANCH_TAKEN
  %337 = icmp eq i8 %336, 1
  br i1 %337, label %block_401300, label %block_4012d8

block_401555:                                     ; preds = %block_401226, %block_4012b7, %block_401136, %block_40133f
  %MEMORY.1 = phi %struct.Memory* [ %2191, %block_40133f ], [ %4511, %block_4012b7 ], [ %MEMORY.6, %block_401226 ], [ %184, %block_401136 ]
  %338 = load i64, i64* %RSP
  %339 = load i64, i64* %PC
  %340 = add i64 %339, 7
  store i64 %340, i64* %PC
  %341 = add i64 144, %338
  store i64 %341, i64* %RSP, align 8, !tbaa !2428
  %342 = icmp ult i64 %341, %338
  %343 = icmp ult i64 %341, 144
  %344 = or i1 %342, %343
  %345 = zext i1 %344 to i8
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %345, i8* %346, align 1, !tbaa !2432
  %347 = trunc i64 %341 to i32
  %348 = and i32 %347, 255
  %349 = call i32 @llvm.ctpop.i32(i32 %348) #17
  %350 = trunc i32 %349 to i8
  %351 = and i8 %350, 1
  %352 = xor i8 %351, 1
  %353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %352, i8* %353, align 1, !tbaa !2446
  %354 = xor i64 144, %338
  %355 = xor i64 %354, %341
  %356 = lshr i64 %355, 4
  %357 = trunc i64 %356 to i8
  %358 = and i8 %357, 1
  %359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %358, i8* %359, align 1, !tbaa !2447
  %360 = icmp eq i64 %341, 0
  %361 = zext i1 %360 to i8
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %361, i8* %362, align 1, !tbaa !2448
  %363 = lshr i64 %341, 63
  %364 = trunc i64 %363 to i8
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %364, i8* %365, align 1, !tbaa !2449
  %366 = lshr i64 %338, 63
  %367 = xor i64 %363, %366
  %368 = add nuw nsw i64 %367, %363
  %369 = icmp eq i64 %368, 2
  %370 = zext i1 %369 to i8
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %370, i8* %371, align 1, !tbaa !2450
  %372 = load i64, i64* %PC
  %373 = add i64 %372, 1
  store i64 %373, i64* %PC
  %374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %375 = load i64, i64* %374, align 8, !tbaa !2428
  %376 = add i64 %375, 8
  %377 = inttoptr i64 %375 to i64*
  %378 = load i64, i64* %377
  store i64 %378, i64* %RBP, align 8, !tbaa !2428
  store i64 %376, i64* %374, align 8, !tbaa !2428
  %379 = load i64, i64* %PC
  %380 = add i64 %379, 1
  store i64 %380, i64* %PC
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %383 = load i64, i64* %382, align 8, !tbaa !2428
  %384 = inttoptr i64 %383 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %381, align 8, !tbaa !2428
  %386 = add i64 %383, 8
  store i64 %386, i64* %382, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.1

block_40133f:                                     ; preds = %block_401300, %block_4012d8
  %MEMORY.2 = phi %struct.Memory* [ %5274, %block_401300 ], [ %2366, %block_4012d8 ]
  %387 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %388 = load i64, i64* %RBP
  %389 = sub i64 %388, 24
  %390 = load i64, i64* %PC
  %391 = add i64 %390, 5
  store i64 %391, i64* %PC
  %392 = inttoptr i64 %389 to double*
  %393 = load double, double* %392
  %394 = bitcast i8* %387 to double*
  store double %393, double* %394, align 1, !tbaa !2452
  %395 = getelementptr inbounds i8, i8* %387, i64 8
  %396 = bitcast i8* %395 to double*
  store double 0.000000e+00, double* %396, align 1, !tbaa !2452
  %397 = load i64, i64* %PC
  %398 = sub i64 %397, 3364
  %399 = load i64, i64* %PC
  %400 = add i64 %399, 5
  %401 = load i64, i64* %PC
  %402 = add i64 %401, 5
  store i64 %402, i64* %PC
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %404 = load i64, i64* %403, align 8, !tbaa !2428
  %405 = add i64 %404, -8
  %406 = inttoptr i64 %405 to i64*
  store i64 %400, i64* %406
  store i64 %405, i64* %403, align 8, !tbaa !2428
  %407 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %398, i64* %407, align 8, !tbaa !2428
  %408 = load i64, i64* %PC
  %409 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %408, %struct.Memory* %MEMORY.2)
  %410 = load i64, i64* %RBP
  %411 = sub i64 %410, 8
  %412 = bitcast %union.vec128_t* %XMM0 to i8*
  %413 = load i64, i64* %PC
  %414 = add i64 %413, 5
  store i64 %414, i64* %PC
  %415 = bitcast i8* %412 to double*
  %416 = load double, double* %415, align 1
  %417 = inttoptr i64 %411 to double*
  store double %416, double* %417
  %418 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %419 = load i64, i64* %PC
  %420 = add i64 %419, 9
  store i64 %420, i64* %PC
  %421 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %422 = bitcast i8* %418 to double*
  store double %421, double* %422, align 1, !tbaa !2452
  %423 = getelementptr inbounds i8, i8* %418, i64 8
  %424 = bitcast i8* %423 to double*
  store double 0.000000e+00, double* %424, align 1, !tbaa !2452
  %425 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %426 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %427 = load i64, i64* %PC
  %428 = add i64 %427, 9
  store i64 %428, i64* %PC
  %429 = bitcast i8* %426 to double*
  %430 = load double, double* %429, align 1
  %431 = getelementptr inbounds i8, i8* %426, i64 8
  %432 = bitcast i8* %431 to i64*
  %433 = load i64, i64* %432, align 1
  %434 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %435 = fdiv double %430, %434
  %436 = bitcast i8* %425 to double*
  store double %435, double* %436, align 1, !tbaa !2452
  %437 = getelementptr inbounds i8, i8* %425, i64 8
  %438 = bitcast i8* %437 to i64*
  store i64 %433, i64* %438, align 1, !tbaa !2452
  %439 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %440 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %441 = load i64, i64* %RBP
  %442 = sub i64 %441, 24
  %443 = load i64, i64* %PC
  %444 = add i64 %443, 5
  store i64 %444, i64* %PC
  %445 = bitcast i8* %440 to double*
  %446 = load double, double* %445, align 1
  %447 = getelementptr inbounds i8, i8* %440, i64 8
  %448 = bitcast i8* %447 to i64*
  %449 = load i64, i64* %448, align 1
  %450 = inttoptr i64 %442 to double*
  %451 = load double, double* %450
  %452 = fmul double %446, %451
  %453 = bitcast i8* %439 to double*
  store double %452, double* %453, align 1, !tbaa !2452
  %454 = getelementptr inbounds i8, i8* %439, i64 8
  %455 = bitcast i8* %454 to i64*
  store i64 %449, i64* %455, align 1, !tbaa !2452
  %456 = load i64, i64* %RBP
  %457 = sub i64 %456, 32
  %458 = bitcast %union.vec128_t* %XMM0 to i8*
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 5
  store i64 %460, i64* %PC
  %461 = bitcast i8* %458 to double*
  %462 = load double, double* %461, align 1
  %463 = inttoptr i64 %457 to double*
  store double %462, double* %463
  %464 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %465 = load i64, i64* %PC
  %466 = add i64 %465, 9
  store i64 %466, i64* %PC
  %467 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %468 = bitcast i8* %464 to double*
  store double %467, double* %468, align 1, !tbaa !2452
  %469 = getelementptr inbounds i8, i8* %464, i64 8
  %470 = bitcast i8* %469 to double*
  store double 0.000000e+00, double* %470, align 1, !tbaa !2452
  %471 = load i64, i64* %RBP
  %472 = sub i64 %471, 40
  %473 = bitcast %union.vec128_t* %XMM0 to i8*
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 5
  store i64 %475, i64* %PC
  %476 = bitcast i8* %473 to double*
  %477 = load double, double* %476, align 1
  %478 = inttoptr i64 %472 to double*
  store double %477, double* %478
  %479 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %480 = load i64, i64* %PC
  %481 = add i64 %480, 9
  store i64 %481, i64* %PC
  %482 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %483 = bitcast i8* %479 to double*
  store double %482, double* %483, align 1, !tbaa !2452
  %484 = getelementptr inbounds i8, i8* %479, i64 8
  %485 = bitcast i8* %484 to double*
  store double 0.000000e+00, double* %485, align 1, !tbaa !2452
  %486 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %487 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %488 = load i64, i64* %RBP
  %489 = sub i64 %488, 8
  %490 = load i64, i64* %PC
  %491 = add i64 %490, 5
  store i64 %491, i64* %PC
  %492 = bitcast i8* %487 to double*
  %493 = load double, double* %492, align 1
  %494 = getelementptr inbounds i8, i8* %487, i64 8
  %495 = bitcast i8* %494 to i64*
  %496 = load i64, i64* %495, align 1
  %497 = inttoptr i64 %489 to double*
  %498 = load double, double* %497
  %499 = fadd double %493, %498
  %500 = bitcast i8* %486 to double*
  store double %499, double* %500, align 1, !tbaa !2452
  %501 = getelementptr inbounds i8, i8* %486, i64 8
  %502 = bitcast i8* %501 to i64*
  store i64 %496, i64* %502, align 1, !tbaa !2452
  %503 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %504 = load i64, i64* %RBP
  %505 = sub i64 %504, 32
  %506 = load i64, i64* %PC
  %507 = add i64 %506, 5
  store i64 %507, i64* %PC
  %508 = inttoptr i64 %505 to double*
  %509 = load double, double* %508
  %510 = bitcast i8* %503 to double*
  store double %509, double* %510, align 1, !tbaa !2452
  %511 = getelementptr inbounds i8, i8* %503, i64 8
  %512 = bitcast i8* %511 to double*
  store double 0.000000e+00, double* %512, align 1, !tbaa !2452
  %513 = load i64, i64* %RBP
  %514 = sub i64 %513, 64
  %515 = bitcast %union.vec128_t* %XMM0 to i8*
  %516 = load i64, i64* %PC
  %517 = add i64 %516, 5
  store i64 %517, i64* %PC
  %518 = bitcast i8* %515 to double*
  %519 = load double, double* %518, align 1
  %520 = inttoptr i64 %514 to double*
  store double %519, double* %520
  %521 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %522 = bitcast %union.vec128_t* %XMM1 to i8*
  %523 = load i64, i64* %PC
  %524 = add i64 %523, 3
  store i64 %524, i64* %PC
  %525 = bitcast i8* %522 to <2 x i32>*
  %526 = load <2 x i32>, <2 x i32>* %525, align 1
  %527 = getelementptr inbounds i8, i8* %522, i64 8
  %528 = bitcast i8* %527 to <2 x i32>*
  %529 = load <2 x i32>, <2 x i32>* %528, align 1
  %530 = extractelement <2 x i32> %526, i32 0
  %531 = bitcast i8* %521 to i32*
  store i32 %530, i32* %531, align 1, !tbaa !2455
  %532 = extractelement <2 x i32> %526, i32 1
  %533 = getelementptr inbounds i8, i8* %521, i64 4
  %534 = bitcast i8* %533 to i32*
  store i32 %532, i32* %534, align 1, !tbaa !2455
  %535 = extractelement <2 x i32> %529, i32 0
  %536 = getelementptr inbounds i8, i8* %521, i64 8
  %537 = bitcast i8* %536 to i32*
  store i32 %535, i32* %537, align 1, !tbaa !2455
  %538 = extractelement <2 x i32> %529, i32 1
  %539 = getelementptr inbounds i8, i8* %521, i64 12
  %540 = bitcast i8* %539 to i32*
  store i32 %538, i32* %540, align 1, !tbaa !2455
  %541 = load i64, i64* %PC
  %542 = sub i64 %541, 3443
  %543 = load i64, i64* %PC
  %544 = add i64 %543, 5
  %545 = load i64, i64* %PC
  %546 = add i64 %545, 5
  store i64 %546, i64* %PC
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %548 = load i64, i64* %547, align 8, !tbaa !2428
  %549 = add i64 %548, -8
  %550 = inttoptr i64 %549 to i64*
  store i64 %544, i64* %550
  store i64 %549, i64* %547, align 8, !tbaa !2428
  %551 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %542, i64* %551, align 8, !tbaa !2428
  %552 = load i64, i64* %PC
  %553 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %552, %struct.Memory* %409)
  %554 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %555 = load i64, i64* %PC
  %556 = add i64 %555, 8
  store i64 %556, i64* %PC
  %557 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 112) to double*)
  %558 = bitcast i8* %554 to double*
  store double %557, double* %558, align 1, !tbaa !2452
  %559 = getelementptr inbounds i8, i8* %554, i64 8
  %560 = bitcast i8* %559 to double*
  store double 0.000000e+00, double* %560, align 1, !tbaa !2452
  %561 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %562 = load i64, i64* %RBP
  %563 = sub i64 %562, 64
  %564 = load i64, i64* %PC
  %565 = add i64 %564, 5
  store i64 %565, i64* %PC
  %566 = inttoptr i64 %563 to double*
  %567 = load double, double* %566
  %568 = bitcast i8* %561 to double*
  store double %567, double* %568, align 1, !tbaa !2452
  %569 = getelementptr inbounds i8, i8* %561, i64 8
  %570 = bitcast i8* %569 to double*
  store double 0.000000e+00, double* %570, align 1, !tbaa !2452
  %571 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %572 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %573 = bitcast %union.vec128_t* %XMM0 to i8*
  %574 = load i64, i64* %PC
  %575 = add i64 %574, 4
  store i64 %575, i64* %PC
  %576 = bitcast i8* %572 to double*
  %577 = load double, double* %576, align 1
  %578 = getelementptr inbounds i8, i8* %572, i64 8
  %579 = bitcast i8* %578 to i64*
  %580 = load i64, i64* %579, align 1
  %581 = bitcast i8* %573 to double*
  %582 = load double, double* %581, align 1
  %583 = fsub double %577, %582
  %584 = bitcast i8* %571 to double*
  store double %583, double* %584, align 1, !tbaa !2452
  %585 = getelementptr inbounds i8, i8* %571, i64 8
  %586 = bitcast i8* %585 to i64*
  store i64 %580, i64* %586, align 1, !tbaa !2452
  %587 = bitcast %union.vec128_t* %XMM2 to i8*
  %588 = load i64, i64* %PC
  %589 = add i64 %588, 9
  store i64 %589, i64* %PC
  %590 = bitcast i8* %587 to double*
  %591 = load double, double* %590, align 1
  store double %591, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %592 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %593 = load i64, i64* %RBP
  %594 = sub i64 %593, 40
  %595 = load i64, i64* %PC
  %596 = add i64 %595, 5
  store i64 %596, i64* %PC
  %597 = inttoptr i64 %594 to double*
  %598 = load double, double* %597
  %599 = bitcast i8* %592 to double*
  store double %598, double* %599, align 1, !tbaa !2452
  %600 = getelementptr inbounds i8, i8* %592, i64 8
  %601 = bitcast i8* %600 to double*
  store double 0.000000e+00, double* %601, align 1, !tbaa !2452
  %602 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %603 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %604 = load i64, i64* %RBP
  %605 = sub i64 %604, 8
  %606 = load i64, i64* %PC
  %607 = add i64 %606, 5
  store i64 %607, i64* %PC
  %608 = bitcast i8* %603 to double*
  %609 = load double, double* %608, align 1
  %610 = getelementptr inbounds i8, i8* %603, i64 8
  %611 = bitcast i8* %610 to i64*
  %612 = load i64, i64* %611, align 1
  %613 = inttoptr i64 %605 to double*
  %614 = load double, double* %613
  %615 = fadd double %609, %614
  %616 = bitcast i8* %602 to double*
  store double %615, double* %616, align 1, !tbaa !2452
  %617 = getelementptr inbounds i8, i8* %602, i64 8
  %618 = bitcast i8* %617 to i64*
  store i64 %612, i64* %618, align 1, !tbaa !2452
  %619 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %620 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %621 = bitcast %union.vec128_t* %XMM1 to i8*
  %622 = load i64, i64* %PC
  %623 = add i64 %622, 4
  store i64 %623, i64* %PC
  %624 = bitcast i8* %620 to double*
  %625 = load double, double* %624, align 1
  %626 = getelementptr inbounds i8, i8* %620, i64 8
  %627 = bitcast i8* %626 to i64*
  %628 = load i64, i64* %627, align 1
  %629 = bitcast i8* %621 to double*
  %630 = load double, double* %629, align 1
  %631 = fdiv double %625, %630
  %632 = bitcast i8* %619 to double*
  store double %631, double* %632, align 1, !tbaa !2452
  %633 = getelementptr inbounds i8, i8* %619, i64 8
  %634 = bitcast i8* %633 to i64*
  store i64 %628, i64* %634, align 1, !tbaa !2452
  %635 = load i64, i64* %RBP
  %636 = sub i64 %635, 72
  %637 = bitcast %union.vec128_t* %XMM1 to i8*
  %638 = load i64, i64* %PC
  %639 = add i64 %638, 5
  store i64 %639, i64* %PC
  %640 = bitcast i8* %637 to double*
  %641 = load double, double* %640, align 1
  %642 = inttoptr i64 %636 to double*
  store double %641, double* %642
  %643 = load i64, i64* %PC
  %644 = sub i64 %643, 3509
  %645 = load i64, i64* %PC
  %646 = add i64 %645, 5
  %647 = load i64, i64* %PC
  %648 = add i64 %647, 5
  store i64 %648, i64* %PC
  %649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %650 = load i64, i64* %649, align 8, !tbaa !2428
  %651 = add i64 %650, -8
  %652 = inttoptr i64 %651 to i64*
  store i64 %646, i64* %652
  store i64 %651, i64* %649, align 8, !tbaa !2428
  %653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %644, i64* %653, align 8, !tbaa !2428
  %654 = load i64, i64* %PC
  %655 = bitcast %struct.State** %state.i799 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %655)
  %656 = bitcast i64* %curr_pc.i800 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %656)
  %657 = bitcast %struct.Memory** %memory.i801 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %657)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i802)
  %658 = bitcast i64* %SS_BASE.i803 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %658)
  %659 = bitcast i64* %ES_BASE.i804 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %659)
  %660 = bitcast i64* %DS_BASE.i805 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %660)
  %661 = bitcast i64* %CS_BASE.i806 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %661)
  %662 = bitcast %struct.State** %STATE.i807 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %662)
  %663 = bitcast %struct.Memory** %MEMORY.i808 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %663)
  %664 = bitcast i64** %_DR0.i809 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %664)
  %665 = bitcast i64** %_DR1.i810 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %665)
  %666 = bitcast i64** %_DR2.i811 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %666)
  %667 = bitcast i64** %_DR3.i812 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %667)
  %668 = bitcast i64** %_DR4.i813 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %668)
  %669 = bitcast i64** %_DR5.i814 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %669)
  %670 = bitcast i64** %_DR6.i815 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %670)
  %671 = bitcast i64** %_DR7.i816 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %671)
  %672 = bitcast i64** %CR0.i817 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %672)
  %673 = bitcast i64** %CR1.i818 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %673)
  %674 = bitcast i64** %CR2.i819 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %674)
  %675 = bitcast i64** %CR3.i820 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %675)
  %676 = bitcast i64** %CR4.i821 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %676)
  %677 = bitcast i64** %CR8.i822 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %677)
  store %struct.State* %0, %struct.State** %state.i799, align 8, !noalias !2457
  store i64 %654, i64* %curr_pc.i800, align 8, !noalias !2457
  store %struct.Memory* %553, %struct.Memory** %memory.i801, align 8, !noalias !2457
  store i8 0, i8* %BRANCH_TAKEN.i802, align 1, !noalias !2457
  store i64 0, i64* %SS_BASE.i803, align 8, !noalias !2457
  store i64 0, i64* %ES_BASE.i804, align 8, !noalias !2457
  store i64 0, i64* %DS_BASE.i805, align 8, !noalias !2457
  store i64 0, i64* %CS_BASE.i806, align 8, !noalias !2457
  store %struct.State* %0, %struct.State** %STATE.i807, align 8, !noalias !2457
  store %struct.Memory* %553, %struct.Memory** %MEMORY.i808, align 8, !noalias !2457
  %678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %679 = getelementptr inbounds %struct.GPR, %struct.GPR* %678, i32 0, i32 33
  %680 = getelementptr inbounds %struct.Reg, %struct.Reg* %679, i32 0, i32 0
  %PC.i823 = bitcast %union.anon* %680 to i64*
  store i64 %654, i64* %PC.i823, align 8, !alias.scope !2461, !noalias !2462
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %682 = getelementptr inbounds %struct.GPR, %struct.GPR* %681, i32 0, i32 1
  %683 = getelementptr inbounds %struct.Reg, %struct.Reg* %682, i32 0, i32 0
  %684 = bitcast %union.anon* %683 to %struct.anon.2*
  %AH.i824 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %684, i32 0, i32 1
  %685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %686 = getelementptr inbounds %struct.GPR, %struct.GPR* %685, i32 0, i32 3
  %687 = getelementptr inbounds %struct.Reg, %struct.Reg* %686, i32 0, i32 0
  %688 = bitcast %union.anon* %687 to %struct.anon.2*
  %BH.i825 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %688, i32 0, i32 1
  %689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %690 = getelementptr inbounds %struct.GPR, %struct.GPR* %689, i32 0, i32 5
  %691 = getelementptr inbounds %struct.Reg, %struct.Reg* %690, i32 0, i32 0
  %692 = bitcast %union.anon* %691 to %struct.anon.2*
  %CH.i826 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %692, i32 0, i32 1
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %694 = getelementptr inbounds %struct.GPR, %struct.GPR* %693, i32 0, i32 7
  %695 = getelementptr inbounds %struct.Reg, %struct.Reg* %694, i32 0, i32 0
  %696 = bitcast %union.anon* %695 to %struct.anon.2*
  %DH.i827 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %696, i32 0, i32 1
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 1
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %700 = bitcast %union.anon* %699 to %struct.anon.2*
  %AL.i828 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %700, i32 0, i32 0
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %702 = getelementptr inbounds %struct.GPR, %struct.GPR* %701, i32 0, i32 3
  %703 = getelementptr inbounds %struct.Reg, %struct.Reg* %702, i32 0, i32 0
  %704 = bitcast %union.anon* %703 to %struct.anon.2*
  %BL.i829 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %704, i32 0, i32 0
  %705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %706 = getelementptr inbounds %struct.GPR, %struct.GPR* %705, i32 0, i32 5
  %707 = getelementptr inbounds %struct.Reg, %struct.Reg* %706, i32 0, i32 0
  %708 = bitcast %union.anon* %707 to %struct.anon.2*
  %CL.i830 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %708, i32 0, i32 0
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 7
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %712 = bitcast %union.anon* %711 to %struct.anon.2*
  %DL.i831 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %712, i32 0, i32 0
  %713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %714 = getelementptr inbounds %struct.GPR, %struct.GPR* %713, i32 0, i32 9
  %715 = getelementptr inbounds %struct.Reg, %struct.Reg* %714, i32 0, i32 0
  %716 = bitcast %union.anon* %715 to %struct.anon.2*
  %SIL.i832 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %716, i32 0, i32 0
  %717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %718 = getelementptr inbounds %struct.GPR, %struct.GPR* %717, i32 0, i32 11
  %719 = getelementptr inbounds %struct.Reg, %struct.Reg* %718, i32 0, i32 0
  %720 = bitcast %union.anon* %719 to %struct.anon.2*
  %DIL.i833 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %720, i32 0, i32 0
  %721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %722 = getelementptr inbounds %struct.GPR, %struct.GPR* %721, i32 0, i32 13
  %723 = getelementptr inbounds %struct.Reg, %struct.Reg* %722, i32 0, i32 0
  %724 = bitcast %union.anon* %723 to %struct.anon.2*
  %SPL.i834 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %724, i32 0, i32 0
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 15
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %728 = bitcast %union.anon* %727 to %struct.anon.2*
  %BPL.i835 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %728, i32 0, i32 0
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 17
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %732 = bitcast %union.anon* %731 to %struct.anon.2*
  %R8B.i836 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %732, i32 0, i32 0
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 19
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %736 = bitcast %union.anon* %735 to %struct.anon.2*
  %R9B.i837 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %736, i32 0, i32 0
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %738 = getelementptr inbounds %struct.GPR, %struct.GPR* %737, i32 0, i32 21
  %739 = getelementptr inbounds %struct.Reg, %struct.Reg* %738, i32 0, i32 0
  %740 = bitcast %union.anon* %739 to %struct.anon.2*
  %R10B.i838 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %740, i32 0, i32 0
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %742 = getelementptr inbounds %struct.GPR, %struct.GPR* %741, i32 0, i32 23
  %743 = getelementptr inbounds %struct.Reg, %struct.Reg* %742, i32 0, i32 0
  %744 = bitcast %union.anon* %743 to %struct.anon.2*
  %R11B.i839 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %744, i32 0, i32 0
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 25
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %748 = bitcast %union.anon* %747 to %struct.anon.2*
  %R12B.i840 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %748, i32 0, i32 0
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 27
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %752 = bitcast %union.anon* %751 to %struct.anon.2*
  %R13B.i841 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %752, i32 0, i32 0
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 29
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %756 = bitcast %union.anon* %755 to %struct.anon.2*
  %R14B.i842 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %756, i32 0, i32 0
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 31
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %760 = bitcast %union.anon* %759 to %struct.anon.2*
  %R15B.i843 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %760, i32 0, i32 0
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 1
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %AX.i844 = bitcast %union.anon* %763 to i16*
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %765 = getelementptr inbounds %struct.GPR, %struct.GPR* %764, i32 0, i32 3
  %766 = getelementptr inbounds %struct.Reg, %struct.Reg* %765, i32 0, i32 0
  %BX.i845 = bitcast %union.anon* %766 to i16*
  %767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %768 = getelementptr inbounds %struct.GPR, %struct.GPR* %767, i32 0, i32 5
  %769 = getelementptr inbounds %struct.Reg, %struct.Reg* %768, i32 0, i32 0
  %CX.i846 = bitcast %union.anon* %769 to i16*
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 7
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %DX.i847 = bitcast %union.anon* %772 to i16*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 9
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %SI.i848 = bitcast %union.anon* %775 to i16*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 11
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %DI.i849 = bitcast %union.anon* %778 to i16*
  %779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %780 = getelementptr inbounds %struct.GPR, %struct.GPR* %779, i32 0, i32 13
  %781 = getelementptr inbounds %struct.Reg, %struct.Reg* %780, i32 0, i32 0
  %SP.i850 = bitcast %union.anon* %781 to i16*
  %782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %783 = getelementptr inbounds %struct.GPR, %struct.GPR* %782, i32 0, i32 15
  %784 = getelementptr inbounds %struct.Reg, %struct.Reg* %783, i32 0, i32 0
  %BP.i851 = bitcast %union.anon* %784 to i16*
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 17
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %R8W.i852 = bitcast %union.anon* %787 to i16*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 19
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %R9W.i853 = bitcast %union.anon* %790 to i16*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 21
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %R10W.i854 = bitcast %union.anon* %793 to i16*
  %794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %795 = getelementptr inbounds %struct.GPR, %struct.GPR* %794, i32 0, i32 23
  %796 = getelementptr inbounds %struct.Reg, %struct.Reg* %795, i32 0, i32 0
  %R11W.i855 = bitcast %union.anon* %796 to i16*
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 25
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %R12W.i856 = bitcast %union.anon* %799 to i16*
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 27
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %R13W.i857 = bitcast %union.anon* %802 to i16*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 29
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %R14W.i858 = bitcast %union.anon* %805 to i16*
  %806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %807 = getelementptr inbounds %struct.GPR, %struct.GPR* %806, i32 0, i32 31
  %808 = getelementptr inbounds %struct.Reg, %struct.Reg* %807, i32 0, i32 0
  %R15W.i859 = bitcast %union.anon* %808 to i16*
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 33
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %IP.i860 = bitcast %union.anon* %811 to i16*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 1
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %EAX.i861 = bitcast %union.anon* %814 to i32*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 3
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %EBX.i862 = bitcast %union.anon* %817 to i32*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 5
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %ECX.i863 = bitcast %union.anon* %820 to i32*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 7
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %EDX.i864 = bitcast %union.anon* %823 to i32*
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 9
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %ESI.i865 = bitcast %union.anon* %826 to i32*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 11
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %EDI.i866 = bitcast %union.anon* %829 to i32*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 13
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %ESP.i867 = bitcast %union.anon* %832 to i32*
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %834 = getelementptr inbounds %struct.GPR, %struct.GPR* %833, i32 0, i32 15
  %835 = getelementptr inbounds %struct.Reg, %struct.Reg* %834, i32 0, i32 0
  %EBP.i868 = bitcast %union.anon* %835 to i32*
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %837 = getelementptr inbounds %struct.GPR, %struct.GPR* %836, i32 0, i32 33
  %838 = getelementptr inbounds %struct.Reg, %struct.Reg* %837, i32 0, i32 0
  %EIP.i869 = bitcast %union.anon* %838 to i32*
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 17
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %R8D.i870 = bitcast %union.anon* %841 to i32*
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 19
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %R9D.i871 = bitcast %union.anon* %844 to i32*
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 21
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %R10D.i872 = bitcast %union.anon* %847 to i32*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 23
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %R11D.i873 = bitcast %union.anon* %850 to i32*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 25
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %R12D.i874 = bitcast %union.anon* %853 to i32*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 27
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %R13D.i875 = bitcast %union.anon* %856 to i32*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 29
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %R14D.i876 = bitcast %union.anon* %859 to i32*
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %861 = getelementptr inbounds %struct.GPR, %struct.GPR* %860, i32 0, i32 31
  %862 = getelementptr inbounds %struct.Reg, %struct.Reg* %861, i32 0, i32 0
  %R15D.i877 = bitcast %union.anon* %862 to i32*
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 1
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %865 to i64*
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 3
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %RBX.i879 = bitcast %union.anon* %868 to i64*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 5
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %RCX.i880 = bitcast %union.anon* %871 to i64*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 7
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %874 to i64*
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 9
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %RSI.i882 = bitcast %union.anon* %877 to i64*
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %879 = getelementptr inbounds %struct.GPR, %struct.GPR* %878, i32 0, i32 11
  %880 = getelementptr inbounds %struct.Reg, %struct.Reg* %879, i32 0, i32 0
  %RDI.i883 = bitcast %union.anon* %880 to i64*
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 13
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %RSP.i884 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 15
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %RBP.i885 = bitcast %union.anon* %886 to i64*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 17
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %R8.i886 = bitcast %union.anon* %889 to i64*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 19
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %R9.i887 = bitcast %union.anon* %892 to i64*
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 21
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %R10.i888 = bitcast %union.anon* %895 to i64*
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %897 = getelementptr inbounds %struct.GPR, %struct.GPR* %896, i32 0, i32 23
  %898 = getelementptr inbounds %struct.Reg, %struct.Reg* %897, i32 0, i32 0
  %R11.i889 = bitcast %union.anon* %898 to i64*
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 25
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %R12.i890 = bitcast %union.anon* %901 to i64*
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 27
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %R13.i891 = bitcast %union.anon* %904 to i64*
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 29
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %R14.i892 = bitcast %union.anon* %907 to i64*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 31
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %R15.i893 = bitcast %union.anon* %910 to i64*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 33
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %RIP.i894 = bitcast %union.anon* %913 to i64*
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %915 = getelementptr inbounds %struct.Segments, %struct.Segments* %914, i32 0, i32 1
  %SS.i895 = bitcast %union.SegmentSelector* %915 to i16*
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %917 = getelementptr inbounds %struct.Segments, %struct.Segments* %916, i32 0, i32 3
  %ES.i896 = bitcast %union.SegmentSelector* %917 to i16*
  %918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %919 = getelementptr inbounds %struct.Segments, %struct.Segments* %918, i32 0, i32 5
  %GS.i897 = bitcast %union.SegmentSelector* %919 to i16*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %921 = getelementptr inbounds %struct.Segments, %struct.Segments* %920, i32 0, i32 7
  %FS.i898 = bitcast %union.SegmentSelector* %921 to i16*
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %923 = getelementptr inbounds %struct.Segments, %struct.Segments* %922, i32 0, i32 9
  %DS.i899 = bitcast %union.SegmentSelector* %923 to i16*
  %924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %925 = getelementptr inbounds %struct.Segments, %struct.Segments* %924, i32 0, i32 11
  %CS.i900 = bitcast %union.SegmentSelector* %925 to i16*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %927 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %926, i32 0, i32 5
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %GS_BASE.i901 = bitcast %union.anon* %928 to i64*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %930 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %929, i32 0, i32 7
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %FS_BASE.i902 = bitcast %union.anon* %931 to i64*
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %933 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %932, i64 0, i64 0
  %YMM0.i903 = bitcast %union.VectorReg* %933 to %"class.std::bitset"*
  %934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %935 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %934, i64 0, i64 1
  %YMM1.i904 = bitcast %union.VectorReg* %935 to %"class.std::bitset"*
  %936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %937 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %936, i64 0, i64 2
  %YMM2.i905 = bitcast %union.VectorReg* %937 to %"class.std::bitset"*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %939 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %938, i64 0, i64 3
  %YMM3.i906 = bitcast %union.VectorReg* %939 to %"class.std::bitset"*
  %940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %941 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %940, i64 0, i64 4
  %YMM4.i907 = bitcast %union.VectorReg* %941 to %"class.std::bitset"*
  %942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %943 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %942, i64 0, i64 5
  %YMM5.i908 = bitcast %union.VectorReg* %943 to %"class.std::bitset"*
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %945 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %944, i64 0, i64 6
  %YMM6.i909 = bitcast %union.VectorReg* %945 to %"class.std::bitset"*
  %946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %947 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %946, i64 0, i64 7
  %YMM7.i910 = bitcast %union.VectorReg* %947 to %"class.std::bitset"*
  %948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %949 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %948, i64 0, i64 8
  %YMM8.i911 = bitcast %union.VectorReg* %949 to %"class.std::bitset"*
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %951 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %950, i64 0, i64 9
  %YMM9.i912 = bitcast %union.VectorReg* %951 to %"class.std::bitset"*
  %952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %953 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %952, i64 0, i64 10
  %YMM10.i913 = bitcast %union.VectorReg* %953 to %"class.std::bitset"*
  %954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %955 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %954, i64 0, i64 11
  %YMM11.i914 = bitcast %union.VectorReg* %955 to %"class.std::bitset"*
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %957 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %956, i64 0, i64 12
  %YMM12.i915 = bitcast %union.VectorReg* %957 to %"class.std::bitset"*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %959 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %958, i64 0, i64 13
  %YMM13.i916 = bitcast %union.VectorReg* %959 to %"class.std::bitset"*
  %960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %961 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %960, i64 0, i64 14
  %YMM14.i917 = bitcast %union.VectorReg* %961 to %"class.std::bitset"*
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %963 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %962, i64 0, i64 15
  %YMM15.i918 = bitcast %union.VectorReg* %963 to %"class.std::bitset"*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %965 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %964, i64 0, i64 0
  %XMM0.i919 = bitcast %union.VectorReg* %965 to %union.vec128_t*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %967 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %966, i64 0, i64 1
  %XMM1.i920 = bitcast %union.VectorReg* %967 to %union.vec128_t*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %969 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %968, i64 0, i64 2
  %XMM2.i921 = bitcast %union.VectorReg* %969 to %union.vec128_t*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %971 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %970, i64 0, i64 3
  %XMM3.i922 = bitcast %union.VectorReg* %971 to %union.vec128_t*
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %973 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %972, i64 0, i64 4
  %XMM4.i923 = bitcast %union.VectorReg* %973 to %union.vec128_t*
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %975 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %974, i64 0, i64 5
  %XMM5.i924 = bitcast %union.VectorReg* %975 to %union.vec128_t*
  %976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %977 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %976, i64 0, i64 6
  %XMM6.i925 = bitcast %union.VectorReg* %977 to %union.vec128_t*
  %978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %979 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %978, i64 0, i64 7
  %XMM7.i926 = bitcast %union.VectorReg* %979 to %union.vec128_t*
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %981 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %980, i64 0, i64 8
  %XMM8.i927 = bitcast %union.VectorReg* %981 to %union.vec128_t*
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %983 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %982, i64 0, i64 9
  %XMM9.i928 = bitcast %union.VectorReg* %983 to %union.vec128_t*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %984, i64 0, i64 10
  %XMM10.i929 = bitcast %union.VectorReg* %985 to %union.vec128_t*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %987 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %986, i64 0, i64 11
  %XMM11.i930 = bitcast %union.VectorReg* %987 to %union.vec128_t*
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %988, i64 0, i64 12
  %XMM12.i931 = bitcast %union.VectorReg* %989 to %union.vec128_t*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %990, i64 0, i64 13
  %XMM13.i932 = bitcast %union.VectorReg* %991 to %union.vec128_t*
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %992, i64 0, i64 14
  %XMM14.i933 = bitcast %union.VectorReg* %993 to %union.vec128_t*
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %994, i64 0, i64 15
  %XMM15.i934 = bitcast %union.VectorReg* %995 to %union.vec128_t*
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %997 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %996, i32 0, i32 0
  %998 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %997, i64 0, i64 0
  %ST0.i935 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %998, i32 0, i32 1
  %999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1000 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %999, i32 0, i32 0
  %1001 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1000, i64 0, i64 1
  %ST1.i936 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1001, i32 0, i32 1
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1003 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1002, i32 0, i32 0
  %1004 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1003, i64 0, i64 2
  %ST2.i937 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1004, i32 0, i32 1
  %1005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1006 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1005, i32 0, i32 0
  %1007 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1006, i64 0, i64 3
  %ST3.i938 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1007, i32 0, i32 1
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1009 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1008, i32 0, i32 0
  %1010 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1009, i64 0, i64 4
  %ST4.i939 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1010, i32 0, i32 1
  %1011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1012 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1011, i32 0, i32 0
  %1013 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1012, i64 0, i64 5
  %ST5.i940 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1013, i32 0, i32 1
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1015 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1014, i32 0, i32 0
  %1016 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1015, i64 0, i64 6
  %ST6.i941 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1016, i32 0, i32 1
  %1017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1018 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1017, i32 0, i32 0
  %1019 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1018, i64 0, i64 7
  %ST7.i942 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1019, i32 0, i32 1
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1021 = getelementptr inbounds %struct.MMX, %struct.MMX* %1020, i32 0, i32 0
  %1022 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1021, i64 0, i64 0
  %1023 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1022, i32 0, i32 1
  %1024 = bitcast %union.vec64_t* %1023 to %struct.uint64v1_t*
  %1025 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1024, i32 0, i32 0
  %MM0.i943 = getelementptr inbounds [1 x i64], [1 x i64]* %1025, i64 0, i64 0
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1027 = getelementptr inbounds %struct.MMX, %struct.MMX* %1026, i32 0, i32 0
  %1028 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1027, i64 0, i64 1
  %1029 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1028, i32 0, i32 1
  %1030 = bitcast %union.vec64_t* %1029 to %struct.uint64v1_t*
  %1031 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1030, i32 0, i32 0
  %MM1.i944 = getelementptr inbounds [1 x i64], [1 x i64]* %1031, i64 0, i64 0
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1033 = getelementptr inbounds %struct.MMX, %struct.MMX* %1032, i32 0, i32 0
  %1034 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1033, i64 0, i64 2
  %1035 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1034, i32 0, i32 1
  %1036 = bitcast %union.vec64_t* %1035 to %struct.uint64v1_t*
  %1037 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1036, i32 0, i32 0
  %MM2.i945 = getelementptr inbounds [1 x i64], [1 x i64]* %1037, i64 0, i64 0
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1039 = getelementptr inbounds %struct.MMX, %struct.MMX* %1038, i32 0, i32 0
  %1040 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1039, i64 0, i64 3
  %1041 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1040, i32 0, i32 1
  %1042 = bitcast %union.vec64_t* %1041 to %struct.uint64v1_t*
  %1043 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1042, i32 0, i32 0
  %MM3.i946 = getelementptr inbounds [1 x i64], [1 x i64]* %1043, i64 0, i64 0
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1045 = getelementptr inbounds %struct.MMX, %struct.MMX* %1044, i32 0, i32 0
  %1046 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1045, i64 0, i64 4
  %1047 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1046, i32 0, i32 1
  %1048 = bitcast %union.vec64_t* %1047 to %struct.uint64v1_t*
  %1049 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1048, i32 0, i32 0
  %MM4.i947 = getelementptr inbounds [1 x i64], [1 x i64]* %1049, i64 0, i64 0
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1051 = getelementptr inbounds %struct.MMX, %struct.MMX* %1050, i32 0, i32 0
  %1052 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1051, i64 0, i64 5
  %1053 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1052, i32 0, i32 1
  %1054 = bitcast %union.vec64_t* %1053 to %struct.uint64v1_t*
  %1055 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1054, i32 0, i32 0
  %MM5.i948 = getelementptr inbounds [1 x i64], [1 x i64]* %1055, i64 0, i64 0
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1057 = getelementptr inbounds %struct.MMX, %struct.MMX* %1056, i32 0, i32 0
  %1058 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1057, i64 0, i64 6
  %1059 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1058, i32 0, i32 1
  %1060 = bitcast %union.vec64_t* %1059 to %struct.uint64v1_t*
  %1061 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1060, i32 0, i32 0
  %MM6.i949 = getelementptr inbounds [1 x i64], [1 x i64]* %1061, i64 0, i64 0
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1063 = getelementptr inbounds %struct.MMX, %struct.MMX* %1062, i32 0, i32 0
  %1064 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1063, i64 0, i64 7
  %1065 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1064, i32 0, i32 1
  %1066 = bitcast %union.vec64_t* %1065 to %struct.uint64v1_t*
  %1067 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1066, i32 0, i32 0
  %MM7.i950 = getelementptr inbounds [1 x i64], [1 x i64]* %1067, i64 0, i64 0
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i951 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1068, i32 0, i32 5
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i952 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1069, i32 0, i32 1
  %1070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i953 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1070, i32 0, i32 11
  %1071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i954 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1071, i32 0, i32 13
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i955 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1072, i32 0, i32 3
  %1073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i956 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1073, i32 0, i32 9
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i957 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1074, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i809, align 8, !noalias !2457
  store i64* @DR1, i64** %_DR1.i810, align 8, !noalias !2457
  store i64* @DR2, i64** %_DR2.i811, align 8, !noalias !2457
  store i64* @DR3, i64** %_DR3.i812, align 8, !noalias !2457
  store i64* @DR4, i64** %_DR4.i813, align 8, !noalias !2457
  store i64* @DR5, i64** %_DR5.i814, align 8, !noalias !2457
  store i64* @DR6, i64** %_DR6.i815, align 8, !noalias !2457
  store i64* @DR7, i64** %_DR7.i816, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i817, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i818, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i819, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i820, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i821, align 8, !noalias !2457
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i822, align 8, !noalias !2457
  %1075 = bitcast %"class.std::bitset"* %YMM0.i903 to double*
  %1076 = load double, double* %1075, !alias.scope !2461, !noalias !2462
  %1077 = load i64, i64* %RSP.i884, !alias.scope !2461, !noalias !2462
  %1078 = load %struct.Memory*, %struct.Memory** %MEMORY.i808, !noalias !2457
  %1079 = inttoptr i64 %1077 to i64*
  %1080 = load i64, i64* %1079
  store i64 %1080, i64* %PC.i823, !alias.scope !2461, !noalias !2462
  %1081 = add i64 %1077, 8
  store i64 %1081, i64* %RSP.i884, !alias.scope !2461, !noalias !2462
  %1082 = call double @sin(double %1076)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i903, !alias.scope !2461, !noalias !2462
  %1083 = bitcast %"class.std::bitset"* %YMM0.i903 to double*
  store double %1082, double* %1083, !alias.scope !2461, !noalias !2462
  %1084 = load %struct.Memory*, %struct.Memory** %MEMORY.i808, !noalias !2457
  %1085 = bitcast %struct.State** %state.i799 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1085)
  %1086 = bitcast i64* %curr_pc.i800 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1086)
  %1087 = bitcast %struct.Memory** %memory.i801 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1087)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i802)
  %1088 = bitcast i64* %SS_BASE.i803 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1088)
  %1089 = bitcast i64* %ES_BASE.i804 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1089)
  %1090 = bitcast i64* %DS_BASE.i805 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1090)
  %1091 = bitcast i64* %CS_BASE.i806 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1091)
  %1092 = bitcast %struct.State** %STATE.i807 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1092)
  %1093 = bitcast %struct.Memory** %MEMORY.i808 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1093)
  %1094 = bitcast i64** %_DR0.i809 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1094)
  %1095 = bitcast i64** %_DR1.i810 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1095)
  %1096 = bitcast i64** %_DR2.i811 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1096)
  %1097 = bitcast i64** %_DR3.i812 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1097)
  %1098 = bitcast i64** %_DR4.i813 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1098)
  %1099 = bitcast i64** %_DR5.i814 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1099)
  %1100 = bitcast i64** %_DR6.i815 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1100)
  %1101 = bitcast i64** %_DR7.i816 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1101)
  %1102 = bitcast i64** %CR0.i817 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1102)
  %1103 = bitcast i64** %CR1.i818 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1103)
  %1104 = bitcast i64** %CR2.i819 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1104)
  %1105 = bitcast i64** %CR3.i820 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1105)
  %1106 = bitcast i64** %CR4.i821 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1106)
  %1107 = bitcast i64** %CR8.i822 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1107)
  %1108 = load i64, i64* %RBP
  %1109 = sub i64 %1108, 48
  %1110 = bitcast %union.vec128_t* %XMM0 to i8*
  %1111 = load i64, i64* %PC
  %1112 = add i64 %1111, 5
  store i64 %1112, i64* %PC
  %1113 = bitcast i8* %1110 to double*
  %1114 = load double, double* %1113, align 1
  %1115 = inttoptr i64 %1109 to double*
  store double %1114, double* %1115
  %1116 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1117 = load i64, i64* %RBP
  %1118 = sub i64 %1117, 72
  %1119 = load i64, i64* %PC
  %1120 = add i64 %1119, 5
  store i64 %1120, i64* %PC
  %1121 = inttoptr i64 %1118 to double*
  %1122 = load double, double* %1121
  %1123 = bitcast i8* %1116 to double*
  store double %1122, double* %1123, align 1, !tbaa !2452
  %1124 = getelementptr inbounds i8, i8* %1116, i64 8
  %1125 = bitcast i8* %1124 to double*
  store double 0.000000e+00, double* %1125, align 1, !tbaa !2452
  %1126 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1127 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1128 = load i64, i64* %PC
  %1129 = add i64 %1128, 9
  store i64 %1129, i64* %PC
  %1130 = bitcast i8* %1127 to double*
  %1131 = load double, double* %1130, align 1
  %1132 = getelementptr inbounds i8, i8* %1127, i64 8
  %1133 = bitcast i8* %1132 to i64*
  %1134 = load i64, i64* %1133, align 1
  %1135 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1136 = fmul double %1131, %1135
  %1137 = bitcast i8* %1126 to double*
  store double %1136, double* %1137, align 1, !tbaa !2452
  %1138 = getelementptr inbounds i8, i8* %1126, i64 8
  %1139 = bitcast i8* %1138 to i64*
  store i64 %1134, i64* %1139, align 1, !tbaa !2452
  %1140 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1141 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1142 = load i64, i64* %RBP
  %1143 = sub i64 %1142, 48
  %1144 = load i64, i64* %PC
  %1145 = add i64 %1144, 5
  store i64 %1145, i64* %PC
  %1146 = bitcast i8* %1141 to double*
  %1147 = load double, double* %1146, align 1
  %1148 = getelementptr inbounds i8, i8* %1141, i64 8
  %1149 = bitcast i8* %1148 to i64*
  %1150 = load i64, i64* %1149, align 1
  %1151 = inttoptr i64 %1143 to double*
  %1152 = load double, double* %1151
  %1153 = fmul double %1147, %1152
  %1154 = bitcast i8* %1140 to double*
  store double %1153, double* %1154, align 1, !tbaa !2452
  %1155 = getelementptr inbounds i8, i8* %1140, i64 8
  %1156 = bitcast i8* %1155 to i64*
  store i64 %1150, i64* %1156, align 1, !tbaa !2452
  %1157 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1158 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1159 = load i64, i64* %RBP
  %1160 = sub i64 %1159, 48
  %1161 = load i64, i64* %PC
  %1162 = add i64 %1161, 5
  store i64 %1162, i64* %PC
  %1163 = bitcast i8* %1158 to double*
  %1164 = load double, double* %1163, align 1
  %1165 = getelementptr inbounds i8, i8* %1158, i64 8
  %1166 = bitcast i8* %1165 to i64*
  %1167 = load i64, i64* %1166, align 1
  %1168 = inttoptr i64 %1160 to double*
  %1169 = load double, double* %1168
  %1170 = fmul double %1164, %1169
  %1171 = bitcast i8* %1157 to double*
  store double %1170, double* %1171, align 1, !tbaa !2452
  %1172 = getelementptr inbounds i8, i8* %1157, i64 8
  %1173 = bitcast i8* %1172 to i64*
  store i64 %1167, i64* %1173, align 1, !tbaa !2452
  %1174 = load i64, i64* %RBP
  %1175 = sub i64 %1174, 48
  %1176 = bitcast %union.vec128_t* %XMM0 to i8*
  %1177 = load i64, i64* %PC
  %1178 = add i64 %1177, 5
  store i64 %1178, i64* %PC
  %1179 = bitcast i8* %1176 to double*
  %1180 = load double, double* %1179, align 1
  %1181 = inttoptr i64 %1175 to double*
  store double %1180, double* %1181
  %1182 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1183 = load i64, i64* %PC
  %1184 = add i64 %1183, 9
  store i64 %1184, i64* %PC
  %1185 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %1186 = bitcast i8* %1182 to double*
  store double %1185, double* %1186, align 1, !tbaa !2452
  %1187 = getelementptr inbounds i8, i8* %1182, i64 8
  %1188 = bitcast i8* %1187 to double*
  store double 0.000000e+00, double* %1188, align 1, !tbaa !2452
  %1189 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1190 = load i64, i64* %RBP
  %1191 = sub i64 %1190, 40
  %1192 = load i64, i64* %PC
  %1193 = add i64 %1192, 5
  store i64 %1193, i64* %PC
  %1194 = inttoptr i64 %1191 to double*
  %1195 = load double, double* %1194
  %1196 = bitcast i8* %1189 to double*
  store double %1195, double* %1196, align 1, !tbaa !2452
  %1197 = getelementptr inbounds i8, i8* %1189, i64 8
  %1198 = bitcast i8* %1197 to double*
  store double 0.000000e+00, double* %1198, align 1, !tbaa !2452
  %1199 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1200 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1201 = load i64, i64* %RBP
  %1202 = sub i64 %1201, 8
  %1203 = load i64, i64* %PC
  %1204 = add i64 %1203, 5
  store i64 %1204, i64* %PC
  %1205 = bitcast i8* %1200 to double*
  %1206 = load double, double* %1205, align 1
  %1207 = getelementptr inbounds i8, i8* %1200, i64 8
  %1208 = bitcast i8* %1207 to i64*
  %1209 = load i64, i64* %1208, align 1
  %1210 = inttoptr i64 %1202 to double*
  %1211 = load double, double* %1210
  %1212 = fadd double %1206, %1211
  %1213 = bitcast i8* %1199 to double*
  store double %1212, double* %1213, align 1, !tbaa !2452
  %1214 = getelementptr inbounds i8, i8* %1199, i64 8
  %1215 = bitcast i8* %1214 to i64*
  store i64 %1209, i64* %1215, align 1, !tbaa !2452
  %1216 = load i64, i64* %RBP
  %1217 = sub i64 %1216, 80
  %1218 = bitcast %union.vec128_t* %XMM0 to i8*
  %1219 = load i64, i64* %PC
  %1220 = add i64 %1219, 5
  store i64 %1220, i64* %PC
  %1221 = bitcast i8* %1218 to double*
  %1222 = load double, double* %1221, align 1
  %1223 = inttoptr i64 %1217 to double*
  store double %1222, double* %1223
  %1224 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1225 = bitcast %union.vec128_t* %XMM1 to i8*
  %1226 = load i64, i64* %PC
  %1227 = add i64 %1226, 3
  store i64 %1227, i64* %PC
  %1228 = bitcast i8* %1225 to <2 x i32>*
  %1229 = load <2 x i32>, <2 x i32>* %1228, align 1
  %1230 = getelementptr inbounds i8, i8* %1225, i64 8
  %1231 = bitcast i8* %1230 to <2 x i32>*
  %1232 = load <2 x i32>, <2 x i32>* %1231, align 1
  %1233 = extractelement <2 x i32> %1229, i32 0
  %1234 = bitcast i8* %1224 to i32*
  store i32 %1233, i32* %1234, align 1, !tbaa !2455
  %1235 = extractelement <2 x i32> %1229, i32 1
  %1236 = getelementptr inbounds i8, i8* %1224, i64 4
  %1237 = bitcast i8* %1236 to i32*
  store i32 %1235, i32* %1237, align 1, !tbaa !2455
  %1238 = extractelement <2 x i32> %1232, i32 0
  %1239 = getelementptr inbounds i8, i8* %1224, i64 8
  %1240 = bitcast i8* %1239 to i32*
  store i32 %1238, i32* %1240, align 1, !tbaa !2455
  %1241 = extractelement <2 x i32> %1232, i32 1
  %1242 = getelementptr inbounds i8, i8* %1224, i64 12
  %1243 = bitcast i8* %1242 to i32*
  store i32 %1241, i32* %1243, align 1, !tbaa !2455
  %1244 = load i64, i64* %PC
  %1245 = sub i64 %1244, 3575
  %1246 = load i64, i64* %PC
  %1247 = add i64 %1246, 5
  %1248 = load i64, i64* %PC
  %1249 = add i64 %1248, 5
  store i64 %1249, i64* %PC
  %1250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1251 = load i64, i64* %1250, align 8, !tbaa !2428
  %1252 = add i64 %1251, -8
  %1253 = inttoptr i64 %1252 to i64*
  store i64 %1247, i64* %1253
  store i64 %1252, i64* %1250, align 8, !tbaa !2428
  %1254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1245, i64* %1254, align 8, !tbaa !2428
  %1255 = load i64, i64* %PC
  %1256 = bitcast %struct.State** %state.i640 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1256)
  %1257 = bitcast i64* %curr_pc.i641 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1257)
  %1258 = bitcast %struct.Memory** %memory.i642 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1258)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i643)
  %1259 = bitcast i64* %SS_BASE.i644 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1259)
  %1260 = bitcast i64* %ES_BASE.i645 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1260)
  %1261 = bitcast i64* %DS_BASE.i646 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1261)
  %1262 = bitcast i64* %CS_BASE.i647 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1262)
  %1263 = bitcast %struct.State** %STATE.i648 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1263)
  %1264 = bitcast %struct.Memory** %MEMORY.i649 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1264)
  %1265 = bitcast i64** %_DR0.i650 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1265)
  %1266 = bitcast i64** %_DR1.i651 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1266)
  %1267 = bitcast i64** %_DR2.i652 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1267)
  %1268 = bitcast i64** %_DR3.i653 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1268)
  %1269 = bitcast i64** %_DR4.i654 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1269)
  %1270 = bitcast i64** %_DR5.i655 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1270)
  %1271 = bitcast i64** %_DR6.i656 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1271)
  %1272 = bitcast i64** %_DR7.i657 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1272)
  %1273 = bitcast i64** %CR0.i658 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1273)
  %1274 = bitcast i64** %CR1.i659 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1274)
  %1275 = bitcast i64** %CR2.i660 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1275)
  %1276 = bitcast i64** %CR3.i661 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1276)
  %1277 = bitcast i64** %CR4.i662 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1277)
  %1278 = bitcast i64** %CR8.i663 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1278)
  store %struct.State* %0, %struct.State** %state.i640, align 8, !noalias !2463
  store i64 %1255, i64* %curr_pc.i641, align 8, !noalias !2463
  store %struct.Memory* %1084, %struct.Memory** %memory.i642, align 8, !noalias !2463
  store i8 0, i8* %BRANCH_TAKEN.i643, align 1, !noalias !2463
  store i64 0, i64* %SS_BASE.i644, align 8, !noalias !2463
  store i64 0, i64* %ES_BASE.i645, align 8, !noalias !2463
  store i64 0, i64* %DS_BASE.i646, align 8, !noalias !2463
  store i64 0, i64* %CS_BASE.i647, align 8, !noalias !2463
  store %struct.State* %0, %struct.State** %STATE.i648, align 8, !noalias !2463
  store %struct.Memory* %1084, %struct.Memory** %MEMORY.i649, align 8, !noalias !2463
  %1279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1280 = getelementptr inbounds %struct.GPR, %struct.GPR* %1279, i32 0, i32 33
  %1281 = getelementptr inbounds %struct.Reg, %struct.Reg* %1280, i32 0, i32 0
  %PC.i664 = bitcast %union.anon* %1281 to i64*
  store i64 %1255, i64* %PC.i664, align 8, !alias.scope !2467, !noalias !2468
  %1282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1283 = getelementptr inbounds %struct.GPR, %struct.GPR* %1282, i32 0, i32 1
  %1284 = getelementptr inbounds %struct.Reg, %struct.Reg* %1283, i32 0, i32 0
  %1285 = bitcast %union.anon* %1284 to %struct.anon.2*
  %AH.i665 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1285, i32 0, i32 1
  %1286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1287 = getelementptr inbounds %struct.GPR, %struct.GPR* %1286, i32 0, i32 3
  %1288 = getelementptr inbounds %struct.Reg, %struct.Reg* %1287, i32 0, i32 0
  %1289 = bitcast %union.anon* %1288 to %struct.anon.2*
  %BH.i666 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1289, i32 0, i32 1
  %1290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1291 = getelementptr inbounds %struct.GPR, %struct.GPR* %1290, i32 0, i32 5
  %1292 = getelementptr inbounds %struct.Reg, %struct.Reg* %1291, i32 0, i32 0
  %1293 = bitcast %union.anon* %1292 to %struct.anon.2*
  %CH.i667 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1293, i32 0, i32 1
  %1294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1295 = getelementptr inbounds %struct.GPR, %struct.GPR* %1294, i32 0, i32 7
  %1296 = getelementptr inbounds %struct.Reg, %struct.Reg* %1295, i32 0, i32 0
  %1297 = bitcast %union.anon* %1296 to %struct.anon.2*
  %DH.i668 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1297, i32 0, i32 1
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1299 = getelementptr inbounds %struct.GPR, %struct.GPR* %1298, i32 0, i32 1
  %1300 = getelementptr inbounds %struct.Reg, %struct.Reg* %1299, i32 0, i32 0
  %1301 = bitcast %union.anon* %1300 to %struct.anon.2*
  %AL.i669 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1301, i32 0, i32 0
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1303 = getelementptr inbounds %struct.GPR, %struct.GPR* %1302, i32 0, i32 3
  %1304 = getelementptr inbounds %struct.Reg, %struct.Reg* %1303, i32 0, i32 0
  %1305 = bitcast %union.anon* %1304 to %struct.anon.2*
  %BL.i670 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1305, i32 0, i32 0
  %1306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1307 = getelementptr inbounds %struct.GPR, %struct.GPR* %1306, i32 0, i32 5
  %1308 = getelementptr inbounds %struct.Reg, %struct.Reg* %1307, i32 0, i32 0
  %1309 = bitcast %union.anon* %1308 to %struct.anon.2*
  %CL.i671 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1309, i32 0, i32 0
  %1310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1311 = getelementptr inbounds %struct.GPR, %struct.GPR* %1310, i32 0, i32 7
  %1312 = getelementptr inbounds %struct.Reg, %struct.Reg* %1311, i32 0, i32 0
  %1313 = bitcast %union.anon* %1312 to %struct.anon.2*
  %DL.i672 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1313, i32 0, i32 0
  %1314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1315 = getelementptr inbounds %struct.GPR, %struct.GPR* %1314, i32 0, i32 9
  %1316 = getelementptr inbounds %struct.Reg, %struct.Reg* %1315, i32 0, i32 0
  %1317 = bitcast %union.anon* %1316 to %struct.anon.2*
  %SIL.i673 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1317, i32 0, i32 0
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 11
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %1321 = bitcast %union.anon* %1320 to %struct.anon.2*
  %DIL.i674 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1321, i32 0, i32 0
  %1322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1323 = getelementptr inbounds %struct.GPR, %struct.GPR* %1322, i32 0, i32 13
  %1324 = getelementptr inbounds %struct.Reg, %struct.Reg* %1323, i32 0, i32 0
  %1325 = bitcast %union.anon* %1324 to %struct.anon.2*
  %SPL.i675 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1325, i32 0, i32 0
  %1326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1327 = getelementptr inbounds %struct.GPR, %struct.GPR* %1326, i32 0, i32 15
  %1328 = getelementptr inbounds %struct.Reg, %struct.Reg* %1327, i32 0, i32 0
  %1329 = bitcast %union.anon* %1328 to %struct.anon.2*
  %BPL.i676 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1329, i32 0, i32 0
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 17
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %1333 = bitcast %union.anon* %1332 to %struct.anon.2*
  %R8B.i677 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1333, i32 0, i32 0
  %1334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1335 = getelementptr inbounds %struct.GPR, %struct.GPR* %1334, i32 0, i32 19
  %1336 = getelementptr inbounds %struct.Reg, %struct.Reg* %1335, i32 0, i32 0
  %1337 = bitcast %union.anon* %1336 to %struct.anon.2*
  %R9B.i678 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1337, i32 0, i32 0
  %1338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1339 = getelementptr inbounds %struct.GPR, %struct.GPR* %1338, i32 0, i32 21
  %1340 = getelementptr inbounds %struct.Reg, %struct.Reg* %1339, i32 0, i32 0
  %1341 = bitcast %union.anon* %1340 to %struct.anon.2*
  %R10B.i679 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1341, i32 0, i32 0
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1343 = getelementptr inbounds %struct.GPR, %struct.GPR* %1342, i32 0, i32 23
  %1344 = getelementptr inbounds %struct.Reg, %struct.Reg* %1343, i32 0, i32 0
  %1345 = bitcast %union.anon* %1344 to %struct.anon.2*
  %R11B.i680 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1345, i32 0, i32 0
  %1346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1347 = getelementptr inbounds %struct.GPR, %struct.GPR* %1346, i32 0, i32 25
  %1348 = getelementptr inbounds %struct.Reg, %struct.Reg* %1347, i32 0, i32 0
  %1349 = bitcast %union.anon* %1348 to %struct.anon.2*
  %R12B.i681 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1349, i32 0, i32 0
  %1350 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1351 = getelementptr inbounds %struct.GPR, %struct.GPR* %1350, i32 0, i32 27
  %1352 = getelementptr inbounds %struct.Reg, %struct.Reg* %1351, i32 0, i32 0
  %1353 = bitcast %union.anon* %1352 to %struct.anon.2*
  %R13B.i682 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1353, i32 0, i32 0
  %1354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1355 = getelementptr inbounds %struct.GPR, %struct.GPR* %1354, i32 0, i32 29
  %1356 = getelementptr inbounds %struct.Reg, %struct.Reg* %1355, i32 0, i32 0
  %1357 = bitcast %union.anon* %1356 to %struct.anon.2*
  %R14B.i683 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1357, i32 0, i32 0
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1359 = getelementptr inbounds %struct.GPR, %struct.GPR* %1358, i32 0, i32 31
  %1360 = getelementptr inbounds %struct.Reg, %struct.Reg* %1359, i32 0, i32 0
  %1361 = bitcast %union.anon* %1360 to %struct.anon.2*
  %R15B.i684 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1361, i32 0, i32 0
  %1362 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1363 = getelementptr inbounds %struct.GPR, %struct.GPR* %1362, i32 0, i32 1
  %1364 = getelementptr inbounds %struct.Reg, %struct.Reg* %1363, i32 0, i32 0
  %AX.i685 = bitcast %union.anon* %1364 to i16*
  %1365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1366 = getelementptr inbounds %struct.GPR, %struct.GPR* %1365, i32 0, i32 3
  %1367 = getelementptr inbounds %struct.Reg, %struct.Reg* %1366, i32 0, i32 0
  %BX.i686 = bitcast %union.anon* %1367 to i16*
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 5
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %CX.i687 = bitcast %union.anon* %1370 to i16*
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1372 = getelementptr inbounds %struct.GPR, %struct.GPR* %1371, i32 0, i32 7
  %1373 = getelementptr inbounds %struct.Reg, %struct.Reg* %1372, i32 0, i32 0
  %DX.i688 = bitcast %union.anon* %1373 to i16*
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1375 = getelementptr inbounds %struct.GPR, %struct.GPR* %1374, i32 0, i32 9
  %1376 = getelementptr inbounds %struct.Reg, %struct.Reg* %1375, i32 0, i32 0
  %SI.i689 = bitcast %union.anon* %1376 to i16*
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1378 = getelementptr inbounds %struct.GPR, %struct.GPR* %1377, i32 0, i32 11
  %1379 = getelementptr inbounds %struct.Reg, %struct.Reg* %1378, i32 0, i32 0
  %DI.i690 = bitcast %union.anon* %1379 to i16*
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 13
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %SP.i691 = bitcast %union.anon* %1382 to i16*
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1384 = getelementptr inbounds %struct.GPR, %struct.GPR* %1383, i32 0, i32 15
  %1385 = getelementptr inbounds %struct.Reg, %struct.Reg* %1384, i32 0, i32 0
  %BP.i692 = bitcast %union.anon* %1385 to i16*
  %1386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1387 = getelementptr inbounds %struct.GPR, %struct.GPR* %1386, i32 0, i32 17
  %1388 = getelementptr inbounds %struct.Reg, %struct.Reg* %1387, i32 0, i32 0
  %R8W.i693 = bitcast %union.anon* %1388 to i16*
  %1389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1390 = getelementptr inbounds %struct.GPR, %struct.GPR* %1389, i32 0, i32 19
  %1391 = getelementptr inbounds %struct.Reg, %struct.Reg* %1390, i32 0, i32 0
  %R9W.i694 = bitcast %union.anon* %1391 to i16*
  %1392 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1393 = getelementptr inbounds %struct.GPR, %struct.GPR* %1392, i32 0, i32 21
  %1394 = getelementptr inbounds %struct.Reg, %struct.Reg* %1393, i32 0, i32 0
  %R10W.i695 = bitcast %union.anon* %1394 to i16*
  %1395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1396 = getelementptr inbounds %struct.GPR, %struct.GPR* %1395, i32 0, i32 23
  %1397 = getelementptr inbounds %struct.Reg, %struct.Reg* %1396, i32 0, i32 0
  %R11W.i696 = bitcast %union.anon* %1397 to i16*
  %1398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1399 = getelementptr inbounds %struct.GPR, %struct.GPR* %1398, i32 0, i32 25
  %1400 = getelementptr inbounds %struct.Reg, %struct.Reg* %1399, i32 0, i32 0
  %R12W.i697 = bitcast %union.anon* %1400 to i16*
  %1401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1402 = getelementptr inbounds %struct.GPR, %struct.GPR* %1401, i32 0, i32 27
  %1403 = getelementptr inbounds %struct.Reg, %struct.Reg* %1402, i32 0, i32 0
  %R13W.i698 = bitcast %union.anon* %1403 to i16*
  %1404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1405 = getelementptr inbounds %struct.GPR, %struct.GPR* %1404, i32 0, i32 29
  %1406 = getelementptr inbounds %struct.Reg, %struct.Reg* %1405, i32 0, i32 0
  %R14W.i699 = bitcast %union.anon* %1406 to i16*
  %1407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1408 = getelementptr inbounds %struct.GPR, %struct.GPR* %1407, i32 0, i32 31
  %1409 = getelementptr inbounds %struct.Reg, %struct.Reg* %1408, i32 0, i32 0
  %R15W.i700 = bitcast %union.anon* %1409 to i16*
  %1410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1411 = getelementptr inbounds %struct.GPR, %struct.GPR* %1410, i32 0, i32 33
  %1412 = getelementptr inbounds %struct.Reg, %struct.Reg* %1411, i32 0, i32 0
  %IP.i701 = bitcast %union.anon* %1412 to i16*
  %1413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1414 = getelementptr inbounds %struct.GPR, %struct.GPR* %1413, i32 0, i32 1
  %1415 = getelementptr inbounds %struct.Reg, %struct.Reg* %1414, i32 0, i32 0
  %EAX.i702 = bitcast %union.anon* %1415 to i32*
  %1416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1417 = getelementptr inbounds %struct.GPR, %struct.GPR* %1416, i32 0, i32 3
  %1418 = getelementptr inbounds %struct.Reg, %struct.Reg* %1417, i32 0, i32 0
  %EBX.i703 = bitcast %union.anon* %1418 to i32*
  %1419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1420 = getelementptr inbounds %struct.GPR, %struct.GPR* %1419, i32 0, i32 5
  %1421 = getelementptr inbounds %struct.Reg, %struct.Reg* %1420, i32 0, i32 0
  %ECX.i704 = bitcast %union.anon* %1421 to i32*
  %1422 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1423 = getelementptr inbounds %struct.GPR, %struct.GPR* %1422, i32 0, i32 7
  %1424 = getelementptr inbounds %struct.Reg, %struct.Reg* %1423, i32 0, i32 0
  %EDX.i705 = bitcast %union.anon* %1424 to i32*
  %1425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1426 = getelementptr inbounds %struct.GPR, %struct.GPR* %1425, i32 0, i32 9
  %1427 = getelementptr inbounds %struct.Reg, %struct.Reg* %1426, i32 0, i32 0
  %ESI.i706 = bitcast %union.anon* %1427 to i32*
  %1428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1429 = getelementptr inbounds %struct.GPR, %struct.GPR* %1428, i32 0, i32 11
  %1430 = getelementptr inbounds %struct.Reg, %struct.Reg* %1429, i32 0, i32 0
  %EDI.i707 = bitcast %union.anon* %1430 to i32*
  %1431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1432 = getelementptr inbounds %struct.GPR, %struct.GPR* %1431, i32 0, i32 13
  %1433 = getelementptr inbounds %struct.Reg, %struct.Reg* %1432, i32 0, i32 0
  %ESP.i708 = bitcast %union.anon* %1433 to i32*
  %1434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1435 = getelementptr inbounds %struct.GPR, %struct.GPR* %1434, i32 0, i32 15
  %1436 = getelementptr inbounds %struct.Reg, %struct.Reg* %1435, i32 0, i32 0
  %EBP.i709 = bitcast %union.anon* %1436 to i32*
  %1437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1438 = getelementptr inbounds %struct.GPR, %struct.GPR* %1437, i32 0, i32 33
  %1439 = getelementptr inbounds %struct.Reg, %struct.Reg* %1438, i32 0, i32 0
  %EIP.i710 = bitcast %union.anon* %1439 to i32*
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1441 = getelementptr inbounds %struct.GPR, %struct.GPR* %1440, i32 0, i32 17
  %1442 = getelementptr inbounds %struct.Reg, %struct.Reg* %1441, i32 0, i32 0
  %R8D.i711 = bitcast %union.anon* %1442 to i32*
  %1443 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1444 = getelementptr inbounds %struct.GPR, %struct.GPR* %1443, i32 0, i32 19
  %1445 = getelementptr inbounds %struct.Reg, %struct.Reg* %1444, i32 0, i32 0
  %R9D.i712 = bitcast %union.anon* %1445 to i32*
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1447 = getelementptr inbounds %struct.GPR, %struct.GPR* %1446, i32 0, i32 21
  %1448 = getelementptr inbounds %struct.Reg, %struct.Reg* %1447, i32 0, i32 0
  %R10D.i713 = bitcast %union.anon* %1448 to i32*
  %1449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1450 = getelementptr inbounds %struct.GPR, %struct.GPR* %1449, i32 0, i32 23
  %1451 = getelementptr inbounds %struct.Reg, %struct.Reg* %1450, i32 0, i32 0
  %R11D.i714 = bitcast %union.anon* %1451 to i32*
  %1452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1453 = getelementptr inbounds %struct.GPR, %struct.GPR* %1452, i32 0, i32 25
  %1454 = getelementptr inbounds %struct.Reg, %struct.Reg* %1453, i32 0, i32 0
  %R12D.i715 = bitcast %union.anon* %1454 to i32*
  %1455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1456 = getelementptr inbounds %struct.GPR, %struct.GPR* %1455, i32 0, i32 27
  %1457 = getelementptr inbounds %struct.Reg, %struct.Reg* %1456, i32 0, i32 0
  %R13D.i716 = bitcast %union.anon* %1457 to i32*
  %1458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1459 = getelementptr inbounds %struct.GPR, %struct.GPR* %1458, i32 0, i32 29
  %1460 = getelementptr inbounds %struct.Reg, %struct.Reg* %1459, i32 0, i32 0
  %R14D.i717 = bitcast %union.anon* %1460 to i32*
  %1461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1462 = getelementptr inbounds %struct.GPR, %struct.GPR* %1461, i32 0, i32 31
  %1463 = getelementptr inbounds %struct.Reg, %struct.Reg* %1462, i32 0, i32 0
  %R15D.i718 = bitcast %union.anon* %1463 to i32*
  %1464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1465 = getelementptr inbounds %struct.GPR, %struct.GPR* %1464, i32 0, i32 1
  %1466 = getelementptr inbounds %struct.Reg, %struct.Reg* %1465, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %1466 to i64*
  %1467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1468 = getelementptr inbounds %struct.GPR, %struct.GPR* %1467, i32 0, i32 3
  %1469 = getelementptr inbounds %struct.Reg, %struct.Reg* %1468, i32 0, i32 0
  %RBX.i720 = bitcast %union.anon* %1469 to i64*
  %1470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1471 = getelementptr inbounds %struct.GPR, %struct.GPR* %1470, i32 0, i32 5
  %1472 = getelementptr inbounds %struct.Reg, %struct.Reg* %1471, i32 0, i32 0
  %RCX.i721 = bitcast %union.anon* %1472 to i64*
  %1473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1474 = getelementptr inbounds %struct.GPR, %struct.GPR* %1473, i32 0, i32 7
  %1475 = getelementptr inbounds %struct.Reg, %struct.Reg* %1474, i32 0, i32 0
  %RDX.i722 = bitcast %union.anon* %1475 to i64*
  %1476 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1477 = getelementptr inbounds %struct.GPR, %struct.GPR* %1476, i32 0, i32 9
  %1478 = getelementptr inbounds %struct.Reg, %struct.Reg* %1477, i32 0, i32 0
  %RSI.i723 = bitcast %union.anon* %1478 to i64*
  %1479 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1480 = getelementptr inbounds %struct.GPR, %struct.GPR* %1479, i32 0, i32 11
  %1481 = getelementptr inbounds %struct.Reg, %struct.Reg* %1480, i32 0, i32 0
  %RDI.i724 = bitcast %union.anon* %1481 to i64*
  %1482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1483 = getelementptr inbounds %struct.GPR, %struct.GPR* %1482, i32 0, i32 13
  %1484 = getelementptr inbounds %struct.Reg, %struct.Reg* %1483, i32 0, i32 0
  %RSP.i725 = bitcast %union.anon* %1484 to i64*
  %1485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1486 = getelementptr inbounds %struct.GPR, %struct.GPR* %1485, i32 0, i32 15
  %1487 = getelementptr inbounds %struct.Reg, %struct.Reg* %1486, i32 0, i32 0
  %RBP.i726 = bitcast %union.anon* %1487 to i64*
  %1488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1489 = getelementptr inbounds %struct.GPR, %struct.GPR* %1488, i32 0, i32 17
  %1490 = getelementptr inbounds %struct.Reg, %struct.Reg* %1489, i32 0, i32 0
  %R8.i727 = bitcast %union.anon* %1490 to i64*
  %1491 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1492 = getelementptr inbounds %struct.GPR, %struct.GPR* %1491, i32 0, i32 19
  %1493 = getelementptr inbounds %struct.Reg, %struct.Reg* %1492, i32 0, i32 0
  %R9.i728 = bitcast %union.anon* %1493 to i64*
  %1494 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1495 = getelementptr inbounds %struct.GPR, %struct.GPR* %1494, i32 0, i32 21
  %1496 = getelementptr inbounds %struct.Reg, %struct.Reg* %1495, i32 0, i32 0
  %R10.i729 = bitcast %union.anon* %1496 to i64*
  %1497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1498 = getelementptr inbounds %struct.GPR, %struct.GPR* %1497, i32 0, i32 23
  %1499 = getelementptr inbounds %struct.Reg, %struct.Reg* %1498, i32 0, i32 0
  %R11.i730 = bitcast %union.anon* %1499 to i64*
  %1500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1501 = getelementptr inbounds %struct.GPR, %struct.GPR* %1500, i32 0, i32 25
  %1502 = getelementptr inbounds %struct.Reg, %struct.Reg* %1501, i32 0, i32 0
  %R12.i731 = bitcast %union.anon* %1502 to i64*
  %1503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1504 = getelementptr inbounds %struct.GPR, %struct.GPR* %1503, i32 0, i32 27
  %1505 = getelementptr inbounds %struct.Reg, %struct.Reg* %1504, i32 0, i32 0
  %R13.i732 = bitcast %union.anon* %1505 to i64*
  %1506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1507 = getelementptr inbounds %struct.GPR, %struct.GPR* %1506, i32 0, i32 29
  %1508 = getelementptr inbounds %struct.Reg, %struct.Reg* %1507, i32 0, i32 0
  %R14.i733 = bitcast %union.anon* %1508 to i64*
  %1509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1510 = getelementptr inbounds %struct.GPR, %struct.GPR* %1509, i32 0, i32 31
  %1511 = getelementptr inbounds %struct.Reg, %struct.Reg* %1510, i32 0, i32 0
  %R15.i734 = bitcast %union.anon* %1511 to i64*
  %1512 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1513 = getelementptr inbounds %struct.GPR, %struct.GPR* %1512, i32 0, i32 33
  %1514 = getelementptr inbounds %struct.Reg, %struct.Reg* %1513, i32 0, i32 0
  %RIP.i735 = bitcast %union.anon* %1514 to i64*
  %1515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1516 = getelementptr inbounds %struct.Segments, %struct.Segments* %1515, i32 0, i32 1
  %SS.i736 = bitcast %union.SegmentSelector* %1516 to i16*
  %1517 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1518 = getelementptr inbounds %struct.Segments, %struct.Segments* %1517, i32 0, i32 3
  %ES.i737 = bitcast %union.SegmentSelector* %1518 to i16*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1520 = getelementptr inbounds %struct.Segments, %struct.Segments* %1519, i32 0, i32 5
  %GS.i738 = bitcast %union.SegmentSelector* %1520 to i16*
  %1521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1522 = getelementptr inbounds %struct.Segments, %struct.Segments* %1521, i32 0, i32 7
  %FS.i739 = bitcast %union.SegmentSelector* %1522 to i16*
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1524 = getelementptr inbounds %struct.Segments, %struct.Segments* %1523, i32 0, i32 9
  %DS.i740 = bitcast %union.SegmentSelector* %1524 to i16*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1526 = getelementptr inbounds %struct.Segments, %struct.Segments* %1525, i32 0, i32 11
  %CS.i741 = bitcast %union.SegmentSelector* %1526 to i16*
  %1527 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1528 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1527, i32 0, i32 5
  %1529 = getelementptr inbounds %struct.Reg, %struct.Reg* %1528, i32 0, i32 0
  %GS_BASE.i742 = bitcast %union.anon* %1529 to i64*
  %1530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1531 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1530, i32 0, i32 7
  %1532 = getelementptr inbounds %struct.Reg, %struct.Reg* %1531, i32 0, i32 0
  %FS_BASE.i743 = bitcast %union.anon* %1532 to i64*
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1534 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1533, i64 0, i64 0
  %YMM0.i744 = bitcast %union.VectorReg* %1534 to %"class.std::bitset"*
  %1535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1536 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1535, i64 0, i64 1
  %YMM1.i745 = bitcast %union.VectorReg* %1536 to %"class.std::bitset"*
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1538 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1537, i64 0, i64 2
  %YMM2.i746 = bitcast %union.VectorReg* %1538 to %"class.std::bitset"*
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1540 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1539, i64 0, i64 3
  %YMM3.i747 = bitcast %union.VectorReg* %1540 to %"class.std::bitset"*
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1542 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1541, i64 0, i64 4
  %YMM4.i748 = bitcast %union.VectorReg* %1542 to %"class.std::bitset"*
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1544 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1543, i64 0, i64 5
  %YMM5.i749 = bitcast %union.VectorReg* %1544 to %"class.std::bitset"*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1546 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1545, i64 0, i64 6
  %YMM6.i750 = bitcast %union.VectorReg* %1546 to %"class.std::bitset"*
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1548 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1547, i64 0, i64 7
  %YMM7.i751 = bitcast %union.VectorReg* %1548 to %"class.std::bitset"*
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1550 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1549, i64 0, i64 8
  %YMM8.i752 = bitcast %union.VectorReg* %1550 to %"class.std::bitset"*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1552 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1551, i64 0, i64 9
  %YMM9.i753 = bitcast %union.VectorReg* %1552 to %"class.std::bitset"*
  %1553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1554 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1553, i64 0, i64 10
  %YMM10.i754 = bitcast %union.VectorReg* %1554 to %"class.std::bitset"*
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1556 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1555, i64 0, i64 11
  %YMM11.i755 = bitcast %union.VectorReg* %1556 to %"class.std::bitset"*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1557, i64 0, i64 12
  %YMM12.i756 = bitcast %union.VectorReg* %1558 to %"class.std::bitset"*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1559, i64 0, i64 13
  %YMM13.i757 = bitcast %union.VectorReg* %1560 to %"class.std::bitset"*
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1561, i64 0, i64 14
  %YMM14.i758 = bitcast %union.VectorReg* %1562 to %"class.std::bitset"*
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1564 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1563, i64 0, i64 15
  %YMM15.i759 = bitcast %union.VectorReg* %1564 to %"class.std::bitset"*
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1565, i64 0, i64 0
  %XMM0.i760 = bitcast %union.VectorReg* %1566 to %union.vec128_t*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1567, i64 0, i64 1
  %XMM1.i761 = bitcast %union.VectorReg* %1568 to %union.vec128_t*
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1570 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1569, i64 0, i64 2
  %XMM2.i762 = bitcast %union.VectorReg* %1570 to %union.vec128_t*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1572 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1571, i64 0, i64 3
  %XMM3.i763 = bitcast %union.VectorReg* %1572 to %union.vec128_t*
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1574 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1573, i64 0, i64 4
  %XMM4.i764 = bitcast %union.VectorReg* %1574 to %union.vec128_t*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1576 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1575, i64 0, i64 5
  %XMM5.i765 = bitcast %union.VectorReg* %1576 to %union.vec128_t*
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1578 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1577, i64 0, i64 6
  %XMM6.i766 = bitcast %union.VectorReg* %1578 to %union.vec128_t*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1579, i64 0, i64 7
  %XMM7.i767 = bitcast %union.VectorReg* %1580 to %union.vec128_t*
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1581, i64 0, i64 8
  %XMM8.i768 = bitcast %union.VectorReg* %1582 to %union.vec128_t*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1583, i64 0, i64 9
  %XMM9.i769 = bitcast %union.VectorReg* %1584 to %union.vec128_t*
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1585, i64 0, i64 10
  %XMM10.i770 = bitcast %union.VectorReg* %1586 to %union.vec128_t*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1588 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1587, i64 0, i64 11
  %XMM11.i771 = bitcast %union.VectorReg* %1588 to %union.vec128_t*
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1589, i64 0, i64 12
  %XMM12.i772 = bitcast %union.VectorReg* %1590 to %union.vec128_t*
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1592 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1591, i64 0, i64 13
  %XMM13.i773 = bitcast %union.VectorReg* %1592 to %union.vec128_t*
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1593, i64 0, i64 14
  %XMM14.i774 = bitcast %union.VectorReg* %1594 to %union.vec128_t*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1595, i64 0, i64 15
  %XMM15.i775 = bitcast %union.VectorReg* %1596 to %union.vec128_t*
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1598 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1597, i32 0, i32 0
  %1599 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1598, i64 0, i64 0
  %ST0.i776 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1599, i32 0, i32 1
  %1600 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1601 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1600, i32 0, i32 0
  %1602 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1601, i64 0, i64 1
  %ST1.i777 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1602, i32 0, i32 1
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1604 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1603, i32 0, i32 0
  %1605 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1604, i64 0, i64 2
  %ST2.i778 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1605, i32 0, i32 1
  %1606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1607 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1606, i32 0, i32 0
  %1608 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1607, i64 0, i64 3
  %ST3.i779 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1608, i32 0, i32 1
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1610 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1609, i32 0, i32 0
  %1611 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1610, i64 0, i64 4
  %ST4.i780 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1611, i32 0, i32 1
  %1612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1613 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1612, i32 0, i32 0
  %1614 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1613, i64 0, i64 5
  %ST5.i781 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1614, i32 0, i32 1
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1616 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1615, i32 0, i32 0
  %1617 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1616, i64 0, i64 6
  %ST6.i782 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1617, i32 0, i32 1
  %1618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1619 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1618, i32 0, i32 0
  %1620 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1619, i64 0, i64 7
  %ST7.i783 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1620, i32 0, i32 1
  %1621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1622 = getelementptr inbounds %struct.MMX, %struct.MMX* %1621, i32 0, i32 0
  %1623 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1622, i64 0, i64 0
  %1624 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1623, i32 0, i32 1
  %1625 = bitcast %union.vec64_t* %1624 to %struct.uint64v1_t*
  %1626 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1625, i32 0, i32 0
  %MM0.i784 = getelementptr inbounds [1 x i64], [1 x i64]* %1626, i64 0, i64 0
  %1627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1628 = getelementptr inbounds %struct.MMX, %struct.MMX* %1627, i32 0, i32 0
  %1629 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1628, i64 0, i64 1
  %1630 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1629, i32 0, i32 1
  %1631 = bitcast %union.vec64_t* %1630 to %struct.uint64v1_t*
  %1632 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1631, i32 0, i32 0
  %MM1.i785 = getelementptr inbounds [1 x i64], [1 x i64]* %1632, i64 0, i64 0
  %1633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1634 = getelementptr inbounds %struct.MMX, %struct.MMX* %1633, i32 0, i32 0
  %1635 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1634, i64 0, i64 2
  %1636 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1635, i32 0, i32 1
  %1637 = bitcast %union.vec64_t* %1636 to %struct.uint64v1_t*
  %1638 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1637, i32 0, i32 0
  %MM2.i786 = getelementptr inbounds [1 x i64], [1 x i64]* %1638, i64 0, i64 0
  %1639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1640 = getelementptr inbounds %struct.MMX, %struct.MMX* %1639, i32 0, i32 0
  %1641 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1640, i64 0, i64 3
  %1642 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1641, i32 0, i32 1
  %1643 = bitcast %union.vec64_t* %1642 to %struct.uint64v1_t*
  %1644 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1643, i32 0, i32 0
  %MM3.i787 = getelementptr inbounds [1 x i64], [1 x i64]* %1644, i64 0, i64 0
  %1645 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1646 = getelementptr inbounds %struct.MMX, %struct.MMX* %1645, i32 0, i32 0
  %1647 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1646, i64 0, i64 4
  %1648 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1647, i32 0, i32 1
  %1649 = bitcast %union.vec64_t* %1648 to %struct.uint64v1_t*
  %1650 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1649, i32 0, i32 0
  %MM4.i788 = getelementptr inbounds [1 x i64], [1 x i64]* %1650, i64 0, i64 0
  %1651 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1652 = getelementptr inbounds %struct.MMX, %struct.MMX* %1651, i32 0, i32 0
  %1653 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1652, i64 0, i64 5
  %1654 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1653, i32 0, i32 1
  %1655 = bitcast %union.vec64_t* %1654 to %struct.uint64v1_t*
  %1656 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1655, i32 0, i32 0
  %MM5.i789 = getelementptr inbounds [1 x i64], [1 x i64]* %1656, i64 0, i64 0
  %1657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1658 = getelementptr inbounds %struct.MMX, %struct.MMX* %1657, i32 0, i32 0
  %1659 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1658, i64 0, i64 6
  %1660 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1659, i32 0, i32 1
  %1661 = bitcast %union.vec64_t* %1660 to %struct.uint64v1_t*
  %1662 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1661, i32 0, i32 0
  %MM6.i790 = getelementptr inbounds [1 x i64], [1 x i64]* %1662, i64 0, i64 0
  %1663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1664 = getelementptr inbounds %struct.MMX, %struct.MMX* %1663, i32 0, i32 0
  %1665 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1664, i64 0, i64 7
  %1666 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1665, i32 0, i32 1
  %1667 = bitcast %union.vec64_t* %1666 to %struct.uint64v1_t*
  %1668 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1667, i32 0, i32 0
  %MM7.i791 = getelementptr inbounds [1 x i64], [1 x i64]* %1668, i64 0, i64 0
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i792 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1669, i32 0, i32 5
  %1670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i793 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1670, i32 0, i32 1
  %1671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i794 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1671, i32 0, i32 11
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i795 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1672, i32 0, i32 13
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i796 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1673, i32 0, i32 3
  %1674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i797 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1674, i32 0, i32 9
  %1675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i798 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1675, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i650, align 8, !noalias !2463
  store i64* @DR1, i64** %_DR1.i651, align 8, !noalias !2463
  store i64* @DR2, i64** %_DR2.i652, align 8, !noalias !2463
  store i64* @DR3, i64** %_DR3.i653, align 8, !noalias !2463
  store i64* @DR4, i64** %_DR4.i654, align 8, !noalias !2463
  store i64* @DR5, i64** %_DR5.i655, align 8, !noalias !2463
  store i64* @DR6, i64** %_DR6.i656, align 8, !noalias !2463
  store i64* @DR7, i64** %_DR7.i657, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i658, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i659, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i660, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i661, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i662, align 8, !noalias !2463
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i663, align 8, !noalias !2463
  %1676 = bitcast %"class.std::bitset"* %YMM0.i744 to double*
  %1677 = load double, double* %1676, !alias.scope !2467, !noalias !2468
  %1678 = load i64, i64* %RSP.i725, !alias.scope !2467, !noalias !2468
  %1679 = load %struct.Memory*, %struct.Memory** %MEMORY.i649, !noalias !2463
  %1680 = inttoptr i64 %1678 to i64*
  %1681 = load i64, i64* %1680
  store i64 %1681, i64* %PC.i664, !alias.scope !2467, !noalias !2468
  %1682 = add i64 %1678, 8
  store i64 %1682, i64* %RSP.i725, !alias.scope !2467, !noalias !2468
  %1683 = call double @sin(double %1677)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i744, !alias.scope !2467, !noalias !2468
  %1684 = bitcast %"class.std::bitset"* %YMM0.i744 to double*
  store double %1683, double* %1684, !alias.scope !2467, !noalias !2468
  %1685 = load %struct.Memory*, %struct.Memory** %MEMORY.i649, !noalias !2463
  %1686 = bitcast %struct.State** %state.i640 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1686)
  %1687 = bitcast i64* %curr_pc.i641 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1687)
  %1688 = bitcast %struct.Memory** %memory.i642 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1688)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i643)
  %1689 = bitcast i64* %SS_BASE.i644 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1689)
  %1690 = bitcast i64* %ES_BASE.i645 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1690)
  %1691 = bitcast i64* %DS_BASE.i646 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1691)
  %1692 = bitcast i64* %CS_BASE.i647 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1692)
  %1693 = bitcast %struct.State** %STATE.i648 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1693)
  %1694 = bitcast %struct.Memory** %MEMORY.i649 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1694)
  %1695 = bitcast i64** %_DR0.i650 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1695)
  %1696 = bitcast i64** %_DR1.i651 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1696)
  %1697 = bitcast i64** %_DR2.i652 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1697)
  %1698 = bitcast i64** %_DR3.i653 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1698)
  %1699 = bitcast i64** %_DR4.i654 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1699)
  %1700 = bitcast i64** %_DR5.i655 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1700)
  %1701 = bitcast i64** %_DR6.i656 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1701)
  %1702 = bitcast i64** %_DR7.i657 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1702)
  %1703 = bitcast i64** %CR0.i658 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1703)
  %1704 = bitcast i64** %CR1.i659 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1704)
  %1705 = bitcast i64** %CR2.i660 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1705)
  %1706 = bitcast i64** %CR3.i661 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1706)
  %1707 = bitcast i64** %CR4.i662 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1707)
  %1708 = bitcast i64** %CR8.i663 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1708)
  %1709 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1710 = load i64, i64* %RBP
  %1711 = sub i64 %1710, 80
  %1712 = load i64, i64* %PC
  %1713 = add i64 %1712, 5
  store i64 %1713, i64* %PC
  %1714 = inttoptr i64 %1711 to double*
  %1715 = load double, double* %1714
  %1716 = bitcast i8* %1709 to double*
  store double %1715, double* %1716, align 1, !tbaa !2452
  %1717 = getelementptr inbounds i8, i8* %1709, i64 8
  %1718 = bitcast i8* %1717 to double*
  store double 0.000000e+00, double* %1718, align 1, !tbaa !2452
  %1719 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1720 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1721 = bitcast %union.vec128_t* %XMM0 to i8*
  %1722 = load i64, i64* %PC
  %1723 = add i64 %1722, 4
  store i64 %1723, i64* %PC
  %1724 = bitcast i8* %1720 to double*
  %1725 = load double, double* %1724, align 1
  %1726 = getelementptr inbounds i8, i8* %1720, i64 8
  %1727 = bitcast i8* %1726 to i64*
  %1728 = load i64, i64* %1727, align 1
  %1729 = bitcast i8* %1721 to double*
  %1730 = load double, double* %1729, align 1
  %1731 = fmul double %1725, %1730
  %1732 = bitcast i8* %1719 to double*
  store double %1731, double* %1732, align 1, !tbaa !2452
  %1733 = getelementptr inbounds i8, i8* %1719, i64 8
  %1734 = bitcast i8* %1733 to i64*
  store i64 %1728, i64* %1734, align 1, !tbaa !2452
  %1735 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1736 = load i64, i64* %PC
  %1737 = add i64 %1736, 9
  store i64 %1737, i64* %PC
  %1738 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %1739 = bitcast i8* %1735 to double*
  store double %1738, double* %1739, align 1, !tbaa !2452
  %1740 = getelementptr inbounds i8, i8* %1735, i64 8
  %1741 = bitcast i8* %1740 to double*
  store double 0.000000e+00, double* %1741, align 1, !tbaa !2452
  %1742 = load i64, i64* %RBP
  %1743 = sub i64 %1742, 88
  %1744 = bitcast %union.vec128_t* %XMM1 to i8*
  %1745 = load i64, i64* %PC
  %1746 = add i64 %1745, 5
  store i64 %1746, i64* %PC
  %1747 = bitcast i8* %1744 to double*
  %1748 = load double, double* %1747, align 1
  %1749 = inttoptr i64 %1743 to double*
  store double %1748, double* %1749
  %1750 = load i64, i64* %PC
  %1751 = sub i64 %1750, 3619
  %1752 = load i64, i64* %PC
  %1753 = add i64 %1752, 5
  %1754 = load i64, i64* %PC
  %1755 = add i64 %1754, 5
  store i64 %1755, i64* %PC
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1757 = load i64, i64* %1756, align 8, !tbaa !2428
  %1758 = add i64 %1757, -8
  %1759 = inttoptr i64 %1758 to i64*
  store i64 %1753, i64* %1759
  store i64 %1758, i64* %1756, align 8, !tbaa !2428
  %1760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1751, i64* %1760, align 8, !tbaa !2428
  %1761 = load i64, i64* %PC
  %1762 = bitcast %struct.State** %state.i481 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1762)
  %1763 = bitcast i64* %curr_pc.i482 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1763)
  %1764 = bitcast %struct.Memory** %memory.i483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1764)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i484)
  %1765 = bitcast i64* %SS_BASE.i485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1765)
  %1766 = bitcast i64* %ES_BASE.i486 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1766)
  %1767 = bitcast i64* %DS_BASE.i487 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1767)
  %1768 = bitcast i64* %CS_BASE.i488 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1768)
  %1769 = bitcast %struct.State** %STATE.i489 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1769)
  %1770 = bitcast %struct.Memory** %MEMORY.i490 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1770)
  %1771 = bitcast i64** %_DR0.i491 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1771)
  %1772 = bitcast i64** %_DR1.i492 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1772)
  %1773 = bitcast i64** %_DR2.i493 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1773)
  %1774 = bitcast i64** %_DR3.i494 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1774)
  %1775 = bitcast i64** %_DR4.i495 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1775)
  %1776 = bitcast i64** %_DR5.i496 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1776)
  %1777 = bitcast i64** %_DR6.i497 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1777)
  %1778 = bitcast i64** %_DR7.i498 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1778)
  %1779 = bitcast i64** %CR0.i499 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1779)
  %1780 = bitcast i64** %CR1.i500 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1780)
  %1781 = bitcast i64** %CR2.i501 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1781)
  %1782 = bitcast i64** %CR3.i502 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1782)
  %1783 = bitcast i64** %CR4.i503 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1783)
  %1784 = bitcast i64** %CR8.i504 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1784)
  store %struct.State* %0, %struct.State** %state.i481, align 8, !noalias !2469
  store i64 %1761, i64* %curr_pc.i482, align 8, !noalias !2469
  store %struct.Memory* %1685, %struct.Memory** %memory.i483, align 8, !noalias !2469
  store i8 0, i8* %BRANCH_TAKEN.i484, align 1, !noalias !2469
  store i64 0, i64* %SS_BASE.i485, align 8, !noalias !2469
  store i64 0, i64* %ES_BASE.i486, align 8, !noalias !2469
  store i64 0, i64* %DS_BASE.i487, align 8, !noalias !2469
  store i64 0, i64* %CS_BASE.i488, align 8, !noalias !2469
  store %struct.State* %0, %struct.State** %STATE.i489, align 8, !noalias !2469
  store %struct.Memory* %1685, %struct.Memory** %MEMORY.i490, align 8, !noalias !2469
  %1785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1786 = getelementptr inbounds %struct.GPR, %struct.GPR* %1785, i32 0, i32 33
  %1787 = getelementptr inbounds %struct.Reg, %struct.Reg* %1786, i32 0, i32 0
  %PC.i505 = bitcast %union.anon* %1787 to i64*
  store i64 %1761, i64* %PC.i505, align 8, !alias.scope !2473, !noalias !2474
  %1788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1789 = getelementptr inbounds %struct.GPR, %struct.GPR* %1788, i32 0, i32 1
  %1790 = getelementptr inbounds %struct.Reg, %struct.Reg* %1789, i32 0, i32 0
  %1791 = bitcast %union.anon* %1790 to %struct.anon.2*
  %AH.i506 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1791, i32 0, i32 1
  %1792 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1793 = getelementptr inbounds %struct.GPR, %struct.GPR* %1792, i32 0, i32 3
  %1794 = getelementptr inbounds %struct.Reg, %struct.Reg* %1793, i32 0, i32 0
  %1795 = bitcast %union.anon* %1794 to %struct.anon.2*
  %BH.i507 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1795, i32 0, i32 1
  %1796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1797 = getelementptr inbounds %struct.GPR, %struct.GPR* %1796, i32 0, i32 5
  %1798 = getelementptr inbounds %struct.Reg, %struct.Reg* %1797, i32 0, i32 0
  %1799 = bitcast %union.anon* %1798 to %struct.anon.2*
  %CH.i508 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1799, i32 0, i32 1
  %1800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1801 = getelementptr inbounds %struct.GPR, %struct.GPR* %1800, i32 0, i32 7
  %1802 = getelementptr inbounds %struct.Reg, %struct.Reg* %1801, i32 0, i32 0
  %1803 = bitcast %union.anon* %1802 to %struct.anon.2*
  %DH.i509 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1803, i32 0, i32 1
  %1804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1805 = getelementptr inbounds %struct.GPR, %struct.GPR* %1804, i32 0, i32 1
  %1806 = getelementptr inbounds %struct.Reg, %struct.Reg* %1805, i32 0, i32 0
  %1807 = bitcast %union.anon* %1806 to %struct.anon.2*
  %AL.i510 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1807, i32 0, i32 0
  %1808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1809 = getelementptr inbounds %struct.GPR, %struct.GPR* %1808, i32 0, i32 3
  %1810 = getelementptr inbounds %struct.Reg, %struct.Reg* %1809, i32 0, i32 0
  %1811 = bitcast %union.anon* %1810 to %struct.anon.2*
  %BL.i511 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1811, i32 0, i32 0
  %1812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1813 = getelementptr inbounds %struct.GPR, %struct.GPR* %1812, i32 0, i32 5
  %1814 = getelementptr inbounds %struct.Reg, %struct.Reg* %1813, i32 0, i32 0
  %1815 = bitcast %union.anon* %1814 to %struct.anon.2*
  %CL.i512 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1815, i32 0, i32 0
  %1816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1817 = getelementptr inbounds %struct.GPR, %struct.GPR* %1816, i32 0, i32 7
  %1818 = getelementptr inbounds %struct.Reg, %struct.Reg* %1817, i32 0, i32 0
  %1819 = bitcast %union.anon* %1818 to %struct.anon.2*
  %DL.i513 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1819, i32 0, i32 0
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1821 = getelementptr inbounds %struct.GPR, %struct.GPR* %1820, i32 0, i32 9
  %1822 = getelementptr inbounds %struct.Reg, %struct.Reg* %1821, i32 0, i32 0
  %1823 = bitcast %union.anon* %1822 to %struct.anon.2*
  %SIL.i514 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1823, i32 0, i32 0
  %1824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1825 = getelementptr inbounds %struct.GPR, %struct.GPR* %1824, i32 0, i32 11
  %1826 = getelementptr inbounds %struct.Reg, %struct.Reg* %1825, i32 0, i32 0
  %1827 = bitcast %union.anon* %1826 to %struct.anon.2*
  %DIL.i515 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1827, i32 0, i32 0
  %1828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1829 = getelementptr inbounds %struct.GPR, %struct.GPR* %1828, i32 0, i32 13
  %1830 = getelementptr inbounds %struct.Reg, %struct.Reg* %1829, i32 0, i32 0
  %1831 = bitcast %union.anon* %1830 to %struct.anon.2*
  %SPL.i516 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1831, i32 0, i32 0
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1833 = getelementptr inbounds %struct.GPR, %struct.GPR* %1832, i32 0, i32 15
  %1834 = getelementptr inbounds %struct.Reg, %struct.Reg* %1833, i32 0, i32 0
  %1835 = bitcast %union.anon* %1834 to %struct.anon.2*
  %BPL.i517 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1835, i32 0, i32 0
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1837 = getelementptr inbounds %struct.GPR, %struct.GPR* %1836, i32 0, i32 17
  %1838 = getelementptr inbounds %struct.Reg, %struct.Reg* %1837, i32 0, i32 0
  %1839 = bitcast %union.anon* %1838 to %struct.anon.2*
  %R8B.i518 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1839, i32 0, i32 0
  %1840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1841 = getelementptr inbounds %struct.GPR, %struct.GPR* %1840, i32 0, i32 19
  %1842 = getelementptr inbounds %struct.Reg, %struct.Reg* %1841, i32 0, i32 0
  %1843 = bitcast %union.anon* %1842 to %struct.anon.2*
  %R9B.i519 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1843, i32 0, i32 0
  %1844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1845 = getelementptr inbounds %struct.GPR, %struct.GPR* %1844, i32 0, i32 21
  %1846 = getelementptr inbounds %struct.Reg, %struct.Reg* %1845, i32 0, i32 0
  %1847 = bitcast %union.anon* %1846 to %struct.anon.2*
  %R10B.i520 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1847, i32 0, i32 0
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 23
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %1851 = bitcast %union.anon* %1850 to %struct.anon.2*
  %R11B.i521 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1851, i32 0, i32 0
  %1852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1853 = getelementptr inbounds %struct.GPR, %struct.GPR* %1852, i32 0, i32 25
  %1854 = getelementptr inbounds %struct.Reg, %struct.Reg* %1853, i32 0, i32 0
  %1855 = bitcast %union.anon* %1854 to %struct.anon.2*
  %R12B.i522 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1855, i32 0, i32 0
  %1856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1857 = getelementptr inbounds %struct.GPR, %struct.GPR* %1856, i32 0, i32 27
  %1858 = getelementptr inbounds %struct.Reg, %struct.Reg* %1857, i32 0, i32 0
  %1859 = bitcast %union.anon* %1858 to %struct.anon.2*
  %R13B.i523 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1859, i32 0, i32 0
  %1860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1861 = getelementptr inbounds %struct.GPR, %struct.GPR* %1860, i32 0, i32 29
  %1862 = getelementptr inbounds %struct.Reg, %struct.Reg* %1861, i32 0, i32 0
  %1863 = bitcast %union.anon* %1862 to %struct.anon.2*
  %R14B.i524 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1863, i32 0, i32 0
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 31
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %1867 = bitcast %union.anon* %1866 to %struct.anon.2*
  %R15B.i525 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1867, i32 0, i32 0
  %1868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1869 = getelementptr inbounds %struct.GPR, %struct.GPR* %1868, i32 0, i32 1
  %1870 = getelementptr inbounds %struct.Reg, %struct.Reg* %1869, i32 0, i32 0
  %AX.i526 = bitcast %union.anon* %1870 to i16*
  %1871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1872 = getelementptr inbounds %struct.GPR, %struct.GPR* %1871, i32 0, i32 3
  %1873 = getelementptr inbounds %struct.Reg, %struct.Reg* %1872, i32 0, i32 0
  %BX.i527 = bitcast %union.anon* %1873 to i16*
  %1874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1875 = getelementptr inbounds %struct.GPR, %struct.GPR* %1874, i32 0, i32 5
  %1876 = getelementptr inbounds %struct.Reg, %struct.Reg* %1875, i32 0, i32 0
  %CX.i528 = bitcast %union.anon* %1876 to i16*
  %1877 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1878 = getelementptr inbounds %struct.GPR, %struct.GPR* %1877, i32 0, i32 7
  %1879 = getelementptr inbounds %struct.Reg, %struct.Reg* %1878, i32 0, i32 0
  %DX.i529 = bitcast %union.anon* %1879 to i16*
  %1880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1881 = getelementptr inbounds %struct.GPR, %struct.GPR* %1880, i32 0, i32 9
  %1882 = getelementptr inbounds %struct.Reg, %struct.Reg* %1881, i32 0, i32 0
  %SI.i530 = bitcast %union.anon* %1882 to i16*
  %1883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1884 = getelementptr inbounds %struct.GPR, %struct.GPR* %1883, i32 0, i32 11
  %1885 = getelementptr inbounds %struct.Reg, %struct.Reg* %1884, i32 0, i32 0
  %DI.i531 = bitcast %union.anon* %1885 to i16*
  %1886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1887 = getelementptr inbounds %struct.GPR, %struct.GPR* %1886, i32 0, i32 13
  %1888 = getelementptr inbounds %struct.Reg, %struct.Reg* %1887, i32 0, i32 0
  %SP.i532 = bitcast %union.anon* %1888 to i16*
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1890 = getelementptr inbounds %struct.GPR, %struct.GPR* %1889, i32 0, i32 15
  %1891 = getelementptr inbounds %struct.Reg, %struct.Reg* %1890, i32 0, i32 0
  %BP.i533 = bitcast %union.anon* %1891 to i16*
  %1892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1893 = getelementptr inbounds %struct.GPR, %struct.GPR* %1892, i32 0, i32 17
  %1894 = getelementptr inbounds %struct.Reg, %struct.Reg* %1893, i32 0, i32 0
  %R8W.i534 = bitcast %union.anon* %1894 to i16*
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1896 = getelementptr inbounds %struct.GPR, %struct.GPR* %1895, i32 0, i32 19
  %1897 = getelementptr inbounds %struct.Reg, %struct.Reg* %1896, i32 0, i32 0
  %R9W.i535 = bitcast %union.anon* %1897 to i16*
  %1898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1899 = getelementptr inbounds %struct.GPR, %struct.GPR* %1898, i32 0, i32 21
  %1900 = getelementptr inbounds %struct.Reg, %struct.Reg* %1899, i32 0, i32 0
  %R10W.i536 = bitcast %union.anon* %1900 to i16*
  %1901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1902 = getelementptr inbounds %struct.GPR, %struct.GPR* %1901, i32 0, i32 23
  %1903 = getelementptr inbounds %struct.Reg, %struct.Reg* %1902, i32 0, i32 0
  %R11W.i537 = bitcast %union.anon* %1903 to i16*
  %1904 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1905 = getelementptr inbounds %struct.GPR, %struct.GPR* %1904, i32 0, i32 25
  %1906 = getelementptr inbounds %struct.Reg, %struct.Reg* %1905, i32 0, i32 0
  %R12W.i538 = bitcast %union.anon* %1906 to i16*
  %1907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1908 = getelementptr inbounds %struct.GPR, %struct.GPR* %1907, i32 0, i32 27
  %1909 = getelementptr inbounds %struct.Reg, %struct.Reg* %1908, i32 0, i32 0
  %R13W.i539 = bitcast %union.anon* %1909 to i16*
  %1910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1911 = getelementptr inbounds %struct.GPR, %struct.GPR* %1910, i32 0, i32 29
  %1912 = getelementptr inbounds %struct.Reg, %struct.Reg* %1911, i32 0, i32 0
  %R14W.i540 = bitcast %union.anon* %1912 to i16*
  %1913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1914 = getelementptr inbounds %struct.GPR, %struct.GPR* %1913, i32 0, i32 31
  %1915 = getelementptr inbounds %struct.Reg, %struct.Reg* %1914, i32 0, i32 0
  %R15W.i541 = bitcast %union.anon* %1915 to i16*
  %1916 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1917 = getelementptr inbounds %struct.GPR, %struct.GPR* %1916, i32 0, i32 33
  %1918 = getelementptr inbounds %struct.Reg, %struct.Reg* %1917, i32 0, i32 0
  %IP.i542 = bitcast %union.anon* %1918 to i16*
  %1919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1920 = getelementptr inbounds %struct.GPR, %struct.GPR* %1919, i32 0, i32 1
  %1921 = getelementptr inbounds %struct.Reg, %struct.Reg* %1920, i32 0, i32 0
  %EAX.i543 = bitcast %union.anon* %1921 to i32*
  %1922 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1923 = getelementptr inbounds %struct.GPR, %struct.GPR* %1922, i32 0, i32 3
  %1924 = getelementptr inbounds %struct.Reg, %struct.Reg* %1923, i32 0, i32 0
  %EBX.i544 = bitcast %union.anon* %1924 to i32*
  %1925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1926 = getelementptr inbounds %struct.GPR, %struct.GPR* %1925, i32 0, i32 5
  %1927 = getelementptr inbounds %struct.Reg, %struct.Reg* %1926, i32 0, i32 0
  %ECX.i545 = bitcast %union.anon* %1927 to i32*
  %1928 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1929 = getelementptr inbounds %struct.GPR, %struct.GPR* %1928, i32 0, i32 7
  %1930 = getelementptr inbounds %struct.Reg, %struct.Reg* %1929, i32 0, i32 0
  %EDX.i546 = bitcast %union.anon* %1930 to i32*
  %1931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1932 = getelementptr inbounds %struct.GPR, %struct.GPR* %1931, i32 0, i32 9
  %1933 = getelementptr inbounds %struct.Reg, %struct.Reg* %1932, i32 0, i32 0
  %ESI.i547 = bitcast %union.anon* %1933 to i32*
  %1934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1935 = getelementptr inbounds %struct.GPR, %struct.GPR* %1934, i32 0, i32 11
  %1936 = getelementptr inbounds %struct.Reg, %struct.Reg* %1935, i32 0, i32 0
  %EDI.i548 = bitcast %union.anon* %1936 to i32*
  %1937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1938 = getelementptr inbounds %struct.GPR, %struct.GPR* %1937, i32 0, i32 13
  %1939 = getelementptr inbounds %struct.Reg, %struct.Reg* %1938, i32 0, i32 0
  %ESP.i549 = bitcast %union.anon* %1939 to i32*
  %1940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1941 = getelementptr inbounds %struct.GPR, %struct.GPR* %1940, i32 0, i32 15
  %1942 = getelementptr inbounds %struct.Reg, %struct.Reg* %1941, i32 0, i32 0
  %EBP.i550 = bitcast %union.anon* %1942 to i32*
  %1943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1944 = getelementptr inbounds %struct.GPR, %struct.GPR* %1943, i32 0, i32 33
  %1945 = getelementptr inbounds %struct.Reg, %struct.Reg* %1944, i32 0, i32 0
  %EIP.i551 = bitcast %union.anon* %1945 to i32*
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1947 = getelementptr inbounds %struct.GPR, %struct.GPR* %1946, i32 0, i32 17
  %1948 = getelementptr inbounds %struct.Reg, %struct.Reg* %1947, i32 0, i32 0
  %R8D.i552 = bitcast %union.anon* %1948 to i32*
  %1949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1950 = getelementptr inbounds %struct.GPR, %struct.GPR* %1949, i32 0, i32 19
  %1951 = getelementptr inbounds %struct.Reg, %struct.Reg* %1950, i32 0, i32 0
  %R9D.i553 = bitcast %union.anon* %1951 to i32*
  %1952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1953 = getelementptr inbounds %struct.GPR, %struct.GPR* %1952, i32 0, i32 21
  %1954 = getelementptr inbounds %struct.Reg, %struct.Reg* %1953, i32 0, i32 0
  %R10D.i554 = bitcast %union.anon* %1954 to i32*
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1956 = getelementptr inbounds %struct.GPR, %struct.GPR* %1955, i32 0, i32 23
  %1957 = getelementptr inbounds %struct.Reg, %struct.Reg* %1956, i32 0, i32 0
  %R11D.i555 = bitcast %union.anon* %1957 to i32*
  %1958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1959 = getelementptr inbounds %struct.GPR, %struct.GPR* %1958, i32 0, i32 25
  %1960 = getelementptr inbounds %struct.Reg, %struct.Reg* %1959, i32 0, i32 0
  %R12D.i556 = bitcast %union.anon* %1960 to i32*
  %1961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1962 = getelementptr inbounds %struct.GPR, %struct.GPR* %1961, i32 0, i32 27
  %1963 = getelementptr inbounds %struct.Reg, %struct.Reg* %1962, i32 0, i32 0
  %R13D.i557 = bitcast %union.anon* %1963 to i32*
  %1964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1965 = getelementptr inbounds %struct.GPR, %struct.GPR* %1964, i32 0, i32 29
  %1966 = getelementptr inbounds %struct.Reg, %struct.Reg* %1965, i32 0, i32 0
  %R14D.i558 = bitcast %union.anon* %1966 to i32*
  %1967 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1968 = getelementptr inbounds %struct.GPR, %struct.GPR* %1967, i32 0, i32 31
  %1969 = getelementptr inbounds %struct.Reg, %struct.Reg* %1968, i32 0, i32 0
  %R15D.i559 = bitcast %union.anon* %1969 to i32*
  %1970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1971 = getelementptr inbounds %struct.GPR, %struct.GPR* %1970, i32 0, i32 1
  %1972 = getelementptr inbounds %struct.Reg, %struct.Reg* %1971, i32 0, i32 0
  %RAX.i560 = bitcast %union.anon* %1972 to i64*
  %1973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1974 = getelementptr inbounds %struct.GPR, %struct.GPR* %1973, i32 0, i32 3
  %1975 = getelementptr inbounds %struct.Reg, %struct.Reg* %1974, i32 0, i32 0
  %RBX.i561 = bitcast %union.anon* %1975 to i64*
  %1976 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1977 = getelementptr inbounds %struct.GPR, %struct.GPR* %1976, i32 0, i32 5
  %1978 = getelementptr inbounds %struct.Reg, %struct.Reg* %1977, i32 0, i32 0
  %RCX.i562 = bitcast %union.anon* %1978 to i64*
  %1979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1980 = getelementptr inbounds %struct.GPR, %struct.GPR* %1979, i32 0, i32 7
  %1981 = getelementptr inbounds %struct.Reg, %struct.Reg* %1980, i32 0, i32 0
  %RDX.i563 = bitcast %union.anon* %1981 to i64*
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 9
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %RSI.i564 = bitcast %union.anon* %1984 to i64*
  %1985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1986 = getelementptr inbounds %struct.GPR, %struct.GPR* %1985, i32 0, i32 11
  %1987 = getelementptr inbounds %struct.Reg, %struct.Reg* %1986, i32 0, i32 0
  %RDI.i565 = bitcast %union.anon* %1987 to i64*
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1989 = getelementptr inbounds %struct.GPR, %struct.GPR* %1988, i32 0, i32 13
  %1990 = getelementptr inbounds %struct.Reg, %struct.Reg* %1989, i32 0, i32 0
  %RSP.i566 = bitcast %union.anon* %1990 to i64*
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1992 = getelementptr inbounds %struct.GPR, %struct.GPR* %1991, i32 0, i32 15
  %1993 = getelementptr inbounds %struct.Reg, %struct.Reg* %1992, i32 0, i32 0
  %RBP.i567 = bitcast %union.anon* %1993 to i64*
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1995 = getelementptr inbounds %struct.GPR, %struct.GPR* %1994, i32 0, i32 17
  %1996 = getelementptr inbounds %struct.Reg, %struct.Reg* %1995, i32 0, i32 0
  %R8.i568 = bitcast %union.anon* %1996 to i64*
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 19
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %R9.i569 = bitcast %union.anon* %1999 to i64*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 21
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %R10.i570 = bitcast %union.anon* %2002 to i64*
  %2003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2004 = getelementptr inbounds %struct.GPR, %struct.GPR* %2003, i32 0, i32 23
  %2005 = getelementptr inbounds %struct.Reg, %struct.Reg* %2004, i32 0, i32 0
  %R11.i571 = bitcast %union.anon* %2005 to i64*
  %2006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2007 = getelementptr inbounds %struct.GPR, %struct.GPR* %2006, i32 0, i32 25
  %2008 = getelementptr inbounds %struct.Reg, %struct.Reg* %2007, i32 0, i32 0
  %R12.i572 = bitcast %union.anon* %2008 to i64*
  %2009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2010 = getelementptr inbounds %struct.GPR, %struct.GPR* %2009, i32 0, i32 27
  %2011 = getelementptr inbounds %struct.Reg, %struct.Reg* %2010, i32 0, i32 0
  %R13.i573 = bitcast %union.anon* %2011 to i64*
  %2012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2013 = getelementptr inbounds %struct.GPR, %struct.GPR* %2012, i32 0, i32 29
  %2014 = getelementptr inbounds %struct.Reg, %struct.Reg* %2013, i32 0, i32 0
  %R14.i574 = bitcast %union.anon* %2014 to i64*
  %2015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2016 = getelementptr inbounds %struct.GPR, %struct.GPR* %2015, i32 0, i32 31
  %2017 = getelementptr inbounds %struct.Reg, %struct.Reg* %2016, i32 0, i32 0
  %R15.i575 = bitcast %union.anon* %2017 to i64*
  %2018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2019 = getelementptr inbounds %struct.GPR, %struct.GPR* %2018, i32 0, i32 33
  %2020 = getelementptr inbounds %struct.Reg, %struct.Reg* %2019, i32 0, i32 0
  %RIP.i576 = bitcast %union.anon* %2020 to i64*
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2022 = getelementptr inbounds %struct.Segments, %struct.Segments* %2021, i32 0, i32 1
  %SS.i577 = bitcast %union.SegmentSelector* %2022 to i16*
  %2023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2024 = getelementptr inbounds %struct.Segments, %struct.Segments* %2023, i32 0, i32 3
  %ES.i578 = bitcast %union.SegmentSelector* %2024 to i16*
  %2025 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2026 = getelementptr inbounds %struct.Segments, %struct.Segments* %2025, i32 0, i32 5
  %GS.i579 = bitcast %union.SegmentSelector* %2026 to i16*
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2028 = getelementptr inbounds %struct.Segments, %struct.Segments* %2027, i32 0, i32 7
  %FS.i580 = bitcast %union.SegmentSelector* %2028 to i16*
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2030 = getelementptr inbounds %struct.Segments, %struct.Segments* %2029, i32 0, i32 9
  %DS.i581 = bitcast %union.SegmentSelector* %2030 to i16*
  %2031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %2032 = getelementptr inbounds %struct.Segments, %struct.Segments* %2031, i32 0, i32 11
  %CS.i582 = bitcast %union.SegmentSelector* %2032 to i16*
  %2033 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2034 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2033, i32 0, i32 5
  %2035 = getelementptr inbounds %struct.Reg, %struct.Reg* %2034, i32 0, i32 0
  %GS_BASE.i583 = bitcast %union.anon* %2035 to i64*
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %2037 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %2036, i32 0, i32 7
  %2038 = getelementptr inbounds %struct.Reg, %struct.Reg* %2037, i32 0, i32 0
  %FS_BASE.i584 = bitcast %union.anon* %2038 to i64*
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2040 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2039, i64 0, i64 0
  %YMM0.i585 = bitcast %union.VectorReg* %2040 to %"class.std::bitset"*
  %2041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2042 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2041, i64 0, i64 1
  %YMM1.i586 = bitcast %union.VectorReg* %2042 to %"class.std::bitset"*
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2044 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2043, i64 0, i64 2
  %YMM2.i587 = bitcast %union.VectorReg* %2044 to %"class.std::bitset"*
  %2045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2046 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2045, i64 0, i64 3
  %YMM3.i588 = bitcast %union.VectorReg* %2046 to %"class.std::bitset"*
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2048 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2047, i64 0, i64 4
  %YMM4.i589 = bitcast %union.VectorReg* %2048 to %"class.std::bitset"*
  %2049 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2050 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2049, i64 0, i64 5
  %YMM5.i590 = bitcast %union.VectorReg* %2050 to %"class.std::bitset"*
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2052 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2051, i64 0, i64 6
  %YMM6.i591 = bitcast %union.VectorReg* %2052 to %"class.std::bitset"*
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2054 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2053, i64 0, i64 7
  %YMM7.i592 = bitcast %union.VectorReg* %2054 to %"class.std::bitset"*
  %2055 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2056 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2055, i64 0, i64 8
  %YMM8.i593 = bitcast %union.VectorReg* %2056 to %"class.std::bitset"*
  %2057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2058 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2057, i64 0, i64 9
  %YMM9.i594 = bitcast %union.VectorReg* %2058 to %"class.std::bitset"*
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2060 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2059, i64 0, i64 10
  %YMM10.i595 = bitcast %union.VectorReg* %2060 to %"class.std::bitset"*
  %2061 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2062 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2061, i64 0, i64 11
  %YMM11.i596 = bitcast %union.VectorReg* %2062 to %"class.std::bitset"*
  %2063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2064 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2063, i64 0, i64 12
  %YMM12.i597 = bitcast %union.VectorReg* %2064 to %"class.std::bitset"*
  %2065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2066 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2065, i64 0, i64 13
  %YMM13.i598 = bitcast %union.VectorReg* %2066 to %"class.std::bitset"*
  %2067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2068 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2067, i64 0, i64 14
  %YMM14.i599 = bitcast %union.VectorReg* %2068 to %"class.std::bitset"*
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2070 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2069, i64 0, i64 15
  %YMM15.i600 = bitcast %union.VectorReg* %2070 to %"class.std::bitset"*
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2072 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2071, i64 0, i64 0
  %XMM0.i601 = bitcast %union.VectorReg* %2072 to %union.vec128_t*
  %2073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2074 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2073, i64 0, i64 1
  %XMM1.i602 = bitcast %union.VectorReg* %2074 to %union.vec128_t*
  %2075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2076 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2075, i64 0, i64 2
  %XMM2.i603 = bitcast %union.VectorReg* %2076 to %union.vec128_t*
  %2077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2078 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2077, i64 0, i64 3
  %XMM3.i604 = bitcast %union.VectorReg* %2078 to %union.vec128_t*
  %2079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2080 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2079, i64 0, i64 4
  %XMM4.i605 = bitcast %union.VectorReg* %2080 to %union.vec128_t*
  %2081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2082 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2081, i64 0, i64 5
  %XMM5.i606 = bitcast %union.VectorReg* %2082 to %union.vec128_t*
  %2083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2084 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2083, i64 0, i64 6
  %XMM6.i607 = bitcast %union.VectorReg* %2084 to %union.vec128_t*
  %2085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2086 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2085, i64 0, i64 7
  %XMM7.i608 = bitcast %union.VectorReg* %2086 to %union.vec128_t*
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2088 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2087, i64 0, i64 8
  %XMM8.i609 = bitcast %union.VectorReg* %2088 to %union.vec128_t*
  %2089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2090 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2089, i64 0, i64 9
  %XMM9.i610 = bitcast %union.VectorReg* %2090 to %union.vec128_t*
  %2091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2092 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2091, i64 0, i64 10
  %XMM10.i611 = bitcast %union.VectorReg* %2092 to %union.vec128_t*
  %2093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2094 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2093, i64 0, i64 11
  %XMM11.i612 = bitcast %union.VectorReg* %2094 to %union.vec128_t*
  %2095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2096 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2095, i64 0, i64 12
  %XMM12.i613 = bitcast %union.VectorReg* %2096 to %union.vec128_t*
  %2097 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2098 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2097, i64 0, i64 13
  %XMM13.i614 = bitcast %union.VectorReg* %2098 to %union.vec128_t*
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2100 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2099, i64 0, i64 14
  %XMM14.i615 = bitcast %union.VectorReg* %2100 to %union.vec128_t*
  %2101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %2102 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %2101, i64 0, i64 15
  %XMM15.i616 = bitcast %union.VectorReg* %2102 to %union.vec128_t*
  %2103 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2104 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2103, i32 0, i32 0
  %2105 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2104, i64 0, i64 0
  %ST0.i617 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2105, i32 0, i32 1
  %2106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2107 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2106, i32 0, i32 0
  %2108 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2107, i64 0, i64 1
  %ST1.i618 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2108, i32 0, i32 1
  %2109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2110 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2109, i32 0, i32 0
  %2111 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2110, i64 0, i64 2
  %ST2.i619 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2111, i32 0, i32 1
  %2112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2113 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2112, i32 0, i32 0
  %2114 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2113, i64 0, i64 3
  %ST3.i620 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2114, i32 0, i32 1
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2116 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2115, i32 0, i32 0
  %2117 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2116, i64 0, i64 4
  %ST4.i621 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2117, i32 0, i32 1
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2119 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2118, i32 0, i32 0
  %2120 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2119, i64 0, i64 5
  %ST5.i622 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2120, i32 0, i32 1
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2122 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2121, i32 0, i32 0
  %2123 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2122, i64 0, i64 6
  %ST6.i623 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2123, i32 0, i32 1
  %2124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %2125 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %2124, i32 0, i32 0
  %2126 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %2125, i64 0, i64 7
  %ST7.i624 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %2126, i32 0, i32 1
  %2127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2128 = getelementptr inbounds %struct.MMX, %struct.MMX* %2127, i32 0, i32 0
  %2129 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2128, i64 0, i64 0
  %2130 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2129, i32 0, i32 1
  %2131 = bitcast %union.vec64_t* %2130 to %struct.uint64v1_t*
  %2132 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2131, i32 0, i32 0
  %MM0.i625 = getelementptr inbounds [1 x i64], [1 x i64]* %2132, i64 0, i64 0
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2134 = getelementptr inbounds %struct.MMX, %struct.MMX* %2133, i32 0, i32 0
  %2135 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2134, i64 0, i64 1
  %2136 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2135, i32 0, i32 1
  %2137 = bitcast %union.vec64_t* %2136 to %struct.uint64v1_t*
  %2138 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2137, i32 0, i32 0
  %MM1.i626 = getelementptr inbounds [1 x i64], [1 x i64]* %2138, i64 0, i64 0
  %2139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2140 = getelementptr inbounds %struct.MMX, %struct.MMX* %2139, i32 0, i32 0
  %2141 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2140, i64 0, i64 2
  %2142 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2141, i32 0, i32 1
  %2143 = bitcast %union.vec64_t* %2142 to %struct.uint64v1_t*
  %2144 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2143, i32 0, i32 0
  %MM2.i627 = getelementptr inbounds [1 x i64], [1 x i64]* %2144, i64 0, i64 0
  %2145 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2146 = getelementptr inbounds %struct.MMX, %struct.MMX* %2145, i32 0, i32 0
  %2147 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2146, i64 0, i64 3
  %2148 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2147, i32 0, i32 1
  %2149 = bitcast %union.vec64_t* %2148 to %struct.uint64v1_t*
  %2150 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2149, i32 0, i32 0
  %MM3.i628 = getelementptr inbounds [1 x i64], [1 x i64]* %2150, i64 0, i64 0
  %2151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2152 = getelementptr inbounds %struct.MMX, %struct.MMX* %2151, i32 0, i32 0
  %2153 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2152, i64 0, i64 4
  %2154 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2153, i32 0, i32 1
  %2155 = bitcast %union.vec64_t* %2154 to %struct.uint64v1_t*
  %2156 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2155, i32 0, i32 0
  %MM4.i629 = getelementptr inbounds [1 x i64], [1 x i64]* %2156, i64 0, i64 0
  %2157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2158 = getelementptr inbounds %struct.MMX, %struct.MMX* %2157, i32 0, i32 0
  %2159 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2158, i64 0, i64 5
  %2160 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2159, i32 0, i32 1
  %2161 = bitcast %union.vec64_t* %2160 to %struct.uint64v1_t*
  %2162 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2161, i32 0, i32 0
  %MM5.i630 = getelementptr inbounds [1 x i64], [1 x i64]* %2162, i64 0, i64 0
  %2163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2164 = getelementptr inbounds %struct.MMX, %struct.MMX* %2163, i32 0, i32 0
  %2165 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2164, i64 0, i64 6
  %2166 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2165, i32 0, i32 1
  %2167 = bitcast %union.vec64_t* %2166 to %struct.uint64v1_t*
  %2168 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2167, i32 0, i32 0
  %MM6.i631 = getelementptr inbounds [1 x i64], [1 x i64]* %2168, i64 0, i64 0
  %2169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %2170 = getelementptr inbounds %struct.MMX, %struct.MMX* %2169, i32 0, i32 0
  %2171 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %2170, i64 0, i64 7
  %2172 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %2171, i32 0, i32 1
  %2173 = bitcast %union.vec64_t* %2172 to %struct.uint64v1_t*
  %2174 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %2173, i32 0, i32 0
  %MM7.i632 = getelementptr inbounds [1 x i64], [1 x i64]* %2174, i64 0, i64 0
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i633 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2175, i32 0, i32 5
  %2176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i634 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2176, i32 0, i32 1
  %2177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i635 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2177, i32 0, i32 11
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i636 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2178, i32 0, i32 13
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i637 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2179, i32 0, i32 3
  %2180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i638 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2180, i32 0, i32 9
  %2181 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i639 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %2181, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i491, align 8, !noalias !2469
  store i64* @DR1, i64** %_DR1.i492, align 8, !noalias !2469
  store i64* @DR2, i64** %_DR2.i493, align 8, !noalias !2469
  store i64* @DR3, i64** %_DR3.i494, align 8, !noalias !2469
  store i64* @DR4, i64** %_DR4.i495, align 8, !noalias !2469
  store i64* @DR5, i64** %_DR5.i496, align 8, !noalias !2469
  store i64* @DR6, i64** %_DR6.i497, align 8, !noalias !2469
  store i64* @DR7, i64** %_DR7.i498, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i499, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i500, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i501, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i502, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i503, align 8, !noalias !2469
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i504, align 8, !noalias !2469
  %2182 = bitcast %"class.std::bitset"* %YMM0.i585 to double*
  %2183 = load double, double* %2182, !alias.scope !2473, !noalias !2474
  %2184 = load i64, i64* %RSP.i566, !alias.scope !2473, !noalias !2474
  %2185 = load %struct.Memory*, %struct.Memory** %MEMORY.i490, !noalias !2469
  %2186 = inttoptr i64 %2184 to i64*
  %2187 = load i64, i64* %2186
  store i64 %2187, i64* %PC.i505, !alias.scope !2473, !noalias !2474
  %2188 = add i64 %2184, 8
  store i64 %2188, i64* %RSP.i566, !alias.scope !2473, !noalias !2474
  %2189 = call double @tan(double %2183)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i585, !alias.scope !2473, !noalias !2474
  %2190 = bitcast %"class.std::bitset"* %YMM0.i585 to double*
  store double %2189, double* %2190, !alias.scope !2473, !noalias !2474
  %2191 = load %struct.Memory*, %struct.Memory** %MEMORY.i490, !noalias !2469
  %2192 = bitcast %struct.State** %state.i481 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2192)
  %2193 = bitcast i64* %curr_pc.i482 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2193)
  %2194 = bitcast %struct.Memory** %memory.i483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2194)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i484)
  %2195 = bitcast i64* %SS_BASE.i485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2195)
  %2196 = bitcast i64* %ES_BASE.i486 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2196)
  %2197 = bitcast i64* %DS_BASE.i487 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2197)
  %2198 = bitcast i64* %CS_BASE.i488 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2198)
  %2199 = bitcast %struct.State** %STATE.i489 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2199)
  %2200 = bitcast %struct.Memory** %MEMORY.i490 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2200)
  %2201 = bitcast i64** %_DR0.i491 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2201)
  %2202 = bitcast i64** %_DR1.i492 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2202)
  %2203 = bitcast i64** %_DR2.i493 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2203)
  %2204 = bitcast i64** %_DR3.i494 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2204)
  %2205 = bitcast i64** %_DR4.i495 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2205)
  %2206 = bitcast i64** %_DR5.i496 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2206)
  %2207 = bitcast i64** %_DR6.i497 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2207)
  %2208 = bitcast i64** %_DR7.i498 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2208)
  %2209 = bitcast i64** %CR0.i499 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2209)
  %2210 = bitcast i64** %CR1.i500 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2210)
  %2211 = bitcast i64** %CR2.i501 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2211)
  %2212 = bitcast i64** %CR3.i502 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2212)
  %2213 = bitcast i64** %CR4.i503 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2213)
  %2214 = bitcast i64** %CR8.i504 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %2214)
  %2215 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2216 = load i64, i64* %PC
  %2217 = add i64 %2216, 8
  store i64 %2217, i64* %PC
  %2218 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 104) to double*)
  %2219 = bitcast i8* %2215 to double*
  store double %2218, double* %2219, align 1, !tbaa !2452
  %2220 = getelementptr inbounds i8, i8* %2215, i64 8
  %2221 = bitcast i8* %2220 to double*
  store double 0.000000e+00, double* %2221, align 1, !tbaa !2452
  %2222 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2223 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2224 = bitcast %union.vec128_t* %XMM0 to i8*
  %2225 = load i64, i64* %PC
  %2226 = add i64 %2225, 4
  store i64 %2226, i64* %PC
  %2227 = bitcast i8* %2223 to double*
  %2228 = load double, double* %2227, align 1
  %2229 = getelementptr inbounds i8, i8* %2223, i64 8
  %2230 = bitcast i8* %2229 to i64*
  %2231 = load i64, i64* %2230, align 1
  %2232 = bitcast i8* %2224 to double*
  %2233 = load double, double* %2232, align 1
  %2234 = fdiv double %2228, %2233
  %2235 = bitcast i8* %2222 to double*
  store double %2234, double* %2235, align 1, !tbaa !2452
  %2236 = getelementptr inbounds i8, i8* %2222, i64 8
  %2237 = bitcast i8* %2236 to i64*
  store i64 %2231, i64* %2237, align 1, !tbaa !2452
  %2238 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2239 = load i64, i64* %RBP
  %2240 = sub i64 %2239, 88
  %2241 = load i64, i64* %PC
  %2242 = add i64 %2241, 5
  store i64 %2242, i64* %PC
  %2243 = inttoptr i64 %2240 to double*
  %2244 = load double, double* %2243
  %2245 = bitcast i8* %2238 to double*
  store double %2244, double* %2245, align 1, !tbaa !2452
  %2246 = getelementptr inbounds i8, i8* %2238, i64 8
  %2247 = bitcast i8* %2246 to double*
  store double 0.000000e+00, double* %2247, align 1, !tbaa !2452
  %2248 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2249 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2250 = bitcast %union.vec128_t* %XMM1 to i8*
  %2251 = load i64, i64* %PC
  %2252 = add i64 %2251, 4
  store i64 %2252, i64* %PC
  %2253 = bitcast i8* %2249 to double*
  %2254 = load double, double* %2253, align 1
  %2255 = getelementptr inbounds i8, i8* %2249, i64 8
  %2256 = bitcast i8* %2255 to i64*
  %2257 = load i64, i64* %2256, align 1
  %2258 = bitcast i8* %2250 to double*
  %2259 = load double, double* %2258, align 1
  %2260 = fmul double %2254, %2259
  %2261 = bitcast i8* %2248 to double*
  store double %2260, double* %2261, align 1, !tbaa !2452
  %2262 = getelementptr inbounds i8, i8* %2248, i64 8
  %2263 = bitcast i8* %2262 to i64*
  store i64 %2257, i64* %2263, align 1, !tbaa !2452
  %2264 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2265 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2266 = load i64, i64* %RBP
  %2267 = sub i64 %2266, 48
  %2268 = load i64, i64* %PC
  %2269 = add i64 %2268, 5
  store i64 %2269, i64* %PC
  %2270 = bitcast i8* %2265 to double*
  %2271 = load double, double* %2270, align 1
  %2272 = getelementptr inbounds i8, i8* %2265, i64 8
  %2273 = bitcast i8* %2272 to i64*
  %2274 = load i64, i64* %2273, align 1
  %2275 = inttoptr i64 %2267 to double*
  %2276 = load double, double* %2275
  %2277 = fadd double %2271, %2276
  %2278 = bitcast i8* %2264 to double*
  store double %2277, double* %2278, align 1, !tbaa !2452
  %2279 = getelementptr inbounds i8, i8* %2264, i64 8
  %2280 = bitcast i8* %2279 to i64*
  store i64 %2274, i64* %2280, align 1, !tbaa !2452
  %2281 = bitcast %union.vec128_t* %XMM0 to i8*
  %2282 = load i64, i64* %PC
  %2283 = add i64 %2282, 9
  store i64 %2283, i64* %PC
  %2284 = bitcast i8* %2281 to double*
  %2285 = load double, double* %2284, align 1
  store double %2285, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2286 = load i64, i64* %PC
  %2287 = add i64 %2286, 266
  %2288 = load i64, i64* %PC
  %2289 = add i64 %2288, 5
  store i64 %2289, i64* %PC
  %2290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2287, i64* %2290, align 8, !tbaa !2428
  br label %block_401555

block_4012bc:                                     ; preds = %block_40129b, %block_4012b1
  %MEMORY.3 = phi %struct.Memory* [ %184, %block_40129b ], [ %184, %block_4012b1 ]
  %2291 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2292 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2293 = bitcast %union.vec128_t* %XMM0 to i8*
  %2294 = load i64, i64* %PC
  %2295 = add i64 %2294, 3
  store i64 %2295, i64* %PC
  %2296 = bitcast i8* %2292 to i64*
  %2297 = load i64, i64* %2296, align 1
  %2298 = getelementptr inbounds i8, i8* %2292, i64 8
  %2299 = bitcast i8* %2298 to i64*
  %2300 = load i64, i64* %2299, align 1
  %2301 = bitcast i8* %2293 to i64*
  %2302 = load i64, i64* %2301, align 1
  %2303 = getelementptr inbounds i8, i8* %2293, i64 8
  %2304 = bitcast i8* %2303 to i64*
  %2305 = load i64, i64* %2304, align 1
  %2306 = xor i64 %2302, %2297
  %2307 = xor i64 %2305, %2300
  %2308 = trunc i64 %2306 to i32
  %2309 = lshr i64 %2306, 32
  %2310 = trunc i64 %2309 to i32
  %2311 = bitcast i8* %2291 to i32*
  store i32 %2308, i32* %2311, align 1, !tbaa !2454
  %2312 = getelementptr inbounds i8, i8* %2291, i64 4
  %2313 = bitcast i8* %2312 to i32*
  store i32 %2310, i32* %2313, align 1, !tbaa !2454
  %2314 = trunc i64 %2307 to i32
  %2315 = getelementptr inbounds i8, i8* %2291, i64 8
  %2316 = bitcast i8* %2315 to i32*
  store i32 %2314, i32* %2316, align 1, !tbaa !2454
  %2317 = lshr i64 %2307, 32
  %2318 = trunc i64 %2317 to i32
  %2319 = getelementptr inbounds i8, i8* %2291, i64 12
  %2320 = bitcast i8* %2319 to i32*
  store i32 %2318, i32* %2320, align 1, !tbaa !2454
  %2321 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2322 = load i64, i64* %PC
  %2323 = add i64 %2322, 9
  store i64 %2323, i64* %PC
  %2324 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2325 = bitcast i8* %2321 to double*
  store double %2324, double* %2325, align 1, !tbaa !2452
  %2326 = getelementptr inbounds i8, i8* %2321, i64 8
  %2327 = bitcast i8* %2326 to double*
  store double 0.000000e+00, double* %2327, align 1, !tbaa !2452
  %2328 = bitcast %union.vec128_t* %XMM1 to i8*
  %2329 = bitcast %union.vec128_t* %XMM0 to i8*
  %2330 = load i64, i64* %PC
  %2331 = add i64 %2330, 4
  store i64 %2331, i64* %PC
  %2332 = bitcast i8* %2328 to double*
  %2333 = load double, double* %2332, align 1
  %2334 = bitcast i8* %2329 to double*
  %2335 = load double, double* %2334, align 1
  %2336 = fcmp uno double %2333, %2335
  br i1 %2336, label %2337, label %2349

; <label>:2337:                                   ; preds = %block_4012bc
  %2338 = fadd double %2333, %2335
  %2339 = bitcast double %2338 to i64
  %2340 = and i64 %2339, 9221120237041090560
  %2341 = icmp eq i64 %2340, 9218868437227405312
  %2342 = and i64 %2339, 2251799813685247
  %2343 = icmp ne i64 %2342, 0
  %2344 = and i1 %2341, %2343
  br i1 %2344, label %2345, label %2355

; <label>:2345:                                   ; preds = %2337
  %2346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2347 = load i64, i64* %2346, align 8, !tbaa !2428
  %2348 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2347, %struct.Memory* %MEMORY.3) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480

; <label>:2349:                                   ; preds = %block_4012bc
  %2350 = fcmp ogt double %2333, %2335
  br i1 %2350, label %2355, label %2351

; <label>:2351:                                   ; preds = %2349
  %2352 = fcmp olt double %2333, %2335
  br i1 %2352, label %2355, label %2353

; <label>:2353:                                   ; preds = %2351
  %2354 = fcmp oeq double %2333, %2335
  br i1 %2354, label %2355, label %2362

; <label>:2355:                                   ; preds = %2353, %2351, %2349, %2337
  %2356 = phi i8 [ 0, %2349 ], [ 0, %2351 ], [ 1, %2353 ], [ 1, %2337 ]
  %2357 = phi i8 [ 0, %2349 ], [ 0, %2351 ], [ 0, %2353 ], [ 1, %2337 ]
  %2358 = phi i8 [ 0, %2349 ], [ 1, %2351 ], [ 0, %2353 ], [ 1, %2337 ]
  %2359 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2356, i8* %2359, align 1, !tbaa !2451
  %2360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2357, i8* %2360, align 1, !tbaa !2451
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2358, i8* %2361, align 1, !tbaa !2451
  br label %2362

; <label>:2362:                                   ; preds = %2355, %2353
  %2363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2363, align 1, !tbaa !2451
  %2364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2364, align 1, !tbaa !2451
  %2365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2365, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480: ; preds = %2345, %2362
  %2366 = phi %struct.Memory* [ %2348, %2345 ], [ %MEMORY.3, %2362 ]
  %2367 = load i64, i64* %PC
  %2368 = add i64 %2367, 52
  %2369 = load i64, i64* %PC
  %2370 = add i64 %2369, 6
  %2371 = load i64, i64* %PC
  %2372 = add i64 %2371, 6
  store i64 %2372, i64* %PC
  %2373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2374 = load i8, i8* %2373, align 1, !tbaa !2448
  %2375 = icmp eq i8 %2374, 0
  %2376 = zext i1 %2375 to i8
  store i8 %2376, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2378 = select i1 %2375, i64 %2368, i64 %2370
  store i64 %2378, i64* %2377, align 8, !tbaa !2428
  %2379 = load i8, i8* %BRANCH_TAKEN
  %2380 = icmp eq i8 %2379, 1
  br i1 %2380, label %block_401300, label %block_4012d2

block_40113b:                                     ; preds = %block_401130, %block_40111a
  %MEMORY.4 = phi %struct.Memory* [ %184, %block_40111a ], [ %184, %block_401130 ]
  %2381 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2382 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2383 = bitcast %union.vec128_t* %XMM0 to i8*
  %2384 = load i64, i64* %PC
  %2385 = add i64 %2384, 3
  store i64 %2385, i64* %PC
  %2386 = bitcast i8* %2382 to i64*
  %2387 = load i64, i64* %2386, align 1
  %2388 = getelementptr inbounds i8, i8* %2382, i64 8
  %2389 = bitcast i8* %2388 to i64*
  %2390 = load i64, i64* %2389, align 1
  %2391 = bitcast i8* %2383 to i64*
  %2392 = load i64, i64* %2391, align 1
  %2393 = getelementptr inbounds i8, i8* %2383, i64 8
  %2394 = bitcast i8* %2393 to i64*
  %2395 = load i64, i64* %2394, align 1
  %2396 = xor i64 %2392, %2387
  %2397 = xor i64 %2395, %2390
  %2398 = trunc i64 %2396 to i32
  %2399 = lshr i64 %2396, 32
  %2400 = trunc i64 %2399 to i32
  %2401 = bitcast i8* %2381 to i32*
  store i32 %2398, i32* %2401, align 1, !tbaa !2454
  %2402 = getelementptr inbounds i8, i8* %2381, i64 4
  %2403 = bitcast i8* %2402 to i32*
  store i32 %2400, i32* %2403, align 1, !tbaa !2454
  %2404 = trunc i64 %2397 to i32
  %2405 = getelementptr inbounds i8, i8* %2381, i64 8
  %2406 = bitcast i8* %2405 to i32*
  store i32 %2404, i32* %2406, align 1, !tbaa !2454
  %2407 = lshr i64 %2397, 32
  %2408 = trunc i64 %2407 to i32
  %2409 = getelementptr inbounds i8, i8* %2381, i64 12
  %2410 = bitcast i8* %2409 to i32*
  store i32 %2408, i32* %2410, align 1, !tbaa !2454
  %2411 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2412 = load i64, i64* %PC
  %2413 = add i64 %2412, 9
  store i64 %2413, i64* %PC
  %2414 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2415 = bitcast i8* %2411 to double*
  store double %2414, double* %2415, align 1, !tbaa !2452
  %2416 = getelementptr inbounds i8, i8* %2411, i64 8
  %2417 = bitcast i8* %2416 to double*
  store double 0.000000e+00, double* %2417, align 1, !tbaa !2452
  %2418 = bitcast %union.vec128_t* %XMM1 to i8*
  %2419 = bitcast %union.vec128_t* %XMM0 to i8*
  %2420 = load i64, i64* %PC
  %2421 = add i64 %2420, 4
  store i64 %2421, i64* %PC
  %2422 = bitcast i8* %2418 to double*
  %2423 = load double, double* %2422, align 1
  %2424 = bitcast i8* %2419 to double*
  %2425 = load double, double* %2424, align 1
  %2426 = fcmp uno double %2423, %2425
  br i1 %2426, label %2427, label %2439

; <label>:2427:                                   ; preds = %block_40113b
  %2428 = fadd double %2423, %2425
  %2429 = bitcast double %2428 to i64
  %2430 = and i64 %2429, 9221120237041090560
  %2431 = icmp eq i64 %2430, 9218868437227405312
  %2432 = and i64 %2429, 2251799813685247
  %2433 = icmp ne i64 %2432, 0
  %2434 = and i1 %2431, %2433
  br i1 %2434, label %2435, label %2445

; <label>:2435:                                   ; preds = %2427
  %2436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2437 = load i64, i64* %2436, align 8, !tbaa !2428
  %2438 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2437, %struct.Memory* %MEMORY.4) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

; <label>:2439:                                   ; preds = %block_40113b
  %2440 = fcmp ogt double %2423, %2425
  br i1 %2440, label %2445, label %2441

; <label>:2441:                                   ; preds = %2439
  %2442 = fcmp olt double %2423, %2425
  br i1 %2442, label %2445, label %2443

; <label>:2443:                                   ; preds = %2441
  %2444 = fcmp oeq double %2423, %2425
  br i1 %2444, label %2445, label %2452

; <label>:2445:                                   ; preds = %2443, %2441, %2439, %2427
  %2446 = phi i8 [ 0, %2439 ], [ 0, %2441 ], [ 1, %2443 ], [ 1, %2427 ]
  %2447 = phi i8 [ 0, %2439 ], [ 0, %2441 ], [ 0, %2443 ], [ 1, %2427 ]
  %2448 = phi i8 [ 0, %2439 ], [ 1, %2441 ], [ 0, %2443 ], [ 1, %2427 ]
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2446, i8* %2449, align 1, !tbaa !2451
  %2450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2447, i8* %2450, align 1, !tbaa !2451
  %2451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2448, i8* %2451, align 1, !tbaa !2451
  br label %2452

; <label>:2452:                                   ; preds = %2445, %2443
  %2453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2453, align 1, !tbaa !2451
  %2454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2454, align 1, !tbaa !2451
  %2455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2455, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478: ; preds = %2435, %2452
  %2456 = phi %struct.Memory* [ %2438, %2435 ], [ %MEMORY.4, %2452 ]
  %2457 = load i64, i64* %PC
  %2458 = add i64 %2457, 52
  %2459 = load i64, i64* %PC
  %2460 = add i64 %2459, 6
  %2461 = load i64, i64* %PC
  %2462 = add i64 %2461, 6
  store i64 %2462, i64* %PC
  %2463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2464 = load i8, i8* %2463, align 1, !tbaa !2448
  %2465 = icmp eq i8 %2464, 0
  %2466 = zext i1 %2465 to i8
  store i8 %2466, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2468 = select i1 %2465, i64 %2458, i64 %2460
  store i64 %2468, i64* %2467, align 8, !tbaa !2428
  %2469 = load i8, i8* %BRANCH_TAKEN
  %2470 = icmp eq i8 %2469, 1
  br i1 %2470, label %block_40117f, label %block_401151

block_401136:                                     ; preds = %block_401130
  %2471 = load i64, i64* %PC
  %2472 = add i64 %2471, 272
  %2473 = load i64, i64* %PC
  %2474 = add i64 %2473, 5
  store i64 %2474, i64* %PC
  %2475 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2472, i64* %2475, align 8, !tbaa !2428
  %2476 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2477 = load i64, i64* %PC
  %2478 = add i64 %2477, 9
  store i64 %2478, i64* %PC
  %2479 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2480 = bitcast i8* %2476 to double*
  store double %2479, double* %2480, align 1, !tbaa !2452
  %2481 = getelementptr inbounds i8, i8* %2476, i64 8
  %2482 = bitcast i8* %2481 to double*
  store double 0.000000e+00, double* %2482, align 1, !tbaa !2452
  %2483 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2484 = load i64, i64* %PC
  %2485 = add i64 %2484, 9
  store i64 %2485, i64* %PC
  %2486 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2487 = bitcast i8* %2483 to double*
  store double %2486, double* %2487, align 1, !tbaa !2452
  %2488 = getelementptr inbounds i8, i8* %2483, i64 8
  %2489 = bitcast i8* %2488 to double*
  store double 0.000000e+00, double* %2489, align 1, !tbaa !2452
  %2490 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2491 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2492 = load i64, i64* %PC
  %2493 = add i64 %2492, 9
  store i64 %2493, i64* %PC
  %2494 = bitcast i8* %2491 to double*
  %2495 = load double, double* %2494, align 1
  %2496 = getelementptr inbounds i8, i8* %2491, i64 8
  %2497 = bitcast i8* %2496 to i64*
  %2498 = load i64, i64* %2497, align 1
  %2499 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2500 = fdiv double %2495, %2499
  %2501 = bitcast i8* %2490 to double*
  store double %2500, double* %2501, align 1, !tbaa !2452
  %2502 = getelementptr inbounds i8, i8* %2490, i64 8
  %2503 = bitcast i8* %2502 to i64*
  store i64 %2498, i64* %2503, align 1, !tbaa !2452
  %2504 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2505 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2506 = bitcast %union.vec128_t* %XMM1 to i8*
  %2507 = load i64, i64* %PC
  %2508 = add i64 %2507, 4
  store i64 %2508, i64* %PC
  %2509 = bitcast i8* %2505 to double*
  %2510 = load double, double* %2509, align 1
  %2511 = getelementptr inbounds i8, i8* %2505, i64 8
  %2512 = bitcast i8* %2511 to i64*
  %2513 = load i64, i64* %2512, align 1
  %2514 = bitcast i8* %2506 to double*
  %2515 = load double, double* %2514, align 1
  %2516 = fmul double %2510, %2515
  %2517 = bitcast i8* %2504 to double*
  store double %2516, double* %2517, align 1, !tbaa !2452
  %2518 = getelementptr inbounds i8, i8* %2504, i64 8
  %2519 = bitcast i8* %2518 to i64*
  store i64 %2513, i64* %2519, align 1, !tbaa !2452
  %2520 = bitcast %union.vec128_t* %XMM0 to i8*
  %2521 = load i64, i64* %PC
  %2522 = add i64 %2521, 9
  store i64 %2522, i64* %PC
  %2523 = bitcast i8* %2520 to double*
  %2524 = load double, double* %2523, align 1
  store double %2524, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2525 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2526 = load i64, i64* %PC
  %2527 = add i64 %2526, 9
  store i64 %2527, i64* %PC
  %2528 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2529 = bitcast i8* %2525 to double*
  store double %2528, double* %2529, align 1, !tbaa !2452
  %2530 = getelementptr inbounds i8, i8* %2525, i64 8
  %2531 = bitcast i8* %2530 to double*
  store double 0.000000e+00, double* %2531, align 1, !tbaa !2452
  %2532 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2533 = load i64, i64* %PC
  %2534 = add i64 %2533, 9
  store i64 %2534, i64* %PC
  %2535 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2536 = bitcast i8* %2532 to double*
  store double %2535, double* %2536, align 1, !tbaa !2452
  %2537 = getelementptr inbounds i8, i8* %2532, i64 8
  %2538 = bitcast i8* %2537 to double*
  store double 0.000000e+00, double* %2538, align 1, !tbaa !2452
  %2539 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2540 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2541 = load i64, i64* %PC
  %2542 = add i64 %2541, 9
  store i64 %2542, i64* %PC
  %2543 = bitcast i8* %2540 to double*
  %2544 = load double, double* %2543, align 1
  %2545 = getelementptr inbounds i8, i8* %2540, i64 8
  %2546 = bitcast i8* %2545 to i64*
  %2547 = load i64, i64* %2546, align 1
  %2548 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2549 = fdiv double %2544, %2548
  %2550 = bitcast i8* %2539 to double*
  store double %2549, double* %2550, align 1, !tbaa !2452
  %2551 = getelementptr inbounds i8, i8* %2539, i64 8
  %2552 = bitcast i8* %2551 to i64*
  store i64 %2547, i64* %2552, align 1, !tbaa !2452
  %2553 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2554 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2555 = bitcast %union.vec128_t* %XMM1 to i8*
  %2556 = load i64, i64* %PC
  %2557 = add i64 %2556, 4
  store i64 %2557, i64* %PC
  %2558 = bitcast i8* %2554 to double*
  %2559 = load double, double* %2558, align 1
  %2560 = getelementptr inbounds i8, i8* %2554, i64 8
  %2561 = bitcast i8* %2560 to i64*
  %2562 = load i64, i64* %2561, align 1
  %2563 = bitcast i8* %2555 to double*
  %2564 = load double, double* %2563, align 1
  %2565 = fmul double %2559, %2564
  %2566 = bitcast i8* %2553 to double*
  store double %2565, double* %2566, align 1, !tbaa !2452
  %2567 = getelementptr inbounds i8, i8* %2553, i64 8
  %2568 = bitcast i8* %2567 to i64*
  store i64 %2562, i64* %2568, align 1, !tbaa !2452
  %2569 = bitcast %union.vec128_t* %XMM0 to i8*
  %2570 = load i64, i64* %PC
  %2571 = add i64 %2570, 9
  store i64 %2571, i64* %PC
  %2572 = bitcast i8* %2569 to double*
  %2573 = load double, double* %2572, align 1
  store double %2573, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2574 = load i64, i64* %PC
  %2575 = add i64 %2574, 703
  %2576 = load i64, i64* %PC
  %2577 = add i64 %2576, 5
  store i64 %2577, i64* %PC
  %2578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2575, i64* %2578, align 8, !tbaa !2428
  br label %block_401555

block_4012b1:                                     ; preds = %block_40129b
  %2579 = load i64, i64* %PC
  %2580 = add i64 %2579, 11
  %2581 = load i64, i64* %PC
  %2582 = add i64 %2581, 6
  %2583 = load i64, i64* %PC
  %2584 = add i64 %2583, 6
  store i64 %2584, i64* %PC
  %2585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2586 = load i8, i8* %2585, align 1, !tbaa !2446
  store i8 %2586, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2588 = icmp ne i8 %2586, 0
  %2589 = select i1 %2588, i64 %2580, i64 %2582
  store i64 %2589, i64* %2587, align 8, !tbaa !2428
  %2590 = load i8, i8* %BRANCH_TAKEN
  %2591 = icmp eq i8 %2590, 1
  br i1 %2591, label %block_4012bc, label %block_4012b7

block_401151:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit478
  %2592 = load i64, i64* %PC
  %2593 = add i64 %2592, 46
  %2594 = load i64, i64* %PC
  %2595 = add i64 %2594, 6
  %2596 = load i64, i64* %PC
  %2597 = add i64 %2596, 6
  store i64 %2597, i64* %PC
  %2598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2599 = load i8, i8* %2598, align 1, !tbaa !2446
  store i8 %2599, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2601 = icmp ne i8 %2599, 0
  %2602 = select i1 %2601, i64 %2593, i64 %2595
  store i64 %2602, i64* %2600, align 8, !tbaa !2428
  %2603 = load i8, i8* %BRANCH_TAKEN
  %2604 = icmp eq i8 %2603, 1
  br i1 %2604, label %block_40117f, label %block_401157

block_4011a8:                                     ; preds = %block_401157, %block_40117f
  %MEMORY.5 = phi %struct.Memory* [ %MEMORY.0, %block_40117f ], [ %2456, %block_401157 ]
  %2605 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2606 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2607 = bitcast %union.vec128_t* %XMM0 to i8*
  %2608 = load i64, i64* %PC
  %2609 = add i64 %2608, 3
  store i64 %2609, i64* %PC
  %2610 = bitcast i8* %2606 to i64*
  %2611 = load i64, i64* %2610, align 1
  %2612 = getelementptr inbounds i8, i8* %2606, i64 8
  %2613 = bitcast i8* %2612 to i64*
  %2614 = load i64, i64* %2613, align 1
  %2615 = bitcast i8* %2607 to i64*
  %2616 = load i64, i64* %2615, align 1
  %2617 = getelementptr inbounds i8, i8* %2607, i64 8
  %2618 = bitcast i8* %2617 to i64*
  %2619 = load i64, i64* %2618, align 1
  %2620 = xor i64 %2616, %2611
  %2621 = xor i64 %2619, %2614
  %2622 = trunc i64 %2620 to i32
  %2623 = lshr i64 %2620, 32
  %2624 = trunc i64 %2623 to i32
  %2625 = bitcast i8* %2605 to i32*
  store i32 %2622, i32* %2625, align 1, !tbaa !2454
  %2626 = getelementptr inbounds i8, i8* %2605, i64 4
  %2627 = bitcast i8* %2626 to i32*
  store i32 %2624, i32* %2627, align 1, !tbaa !2454
  %2628 = trunc i64 %2621 to i32
  %2629 = getelementptr inbounds i8, i8* %2605, i64 8
  %2630 = bitcast i8* %2629 to i32*
  store i32 %2628, i32* %2630, align 1, !tbaa !2454
  %2631 = lshr i64 %2621, 32
  %2632 = trunc i64 %2631 to i32
  %2633 = getelementptr inbounds i8, i8* %2605, i64 12
  %2634 = bitcast i8* %2633 to i32*
  store i32 %2632, i32* %2634, align 1, !tbaa !2454
  %2635 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2636 = load i64, i64* %PC
  %2637 = add i64 %2636, 9
  store i64 %2637, i64* %PC
  %2638 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2639 = bitcast i8* %2635 to double*
  store double %2638, double* %2639, align 1, !tbaa !2452
  %2640 = getelementptr inbounds i8, i8* %2635, i64 8
  %2641 = bitcast i8* %2640 to double*
  store double 0.000000e+00, double* %2641, align 1, !tbaa !2452
  %2642 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2643 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2644 = load i64, i64* %PC
  %2645 = add i64 %2644, 9
  store i64 %2645, i64* %PC
  %2646 = bitcast i8* %2643 to double*
  %2647 = load double, double* %2646, align 1
  %2648 = getelementptr inbounds i8, i8* %2643, i64 8
  %2649 = bitcast i8* %2648 to i64*
  %2650 = load i64, i64* %2649, align 1
  %2651 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2652 = fdiv double %2647, %2651
  %2653 = bitcast i8* %2642 to double*
  store double %2652, double* %2653, align 1, !tbaa !2452
  %2654 = getelementptr inbounds i8, i8* %2642, i64 8
  %2655 = bitcast i8* %2654 to i64*
  store i64 %2650, i64* %2655, align 1, !tbaa !2452
  %2656 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2657 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2658 = load i64, i64* %RBP
  %2659 = sub i64 %2658, 24
  %2660 = load i64, i64* %PC
  %2661 = add i64 %2660, 5
  store i64 %2661, i64* %PC
  %2662 = bitcast i8* %2657 to double*
  %2663 = load double, double* %2662, align 1
  %2664 = getelementptr inbounds i8, i8* %2657, i64 8
  %2665 = bitcast i8* %2664 to i64*
  %2666 = load i64, i64* %2665, align 1
  %2667 = inttoptr i64 %2659 to double*
  %2668 = load double, double* %2667
  %2669 = fmul double %2663, %2668
  %2670 = bitcast i8* %2656 to double*
  store double %2669, double* %2670, align 1, !tbaa !2452
  %2671 = getelementptr inbounds i8, i8* %2656, i64 8
  %2672 = bitcast i8* %2671 to i64*
  store i64 %2666, i64* %2672, align 1, !tbaa !2452
  %2673 = load i64, i64* %RBP
  %2674 = sub i64 %2673, 32
  %2675 = bitcast %union.vec128_t* %XMM1 to i8*
  %2676 = load i64, i64* %PC
  %2677 = add i64 %2676, 5
  store i64 %2677, i64* %PC
  %2678 = bitcast i8* %2675 to double*
  %2679 = load double, double* %2678, align 1
  %2680 = inttoptr i64 %2674 to double*
  store double %2679, double* %2680
  %2681 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2682 = load i64, i64* %PC
  %2683 = add i64 %2682, 9
  store i64 %2683, i64* %PC
  %2684 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2685 = bitcast i8* %2681 to double*
  store double %2684, double* %2685, align 1, !tbaa !2452
  %2686 = getelementptr inbounds i8, i8* %2681, i64 8
  %2687 = bitcast i8* %2686 to double*
  store double 0.000000e+00, double* %2687, align 1, !tbaa !2452
  %2688 = load i64, i64* %RBP
  %2689 = sub i64 %2688, 40
  %2690 = bitcast %union.vec128_t* %XMM1 to i8*
  %2691 = load i64, i64* %PC
  %2692 = add i64 %2691, 5
  store i64 %2692, i64* %PC
  %2693 = bitcast i8* %2690 to double*
  %2694 = load double, double* %2693, align 1
  %2695 = inttoptr i64 %2689 to double*
  store double %2694, double* %2695
  %2696 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2697 = load i64, i64* %PC
  %2698 = add i64 %2697, 9
  store i64 %2698, i64* %PC
  %2699 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2700 = bitcast i8* %2696 to double*
  store double %2699, double* %2700, align 1, !tbaa !2452
  %2701 = getelementptr inbounds i8, i8* %2696, i64 8
  %2702 = bitcast i8* %2701 to double*
  store double 0.000000e+00, double* %2702, align 1, !tbaa !2452
  %2703 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2704 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2705 = load i64, i64* %RBP
  %2706 = sub i64 %2705, 24
  %2707 = load i64, i64* %PC
  %2708 = add i64 %2707, 5
  store i64 %2708, i64* %PC
  %2709 = bitcast i8* %2704 to double*
  %2710 = load double, double* %2709, align 1
  %2711 = getelementptr inbounds i8, i8* %2704, i64 8
  %2712 = bitcast i8* %2711 to i64*
  %2713 = load i64, i64* %2712, align 1
  %2714 = inttoptr i64 %2706 to double*
  %2715 = load double, double* %2714
  %2716 = fadd double %2710, %2715
  %2717 = bitcast i8* %2703 to double*
  store double %2716, double* %2717, align 1, !tbaa !2452
  %2718 = getelementptr inbounds i8, i8* %2703, i64 8
  %2719 = bitcast i8* %2718 to i64*
  store i64 %2713, i64* %2719, align 1, !tbaa !2452
  %2720 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2721 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2722 = load i64, i64* %RBP
  %2723 = sub i64 %2722, 32
  %2724 = load i64, i64* %PC
  %2725 = add i64 %2724, 5
  store i64 %2725, i64* %PC
  %2726 = bitcast i8* %2721 to double*
  %2727 = load double, double* %2726, align 1
  %2728 = getelementptr inbounds i8, i8* %2721, i64 8
  %2729 = bitcast i8* %2728 to i64*
  %2730 = load i64, i64* %2729, align 1
  %2731 = inttoptr i64 %2723 to double*
  %2732 = load double, double* %2731
  %2733 = fsub double %2727, %2732
  %2734 = bitcast i8* %2720 to double*
  store double %2733, double* %2734, align 1, !tbaa !2452
  %2735 = getelementptr inbounds i8, i8* %2720, i64 8
  %2736 = bitcast i8* %2735 to i64*
  store i64 %2730, i64* %2736, align 1, !tbaa !2452
  %2737 = bitcast %union.vec128_t* %XMM1 to i8*
  %2738 = load i64, i64* %PC
  %2739 = add i64 %2738, 9
  store i64 %2739, i64* %PC
  %2740 = bitcast i8* %2737 to double*
  %2741 = load double, double* %2740, align 1
  store double %2741, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2742 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2743 = load i64, i64* %PC
  %2744 = add i64 %2743, 9
  store i64 %2744, i64* %PC
  %2745 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %2746 = bitcast i8* %2742 to double*
  store double %2745, double* %2746, align 1, !tbaa !2452
  %2747 = getelementptr inbounds i8, i8* %2742, i64 8
  %2748 = bitcast i8* %2747 to double*
  store double 0.000000e+00, double* %2748, align 1, !tbaa !2452
  %2749 = bitcast %union.vec128_t* %XMM1 to i8*
  %2750 = bitcast %union.vec128_t* %XMM0 to i8*
  %2751 = load i64, i64* %PC
  %2752 = add i64 %2751, 4
  store i64 %2752, i64* %PC
  %2753 = bitcast i8* %2749 to double*
  %2754 = load double, double* %2753, align 1
  %2755 = bitcast i8* %2750 to double*
  %2756 = load double, double* %2755, align 1
  %2757 = fcmp uno double %2754, %2756
  br i1 %2757, label %2758, label %2770

; <label>:2758:                                   ; preds = %block_4011a8
  %2759 = fadd double %2754, %2756
  %2760 = bitcast double %2759 to i64
  %2761 = and i64 %2760, 9221120237041090560
  %2762 = icmp eq i64 %2761, 9218868437227405312
  %2763 = and i64 %2760, 2251799813685247
  %2764 = icmp ne i64 %2763, 0
  %2765 = and i1 %2762, %2764
  br i1 %2765, label %2766, label %2776

; <label>:2766:                                   ; preds = %2758
  %2767 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2768 = load i64, i64* %2767, align 8, !tbaa !2428
  %2769 = call %struct.Memory* @__remill_error(%struct.State* nonnull dereferenceable(3376) %0, i64 %2768, %struct.Memory* %MEMORY.5) #18
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

; <label>:2770:                                   ; preds = %block_4011a8
  %2771 = fcmp ogt double %2754, %2756
  br i1 %2771, label %2776, label %2772

; <label>:2772:                                   ; preds = %2770
  %2773 = fcmp olt double %2754, %2756
  br i1 %2773, label %2776, label %2774

; <label>:2774:                                   ; preds = %2772
  %2775 = fcmp oeq double %2754, %2756
  br i1 %2775, label %2776, label %2783

; <label>:2776:                                   ; preds = %2774, %2772, %2770, %2758
  %2777 = phi i8 [ 0, %2770 ], [ 0, %2772 ], [ 1, %2774 ], [ 1, %2758 ]
  %2778 = phi i8 [ 0, %2770 ], [ 0, %2772 ], [ 0, %2774 ], [ 1, %2758 ]
  %2779 = phi i8 [ 0, %2770 ], [ 1, %2772 ], [ 0, %2774 ], [ 1, %2758 ]
  %2780 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2777, i8* %2780, align 1, !tbaa !2451
  %2781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2778, i8* %2781, align 1, !tbaa !2451
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2779, i8* %2782, align 1, !tbaa !2451
  br label %2783

; <label>:2783:                                   ; preds = %2776, %2774
  %2784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2784, align 1, !tbaa !2451
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %2785, align 1, !tbaa !2451
  %2786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2786, align 1, !tbaa !2451
  br label %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit

_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit: ; preds = %2766, %2783
  %2787 = phi %struct.Memory* [ %2769, %2766 ], [ %MEMORY.5, %2783 ]
  %2788 = load i64, i64* %PC
  %2789 = add i64 %2788, 17
  %2790 = load i64, i64* %PC
  %2791 = add i64 %2790, 6
  %2792 = load i64, i64* %PC
  %2793 = add i64 %2792, 6
  store i64 %2793, i64* %PC
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2795 = load i8, i8* %2794, align 1, !tbaa !2448
  %2796 = icmp eq i8 %2795, 0
  %2797 = zext i1 %2796 to i8
  store i8 %2797, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2799 = select i1 %2796, i64 %2789, i64 %2791
  store i64 %2799, i64* %2798, align 8, !tbaa !2428
  %2800 = load i8, i8* %BRANCH_TAKEN
  %2801 = icmp eq i8 %2800, 1
  br i1 %2801, label %block_40120f, label %block_401204

block_4012b7:                                     ; preds = %block_4012b1
  %2802 = load i64, i64* %PC
  %2803 = add i64 %2802, 409
  %2804 = load i64, i64* %PC
  %2805 = add i64 %2804, 5
  store i64 %2805, i64* %PC
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2803, i64* %2806, align 8, !tbaa !2428
  %2807 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2808 = load i64, i64* %PC
  %2809 = add i64 %2808, 9
  store i64 %2809, i64* %PC
  %2810 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %2811 = bitcast i8* %2807 to double*
  store double %2810, double* %2811, align 1, !tbaa !2452
  %2812 = getelementptr inbounds i8, i8* %2807, i64 8
  %2813 = bitcast i8* %2812 to double*
  store double 0.000000e+00, double* %2813, align 1, !tbaa !2452
  %2814 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2815 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2816 = load i64, i64* %PC
  %2817 = add i64 %2816, 9
  store i64 %2817, i64* %PC
  %2818 = bitcast i8* %2815 to double*
  %2819 = load double, double* %2818, align 1
  %2820 = getelementptr inbounds i8, i8* %2815, i64 8
  %2821 = bitcast i8* %2820 to i64*
  %2822 = load i64, i64* %2821, align 1
  %2823 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %2824 = fdiv double %2819, %2823
  %2825 = bitcast i8* %2814 to double*
  store double %2824, double* %2825, align 1, !tbaa !2452
  %2826 = getelementptr inbounds i8, i8* %2814, i64 8
  %2827 = bitcast i8* %2826 to i64*
  store i64 %2822, i64* %2827, align 1, !tbaa !2452
  %2828 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2829 = load i64, i64* %PC
  %2830 = add i64 %2829, 9
  store i64 %2830, i64* %PC
  %2831 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2832 = bitcast i8* %2828 to double*
  store double %2831, double* %2832, align 1, !tbaa !2452
  %2833 = getelementptr inbounds i8, i8* %2828, i64 8
  %2834 = bitcast i8* %2833 to double*
  store double 0.000000e+00, double* %2834, align 1, !tbaa !2452
  %2835 = load i64, i64* %RBP
  %2836 = sub i64 %2835, 96
  %2837 = bitcast %union.vec128_t* %XMM0 to i8*
  %2838 = load i64, i64* %PC
  %2839 = add i64 %2838, 5
  store i64 %2839, i64* %PC
  %2840 = bitcast i8* %2837 to double*
  %2841 = load double, double* %2840, align 1
  %2842 = inttoptr i64 %2836 to double*
  store double %2841, double* %2842
  %2843 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2844 = bitcast %union.vec128_t* %XMM1 to i8*
  %2845 = load i64, i64* %PC
  %2846 = add i64 %2845, 3
  store i64 %2846, i64* %PC
  %2847 = bitcast i8* %2844 to <2 x i32>*
  %2848 = load <2 x i32>, <2 x i32>* %2847, align 1
  %2849 = getelementptr inbounds i8, i8* %2844, i64 8
  %2850 = bitcast i8* %2849 to <2 x i32>*
  %2851 = load <2 x i32>, <2 x i32>* %2850, align 1
  %2852 = extractelement <2 x i32> %2848, i32 0
  %2853 = bitcast i8* %2843 to i32*
  store i32 %2852, i32* %2853, align 1, !tbaa !2455
  %2854 = extractelement <2 x i32> %2848, i32 1
  %2855 = getelementptr inbounds i8, i8* %2843, i64 4
  %2856 = bitcast i8* %2855 to i32*
  store i32 %2854, i32* %2856, align 1, !tbaa !2455
  %2857 = extractelement <2 x i32> %2851, i32 0
  %2858 = getelementptr inbounds i8, i8* %2843, i64 8
  %2859 = bitcast i8* %2858 to i32*
  store i32 %2857, i32* %2859, align 1, !tbaa !2455
  %2860 = extractelement <2 x i32> %2851, i32 1
  %2861 = getelementptr inbounds i8, i8* %2843, i64 12
  %2862 = bitcast i8* %2861 to i32*
  store i32 %2860, i32* %2862, align 1, !tbaa !2455
  %2863 = load i64, i64* %PC
  %2864 = sub i64 %2863, 3683
  %2865 = load i64, i64* %PC
  %2866 = add i64 %2865, 5
  %2867 = load i64, i64* %PC
  %2868 = add i64 %2867, 5
  store i64 %2868, i64* %PC
  %2869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2870 = load i64, i64* %2869, align 8, !tbaa !2428
  %2871 = add i64 %2870, -8
  %2872 = inttoptr i64 %2871 to i64*
  store i64 %2866, i64* %2872
  store i64 %2871, i64* %2869, align 8, !tbaa !2428
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2864, i64* %2873, align 8, !tbaa !2428
  %2874 = load i64, i64* %PC
  %2875 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2875)
  %2876 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2876)
  %2877 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2877)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i322)
  %2878 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2878)
  %2879 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2879)
  %2880 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2880)
  %2881 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2881)
  %2882 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2882)
  %2883 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2883)
  %2884 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2884)
  %2885 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2885)
  %2886 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2886)
  %2887 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2887)
  %2888 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2888)
  %2889 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2889)
  %2890 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2890)
  %2891 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2891)
  %2892 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2892)
  %2893 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2893)
  %2894 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2894)
  %2895 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2895)
  %2896 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2896)
  %2897 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2897)
  store %struct.State* %0, %struct.State** %state.i319, align 8, !noalias !2475
  store i64 %2874, i64* %curr_pc.i320, align 8, !noalias !2475
  store %struct.Memory* %184, %struct.Memory** %memory.i321, align 8, !noalias !2475
  store i8 0, i8* %BRANCH_TAKEN.i322, align 1, !noalias !2475
  store i64 0, i64* %SS_BASE.i323, align 8, !noalias !2475
  store i64 0, i64* %ES_BASE.i324, align 8, !noalias !2475
  store i64 0, i64* %DS_BASE.i325, align 8, !noalias !2475
  store i64 0, i64* %CS_BASE.i326, align 8, !noalias !2475
  store %struct.State* %0, %struct.State** %STATE.i327, align 8, !noalias !2475
  store %struct.Memory* %184, %struct.Memory** %MEMORY.i328, align 8, !noalias !2475
  %2898 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2899 = getelementptr inbounds %struct.GPR, %struct.GPR* %2898, i32 0, i32 33
  %2900 = getelementptr inbounds %struct.Reg, %struct.Reg* %2899, i32 0, i32 0
  %PC.i343 = bitcast %union.anon* %2900 to i64*
  store i64 %2874, i64* %PC.i343, align 8, !alias.scope !2479, !noalias !2480
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2902 = getelementptr inbounds %struct.GPR, %struct.GPR* %2901, i32 0, i32 1
  %2903 = getelementptr inbounds %struct.Reg, %struct.Reg* %2902, i32 0, i32 0
  %2904 = bitcast %union.anon* %2903 to %struct.anon.2*
  %AH.i344 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2904, i32 0, i32 1
  %2905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2906 = getelementptr inbounds %struct.GPR, %struct.GPR* %2905, i32 0, i32 3
  %2907 = getelementptr inbounds %struct.Reg, %struct.Reg* %2906, i32 0, i32 0
  %2908 = bitcast %union.anon* %2907 to %struct.anon.2*
  %BH.i345 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2908, i32 0, i32 1
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2910 = getelementptr inbounds %struct.GPR, %struct.GPR* %2909, i32 0, i32 5
  %2911 = getelementptr inbounds %struct.Reg, %struct.Reg* %2910, i32 0, i32 0
  %2912 = bitcast %union.anon* %2911 to %struct.anon.2*
  %CH.i346 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2912, i32 0, i32 1
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 7
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %2916 = bitcast %union.anon* %2915 to %struct.anon.2*
  %DH.i347 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2916, i32 0, i32 1
  %2917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2918 = getelementptr inbounds %struct.GPR, %struct.GPR* %2917, i32 0, i32 1
  %2919 = getelementptr inbounds %struct.Reg, %struct.Reg* %2918, i32 0, i32 0
  %2920 = bitcast %union.anon* %2919 to %struct.anon.2*
  %AL.i348 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2920, i32 0, i32 0
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 3
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %2924 = bitcast %union.anon* %2923 to %struct.anon.2*
  %BL.i349 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2924, i32 0, i32 0
  %2925 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2926 = getelementptr inbounds %struct.GPR, %struct.GPR* %2925, i32 0, i32 5
  %2927 = getelementptr inbounds %struct.Reg, %struct.Reg* %2926, i32 0, i32 0
  %2928 = bitcast %union.anon* %2927 to %struct.anon.2*
  %CL.i350 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2928, i32 0, i32 0
  %2929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2930 = getelementptr inbounds %struct.GPR, %struct.GPR* %2929, i32 0, i32 7
  %2931 = getelementptr inbounds %struct.Reg, %struct.Reg* %2930, i32 0, i32 0
  %2932 = bitcast %union.anon* %2931 to %struct.anon.2*
  %DL.i351 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2932, i32 0, i32 0
  %2933 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2934 = getelementptr inbounds %struct.GPR, %struct.GPR* %2933, i32 0, i32 9
  %2935 = getelementptr inbounds %struct.Reg, %struct.Reg* %2934, i32 0, i32 0
  %2936 = bitcast %union.anon* %2935 to %struct.anon.2*
  %SIL.i352 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2936, i32 0, i32 0
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 11
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %2940 = bitcast %union.anon* %2939 to %struct.anon.2*
  %DIL.i353 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2940, i32 0, i32 0
  %2941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2942 = getelementptr inbounds %struct.GPR, %struct.GPR* %2941, i32 0, i32 13
  %2943 = getelementptr inbounds %struct.Reg, %struct.Reg* %2942, i32 0, i32 0
  %2944 = bitcast %union.anon* %2943 to %struct.anon.2*
  %SPL.i354 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2944, i32 0, i32 0
  %2945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2946 = getelementptr inbounds %struct.GPR, %struct.GPR* %2945, i32 0, i32 15
  %2947 = getelementptr inbounds %struct.Reg, %struct.Reg* %2946, i32 0, i32 0
  %2948 = bitcast %union.anon* %2947 to %struct.anon.2*
  %BPL.i355 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2948, i32 0, i32 0
  %2949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2950 = getelementptr inbounds %struct.GPR, %struct.GPR* %2949, i32 0, i32 17
  %2951 = getelementptr inbounds %struct.Reg, %struct.Reg* %2950, i32 0, i32 0
  %2952 = bitcast %union.anon* %2951 to %struct.anon.2*
  %R8B.i356 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2952, i32 0, i32 0
  %2953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2954 = getelementptr inbounds %struct.GPR, %struct.GPR* %2953, i32 0, i32 19
  %2955 = getelementptr inbounds %struct.Reg, %struct.Reg* %2954, i32 0, i32 0
  %2956 = bitcast %union.anon* %2955 to %struct.anon.2*
  %R9B.i357 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2956, i32 0, i32 0
  %2957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2958 = getelementptr inbounds %struct.GPR, %struct.GPR* %2957, i32 0, i32 21
  %2959 = getelementptr inbounds %struct.Reg, %struct.Reg* %2958, i32 0, i32 0
  %2960 = bitcast %union.anon* %2959 to %struct.anon.2*
  %R10B.i358 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2960, i32 0, i32 0
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2962 = getelementptr inbounds %struct.GPR, %struct.GPR* %2961, i32 0, i32 23
  %2963 = getelementptr inbounds %struct.Reg, %struct.Reg* %2962, i32 0, i32 0
  %2964 = bitcast %union.anon* %2963 to %struct.anon.2*
  %R11B.i359 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2964, i32 0, i32 0
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2966 = getelementptr inbounds %struct.GPR, %struct.GPR* %2965, i32 0, i32 25
  %2967 = getelementptr inbounds %struct.Reg, %struct.Reg* %2966, i32 0, i32 0
  %2968 = bitcast %union.anon* %2967 to %struct.anon.2*
  %R12B.i360 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2968, i32 0, i32 0
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2970 = getelementptr inbounds %struct.GPR, %struct.GPR* %2969, i32 0, i32 27
  %2971 = getelementptr inbounds %struct.Reg, %struct.Reg* %2970, i32 0, i32 0
  %2972 = bitcast %union.anon* %2971 to %struct.anon.2*
  %R13B.i361 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2972, i32 0, i32 0
  %2973 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2974 = getelementptr inbounds %struct.GPR, %struct.GPR* %2973, i32 0, i32 29
  %2975 = getelementptr inbounds %struct.Reg, %struct.Reg* %2974, i32 0, i32 0
  %2976 = bitcast %union.anon* %2975 to %struct.anon.2*
  %R14B.i362 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2976, i32 0, i32 0
  %2977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2978 = getelementptr inbounds %struct.GPR, %struct.GPR* %2977, i32 0, i32 31
  %2979 = getelementptr inbounds %struct.Reg, %struct.Reg* %2978, i32 0, i32 0
  %2980 = bitcast %union.anon* %2979 to %struct.anon.2*
  %R15B.i363 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %2980, i32 0, i32 0
  %2981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2982 = getelementptr inbounds %struct.GPR, %struct.GPR* %2981, i32 0, i32 1
  %2983 = getelementptr inbounds %struct.Reg, %struct.Reg* %2982, i32 0, i32 0
  %AX.i364 = bitcast %union.anon* %2983 to i16*
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2985 = getelementptr inbounds %struct.GPR, %struct.GPR* %2984, i32 0, i32 3
  %2986 = getelementptr inbounds %struct.Reg, %struct.Reg* %2985, i32 0, i32 0
  %BX.i365 = bitcast %union.anon* %2986 to i16*
  %2987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2988 = getelementptr inbounds %struct.GPR, %struct.GPR* %2987, i32 0, i32 5
  %2989 = getelementptr inbounds %struct.Reg, %struct.Reg* %2988, i32 0, i32 0
  %CX.i366 = bitcast %union.anon* %2989 to i16*
  %2990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2991 = getelementptr inbounds %struct.GPR, %struct.GPR* %2990, i32 0, i32 7
  %2992 = getelementptr inbounds %struct.Reg, %struct.Reg* %2991, i32 0, i32 0
  %DX.i367 = bitcast %union.anon* %2992 to i16*
  %2993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2994 = getelementptr inbounds %struct.GPR, %struct.GPR* %2993, i32 0, i32 9
  %2995 = getelementptr inbounds %struct.Reg, %struct.Reg* %2994, i32 0, i32 0
  %SI.i368 = bitcast %union.anon* %2995 to i16*
  %2996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2997 = getelementptr inbounds %struct.GPR, %struct.GPR* %2996, i32 0, i32 11
  %2998 = getelementptr inbounds %struct.Reg, %struct.Reg* %2997, i32 0, i32 0
  %DI.i369 = bitcast %union.anon* %2998 to i16*
  %2999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3000 = getelementptr inbounds %struct.GPR, %struct.GPR* %2999, i32 0, i32 13
  %3001 = getelementptr inbounds %struct.Reg, %struct.Reg* %3000, i32 0, i32 0
  %SP.i370 = bitcast %union.anon* %3001 to i16*
  %3002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3003 = getelementptr inbounds %struct.GPR, %struct.GPR* %3002, i32 0, i32 15
  %3004 = getelementptr inbounds %struct.Reg, %struct.Reg* %3003, i32 0, i32 0
  %BP.i371 = bitcast %union.anon* %3004 to i16*
  %3005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3006 = getelementptr inbounds %struct.GPR, %struct.GPR* %3005, i32 0, i32 17
  %3007 = getelementptr inbounds %struct.Reg, %struct.Reg* %3006, i32 0, i32 0
  %R8W.i372 = bitcast %union.anon* %3007 to i16*
  %3008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3009 = getelementptr inbounds %struct.GPR, %struct.GPR* %3008, i32 0, i32 19
  %3010 = getelementptr inbounds %struct.Reg, %struct.Reg* %3009, i32 0, i32 0
  %R9W.i373 = bitcast %union.anon* %3010 to i16*
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3012 = getelementptr inbounds %struct.GPR, %struct.GPR* %3011, i32 0, i32 21
  %3013 = getelementptr inbounds %struct.Reg, %struct.Reg* %3012, i32 0, i32 0
  %R10W.i374 = bitcast %union.anon* %3013 to i16*
  %3014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3015 = getelementptr inbounds %struct.GPR, %struct.GPR* %3014, i32 0, i32 23
  %3016 = getelementptr inbounds %struct.Reg, %struct.Reg* %3015, i32 0, i32 0
  %R11W.i375 = bitcast %union.anon* %3016 to i16*
  %3017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3018 = getelementptr inbounds %struct.GPR, %struct.GPR* %3017, i32 0, i32 25
  %3019 = getelementptr inbounds %struct.Reg, %struct.Reg* %3018, i32 0, i32 0
  %R12W.i376 = bitcast %union.anon* %3019 to i16*
  %3020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3021 = getelementptr inbounds %struct.GPR, %struct.GPR* %3020, i32 0, i32 27
  %3022 = getelementptr inbounds %struct.Reg, %struct.Reg* %3021, i32 0, i32 0
  %R13W.i377 = bitcast %union.anon* %3022 to i16*
  %3023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3024 = getelementptr inbounds %struct.GPR, %struct.GPR* %3023, i32 0, i32 29
  %3025 = getelementptr inbounds %struct.Reg, %struct.Reg* %3024, i32 0, i32 0
  %R14W.i378 = bitcast %union.anon* %3025 to i16*
  %3026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3027 = getelementptr inbounds %struct.GPR, %struct.GPR* %3026, i32 0, i32 31
  %3028 = getelementptr inbounds %struct.Reg, %struct.Reg* %3027, i32 0, i32 0
  %R15W.i379 = bitcast %union.anon* %3028 to i16*
  %3029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3030 = getelementptr inbounds %struct.GPR, %struct.GPR* %3029, i32 0, i32 33
  %3031 = getelementptr inbounds %struct.Reg, %struct.Reg* %3030, i32 0, i32 0
  %IP.i380 = bitcast %union.anon* %3031 to i16*
  %3032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3033 = getelementptr inbounds %struct.GPR, %struct.GPR* %3032, i32 0, i32 1
  %3034 = getelementptr inbounds %struct.Reg, %struct.Reg* %3033, i32 0, i32 0
  %EAX.i381 = bitcast %union.anon* %3034 to i32*
  %3035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3036 = getelementptr inbounds %struct.GPR, %struct.GPR* %3035, i32 0, i32 3
  %3037 = getelementptr inbounds %struct.Reg, %struct.Reg* %3036, i32 0, i32 0
  %EBX.i382 = bitcast %union.anon* %3037 to i32*
  %3038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3039 = getelementptr inbounds %struct.GPR, %struct.GPR* %3038, i32 0, i32 5
  %3040 = getelementptr inbounds %struct.Reg, %struct.Reg* %3039, i32 0, i32 0
  %ECX.i383 = bitcast %union.anon* %3040 to i32*
  %3041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3042 = getelementptr inbounds %struct.GPR, %struct.GPR* %3041, i32 0, i32 7
  %3043 = getelementptr inbounds %struct.Reg, %struct.Reg* %3042, i32 0, i32 0
  %EDX.i384 = bitcast %union.anon* %3043 to i32*
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3045 = getelementptr inbounds %struct.GPR, %struct.GPR* %3044, i32 0, i32 9
  %3046 = getelementptr inbounds %struct.Reg, %struct.Reg* %3045, i32 0, i32 0
  %ESI.i385 = bitcast %union.anon* %3046 to i32*
  %3047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3048 = getelementptr inbounds %struct.GPR, %struct.GPR* %3047, i32 0, i32 11
  %3049 = getelementptr inbounds %struct.Reg, %struct.Reg* %3048, i32 0, i32 0
  %EDI.i386 = bitcast %union.anon* %3049 to i32*
  %3050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3051 = getelementptr inbounds %struct.GPR, %struct.GPR* %3050, i32 0, i32 13
  %3052 = getelementptr inbounds %struct.Reg, %struct.Reg* %3051, i32 0, i32 0
  %ESP.i387 = bitcast %union.anon* %3052 to i32*
  %3053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3054 = getelementptr inbounds %struct.GPR, %struct.GPR* %3053, i32 0, i32 15
  %3055 = getelementptr inbounds %struct.Reg, %struct.Reg* %3054, i32 0, i32 0
  %EBP.i388 = bitcast %union.anon* %3055 to i32*
  %3056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3057 = getelementptr inbounds %struct.GPR, %struct.GPR* %3056, i32 0, i32 33
  %3058 = getelementptr inbounds %struct.Reg, %struct.Reg* %3057, i32 0, i32 0
  %EIP.i389 = bitcast %union.anon* %3058 to i32*
  %3059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3060 = getelementptr inbounds %struct.GPR, %struct.GPR* %3059, i32 0, i32 17
  %3061 = getelementptr inbounds %struct.Reg, %struct.Reg* %3060, i32 0, i32 0
  %R8D.i390 = bitcast %union.anon* %3061 to i32*
  %3062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3063 = getelementptr inbounds %struct.GPR, %struct.GPR* %3062, i32 0, i32 19
  %3064 = getelementptr inbounds %struct.Reg, %struct.Reg* %3063, i32 0, i32 0
  %R9D.i391 = bitcast %union.anon* %3064 to i32*
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3066 = getelementptr inbounds %struct.GPR, %struct.GPR* %3065, i32 0, i32 21
  %3067 = getelementptr inbounds %struct.Reg, %struct.Reg* %3066, i32 0, i32 0
  %R10D.i392 = bitcast %union.anon* %3067 to i32*
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3069 = getelementptr inbounds %struct.GPR, %struct.GPR* %3068, i32 0, i32 23
  %3070 = getelementptr inbounds %struct.Reg, %struct.Reg* %3069, i32 0, i32 0
  %R11D.i393 = bitcast %union.anon* %3070 to i32*
  %3071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3072 = getelementptr inbounds %struct.GPR, %struct.GPR* %3071, i32 0, i32 25
  %3073 = getelementptr inbounds %struct.Reg, %struct.Reg* %3072, i32 0, i32 0
  %R12D.i394 = bitcast %union.anon* %3073 to i32*
  %3074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3075 = getelementptr inbounds %struct.GPR, %struct.GPR* %3074, i32 0, i32 27
  %3076 = getelementptr inbounds %struct.Reg, %struct.Reg* %3075, i32 0, i32 0
  %R13D.i395 = bitcast %union.anon* %3076 to i32*
  %3077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3078 = getelementptr inbounds %struct.GPR, %struct.GPR* %3077, i32 0, i32 29
  %3079 = getelementptr inbounds %struct.Reg, %struct.Reg* %3078, i32 0, i32 0
  %R14D.i396 = bitcast %union.anon* %3079 to i32*
  %3080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3081 = getelementptr inbounds %struct.GPR, %struct.GPR* %3080, i32 0, i32 31
  %3082 = getelementptr inbounds %struct.Reg, %struct.Reg* %3081, i32 0, i32 0
  %R15D.i397 = bitcast %union.anon* %3082 to i32*
  %3083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3084 = getelementptr inbounds %struct.GPR, %struct.GPR* %3083, i32 0, i32 1
  %3085 = getelementptr inbounds %struct.Reg, %struct.Reg* %3084, i32 0, i32 0
  %RAX.i398 = bitcast %union.anon* %3085 to i64*
  %3086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3087 = getelementptr inbounds %struct.GPR, %struct.GPR* %3086, i32 0, i32 3
  %3088 = getelementptr inbounds %struct.Reg, %struct.Reg* %3087, i32 0, i32 0
  %RBX.i399 = bitcast %union.anon* %3088 to i64*
  %3089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3090 = getelementptr inbounds %struct.GPR, %struct.GPR* %3089, i32 0, i32 5
  %3091 = getelementptr inbounds %struct.Reg, %struct.Reg* %3090, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %3091 to i64*
  %3092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3093 = getelementptr inbounds %struct.GPR, %struct.GPR* %3092, i32 0, i32 7
  %3094 = getelementptr inbounds %struct.Reg, %struct.Reg* %3093, i32 0, i32 0
  %RDX.i401 = bitcast %union.anon* %3094 to i64*
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3096 = getelementptr inbounds %struct.GPR, %struct.GPR* %3095, i32 0, i32 9
  %3097 = getelementptr inbounds %struct.Reg, %struct.Reg* %3096, i32 0, i32 0
  %RSI.i402 = bitcast %union.anon* %3097 to i64*
  %3098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3099 = getelementptr inbounds %struct.GPR, %struct.GPR* %3098, i32 0, i32 11
  %3100 = getelementptr inbounds %struct.Reg, %struct.Reg* %3099, i32 0, i32 0
  %RDI.i403 = bitcast %union.anon* %3100 to i64*
  %3101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3102 = getelementptr inbounds %struct.GPR, %struct.GPR* %3101, i32 0, i32 13
  %3103 = getelementptr inbounds %struct.Reg, %struct.Reg* %3102, i32 0, i32 0
  %RSP.i404 = bitcast %union.anon* %3103 to i64*
  %3104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3105 = getelementptr inbounds %struct.GPR, %struct.GPR* %3104, i32 0, i32 15
  %3106 = getelementptr inbounds %struct.Reg, %struct.Reg* %3105, i32 0, i32 0
  %RBP.i405 = bitcast %union.anon* %3106 to i64*
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3108 = getelementptr inbounds %struct.GPR, %struct.GPR* %3107, i32 0, i32 17
  %3109 = getelementptr inbounds %struct.Reg, %struct.Reg* %3108, i32 0, i32 0
  %R8.i406 = bitcast %union.anon* %3109 to i64*
  %3110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3111 = getelementptr inbounds %struct.GPR, %struct.GPR* %3110, i32 0, i32 19
  %3112 = getelementptr inbounds %struct.Reg, %struct.Reg* %3111, i32 0, i32 0
  %R9.i407 = bitcast %union.anon* %3112 to i64*
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3114 = getelementptr inbounds %struct.GPR, %struct.GPR* %3113, i32 0, i32 21
  %3115 = getelementptr inbounds %struct.Reg, %struct.Reg* %3114, i32 0, i32 0
  %R10.i408 = bitcast %union.anon* %3115 to i64*
  %3116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3117 = getelementptr inbounds %struct.GPR, %struct.GPR* %3116, i32 0, i32 23
  %3118 = getelementptr inbounds %struct.Reg, %struct.Reg* %3117, i32 0, i32 0
  %R11.i409 = bitcast %union.anon* %3118 to i64*
  %3119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3120 = getelementptr inbounds %struct.GPR, %struct.GPR* %3119, i32 0, i32 25
  %3121 = getelementptr inbounds %struct.Reg, %struct.Reg* %3120, i32 0, i32 0
  %R12.i410 = bitcast %union.anon* %3121 to i64*
  %3122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3123 = getelementptr inbounds %struct.GPR, %struct.GPR* %3122, i32 0, i32 27
  %3124 = getelementptr inbounds %struct.Reg, %struct.Reg* %3123, i32 0, i32 0
  %R13.i411 = bitcast %union.anon* %3124 to i64*
  %3125 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3126 = getelementptr inbounds %struct.GPR, %struct.GPR* %3125, i32 0, i32 29
  %3127 = getelementptr inbounds %struct.Reg, %struct.Reg* %3126, i32 0, i32 0
  %R14.i412 = bitcast %union.anon* %3127 to i64*
  %3128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3129 = getelementptr inbounds %struct.GPR, %struct.GPR* %3128, i32 0, i32 31
  %3130 = getelementptr inbounds %struct.Reg, %struct.Reg* %3129, i32 0, i32 0
  %R15.i413 = bitcast %union.anon* %3130 to i64*
  %3131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3132 = getelementptr inbounds %struct.GPR, %struct.GPR* %3131, i32 0, i32 33
  %3133 = getelementptr inbounds %struct.Reg, %struct.Reg* %3132, i32 0, i32 0
  %RIP.i414 = bitcast %union.anon* %3133 to i64*
  %3134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3135 = getelementptr inbounds %struct.Segments, %struct.Segments* %3134, i32 0, i32 1
  %SS.i415 = bitcast %union.SegmentSelector* %3135 to i16*
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3137 = getelementptr inbounds %struct.Segments, %struct.Segments* %3136, i32 0, i32 3
  %ES.i416 = bitcast %union.SegmentSelector* %3137 to i16*
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3139 = getelementptr inbounds %struct.Segments, %struct.Segments* %3138, i32 0, i32 5
  %GS.i417 = bitcast %union.SegmentSelector* %3139 to i16*
  %3140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3141 = getelementptr inbounds %struct.Segments, %struct.Segments* %3140, i32 0, i32 7
  %FS.i418 = bitcast %union.SegmentSelector* %3141 to i16*
  %3142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3143 = getelementptr inbounds %struct.Segments, %struct.Segments* %3142, i32 0, i32 9
  %DS.i419 = bitcast %union.SegmentSelector* %3143 to i16*
  %3144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3145 = getelementptr inbounds %struct.Segments, %struct.Segments* %3144, i32 0, i32 11
  %CS.i420 = bitcast %union.SegmentSelector* %3145 to i16*
  %3146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3147 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3146, i32 0, i32 5
  %3148 = getelementptr inbounds %struct.Reg, %struct.Reg* %3147, i32 0, i32 0
  %GS_BASE.i421 = bitcast %union.anon* %3148 to i64*
  %3149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3150 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3149, i32 0, i32 7
  %3151 = getelementptr inbounds %struct.Reg, %struct.Reg* %3150, i32 0, i32 0
  %FS_BASE.i422 = bitcast %union.anon* %3151 to i64*
  %3152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3153 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3152, i64 0, i64 0
  %YMM0.i423 = bitcast %union.VectorReg* %3153 to %"class.std::bitset"*
  %3154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3155 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3154, i64 0, i64 1
  %YMM1.i424 = bitcast %union.VectorReg* %3155 to %"class.std::bitset"*
  %3156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3156, i64 0, i64 2
  %YMM2.i425 = bitcast %union.VectorReg* %3157 to %"class.std::bitset"*
  %3158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3159 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3158, i64 0, i64 3
  %YMM3.i426 = bitcast %union.VectorReg* %3159 to %"class.std::bitset"*
  %3160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3161 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3160, i64 0, i64 4
  %YMM4.i427 = bitcast %union.VectorReg* %3161 to %"class.std::bitset"*
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3163 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3162, i64 0, i64 5
  %YMM5.i428 = bitcast %union.VectorReg* %3163 to %"class.std::bitset"*
  %3164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3165 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3164, i64 0, i64 6
  %YMM6.i429 = bitcast %union.VectorReg* %3165 to %"class.std::bitset"*
  %3166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3167 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3166, i64 0, i64 7
  %YMM7.i430 = bitcast %union.VectorReg* %3167 to %"class.std::bitset"*
  %3168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3169 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3168, i64 0, i64 8
  %YMM8.i431 = bitcast %union.VectorReg* %3169 to %"class.std::bitset"*
  %3170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3171 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3170, i64 0, i64 9
  %YMM9.i432 = bitcast %union.VectorReg* %3171 to %"class.std::bitset"*
  %3172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3172, i64 0, i64 10
  %YMM10.i433 = bitcast %union.VectorReg* %3173 to %"class.std::bitset"*
  %3174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3175 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3174, i64 0, i64 11
  %YMM11.i434 = bitcast %union.VectorReg* %3175 to %"class.std::bitset"*
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3177 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3176, i64 0, i64 12
  %YMM12.i435 = bitcast %union.VectorReg* %3177 to %"class.std::bitset"*
  %3178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3179 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3178, i64 0, i64 13
  %YMM13.i436 = bitcast %union.VectorReg* %3179 to %"class.std::bitset"*
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3180, i64 0, i64 14
  %YMM14.i437 = bitcast %union.VectorReg* %3181 to %"class.std::bitset"*
  %3182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3182, i64 0, i64 15
  %YMM15.i438 = bitcast %union.VectorReg* %3183 to %"class.std::bitset"*
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3184, i64 0, i64 0
  %XMM0.i439 = bitcast %union.VectorReg* %3185 to %union.vec128_t*
  %3186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3187 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3186, i64 0, i64 1
  %XMM1.i440 = bitcast %union.VectorReg* %3187 to %union.vec128_t*
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3189 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3188, i64 0, i64 2
  %XMM2.i441 = bitcast %union.VectorReg* %3189 to %union.vec128_t*
  %3190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3191 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3190, i64 0, i64 3
  %XMM3.i442 = bitcast %union.VectorReg* %3191 to %union.vec128_t*
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3193 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3192, i64 0, i64 4
  %XMM4.i443 = bitcast %union.VectorReg* %3193 to %union.vec128_t*
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3195 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3194, i64 0, i64 5
  %XMM5.i444 = bitcast %union.VectorReg* %3195 to %union.vec128_t*
  %3196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3197 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3196, i64 0, i64 6
  %XMM6.i445 = bitcast %union.VectorReg* %3197 to %union.vec128_t*
  %3198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3199 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3198, i64 0, i64 7
  %XMM7.i446 = bitcast %union.VectorReg* %3199 to %union.vec128_t*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3201 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3200, i64 0, i64 8
  %XMM8.i447 = bitcast %union.VectorReg* %3201 to %union.vec128_t*
  %3202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3203 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3202, i64 0, i64 9
  %XMM9.i448 = bitcast %union.VectorReg* %3203 to %union.vec128_t*
  %3204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3205 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3204, i64 0, i64 10
  %XMM10.i449 = bitcast %union.VectorReg* %3205 to %union.vec128_t*
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3207 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3206, i64 0, i64 11
  %XMM11.i450 = bitcast %union.VectorReg* %3207 to %union.vec128_t*
  %3208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3209 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3208, i64 0, i64 12
  %XMM12.i451 = bitcast %union.VectorReg* %3209 to %union.vec128_t*
  %3210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3211 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3210, i64 0, i64 13
  %XMM13.i452 = bitcast %union.VectorReg* %3211 to %union.vec128_t*
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3213 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3212, i64 0, i64 14
  %XMM14.i453 = bitcast %union.VectorReg* %3213 to %union.vec128_t*
  %3214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3215 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3214, i64 0, i64 15
  %XMM15.i454 = bitcast %union.VectorReg* %3215 to %union.vec128_t*
  %3216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3217 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3216, i32 0, i32 0
  %3218 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3217, i64 0, i64 0
  %ST0.i455 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3218, i32 0, i32 1
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3220 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3219, i32 0, i32 0
  %3221 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3220, i64 0, i64 1
  %ST1.i456 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3221, i32 0, i32 1
  %3222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3223 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3222, i32 0, i32 0
  %3224 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3223, i64 0, i64 2
  %ST2.i457 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3224, i32 0, i32 1
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3226 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3225, i32 0, i32 0
  %3227 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3226, i64 0, i64 3
  %ST3.i458 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3227, i32 0, i32 1
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3229 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3228, i32 0, i32 0
  %3230 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3229, i64 0, i64 4
  %ST4.i459 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3230, i32 0, i32 1
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3232 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3231, i32 0, i32 0
  %3233 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3232, i64 0, i64 5
  %ST5.i460 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3233, i32 0, i32 1
  %3234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3235 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3234, i32 0, i32 0
  %3236 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3235, i64 0, i64 6
  %ST6.i461 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3236, i32 0, i32 1
  %3237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3238 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3237, i32 0, i32 0
  %3239 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3238, i64 0, i64 7
  %ST7.i462 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3239, i32 0, i32 1
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3241 = getelementptr inbounds %struct.MMX, %struct.MMX* %3240, i32 0, i32 0
  %3242 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3241, i64 0, i64 0
  %3243 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3242, i32 0, i32 1
  %3244 = bitcast %union.vec64_t* %3243 to %struct.uint64v1_t*
  %3245 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3244, i32 0, i32 0
  %MM0.i463 = getelementptr inbounds [1 x i64], [1 x i64]* %3245, i64 0, i64 0
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3247 = getelementptr inbounds %struct.MMX, %struct.MMX* %3246, i32 0, i32 0
  %3248 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3247, i64 0, i64 1
  %3249 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3248, i32 0, i32 1
  %3250 = bitcast %union.vec64_t* %3249 to %struct.uint64v1_t*
  %3251 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3250, i32 0, i32 0
  %MM1.i464 = getelementptr inbounds [1 x i64], [1 x i64]* %3251, i64 0, i64 0
  %3252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3253 = getelementptr inbounds %struct.MMX, %struct.MMX* %3252, i32 0, i32 0
  %3254 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3253, i64 0, i64 2
  %3255 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3254, i32 0, i32 1
  %3256 = bitcast %union.vec64_t* %3255 to %struct.uint64v1_t*
  %3257 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3256, i32 0, i32 0
  %MM2.i465 = getelementptr inbounds [1 x i64], [1 x i64]* %3257, i64 0, i64 0
  %3258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3259 = getelementptr inbounds %struct.MMX, %struct.MMX* %3258, i32 0, i32 0
  %3260 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3259, i64 0, i64 3
  %3261 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3260, i32 0, i32 1
  %3262 = bitcast %union.vec64_t* %3261 to %struct.uint64v1_t*
  %3263 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3262, i32 0, i32 0
  %MM3.i466 = getelementptr inbounds [1 x i64], [1 x i64]* %3263, i64 0, i64 0
  %3264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3265 = getelementptr inbounds %struct.MMX, %struct.MMX* %3264, i32 0, i32 0
  %3266 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3265, i64 0, i64 4
  %3267 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3266, i32 0, i32 1
  %3268 = bitcast %union.vec64_t* %3267 to %struct.uint64v1_t*
  %3269 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3268, i32 0, i32 0
  %MM4.i467 = getelementptr inbounds [1 x i64], [1 x i64]* %3269, i64 0, i64 0
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3271 = getelementptr inbounds %struct.MMX, %struct.MMX* %3270, i32 0, i32 0
  %3272 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3271, i64 0, i64 5
  %3273 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3272, i32 0, i32 1
  %3274 = bitcast %union.vec64_t* %3273 to %struct.uint64v1_t*
  %3275 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3274, i32 0, i32 0
  %MM5.i468 = getelementptr inbounds [1 x i64], [1 x i64]* %3275, i64 0, i64 0
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3277 = getelementptr inbounds %struct.MMX, %struct.MMX* %3276, i32 0, i32 0
  %3278 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3277, i64 0, i64 6
  %3279 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3278, i32 0, i32 1
  %3280 = bitcast %union.vec64_t* %3279 to %struct.uint64v1_t*
  %3281 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3280, i32 0, i32 0
  %MM6.i469 = getelementptr inbounds [1 x i64], [1 x i64]* %3281, i64 0, i64 0
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3283 = getelementptr inbounds %struct.MMX, %struct.MMX* %3282, i32 0, i32 0
  %3284 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3283, i64 0, i64 7
  %3285 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3284, i32 0, i32 1
  %3286 = bitcast %union.vec64_t* %3285 to %struct.uint64v1_t*
  %3287 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3286, i32 0, i32 0
  %MM7.i470 = getelementptr inbounds [1 x i64], [1 x i64]* %3287, i64 0, i64 0
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i471 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3288, i32 0, i32 5
  %3289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i472 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3289, i32 0, i32 1
  %3290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i473 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3290, i32 0, i32 11
  %3291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i474 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3291, i32 0, i32 13
  %3292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i475 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3292, i32 0, i32 3
  %3293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i476 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3293, i32 0, i32 9
  %3294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i477 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3294, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i329, align 8, !noalias !2475
  store i64* @DR1, i64** %_DR1.i330, align 8, !noalias !2475
  store i64* @DR2, i64** %_DR2.i331, align 8, !noalias !2475
  store i64* @DR3, i64** %_DR3.i332, align 8, !noalias !2475
  store i64* @DR4, i64** %_DR4.i333, align 8, !noalias !2475
  store i64* @DR5, i64** %_DR5.i334, align 8, !noalias !2475
  store i64* @DR6, i64** %_DR6.i335, align 8, !noalias !2475
  store i64* @DR7, i64** %_DR7.i336, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i337, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i338, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i339, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i340, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i341, align 8, !noalias !2475
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i342, align 8, !noalias !2475
  %3295 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  %3296 = load double, double* %3295, !alias.scope !2479, !noalias !2480
  %3297 = load i64, i64* %RSP.i404, !alias.scope !2479, !noalias !2480
  %3298 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2475
  %3299 = inttoptr i64 %3297 to i64*
  %3300 = load i64, i64* %3299
  store i64 %3300, i64* %PC.i343, !alias.scope !2479, !noalias !2480
  %3301 = add i64 %3297, 8
  store i64 %3301, i64* %RSP.i404, !alias.scope !2479, !noalias !2480
  %3302 = call double @sin(double %3296)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i423, !alias.scope !2479, !noalias !2480
  %3303 = bitcast %"class.std::bitset"* %YMM0.i423 to double*
  store double %3302, double* %3303, !alias.scope !2479, !noalias !2480
  %3304 = load %struct.Memory*, %struct.Memory** %MEMORY.i328, !noalias !2475
  %3305 = bitcast %struct.State** %state.i319 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3305)
  %3306 = bitcast i64* %curr_pc.i320 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3306)
  %3307 = bitcast %struct.Memory** %memory.i321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3307)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i322)
  %3308 = bitcast i64* %SS_BASE.i323 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3308)
  %3309 = bitcast i64* %ES_BASE.i324 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3309)
  %3310 = bitcast i64* %DS_BASE.i325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3310)
  %3311 = bitcast i64* %CS_BASE.i326 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3311)
  %3312 = bitcast %struct.State** %STATE.i327 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3312)
  %3313 = bitcast %struct.Memory** %MEMORY.i328 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3313)
  %3314 = bitcast i64** %_DR0.i329 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3314)
  %3315 = bitcast i64** %_DR1.i330 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3315)
  %3316 = bitcast i64** %_DR2.i331 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3316)
  %3317 = bitcast i64** %_DR3.i332 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3317)
  %3318 = bitcast i64** %_DR4.i333 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3318)
  %3319 = bitcast i64** %_DR5.i334 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3319)
  %3320 = bitcast i64** %_DR6.i335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3320)
  %3321 = bitcast i64** %_DR7.i336 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3321)
  %3322 = bitcast i64** %CR0.i337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3322)
  %3323 = bitcast i64** %CR1.i338 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3323)
  %3324 = bitcast i64** %CR2.i339 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3324)
  %3325 = bitcast i64** %CR3.i340 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3325)
  %3326 = bitcast i64** %CR4.i341 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3326)
  %3327 = bitcast i64** %CR8.i342 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3327)
  %3328 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3329 = load i64, i64* %RBP
  %3330 = sub i64 %3329, 96
  %3331 = load i64, i64* %PC
  %3332 = add i64 %3331, 5
  store i64 %3332, i64* %PC
  %3333 = inttoptr i64 %3330 to double*
  %3334 = load double, double* %3333
  %3335 = bitcast i8* %3328 to double*
  store double %3334, double* %3335, align 1, !tbaa !2452
  %3336 = getelementptr inbounds i8, i8* %3328, i64 8
  %3337 = bitcast i8* %3336 to double*
  store double 0.000000e+00, double* %3337, align 1, !tbaa !2452
  %3338 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3339 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3340 = bitcast %union.vec128_t* %XMM0 to i8*
  %3341 = load i64, i64* %PC
  %3342 = add i64 %3341, 4
  store i64 %3342, i64* %PC
  %3343 = bitcast i8* %3339 to double*
  %3344 = load double, double* %3343, align 1
  %3345 = getelementptr inbounds i8, i8* %3339, i64 8
  %3346 = bitcast i8* %3345 to i64*
  %3347 = load i64, i64* %3346, align 1
  %3348 = bitcast i8* %3340 to double*
  %3349 = load double, double* %3348, align 1
  %3350 = fmul double %3344, %3349
  %3351 = bitcast i8* %3338 to double*
  store double %3350, double* %3351, align 1, !tbaa !2452
  %3352 = getelementptr inbounds i8, i8* %3338, i64 8
  %3353 = bitcast i8* %3352 to i64*
  store i64 %3347, i64* %3353, align 1, !tbaa !2452
  %3354 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3355 = bitcast %union.vec128_t* %XMM1 to i8*
  %3356 = load i64, i64* %PC
  %3357 = add i64 %3356, 3
  store i64 %3357, i64* %PC
  %3358 = bitcast i8* %3355 to <2 x i32>*
  %3359 = load <2 x i32>, <2 x i32>* %3358, align 1
  %3360 = getelementptr inbounds i8, i8* %3355, i64 8
  %3361 = bitcast i8* %3360 to <2 x i32>*
  %3362 = load <2 x i32>, <2 x i32>* %3361, align 1
  %3363 = extractelement <2 x i32> %3359, i32 0
  %3364 = bitcast i8* %3354 to i32*
  store i32 %3363, i32* %3364, align 1, !tbaa !2455
  %3365 = extractelement <2 x i32> %3359, i32 1
  %3366 = getelementptr inbounds i8, i8* %3354, i64 4
  %3367 = bitcast i8* %3366 to i32*
  store i32 %3365, i32* %3367, align 1, !tbaa !2455
  %3368 = extractelement <2 x i32> %3362, i32 0
  %3369 = getelementptr inbounds i8, i8* %3354, i64 8
  %3370 = bitcast i8* %3369 to i32*
  store i32 %3368, i32* %3370, align 1, !tbaa !2455
  %3371 = extractelement <2 x i32> %3362, i32 1
  %3372 = getelementptr inbounds i8, i8* %3354, i64 12
  %3373 = bitcast i8* %3372 to i32*
  store i32 %3371, i32* %3373, align 1, !tbaa !2455
  %3374 = load i64, i64* %PC
  %3375 = sub i64 %3374, 3684
  %3376 = load i64, i64* %PC
  %3377 = add i64 %3376, 5
  %3378 = load i64, i64* %PC
  %3379 = add i64 %3378, 5
  store i64 %3379, i64* %PC
  %3380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3381 = load i64, i64* %3380, align 8, !tbaa !2428
  %3382 = add i64 %3381, -8
  %3383 = inttoptr i64 %3382 to i64*
  store i64 %3377, i64* %3383
  store i64 %3382, i64* %3380, align 8, !tbaa !2428
  %3384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3375, i64* %3384, align 8, !tbaa !2428
  %3385 = load i64, i64* %PC
  %3386 = call %struct.Memory* @ext_602690_asin(%struct.State* %0, i64 %3385, %struct.Memory* %3304)
  %3387 = load i64, i64* %PC
  %3388 = add i64 %3387, 10
  store i64 %3388, i64* %PC
  store i64 -9223372036854775808, i64* %RAX, align 8, !tbaa !2428
  %3389 = bitcast %union.vec128_t* %XMM0 to i8*
  %3390 = load i64, i64* %PC
  %3391 = add i64 %3390, 5
  store i64 %3391, i64* %PC
  %3392 = bitcast i8* %3389 to i64*
  %3393 = load i64, i64* %3392, align 1
  store i64 %3393, i64* %RCX, align 1, !tbaa !2428
  %3394 = load i64, i64* %RCX
  %3395 = load i64, i64* %RAX
  %3396 = load i64, i64* %PC
  %3397 = add i64 %3396, 3
  store i64 %3397, i64* %PC
  %3398 = xor i64 %3395, %3394
  store i64 %3398, i64* %RCX, align 8, !tbaa !2428
  %3399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3399, align 1, !tbaa !2432
  %3400 = trunc i64 %3398 to i32
  %3401 = and i32 %3400, 255
  %3402 = call i32 @llvm.ctpop.i32(i32 %3401) #17
  %3403 = trunc i32 %3402 to i8
  %3404 = and i8 %3403, 1
  %3405 = xor i8 %3404, 1
  %3406 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3405, i8* %3406, align 1, !tbaa !2446
  %3407 = icmp eq i64 %3398, 0
  %3408 = zext i1 %3407 to i8
  %3409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3408, i8* %3409, align 1, !tbaa !2448
  %3410 = lshr i64 %3398, 63
  %3411 = trunc i64 %3410 to i8
  %3412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3411, i8* %3412, align 1, !tbaa !2449
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3413, align 1, !tbaa !2450
  %3414 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3414, align 1, !tbaa !2447
  %3415 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3416 = load i64, i64* %RCX
  %3417 = load i64, i64* %PC
  %3418 = add i64 %3417, 5
  store i64 %3418, i64* %PC
  %3419 = bitcast i8* %3415 to i64*
  store i64 %3416, i64* %3419, align 1, !tbaa !2428
  %3420 = getelementptr inbounds i8, i8* %3415, i64 8
  %3421 = bitcast i8* %3420 to i64*
  store i64 0, i64* %3421, align 1, !tbaa !2428
  %3422 = load i64, i64* %RBP
  %3423 = sub i64 %3422, 16
  %3424 = bitcast %union.vec128_t* %XMM0 to i8*
  %3425 = load i64, i64* %PC
  %3426 = add i64 %3425, 5
  store i64 %3426, i64* %PC
  %3427 = bitcast i8* %3424 to double*
  %3428 = load double, double* %3427, align 1
  %3429 = inttoptr i64 %3423 to double*
  store double %3428, double* %3429
  %3430 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3431 = load i64, i64* %PC
  %3432 = add i64 %3431, 9
  store i64 %3432, i64* %PC
  %3433 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %3434 = bitcast i8* %3430 to double*
  store double %3433, double* %3434, align 1, !tbaa !2452
  %3435 = getelementptr inbounds i8, i8* %3430, i64 8
  %3436 = bitcast i8* %3435 to double*
  store double 0.000000e+00, double* %3436, align 1, !tbaa !2452
  %3437 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3438 = load i64, i64* %PC
  %3439 = add i64 %3438, 9
  store i64 %3439, i64* %PC
  %3440 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1288) to double*)
  %3441 = bitcast i8* %3437 to double*
  store double %3440, double* %3441, align 1, !tbaa !2452
  %3442 = getelementptr inbounds i8, i8* %3437, i64 8
  %3443 = bitcast i8* %3442 to double*
  store double 0.000000e+00, double* %3443, align 1, !tbaa !2452
  %3444 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3445 = load i64, i64* %RBP
  %3446 = sub i64 %3445, 16
  %3447 = load i64, i64* %PC
  %3448 = add i64 %3447, 5
  store i64 %3448, i64* %PC
  %3449 = inttoptr i64 %3446 to double*
  %3450 = load double, double* %3449
  %3451 = bitcast i8* %3444 to double*
  store double %3450, double* %3451, align 1, !tbaa !2452
  %3452 = getelementptr inbounds i8, i8* %3444, i64 8
  %3453 = bitcast i8* %3452 to double*
  store double 0.000000e+00, double* %3453, align 1, !tbaa !2452
  %3454 = bitcast %union.vec128_t* %XMM2 to i8*
  %3455 = load i64, i64* %PC
  %3456 = add i64 %3455, 5
  store i64 %3456, i64* %PC
  %3457 = bitcast i8* %3454 to i64*
  %3458 = load i64, i64* %3457, align 1
  store i64 %3458, i64* %RCX, align 1, !tbaa !2428
  %3459 = load i64, i64* %RCX
  %3460 = load i64, i64* %RAX
  %3461 = load i64, i64* %PC
  %3462 = add i64 %3461, 3
  store i64 %3462, i64* %PC
  %3463 = xor i64 %3460, %3459
  store i64 %3463, i64* %RCX, align 8, !tbaa !2428
  %3464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %3464, align 1, !tbaa !2432
  %3465 = trunc i64 %3463 to i32
  %3466 = and i32 %3465, 255
  %3467 = call i32 @llvm.ctpop.i32(i32 %3466) #17
  %3468 = trunc i32 %3467 to i8
  %3469 = and i8 %3468, 1
  %3470 = xor i8 %3469, 1
  %3471 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3470, i8* %3471, align 1, !tbaa !2446
  %3472 = icmp eq i64 %3463, 0
  %3473 = zext i1 %3472 to i8
  %3474 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3473, i8* %3474, align 1, !tbaa !2448
  %3475 = lshr i64 %3463, 63
  %3476 = trunc i64 %3475 to i8
  %3477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3476, i8* %3477, align 1, !tbaa !2449
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3478, align 1, !tbaa !2450
  %3479 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3479, align 1, !tbaa !2447
  %3480 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %3481 = load i64, i64* %RCX
  %3482 = load i64, i64* %PC
  %3483 = add i64 %3482, 5
  store i64 %3483, i64* %PC
  %3484 = bitcast i8* %3480 to i64*
  store i64 %3481, i64* %3484, align 1, !tbaa !2428
  %3485 = getelementptr inbounds i8, i8* %3480, i64 8
  %3486 = bitcast i8* %3485 to i64*
  store i64 0, i64* %3486, align 1, !tbaa !2428
  %3487 = load i64, i64* %RBP
  %3488 = sub i64 %3487, 104
  %3489 = bitcast %union.vec128_t* %XMM0 to i8*
  %3490 = load i64, i64* %PC
  %3491 = add i64 %3490, 5
  store i64 %3491, i64* %PC
  %3492 = bitcast i8* %3489 to double*
  %3493 = load double, double* %3492, align 1
  %3494 = inttoptr i64 %3488 to double*
  store double %3493, double* %3494
  %3495 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3496 = bitcast %union.vec128_t* %XMM2 to i8*
  %3497 = load i64, i64* %PC
  %3498 = add i64 %3497, 3
  store i64 %3498, i64* %PC
  %3499 = bitcast i8* %3496 to <2 x i32>*
  %3500 = load <2 x i32>, <2 x i32>* %3499, align 1
  %3501 = getelementptr inbounds i8, i8* %3496, i64 8
  %3502 = bitcast i8* %3501 to <2 x i32>*
  %3503 = load <2 x i32>, <2 x i32>* %3502, align 1
  %3504 = extractelement <2 x i32> %3500, i32 0
  %3505 = bitcast i8* %3495 to i32*
  store i32 %3504, i32* %3505, align 1, !tbaa !2455
  %3506 = extractelement <2 x i32> %3500, i32 1
  %3507 = getelementptr inbounds i8, i8* %3495, i64 4
  %3508 = bitcast i8* %3507 to i32*
  store i32 %3506, i32* %3508, align 1, !tbaa !2455
  %3509 = extractelement <2 x i32> %3503, i32 0
  %3510 = getelementptr inbounds i8, i8* %3495, i64 8
  %3511 = bitcast i8* %3510 to i32*
  store i32 %3509, i32* %3511, align 1, !tbaa !2455
  %3512 = extractelement <2 x i32> %3503, i32 1
  %3513 = getelementptr inbounds i8, i8* %3495, i64 12
  %3514 = bitcast i8* %3513 to i32*
  store i32 %3512, i32* %3514, align 1, !tbaa !2455
  %3515 = load i64, i64* %RBP
  %3516 = sub i64 %3515, 112
  %3517 = load i64, i64* %RAX
  %3518 = load i64, i64* %PC
  %3519 = add i64 %3518, 4
  store i64 %3519, i64* %PC
  %3520 = inttoptr i64 %3516 to i64*
  store i64 %3517, i64* %3520
  %3521 = load i64, i64* %RBP
  %3522 = sub i64 %3521, 120
  %3523 = bitcast %union.vec128_t* %XMM1 to i8*
  %3524 = load i64, i64* %PC
  %3525 = add i64 %3524, 5
  store i64 %3525, i64* %PC
  %3526 = bitcast i8* %3523 to double*
  %3527 = load double, double* %3526, align 1
  %3528 = inttoptr i64 %3522 to double*
  store double %3527, double* %3528
  %3529 = load i64, i64* %PC
  %3530 = sub i64 %3529, 3834
  %3531 = load i64, i64* %PC
  %3532 = add i64 %3531, 5
  %3533 = load i64, i64* %PC
  %3534 = add i64 %3533, 5
  store i64 %3534, i64* %PC
  %3535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3536 = load i64, i64* %3535, align 8, !tbaa !2428
  %3537 = add i64 %3536, -8
  %3538 = inttoptr i64 %3537 to i64*
  store i64 %3532, i64* %3538
  store i64 %3537, i64* %3535, align 8, !tbaa !2428
  %3539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3530, i64* %3539, align 8, !tbaa !2428
  %3540 = load i64, i64* %PC
  %3541 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3541)
  %3542 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3542)
  %3543 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3543)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i163)
  %3544 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3544)
  %3545 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3545)
  %3546 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3546)
  %3547 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3547)
  %3548 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3548)
  %3549 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3549)
  %3550 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3550)
  %3551 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3551)
  %3552 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3552)
  %3553 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3553)
  %3554 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3554)
  %3555 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3555)
  %3556 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3556)
  %3557 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3557)
  %3558 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3558)
  %3559 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3559)
  %3560 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3560)
  %3561 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3561)
  %3562 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3562)
  %3563 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3563)
  store %struct.State* %0, %struct.State** %state.i160, align 8, !noalias !2481
  store i64 %3540, i64* %curr_pc.i161, align 8, !noalias !2481
  store %struct.Memory* %3386, %struct.Memory** %memory.i162, align 8, !noalias !2481
  store i8 0, i8* %BRANCH_TAKEN.i163, align 1, !noalias !2481
  store i64 0, i64* %SS_BASE.i164, align 8, !noalias !2481
  store i64 0, i64* %ES_BASE.i165, align 8, !noalias !2481
  store i64 0, i64* %DS_BASE.i166, align 8, !noalias !2481
  store i64 0, i64* %CS_BASE.i167, align 8, !noalias !2481
  store %struct.State* %0, %struct.State** %STATE.i168, align 8, !noalias !2481
  store %struct.Memory* %3386, %struct.Memory** %MEMORY.i169, align 8, !noalias !2481
  %3564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3565 = getelementptr inbounds %struct.GPR, %struct.GPR* %3564, i32 0, i32 33
  %3566 = getelementptr inbounds %struct.Reg, %struct.Reg* %3565, i32 0, i32 0
  %PC.i184 = bitcast %union.anon* %3566 to i64*
  store i64 %3540, i64* %PC.i184, align 8, !alias.scope !2485, !noalias !2486
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3568 = getelementptr inbounds %struct.GPR, %struct.GPR* %3567, i32 0, i32 1
  %3569 = getelementptr inbounds %struct.Reg, %struct.Reg* %3568, i32 0, i32 0
  %3570 = bitcast %union.anon* %3569 to %struct.anon.2*
  %AH.i185 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3570, i32 0, i32 1
  %3571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3572 = getelementptr inbounds %struct.GPR, %struct.GPR* %3571, i32 0, i32 3
  %3573 = getelementptr inbounds %struct.Reg, %struct.Reg* %3572, i32 0, i32 0
  %3574 = bitcast %union.anon* %3573 to %struct.anon.2*
  %BH.i186 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3574, i32 0, i32 1
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3576 = getelementptr inbounds %struct.GPR, %struct.GPR* %3575, i32 0, i32 5
  %3577 = getelementptr inbounds %struct.Reg, %struct.Reg* %3576, i32 0, i32 0
  %3578 = bitcast %union.anon* %3577 to %struct.anon.2*
  %CH.i187 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3578, i32 0, i32 1
  %3579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3580 = getelementptr inbounds %struct.GPR, %struct.GPR* %3579, i32 0, i32 7
  %3581 = getelementptr inbounds %struct.Reg, %struct.Reg* %3580, i32 0, i32 0
  %3582 = bitcast %union.anon* %3581 to %struct.anon.2*
  %DH.i188 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3582, i32 0, i32 1
  %3583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3584 = getelementptr inbounds %struct.GPR, %struct.GPR* %3583, i32 0, i32 1
  %3585 = getelementptr inbounds %struct.Reg, %struct.Reg* %3584, i32 0, i32 0
  %3586 = bitcast %union.anon* %3585 to %struct.anon.2*
  %AL.i189 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3586, i32 0, i32 0
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3588 = getelementptr inbounds %struct.GPR, %struct.GPR* %3587, i32 0, i32 3
  %3589 = getelementptr inbounds %struct.Reg, %struct.Reg* %3588, i32 0, i32 0
  %3590 = bitcast %union.anon* %3589 to %struct.anon.2*
  %BL.i190 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3590, i32 0, i32 0
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 5
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %3594 = bitcast %union.anon* %3593 to %struct.anon.2*
  %CL.i191 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3594, i32 0, i32 0
  %3595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3596 = getelementptr inbounds %struct.GPR, %struct.GPR* %3595, i32 0, i32 7
  %3597 = getelementptr inbounds %struct.Reg, %struct.Reg* %3596, i32 0, i32 0
  %3598 = bitcast %union.anon* %3597 to %struct.anon.2*
  %DL.i192 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3598, i32 0, i32 0
  %3599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3600 = getelementptr inbounds %struct.GPR, %struct.GPR* %3599, i32 0, i32 9
  %3601 = getelementptr inbounds %struct.Reg, %struct.Reg* %3600, i32 0, i32 0
  %3602 = bitcast %union.anon* %3601 to %struct.anon.2*
  %SIL.i193 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3602, i32 0, i32 0
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 11
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %3606 = bitcast %union.anon* %3605 to %struct.anon.2*
  %DIL.i194 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3606, i32 0, i32 0
  %3607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3608 = getelementptr inbounds %struct.GPR, %struct.GPR* %3607, i32 0, i32 13
  %3609 = getelementptr inbounds %struct.Reg, %struct.Reg* %3608, i32 0, i32 0
  %3610 = bitcast %union.anon* %3609 to %struct.anon.2*
  %SPL.i195 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3610, i32 0, i32 0
  %3611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3612 = getelementptr inbounds %struct.GPR, %struct.GPR* %3611, i32 0, i32 15
  %3613 = getelementptr inbounds %struct.Reg, %struct.Reg* %3612, i32 0, i32 0
  %3614 = bitcast %union.anon* %3613 to %struct.anon.2*
  %BPL.i196 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3614, i32 0, i32 0
  %3615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3616 = getelementptr inbounds %struct.GPR, %struct.GPR* %3615, i32 0, i32 17
  %3617 = getelementptr inbounds %struct.Reg, %struct.Reg* %3616, i32 0, i32 0
  %3618 = bitcast %union.anon* %3617 to %struct.anon.2*
  %R8B.i197 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3618, i32 0, i32 0
  %3619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3620 = getelementptr inbounds %struct.GPR, %struct.GPR* %3619, i32 0, i32 19
  %3621 = getelementptr inbounds %struct.Reg, %struct.Reg* %3620, i32 0, i32 0
  %3622 = bitcast %union.anon* %3621 to %struct.anon.2*
  %R9B.i198 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3622, i32 0, i32 0
  %3623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3624 = getelementptr inbounds %struct.GPR, %struct.GPR* %3623, i32 0, i32 21
  %3625 = getelementptr inbounds %struct.Reg, %struct.Reg* %3624, i32 0, i32 0
  %3626 = bitcast %union.anon* %3625 to %struct.anon.2*
  %R10B.i199 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3626, i32 0, i32 0
  %3627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3628 = getelementptr inbounds %struct.GPR, %struct.GPR* %3627, i32 0, i32 23
  %3629 = getelementptr inbounds %struct.Reg, %struct.Reg* %3628, i32 0, i32 0
  %3630 = bitcast %union.anon* %3629 to %struct.anon.2*
  %R11B.i200 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3630, i32 0, i32 0
  %3631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3632 = getelementptr inbounds %struct.GPR, %struct.GPR* %3631, i32 0, i32 25
  %3633 = getelementptr inbounds %struct.Reg, %struct.Reg* %3632, i32 0, i32 0
  %3634 = bitcast %union.anon* %3633 to %struct.anon.2*
  %R12B.i201 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3634, i32 0, i32 0
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3636 = getelementptr inbounds %struct.GPR, %struct.GPR* %3635, i32 0, i32 27
  %3637 = getelementptr inbounds %struct.Reg, %struct.Reg* %3636, i32 0, i32 0
  %3638 = bitcast %union.anon* %3637 to %struct.anon.2*
  %R13B.i202 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3638, i32 0, i32 0
  %3639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3640 = getelementptr inbounds %struct.GPR, %struct.GPR* %3639, i32 0, i32 29
  %3641 = getelementptr inbounds %struct.Reg, %struct.Reg* %3640, i32 0, i32 0
  %3642 = bitcast %union.anon* %3641 to %struct.anon.2*
  %R14B.i203 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3642, i32 0, i32 0
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3644 = getelementptr inbounds %struct.GPR, %struct.GPR* %3643, i32 0, i32 31
  %3645 = getelementptr inbounds %struct.Reg, %struct.Reg* %3644, i32 0, i32 0
  %3646 = bitcast %union.anon* %3645 to %struct.anon.2*
  %R15B.i204 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %3646, i32 0, i32 0
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3648 = getelementptr inbounds %struct.GPR, %struct.GPR* %3647, i32 0, i32 1
  %3649 = getelementptr inbounds %struct.Reg, %struct.Reg* %3648, i32 0, i32 0
  %AX.i205 = bitcast %union.anon* %3649 to i16*
  %3650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3651 = getelementptr inbounds %struct.GPR, %struct.GPR* %3650, i32 0, i32 3
  %3652 = getelementptr inbounds %struct.Reg, %struct.Reg* %3651, i32 0, i32 0
  %BX.i206 = bitcast %union.anon* %3652 to i16*
  %3653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3654 = getelementptr inbounds %struct.GPR, %struct.GPR* %3653, i32 0, i32 5
  %3655 = getelementptr inbounds %struct.Reg, %struct.Reg* %3654, i32 0, i32 0
  %CX.i207 = bitcast %union.anon* %3655 to i16*
  %3656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3657 = getelementptr inbounds %struct.GPR, %struct.GPR* %3656, i32 0, i32 7
  %3658 = getelementptr inbounds %struct.Reg, %struct.Reg* %3657, i32 0, i32 0
  %DX.i208 = bitcast %union.anon* %3658 to i16*
  %3659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3660 = getelementptr inbounds %struct.GPR, %struct.GPR* %3659, i32 0, i32 9
  %3661 = getelementptr inbounds %struct.Reg, %struct.Reg* %3660, i32 0, i32 0
  %SI.i209 = bitcast %union.anon* %3661 to i16*
  %3662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3663 = getelementptr inbounds %struct.GPR, %struct.GPR* %3662, i32 0, i32 11
  %3664 = getelementptr inbounds %struct.Reg, %struct.Reg* %3663, i32 0, i32 0
  %DI.i210 = bitcast %union.anon* %3664 to i16*
  %3665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3666 = getelementptr inbounds %struct.GPR, %struct.GPR* %3665, i32 0, i32 13
  %3667 = getelementptr inbounds %struct.Reg, %struct.Reg* %3666, i32 0, i32 0
  %SP.i211 = bitcast %union.anon* %3667 to i16*
  %3668 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3669 = getelementptr inbounds %struct.GPR, %struct.GPR* %3668, i32 0, i32 15
  %3670 = getelementptr inbounds %struct.Reg, %struct.Reg* %3669, i32 0, i32 0
  %BP.i212 = bitcast %union.anon* %3670 to i16*
  %3671 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3672 = getelementptr inbounds %struct.GPR, %struct.GPR* %3671, i32 0, i32 17
  %3673 = getelementptr inbounds %struct.Reg, %struct.Reg* %3672, i32 0, i32 0
  %R8W.i213 = bitcast %union.anon* %3673 to i16*
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3675 = getelementptr inbounds %struct.GPR, %struct.GPR* %3674, i32 0, i32 19
  %3676 = getelementptr inbounds %struct.Reg, %struct.Reg* %3675, i32 0, i32 0
  %R9W.i214 = bitcast %union.anon* %3676 to i16*
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3678 = getelementptr inbounds %struct.GPR, %struct.GPR* %3677, i32 0, i32 21
  %3679 = getelementptr inbounds %struct.Reg, %struct.Reg* %3678, i32 0, i32 0
  %R10W.i215 = bitcast %union.anon* %3679 to i16*
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3681 = getelementptr inbounds %struct.GPR, %struct.GPR* %3680, i32 0, i32 23
  %3682 = getelementptr inbounds %struct.Reg, %struct.Reg* %3681, i32 0, i32 0
  %R11W.i216 = bitcast %union.anon* %3682 to i16*
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3684 = getelementptr inbounds %struct.GPR, %struct.GPR* %3683, i32 0, i32 25
  %3685 = getelementptr inbounds %struct.Reg, %struct.Reg* %3684, i32 0, i32 0
  %R12W.i217 = bitcast %union.anon* %3685 to i16*
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3687 = getelementptr inbounds %struct.GPR, %struct.GPR* %3686, i32 0, i32 27
  %3688 = getelementptr inbounds %struct.Reg, %struct.Reg* %3687, i32 0, i32 0
  %R13W.i218 = bitcast %union.anon* %3688 to i16*
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3690 = getelementptr inbounds %struct.GPR, %struct.GPR* %3689, i32 0, i32 29
  %3691 = getelementptr inbounds %struct.Reg, %struct.Reg* %3690, i32 0, i32 0
  %R14W.i219 = bitcast %union.anon* %3691 to i16*
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3693 = getelementptr inbounds %struct.GPR, %struct.GPR* %3692, i32 0, i32 31
  %3694 = getelementptr inbounds %struct.Reg, %struct.Reg* %3693, i32 0, i32 0
  %R15W.i220 = bitcast %union.anon* %3694 to i16*
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 33
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %IP.i221 = bitcast %union.anon* %3697 to i16*
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 1
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %EAX.i222 = bitcast %union.anon* %3700 to i32*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 3
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %EBX.i223 = bitcast %union.anon* %3703 to i32*
  %3704 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3705 = getelementptr inbounds %struct.GPR, %struct.GPR* %3704, i32 0, i32 5
  %3706 = getelementptr inbounds %struct.Reg, %struct.Reg* %3705, i32 0, i32 0
  %ECX.i224 = bitcast %union.anon* %3706 to i32*
  %3707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3708 = getelementptr inbounds %struct.GPR, %struct.GPR* %3707, i32 0, i32 7
  %3709 = getelementptr inbounds %struct.Reg, %struct.Reg* %3708, i32 0, i32 0
  %EDX.i225 = bitcast %union.anon* %3709 to i32*
  %3710 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3711 = getelementptr inbounds %struct.GPR, %struct.GPR* %3710, i32 0, i32 9
  %3712 = getelementptr inbounds %struct.Reg, %struct.Reg* %3711, i32 0, i32 0
  %ESI.i226 = bitcast %union.anon* %3712 to i32*
  %3713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3714 = getelementptr inbounds %struct.GPR, %struct.GPR* %3713, i32 0, i32 11
  %3715 = getelementptr inbounds %struct.Reg, %struct.Reg* %3714, i32 0, i32 0
  %EDI.i227 = bitcast %union.anon* %3715 to i32*
  %3716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3717 = getelementptr inbounds %struct.GPR, %struct.GPR* %3716, i32 0, i32 13
  %3718 = getelementptr inbounds %struct.Reg, %struct.Reg* %3717, i32 0, i32 0
  %ESP.i228 = bitcast %union.anon* %3718 to i32*
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3720 = getelementptr inbounds %struct.GPR, %struct.GPR* %3719, i32 0, i32 15
  %3721 = getelementptr inbounds %struct.Reg, %struct.Reg* %3720, i32 0, i32 0
  %EBP.i229 = bitcast %union.anon* %3721 to i32*
  %3722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3723 = getelementptr inbounds %struct.GPR, %struct.GPR* %3722, i32 0, i32 33
  %3724 = getelementptr inbounds %struct.Reg, %struct.Reg* %3723, i32 0, i32 0
  %EIP.i230 = bitcast %union.anon* %3724 to i32*
  %3725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3726 = getelementptr inbounds %struct.GPR, %struct.GPR* %3725, i32 0, i32 17
  %3727 = getelementptr inbounds %struct.Reg, %struct.Reg* %3726, i32 0, i32 0
  %R8D.i231 = bitcast %union.anon* %3727 to i32*
  %3728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3729 = getelementptr inbounds %struct.GPR, %struct.GPR* %3728, i32 0, i32 19
  %3730 = getelementptr inbounds %struct.Reg, %struct.Reg* %3729, i32 0, i32 0
  %R9D.i232 = bitcast %union.anon* %3730 to i32*
  %3731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3732 = getelementptr inbounds %struct.GPR, %struct.GPR* %3731, i32 0, i32 21
  %3733 = getelementptr inbounds %struct.Reg, %struct.Reg* %3732, i32 0, i32 0
  %R10D.i233 = bitcast %union.anon* %3733 to i32*
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3735 = getelementptr inbounds %struct.GPR, %struct.GPR* %3734, i32 0, i32 23
  %3736 = getelementptr inbounds %struct.Reg, %struct.Reg* %3735, i32 0, i32 0
  %R11D.i234 = bitcast %union.anon* %3736 to i32*
  %3737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3738 = getelementptr inbounds %struct.GPR, %struct.GPR* %3737, i32 0, i32 25
  %3739 = getelementptr inbounds %struct.Reg, %struct.Reg* %3738, i32 0, i32 0
  %R12D.i235 = bitcast %union.anon* %3739 to i32*
  %3740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3741 = getelementptr inbounds %struct.GPR, %struct.GPR* %3740, i32 0, i32 27
  %3742 = getelementptr inbounds %struct.Reg, %struct.Reg* %3741, i32 0, i32 0
  %R13D.i236 = bitcast %union.anon* %3742 to i32*
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3744 = getelementptr inbounds %struct.GPR, %struct.GPR* %3743, i32 0, i32 29
  %3745 = getelementptr inbounds %struct.Reg, %struct.Reg* %3744, i32 0, i32 0
  %R14D.i237 = bitcast %union.anon* %3745 to i32*
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3747 = getelementptr inbounds %struct.GPR, %struct.GPR* %3746, i32 0, i32 31
  %3748 = getelementptr inbounds %struct.Reg, %struct.Reg* %3747, i32 0, i32 0
  %R15D.i238 = bitcast %union.anon* %3748 to i32*
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 1
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %RAX.i239 = bitcast %union.anon* %3751 to i64*
  %3752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3753 = getelementptr inbounds %struct.GPR, %struct.GPR* %3752, i32 0, i32 3
  %3754 = getelementptr inbounds %struct.Reg, %struct.Reg* %3753, i32 0, i32 0
  %RBX.i240 = bitcast %union.anon* %3754 to i64*
  %3755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3756 = getelementptr inbounds %struct.GPR, %struct.GPR* %3755, i32 0, i32 5
  %3757 = getelementptr inbounds %struct.Reg, %struct.Reg* %3756, i32 0, i32 0
  %RCX.i241 = bitcast %union.anon* %3757 to i64*
  %3758 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3759 = getelementptr inbounds %struct.GPR, %struct.GPR* %3758, i32 0, i32 7
  %3760 = getelementptr inbounds %struct.Reg, %struct.Reg* %3759, i32 0, i32 0
  %RDX.i242 = bitcast %union.anon* %3760 to i64*
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3762 = getelementptr inbounds %struct.GPR, %struct.GPR* %3761, i32 0, i32 9
  %3763 = getelementptr inbounds %struct.Reg, %struct.Reg* %3762, i32 0, i32 0
  %RSI.i243 = bitcast %union.anon* %3763 to i64*
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3765 = getelementptr inbounds %struct.GPR, %struct.GPR* %3764, i32 0, i32 11
  %3766 = getelementptr inbounds %struct.Reg, %struct.Reg* %3765, i32 0, i32 0
  %RDI.i244 = bitcast %union.anon* %3766 to i64*
  %3767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3768 = getelementptr inbounds %struct.GPR, %struct.GPR* %3767, i32 0, i32 13
  %3769 = getelementptr inbounds %struct.Reg, %struct.Reg* %3768, i32 0, i32 0
  %RSP.i245 = bitcast %union.anon* %3769 to i64*
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3771 = getelementptr inbounds %struct.GPR, %struct.GPR* %3770, i32 0, i32 15
  %3772 = getelementptr inbounds %struct.Reg, %struct.Reg* %3771, i32 0, i32 0
  %RBP.i246 = bitcast %union.anon* %3772 to i64*
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3774 = getelementptr inbounds %struct.GPR, %struct.GPR* %3773, i32 0, i32 17
  %3775 = getelementptr inbounds %struct.Reg, %struct.Reg* %3774, i32 0, i32 0
  %R8.i247 = bitcast %union.anon* %3775 to i64*
  %3776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3777 = getelementptr inbounds %struct.GPR, %struct.GPR* %3776, i32 0, i32 19
  %3778 = getelementptr inbounds %struct.Reg, %struct.Reg* %3777, i32 0, i32 0
  %R9.i248 = bitcast %union.anon* %3778 to i64*
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3780 = getelementptr inbounds %struct.GPR, %struct.GPR* %3779, i32 0, i32 21
  %3781 = getelementptr inbounds %struct.Reg, %struct.Reg* %3780, i32 0, i32 0
  %R10.i249 = bitcast %union.anon* %3781 to i64*
  %3782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3783 = getelementptr inbounds %struct.GPR, %struct.GPR* %3782, i32 0, i32 23
  %3784 = getelementptr inbounds %struct.Reg, %struct.Reg* %3783, i32 0, i32 0
  %R11.i250 = bitcast %union.anon* %3784 to i64*
  %3785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3786 = getelementptr inbounds %struct.GPR, %struct.GPR* %3785, i32 0, i32 25
  %3787 = getelementptr inbounds %struct.Reg, %struct.Reg* %3786, i32 0, i32 0
  %R12.i251 = bitcast %union.anon* %3787 to i64*
  %3788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3789 = getelementptr inbounds %struct.GPR, %struct.GPR* %3788, i32 0, i32 27
  %3790 = getelementptr inbounds %struct.Reg, %struct.Reg* %3789, i32 0, i32 0
  %R13.i252 = bitcast %union.anon* %3790 to i64*
  %3791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3792 = getelementptr inbounds %struct.GPR, %struct.GPR* %3791, i32 0, i32 29
  %3793 = getelementptr inbounds %struct.Reg, %struct.Reg* %3792, i32 0, i32 0
  %R14.i253 = bitcast %union.anon* %3793 to i64*
  %3794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3795 = getelementptr inbounds %struct.GPR, %struct.GPR* %3794, i32 0, i32 31
  %3796 = getelementptr inbounds %struct.Reg, %struct.Reg* %3795, i32 0, i32 0
  %R15.i254 = bitcast %union.anon* %3796 to i64*
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3798 = getelementptr inbounds %struct.GPR, %struct.GPR* %3797, i32 0, i32 33
  %3799 = getelementptr inbounds %struct.Reg, %struct.Reg* %3798, i32 0, i32 0
  %RIP.i255 = bitcast %union.anon* %3799 to i64*
  %3800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3801 = getelementptr inbounds %struct.Segments, %struct.Segments* %3800, i32 0, i32 1
  %SS.i256 = bitcast %union.SegmentSelector* %3801 to i16*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3803 = getelementptr inbounds %struct.Segments, %struct.Segments* %3802, i32 0, i32 3
  %ES.i257 = bitcast %union.SegmentSelector* %3803 to i16*
  %3804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3805 = getelementptr inbounds %struct.Segments, %struct.Segments* %3804, i32 0, i32 5
  %GS.i258 = bitcast %union.SegmentSelector* %3805 to i16*
  %3806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3807 = getelementptr inbounds %struct.Segments, %struct.Segments* %3806, i32 0, i32 7
  %FS.i259 = bitcast %union.SegmentSelector* %3807 to i16*
  %3808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3809 = getelementptr inbounds %struct.Segments, %struct.Segments* %3808, i32 0, i32 9
  %DS.i260 = bitcast %union.SegmentSelector* %3809 to i16*
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %3811 = getelementptr inbounds %struct.Segments, %struct.Segments* %3810, i32 0, i32 11
  %CS.i261 = bitcast %union.SegmentSelector* %3811 to i16*
  %3812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3813 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3812, i32 0, i32 5
  %3814 = getelementptr inbounds %struct.Reg, %struct.Reg* %3813, i32 0, i32 0
  %GS_BASE.i262 = bitcast %union.anon* %3814 to i64*
  %3815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %3816 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %3815, i32 0, i32 7
  %3817 = getelementptr inbounds %struct.Reg, %struct.Reg* %3816, i32 0, i32 0
  %FS_BASE.i263 = bitcast %union.anon* %3817 to i64*
  %3818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3819 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3818, i64 0, i64 0
  %YMM0.i264 = bitcast %union.VectorReg* %3819 to %"class.std::bitset"*
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3821 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3820, i64 0, i64 1
  %YMM1.i265 = bitcast %union.VectorReg* %3821 to %"class.std::bitset"*
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3823 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3822, i64 0, i64 2
  %YMM2.i266 = bitcast %union.VectorReg* %3823 to %"class.std::bitset"*
  %3824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3825 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3824, i64 0, i64 3
  %YMM3.i267 = bitcast %union.VectorReg* %3825 to %"class.std::bitset"*
  %3826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3827 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3826, i64 0, i64 4
  %YMM4.i268 = bitcast %union.VectorReg* %3827 to %"class.std::bitset"*
  %3828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3829 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3828, i64 0, i64 5
  %YMM5.i269 = bitcast %union.VectorReg* %3829 to %"class.std::bitset"*
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3831 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3830, i64 0, i64 6
  %YMM6.i270 = bitcast %union.VectorReg* %3831 to %"class.std::bitset"*
  %3832 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3833 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3832, i64 0, i64 7
  %YMM7.i271 = bitcast %union.VectorReg* %3833 to %"class.std::bitset"*
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3835 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3834, i64 0, i64 8
  %YMM8.i272 = bitcast %union.VectorReg* %3835 to %"class.std::bitset"*
  %3836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3837 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3836, i64 0, i64 9
  %YMM9.i273 = bitcast %union.VectorReg* %3837 to %"class.std::bitset"*
  %3838 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3839 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3838, i64 0, i64 10
  %YMM10.i274 = bitcast %union.VectorReg* %3839 to %"class.std::bitset"*
  %3840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3841 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3840, i64 0, i64 11
  %YMM11.i275 = bitcast %union.VectorReg* %3841 to %"class.std::bitset"*
  %3842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3843 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3842, i64 0, i64 12
  %YMM12.i276 = bitcast %union.VectorReg* %3843 to %"class.std::bitset"*
  %3844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3845 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3844, i64 0, i64 13
  %YMM13.i277 = bitcast %union.VectorReg* %3845 to %"class.std::bitset"*
  %3846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3847 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3846, i64 0, i64 14
  %YMM14.i278 = bitcast %union.VectorReg* %3847 to %"class.std::bitset"*
  %3848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3849 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3848, i64 0, i64 15
  %YMM15.i279 = bitcast %union.VectorReg* %3849 to %"class.std::bitset"*
  %3850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3851 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3850, i64 0, i64 0
  %XMM0.i280 = bitcast %union.VectorReg* %3851 to %union.vec128_t*
  %3852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3853 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3852, i64 0, i64 1
  %XMM1.i281 = bitcast %union.VectorReg* %3853 to %union.vec128_t*
  %3854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3855 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3854, i64 0, i64 2
  %XMM2.i282 = bitcast %union.VectorReg* %3855 to %union.vec128_t*
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3857 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3856, i64 0, i64 3
  %XMM3.i283 = bitcast %union.VectorReg* %3857 to %union.vec128_t*
  %3858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3859 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3858, i64 0, i64 4
  %XMM4.i284 = bitcast %union.VectorReg* %3859 to %union.vec128_t*
  %3860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3861 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3860, i64 0, i64 5
  %XMM5.i285 = bitcast %union.VectorReg* %3861 to %union.vec128_t*
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3863 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3862, i64 0, i64 6
  %XMM6.i286 = bitcast %union.VectorReg* %3863 to %union.vec128_t*
  %3864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3865 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3864, i64 0, i64 7
  %XMM7.i287 = bitcast %union.VectorReg* %3865 to %union.vec128_t*
  %3866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3867 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3866, i64 0, i64 8
  %XMM8.i288 = bitcast %union.VectorReg* %3867 to %union.vec128_t*
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3869 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3868, i64 0, i64 9
  %XMM9.i289 = bitcast %union.VectorReg* %3869 to %union.vec128_t*
  %3870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3871 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3870, i64 0, i64 10
  %XMM10.i290 = bitcast %union.VectorReg* %3871 to %union.vec128_t*
  %3872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3873 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3872, i64 0, i64 11
  %XMM11.i291 = bitcast %union.VectorReg* %3873 to %union.vec128_t*
  %3874 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3875 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3874, i64 0, i64 12
  %XMM12.i292 = bitcast %union.VectorReg* %3875 to %union.vec128_t*
  %3876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3877 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3876, i64 0, i64 13
  %XMM13.i293 = bitcast %union.VectorReg* %3877 to %union.vec128_t*
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3879 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3878, i64 0, i64 14
  %XMM14.i294 = bitcast %union.VectorReg* %3879 to %union.vec128_t*
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %3881 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %3880, i64 0, i64 15
  %XMM15.i295 = bitcast %union.VectorReg* %3881 to %union.vec128_t*
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3883 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3882, i32 0, i32 0
  %3884 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3883, i64 0, i64 0
  %ST0.i296 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3884, i32 0, i32 1
  %3885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3886 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3885, i32 0, i32 0
  %3887 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3886, i64 0, i64 1
  %ST1.i297 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3887, i32 0, i32 1
  %3888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3889 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3888, i32 0, i32 0
  %3890 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3889, i64 0, i64 2
  %ST2.i298 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3890, i32 0, i32 1
  %3891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3892 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3891, i32 0, i32 0
  %3893 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3892, i64 0, i64 3
  %ST3.i299 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3893, i32 0, i32 1
  %3894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3895 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3894, i32 0, i32 0
  %3896 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3895, i64 0, i64 4
  %ST4.i300 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3896, i32 0, i32 1
  %3897 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3898 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3897, i32 0, i32 0
  %3899 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3898, i64 0, i64 5
  %ST5.i301 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3899, i32 0, i32 1
  %3900 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3901 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3900, i32 0, i32 0
  %3902 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3901, i64 0, i64 6
  %ST6.i302 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3902, i32 0, i32 1
  %3903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %3904 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %3903, i32 0, i32 0
  %3905 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %3904, i64 0, i64 7
  %ST7.i303 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %3905, i32 0, i32 1
  %3906 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3907 = getelementptr inbounds %struct.MMX, %struct.MMX* %3906, i32 0, i32 0
  %3908 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3907, i64 0, i64 0
  %3909 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3908, i32 0, i32 1
  %3910 = bitcast %union.vec64_t* %3909 to %struct.uint64v1_t*
  %3911 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3910, i32 0, i32 0
  %MM0.i304 = getelementptr inbounds [1 x i64], [1 x i64]* %3911, i64 0, i64 0
  %3912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3913 = getelementptr inbounds %struct.MMX, %struct.MMX* %3912, i32 0, i32 0
  %3914 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3913, i64 0, i64 1
  %3915 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3914, i32 0, i32 1
  %3916 = bitcast %union.vec64_t* %3915 to %struct.uint64v1_t*
  %3917 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3916, i32 0, i32 0
  %MM1.i305 = getelementptr inbounds [1 x i64], [1 x i64]* %3917, i64 0, i64 0
  %3918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3919 = getelementptr inbounds %struct.MMX, %struct.MMX* %3918, i32 0, i32 0
  %3920 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3919, i64 0, i64 2
  %3921 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3920, i32 0, i32 1
  %3922 = bitcast %union.vec64_t* %3921 to %struct.uint64v1_t*
  %3923 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3922, i32 0, i32 0
  %MM2.i306 = getelementptr inbounds [1 x i64], [1 x i64]* %3923, i64 0, i64 0
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3925 = getelementptr inbounds %struct.MMX, %struct.MMX* %3924, i32 0, i32 0
  %3926 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3925, i64 0, i64 3
  %3927 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3926, i32 0, i32 1
  %3928 = bitcast %union.vec64_t* %3927 to %struct.uint64v1_t*
  %3929 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3928, i32 0, i32 0
  %MM3.i307 = getelementptr inbounds [1 x i64], [1 x i64]* %3929, i64 0, i64 0
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3931 = getelementptr inbounds %struct.MMX, %struct.MMX* %3930, i32 0, i32 0
  %3932 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3931, i64 0, i64 4
  %3933 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3932, i32 0, i32 1
  %3934 = bitcast %union.vec64_t* %3933 to %struct.uint64v1_t*
  %3935 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3934, i32 0, i32 0
  %MM4.i308 = getelementptr inbounds [1 x i64], [1 x i64]* %3935, i64 0, i64 0
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3937 = getelementptr inbounds %struct.MMX, %struct.MMX* %3936, i32 0, i32 0
  %3938 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3937, i64 0, i64 5
  %3939 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3938, i32 0, i32 1
  %3940 = bitcast %union.vec64_t* %3939 to %struct.uint64v1_t*
  %3941 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3940, i32 0, i32 0
  %MM5.i309 = getelementptr inbounds [1 x i64], [1 x i64]* %3941, i64 0, i64 0
  %3942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3943 = getelementptr inbounds %struct.MMX, %struct.MMX* %3942, i32 0, i32 0
  %3944 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3943, i64 0, i64 6
  %3945 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3944, i32 0, i32 1
  %3946 = bitcast %union.vec64_t* %3945 to %struct.uint64v1_t*
  %3947 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3946, i32 0, i32 0
  %MM6.i310 = getelementptr inbounds [1 x i64], [1 x i64]* %3947, i64 0, i64 0
  %3948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %3949 = getelementptr inbounds %struct.MMX, %struct.MMX* %3948, i32 0, i32 0
  %3950 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %3949, i64 0, i64 7
  %3951 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %3950, i32 0, i32 1
  %3952 = bitcast %union.vec64_t* %3951 to %struct.uint64v1_t*
  %3953 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %3952, i32 0, i32 0
  %MM7.i311 = getelementptr inbounds [1 x i64], [1 x i64]* %3953, i64 0, i64 0
  %3954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i312 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3954, i32 0, i32 5
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i313 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3955, i32 0, i32 1
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i314 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3956, i32 0, i32 11
  %3957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i315 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3957, i32 0, i32 13
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i316 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3958, i32 0, i32 3
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i317 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3959, i32 0, i32 9
  %3960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i318 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %3960, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i170, align 8, !noalias !2481
  store i64* @DR1, i64** %_DR1.i171, align 8, !noalias !2481
  store i64* @DR2, i64** %_DR2.i172, align 8, !noalias !2481
  store i64* @DR3, i64** %_DR3.i173, align 8, !noalias !2481
  store i64* @DR4, i64** %_DR4.i174, align 8, !noalias !2481
  store i64* @DR5, i64** %_DR5.i175, align 8, !noalias !2481
  store i64* @DR6, i64** %_DR6.i176, align 8, !noalias !2481
  store i64* @DR7, i64** %_DR7.i177, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i178, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i179, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i180, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i181, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i182, align 8, !noalias !2481
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i183, align 8, !noalias !2481
  %3961 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  %3962 = load double, double* %3961, !alias.scope !2485, !noalias !2486
  %3963 = load i64, i64* %RSP.i245, !alias.scope !2485, !noalias !2486
  %3964 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2481
  %3965 = inttoptr i64 %3963 to i64*
  %3966 = load i64, i64* %3965
  store i64 %3966, i64* %PC.i184, !alias.scope !2485, !noalias !2486
  %3967 = add i64 %3963, 8
  store i64 %3967, i64* %RSP.i245, !alias.scope !2485, !noalias !2486
  %3968 = call double @cos(double %3962)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i264, !alias.scope !2485, !noalias !2486
  %3969 = bitcast %"class.std::bitset"* %YMM0.i264 to double*
  store double %3968, double* %3969, !alias.scope !2485, !noalias !2486
  %3970 = load %struct.Memory*, %struct.Memory** %MEMORY.i169, !noalias !2481
  %3971 = bitcast %struct.State** %state.i160 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3971)
  %3972 = bitcast i64* %curr_pc.i161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3972)
  %3973 = bitcast %struct.Memory** %memory.i162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3973)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i163)
  %3974 = bitcast i64* %SS_BASE.i164 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3974)
  %3975 = bitcast i64* %ES_BASE.i165 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3975)
  %3976 = bitcast i64* %DS_BASE.i166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3976)
  %3977 = bitcast i64* %CS_BASE.i167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3977)
  %3978 = bitcast %struct.State** %STATE.i168 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3978)
  %3979 = bitcast %struct.Memory** %MEMORY.i169 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3979)
  %3980 = bitcast i64** %_DR0.i170 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3980)
  %3981 = bitcast i64** %_DR1.i171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3981)
  %3982 = bitcast i64** %_DR2.i172 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3982)
  %3983 = bitcast i64** %_DR3.i173 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3983)
  %3984 = bitcast i64** %_DR4.i174 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3984)
  %3985 = bitcast i64** %_DR5.i175 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3985)
  %3986 = bitcast i64** %_DR6.i176 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3986)
  %3987 = bitcast i64** %_DR7.i177 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3987)
  %3988 = bitcast i64** %CR0.i178 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3988)
  %3989 = bitcast i64** %CR1.i179 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3989)
  %3990 = bitcast i64** %CR2.i180 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3990)
  %3991 = bitcast i64** %CR3.i181 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3991)
  %3992 = bitcast i64** %CR4.i182 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3992)
  %3993 = bitcast i64** %CR8.i183 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %3993)
  %3994 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %3995 = load i64, i64* %RBP
  %3996 = sub i64 %3995, 120
  %3997 = load i64, i64* %PC
  %3998 = add i64 %3997, 5
  store i64 %3998, i64* %PC
  %3999 = inttoptr i64 %3996 to double*
  %4000 = load double, double* %3999
  %4001 = bitcast i8* %3994 to double*
  store double %4000, double* %4001, align 1, !tbaa !2452
  %4002 = getelementptr inbounds i8, i8* %3994, i64 8
  %4003 = bitcast i8* %4002 to double*
  store double 0.000000e+00, double* %4003, align 1, !tbaa !2452
  %4004 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4005 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4006 = bitcast %union.vec128_t* %XMM0 to i8*
  %4007 = load i64, i64* %PC
  %4008 = add i64 %4007, 4
  store i64 %4008, i64* %PC
  %4009 = bitcast i8* %4005 to double*
  %4010 = load double, double* %4009, align 1
  %4011 = getelementptr inbounds i8, i8* %4005, i64 8
  %4012 = bitcast i8* %4011 to i64*
  %4013 = load i64, i64* %4012, align 1
  %4014 = bitcast i8* %4006 to double*
  %4015 = load double, double* %4014, align 1
  %4016 = fmul double %4010, %4015
  %4017 = bitcast i8* %4004 to double*
  store double %4016, double* %4017, align 1, !tbaa !2452
  %4018 = getelementptr inbounds i8, i8* %4004, i64 8
  %4019 = bitcast i8* %4018 to i64*
  store i64 %4013, i64* %4019, align 1, !tbaa !2452
  %4020 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4021 = load i64, i64* %PC
  %4022 = add i64 %4021, 9
  store i64 %4022, i64* %PC
  %4023 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1272) to double*)
  %4024 = bitcast i8* %4020 to double*
  store double %4023, double* %4024, align 1, !tbaa !2452
  %4025 = getelementptr inbounds i8, i8* %4020, i64 8
  %4026 = bitcast i8* %4025 to double*
  store double 0.000000e+00, double* %4026, align 1, !tbaa !2452
  %4027 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %4028 = load i64, i64* %PC
  %4029 = add i64 %4028, 9
  store i64 %4029, i64* %PC
  %4030 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4031 = bitcast i8* %4027 to double*
  store double %4030, double* %4031, align 1, !tbaa !2452
  %4032 = getelementptr inbounds i8, i8* %4027, i64 8
  %4033 = bitcast i8* %4032 to double*
  store double 0.000000e+00, double* %4033, align 1, !tbaa !2452
  %4034 = load i64, i64* %RBP
  %4035 = sub i64 %4034, 128
  %4036 = bitcast %union.vec128_t* %XMM0 to i8*
  %4037 = load i64, i64* %PC
  %4038 = add i64 %4037, 5
  store i64 %4038, i64* %PC
  %4039 = bitcast i8* %4036 to double*
  %4040 = load double, double* %4039, align 1
  %4041 = inttoptr i64 %4035 to double*
  store double %4040, double* %4041
  %4042 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4043 = bitcast %union.vec128_t* %XMM2 to i8*
  %4044 = load i64, i64* %PC
  %4045 = add i64 %4044, 3
  store i64 %4045, i64* %PC
  %4046 = bitcast i8* %4043 to <2 x i32>*
  %4047 = load <2 x i32>, <2 x i32>* %4046, align 1
  %4048 = getelementptr inbounds i8, i8* %4043, i64 8
  %4049 = bitcast i8* %4048 to <2 x i32>*
  %4050 = load <2 x i32>, <2 x i32>* %4049, align 1
  %4051 = extractelement <2 x i32> %4047, i32 0
  %4052 = bitcast i8* %4042 to i32*
  store i32 %4051, i32* %4052, align 1, !tbaa !2455
  %4053 = extractelement <2 x i32> %4047, i32 1
  %4054 = getelementptr inbounds i8, i8* %4042, i64 4
  %4055 = bitcast i8* %4054 to i32*
  store i32 %4053, i32* %4055, align 1, !tbaa !2455
  %4056 = extractelement <2 x i32> %4050, i32 0
  %4057 = getelementptr inbounds i8, i8* %4042, i64 8
  %4058 = bitcast i8* %4057 to i32*
  store i32 %4056, i32* %4058, align 1, !tbaa !2455
  %4059 = extractelement <2 x i32> %4050, i32 1
  %4060 = getelementptr inbounds i8, i8* %4042, i64 12
  %4061 = bitcast i8* %4060 to i32*
  store i32 %4059, i32* %4061, align 1, !tbaa !2455
  %4062 = load i64, i64* %RBP
  %4063 = sub i64 %4062, 136
  %4064 = bitcast %union.vec128_t* %XMM1 to i8*
  %4065 = load i64, i64* %PC
  %4066 = add i64 %4065, 8
  store i64 %4066, i64* %PC
  %4067 = bitcast i8* %4064 to double*
  %4068 = load double, double* %4067, align 1
  %4069 = inttoptr i64 %4063 to double*
  store double %4068, double* %4069
  %4070 = load i64, i64* %PC
  %4071 = sub i64 %4070, 3882
  %4072 = load i64, i64* %PC
  %4073 = add i64 %4072, 5
  %4074 = load i64, i64* %PC
  %4075 = add i64 %4074, 5
  store i64 %4075, i64* %PC
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4077 = load i64, i64* %4076, align 8, !tbaa !2428
  %4078 = add i64 %4077, -8
  %4079 = inttoptr i64 %4078 to i64*
  store i64 %4073, i64* %4079
  store i64 %4078, i64* %4076, align 8, !tbaa !2428
  %4080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4071, i64* %4080, align 8, !tbaa !2428
  %4081 = load i64, i64* %PC
  %4082 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4082)
  %4083 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4083)
  %4084 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4084)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %4085 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4085)
  %4086 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4086)
  %4087 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4087)
  %4088 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4088)
  %4089 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4089)
  %4090 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4090)
  %4091 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4091)
  %4092 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4092)
  %4093 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4093)
  %4094 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4094)
  %4095 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4095)
  %4096 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4096)
  %4097 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4097)
  %4098 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4098)
  %4099 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4099)
  %4100 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4100)
  %4101 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4101)
  %4102 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4102)
  %4103 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4103)
  %4104 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4104)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2487
  store i64 %4081, i64* %curr_pc.i2, align 8, !noalias !2487
  store %struct.Memory* %3970, %struct.Memory** %memory.i3, align 8, !noalias !2487
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2487
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2487
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2487
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2487
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2487
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2487
  store %struct.Memory* %3970, %struct.Memory** %MEMORY.i10, align 8, !noalias !2487
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4106 = getelementptr inbounds %struct.GPR, %struct.GPR* %4105, i32 0, i32 33
  %4107 = getelementptr inbounds %struct.Reg, %struct.Reg* %4106, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %4107 to i64*
  store i64 %4081, i64* %PC.i25, align 8, !alias.scope !2491, !noalias !2492
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4109 = getelementptr inbounds %struct.GPR, %struct.GPR* %4108, i32 0, i32 1
  %4110 = getelementptr inbounds %struct.Reg, %struct.Reg* %4109, i32 0, i32 0
  %4111 = bitcast %union.anon* %4110 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4111, i32 0, i32 1
  %4112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4113 = getelementptr inbounds %struct.GPR, %struct.GPR* %4112, i32 0, i32 3
  %4114 = getelementptr inbounds %struct.Reg, %struct.Reg* %4113, i32 0, i32 0
  %4115 = bitcast %union.anon* %4114 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4115, i32 0, i32 1
  %4116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4117 = getelementptr inbounds %struct.GPR, %struct.GPR* %4116, i32 0, i32 5
  %4118 = getelementptr inbounds %struct.Reg, %struct.Reg* %4117, i32 0, i32 0
  %4119 = bitcast %union.anon* %4118 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4119, i32 0, i32 1
  %4120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4121 = getelementptr inbounds %struct.GPR, %struct.GPR* %4120, i32 0, i32 7
  %4122 = getelementptr inbounds %struct.Reg, %struct.Reg* %4121, i32 0, i32 0
  %4123 = bitcast %union.anon* %4122 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4123, i32 0, i32 1
  %4124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4125 = getelementptr inbounds %struct.GPR, %struct.GPR* %4124, i32 0, i32 1
  %4126 = getelementptr inbounds %struct.Reg, %struct.Reg* %4125, i32 0, i32 0
  %4127 = bitcast %union.anon* %4126 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4127, i32 0, i32 0
  %4128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4129 = getelementptr inbounds %struct.GPR, %struct.GPR* %4128, i32 0, i32 3
  %4130 = getelementptr inbounds %struct.Reg, %struct.Reg* %4129, i32 0, i32 0
  %4131 = bitcast %union.anon* %4130 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4131, i32 0, i32 0
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 5
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %4135 = bitcast %union.anon* %4134 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4135, i32 0, i32 0
  %4136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4137 = getelementptr inbounds %struct.GPR, %struct.GPR* %4136, i32 0, i32 7
  %4138 = getelementptr inbounds %struct.Reg, %struct.Reg* %4137, i32 0, i32 0
  %4139 = bitcast %union.anon* %4138 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4139, i32 0, i32 0
  %4140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4141 = getelementptr inbounds %struct.GPR, %struct.GPR* %4140, i32 0, i32 9
  %4142 = getelementptr inbounds %struct.Reg, %struct.Reg* %4141, i32 0, i32 0
  %4143 = bitcast %union.anon* %4142 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4143, i32 0, i32 0
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 11
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %4147 = bitcast %union.anon* %4146 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4147, i32 0, i32 0
  %4148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4149 = getelementptr inbounds %struct.GPR, %struct.GPR* %4148, i32 0, i32 13
  %4150 = getelementptr inbounds %struct.Reg, %struct.Reg* %4149, i32 0, i32 0
  %4151 = bitcast %union.anon* %4150 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4151, i32 0, i32 0
  %4152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4153 = getelementptr inbounds %struct.GPR, %struct.GPR* %4152, i32 0, i32 15
  %4154 = getelementptr inbounds %struct.Reg, %struct.Reg* %4153, i32 0, i32 0
  %4155 = bitcast %union.anon* %4154 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4155, i32 0, i32 0
  %4156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4157 = getelementptr inbounds %struct.GPR, %struct.GPR* %4156, i32 0, i32 17
  %4158 = getelementptr inbounds %struct.Reg, %struct.Reg* %4157, i32 0, i32 0
  %4159 = bitcast %union.anon* %4158 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4159, i32 0, i32 0
  %4160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4161 = getelementptr inbounds %struct.GPR, %struct.GPR* %4160, i32 0, i32 19
  %4162 = getelementptr inbounds %struct.Reg, %struct.Reg* %4161, i32 0, i32 0
  %4163 = bitcast %union.anon* %4162 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4163, i32 0, i32 0
  %4164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4165 = getelementptr inbounds %struct.GPR, %struct.GPR* %4164, i32 0, i32 21
  %4166 = getelementptr inbounds %struct.Reg, %struct.Reg* %4165, i32 0, i32 0
  %4167 = bitcast %union.anon* %4166 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4167, i32 0, i32 0
  %4168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4169 = getelementptr inbounds %struct.GPR, %struct.GPR* %4168, i32 0, i32 23
  %4170 = getelementptr inbounds %struct.Reg, %struct.Reg* %4169, i32 0, i32 0
  %4171 = bitcast %union.anon* %4170 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4171, i32 0, i32 0
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4173 = getelementptr inbounds %struct.GPR, %struct.GPR* %4172, i32 0, i32 25
  %4174 = getelementptr inbounds %struct.Reg, %struct.Reg* %4173, i32 0, i32 0
  %4175 = bitcast %union.anon* %4174 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4175, i32 0, i32 0
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4177 = getelementptr inbounds %struct.GPR, %struct.GPR* %4176, i32 0, i32 27
  %4178 = getelementptr inbounds %struct.Reg, %struct.Reg* %4177, i32 0, i32 0
  %4179 = bitcast %union.anon* %4178 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4179, i32 0, i32 0
  %4180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4181 = getelementptr inbounds %struct.GPR, %struct.GPR* %4180, i32 0, i32 29
  %4182 = getelementptr inbounds %struct.Reg, %struct.Reg* %4181, i32 0, i32 0
  %4183 = bitcast %union.anon* %4182 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4183, i32 0, i32 0
  %4184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4185 = getelementptr inbounds %struct.GPR, %struct.GPR* %4184, i32 0, i32 31
  %4186 = getelementptr inbounds %struct.Reg, %struct.Reg* %4185, i32 0, i32 0
  %4187 = bitcast %union.anon* %4186 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4187, i32 0, i32 0
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4189 = getelementptr inbounds %struct.GPR, %struct.GPR* %4188, i32 0, i32 1
  %4190 = getelementptr inbounds %struct.Reg, %struct.Reg* %4189, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %4190 to i16*
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4192 = getelementptr inbounds %struct.GPR, %struct.GPR* %4191, i32 0, i32 3
  %4193 = getelementptr inbounds %struct.Reg, %struct.Reg* %4192, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %4193 to i16*
  %4194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4195 = getelementptr inbounds %struct.GPR, %struct.GPR* %4194, i32 0, i32 5
  %4196 = getelementptr inbounds %struct.Reg, %struct.Reg* %4195, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %4196 to i16*
  %4197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4198 = getelementptr inbounds %struct.GPR, %struct.GPR* %4197, i32 0, i32 7
  %4199 = getelementptr inbounds %struct.Reg, %struct.Reg* %4198, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %4199 to i16*
  %4200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4201 = getelementptr inbounds %struct.GPR, %struct.GPR* %4200, i32 0, i32 9
  %4202 = getelementptr inbounds %struct.Reg, %struct.Reg* %4201, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %4202 to i16*
  %4203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4204 = getelementptr inbounds %struct.GPR, %struct.GPR* %4203, i32 0, i32 11
  %4205 = getelementptr inbounds %struct.Reg, %struct.Reg* %4204, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %4205 to i16*
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 13
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %4208 to i16*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 15
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %4211 to i16*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 17
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %4214 to i16*
  %4215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4216 = getelementptr inbounds %struct.GPR, %struct.GPR* %4215, i32 0, i32 19
  %4217 = getelementptr inbounds %struct.Reg, %struct.Reg* %4216, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %4217 to i16*
  %4218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4219 = getelementptr inbounds %struct.GPR, %struct.GPR* %4218, i32 0, i32 21
  %4220 = getelementptr inbounds %struct.Reg, %struct.Reg* %4219, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %4220 to i16*
  %4221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4222 = getelementptr inbounds %struct.GPR, %struct.GPR* %4221, i32 0, i32 23
  %4223 = getelementptr inbounds %struct.Reg, %struct.Reg* %4222, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %4223 to i16*
  %4224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4225 = getelementptr inbounds %struct.GPR, %struct.GPR* %4224, i32 0, i32 25
  %4226 = getelementptr inbounds %struct.Reg, %struct.Reg* %4225, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %4226 to i16*
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4228 = getelementptr inbounds %struct.GPR, %struct.GPR* %4227, i32 0, i32 27
  %4229 = getelementptr inbounds %struct.Reg, %struct.Reg* %4228, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %4229 to i16*
  %4230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4231 = getelementptr inbounds %struct.GPR, %struct.GPR* %4230, i32 0, i32 29
  %4232 = getelementptr inbounds %struct.Reg, %struct.Reg* %4231, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %4232 to i16*
  %4233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4234 = getelementptr inbounds %struct.GPR, %struct.GPR* %4233, i32 0, i32 31
  %4235 = getelementptr inbounds %struct.Reg, %struct.Reg* %4234, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %4235 to i16*
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4237 = getelementptr inbounds %struct.GPR, %struct.GPR* %4236, i32 0, i32 33
  %4238 = getelementptr inbounds %struct.Reg, %struct.Reg* %4237, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %4238 to i16*
  %4239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4240 = getelementptr inbounds %struct.GPR, %struct.GPR* %4239, i32 0, i32 1
  %4241 = getelementptr inbounds %struct.Reg, %struct.Reg* %4240, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %4241 to i32*
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4243 = getelementptr inbounds %struct.GPR, %struct.GPR* %4242, i32 0, i32 3
  %4244 = getelementptr inbounds %struct.Reg, %struct.Reg* %4243, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %4244 to i32*
  %4245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4246 = getelementptr inbounds %struct.GPR, %struct.GPR* %4245, i32 0, i32 5
  %4247 = getelementptr inbounds %struct.Reg, %struct.Reg* %4246, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %4247 to i32*
  %4248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4249 = getelementptr inbounds %struct.GPR, %struct.GPR* %4248, i32 0, i32 7
  %4250 = getelementptr inbounds %struct.Reg, %struct.Reg* %4249, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %4250 to i32*
  %4251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4252 = getelementptr inbounds %struct.GPR, %struct.GPR* %4251, i32 0, i32 9
  %4253 = getelementptr inbounds %struct.Reg, %struct.Reg* %4252, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %4253 to i32*
  %4254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4255 = getelementptr inbounds %struct.GPR, %struct.GPR* %4254, i32 0, i32 11
  %4256 = getelementptr inbounds %struct.Reg, %struct.Reg* %4255, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %4256 to i32*
  %4257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4258 = getelementptr inbounds %struct.GPR, %struct.GPR* %4257, i32 0, i32 13
  %4259 = getelementptr inbounds %struct.Reg, %struct.Reg* %4258, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %4259 to i32*
  %4260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4261 = getelementptr inbounds %struct.GPR, %struct.GPR* %4260, i32 0, i32 15
  %4262 = getelementptr inbounds %struct.Reg, %struct.Reg* %4261, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %4262 to i32*
  %4263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4264 = getelementptr inbounds %struct.GPR, %struct.GPR* %4263, i32 0, i32 33
  %4265 = getelementptr inbounds %struct.Reg, %struct.Reg* %4264, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %4265 to i32*
  %4266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4267 = getelementptr inbounds %struct.GPR, %struct.GPR* %4266, i32 0, i32 17
  %4268 = getelementptr inbounds %struct.Reg, %struct.Reg* %4267, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %4268 to i32*
  %4269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4270 = getelementptr inbounds %struct.GPR, %struct.GPR* %4269, i32 0, i32 19
  %4271 = getelementptr inbounds %struct.Reg, %struct.Reg* %4270, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %4271 to i32*
  %4272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4273 = getelementptr inbounds %struct.GPR, %struct.GPR* %4272, i32 0, i32 21
  %4274 = getelementptr inbounds %struct.Reg, %struct.Reg* %4273, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %4274 to i32*
  %4275 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4276 = getelementptr inbounds %struct.GPR, %struct.GPR* %4275, i32 0, i32 23
  %4277 = getelementptr inbounds %struct.Reg, %struct.Reg* %4276, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %4277 to i32*
  %4278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4279 = getelementptr inbounds %struct.GPR, %struct.GPR* %4278, i32 0, i32 25
  %4280 = getelementptr inbounds %struct.Reg, %struct.Reg* %4279, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %4280 to i32*
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4282 = getelementptr inbounds %struct.GPR, %struct.GPR* %4281, i32 0, i32 27
  %4283 = getelementptr inbounds %struct.Reg, %struct.Reg* %4282, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %4283 to i32*
  %4284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4285 = getelementptr inbounds %struct.GPR, %struct.GPR* %4284, i32 0, i32 29
  %4286 = getelementptr inbounds %struct.Reg, %struct.Reg* %4285, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %4286 to i32*
  %4287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4288 = getelementptr inbounds %struct.GPR, %struct.GPR* %4287, i32 0, i32 31
  %4289 = getelementptr inbounds %struct.Reg, %struct.Reg* %4288, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %4289 to i32*
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4291 = getelementptr inbounds %struct.GPR, %struct.GPR* %4290, i32 0, i32 1
  %4292 = getelementptr inbounds %struct.Reg, %struct.Reg* %4291, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %4292 to i64*
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4294 = getelementptr inbounds %struct.GPR, %struct.GPR* %4293, i32 0, i32 3
  %4295 = getelementptr inbounds %struct.Reg, %struct.Reg* %4294, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %4295 to i64*
  %4296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4297 = getelementptr inbounds %struct.GPR, %struct.GPR* %4296, i32 0, i32 5
  %4298 = getelementptr inbounds %struct.Reg, %struct.Reg* %4297, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %4298 to i64*
  %4299 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4300 = getelementptr inbounds %struct.GPR, %struct.GPR* %4299, i32 0, i32 7
  %4301 = getelementptr inbounds %struct.Reg, %struct.Reg* %4300, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %4301 to i64*
  %4302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4303 = getelementptr inbounds %struct.GPR, %struct.GPR* %4302, i32 0, i32 9
  %4304 = getelementptr inbounds %struct.Reg, %struct.Reg* %4303, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %4304 to i64*
  %4305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4306 = getelementptr inbounds %struct.GPR, %struct.GPR* %4305, i32 0, i32 11
  %4307 = getelementptr inbounds %struct.Reg, %struct.Reg* %4306, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %4307 to i64*
  %4308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4309 = getelementptr inbounds %struct.GPR, %struct.GPR* %4308, i32 0, i32 13
  %4310 = getelementptr inbounds %struct.Reg, %struct.Reg* %4309, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %4310 to i64*
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4312 = getelementptr inbounds %struct.GPR, %struct.GPR* %4311, i32 0, i32 15
  %4313 = getelementptr inbounds %struct.Reg, %struct.Reg* %4312, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %4313 to i64*
  %4314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4315 = getelementptr inbounds %struct.GPR, %struct.GPR* %4314, i32 0, i32 17
  %4316 = getelementptr inbounds %struct.Reg, %struct.Reg* %4315, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %4316 to i64*
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4318 = getelementptr inbounds %struct.GPR, %struct.GPR* %4317, i32 0, i32 19
  %4319 = getelementptr inbounds %struct.Reg, %struct.Reg* %4318, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %4319 to i64*
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4321 = getelementptr inbounds %struct.GPR, %struct.GPR* %4320, i32 0, i32 21
  %4322 = getelementptr inbounds %struct.Reg, %struct.Reg* %4321, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %4322 to i64*
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4324 = getelementptr inbounds %struct.GPR, %struct.GPR* %4323, i32 0, i32 23
  %4325 = getelementptr inbounds %struct.Reg, %struct.Reg* %4324, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %4325 to i64*
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 25
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 27
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %4331 to i64*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 29
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %4334 to i64*
  %4335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4336 = getelementptr inbounds %struct.GPR, %struct.GPR* %4335, i32 0, i32 31
  %4337 = getelementptr inbounds %struct.Reg, %struct.Reg* %4336, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %4337 to i64*
  %4338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4339 = getelementptr inbounds %struct.GPR, %struct.GPR* %4338, i32 0, i32 33
  %4340 = getelementptr inbounds %struct.Reg, %struct.Reg* %4339, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %4340 to i64*
  %4341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4342 = getelementptr inbounds %struct.Segments, %struct.Segments* %4341, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %4342 to i16*
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4344 = getelementptr inbounds %struct.Segments, %struct.Segments* %4343, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %4344 to i16*
  %4345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4346 = getelementptr inbounds %struct.Segments, %struct.Segments* %4345, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %4346 to i16*
  %4347 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4348 = getelementptr inbounds %struct.Segments, %struct.Segments* %4347, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %4348 to i16*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4350 = getelementptr inbounds %struct.Segments, %struct.Segments* %4349, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %4350 to i16*
  %4351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %4352 = getelementptr inbounds %struct.Segments, %struct.Segments* %4351, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %4352 to i16*
  %4353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4354 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4353, i32 0, i32 5
  %4355 = getelementptr inbounds %struct.Reg, %struct.Reg* %4354, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %4355 to i64*
  %4356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %4357 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %4356, i32 0, i32 7
  %4358 = getelementptr inbounds %struct.Reg, %struct.Reg* %4357, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %4358 to i64*
  %4359 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4360 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4359, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %4360 to %"class.std::bitset"*
  %4361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4362 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4361, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %4362 to %"class.std::bitset"*
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4364 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4363, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %4364 to %"class.std::bitset"*
  %4365 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4366 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4365, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %4366 to %"class.std::bitset"*
  %4367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4368 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4367, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %4368 to %"class.std::bitset"*
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4370 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4369, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %4370 to %"class.std::bitset"*
  %4371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4372 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4371, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %4372 to %"class.std::bitset"*
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4374 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4373, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %4374 to %"class.std::bitset"*
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4376 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4375, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %4376 to %"class.std::bitset"*
  %4377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4378 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4377, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %4378 to %"class.std::bitset"*
  %4379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4380 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4379, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %4380 to %"class.std::bitset"*
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4382 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4381, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %4382 to %"class.std::bitset"*
  %4383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4384 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4383, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %4384 to %"class.std::bitset"*
  %4385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4386 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4385, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %4386 to %"class.std::bitset"*
  %4387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4388 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4387, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %4388 to %"class.std::bitset"*
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4390 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4389, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %4390 to %"class.std::bitset"*
  %4391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4392 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4391, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %4392 to %union.vec128_t*
  %4393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4394 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4393, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %4394 to %union.vec128_t*
  %4395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4396 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4395, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %4396 to %union.vec128_t*
  %4397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4398 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4397, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %4398 to %union.vec128_t*
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4400 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4399, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %4400 to %union.vec128_t*
  %4401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4402 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4401, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %4402 to %union.vec128_t*
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4404 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4403, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %4404 to %union.vec128_t*
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4406 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4405, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %4406 to %union.vec128_t*
  %4407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4408 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4407, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %4408 to %union.vec128_t*
  %4409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4410 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4409, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %4410 to %union.vec128_t*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4412 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4411, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %4412 to %union.vec128_t*
  %4413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4414 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4413, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %4414 to %union.vec128_t*
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4416 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4415, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %4416 to %union.vec128_t*
  %4417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4418 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4417, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %4418 to %union.vec128_t*
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4420 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4419, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %4420 to %union.vec128_t*
  %4421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %4422 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %4421, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %4422 to %union.vec128_t*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4424 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4423, i32 0, i32 0
  %4425 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4424, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4425, i32 0, i32 1
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4427 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4426, i32 0, i32 0
  %4428 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4427, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4428, i32 0, i32 1
  %4429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4430 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4429, i32 0, i32 0
  %4431 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4430, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4431, i32 0, i32 1
  %4432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4433 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4432, i32 0, i32 0
  %4434 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4433, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4434, i32 0, i32 1
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4436 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4435, i32 0, i32 0
  %4437 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4436, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4437, i32 0, i32 1
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4439 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4438, i32 0, i32 0
  %4440 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4439, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4440, i32 0, i32 1
  %4441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4442 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4441, i32 0, i32 0
  %4443 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4442, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4443, i32 0, i32 1
  %4444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %4445 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %4444, i32 0, i32 0
  %4446 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %4445, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %4446, i32 0, i32 1
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4448 = getelementptr inbounds %struct.MMX, %struct.MMX* %4447, i32 0, i32 0
  %4449 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4448, i64 0, i64 0
  %4450 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4449, i32 0, i32 1
  %4451 = bitcast %union.vec64_t* %4450 to %struct.uint64v1_t*
  %4452 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4451, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %4452, i64 0, i64 0
  %4453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4454 = getelementptr inbounds %struct.MMX, %struct.MMX* %4453, i32 0, i32 0
  %4455 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4454, i64 0, i64 1
  %4456 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4455, i32 0, i32 1
  %4457 = bitcast %union.vec64_t* %4456 to %struct.uint64v1_t*
  %4458 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4457, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %4458, i64 0, i64 0
  %4459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4460 = getelementptr inbounds %struct.MMX, %struct.MMX* %4459, i32 0, i32 0
  %4461 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4460, i64 0, i64 2
  %4462 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4461, i32 0, i32 1
  %4463 = bitcast %union.vec64_t* %4462 to %struct.uint64v1_t*
  %4464 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4463, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %4464, i64 0, i64 0
  %4465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4466 = getelementptr inbounds %struct.MMX, %struct.MMX* %4465, i32 0, i32 0
  %4467 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4466, i64 0, i64 3
  %4468 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4467, i32 0, i32 1
  %4469 = bitcast %union.vec64_t* %4468 to %struct.uint64v1_t*
  %4470 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4469, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %4470, i64 0, i64 0
  %4471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4472 = getelementptr inbounds %struct.MMX, %struct.MMX* %4471, i32 0, i32 0
  %4473 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4472, i64 0, i64 4
  %4474 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4473, i32 0, i32 1
  %4475 = bitcast %union.vec64_t* %4474 to %struct.uint64v1_t*
  %4476 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4475, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %4476, i64 0, i64 0
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4478 = getelementptr inbounds %struct.MMX, %struct.MMX* %4477, i32 0, i32 0
  %4479 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4478, i64 0, i64 5
  %4480 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4479, i32 0, i32 1
  %4481 = bitcast %union.vec64_t* %4480 to %struct.uint64v1_t*
  %4482 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4481, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %4482, i64 0, i64 0
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4484 = getelementptr inbounds %struct.MMX, %struct.MMX* %4483, i32 0, i32 0
  %4485 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4484, i64 0, i64 6
  %4486 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4485, i32 0, i32 1
  %4487 = bitcast %union.vec64_t* %4486 to %struct.uint64v1_t*
  %4488 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4487, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %4488, i64 0, i64 0
  %4489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %4490 = getelementptr inbounds %struct.MMX, %struct.MMX* %4489, i32 0, i32 0
  %4491 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %4490, i64 0, i64 7
  %4492 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %4491, i32 0, i32 1
  %4493 = bitcast %union.vec64_t* %4492 to %struct.uint64v1_t*
  %4494 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %4493, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %4494, i64 0, i64 0
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4495, i32 0, i32 5
  %4496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4496, i32 0, i32 1
  %4497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4497, i32 0, i32 11
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4498, i32 0, i32 13
  %4499 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4499, i32 0, i32 3
  %4500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4500, i32 0, i32 9
  %4501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %4501, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2487
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2487
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2487
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2487
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2487
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2487
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2487
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2487
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2487
  %4502 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %4503 = load double, double* %4502, !alias.scope !2491, !noalias !2492
  %4504 = load i64, i64* %RSP.i86, !alias.scope !2491, !noalias !2492
  %4505 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2487
  %4506 = inttoptr i64 %4504 to i64*
  %4507 = load i64, i64* %4506
  store i64 %4507, i64* %PC.i25, !alias.scope !2491, !noalias !2492
  %4508 = add i64 %4504, 8
  store i64 %4508, i64* %RSP.i86, !alias.scope !2491, !noalias !2492
  %4509 = call double @cos(double %4503)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2491, !noalias !2492
  %4510 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %4509, double* %4510, !alias.scope !2491, !noalias !2492
  %4511 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2487
  %4512 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4512)
  %4513 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4513)
  %4514 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4514)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %4515 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4515)
  %4516 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4516)
  %4517 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4517)
  %4518 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4518)
  %4519 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4519)
  %4520 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4520)
  %4521 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4521)
  %4522 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4522)
  %4523 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4523)
  %4524 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4524)
  %4525 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4525)
  %4526 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4526)
  %4527 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4527)
  %4528 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4528)
  %4529 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4529)
  %4530 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4530)
  %4531 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4531)
  %4532 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4532)
  %4533 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4533)
  %4534 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %4534)
  %4535 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4536 = load i64, i64* %RBP
  %4537 = sub i64 %4536, 128
  %4538 = load i64, i64* %PC
  %4539 = add i64 %4538, 5
  store i64 %4539, i64* %PC
  %4540 = inttoptr i64 %4537 to double*
  %4541 = load double, double* %4540
  %4542 = bitcast i8* %4535 to double*
  store double %4541, double* %4542, align 1, !tbaa !2452
  %4543 = getelementptr inbounds i8, i8* %4535, i64 8
  %4544 = bitcast i8* %4543 to double*
  store double 0.000000e+00, double* %4544, align 1, !tbaa !2452
  %4545 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4546 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4547 = bitcast %union.vec128_t* %XMM0 to i8*
  %4548 = load i64, i64* %PC
  %4549 = add i64 %4548, 4
  store i64 %4549, i64* %PC
  %4550 = bitcast i8* %4546 to double*
  %4551 = load double, double* %4550, align 1
  %4552 = getelementptr inbounds i8, i8* %4546, i64 8
  %4553 = bitcast i8* %4552 to i64*
  %4554 = load i64, i64* %4553, align 1
  %4555 = bitcast i8* %4547 to double*
  %4556 = load double, double* %4555, align 1
  %4557 = fmul double %4551, %4556
  %4558 = bitcast i8* %4545 to double*
  store double %4557, double* %4558, align 1, !tbaa !2452
  %4559 = getelementptr inbounds i8, i8* %4545, i64 8
  %4560 = bitcast i8* %4559 to i64*
  store i64 %4554, i64* %4560, align 1, !tbaa !2452
  %4561 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4562 = load i64, i64* %RBP
  %4563 = sub i64 %4562, 136
  %4564 = load i64, i64* %PC
  %4565 = add i64 %4564, 8
  store i64 %4565, i64* %PC
  %4566 = inttoptr i64 %4563 to double*
  %4567 = load double, double* %4566
  %4568 = bitcast i8* %4561 to double*
  store double %4567, double* %4568, align 1, !tbaa !2452
  %4569 = getelementptr inbounds i8, i8* %4561, i64 8
  %4570 = bitcast i8* %4569 to double*
  store double 0.000000e+00, double* %4570, align 1, !tbaa !2452
  %4571 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4572 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4573 = bitcast %union.vec128_t* %XMM1 to i8*
  %4574 = load i64, i64* %PC
  %4575 = add i64 %4574, 4
  store i64 %4575, i64* %PC
  %4576 = bitcast i8* %4572 to double*
  %4577 = load double, double* %4576, align 1
  %4578 = getelementptr inbounds i8, i8* %4572, i64 8
  %4579 = bitcast i8* %4578 to i64*
  %4580 = load i64, i64* %4579, align 1
  %4581 = bitcast i8* %4573 to double*
  %4582 = load double, double* %4581, align 1
  %4583 = fdiv double %4577, %4582
  %4584 = bitcast i8* %4571 to double*
  store double %4583, double* %4584, align 1, !tbaa !2452
  %4585 = getelementptr inbounds i8, i8* %4571, i64 8
  %4586 = bitcast i8* %4585 to i64*
  store i64 %4580, i64* %4586, align 1, !tbaa !2452
  %4587 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4588 = load i64, i64* %RBP
  %4589 = sub i64 %4588, 104
  %4590 = load i64, i64* %PC
  %4591 = add i64 %4590, 5
  store i64 %4591, i64* %PC
  %4592 = inttoptr i64 %4589 to double*
  %4593 = load double, double* %4592
  %4594 = bitcast i8* %4587 to double*
  store double %4593, double* %4594, align 1, !tbaa !2452
  %4595 = getelementptr inbounds i8, i8* %4587, i64 8
  %4596 = bitcast i8* %4595 to double*
  store double 0.000000e+00, double* %4596, align 1, !tbaa !2452
  %4597 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4598 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4599 = bitcast %union.vec128_t* %XMM0 to i8*
  %4600 = load i64, i64* %PC
  %4601 = add i64 %4600, 4
  store i64 %4601, i64* %PC
  %4602 = bitcast i8* %4598 to double*
  %4603 = load double, double* %4602, align 1
  %4604 = getelementptr inbounds i8, i8* %4598, i64 8
  %4605 = bitcast i8* %4604 to i64*
  %4606 = load i64, i64* %4605, align 1
  %4607 = bitcast i8* %4599 to double*
  %4608 = load double, double* %4607, align 1
  %4609 = fmul double %4603, %4608
  %4610 = bitcast i8* %4597 to double*
  store double %4609, double* %4610, align 1, !tbaa !2452
  %4611 = getelementptr inbounds i8, i8* %4597, i64 8
  %4612 = bitcast i8* %4611 to i64*
  store i64 %4606, i64* %4612, align 1, !tbaa !2452
  %4613 = bitcast %union.vec128_t* %XMM1 to i8*
  %4614 = load i64, i64* %PC
  %4615 = add i64 %4614, 9
  store i64 %4615, i64* %PC
  %4616 = bitcast i8* %4613 to double*
  %4617 = load double, double* %4616, align 1
  store double %4617, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4618 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4619 = load i64, i64* %RBP
  %4620 = sub i64 %4619, 16
  %4621 = load i64, i64* %PC
  %4622 = add i64 %4621, 5
  store i64 %4622, i64* %PC
  %4623 = inttoptr i64 %4620 to double*
  %4624 = load double, double* %4623
  %4625 = bitcast i8* %4618 to double*
  store double %4624, double* %4625, align 1, !tbaa !2452
  %4626 = getelementptr inbounds i8, i8* %4618, i64 8
  %4627 = bitcast i8* %4626 to double*
  store double 0.000000e+00, double* %4627, align 1, !tbaa !2452
  %4628 = bitcast %union.vec128_t* %XMM0 to i8*
  %4629 = load i64, i64* %PC
  %4630 = add i64 %4629, 5
  store i64 %4630, i64* %PC
  %4631 = bitcast i8* %4628 to i64*
  %4632 = load i64, i64* %4631, align 1
  store i64 %4632, i64* %RAX, align 1, !tbaa !2428
  %4633 = load i64, i64* %RBP
  %4634 = sub i64 %4633, 112
  %4635 = load i64, i64* %PC
  %4636 = add i64 %4635, 4
  store i64 %4636, i64* %PC
  %4637 = inttoptr i64 %4634 to i64*
  %4638 = load i64, i64* %4637
  store i64 %4638, i64* %RCX, align 8, !tbaa !2428
  %4639 = load i64, i64* %RAX
  %4640 = load i64, i64* %RCX
  %4641 = load i64, i64* %PC
  %4642 = add i64 %4641, 3
  store i64 %4642, i64* %PC
  %4643 = xor i64 %4640, %4639
  store i64 %4643, i64* %RAX, align 8, !tbaa !2428
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4644, align 1, !tbaa !2432
  %4645 = trunc i64 %4643 to i32
  %4646 = and i32 %4645, 255
  %4647 = call i32 @llvm.ctpop.i32(i32 %4646) #17
  %4648 = trunc i32 %4647 to i8
  %4649 = and i8 %4648, 1
  %4650 = xor i8 %4649, 1
  %4651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4650, i8* %4651, align 1, !tbaa !2446
  %4652 = icmp eq i64 %4643, 0
  %4653 = zext i1 %4652 to i8
  %4654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4653, i8* %4654, align 1, !tbaa !2448
  %4655 = lshr i64 %4643, 63
  %4656 = trunc i64 %4655 to i8
  %4657 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4656, i8* %4657, align 1, !tbaa !2449
  %4658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %4658, align 1, !tbaa !2450
  %4659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4659, align 1, !tbaa !2447
  %4660 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4661 = load i64, i64* %RAX
  %4662 = load i64, i64* %PC
  %4663 = add i64 %4662, 5
  store i64 %4663, i64* %PC
  %4664 = bitcast i8* %4660 to i64*
  store i64 %4661, i64* %4664, align 1, !tbaa !2428
  %4665 = getelementptr inbounds i8, i8* %4660, i64 8
  %4666 = bitcast i8* %4665 to i64*
  store i64 0, i64* %4666, align 1, !tbaa !2428
  %4667 = bitcast %union.vec128_t* %XMM0 to i8*
  %4668 = load i64, i64* %PC
  %4669 = add i64 %4668, 9
  store i64 %4669, i64* %PC
  %4670 = bitcast i8* %4667 to double*
  %4671 = load double, double* %4670, align 1
  store double %4671, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  br label %block_401555

block_401226:                                     ; preds = %block_40120a, %block_40120f
  %MEMORY.6 = phi %struct.Memory* [ %MEMORY.7, %block_40120f ], [ %2787, %block_40120a ]
  %4672 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4673 = load i64, i64* %PC
  %4674 = add i64 %4673, 9
  store i64 %4674, i64* %PC
  %4675 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %4676 = bitcast i8* %4672 to double*
  store double %4675, double* %4676, align 1, !tbaa !2452
  %4677 = getelementptr inbounds i8, i8* %4672, i64 8
  %4678 = bitcast i8* %4677 to double*
  store double 0.000000e+00, double* %4678, align 1, !tbaa !2452
  %4679 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4680 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4681 = load i64, i64* %PC
  %4682 = add i64 %4681, 9
  store i64 %4682, i64* %PC
  %4683 = bitcast i8* %4680 to double*
  %4684 = load double, double* %4683, align 1
  %4685 = getelementptr inbounds i8, i8* %4680, i64 8
  %4686 = bitcast i8* %4685 to i64*
  %4687 = load i64, i64* %4686, align 1
  %4688 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4689 = fdiv double %4684, %4688
  %4690 = bitcast i8* %4679 to double*
  store double %4689, double* %4690, align 1, !tbaa !2452
  %4691 = getelementptr inbounds i8, i8* %4679, i64 8
  %4692 = bitcast i8* %4691 to i64*
  store i64 %4687, i64* %4692, align 1, !tbaa !2452
  %4693 = bitcast %union.vec128_t* %XMM0 to i8*
  %4694 = load i64, i64* %PC
  %4695 = add i64 %4694, 9
  store i64 %4695, i64* %PC
  %4696 = bitcast i8* %4693 to double*
  %4697 = load double, double* %4696, align 1
  store double %4697, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4698 = load i64, i64* %PC
  %4699 = add i64 %4698, 788
  %4700 = load i64, i64* %PC
  %4701 = add i64 %4700, 5
  store i64 %4701, i64* %PC
  %4702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4699, i64* %4702, align 8, !tbaa !2428
  br label %block_401555

block_40111a:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_40113b, label %block_401130

block_40120f:                                     ; preds = %block_401204, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %MEMORY.7 = phi %struct.Memory* [ %2787, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit ], [ %2787, %block_401204 ]
  %4703 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4704 = load i64, i64* %PC
  %4705 = add i64 %4704, 9
  store i64 %4705, i64* %PC
  %4706 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4707 = bitcast i8* %4703 to double*
  store double %4706, double* %4707, align 1, !tbaa !2452
  %4708 = getelementptr inbounds i8, i8* %4703, i64 8
  %4709 = bitcast i8* %4708 to double*
  store double 0.000000e+00, double* %4709, align 1, !tbaa !2452
  %4710 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4711 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4712 = load i64, i64* %RBP
  %4713 = sub i64 %4712, 40
  %4714 = load i64, i64* %PC
  %4715 = add i64 %4714, 5
  store i64 %4715, i64* %PC
  %4716 = bitcast i8* %4711 to double*
  %4717 = load double, double* %4716, align 1
  %4718 = getelementptr inbounds i8, i8* %4711, i64 8
  %4719 = bitcast i8* %4718 to i64*
  %4720 = load i64, i64* %4719, align 1
  %4721 = inttoptr i64 %4713 to double*
  %4722 = load double, double* %4721
  %4723 = fmul double %4717, %4722
  %4724 = bitcast i8* %4710 to double*
  store double %4723, double* %4724, align 1, !tbaa !2452
  %4725 = getelementptr inbounds i8, i8* %4710, i64 8
  %4726 = bitcast i8* %4725 to i64*
  store i64 %4720, i64* %4726, align 1, !tbaa !2452
  %4727 = bitcast %union.vec128_t* %XMM0 to i8*
  %4728 = load i64, i64* %PC
  %4729 = add i64 %4728, 9
  store i64 %4729, i64* %PC
  %4730 = bitcast i8* %4727 to double*
  %4731 = load double, double* %4730, align 1
  store double %4731, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  br label %block_401226

block_40129b:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit479
  br i1 %198, label %block_4012bc, label %block_4012b1

block_40120a:                                     ; preds = %block_401204
  %4732 = load i64, i64* %PC
  %4733 = add i64 %4732, 28
  %4734 = load i64, i64* %PC
  %4735 = add i64 %4734, 5
  store i64 %4735, i64* %PC
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4733, i64* %4736, align 8, !tbaa !2428
  br label %block_401226

block_401204:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit
  %4737 = load i64, i64* %PC
  %4738 = add i64 %4737, 11
  %4739 = load i64, i64* %PC
  %4740 = add i64 %4739, 6
  %4741 = load i64, i64* %PC
  %4742 = add i64 %4741, 6
  store i64 %4742, i64* %PC
  %4743 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4744 = load i8, i8* %4743, align 1, !tbaa !2446
  store i8 %4744, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4746 = icmp ne i8 %4744, 0
  %4747 = select i1 %4746, i64 %4738, i64 %4740
  store i64 %4747, i64* %4745, align 8, !tbaa !2428
  %4748 = load i8, i8* %BRANCH_TAKEN
  %4749 = icmp eq i8 %4748, 1
  br i1 %4749, label %block_40120f, label %block_40120a

block_401130:                                     ; preds = %block_40111a
  %4750 = load i64, i64* %PC
  %4751 = add i64 %4750, 11
  %4752 = load i64, i64* %PC
  %4753 = add i64 %4752, 6
  %4754 = load i64, i64* %PC
  %4755 = add i64 %4754, 6
  store i64 %4755, i64* %PC
  %4756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %4757 = load i8, i8* %4756, align 1, !tbaa !2446
  store i8 %4757, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4758 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4759 = icmp ne i8 %4757, 0
  %4760 = select i1 %4759, i64 %4751, i64 %4753
  store i64 %4760, i64* %4758, align 8, !tbaa !2428
  %4761 = load i8, i8* %BRANCH_TAKEN
  %4762 = icmp eq i8 %4761, 1
  br i1 %4762, label %block_40113b, label %block_401136

block_401300:                                     ; preds = %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480, %block_4012d2
  %MEMORY.8 = phi %struct.Memory* [ %2366, %_ZN12_GLOBAL__N_1L6COMISDI2VnI8vec128_tES3_EEP6MemoryS5_R5StateT_T0_.exit480 ], [ %2366, %block_4012d2 ]
  %4763 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4764 = load i64, i64* %PC
  %4765 = add i64 %4764, 9
  store i64 %4765, i64* %PC
  %4766 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %4767 = bitcast i8* %4763 to double*
  store double %4766, double* %4767, align 1, !tbaa !2452
  %4768 = getelementptr inbounds i8, i8* %4763, i64 8
  %4769 = bitcast i8* %4768 to double*
  store double 0.000000e+00, double* %4769, align 1, !tbaa !2452
  %4770 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4771 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4772 = load i64, i64* %PC
  %4773 = add i64 %4772, 9
  store i64 %4773, i64* %PC
  %4774 = bitcast i8* %4771 to double*
  %4775 = load double, double* %4774, align 1
  %4776 = getelementptr inbounds i8, i8* %4771, i64 8
  %4777 = bitcast i8* %4776 to i64*
  %4778 = load i64, i64* %4777, align 1
  %4779 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %4780 = fsub double %4775, %4779
  %4781 = bitcast i8* %4770 to double*
  store double %4780, double* %4781, align 1, !tbaa !2452
  %4782 = getelementptr inbounds i8, i8* %4770, i64 8
  %4783 = bitcast i8* %4782 to i64*
  store i64 %4778, i64* %4783, align 1, !tbaa !2452
  %4784 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4785 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4786 = load i64, i64* %PC
  %4787 = add i64 %4786, 9
  store i64 %4787, i64* %PC
  %4788 = bitcast i8* %4785 to double*
  %4789 = load double, double* %4788, align 1
  %4790 = getelementptr inbounds i8, i8* %4785, i64 8
  %4791 = bitcast i8* %4790 to i64*
  %4792 = load i64, i64* %4791, align 1
  %4793 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %4794 = fdiv double %4789, %4793
  %4795 = bitcast i8* %4784 to double*
  store double %4794, double* %4795, align 1, !tbaa !2452
  %4796 = getelementptr inbounds i8, i8* %4784, i64 8
  %4797 = bitcast i8* %4796 to i64*
  store i64 %4792, i64* %4797, align 1, !tbaa !2452
  %4798 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4799 = load i64, i64* %PC
  %4800 = add i64 %4799, 9
  store i64 %4800, i64* %PC
  %4801 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %4802 = bitcast i8* %4798 to double*
  store double %4801, double* %4802, align 1, !tbaa !2452
  %4803 = getelementptr inbounds i8, i8* %4798, i64 8
  %4804 = bitcast i8* %4803 to double*
  store double 0.000000e+00, double* %4804, align 1, !tbaa !2452
  %4805 = load i64, i64* %RBP
  %4806 = sub i64 %4805, 56
  %4807 = bitcast %union.vec128_t* %XMM0 to i8*
  %4808 = load i64, i64* %PC
  %4809 = add i64 %4808, 5
  store i64 %4809, i64* %PC
  %4810 = bitcast i8* %4807 to double*
  %4811 = load double, double* %4810, align 1
  %4812 = inttoptr i64 %4806 to double*
  store double %4811, double* %4812
  %4813 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4814 = bitcast %union.vec128_t* %XMM1 to i8*
  %4815 = load i64, i64* %PC
  %4816 = add i64 %4815, 3
  store i64 %4816, i64* %PC
  %4817 = bitcast i8* %4814 to <2 x i32>*
  %4818 = load <2 x i32>, <2 x i32>* %4817, align 1
  %4819 = getelementptr inbounds i8, i8* %4814, i64 8
  %4820 = bitcast i8* %4819 to <2 x i32>*
  %4821 = load <2 x i32>, <2 x i32>* %4820, align 1
  %4822 = extractelement <2 x i32> %4818, i32 0
  %4823 = bitcast i8* %4813 to i32*
  store i32 %4822, i32* %4823, align 1, !tbaa !2455
  %4824 = extractelement <2 x i32> %4818, i32 1
  %4825 = getelementptr inbounds i8, i8* %4813, i64 4
  %4826 = bitcast i8* %4825 to i32*
  store i32 %4824, i32* %4826, align 1, !tbaa !2455
  %4827 = extractelement <2 x i32> %4821, i32 0
  %4828 = getelementptr inbounds i8, i8* %4813, i64 8
  %4829 = bitcast i8* %4828 to i32*
  store i32 %4827, i32* %4829, align 1, !tbaa !2455
  %4830 = extractelement <2 x i32> %4821, i32 1
  %4831 = getelementptr inbounds i8, i8* %4813, i64 12
  %4832 = bitcast i8* %4831 to i32*
  store i32 %4830, i32* %4832, align 1, !tbaa !2455
  %4833 = load i64, i64* %PC
  %4834 = sub i64 %4833, 3356
  %4835 = load i64, i64* %PC
  %4836 = add i64 %4835, 5
  %4837 = load i64, i64* %PC
  %4838 = add i64 %4837, 5
  store i64 %4838, i64* %PC
  %4839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4840 = load i64, i64* %4839, align 8, !tbaa !2428
  %4841 = add i64 %4840, -8
  %4842 = inttoptr i64 %4841 to i64*
  store i64 %4836, i64* %4842
  store i64 %4841, i64* %4839, align 8, !tbaa !2428
  %4843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4834, i64* %4843, align 8, !tbaa !2428
  %4844 = load i64, i64* %PC
  %4845 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4845)
  %4846 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4846)
  %4847 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4847)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %4848 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4848)
  %4849 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4849)
  %4850 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4850)
  %4851 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4851)
  %4852 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4852)
  %4853 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4853)
  %4854 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4854)
  %4855 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4855)
  %4856 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4856)
  %4857 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4857)
  %4858 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4858)
  %4859 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4859)
  %4860 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4860)
  %4861 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4861)
  %4862 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4862)
  %4863 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4863)
  %4864 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4864)
  %4865 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4865)
  %4866 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4866)
  %4867 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4867)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2493
  store i64 %4844, i64* %curr_pc.i, align 8, !noalias !2493
  store %struct.Memory* %MEMORY.8, %struct.Memory** %memory.i, align 8, !noalias !2493
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2493
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2493
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2493
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2493
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2493
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2493
  store %struct.Memory* %MEMORY.8, %struct.Memory** %MEMORY.i, align 8, !noalias !2493
  %4868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4869 = getelementptr inbounds %struct.GPR, %struct.GPR* %4868, i32 0, i32 33
  %4870 = getelementptr inbounds %struct.Reg, %struct.Reg* %4869, i32 0, i32 0
  %PC.i = bitcast %union.anon* %4870 to i64*
  store i64 %4844, i64* %PC.i, align 8, !alias.scope !2497, !noalias !2498
  %4871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4872 = getelementptr inbounds %struct.GPR, %struct.GPR* %4871, i32 0, i32 1
  %4873 = getelementptr inbounds %struct.Reg, %struct.Reg* %4872, i32 0, i32 0
  %4874 = bitcast %union.anon* %4873 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4874, i32 0, i32 1
  %4875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4876 = getelementptr inbounds %struct.GPR, %struct.GPR* %4875, i32 0, i32 3
  %4877 = getelementptr inbounds %struct.Reg, %struct.Reg* %4876, i32 0, i32 0
  %4878 = bitcast %union.anon* %4877 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4878, i32 0, i32 1
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4880 = getelementptr inbounds %struct.GPR, %struct.GPR* %4879, i32 0, i32 5
  %4881 = getelementptr inbounds %struct.Reg, %struct.Reg* %4880, i32 0, i32 0
  %4882 = bitcast %union.anon* %4881 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4882, i32 0, i32 1
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4884 = getelementptr inbounds %struct.GPR, %struct.GPR* %4883, i32 0, i32 7
  %4885 = getelementptr inbounds %struct.Reg, %struct.Reg* %4884, i32 0, i32 0
  %4886 = bitcast %union.anon* %4885 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4886, i32 0, i32 1
  %4887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4888 = getelementptr inbounds %struct.GPR, %struct.GPR* %4887, i32 0, i32 1
  %4889 = getelementptr inbounds %struct.Reg, %struct.Reg* %4888, i32 0, i32 0
  %4890 = bitcast %union.anon* %4889 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4890, i32 0, i32 0
  %4891 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4892 = getelementptr inbounds %struct.GPR, %struct.GPR* %4891, i32 0, i32 3
  %4893 = getelementptr inbounds %struct.Reg, %struct.Reg* %4892, i32 0, i32 0
  %4894 = bitcast %union.anon* %4893 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4894, i32 0, i32 0
  %4895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4896 = getelementptr inbounds %struct.GPR, %struct.GPR* %4895, i32 0, i32 5
  %4897 = getelementptr inbounds %struct.Reg, %struct.Reg* %4896, i32 0, i32 0
  %4898 = bitcast %union.anon* %4897 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4898, i32 0, i32 0
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 7
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %4902 = bitcast %union.anon* %4901 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4902, i32 0, i32 0
  %4903 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4904 = getelementptr inbounds %struct.GPR, %struct.GPR* %4903, i32 0, i32 9
  %4905 = getelementptr inbounds %struct.Reg, %struct.Reg* %4904, i32 0, i32 0
  %4906 = bitcast %union.anon* %4905 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4906, i32 0, i32 0
  %4907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4908 = getelementptr inbounds %struct.GPR, %struct.GPR* %4907, i32 0, i32 11
  %4909 = getelementptr inbounds %struct.Reg, %struct.Reg* %4908, i32 0, i32 0
  %4910 = bitcast %union.anon* %4909 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4910, i32 0, i32 0
  %4911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4912 = getelementptr inbounds %struct.GPR, %struct.GPR* %4911, i32 0, i32 13
  %4913 = getelementptr inbounds %struct.Reg, %struct.Reg* %4912, i32 0, i32 0
  %4914 = bitcast %union.anon* %4913 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4914, i32 0, i32 0
  %4915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4916 = getelementptr inbounds %struct.GPR, %struct.GPR* %4915, i32 0, i32 15
  %4917 = getelementptr inbounds %struct.Reg, %struct.Reg* %4916, i32 0, i32 0
  %4918 = bitcast %union.anon* %4917 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4918, i32 0, i32 0
  %4919 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4920 = getelementptr inbounds %struct.GPR, %struct.GPR* %4919, i32 0, i32 17
  %4921 = getelementptr inbounds %struct.Reg, %struct.Reg* %4920, i32 0, i32 0
  %4922 = bitcast %union.anon* %4921 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4922, i32 0, i32 0
  %4923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4924 = getelementptr inbounds %struct.GPR, %struct.GPR* %4923, i32 0, i32 19
  %4925 = getelementptr inbounds %struct.Reg, %struct.Reg* %4924, i32 0, i32 0
  %4926 = bitcast %union.anon* %4925 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4926, i32 0, i32 0
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4928 = getelementptr inbounds %struct.GPR, %struct.GPR* %4927, i32 0, i32 21
  %4929 = getelementptr inbounds %struct.Reg, %struct.Reg* %4928, i32 0, i32 0
  %4930 = bitcast %union.anon* %4929 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4930, i32 0, i32 0
  %4931 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4932 = getelementptr inbounds %struct.GPR, %struct.GPR* %4931, i32 0, i32 23
  %4933 = getelementptr inbounds %struct.Reg, %struct.Reg* %4932, i32 0, i32 0
  %4934 = bitcast %union.anon* %4933 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4934, i32 0, i32 0
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4936 = getelementptr inbounds %struct.GPR, %struct.GPR* %4935, i32 0, i32 25
  %4937 = getelementptr inbounds %struct.Reg, %struct.Reg* %4936, i32 0, i32 0
  %4938 = bitcast %union.anon* %4937 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4938, i32 0, i32 0
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4940 = getelementptr inbounds %struct.GPR, %struct.GPR* %4939, i32 0, i32 27
  %4941 = getelementptr inbounds %struct.Reg, %struct.Reg* %4940, i32 0, i32 0
  %4942 = bitcast %union.anon* %4941 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4942, i32 0, i32 0
  %4943 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4944 = getelementptr inbounds %struct.GPR, %struct.GPR* %4943, i32 0, i32 29
  %4945 = getelementptr inbounds %struct.Reg, %struct.Reg* %4944, i32 0, i32 0
  %4946 = bitcast %union.anon* %4945 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4946, i32 0, i32 0
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 31
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %4950 = bitcast %union.anon* %4949 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %4950, i32 0, i32 0
  %4951 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4952 = getelementptr inbounds %struct.GPR, %struct.GPR* %4951, i32 0, i32 1
  %4953 = getelementptr inbounds %struct.Reg, %struct.Reg* %4952, i32 0, i32 0
  %AX.i = bitcast %union.anon* %4953 to i16*
  %4954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4955 = getelementptr inbounds %struct.GPR, %struct.GPR* %4954, i32 0, i32 3
  %4956 = getelementptr inbounds %struct.Reg, %struct.Reg* %4955, i32 0, i32 0
  %BX.i = bitcast %union.anon* %4956 to i16*
  %4957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4958 = getelementptr inbounds %struct.GPR, %struct.GPR* %4957, i32 0, i32 5
  %4959 = getelementptr inbounds %struct.Reg, %struct.Reg* %4958, i32 0, i32 0
  %CX.i = bitcast %union.anon* %4959 to i16*
  %4960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4961 = getelementptr inbounds %struct.GPR, %struct.GPR* %4960, i32 0, i32 7
  %4962 = getelementptr inbounds %struct.Reg, %struct.Reg* %4961, i32 0, i32 0
  %DX.i = bitcast %union.anon* %4962 to i16*
  %4963 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4964 = getelementptr inbounds %struct.GPR, %struct.GPR* %4963, i32 0, i32 9
  %4965 = getelementptr inbounds %struct.Reg, %struct.Reg* %4964, i32 0, i32 0
  %SI.i = bitcast %union.anon* %4965 to i16*
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4967 = getelementptr inbounds %struct.GPR, %struct.GPR* %4966, i32 0, i32 11
  %4968 = getelementptr inbounds %struct.Reg, %struct.Reg* %4967, i32 0, i32 0
  %DI.i = bitcast %union.anon* %4968 to i16*
  %4969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4970 = getelementptr inbounds %struct.GPR, %struct.GPR* %4969, i32 0, i32 13
  %4971 = getelementptr inbounds %struct.Reg, %struct.Reg* %4970, i32 0, i32 0
  %SP.i = bitcast %union.anon* %4971 to i16*
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4973 = getelementptr inbounds %struct.GPR, %struct.GPR* %4972, i32 0, i32 15
  %4974 = getelementptr inbounds %struct.Reg, %struct.Reg* %4973, i32 0, i32 0
  %BP.i = bitcast %union.anon* %4974 to i16*
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4976 = getelementptr inbounds %struct.GPR, %struct.GPR* %4975, i32 0, i32 17
  %4977 = getelementptr inbounds %struct.Reg, %struct.Reg* %4976, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %4977 to i16*
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4979 = getelementptr inbounds %struct.GPR, %struct.GPR* %4978, i32 0, i32 19
  %4980 = getelementptr inbounds %struct.Reg, %struct.Reg* %4979, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %4980 to i16*
  %4981 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4982 = getelementptr inbounds %struct.GPR, %struct.GPR* %4981, i32 0, i32 21
  %4983 = getelementptr inbounds %struct.Reg, %struct.Reg* %4982, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %4983 to i16*
  %4984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4985 = getelementptr inbounds %struct.GPR, %struct.GPR* %4984, i32 0, i32 23
  %4986 = getelementptr inbounds %struct.Reg, %struct.Reg* %4985, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %4986 to i16*
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 25
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %4989 to i16*
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 27
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %4992 to i16*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 29
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %4995 to i16*
  %4996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4997 = getelementptr inbounds %struct.GPR, %struct.GPR* %4996, i32 0, i32 31
  %4998 = getelementptr inbounds %struct.Reg, %struct.Reg* %4997, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %4998 to i16*
  %4999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5000 = getelementptr inbounds %struct.GPR, %struct.GPR* %4999, i32 0, i32 33
  %5001 = getelementptr inbounds %struct.Reg, %struct.Reg* %5000, i32 0, i32 0
  %IP.i = bitcast %union.anon* %5001 to i16*
  %5002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5003 = getelementptr inbounds %struct.GPR, %struct.GPR* %5002, i32 0, i32 1
  %5004 = getelementptr inbounds %struct.Reg, %struct.Reg* %5003, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %5004 to i32*
  %5005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5006 = getelementptr inbounds %struct.GPR, %struct.GPR* %5005, i32 0, i32 3
  %5007 = getelementptr inbounds %struct.Reg, %struct.Reg* %5006, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %5007 to i32*
  %5008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5009 = getelementptr inbounds %struct.GPR, %struct.GPR* %5008, i32 0, i32 5
  %5010 = getelementptr inbounds %struct.Reg, %struct.Reg* %5009, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %5010 to i32*
  %5011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5012 = getelementptr inbounds %struct.GPR, %struct.GPR* %5011, i32 0, i32 7
  %5013 = getelementptr inbounds %struct.Reg, %struct.Reg* %5012, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %5013 to i32*
  %5014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5015 = getelementptr inbounds %struct.GPR, %struct.GPR* %5014, i32 0, i32 9
  %5016 = getelementptr inbounds %struct.Reg, %struct.Reg* %5015, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %5016 to i32*
  %5017 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5018 = getelementptr inbounds %struct.GPR, %struct.GPR* %5017, i32 0, i32 11
  %5019 = getelementptr inbounds %struct.Reg, %struct.Reg* %5018, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %5019 to i32*
  %5020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5021 = getelementptr inbounds %struct.GPR, %struct.GPR* %5020, i32 0, i32 13
  %5022 = getelementptr inbounds %struct.Reg, %struct.Reg* %5021, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %5022 to i32*
  %5023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5024 = getelementptr inbounds %struct.GPR, %struct.GPR* %5023, i32 0, i32 15
  %5025 = getelementptr inbounds %struct.Reg, %struct.Reg* %5024, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %5025 to i32*
  %5026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5027 = getelementptr inbounds %struct.GPR, %struct.GPR* %5026, i32 0, i32 33
  %5028 = getelementptr inbounds %struct.Reg, %struct.Reg* %5027, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %5028 to i32*
  %5029 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5030 = getelementptr inbounds %struct.GPR, %struct.GPR* %5029, i32 0, i32 17
  %5031 = getelementptr inbounds %struct.Reg, %struct.Reg* %5030, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %5031 to i32*
  %5032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5033 = getelementptr inbounds %struct.GPR, %struct.GPR* %5032, i32 0, i32 19
  %5034 = getelementptr inbounds %struct.Reg, %struct.Reg* %5033, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %5034 to i32*
  %5035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5036 = getelementptr inbounds %struct.GPR, %struct.GPR* %5035, i32 0, i32 21
  %5037 = getelementptr inbounds %struct.Reg, %struct.Reg* %5036, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %5037 to i32*
  %5038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5039 = getelementptr inbounds %struct.GPR, %struct.GPR* %5038, i32 0, i32 23
  %5040 = getelementptr inbounds %struct.Reg, %struct.Reg* %5039, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %5040 to i32*
  %5041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5042 = getelementptr inbounds %struct.GPR, %struct.GPR* %5041, i32 0, i32 25
  %5043 = getelementptr inbounds %struct.Reg, %struct.Reg* %5042, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %5043 to i32*
  %5044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5045 = getelementptr inbounds %struct.GPR, %struct.GPR* %5044, i32 0, i32 27
  %5046 = getelementptr inbounds %struct.Reg, %struct.Reg* %5045, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %5046 to i32*
  %5047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5048 = getelementptr inbounds %struct.GPR, %struct.GPR* %5047, i32 0, i32 29
  %5049 = getelementptr inbounds %struct.Reg, %struct.Reg* %5048, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %5049 to i32*
  %5050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5051 = getelementptr inbounds %struct.GPR, %struct.GPR* %5050, i32 0, i32 31
  %5052 = getelementptr inbounds %struct.Reg, %struct.Reg* %5051, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %5052 to i32*
  %5053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5054 = getelementptr inbounds %struct.GPR, %struct.GPR* %5053, i32 0, i32 1
  %5055 = getelementptr inbounds %struct.Reg, %struct.Reg* %5054, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %5055 to i64*
  %5056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5057 = getelementptr inbounds %struct.GPR, %struct.GPR* %5056, i32 0, i32 3
  %5058 = getelementptr inbounds %struct.Reg, %struct.Reg* %5057, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %5058 to i64*
  %5059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5060 = getelementptr inbounds %struct.GPR, %struct.GPR* %5059, i32 0, i32 5
  %5061 = getelementptr inbounds %struct.Reg, %struct.Reg* %5060, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %5061 to i64*
  %5062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5063 = getelementptr inbounds %struct.GPR, %struct.GPR* %5062, i32 0, i32 7
  %5064 = getelementptr inbounds %struct.Reg, %struct.Reg* %5063, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %5064 to i64*
  %5065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5066 = getelementptr inbounds %struct.GPR, %struct.GPR* %5065, i32 0, i32 9
  %5067 = getelementptr inbounds %struct.Reg, %struct.Reg* %5066, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %5067 to i64*
  %5068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5069 = getelementptr inbounds %struct.GPR, %struct.GPR* %5068, i32 0, i32 11
  %5070 = getelementptr inbounds %struct.Reg, %struct.Reg* %5069, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %5070 to i64*
  %5071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5072 = getelementptr inbounds %struct.GPR, %struct.GPR* %5071, i32 0, i32 13
  %5073 = getelementptr inbounds %struct.Reg, %struct.Reg* %5072, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %5073 to i64*
  %5074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5075 = getelementptr inbounds %struct.GPR, %struct.GPR* %5074, i32 0, i32 15
  %5076 = getelementptr inbounds %struct.Reg, %struct.Reg* %5075, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %5076 to i64*
  %5077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5078 = getelementptr inbounds %struct.GPR, %struct.GPR* %5077, i32 0, i32 17
  %5079 = getelementptr inbounds %struct.Reg, %struct.Reg* %5078, i32 0, i32 0
  %R8.i = bitcast %union.anon* %5079 to i64*
  %5080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5081 = getelementptr inbounds %struct.GPR, %struct.GPR* %5080, i32 0, i32 19
  %5082 = getelementptr inbounds %struct.Reg, %struct.Reg* %5081, i32 0, i32 0
  %R9.i = bitcast %union.anon* %5082 to i64*
  %5083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5084 = getelementptr inbounds %struct.GPR, %struct.GPR* %5083, i32 0, i32 21
  %5085 = getelementptr inbounds %struct.Reg, %struct.Reg* %5084, i32 0, i32 0
  %R10.i = bitcast %union.anon* %5085 to i64*
  %5086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5087 = getelementptr inbounds %struct.GPR, %struct.GPR* %5086, i32 0, i32 23
  %5088 = getelementptr inbounds %struct.Reg, %struct.Reg* %5087, i32 0, i32 0
  %R11.i = bitcast %union.anon* %5088 to i64*
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5090 = getelementptr inbounds %struct.GPR, %struct.GPR* %5089, i32 0, i32 25
  %5091 = getelementptr inbounds %struct.Reg, %struct.Reg* %5090, i32 0, i32 0
  %R12.i = bitcast %union.anon* %5091 to i64*
  %5092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5093 = getelementptr inbounds %struct.GPR, %struct.GPR* %5092, i32 0, i32 27
  %5094 = getelementptr inbounds %struct.Reg, %struct.Reg* %5093, i32 0, i32 0
  %R13.i = bitcast %union.anon* %5094 to i64*
  %5095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5096 = getelementptr inbounds %struct.GPR, %struct.GPR* %5095, i32 0, i32 29
  %5097 = getelementptr inbounds %struct.Reg, %struct.Reg* %5096, i32 0, i32 0
  %R14.i = bitcast %union.anon* %5097 to i64*
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 31
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %R15.i = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 33
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %5103 to i64*
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5105 = getelementptr inbounds %struct.Segments, %struct.Segments* %5104, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %5105 to i16*
  %5106 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5107 = getelementptr inbounds %struct.Segments, %struct.Segments* %5106, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %5107 to i16*
  %5108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5109 = getelementptr inbounds %struct.Segments, %struct.Segments* %5108, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %5109 to i16*
  %5110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5111 = getelementptr inbounds %struct.Segments, %struct.Segments* %5110, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %5111 to i16*
  %5112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5113 = getelementptr inbounds %struct.Segments, %struct.Segments* %5112, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %5113 to i16*
  %5114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %5115 = getelementptr inbounds %struct.Segments, %struct.Segments* %5114, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %5115 to i16*
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5117 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5116, i32 0, i32 5
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %5118 to i64*
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %5120 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %5119, i32 0, i32 7
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %5121 to i64*
  %5122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5123 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5122, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %5123 to %"class.std::bitset"*
  %5124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5125 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5124, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %5125 to %"class.std::bitset"*
  %5126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5127 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5126, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %5127 to %"class.std::bitset"*
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5129 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5128, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %5129 to %"class.std::bitset"*
  %5130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5131 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5130, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %5131 to %"class.std::bitset"*
  %5132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5133 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5132, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %5133 to %"class.std::bitset"*
  %5134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5135 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5134, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %5135 to %"class.std::bitset"*
  %5136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5137 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5136, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %5137 to %"class.std::bitset"*
  %5138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5139 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5138, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %5139 to %"class.std::bitset"*
  %5140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5141 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5140, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %5141 to %"class.std::bitset"*
  %5142 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5143 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5142, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %5143 to %"class.std::bitset"*
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5145 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5144, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %5145 to %"class.std::bitset"*
  %5146 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5147 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5146, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %5147 to %"class.std::bitset"*
  %5148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5149 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5148, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %5149 to %"class.std::bitset"*
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5151 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5150, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %5151 to %"class.std::bitset"*
  %5152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5153 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5152, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %5153 to %"class.std::bitset"*
  %5154 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5155 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5154, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %5155 to %union.vec128_t*
  %5156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5157 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5156, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %5157 to %union.vec128_t*
  %5158 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5159 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5158, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %5159 to %union.vec128_t*
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5161 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5160, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %5161 to %union.vec128_t*
  %5162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5163 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5162, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %5163 to %union.vec128_t*
  %5164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5165 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5164, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %5165 to %union.vec128_t*
  %5166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5167 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5166, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %5167 to %union.vec128_t*
  %5168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5169 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5168, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %5169 to %union.vec128_t*
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5171 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5170, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %5171 to %union.vec128_t*
  %5172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5173 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5172, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %5173 to %union.vec128_t*
  %5174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5175 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5174, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %5175 to %union.vec128_t*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5177 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5176, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %5177 to %union.vec128_t*
  %5178 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5179 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5178, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %5179 to %union.vec128_t*
  %5180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5181 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5180, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %5181 to %union.vec128_t*
  %5182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5183 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5182, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %5183 to %union.vec128_t*
  %5184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %5185 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %5184, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %5185 to %union.vec128_t*
  %5186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5187 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5186, i32 0, i32 0
  %5188 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5187, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5188, i32 0, i32 1
  %5189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5190 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5189, i32 0, i32 0
  %5191 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5190, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5191, i32 0, i32 1
  %5192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5193 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5192, i32 0, i32 0
  %5194 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5193, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5194, i32 0, i32 1
  %5195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5196 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5195, i32 0, i32 0
  %5197 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5196, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5197, i32 0, i32 1
  %5198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5199 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5198, i32 0, i32 0
  %5200 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5199, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5200, i32 0, i32 1
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5202 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5201, i32 0, i32 0
  %5203 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5202, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5203, i32 0, i32 1
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5205 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5204, i32 0, i32 0
  %5206 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5205, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5206, i32 0, i32 1
  %5207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %5208 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %5207, i32 0, i32 0
  %5209 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %5208, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %5209, i32 0, i32 1
  %5210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5211 = getelementptr inbounds %struct.MMX, %struct.MMX* %5210, i32 0, i32 0
  %5212 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5211, i64 0, i64 0
  %5213 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5212, i32 0, i32 1
  %5214 = bitcast %union.vec64_t* %5213 to %struct.uint64v1_t*
  %5215 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5214, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %5215, i64 0, i64 0
  %5216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5217 = getelementptr inbounds %struct.MMX, %struct.MMX* %5216, i32 0, i32 0
  %5218 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5217, i64 0, i64 1
  %5219 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5218, i32 0, i32 1
  %5220 = bitcast %union.vec64_t* %5219 to %struct.uint64v1_t*
  %5221 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5220, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %5221, i64 0, i64 0
  %5222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5223 = getelementptr inbounds %struct.MMX, %struct.MMX* %5222, i32 0, i32 0
  %5224 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5223, i64 0, i64 2
  %5225 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5224, i32 0, i32 1
  %5226 = bitcast %union.vec64_t* %5225 to %struct.uint64v1_t*
  %5227 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5226, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %5227, i64 0, i64 0
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5229 = getelementptr inbounds %struct.MMX, %struct.MMX* %5228, i32 0, i32 0
  %5230 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5229, i64 0, i64 3
  %5231 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5230, i32 0, i32 1
  %5232 = bitcast %union.vec64_t* %5231 to %struct.uint64v1_t*
  %5233 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5232, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %5233, i64 0, i64 0
  %5234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5235 = getelementptr inbounds %struct.MMX, %struct.MMX* %5234, i32 0, i32 0
  %5236 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5235, i64 0, i64 4
  %5237 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5236, i32 0, i32 1
  %5238 = bitcast %union.vec64_t* %5237 to %struct.uint64v1_t*
  %5239 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5238, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %5239, i64 0, i64 0
  %5240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5241 = getelementptr inbounds %struct.MMX, %struct.MMX* %5240, i32 0, i32 0
  %5242 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5241, i64 0, i64 5
  %5243 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5242, i32 0, i32 1
  %5244 = bitcast %union.vec64_t* %5243 to %struct.uint64v1_t*
  %5245 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5244, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %5245, i64 0, i64 0
  %5246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5247 = getelementptr inbounds %struct.MMX, %struct.MMX* %5246, i32 0, i32 0
  %5248 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5247, i64 0, i64 6
  %5249 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5248, i32 0, i32 1
  %5250 = bitcast %union.vec64_t* %5249 to %struct.uint64v1_t*
  %5251 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5250, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %5251, i64 0, i64 0
  %5252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %5253 = getelementptr inbounds %struct.MMX, %struct.MMX* %5252, i32 0, i32 0
  %5254 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %5253, i64 0, i64 7
  %5255 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %5254, i32 0, i32 1
  %5256 = bitcast %union.vec64_t* %5255 to %struct.uint64v1_t*
  %5257 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %5256, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %5257, i64 0, i64 0
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5258, i32 0, i32 5
  %5259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5259, i32 0, i32 1
  %5260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5260, i32 0, i32 11
  %5261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5261, i32 0, i32 13
  %5262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5262, i32 0, i32 3
  %5263 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5263, i32 0, i32 9
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %5264, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2493
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2493
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2493
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2493
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2493
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2493
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2493
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2493
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2493
  %5265 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %5266 = load double, double* %5265, !alias.scope !2497, !noalias !2498
  %5267 = load i64, i64* %RSP.i, !alias.scope !2497, !noalias !2498
  %5268 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2493
  %5269 = inttoptr i64 %5267 to i64*
  %5270 = load i64, i64* %5269
  store i64 %5270, i64* %PC.i, !alias.scope !2497, !noalias !2498
  %5271 = add i64 %5267, 8
  store i64 %5271, i64* %RSP.i, !alias.scope !2497, !noalias !2498
  %5272 = call double @sin(double %5266)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2497, !noalias !2498
  %5273 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %5272, double* %5273, !alias.scope !2497, !noalias !2498
  %5274 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2493
  %5275 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5275)
  %5276 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5276)
  %5277 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5277)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %5278 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5278)
  %5279 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5279)
  %5280 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5280)
  %5281 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5281)
  %5282 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5282)
  %5283 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5283)
  %5284 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5284)
  %5285 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5285)
  %5286 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5286)
  %5287 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5287)
  %5288 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5288)
  %5289 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5289)
  %5290 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5290)
  %5291 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5291)
  %5292 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5292)
  %5293 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5293)
  %5294 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5294)
  %5295 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5295)
  %5296 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5296)
  %5297 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %5297)
  %5298 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5299 = load i64, i64* %RBP
  %5300 = sub i64 %5299, 56
  %5301 = load i64, i64* %PC
  %5302 = add i64 %5301, 5
  store i64 %5302, i64* %PC
  %5303 = inttoptr i64 %5300 to double*
  %5304 = load double, double* %5303
  %5305 = bitcast i8* %5298 to double*
  store double %5304, double* %5305, align 1, !tbaa !2452
  %5306 = getelementptr inbounds i8, i8* %5298, i64 8
  %5307 = bitcast i8* %5306 to double*
  store double 0.000000e+00, double* %5307, align 1, !tbaa !2452
  %5308 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5309 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %5310 = bitcast %union.vec128_t* %XMM0 to i8*
  %5311 = load i64, i64* %PC
  %5312 = add i64 %5311, 4
  store i64 %5312, i64* %PC
  %5313 = bitcast i8* %5309 to double*
  %5314 = load double, double* %5313, align 1
  %5315 = getelementptr inbounds i8, i8* %5309, i64 8
  %5316 = bitcast i8* %5315 to i64*
  %5317 = load i64, i64* %5316, align 1
  %5318 = bitcast i8* %5310 to double*
  %5319 = load double, double* %5318, align 1
  %5320 = fmul double %5314, %5319
  %5321 = bitcast i8* %5308 to double*
  store double %5320, double* %5321, align 1, !tbaa !2452
  %5322 = getelementptr inbounds i8, i8* %5308, i64 8
  %5323 = bitcast i8* %5322 to i64*
  store i64 %5317, i64* %5323, align 1, !tbaa !2452
  %5324 = load i64, i64* %RBP
  %5325 = sub i64 %5324, 24
  %5326 = bitcast %union.vec128_t* %XMM1 to i8*
  %5327 = load i64, i64* %PC
  %5328 = add i64 %5327, 5
  store i64 %5328, i64* %PC
  %5329 = bitcast i8* %5326 to double*
  %5330 = load double, double* %5329, align 1
  %5331 = inttoptr i64 %5325 to double*
  store double %5330, double* %5331
  br label %block_40133f

block_401157:                                     ; preds = %block_401151
  %5332 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5333 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5334 = bitcast %union.vec128_t* %XMM0 to i8*
  %5335 = load i64, i64* %PC
  %5336 = add i64 %5335, 3
  store i64 %5336, i64* %PC
  %5337 = bitcast i8* %5333 to i64*
  %5338 = load i64, i64* %5337, align 1
  %5339 = getelementptr inbounds i8, i8* %5333, i64 8
  %5340 = bitcast i8* %5339 to i64*
  %5341 = load i64, i64* %5340, align 1
  %5342 = bitcast i8* %5334 to i64*
  %5343 = load i64, i64* %5342, align 1
  %5344 = getelementptr inbounds i8, i8* %5334, i64 8
  %5345 = bitcast i8* %5344 to i64*
  %5346 = load i64, i64* %5345, align 1
  %5347 = xor i64 %5343, %5338
  %5348 = xor i64 %5346, %5341
  %5349 = trunc i64 %5347 to i32
  %5350 = lshr i64 %5347, 32
  %5351 = trunc i64 %5350 to i32
  %5352 = bitcast i8* %5332 to i32*
  store i32 %5349, i32* %5352, align 1, !tbaa !2454
  %5353 = getelementptr inbounds i8, i8* %5332, i64 4
  %5354 = bitcast i8* %5353 to i32*
  store i32 %5351, i32* %5354, align 1, !tbaa !2454
  %5355 = trunc i64 %5348 to i32
  %5356 = getelementptr inbounds i8, i8* %5332, i64 8
  %5357 = bitcast i8* %5356 to i32*
  store i32 %5355, i32* %5357, align 1, !tbaa !2454
  %5358 = lshr i64 %5348, 32
  %5359 = trunc i64 %5358 to i32
  %5360 = getelementptr inbounds i8, i8* %5332, i64 12
  %5361 = bitcast i8* %5360 to i32*
  store i32 %5359, i32* %5361, align 1, !tbaa !2454
  %5362 = bitcast %union.vec128_t* %XMM0 to i8*
  %5363 = load i64, i64* %PC
  %5364 = add i64 %5363, 9
  store i64 %5364, i64* %PC
  %5365 = bitcast i8* %5362 to double*
  %5366 = load double, double* %5365, align 1
  store double %5366, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %5367 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5368 = load i64, i64* %PC
  %5369 = add i64 %5368, 9
  store i64 %5369, i64* %PC
  %5370 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1264) to double*)
  %5371 = bitcast i8* %5367 to double*
  store double %5370, double* %5371, align 1, !tbaa !2452
  %5372 = getelementptr inbounds i8, i8* %5367, i64 8
  %5373 = bitcast i8* %5372 to double*
  store double 0.000000e+00, double* %5373, align 1, !tbaa !2452
  %5374 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5375 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %5376 = load i64, i64* %PC
  %5377 = add i64 %5376, 9
  store i64 %5377, i64* %PC
  %5378 = bitcast i8* %5375 to double*
  %5379 = load double, double* %5378, align 1
  %5380 = getelementptr inbounds i8, i8* %5375, i64 8
  %5381 = bitcast i8* %5380 to i64*
  %5382 = load i64, i64* %5381, align 1
  %5383 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 1280) to double*)
  %5384 = fdiv double %5379, %5383
  %5385 = bitcast i8* %5374 to double*
  store double %5384, double* %5385, align 1, !tbaa !2452
  %5386 = getelementptr inbounds i8, i8* %5374, i64 8
  %5387 = bitcast i8* %5386 to i64*
  store i64 %5382, i64* %5387, align 1, !tbaa !2452
  %5388 = load i64, i64* %RBP
  %5389 = sub i64 %5388, 24
  %5390 = bitcast %union.vec128_t* %XMM0 to i8*
  %5391 = load i64, i64* %PC
  %5392 = add i64 %5391, 5
  store i64 %5392, i64* %PC
  %5393 = bitcast i8* %5390 to double*
  %5394 = load double, double* %5393, align 1
  %5395 = inttoptr i64 %5389 to double*
  store double %5394, double* %5395
  %5396 = load i64, i64* %PC
  %5397 = add i64 %5396, 46
  %5398 = load i64, i64* %PC
  %5399 = add i64 %5398, 5
  store i64 %5399, i64* %PC
  %5400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5397, i64* %5400, align 8, !tbaa !2428
  br label %block_4011a8
}

; Function Attrs: noinline
define %struct.Memory* @sub_400730_main(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400730:
  %state.i1 = alloca %struct.State*, align 8
  %curr_pc.i2 = alloca i64, align 8
  %memory.i3 = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i4 = alloca i8, align 1
  %SS_BASE.i5 = alloca i64, align 8
  %ES_BASE.i6 = alloca i64, align 8
  %DS_BASE.i7 = alloca i64, align 8
  %CS_BASE.i8 = alloca i64, align 8
  %STATE.i9 = alloca %struct.State*, align 8
  %MEMORY.i10 = alloca %struct.Memory*, align 8
  %_DR0.i11 = alloca i64*, align 8
  %_DR1.i12 = alloca i64*, align 8
  %_DR2.i13 = alloca i64*, align 8
  %_DR3.i14 = alloca i64*, align 8
  %_DR4.i15 = alloca i64*, align 8
  %_DR5.i16 = alloca i64*, align 8
  %_DR6.i17 = alloca i64*, align 8
  %_DR7.i18 = alloca i64*, align 8
  %CR0.i19 = alloca i64*, align 8
  %CR1.i20 = alloca i64*, align 8
  %CR2.i21 = alloca i64*, align 8
  %CR3.i22 = alloca i64*, align 8
  %CR4.i23 = alloca i64*, align 8
  %CR8.i24 = alloca i64*, align 8
  %state.i = alloca %struct.State*, align 8
  %curr_pc.i = alloca i64, align 8
  %memory.i = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN.i = alloca i8, align 1
  %SS_BASE.i = alloca i64, align 8
  %ES_BASE.i = alloca i64, align 8
  %DS_BASE.i = alloca i64, align 8
  %CS_BASE.i = alloca i64, align 8
  %STATE.i = alloca %struct.State*, align 8
  %MEMORY.i = alloca %struct.Memory*, align 8
  %_DR0.i = alloca i64*, align 8
  %_DR1.i = alloca i64*, align 8
  %_DR2.i = alloca i64*, align 8
  %_DR3.i = alloca i64*, align 8
  %_DR4.i = alloca i64*, align 8
  %_DR5.i = alloca i64*, align 8
  %_DR6.i = alloca i64*, align 8
  %_DR7.i = alloca i64*, align 8
  %CR0.i = alloca i64*, align 8
  %CR1.i = alloca i64*, align 8
  %CR2.i = alloca i64*, align 8
  %CR3.i = alloca i64*, align 8
  %CR4.i = alloca i64*, align 8
  %CR8.i = alloca i64*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %AX = bitcast %union.anon* %12 to i16*
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %14 = getelementptr inbounds %struct.GPR, %struct.GPR* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.Reg, %struct.Reg* %14, i32 0, i32 0
  %EAX = bitcast %union.anon* %15 to i32*
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %17 = getelementptr inbounds %struct.GPR, %struct.GPR* %16, i32 0, i32 5
  %18 = getelementptr inbounds %struct.Reg, %struct.Reg* %17, i32 0, i32 0
  %ECX = bitcast %union.anon* %18 to i32*
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %EDX = bitcast %union.anon* %21 to i32*
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %23 = getelementptr inbounds %struct.GPR, %struct.GPR* %22, i32 0, i32 9
  %24 = getelementptr inbounds %struct.Reg, %struct.Reg* %23, i32 0, i32 0
  %ESI = bitcast %union.anon* %24 to i32*
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %26 = getelementptr inbounds %struct.GPR, %struct.GPR* %25, i32 0, i32 11
  %27 = getelementptr inbounds %struct.Reg, %struct.Reg* %26, i32 0, i32 0
  %EDI = bitcast %union.anon* %27 to i32*
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %29 = getelementptr inbounds %struct.GPR, %struct.GPR* %28, i32 0, i32 19
  %30 = getelementptr inbounds %struct.Reg, %struct.Reg* %29, i32 0, i32 0
  %R9D = bitcast %union.anon* %30 to i32*
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 21
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %R10D = bitcast %union.anon* %33 to i32*
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %35 = getelementptr inbounds %struct.GPR, %struct.GPR* %34, i32 0, i32 1
  %36 = getelementptr inbounds %struct.Reg, %struct.Reg* %35, i32 0, i32 0
  %RAX = bitcast %union.anon* %36 to i64*
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %38 = getelementptr inbounds %struct.GPR, %struct.GPR* %37, i32 0, i32 5
  %39 = getelementptr inbounds %struct.Reg, %struct.Reg* %38, i32 0, i32 0
  %RCX = bitcast %union.anon* %39 to i64*
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %41 = getelementptr inbounds %struct.GPR, %struct.GPR* %40, i32 0, i32 7
  %42 = getelementptr inbounds %struct.Reg, %struct.Reg* %41, i32 0, i32 0
  %RDX = bitcast %union.anon* %42 to i64*
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 9
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %RSI = bitcast %union.anon* %45 to i64*
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %47 = getelementptr inbounds %struct.GPR, %struct.GPR* %46, i32 0, i32 11
  %48 = getelementptr inbounds %struct.Reg, %struct.Reg* %47, i32 0, i32 0
  %RDI = bitcast %union.anon* %48 to i64*
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.GPR, %struct.GPR* %49, i32 0, i32 13
  %51 = getelementptr inbounds %struct.Reg, %struct.Reg* %50, i32 0, i32 0
  %RSP = bitcast %union.anon* %51 to i64*
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %53 = getelementptr inbounds %struct.GPR, %struct.GPR* %52, i32 0, i32 15
  %54 = getelementptr inbounds %struct.Reg, %struct.Reg* %53, i32 0, i32 0
  %RBP = bitcast %union.anon* %54 to i64*
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %R8 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %59 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %58, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %59 to %"class.std::bitset"*
  %60 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %61 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %60, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %61 to %"class.std::bitset"*
  %62 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %63 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %62, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %63 to %"class.std::bitset"*
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %65 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %64, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %65 to %"class.std::bitset"*
  %66 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %67 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %66, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %67 to %"class.std::bitset"*
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %69 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %68, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %69 to %"class.std::bitset"*
  %70 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %71 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %70, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %71 to %"class.std::bitset"*
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %73 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %72, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %73 to %"class.std::bitset"*
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %75 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %74, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %75 to %"class.std::bitset"*
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %77 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %76, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %77 to %union.vec128_t*
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %79 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %78, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %79 to %union.vec128_t*
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %81 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %80, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %81 to %union.vec128_t*
  %82 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %83 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %82, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %83 to %union.vec128_t*
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %85 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %84, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %85 to %union.vec128_t*
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %87 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %86, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %87 to %union.vec128_t*
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %89 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %88, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %89 to %union.vec128_t*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %91 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %90, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %91 to %union.vec128_t*
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %93 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %92, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %93 to %union.vec128_t*
  %94 = load i64, i64* %RBP
  %95 = load i64, i64* %PC
  %96 = add i64 %95, 1
  store i64 %96, i64* %PC
  %97 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %98 = load i64, i64* %97, align 8, !tbaa !2428
  %99 = add i64 %98, -8
  %100 = inttoptr i64 %99 to i64*
  store i64 %94, i64* %100
  store i64 %99, i64* %97, align 8, !tbaa !2428
  %101 = load i64, i64* %RSP
  %102 = load i64, i64* %PC
  %103 = add i64 %102, 3
  store i64 %103, i64* %PC
  store i64 %101, i64* %RBP, align 8, !tbaa !2428
  %104 = load i64, i64* %RSP
  %105 = load i64, i64* %PC
  %106 = add i64 %105, 7
  store i64 %106, i64* %PC
  %107 = sub i64 %104, 192
  store i64 %107, i64* %RSP, align 8, !tbaa !2428
  %108 = icmp ult i64 %104, 192
  %109 = zext i1 %108 to i8
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %109, i8* %110, align 1, !tbaa !2432
  %111 = trunc i64 %107 to i32
  %112 = and i32 %111, 255
  %113 = call i32 @llvm.ctpop.i32(i32 %112) #17
  %114 = trunc i32 %113 to i8
  %115 = and i8 %114, 1
  %116 = xor i8 %115, 1
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %116, i8* %117, align 1, !tbaa !2446
  %118 = xor i64 192, %104
  %119 = xor i64 %118, %107
  %120 = lshr i64 %119, 4
  %121 = trunc i64 %120 to i8
  %122 = and i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %122, i8* %123, align 1, !tbaa !2447
  %124 = icmp eq i64 %107, 0
  %125 = zext i1 %124 to i8
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %125, i8* %126, align 1, !tbaa !2448
  %127 = lshr i64 %107, 63
  %128 = trunc i64 %127 to i8
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %128, i8* %129, align 1, !tbaa !2449
  %130 = lshr i64 %104, 63
  %131 = xor i64 %127, %130
  %132 = add nuw nsw i64 %131, %130
  %133 = icmp eq i64 %132, 2
  %134 = zext i1 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %134, i8* %135, align 1, !tbaa !2450
  %136 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %137 = load i64, i64* %PC
  %138 = add i64 %137, 8
  store i64 %138, i64* %PC
  %139 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 8) to double*)
  %140 = bitcast i8* %136 to double*
  store double %139, double* %140, align 1, !tbaa !2452
  %141 = getelementptr inbounds i8, i8* %136, i64 8
  %142 = bitcast i8* %141 to double*
  store double 0.000000e+00, double* %142, align 1, !tbaa !2452
  %143 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %144 = load i64, i64* %PC
  %145 = add i64 %144, 8
  store i64 %145, i64* %PC
  %146 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 16) to double*)
  %147 = bitcast i8* %143 to double*
  store double %146, double* %147, align 1, !tbaa !2452
  %148 = getelementptr inbounds i8, i8* %143, i64 8
  %149 = bitcast i8* %148 to double*
  store double 0.000000e+00, double* %149, align 1, !tbaa !2452
  %150 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %151 = load i64, i64* %PC
  %152 = add i64 %151, 8
  store i64 %152, i64* %PC
  %153 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 24) to double*)
  %154 = bitcast i8* %150 to double*
  store double %153, double* %154, align 1, !tbaa !2452
  %155 = getelementptr inbounds i8, i8* %150, i64 8
  %156 = bitcast i8* %155 to double*
  store double 0.000000e+00, double* %156, align 1, !tbaa !2452
  %157 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %158 = load i64, i64* %PC
  %159 = add i64 %158, 8
  store i64 %159, i64* %PC
  %160 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 32) to double*)
  %161 = bitcast i8* %157 to double*
  store double %160, double* %161, align 1, !tbaa !2452
  %162 = getelementptr inbounds i8, i8* %157, i64 8
  %163 = bitcast i8* %162 to double*
  store double 0.000000e+00, double* %163, align 1, !tbaa !2452
  %164 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %165 = load i64, i64* %PC
  %166 = add i64 %165, 8
  store i64 %166, i64* %PC
  %167 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 40) to double*)
  %168 = bitcast i8* %164 to double*
  store double %167, double* %168, align 1, !tbaa !2452
  %169 = getelementptr inbounds i8, i8* %164, i64 8
  %170 = bitcast i8* %169 to double*
  store double 0.000000e+00, double* %170, align 1, !tbaa !2452
  %171 = bitcast %"class.std::bitset"* %YMM5 to i8*
  %172 = load i64, i64* %PC
  %173 = add i64 %172, 8
  store i64 %173, i64* %PC
  %174 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 48) to double*)
  %175 = bitcast i8* %171 to double*
  store double %174, double* %175, align 1, !tbaa !2452
  %176 = getelementptr inbounds i8, i8* %171, i64 8
  %177 = bitcast i8* %176 to double*
  store double 0.000000e+00, double* %177, align 1, !tbaa !2452
  %178 = bitcast %"class.std::bitset"* %YMM6 to i8*
  %179 = load i64, i64* %PC
  %180 = add i64 %179, 8
  store i64 %180, i64* %PC
  %181 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 56) to double*)
  %182 = bitcast i8* %178 to double*
  store double %181, double* %182, align 1, !tbaa !2452
  %183 = getelementptr inbounds i8, i8* %178, i64 8
  %184 = bitcast i8* %183 to double*
  store double 0.000000e+00, double* %184, align 1, !tbaa !2452
  %185 = bitcast %"class.std::bitset"* %YMM7 to i8*
  %186 = load i64, i64* %PC
  %187 = add i64 %186, 8
  store i64 %187, i64* %PC
  %188 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 64) to double*)
  %189 = bitcast i8* %185 to double*
  store double %188, double* %189, align 1, !tbaa !2452
  %190 = getelementptr inbounds i8, i8* %185, i64 8
  %191 = bitcast i8* %190 to double*
  store double 0.000000e+00, double* %191, align 1, !tbaa !2452
  %192 = bitcast %"class.std::bitset"* %YMM8 to i8*
  %193 = load i64, i64* %PC
  %194 = add i64 %193, 9
  store i64 %194, i64* %PC
  %195 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 72) to double*)
  %196 = bitcast i8* %192 to double*
  store double %195, double* %196, align 1, !tbaa !2452
  %197 = getelementptr inbounds i8, i8* %192, i64 8
  %198 = bitcast i8* %197 to double*
  store double 0.000000e+00, double* %198, align 1, !tbaa !2452
  %199 = load i64, i64* %RBP
  %200 = sub i64 %199, 4
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 7
  store i64 %202, i64* %PC
  %203 = inttoptr i64 %200 to i32*
  store i32 0, i32* %203
  %204 = load i64, i64* %RBP
  %205 = sub i64 %204, 8
  %206 = load i32, i32* %EDI
  %207 = zext i32 %206 to i64
  %208 = load i64, i64* %PC
  %209 = add i64 %208, 3
  store i64 %209, i64* %PC
  %210 = inttoptr i64 %205 to i32*
  store i32 %206, i32* %210
  %211 = load i64, i64* %RBP
  %212 = sub i64 %211, 16
  %213 = load i64, i64* %RSI
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 4
  store i64 %215, i64* %PC
  %216 = inttoptr i64 %212 to i64*
  store i64 %213, i64* %216
  %217 = bitcast %union.vec128_t* %XMM8 to i8*
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 10
  store i64 %219, i64* %PC
  %220 = bitcast i8* %217 to double*
  %221 = load double, double* %220, align 1
  store double %221, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 24) to double*)
  %222 = bitcast %union.vec128_t* %XMM7 to i8*
  %223 = load i64, i64* %PC
  %224 = add i64 %223, 9
  store i64 %224, i64* %PC
  %225 = bitcast i8* %222 to double*
  %226 = load double, double* %225, align 1
  store double %226, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 32) to double*)
  %227 = bitcast %union.vec128_t* %XMM6 to i8*
  %228 = load i64, i64* %PC
  %229 = add i64 %228, 9
  store i64 %229, i64* %PC
  %230 = bitcast i8* %227 to double*
  %231 = load double, double* %230, align 1
  store double %231, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 40) to double*)
  %232 = bitcast %union.vec128_t* %XMM5 to i8*
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 9
  store i64 %234, i64* %PC
  %235 = bitcast i8* %232 to double*
  %236 = load double, double* %235, align 1
  store double %236, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 48) to double*)
  %237 = bitcast %union.vec128_t* %XMM4 to i8*
  %238 = load i64, i64* %PC
  %239 = add i64 %238, 9
  store i64 %239, i64* %PC
  %240 = bitcast i8* %237 to double*
  %241 = load double, double* %240, align 1
  store double %241, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 56) to double*)
  %242 = bitcast %union.vec128_t* %XMM3 to i8*
  %243 = load i64, i64* %PC
  %244 = add i64 %243, 9
  store i64 %244, i64* %PC
  %245 = bitcast i8* %242 to double*
  %246 = load double, double* %245, align 1
  store double %246, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 64) to double*)
  %247 = bitcast %union.vec128_t* %XMM2 to i8*
  %248 = load i64, i64* %PC
  %249 = add i64 %248, 9
  store i64 %249, i64* %PC
  %250 = bitcast i8* %247 to double*
  %251 = load double, double* %250, align 1
  store double %251, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 72) to double*)
  %252 = bitcast %union.vec128_t* %XMM1 to i8*
  %253 = load i64, i64* %PC
  %254 = add i64 %253, 9
  store i64 %254, i64* %PC
  %255 = bitcast i8* %252 to double*
  %256 = load double, double* %255, align 1
  store double %256, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 80) to double*)
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 11
  store i64 %258, i64* %PC
  store i32 1000000, i32* bitcast (%niter_type* @niter to i32*)
  %259 = bitcast %union.vec128_t* %XMM0 to i8*
  %260 = load i64, i64* %PC
  %261 = add i64 %260, 9
  store i64 %261, i64* %PC
  %262 = bitcast i8* %259 to double*
  %263 = load double, double* %262, align 1
  store double %263, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %264 = load i64, i64* %PC
  %265 = add i64 %264, 10
  store i64 %265, i64* %PC
  store i16 4, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %266 = load i64, i64* %RBP
  %267 = sub i64 %266, 20
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 7
  store i64 %269, i64* %PC
  %270 = inttoptr i64 %267 to i32*
  store i32 0, i32* %270
  br label %block_400800

block_400878:                                     ; preds = %block_40081a
  %271 = add i64 %3774, 5
  %272 = load i64, i64* %PC
  %273 = add i64 %272, 5
  store i64 %273, i64* %PC
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %271, i64* %274, align 8, !tbaa !2428
  %275 = load i64, i64* %RBP
  %276 = sub i64 %275, 20
  %277 = load i64, i64* %PC
  %278 = add i64 %277, 3
  store i64 %278, i64* %PC
  %279 = inttoptr i64 %276 to i32*
  %280 = load i32, i32* %279
  %281 = zext i32 %280 to i64
  store i64 %281, i64* %RAX, align 8, !tbaa !2428
  %282 = load i64, i64* %RAX
  %283 = load i64, i64* %PC
  %284 = add i64 %283, 3
  store i64 %284, i64* %PC
  %285 = trunc i64 %282 to i32
  %286 = add i32 1, %285
  %287 = zext i32 %286 to i64
  store i64 %287, i64* %RAX, align 8, !tbaa !2428
  %288 = icmp ult i32 %286, %285
  %289 = icmp ult i32 %286, 1
  %290 = or i1 %288, %289
  %291 = zext i1 %290 to i8
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %291, i8* %292, align 1, !tbaa !2432
  %293 = and i32 %286, 255
  %294 = call i32 @llvm.ctpop.i32(i32 %293) #17
  %295 = trunc i32 %294 to i8
  %296 = and i8 %295, 1
  %297 = xor i8 %296, 1
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %297, i8* %298, align 1, !tbaa !2446
  %299 = xor i64 1, %282
  %300 = trunc i64 %299 to i32
  %301 = xor i32 %300, %286
  %302 = lshr i32 %301, 4
  %303 = trunc i32 %302 to i8
  %304 = and i8 %303, 1
  %305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %304, i8* %305, align 1, !tbaa !2447
  %306 = icmp eq i32 %286, 0
  %307 = zext i1 %306 to i8
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %307, i8* %308, align 1, !tbaa !2448
  %309 = lshr i32 %286, 31
  %310 = trunc i32 %309 to i8
  %311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %310, i8* %311, align 1, !tbaa !2449
  %312 = lshr i32 %285, 31
  %313 = xor i32 %309, %312
  %314 = add nuw nsw i32 %313, %309
  %315 = icmp eq i32 %314, 2
  %316 = zext i1 %315 to i8
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %316, i8* %317, align 1, !tbaa !2450
  %318 = load i64, i64* %RBP
  %319 = sub i64 %318, 20
  %320 = load i32, i32* %EAX
  %321 = zext i32 %320 to i64
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 3
  store i64 %323, i64* %PC
  %324 = inttoptr i64 %319 to i32*
  store i32 %320, i32* %324
  %325 = load i64, i64* %PC
  %326 = sub i64 %325, 134
  %327 = load i64, i64* %PC
  %328 = add i64 %327, 5
  store i64 %328, i64* %PC
  %329 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %326, i64* %329, align 8, !tbaa !2428
  br label %block_400800

block_400ed5:                                     ; preds = %block_400d29, %block_400ebe
  %MEMORY.0 = phi %struct.Memory* [ %3996, %block_400d29 ], [ %2230, %block_400ebe ]
  %330 = load i64, i64* %PC
  %331 = add i64 %330, 5
  %332 = load i64, i64* %PC
  %333 = add i64 %332, 5
  store i64 %333, i64* %PC
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %331, i64* %334, align 8, !tbaa !2428
  %335 = load i64, i64* %RBP
  %336 = sub i64 %335, 20
  %337 = load i64, i64* %PC
  %338 = add i64 %337, 3
  store i64 %338, i64* %PC
  %339 = inttoptr i64 %336 to i32*
  %340 = load i32, i32* %339
  %341 = zext i32 %340 to i64
  store i64 %341, i64* %RAX, align 8, !tbaa !2428
  %342 = load i64, i64* %RAX
  %343 = load i64, i64* %PC
  %344 = add i64 %343, 3
  store i64 %344, i64* %PC
  %345 = trunc i64 %342 to i32
  %346 = add i32 1, %345
  %347 = zext i32 %346 to i64
  store i64 %347, i64* %RAX, align 8, !tbaa !2428
  %348 = icmp ult i32 %346, %345
  %349 = icmp ult i32 %346, 1
  %350 = or i1 %348, %349
  %351 = zext i1 %350 to i8
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %351, i8* %352, align 1, !tbaa !2432
  %353 = and i32 %346, 255
  %354 = call i32 @llvm.ctpop.i32(i32 %353) #17
  %355 = trunc i32 %354 to i8
  %356 = and i8 %355, 1
  %357 = xor i8 %356, 1
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %357, i8* %358, align 1, !tbaa !2446
  %359 = xor i64 1, %342
  %360 = trunc i64 %359 to i32
  %361 = xor i32 %360, %346
  %362 = lshr i32 %361, 4
  %363 = trunc i32 %362 to i8
  %364 = and i8 %363, 1
  %365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %364, i8* %365, align 1, !tbaa !2447
  %366 = icmp eq i32 %346, 0
  %367 = zext i1 %366 to i8
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %367, i8* %368, align 1, !tbaa !2448
  %369 = lshr i32 %346, 31
  %370 = trunc i32 %369 to i8
  %371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %370, i8* %371, align 1, !tbaa !2449
  %372 = lshr i32 %345, 31
  %373 = xor i32 %369, %372
  %374 = add nuw nsw i32 %373, %369
  %375 = icmp eq i32 %374, 2
  %376 = zext i1 %375 to i8
  %377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %376, i8* %377, align 1, !tbaa !2450
  %378 = load i64, i64* %RBP
  %379 = sub i64 %378, 20
  %380 = load i32, i32* %EAX
  %381 = zext i32 %380 to i64
  %382 = load i64, i64* %PC
  %383 = add i64 %382, 3
  store i64 %383, i64* %PC
  %384 = inttoptr i64 %379 to i32*
  store i32 %380, i32* %384
  %385 = load i64, i64* %PC
  %386 = sub i64 %385, 452
  %387 = load i64, i64* %PC
  %388 = add i64 %387, 5
  store i64 %388, i64* %PC
  %389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %386, i64* %389, align 8, !tbaa !2428
  br label %block_400d1f

block_4009ce:                                     ; preds = %block_400937
  store i64 3, i64* %RDI, align 8, !tbaa !2428
  %390 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %391 = load i64, i64* %PC
  %392 = add i64 %391, 8
  store i64 %392, i64* %PC
  %393 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 112) to double*)
  %394 = bitcast i8* %390 to double*
  store double %393, double* %394, align 1, !tbaa !2452
  %395 = getelementptr inbounds i8, i8* %390, i64 8
  %396 = bitcast i8* %395 to double*
  store double 0.000000e+00, double* %396, align 1, !tbaa !2452
  %397 = load i64, i64* %PC
  %398 = add i64 %397, 10
  store i64 %398, i64* %PC
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %399 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %400 = load i64, i64* %PC
  %401 = add i64 %400, 9
  store i64 %401, i64* %PC
  %402 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %403 = bitcast i8* %399 to double*
  store double %402, double* %403, align 1, !tbaa !2452
  %404 = getelementptr inbounds i8, i8* %399, i64 8
  %405 = bitcast i8* %404 to double*
  store double 0.000000e+00, double* %405, align 1, !tbaa !2452
  %406 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %407 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %408 = bitcast %union.vec128_t* %XMM0 to i8*
  %409 = load i64, i64* %PC
  %410 = add i64 %409, 4
  store i64 %410, i64* %PC
  %411 = bitcast i8* %407 to double*
  %412 = load double, double* %411, align 1
  %413 = getelementptr inbounds i8, i8* %407, i64 8
  %414 = bitcast i8* %413 to i64*
  %415 = load i64, i64* %414, align 1
  %416 = bitcast i8* %408 to double*
  %417 = load double, double* %416, align 1
  %418 = fdiv double %412, %417
  %419 = bitcast i8* %406 to double*
  store double %418, double* %419, align 1, !tbaa !2452
  %420 = getelementptr inbounds i8, i8* %406, i64 8
  %421 = bitcast i8* %420 to i64*
  store i64 %415, i64* %421, align 1, !tbaa !2452
  %422 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %423 = bitcast %union.vec128_t* %XMM1 to i8*
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = bitcast i8* %423 to <2 x i32>*
  %427 = load <2 x i32>, <2 x i32>* %426, align 1
  %428 = getelementptr inbounds i8, i8* %423, i64 8
  %429 = bitcast i8* %428 to <2 x i32>*
  %430 = load <2 x i32>, <2 x i32>* %429, align 1
  %431 = extractelement <2 x i32> %427, i32 0
  %432 = bitcast i8* %422 to i32*
  store i32 %431, i32* %432, align 1, !tbaa !2455
  %433 = extractelement <2 x i32> %427, i32 1
  %434 = getelementptr inbounds i8, i8* %422, i64 4
  %435 = bitcast i8* %434 to i32*
  store i32 %433, i32* %435, align 1, !tbaa !2455
  %436 = extractelement <2 x i32> %430, i32 0
  %437 = getelementptr inbounds i8, i8* %422, i64 8
  %438 = bitcast i8* %437 to i32*
  store i32 %436, i32* %438, align 1, !tbaa !2455
  %439 = extractelement <2 x i32> %430, i32 1
  %440 = getelementptr inbounds i8, i8* %422, i64 12
  %441 = bitcast i8* %440 to i32*
  store i32 %439, i32* %441, align 1, !tbaa !2455
  %442 = load i64, i64* %PC
  %443 = add i64 %442, 1387
  %444 = load i64, i64* %PC
  %445 = add i64 %444, 5
  %446 = load i64, i64* %PC
  %447 = add i64 %446, 5
  store i64 %447, i64* %PC
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %449 = load i64, i64* %448, align 8, !tbaa !2428
  %450 = add i64 %449, -8
  %451 = inttoptr i64 %450 to i64*
  store i64 %445, i64* %451
  store i64 %450, i64* %448, align 8, !tbaa !2428
  %452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %443, i64* %452, align 8, !tbaa !2428
  %453 = load i64, i64* %PC
  %454 = call %struct.Memory* @sub_400f60_trace_line(%struct.State* %0, i64 %453, %struct.Memory* %MEMORY.2)
  %455 = load i64, i64* %PC
  %456 = add i64 %455, 5
  store i64 %456, i64* %PC
  store i64 6, i64* %RDI, align 8, !tbaa !2428
  %457 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %458 = load i64, i64* %PC
  %459 = add i64 %458, 8
  store i64 %459, i64* %PC
  %460 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 112) to double*)
  %461 = bitcast i8* %457 to double*
  store double %460, double* %461, align 1, !tbaa !2452
  %462 = getelementptr inbounds i8, i8* %457, i64 8
  %463 = bitcast i8* %462 to double*
  store double 0.000000e+00, double* %463, align 1, !tbaa !2452
  %464 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %465 = load i64, i64* %PC
  %466 = add i64 %465, 9
  store i64 %466, i64* %PC
  %467 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %468 = bitcast i8* %464 to double*
  store double %467, double* %468, align 1, !tbaa !2452
  %469 = getelementptr inbounds i8, i8* %464, i64 8
  %470 = bitcast i8* %469 to double*
  store double 0.000000e+00, double* %470, align 1, !tbaa !2452
  %471 = load i64, i64* %RBP
  %472 = sub i64 %471, 48
  %473 = bitcast %union.vec128_t* %XMM1 to i8*
  %474 = load i64, i64* %PC
  %475 = add i64 %474, 5
  store i64 %475, i64* %PC
  %476 = bitcast i8* %473 to double*
  %477 = load double, double* %476, align 1
  %478 = inttoptr i64 %472 to double*
  store double %477, double* %478
  %479 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %480 = load i64, i64* %PC
  %481 = add i64 %480, 9
  store i64 %481, i64* %PC
  %482 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %483 = bitcast i8* %479 to double*
  store double %482, double* %483, align 1, !tbaa !2452
  %484 = getelementptr inbounds i8, i8* %479, i64 8
  %485 = bitcast i8* %484 to double*
  store double 0.000000e+00, double* %485, align 1, !tbaa !2452
  %486 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %487 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %488 = bitcast %union.vec128_t* %XMM0 to i8*
  %489 = load i64, i64* %PC
  %490 = add i64 %489, 4
  store i64 %490, i64* %PC
  %491 = bitcast i8* %487 to double*
  %492 = load double, double* %491, align 1
  %493 = getelementptr inbounds i8, i8* %487, i64 8
  %494 = bitcast i8* %493 to i64*
  %495 = load i64, i64* %494, align 1
  %496 = bitcast i8* %488 to double*
  %497 = load double, double* %496, align 1
  %498 = fdiv double %492, %497
  %499 = bitcast i8* %486 to double*
  store double %498, double* %499, align 1, !tbaa !2452
  %500 = getelementptr inbounds i8, i8* %486, i64 8
  %501 = bitcast i8* %500 to i64*
  store i64 %495, i64* %501, align 1, !tbaa !2452
  %502 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %503 = bitcast %union.vec128_t* %XMM1 to i8*
  %504 = load i64, i64* %PC
  %505 = add i64 %504, 3
  store i64 %505, i64* %PC
  %506 = bitcast i8* %503 to <2 x i32>*
  %507 = load <2 x i32>, <2 x i32>* %506, align 1
  %508 = getelementptr inbounds i8, i8* %503, i64 8
  %509 = bitcast i8* %508 to <2 x i32>*
  %510 = load <2 x i32>, <2 x i32>* %509, align 1
  %511 = extractelement <2 x i32> %507, i32 0
  %512 = bitcast i8* %502 to i32*
  store i32 %511, i32* %512, align 1, !tbaa !2455
  %513 = extractelement <2 x i32> %507, i32 1
  %514 = getelementptr inbounds i8, i8* %502, i64 4
  %515 = bitcast i8* %514 to i32*
  store i32 %513, i32* %515, align 1, !tbaa !2455
  %516 = extractelement <2 x i32> %510, i32 0
  %517 = getelementptr inbounds i8, i8* %502, i64 8
  %518 = bitcast i8* %517 to i32*
  store i32 %516, i32* %518, align 1, !tbaa !2455
  %519 = extractelement <2 x i32> %510, i32 1
  %520 = getelementptr inbounds i8, i8* %502, i64 12
  %521 = bitcast i8* %520 to i32*
  store i32 %519, i32* %521, align 1, !tbaa !2455
  %522 = load i64, i64* %RBP
  %523 = sub i64 %522, 76
  %524 = load i32, i32* %EAX
  %525 = zext i32 %524 to i64
  %526 = load i64, i64* %PC
  %527 = add i64 %526, 3
  store i64 %527, i64* %PC
  %528 = inttoptr i64 %523 to i32*
  store i32 %524, i32* %528
  %529 = load i64, i64* %PC
  %530 = add i64 %529, 1336
  %531 = load i64, i64* %PC
  %532 = add i64 %531, 5
  %533 = load i64, i64* %PC
  %534 = add i64 %533, 5
  store i64 %534, i64* %PC
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %536 = load i64, i64* %535, align 8, !tbaa !2428
  %537 = add i64 %536, -8
  %538 = inttoptr i64 %537 to i64*
  store i64 %532, i64* %538
  store i64 %537, i64* %535, align 8, !tbaa !2428
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %530, i64* %539, align 8, !tbaa !2428
  %540 = load i64, i64* %PC
  %541 = call %struct.Memory* @sub_400f60_trace_line(%struct.State* %0, i64 %540, %struct.Memory* %454)
  %542 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %543 = load i64, i64* %PC
  %544 = add i64 %543, 8
  store i64 %544, i64* %PC
  %545 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 88) to double*)
  %546 = bitcast i8* %542 to double*
  store double %545, double* %546, align 1, !tbaa !2452
  %547 = getelementptr inbounds i8, i8* %542, i64 8
  %548 = bitcast i8* %547 to double*
  store double 0.000000e+00, double* %548, align 1, !tbaa !2452
  %549 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %550 = load i64, i64* %PC
  %551 = add i64 %550, 8
  store i64 %551, i64* %PC
  %552 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 96) to double*)
  %553 = bitcast i8* %549 to double*
  store double %552, double* %553, align 1, !tbaa !2452
  %554 = getelementptr inbounds i8, i8* %549, i64 8
  %555 = bitcast i8* %554 to double*
  store double 0.000000e+00, double* %555, align 1, !tbaa !2452
  %556 = bitcast %"class.std::bitset"* %YMM2 to i8*
  %557 = load i64, i64* %PC
  %558 = add i64 %557, 8
  store i64 %558, i64* %PC
  %559 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 104) to double*)
  %560 = bitcast i8* %556 to double*
  store double %559, double* %560, align 1, !tbaa !2452
  %561 = getelementptr inbounds i8, i8* %556, i64 8
  %562 = bitcast i8* %561 to double*
  store double 0.000000e+00, double* %562, align 1, !tbaa !2452
  %563 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %564 = load i64, i64* %PC
  %565 = add i64 %564, 9
  store i64 %565, i64* %PC
  %566 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %567 = bitcast i8* %563 to double*
  store double %566, double* %567, align 1, !tbaa !2452
  %568 = getelementptr inbounds i8, i8* %563, i64 8
  %569 = bitcast i8* %568 to double*
  store double 0.000000e+00, double* %569, align 1, !tbaa !2452
  %570 = load i64, i64* %RBP
  %571 = sub i64 %570, 40
  %572 = bitcast %union.vec128_t* %XMM3 to i8*
  %573 = load i64, i64* %PC
  %574 = add i64 %573, 5
  store i64 %574, i64* %PC
  %575 = bitcast i8* %572 to double*
  %576 = load double, double* %575, align 1
  %577 = inttoptr i64 %571 to double*
  store double %576, double* %577
  %578 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %579 = load i64, i64* %PC
  %580 = add i64 %579, 9
  store i64 %580, i64* %PC
  %581 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %582 = bitcast i8* %578 to double*
  store double %581, double* %582, align 1, !tbaa !2452
  %583 = getelementptr inbounds i8, i8* %578, i64 8
  %584 = bitcast i8* %583 to double*
  store double 0.000000e+00, double* %584, align 1, !tbaa !2452
  %585 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %586 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %587 = load i64, i64* %PC
  %588 = add i64 %587, 9
  store i64 %588, i64* %PC
  %589 = bitcast i8* %586 to double*
  %590 = load double, double* %589, align 1
  %591 = getelementptr inbounds i8, i8* %586, i64 8
  %592 = bitcast i8* %591 to i64*
  %593 = load i64, i64* %592, align 1
  %594 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %595 = fsub double %590, %594
  %596 = bitcast i8* %585 to double*
  store double %595, double* %596, align 1, !tbaa !2452
  %597 = getelementptr inbounds i8, i8* %585, i64 8
  %598 = bitcast i8* %597 to i64*
  store i64 %593, i64* %598, align 1, !tbaa !2452
  %599 = bitcast %union.vec128_t* %XMM3 to i8*
  %600 = load i64, i64* %PC
  %601 = add i64 %600, 9
  store i64 %601, i64* %PC
  %602 = bitcast i8* %599 to double*
  %603 = load double, double* %602, align 1
  store double %603, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %604 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %605 = load i64, i64* %PC
  %606 = add i64 %605, 9
  store i64 %606, i64* %PC
  %607 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %608 = bitcast i8* %604 to double*
  store double %607, double* %608, align 1, !tbaa !2452
  %609 = getelementptr inbounds i8, i8* %604, i64 8
  %610 = bitcast i8* %609 to double*
  store double 0.000000e+00, double* %610, align 1, !tbaa !2452
  %611 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %612 = bitcast %"class.std::bitset"* %YMM3 to i8*
  %613 = load i64, i64* %PC
  %614 = add i64 %613, 9
  store i64 %614, i64* %PC
  %615 = bitcast i8* %612 to double*
  %616 = load double, double* %615, align 1
  %617 = getelementptr inbounds i8, i8* %612, i64 8
  %618 = bitcast i8* %617 to i64*
  %619 = load i64, i64* %618, align 1
  %620 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %621 = fmul double %616, %620
  %622 = bitcast i8* %611 to double*
  store double %621, double* %622, align 1, !tbaa !2452
  %623 = getelementptr inbounds i8, i8* %611, i64 8
  %624 = bitcast i8* %623 to i64*
  store i64 %619, i64* %624, align 1, !tbaa !2452
  %625 = bitcast %"class.std::bitset"* %YMM4 to i8*
  %626 = load i64, i64* %PC
  %627 = add i64 %626, 9
  store i64 %627, i64* %PC
  %628 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %629 = bitcast i8* %625 to double*
  store double %628, double* %629, align 1, !tbaa !2452
  %630 = getelementptr inbounds i8, i8* %625, i64 8
  %631 = bitcast i8* %630 to double*
  store double 0.000000e+00, double* %631, align 1, !tbaa !2452
  %632 = load i64, i64* %RBP
  %633 = sub i64 %632, 88
  %634 = bitcast %union.vec128_t* %XMM0 to i8*
  %635 = load i64, i64* %PC
  %636 = add i64 %635, 5
  store i64 %636, i64* %PC
  %637 = bitcast i8* %634 to double*
  %638 = load double, double* %637, align 1
  %639 = inttoptr i64 %633 to double*
  store double %638, double* %639
  %640 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %641 = bitcast %union.vec128_t* %XMM4 to i8*
  %642 = load i64, i64* %PC
  %643 = add i64 %642, 3
  store i64 %643, i64* %PC
  %644 = bitcast i8* %641 to <2 x i32>*
  %645 = load <2 x i32>, <2 x i32>* %644, align 1
  %646 = getelementptr inbounds i8, i8* %641, i64 8
  %647 = bitcast i8* %646 to <2 x i32>*
  %648 = load <2 x i32>, <2 x i32>* %647, align 1
  %649 = extractelement <2 x i32> %645, i32 0
  %650 = bitcast i8* %640 to i32*
  store i32 %649, i32* %650, align 1, !tbaa !2455
  %651 = extractelement <2 x i32> %645, i32 1
  %652 = getelementptr inbounds i8, i8* %640, i64 4
  %653 = bitcast i8* %652 to i32*
  store i32 %651, i32* %653, align 1, !tbaa !2455
  %654 = extractelement <2 x i32> %648, i32 0
  %655 = getelementptr inbounds i8, i8* %640, i64 8
  %656 = bitcast i8* %655 to i32*
  store i32 %654, i32* %656, align 1, !tbaa !2455
  %657 = extractelement <2 x i32> %648, i32 1
  %658 = getelementptr inbounds i8, i8* %640, i64 12
  %659 = bitcast i8* %658 to i32*
  store i32 %657, i32* %659, align 1, !tbaa !2455
  %660 = load i64, i64* %RBP
  %661 = sub i64 %660, 92
  %662 = load i32, i32* %EAX
  %663 = zext i32 %662 to i64
  %664 = load i64, i64* %PC
  %665 = add i64 %664, 3
  store i64 %665, i64* %PC
  %666 = inttoptr i64 %661 to i32*
  store i32 %662, i32* %666
  %667 = load i64, i64* %RBP
  %668 = sub i64 %667, 104
  %669 = bitcast %union.vec128_t* %XMM3 to i8*
  %670 = load i64, i64* %PC
  %671 = add i64 %670, 5
  store i64 %671, i64* %PC
  %672 = bitcast i8* %669 to double*
  %673 = load double, double* %672, align 1
  %674 = inttoptr i64 %668 to double*
  store double %673, double* %674
  %675 = load i64, i64* %RBP
  %676 = sub i64 %675, 112
  %677 = bitcast %union.vec128_t* %XMM1 to i8*
  %678 = load i64, i64* %PC
  %679 = add i64 %678, 5
  store i64 %679, i64* %PC
  %680 = bitcast i8* %677 to double*
  %681 = load double, double* %680, align 1
  %682 = inttoptr i64 %676 to double*
  store double %681, double* %682
  %683 = load i64, i64* %RBP
  %684 = sub i64 %683, 120
  %685 = bitcast %union.vec128_t* %XMM2 to i8*
  %686 = load i64, i64* %PC
  %687 = add i64 %686, 5
  store i64 %687, i64* %PC
  %688 = bitcast i8* %685 to double*
  %689 = load double, double* %688, align 1
  %690 = inttoptr i64 %684 to double*
  store double %689, double* %690
  %691 = load i64, i64* %PC
  %692 = sub i64 %691, 1171
  %693 = load i64, i64* %PC
  %694 = add i64 %693, 5
  %695 = load i64, i64* %PC
  %696 = add i64 %695, 5
  store i64 %696, i64* %PC
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %698 = load i64, i64* %697, align 8, !tbaa !2428
  %699 = add i64 %698, -8
  %700 = inttoptr i64 %699 to i64*
  store i64 %694, i64* %700
  store i64 %699, i64* %697, align 8, !tbaa !2428
  %701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %692, i64* %701, align 8, !tbaa !2428
  %702 = load i64, i64* %PC
  %703 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %703)
  %704 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %704)
  %705 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %705)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i4)
  %706 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %706)
  %707 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %707)
  %708 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %708)
  %709 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %709)
  %710 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %710)
  %711 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %711)
  %712 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %712)
  %713 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %713)
  %714 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %714)
  %715 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %715)
  %716 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %716)
  %717 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %717)
  %718 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %718)
  %719 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %719)
  %720 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %720)
  %721 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %721)
  %722 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %722)
  %723 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %723)
  %724 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %724)
  %725 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %725)
  store %struct.State* %0, %struct.State** %state.i1, align 8, !noalias !2499
  store i64 %702, i64* %curr_pc.i2, align 8, !noalias !2499
  store %struct.Memory* %541, %struct.Memory** %memory.i3, align 8, !noalias !2499
  store i8 0, i8* %BRANCH_TAKEN.i4, align 1, !noalias !2499
  store i64 0, i64* %SS_BASE.i5, align 8, !noalias !2499
  store i64 0, i64* %ES_BASE.i6, align 8, !noalias !2499
  store i64 0, i64* %DS_BASE.i7, align 8, !noalias !2499
  store i64 0, i64* %CS_BASE.i8, align 8, !noalias !2499
  store %struct.State* %0, %struct.State** %STATE.i9, align 8, !noalias !2499
  store %struct.Memory* %541, %struct.Memory** %MEMORY.i10, align 8, !noalias !2499
  %726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %727 = getelementptr inbounds %struct.GPR, %struct.GPR* %726, i32 0, i32 33
  %728 = getelementptr inbounds %struct.Reg, %struct.Reg* %727, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %728 to i64*
  store i64 %702, i64* %PC.i25, align 8, !alias.scope !2503, !noalias !2504
  %729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %730 = getelementptr inbounds %struct.GPR, %struct.GPR* %729, i32 0, i32 1
  %731 = getelementptr inbounds %struct.Reg, %struct.Reg* %730, i32 0, i32 0
  %732 = bitcast %union.anon* %731 to %struct.anon.2*
  %AH.i26 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %732, i32 0, i32 1
  %733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %734 = getelementptr inbounds %struct.GPR, %struct.GPR* %733, i32 0, i32 3
  %735 = getelementptr inbounds %struct.Reg, %struct.Reg* %734, i32 0, i32 0
  %736 = bitcast %union.anon* %735 to %struct.anon.2*
  %BH.i27 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %736, i32 0, i32 1
  %737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %738 = getelementptr inbounds %struct.GPR, %struct.GPR* %737, i32 0, i32 5
  %739 = getelementptr inbounds %struct.Reg, %struct.Reg* %738, i32 0, i32 0
  %740 = bitcast %union.anon* %739 to %struct.anon.2*
  %CH.i28 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %740, i32 0, i32 1
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %742 = getelementptr inbounds %struct.GPR, %struct.GPR* %741, i32 0, i32 7
  %743 = getelementptr inbounds %struct.Reg, %struct.Reg* %742, i32 0, i32 0
  %744 = bitcast %union.anon* %743 to %struct.anon.2*
  %DH.i29 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %744, i32 0, i32 1
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %746 = getelementptr inbounds %struct.GPR, %struct.GPR* %745, i32 0, i32 1
  %747 = getelementptr inbounds %struct.Reg, %struct.Reg* %746, i32 0, i32 0
  %748 = bitcast %union.anon* %747 to %struct.anon.2*
  %AL.i30 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %748, i32 0, i32 0
  %749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %750 = getelementptr inbounds %struct.GPR, %struct.GPR* %749, i32 0, i32 3
  %751 = getelementptr inbounds %struct.Reg, %struct.Reg* %750, i32 0, i32 0
  %752 = bitcast %union.anon* %751 to %struct.anon.2*
  %BL.i31 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %752, i32 0, i32 0
  %753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %754 = getelementptr inbounds %struct.GPR, %struct.GPR* %753, i32 0, i32 5
  %755 = getelementptr inbounds %struct.Reg, %struct.Reg* %754, i32 0, i32 0
  %756 = bitcast %union.anon* %755 to %struct.anon.2*
  %CL.i32 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %756, i32 0, i32 0
  %757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %758 = getelementptr inbounds %struct.GPR, %struct.GPR* %757, i32 0, i32 7
  %759 = getelementptr inbounds %struct.Reg, %struct.Reg* %758, i32 0, i32 0
  %760 = bitcast %union.anon* %759 to %struct.anon.2*
  %DL.i33 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %760, i32 0, i32 0
  %761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %762 = getelementptr inbounds %struct.GPR, %struct.GPR* %761, i32 0, i32 9
  %763 = getelementptr inbounds %struct.Reg, %struct.Reg* %762, i32 0, i32 0
  %764 = bitcast %union.anon* %763 to %struct.anon.2*
  %SIL.i34 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %764, i32 0, i32 0
  %765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %766 = getelementptr inbounds %struct.GPR, %struct.GPR* %765, i32 0, i32 11
  %767 = getelementptr inbounds %struct.Reg, %struct.Reg* %766, i32 0, i32 0
  %768 = bitcast %union.anon* %767 to %struct.anon.2*
  %DIL.i35 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %768, i32 0, i32 0
  %769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %770 = getelementptr inbounds %struct.GPR, %struct.GPR* %769, i32 0, i32 13
  %771 = getelementptr inbounds %struct.Reg, %struct.Reg* %770, i32 0, i32 0
  %772 = bitcast %union.anon* %771 to %struct.anon.2*
  %SPL.i36 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %772, i32 0, i32 0
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 15
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %776 = bitcast %union.anon* %775 to %struct.anon.2*
  %BPL.i37 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %776, i32 0, i32 0
  %777 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %778 = getelementptr inbounds %struct.GPR, %struct.GPR* %777, i32 0, i32 17
  %779 = getelementptr inbounds %struct.Reg, %struct.Reg* %778, i32 0, i32 0
  %780 = bitcast %union.anon* %779 to %struct.anon.2*
  %R8B.i38 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %780, i32 0, i32 0
  %781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %782 = getelementptr inbounds %struct.GPR, %struct.GPR* %781, i32 0, i32 19
  %783 = getelementptr inbounds %struct.Reg, %struct.Reg* %782, i32 0, i32 0
  %784 = bitcast %union.anon* %783 to %struct.anon.2*
  %R9B.i39 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %784, i32 0, i32 0
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 21
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %788 = bitcast %union.anon* %787 to %struct.anon.2*
  %R10B.i40 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %788, i32 0, i32 0
  %789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %790 = getelementptr inbounds %struct.GPR, %struct.GPR* %789, i32 0, i32 23
  %791 = getelementptr inbounds %struct.Reg, %struct.Reg* %790, i32 0, i32 0
  %792 = bitcast %union.anon* %791 to %struct.anon.2*
  %R11B.i41 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %792, i32 0, i32 0
  %793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %794 = getelementptr inbounds %struct.GPR, %struct.GPR* %793, i32 0, i32 25
  %795 = getelementptr inbounds %struct.Reg, %struct.Reg* %794, i32 0, i32 0
  %796 = bitcast %union.anon* %795 to %struct.anon.2*
  %R12B.i42 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %796, i32 0, i32 0
  %797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %798 = getelementptr inbounds %struct.GPR, %struct.GPR* %797, i32 0, i32 27
  %799 = getelementptr inbounds %struct.Reg, %struct.Reg* %798, i32 0, i32 0
  %800 = bitcast %union.anon* %799 to %struct.anon.2*
  %R13B.i43 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %800, i32 0, i32 0
  %801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %802 = getelementptr inbounds %struct.GPR, %struct.GPR* %801, i32 0, i32 29
  %803 = getelementptr inbounds %struct.Reg, %struct.Reg* %802, i32 0, i32 0
  %804 = bitcast %union.anon* %803 to %struct.anon.2*
  %R14B.i44 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %804, i32 0, i32 0
  %805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %806 = getelementptr inbounds %struct.GPR, %struct.GPR* %805, i32 0, i32 31
  %807 = getelementptr inbounds %struct.Reg, %struct.Reg* %806, i32 0, i32 0
  %808 = bitcast %union.anon* %807 to %struct.anon.2*
  %R15B.i45 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %808, i32 0, i32 0
  %809 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %810 = getelementptr inbounds %struct.GPR, %struct.GPR* %809, i32 0, i32 1
  %811 = getelementptr inbounds %struct.Reg, %struct.Reg* %810, i32 0, i32 0
  %AX.i46 = bitcast %union.anon* %811 to i16*
  %812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %813 = getelementptr inbounds %struct.GPR, %struct.GPR* %812, i32 0, i32 3
  %814 = getelementptr inbounds %struct.Reg, %struct.Reg* %813, i32 0, i32 0
  %BX.i47 = bitcast %union.anon* %814 to i16*
  %815 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %816 = getelementptr inbounds %struct.GPR, %struct.GPR* %815, i32 0, i32 5
  %817 = getelementptr inbounds %struct.Reg, %struct.Reg* %816, i32 0, i32 0
  %CX.i48 = bitcast %union.anon* %817 to i16*
  %818 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %819 = getelementptr inbounds %struct.GPR, %struct.GPR* %818, i32 0, i32 7
  %820 = getelementptr inbounds %struct.Reg, %struct.Reg* %819, i32 0, i32 0
  %DX.i49 = bitcast %union.anon* %820 to i16*
  %821 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %822 = getelementptr inbounds %struct.GPR, %struct.GPR* %821, i32 0, i32 9
  %823 = getelementptr inbounds %struct.Reg, %struct.Reg* %822, i32 0, i32 0
  %SI.i50 = bitcast %union.anon* %823 to i16*
  %824 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %825 = getelementptr inbounds %struct.GPR, %struct.GPR* %824, i32 0, i32 11
  %826 = getelementptr inbounds %struct.Reg, %struct.Reg* %825, i32 0, i32 0
  %DI.i51 = bitcast %union.anon* %826 to i16*
  %827 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %828 = getelementptr inbounds %struct.GPR, %struct.GPR* %827, i32 0, i32 13
  %829 = getelementptr inbounds %struct.Reg, %struct.Reg* %828, i32 0, i32 0
  %SP.i52 = bitcast %union.anon* %829 to i16*
  %830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %831 = getelementptr inbounds %struct.GPR, %struct.GPR* %830, i32 0, i32 15
  %832 = getelementptr inbounds %struct.Reg, %struct.Reg* %831, i32 0, i32 0
  %BP.i53 = bitcast %union.anon* %832 to i16*
  %833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %834 = getelementptr inbounds %struct.GPR, %struct.GPR* %833, i32 0, i32 17
  %835 = getelementptr inbounds %struct.Reg, %struct.Reg* %834, i32 0, i32 0
  %R8W.i54 = bitcast %union.anon* %835 to i16*
  %836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %837 = getelementptr inbounds %struct.GPR, %struct.GPR* %836, i32 0, i32 19
  %838 = getelementptr inbounds %struct.Reg, %struct.Reg* %837, i32 0, i32 0
  %R9W.i55 = bitcast %union.anon* %838 to i16*
  %839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %840 = getelementptr inbounds %struct.GPR, %struct.GPR* %839, i32 0, i32 21
  %841 = getelementptr inbounds %struct.Reg, %struct.Reg* %840, i32 0, i32 0
  %R10W.i56 = bitcast %union.anon* %841 to i16*
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 23
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %R11W.i57 = bitcast %union.anon* %844 to i16*
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 25
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %R12W.i58 = bitcast %union.anon* %847 to i16*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 27
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %R13W.i59 = bitcast %union.anon* %850 to i16*
  %851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %852 = getelementptr inbounds %struct.GPR, %struct.GPR* %851, i32 0, i32 29
  %853 = getelementptr inbounds %struct.Reg, %struct.Reg* %852, i32 0, i32 0
  %R14W.i60 = bitcast %union.anon* %853 to i16*
  %854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %855 = getelementptr inbounds %struct.GPR, %struct.GPR* %854, i32 0, i32 31
  %856 = getelementptr inbounds %struct.Reg, %struct.Reg* %855, i32 0, i32 0
  %R15W.i61 = bitcast %union.anon* %856 to i16*
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 33
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %IP.i62 = bitcast %union.anon* %859 to i16*
  %860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %861 = getelementptr inbounds %struct.GPR, %struct.GPR* %860, i32 0, i32 1
  %862 = getelementptr inbounds %struct.Reg, %struct.Reg* %861, i32 0, i32 0
  %EAX.i63 = bitcast %union.anon* %862 to i32*
  %863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %864 = getelementptr inbounds %struct.GPR, %struct.GPR* %863, i32 0, i32 3
  %865 = getelementptr inbounds %struct.Reg, %struct.Reg* %864, i32 0, i32 0
  %EBX.i64 = bitcast %union.anon* %865 to i32*
  %866 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %867 = getelementptr inbounds %struct.GPR, %struct.GPR* %866, i32 0, i32 5
  %868 = getelementptr inbounds %struct.Reg, %struct.Reg* %867, i32 0, i32 0
  %ECX.i65 = bitcast %union.anon* %868 to i32*
  %869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %870 = getelementptr inbounds %struct.GPR, %struct.GPR* %869, i32 0, i32 7
  %871 = getelementptr inbounds %struct.Reg, %struct.Reg* %870, i32 0, i32 0
  %EDX.i66 = bitcast %union.anon* %871 to i32*
  %872 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %873 = getelementptr inbounds %struct.GPR, %struct.GPR* %872, i32 0, i32 9
  %874 = getelementptr inbounds %struct.Reg, %struct.Reg* %873, i32 0, i32 0
  %ESI.i67 = bitcast %union.anon* %874 to i32*
  %875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %876 = getelementptr inbounds %struct.GPR, %struct.GPR* %875, i32 0, i32 11
  %877 = getelementptr inbounds %struct.Reg, %struct.Reg* %876, i32 0, i32 0
  %EDI.i68 = bitcast %union.anon* %877 to i32*
  %878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %879 = getelementptr inbounds %struct.GPR, %struct.GPR* %878, i32 0, i32 13
  %880 = getelementptr inbounds %struct.Reg, %struct.Reg* %879, i32 0, i32 0
  %ESP.i69 = bitcast %union.anon* %880 to i32*
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 15
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %EBP.i70 = bitcast %union.anon* %883 to i32*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 33
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %EIP.i71 = bitcast %union.anon* %886 to i32*
  %887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %888 = getelementptr inbounds %struct.GPR, %struct.GPR* %887, i32 0, i32 17
  %889 = getelementptr inbounds %struct.Reg, %struct.Reg* %888, i32 0, i32 0
  %R8D.i72 = bitcast %union.anon* %889 to i32*
  %890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %891 = getelementptr inbounds %struct.GPR, %struct.GPR* %890, i32 0, i32 19
  %892 = getelementptr inbounds %struct.Reg, %struct.Reg* %891, i32 0, i32 0
  %R9D.i73 = bitcast %union.anon* %892 to i32*
  %893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %894 = getelementptr inbounds %struct.GPR, %struct.GPR* %893, i32 0, i32 21
  %895 = getelementptr inbounds %struct.Reg, %struct.Reg* %894, i32 0, i32 0
  %R10D.i74 = bitcast %union.anon* %895 to i32*
  %896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %897 = getelementptr inbounds %struct.GPR, %struct.GPR* %896, i32 0, i32 23
  %898 = getelementptr inbounds %struct.Reg, %struct.Reg* %897, i32 0, i32 0
  %R11D.i75 = bitcast %union.anon* %898 to i32*
  %899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %900 = getelementptr inbounds %struct.GPR, %struct.GPR* %899, i32 0, i32 25
  %901 = getelementptr inbounds %struct.Reg, %struct.Reg* %900, i32 0, i32 0
  %R12D.i76 = bitcast %union.anon* %901 to i32*
  %902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %903 = getelementptr inbounds %struct.GPR, %struct.GPR* %902, i32 0, i32 27
  %904 = getelementptr inbounds %struct.Reg, %struct.Reg* %903, i32 0, i32 0
  %R13D.i77 = bitcast %union.anon* %904 to i32*
  %905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %906 = getelementptr inbounds %struct.GPR, %struct.GPR* %905, i32 0, i32 29
  %907 = getelementptr inbounds %struct.Reg, %struct.Reg* %906, i32 0, i32 0
  %R14D.i78 = bitcast %union.anon* %907 to i32*
  %908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %909 = getelementptr inbounds %struct.GPR, %struct.GPR* %908, i32 0, i32 31
  %910 = getelementptr inbounds %struct.Reg, %struct.Reg* %909, i32 0, i32 0
  %R15D.i79 = bitcast %union.anon* %910 to i32*
  %911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %912 = getelementptr inbounds %struct.GPR, %struct.GPR* %911, i32 0, i32 1
  %913 = getelementptr inbounds %struct.Reg, %struct.Reg* %912, i32 0, i32 0
  %RAX.i80 = bitcast %union.anon* %913 to i64*
  %914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %915 = getelementptr inbounds %struct.GPR, %struct.GPR* %914, i32 0, i32 3
  %916 = getelementptr inbounds %struct.Reg, %struct.Reg* %915, i32 0, i32 0
  %RBX.i81 = bitcast %union.anon* %916 to i64*
  %917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %918 = getelementptr inbounds %struct.GPR, %struct.GPR* %917, i32 0, i32 5
  %919 = getelementptr inbounds %struct.Reg, %struct.Reg* %918, i32 0, i32 0
  %RCX.i82 = bitcast %union.anon* %919 to i64*
  %920 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %921 = getelementptr inbounds %struct.GPR, %struct.GPR* %920, i32 0, i32 7
  %922 = getelementptr inbounds %struct.Reg, %struct.Reg* %921, i32 0, i32 0
  %RDX.i83 = bitcast %union.anon* %922 to i64*
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 9
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %RSI.i84 = bitcast %union.anon* %925 to i64*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 11
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %RDI.i85 = bitcast %union.anon* %928 to i64*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 13
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %RSP.i86 = bitcast %union.anon* %931 to i64*
  %932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %933 = getelementptr inbounds %struct.GPR, %struct.GPR* %932, i32 0, i32 15
  %934 = getelementptr inbounds %struct.Reg, %struct.Reg* %933, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %934 to i64*
  %935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %936 = getelementptr inbounds %struct.GPR, %struct.GPR* %935, i32 0, i32 17
  %937 = getelementptr inbounds %struct.Reg, %struct.Reg* %936, i32 0, i32 0
  %R8.i88 = bitcast %union.anon* %937 to i64*
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 19
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %R9.i89 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 21
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %R10.i90 = bitcast %union.anon* %943 to i64*
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %945 = getelementptr inbounds %struct.GPR, %struct.GPR* %944, i32 0, i32 23
  %946 = getelementptr inbounds %struct.Reg, %struct.Reg* %945, i32 0, i32 0
  %R11.i91 = bitcast %union.anon* %946 to i64*
  %947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %948 = getelementptr inbounds %struct.GPR, %struct.GPR* %947, i32 0, i32 25
  %949 = getelementptr inbounds %struct.Reg, %struct.Reg* %948, i32 0, i32 0
  %R12.i92 = bitcast %union.anon* %949 to i64*
  %950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %951 = getelementptr inbounds %struct.GPR, %struct.GPR* %950, i32 0, i32 27
  %952 = getelementptr inbounds %struct.Reg, %struct.Reg* %951, i32 0, i32 0
  %R13.i93 = bitcast %union.anon* %952 to i64*
  %953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %954 = getelementptr inbounds %struct.GPR, %struct.GPR* %953, i32 0, i32 29
  %955 = getelementptr inbounds %struct.Reg, %struct.Reg* %954, i32 0, i32 0
  %R14.i94 = bitcast %union.anon* %955 to i64*
  %956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %957 = getelementptr inbounds %struct.GPR, %struct.GPR* %956, i32 0, i32 31
  %958 = getelementptr inbounds %struct.Reg, %struct.Reg* %957, i32 0, i32 0
  %R15.i95 = bitcast %union.anon* %958 to i64*
  %959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %960 = getelementptr inbounds %struct.GPR, %struct.GPR* %959, i32 0, i32 33
  %961 = getelementptr inbounds %struct.Reg, %struct.Reg* %960, i32 0, i32 0
  %RIP.i96 = bitcast %union.anon* %961 to i64*
  %962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %963 = getelementptr inbounds %struct.Segments, %struct.Segments* %962, i32 0, i32 1
  %SS.i97 = bitcast %union.SegmentSelector* %963 to i16*
  %964 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %965 = getelementptr inbounds %struct.Segments, %struct.Segments* %964, i32 0, i32 3
  %ES.i98 = bitcast %union.SegmentSelector* %965 to i16*
  %966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %967 = getelementptr inbounds %struct.Segments, %struct.Segments* %966, i32 0, i32 5
  %GS.i99 = bitcast %union.SegmentSelector* %967 to i16*
  %968 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %969 = getelementptr inbounds %struct.Segments, %struct.Segments* %968, i32 0, i32 7
  %FS.i100 = bitcast %union.SegmentSelector* %969 to i16*
  %970 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %971 = getelementptr inbounds %struct.Segments, %struct.Segments* %970, i32 0, i32 9
  %DS.i101 = bitcast %union.SegmentSelector* %971 to i16*
  %972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %973 = getelementptr inbounds %struct.Segments, %struct.Segments* %972, i32 0, i32 11
  %CS.i102 = bitcast %union.SegmentSelector* %973 to i16*
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %975 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %974, i32 0, i32 5
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %GS_BASE.i103 = bitcast %union.anon* %976 to i64*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %978 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %977, i32 0, i32 7
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %FS_BASE.i104 = bitcast %union.anon* %979 to i64*
  %980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %981 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %980, i64 0, i64 0
  %YMM0.i105 = bitcast %union.VectorReg* %981 to %"class.std::bitset"*
  %982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %983 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %982, i64 0, i64 1
  %YMM1.i106 = bitcast %union.VectorReg* %983 to %"class.std::bitset"*
  %984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %985 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %984, i64 0, i64 2
  %YMM2.i107 = bitcast %union.VectorReg* %985 to %"class.std::bitset"*
  %986 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %987 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %986, i64 0, i64 3
  %YMM3.i108 = bitcast %union.VectorReg* %987 to %"class.std::bitset"*
  %988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %989 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %988, i64 0, i64 4
  %YMM4.i109 = bitcast %union.VectorReg* %989 to %"class.std::bitset"*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %991 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %990, i64 0, i64 5
  %YMM5.i110 = bitcast %union.VectorReg* %991 to %"class.std::bitset"*
  %992 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %993 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %992, i64 0, i64 6
  %YMM6.i111 = bitcast %union.VectorReg* %993 to %"class.std::bitset"*
  %994 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %995 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %994, i64 0, i64 7
  %YMM7.i112 = bitcast %union.VectorReg* %995 to %"class.std::bitset"*
  %996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %997 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %996, i64 0, i64 8
  %YMM8.i113 = bitcast %union.VectorReg* %997 to %"class.std::bitset"*
  %998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %999 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %998, i64 0, i64 9
  %YMM9.i114 = bitcast %union.VectorReg* %999 to %"class.std::bitset"*
  %1000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1001 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1000, i64 0, i64 10
  %YMM10.i115 = bitcast %union.VectorReg* %1001 to %"class.std::bitset"*
  %1002 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1003 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1002, i64 0, i64 11
  %YMM11.i116 = bitcast %union.VectorReg* %1003 to %"class.std::bitset"*
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1005 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1004, i64 0, i64 12
  %YMM12.i117 = bitcast %union.VectorReg* %1005 to %"class.std::bitset"*
  %1006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1007 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1006, i64 0, i64 13
  %YMM13.i118 = bitcast %union.VectorReg* %1007 to %"class.std::bitset"*
  %1008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1009 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1008, i64 0, i64 14
  %YMM14.i119 = bitcast %union.VectorReg* %1009 to %"class.std::bitset"*
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1011 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1010, i64 0, i64 15
  %YMM15.i120 = bitcast %union.VectorReg* %1011 to %"class.std::bitset"*
  %1012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1013 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1012, i64 0, i64 0
  %XMM0.i121 = bitcast %union.VectorReg* %1013 to %union.vec128_t*
  %1014 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1015 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1014, i64 0, i64 1
  %XMM1.i122 = bitcast %union.VectorReg* %1015 to %union.vec128_t*
  %1016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1017 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1016, i64 0, i64 2
  %XMM2.i123 = bitcast %union.VectorReg* %1017 to %union.vec128_t*
  %1018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1019 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1018, i64 0, i64 3
  %XMM3.i124 = bitcast %union.VectorReg* %1019 to %union.vec128_t*
  %1020 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1021 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1020, i64 0, i64 4
  %XMM4.i125 = bitcast %union.VectorReg* %1021 to %union.vec128_t*
  %1022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1023 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1022, i64 0, i64 5
  %XMM5.i126 = bitcast %union.VectorReg* %1023 to %union.vec128_t*
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1025 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1024, i64 0, i64 6
  %XMM6.i127 = bitcast %union.VectorReg* %1025 to %union.vec128_t*
  %1026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1027 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1026, i64 0, i64 7
  %XMM7.i128 = bitcast %union.VectorReg* %1027 to %union.vec128_t*
  %1028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1029 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1028, i64 0, i64 8
  %XMM8.i129 = bitcast %union.VectorReg* %1029 to %union.vec128_t*
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1031 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1030, i64 0, i64 9
  %XMM9.i130 = bitcast %union.VectorReg* %1031 to %union.vec128_t*
  %1032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1033 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1032, i64 0, i64 10
  %XMM10.i131 = bitcast %union.VectorReg* %1033 to %union.vec128_t*
  %1034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1035 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1034, i64 0, i64 11
  %XMM11.i132 = bitcast %union.VectorReg* %1035 to %union.vec128_t*
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1037 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1036, i64 0, i64 12
  %XMM12.i133 = bitcast %union.VectorReg* %1037 to %union.vec128_t*
  %1038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1039 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1038, i64 0, i64 13
  %XMM13.i134 = bitcast %union.VectorReg* %1039 to %union.vec128_t*
  %1040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1041 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1040, i64 0, i64 14
  %XMM14.i135 = bitcast %union.VectorReg* %1041 to %union.vec128_t*
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1043 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1042, i64 0, i64 15
  %XMM15.i136 = bitcast %union.VectorReg* %1043 to %union.vec128_t*
  %1044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1045 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1044, i32 0, i32 0
  %1046 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1045, i64 0, i64 0
  %ST0.i137 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1046, i32 0, i32 1
  %1047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1048 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1047, i32 0, i32 0
  %1049 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1048, i64 0, i64 1
  %ST1.i138 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1049, i32 0, i32 1
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1051 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1050, i32 0, i32 0
  %1052 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1051, i64 0, i64 2
  %ST2.i139 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1052, i32 0, i32 1
  %1053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1054 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1053, i32 0, i32 0
  %1055 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1054, i64 0, i64 3
  %ST3.i140 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1055, i32 0, i32 1
  %1056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1057 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1056, i32 0, i32 0
  %1058 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1057, i64 0, i64 4
  %ST4.i141 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1058, i32 0, i32 1
  %1059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1060 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1059, i32 0, i32 0
  %1061 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1060, i64 0, i64 5
  %ST5.i142 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1061, i32 0, i32 1
  %1062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1063 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1062, i32 0, i32 0
  %1064 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1063, i64 0, i64 6
  %ST6.i143 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1064, i32 0, i32 1
  %1065 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1066 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1065, i32 0, i32 0
  %1067 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1066, i64 0, i64 7
  %ST7.i144 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1067, i32 0, i32 1
  %1068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1069 = getelementptr inbounds %struct.MMX, %struct.MMX* %1068, i32 0, i32 0
  %1070 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1069, i64 0, i64 0
  %1071 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1070, i32 0, i32 1
  %1072 = bitcast %union.vec64_t* %1071 to %struct.uint64v1_t*
  %1073 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1072, i32 0, i32 0
  %MM0.i145 = getelementptr inbounds [1 x i64], [1 x i64]* %1073, i64 0, i64 0
  %1074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1075 = getelementptr inbounds %struct.MMX, %struct.MMX* %1074, i32 0, i32 0
  %1076 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1075, i64 0, i64 1
  %1077 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1076, i32 0, i32 1
  %1078 = bitcast %union.vec64_t* %1077 to %struct.uint64v1_t*
  %1079 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1078, i32 0, i32 0
  %MM1.i146 = getelementptr inbounds [1 x i64], [1 x i64]* %1079, i64 0, i64 0
  %1080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1081 = getelementptr inbounds %struct.MMX, %struct.MMX* %1080, i32 0, i32 0
  %1082 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1081, i64 0, i64 2
  %1083 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1082, i32 0, i32 1
  %1084 = bitcast %union.vec64_t* %1083 to %struct.uint64v1_t*
  %1085 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1084, i32 0, i32 0
  %MM2.i147 = getelementptr inbounds [1 x i64], [1 x i64]* %1085, i64 0, i64 0
  %1086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1087 = getelementptr inbounds %struct.MMX, %struct.MMX* %1086, i32 0, i32 0
  %1088 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1087, i64 0, i64 3
  %1089 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1088, i32 0, i32 1
  %1090 = bitcast %union.vec64_t* %1089 to %struct.uint64v1_t*
  %1091 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1090, i32 0, i32 0
  %MM3.i148 = getelementptr inbounds [1 x i64], [1 x i64]* %1091, i64 0, i64 0
  %1092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1093 = getelementptr inbounds %struct.MMX, %struct.MMX* %1092, i32 0, i32 0
  %1094 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1093, i64 0, i64 4
  %1095 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1094, i32 0, i32 1
  %1096 = bitcast %union.vec64_t* %1095 to %struct.uint64v1_t*
  %1097 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1096, i32 0, i32 0
  %MM4.i149 = getelementptr inbounds [1 x i64], [1 x i64]* %1097, i64 0, i64 0
  %1098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1099 = getelementptr inbounds %struct.MMX, %struct.MMX* %1098, i32 0, i32 0
  %1100 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1099, i64 0, i64 5
  %1101 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1100, i32 0, i32 1
  %1102 = bitcast %union.vec64_t* %1101 to %struct.uint64v1_t*
  %1103 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1102, i32 0, i32 0
  %MM5.i150 = getelementptr inbounds [1 x i64], [1 x i64]* %1103, i64 0, i64 0
  %1104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1105 = getelementptr inbounds %struct.MMX, %struct.MMX* %1104, i32 0, i32 0
  %1106 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1105, i64 0, i64 6
  %1107 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1106, i32 0, i32 1
  %1108 = bitcast %union.vec64_t* %1107 to %struct.uint64v1_t*
  %1109 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1108, i32 0, i32 0
  %MM6.i151 = getelementptr inbounds [1 x i64], [1 x i64]* %1109, i64 0, i64 0
  %1110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1111 = getelementptr inbounds %struct.MMX, %struct.MMX* %1110, i32 0, i32 0
  %1112 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1111, i64 0, i64 7
  %1113 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1112, i32 0, i32 1
  %1114 = bitcast %union.vec64_t* %1113 to %struct.uint64v1_t*
  %1115 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1114, i32 0, i32 0
  %MM7.i152 = getelementptr inbounds [1 x i64], [1 x i64]* %1115, i64 0, i64 0
  %1116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i153 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1116, i32 0, i32 5
  %1117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i154 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1117, i32 0, i32 1
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i155 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1118, i32 0, i32 11
  %1119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i156 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1119, i32 0, i32 13
  %1120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i157 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1120, i32 0, i32 3
  %1121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i158 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1121, i32 0, i32 9
  %1122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i159 = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1122, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i11, align 8, !noalias !2499
  store i64* @DR1, i64** %_DR1.i12, align 8, !noalias !2499
  store i64* @DR2, i64** %_DR2.i13, align 8, !noalias !2499
  store i64* @DR3, i64** %_DR3.i14, align 8, !noalias !2499
  store i64* @DR4, i64** %_DR4.i15, align 8, !noalias !2499
  store i64* @DR5, i64** %_DR5.i16, align 8, !noalias !2499
  store i64* @DR6, i64** %_DR6.i17, align 8, !noalias !2499
  store i64* @DR7, i64** %_DR7.i18, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i19, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i20, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i21, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i22, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i23, align 8, !noalias !2499
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i24, align 8, !noalias !2499
  %1123 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  %1124 = load double, double* %1123, !alias.scope !2503, !noalias !2504
  %1125 = load i64, i64* %RSP.i86, !alias.scope !2503, !noalias !2504
  %1126 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2499
  %1127 = inttoptr i64 %1125 to i64*
  %1128 = load i64, i64* %1127
  store i64 %1128, i64* %PC.i25, !alias.scope !2503, !noalias !2504
  %1129 = add i64 %1125, 8
  store i64 %1129, i64* %RSP.i86, !alias.scope !2503, !noalias !2504
  %1130 = call double @sin(double %1124)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i105, !alias.scope !2503, !noalias !2504
  %1131 = bitcast %"class.std::bitset"* %YMM0.i105 to double*
  store double %1130, double* %1131, !alias.scope !2503, !noalias !2504
  %1132 = load %struct.Memory*, %struct.Memory** %MEMORY.i10, !noalias !2499
  %1133 = bitcast %struct.State** %state.i1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1133)
  %1134 = bitcast i64* %curr_pc.i2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1134)
  %1135 = bitcast %struct.Memory** %memory.i3 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1135)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i4)
  %1136 = bitcast i64* %SS_BASE.i5 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1136)
  %1137 = bitcast i64* %ES_BASE.i6 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1137)
  %1138 = bitcast i64* %DS_BASE.i7 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1138)
  %1139 = bitcast i64* %CS_BASE.i8 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1139)
  %1140 = bitcast %struct.State** %STATE.i9 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1140)
  %1141 = bitcast %struct.Memory** %MEMORY.i10 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1141)
  %1142 = bitcast i64** %_DR0.i11 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1142)
  %1143 = bitcast i64** %_DR1.i12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1143)
  %1144 = bitcast i64** %_DR2.i13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1144)
  %1145 = bitcast i64** %_DR3.i14 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1145)
  %1146 = bitcast i64** %_DR4.i15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1146)
  %1147 = bitcast i64** %_DR5.i16 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1147)
  %1148 = bitcast i64** %_DR6.i17 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1148)
  %1149 = bitcast i64** %_DR7.i18 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1149)
  %1150 = bitcast i64** %CR0.i19 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1150)
  %1151 = bitcast i64** %CR1.i20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1151)
  %1152 = bitcast i64** %CR2.i21 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1152)
  %1153 = bitcast i64** %CR3.i22 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1153)
  %1154 = bitcast i64** %CR4.i23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1154)
  %1155 = bitcast i64** %CR8.i24 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1155)
  %1156 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1157 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1158 = load i64, i64* %PC
  %1159 = add i64 %1158, 9
  store i64 %1159, i64* %PC
  %1160 = bitcast i8* %1157 to double*
  %1161 = load double, double* %1160, align 1
  %1162 = getelementptr inbounds i8, i8* %1157, i64 8
  %1163 = bitcast i8* %1162 to i64*
  %1164 = load i64, i64* %1163, align 1
  %1165 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %1166 = fmul double %1161, %1165
  %1167 = bitcast i8* %1156 to double*
  store double %1166, double* %1167, align 1, !tbaa !2452
  %1168 = getelementptr inbounds i8, i8* %1156, i64 8
  %1169 = bitcast i8* %1168 to i64*
  store i64 %1164, i64* %1169, align 1, !tbaa !2452
  %1170 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1171 = load i64, i64* %RBP
  %1172 = sub i64 %1171, 104
  %1173 = load i64, i64* %PC
  %1174 = add i64 %1173, 5
  store i64 %1174, i64* %PC
  %1175 = inttoptr i64 %1172 to double*
  %1176 = load double, double* %1175
  %1177 = bitcast i8* %1170 to double*
  store double %1176, double* %1177, align 1, !tbaa !2452
  %1178 = getelementptr inbounds i8, i8* %1170, i64 8
  %1179 = bitcast i8* %1178 to double*
  store double 0.000000e+00, double* %1179, align 1, !tbaa !2452
  %1180 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1181 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1182 = bitcast %union.vec128_t* %XMM0 to i8*
  %1183 = load i64, i64* %PC
  %1184 = add i64 %1183, 4
  store i64 %1184, i64* %PC
  %1185 = bitcast i8* %1181 to double*
  %1186 = load double, double* %1185, align 1
  %1187 = getelementptr inbounds i8, i8* %1181, i64 8
  %1188 = bitcast i8* %1187 to i64*
  %1189 = load i64, i64* %1188, align 1
  %1190 = bitcast i8* %1182 to double*
  %1191 = load double, double* %1190, align 1
  %1192 = fdiv double %1186, %1191
  %1193 = bitcast i8* %1180 to double*
  store double %1192, double* %1193, align 1, !tbaa !2452
  %1194 = getelementptr inbounds i8, i8* %1180, i64 8
  %1195 = bitcast i8* %1194 to i64*
  store i64 %1189, i64* %1195, align 1, !tbaa !2452
  %1196 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1197 = load i64, i64* %RBP
  %1198 = sub i64 %1197, 120
  %1199 = load i64, i64* %PC
  %1200 = add i64 %1199, 5
  store i64 %1200, i64* %PC
  %1201 = inttoptr i64 %1198 to double*
  %1202 = load double, double* %1201
  %1203 = bitcast i8* %1196 to double*
  store double %1202, double* %1203, align 1, !tbaa !2452
  %1204 = getelementptr inbounds i8, i8* %1196, i64 8
  %1205 = bitcast i8* %1204 to double*
  store double 0.000000e+00, double* %1205, align 1, !tbaa !2452
  %1206 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1207 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1208 = bitcast %union.vec128_t* %XMM1 to i8*
  %1209 = load i64, i64* %PC
  %1210 = add i64 %1209, 4
  store i64 %1210, i64* %PC
  %1211 = bitcast i8* %1207 to double*
  %1212 = load double, double* %1211, align 1
  %1213 = getelementptr inbounds i8, i8* %1207, i64 8
  %1214 = bitcast i8* %1213 to i64*
  %1215 = load i64, i64* %1214, align 1
  %1216 = bitcast i8* %1208 to double*
  %1217 = load double, double* %1216, align 1
  %1218 = fsub double %1212, %1217
  %1219 = bitcast i8* %1206 to double*
  store double %1218, double* %1219, align 1, !tbaa !2452
  %1220 = getelementptr inbounds i8, i8* %1206, i64 8
  %1221 = bitcast i8* %1220 to i64*
  store i64 %1215, i64* %1221, align 1, !tbaa !2452
  %1222 = bitcast %union.vec128_t* %XMM0 to i8*
  %1223 = load i64, i64* %PC
  %1224 = add i64 %1223, 9
  store i64 %1224, i64* %PC
  %1225 = bitcast i8* %1222 to double*
  %1226 = load double, double* %1225, align 1
  store double %1226, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %1227 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1228 = load i64, i64* %RBP
  %1229 = sub i64 %1228, 40
  %1230 = load i64, i64* %PC
  %1231 = add i64 %1230, 5
  store i64 %1231, i64* %PC
  %1232 = inttoptr i64 %1229 to double*
  %1233 = load double, double* %1232
  %1234 = bitcast i8* %1227 to double*
  store double %1233, double* %1234, align 1, !tbaa !2452
  %1235 = getelementptr inbounds i8, i8* %1227, i64 8
  %1236 = bitcast i8* %1235 to double*
  store double 0.000000e+00, double* %1236, align 1, !tbaa !2452
  %1237 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1238 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1239 = load i64, i64* %RBP
  %1240 = sub i64 %1239, 48
  %1241 = load i64, i64* %PC
  %1242 = add i64 %1241, 5
  store i64 %1242, i64* %PC
  %1243 = bitcast i8* %1238 to double*
  %1244 = load double, double* %1243, align 1
  %1245 = getelementptr inbounds i8, i8* %1238, i64 8
  %1246 = bitcast i8* %1245 to i64*
  %1247 = load i64, i64* %1246, align 1
  %1248 = inttoptr i64 %1240 to double*
  %1249 = load double, double* %1248
  %1250 = fsub double %1244, %1249
  %1251 = bitcast i8* %1237 to double*
  store double %1250, double* %1251, align 1, !tbaa !2452
  %1252 = getelementptr inbounds i8, i8* %1237, i64 8
  %1253 = bitcast i8* %1252 to i64*
  store i64 %1247, i64* %1253, align 1, !tbaa !2452
  %1254 = bitcast %union.vec128_t* %XMM0 to i8*
  %1255 = load i64, i64* %PC
  %1256 = add i64 %1255, 9
  store i64 %1256, i64* %PC
  %1257 = bitcast i8* %1254 to double*
  %1258 = load double, double* %1257, align 1
  store double %1258, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %1259 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1260 = load i64, i64* %PC
  %1261 = add i64 %1260, 9
  store i64 %1261, i64* %PC
  %1262 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %1263 = bitcast i8* %1259 to double*
  store double %1262, double* %1263, align 1, !tbaa !2452
  %1264 = getelementptr inbounds i8, i8* %1259, i64 8
  %1265 = bitcast i8* %1264 to double*
  store double 0.000000e+00, double* %1265, align 1, !tbaa !2452
  %1266 = load i64, i64* %PC
  %1267 = sub i64 %1266, 1240
  %1268 = load i64, i64* %PC
  %1269 = add i64 %1268, 5
  %1270 = load i64, i64* %PC
  %1271 = add i64 %1270, 5
  store i64 %1271, i64* %PC
  %1272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1273 = load i64, i64* %1272, align 8, !tbaa !2428
  %1274 = add i64 %1273, -8
  %1275 = inttoptr i64 %1274 to i64*
  store i64 %1269, i64* %1275
  store i64 %1274, i64* %1272, align 8, !tbaa !2428
  %1276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1267, i64* %1276, align 8, !tbaa !2428
  %1277 = load i64, i64* %PC
  %1278 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1278)
  %1279 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1279)
  %1280 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1280)
  call void @llvm.lifetime.start(i64 1, i8* %BRANCH_TAKEN.i)
  %1281 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1281)
  %1282 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1282)
  %1283 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1283)
  %1284 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1284)
  %1285 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1285)
  %1286 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1286)
  %1287 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1287)
  %1288 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1288)
  %1289 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1289)
  %1290 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1290)
  %1291 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1291)
  %1292 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1292)
  %1293 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1293)
  %1294 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1294)
  %1295 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1295)
  %1296 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1296)
  %1297 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1297)
  %1298 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1298)
  %1299 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1299)
  %1300 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1300)
  store %struct.State* %0, %struct.State** %state.i, align 8, !noalias !2505
  store i64 %1277, i64* %curr_pc.i, align 8, !noalias !2505
  store %struct.Memory* %1132, %struct.Memory** %memory.i, align 8, !noalias !2505
  store i8 0, i8* %BRANCH_TAKEN.i, align 1, !noalias !2505
  store i64 0, i64* %SS_BASE.i, align 8, !noalias !2505
  store i64 0, i64* %ES_BASE.i, align 8, !noalias !2505
  store i64 0, i64* %DS_BASE.i, align 8, !noalias !2505
  store i64 0, i64* %CS_BASE.i, align 8, !noalias !2505
  store %struct.State* %0, %struct.State** %STATE.i, align 8, !noalias !2505
  store %struct.Memory* %1132, %struct.Memory** %MEMORY.i, align 8, !noalias !2505
  %1301 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1302 = getelementptr inbounds %struct.GPR, %struct.GPR* %1301, i32 0, i32 33
  %1303 = getelementptr inbounds %struct.Reg, %struct.Reg* %1302, i32 0, i32 0
  %PC.i = bitcast %union.anon* %1303 to i64*
  store i64 %1277, i64* %PC.i, align 8, !alias.scope !2509, !noalias !2510
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 1
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %1307 = bitcast %union.anon* %1306 to %struct.anon.2*
  %AH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1307, i32 0, i32 1
  %1308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1309 = getelementptr inbounds %struct.GPR, %struct.GPR* %1308, i32 0, i32 3
  %1310 = getelementptr inbounds %struct.Reg, %struct.Reg* %1309, i32 0, i32 0
  %1311 = bitcast %union.anon* %1310 to %struct.anon.2*
  %BH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1311, i32 0, i32 1
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 5
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %1315 = bitcast %union.anon* %1314 to %struct.anon.2*
  %CH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1315, i32 0, i32 1
  %1316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1317 = getelementptr inbounds %struct.GPR, %struct.GPR* %1316, i32 0, i32 7
  %1318 = getelementptr inbounds %struct.Reg, %struct.Reg* %1317, i32 0, i32 0
  %1319 = bitcast %union.anon* %1318 to %struct.anon.2*
  %DH.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1319, i32 0, i32 1
  %1320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1321 = getelementptr inbounds %struct.GPR, %struct.GPR* %1320, i32 0, i32 1
  %1322 = getelementptr inbounds %struct.Reg, %struct.Reg* %1321, i32 0, i32 0
  %1323 = bitcast %union.anon* %1322 to %struct.anon.2*
  %AL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1323, i32 0, i32 0
  %1324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1325 = getelementptr inbounds %struct.GPR, %struct.GPR* %1324, i32 0, i32 3
  %1326 = getelementptr inbounds %struct.Reg, %struct.Reg* %1325, i32 0, i32 0
  %1327 = bitcast %union.anon* %1326 to %struct.anon.2*
  %BL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1327, i32 0, i32 0
  %1328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1329 = getelementptr inbounds %struct.GPR, %struct.GPR* %1328, i32 0, i32 5
  %1330 = getelementptr inbounds %struct.Reg, %struct.Reg* %1329, i32 0, i32 0
  %1331 = bitcast %union.anon* %1330 to %struct.anon.2*
  %CL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1331, i32 0, i32 0
  %1332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1333 = getelementptr inbounds %struct.GPR, %struct.GPR* %1332, i32 0, i32 7
  %1334 = getelementptr inbounds %struct.Reg, %struct.Reg* %1333, i32 0, i32 0
  %1335 = bitcast %union.anon* %1334 to %struct.anon.2*
  %DL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1335, i32 0, i32 0
  %1336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1337 = getelementptr inbounds %struct.GPR, %struct.GPR* %1336, i32 0, i32 9
  %1338 = getelementptr inbounds %struct.Reg, %struct.Reg* %1337, i32 0, i32 0
  %1339 = bitcast %union.anon* %1338 to %struct.anon.2*
  %SIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1339, i32 0, i32 0
  %1340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1341 = getelementptr inbounds %struct.GPR, %struct.GPR* %1340, i32 0, i32 11
  %1342 = getelementptr inbounds %struct.Reg, %struct.Reg* %1341, i32 0, i32 0
  %1343 = bitcast %union.anon* %1342 to %struct.anon.2*
  %DIL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1343, i32 0, i32 0
  %1344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1345 = getelementptr inbounds %struct.GPR, %struct.GPR* %1344, i32 0, i32 13
  %1346 = getelementptr inbounds %struct.Reg, %struct.Reg* %1345, i32 0, i32 0
  %1347 = bitcast %union.anon* %1346 to %struct.anon.2*
  %SPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1347, i32 0, i32 0
  %1348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1349 = getelementptr inbounds %struct.GPR, %struct.GPR* %1348, i32 0, i32 15
  %1350 = getelementptr inbounds %struct.Reg, %struct.Reg* %1349, i32 0, i32 0
  %1351 = bitcast %union.anon* %1350 to %struct.anon.2*
  %BPL.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1351, i32 0, i32 0
  %1352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1353 = getelementptr inbounds %struct.GPR, %struct.GPR* %1352, i32 0, i32 17
  %1354 = getelementptr inbounds %struct.Reg, %struct.Reg* %1353, i32 0, i32 0
  %1355 = bitcast %union.anon* %1354 to %struct.anon.2*
  %R8B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1355, i32 0, i32 0
  %1356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1357 = getelementptr inbounds %struct.GPR, %struct.GPR* %1356, i32 0, i32 19
  %1358 = getelementptr inbounds %struct.Reg, %struct.Reg* %1357, i32 0, i32 0
  %1359 = bitcast %union.anon* %1358 to %struct.anon.2*
  %R9B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1359, i32 0, i32 0
  %1360 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1361 = getelementptr inbounds %struct.GPR, %struct.GPR* %1360, i32 0, i32 21
  %1362 = getelementptr inbounds %struct.Reg, %struct.Reg* %1361, i32 0, i32 0
  %1363 = bitcast %union.anon* %1362 to %struct.anon.2*
  %R10B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1363, i32 0, i32 0
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1365 = getelementptr inbounds %struct.GPR, %struct.GPR* %1364, i32 0, i32 23
  %1366 = getelementptr inbounds %struct.Reg, %struct.Reg* %1365, i32 0, i32 0
  %1367 = bitcast %union.anon* %1366 to %struct.anon.2*
  %R11B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1367, i32 0, i32 0
  %1368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1369 = getelementptr inbounds %struct.GPR, %struct.GPR* %1368, i32 0, i32 25
  %1370 = getelementptr inbounds %struct.Reg, %struct.Reg* %1369, i32 0, i32 0
  %1371 = bitcast %union.anon* %1370 to %struct.anon.2*
  %R12B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1371, i32 0, i32 0
  %1372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1373 = getelementptr inbounds %struct.GPR, %struct.GPR* %1372, i32 0, i32 27
  %1374 = getelementptr inbounds %struct.Reg, %struct.Reg* %1373, i32 0, i32 0
  %1375 = bitcast %union.anon* %1374 to %struct.anon.2*
  %R13B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1375, i32 0, i32 0
  %1376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1377 = getelementptr inbounds %struct.GPR, %struct.GPR* %1376, i32 0, i32 29
  %1378 = getelementptr inbounds %struct.Reg, %struct.Reg* %1377, i32 0, i32 0
  %1379 = bitcast %union.anon* %1378 to %struct.anon.2*
  %R14B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1379, i32 0, i32 0
  %1380 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1381 = getelementptr inbounds %struct.GPR, %struct.GPR* %1380, i32 0, i32 31
  %1382 = getelementptr inbounds %struct.Reg, %struct.Reg* %1381, i32 0, i32 0
  %1383 = bitcast %union.anon* %1382 to %struct.anon.2*
  %R15B.i = getelementptr inbounds %struct.anon.2, %struct.anon.2* %1383, i32 0, i32 0
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 1
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %AX.i = bitcast %union.anon* %1386 to i16*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 3
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %BX.i = bitcast %union.anon* %1389 to i16*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1391 = getelementptr inbounds %struct.GPR, %struct.GPR* %1390, i32 0, i32 5
  %1392 = getelementptr inbounds %struct.Reg, %struct.Reg* %1391, i32 0, i32 0
  %CX.i = bitcast %union.anon* %1392 to i16*
  %1393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1394 = getelementptr inbounds %struct.GPR, %struct.GPR* %1393, i32 0, i32 7
  %1395 = getelementptr inbounds %struct.Reg, %struct.Reg* %1394, i32 0, i32 0
  %DX.i = bitcast %union.anon* %1395 to i16*
  %1396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1397 = getelementptr inbounds %struct.GPR, %struct.GPR* %1396, i32 0, i32 9
  %1398 = getelementptr inbounds %struct.Reg, %struct.Reg* %1397, i32 0, i32 0
  %SI.i = bitcast %union.anon* %1398 to i16*
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1400 = getelementptr inbounds %struct.GPR, %struct.GPR* %1399, i32 0, i32 11
  %1401 = getelementptr inbounds %struct.Reg, %struct.Reg* %1400, i32 0, i32 0
  %DI.i = bitcast %union.anon* %1401 to i16*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 13
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %SP.i = bitcast %union.anon* %1404 to i16*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 15
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %BP.i = bitcast %union.anon* %1407 to i16*
  %1408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1409 = getelementptr inbounds %struct.GPR, %struct.GPR* %1408, i32 0, i32 17
  %1410 = getelementptr inbounds %struct.Reg, %struct.Reg* %1409, i32 0, i32 0
  %R8W.i = bitcast %union.anon* %1410 to i16*
  %1411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1412 = getelementptr inbounds %struct.GPR, %struct.GPR* %1411, i32 0, i32 19
  %1413 = getelementptr inbounds %struct.Reg, %struct.Reg* %1412, i32 0, i32 0
  %R9W.i = bitcast %union.anon* %1413 to i16*
  %1414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1415 = getelementptr inbounds %struct.GPR, %struct.GPR* %1414, i32 0, i32 21
  %1416 = getelementptr inbounds %struct.Reg, %struct.Reg* %1415, i32 0, i32 0
  %R10W.i = bitcast %union.anon* %1416 to i16*
  %1417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1418 = getelementptr inbounds %struct.GPR, %struct.GPR* %1417, i32 0, i32 23
  %1419 = getelementptr inbounds %struct.Reg, %struct.Reg* %1418, i32 0, i32 0
  %R11W.i = bitcast %union.anon* %1419 to i16*
  %1420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1421 = getelementptr inbounds %struct.GPR, %struct.GPR* %1420, i32 0, i32 25
  %1422 = getelementptr inbounds %struct.Reg, %struct.Reg* %1421, i32 0, i32 0
  %R12W.i = bitcast %union.anon* %1422 to i16*
  %1423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1424 = getelementptr inbounds %struct.GPR, %struct.GPR* %1423, i32 0, i32 27
  %1425 = getelementptr inbounds %struct.Reg, %struct.Reg* %1424, i32 0, i32 0
  %R13W.i = bitcast %union.anon* %1425 to i16*
  %1426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1427 = getelementptr inbounds %struct.GPR, %struct.GPR* %1426, i32 0, i32 29
  %1428 = getelementptr inbounds %struct.Reg, %struct.Reg* %1427, i32 0, i32 0
  %R14W.i = bitcast %union.anon* %1428 to i16*
  %1429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1430 = getelementptr inbounds %struct.GPR, %struct.GPR* %1429, i32 0, i32 31
  %1431 = getelementptr inbounds %struct.Reg, %struct.Reg* %1430, i32 0, i32 0
  %R15W.i = bitcast %union.anon* %1431 to i16*
  %1432 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1433 = getelementptr inbounds %struct.GPR, %struct.GPR* %1432, i32 0, i32 33
  %1434 = getelementptr inbounds %struct.Reg, %struct.Reg* %1433, i32 0, i32 0
  %IP.i = bitcast %union.anon* %1434 to i16*
  %1435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1436 = getelementptr inbounds %struct.GPR, %struct.GPR* %1435, i32 0, i32 1
  %1437 = getelementptr inbounds %struct.Reg, %struct.Reg* %1436, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %1437 to i32*
  %1438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1439 = getelementptr inbounds %struct.GPR, %struct.GPR* %1438, i32 0, i32 3
  %1440 = getelementptr inbounds %struct.Reg, %struct.Reg* %1439, i32 0, i32 0
  %EBX.i = bitcast %union.anon* %1440 to i32*
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1442 = getelementptr inbounds %struct.GPR, %struct.GPR* %1441, i32 0, i32 5
  %1443 = getelementptr inbounds %struct.Reg, %struct.Reg* %1442, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %1443 to i32*
  %1444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1445 = getelementptr inbounds %struct.GPR, %struct.GPR* %1444, i32 0, i32 7
  %1446 = getelementptr inbounds %struct.Reg, %struct.Reg* %1445, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %1446 to i32*
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 9
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %1449 to i32*
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 11
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %1452 to i32*
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1454 = getelementptr inbounds %struct.GPR, %struct.GPR* %1453, i32 0, i32 13
  %1455 = getelementptr inbounds %struct.Reg, %struct.Reg* %1454, i32 0, i32 0
  %ESP.i = bitcast %union.anon* %1455 to i32*
  %1456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1457 = getelementptr inbounds %struct.GPR, %struct.GPR* %1456, i32 0, i32 15
  %1458 = getelementptr inbounds %struct.Reg, %struct.Reg* %1457, i32 0, i32 0
  %EBP.i = bitcast %union.anon* %1458 to i32*
  %1459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1460 = getelementptr inbounds %struct.GPR, %struct.GPR* %1459, i32 0, i32 33
  %1461 = getelementptr inbounds %struct.Reg, %struct.Reg* %1460, i32 0, i32 0
  %EIP.i = bitcast %union.anon* %1461 to i32*
  %1462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1463 = getelementptr inbounds %struct.GPR, %struct.GPR* %1462, i32 0, i32 17
  %1464 = getelementptr inbounds %struct.Reg, %struct.Reg* %1463, i32 0, i32 0
  %R8D.i = bitcast %union.anon* %1464 to i32*
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1466 = getelementptr inbounds %struct.GPR, %struct.GPR* %1465, i32 0, i32 19
  %1467 = getelementptr inbounds %struct.Reg, %struct.Reg* %1466, i32 0, i32 0
  %R9D.i = bitcast %union.anon* %1467 to i32*
  %1468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1469 = getelementptr inbounds %struct.GPR, %struct.GPR* %1468, i32 0, i32 21
  %1470 = getelementptr inbounds %struct.Reg, %struct.Reg* %1469, i32 0, i32 0
  %R10D.i = bitcast %union.anon* %1470 to i32*
  %1471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1472 = getelementptr inbounds %struct.GPR, %struct.GPR* %1471, i32 0, i32 23
  %1473 = getelementptr inbounds %struct.Reg, %struct.Reg* %1472, i32 0, i32 0
  %R11D.i = bitcast %union.anon* %1473 to i32*
  %1474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1475 = getelementptr inbounds %struct.GPR, %struct.GPR* %1474, i32 0, i32 25
  %1476 = getelementptr inbounds %struct.Reg, %struct.Reg* %1475, i32 0, i32 0
  %R12D.i = bitcast %union.anon* %1476 to i32*
  %1477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1478 = getelementptr inbounds %struct.GPR, %struct.GPR* %1477, i32 0, i32 27
  %1479 = getelementptr inbounds %struct.Reg, %struct.Reg* %1478, i32 0, i32 0
  %R13D.i = bitcast %union.anon* %1479 to i32*
  %1480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1481 = getelementptr inbounds %struct.GPR, %struct.GPR* %1480, i32 0, i32 29
  %1482 = getelementptr inbounds %struct.Reg, %struct.Reg* %1481, i32 0, i32 0
  %R14D.i = bitcast %union.anon* %1482 to i32*
  %1483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1484 = getelementptr inbounds %struct.GPR, %struct.GPR* %1483, i32 0, i32 31
  %1485 = getelementptr inbounds %struct.Reg, %struct.Reg* %1484, i32 0, i32 0
  %R15D.i = bitcast %union.anon* %1485 to i32*
  %1486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1487 = getelementptr inbounds %struct.GPR, %struct.GPR* %1486, i32 0, i32 1
  %1488 = getelementptr inbounds %struct.Reg, %struct.Reg* %1487, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %1488 to i64*
  %1489 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1490 = getelementptr inbounds %struct.GPR, %struct.GPR* %1489, i32 0, i32 3
  %1491 = getelementptr inbounds %struct.Reg, %struct.Reg* %1490, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %1491 to i64*
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1493 = getelementptr inbounds %struct.GPR, %struct.GPR* %1492, i32 0, i32 5
  %1494 = getelementptr inbounds %struct.Reg, %struct.Reg* %1493, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %1494 to i64*
  %1495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1496 = getelementptr inbounds %struct.GPR, %struct.GPR* %1495, i32 0, i32 7
  %1497 = getelementptr inbounds %struct.Reg, %struct.Reg* %1496, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %1497 to i64*
  %1498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1499 = getelementptr inbounds %struct.GPR, %struct.GPR* %1498, i32 0, i32 9
  %1500 = getelementptr inbounds %struct.Reg, %struct.Reg* %1499, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %1500 to i64*
  %1501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1502 = getelementptr inbounds %struct.GPR, %struct.GPR* %1501, i32 0, i32 11
  %1503 = getelementptr inbounds %struct.Reg, %struct.Reg* %1502, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %1503 to i64*
  %1504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1505 = getelementptr inbounds %struct.GPR, %struct.GPR* %1504, i32 0, i32 13
  %1506 = getelementptr inbounds %struct.Reg, %struct.Reg* %1505, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %1506 to i64*
  %1507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1508 = getelementptr inbounds %struct.GPR, %struct.GPR* %1507, i32 0, i32 15
  %1509 = getelementptr inbounds %struct.Reg, %struct.Reg* %1508, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %1509 to i64*
  %1510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1511 = getelementptr inbounds %struct.GPR, %struct.GPR* %1510, i32 0, i32 17
  %1512 = getelementptr inbounds %struct.Reg, %struct.Reg* %1511, i32 0, i32 0
  %R8.i = bitcast %union.anon* %1512 to i64*
  %1513 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1514 = getelementptr inbounds %struct.GPR, %struct.GPR* %1513, i32 0, i32 19
  %1515 = getelementptr inbounds %struct.Reg, %struct.Reg* %1514, i32 0, i32 0
  %R9.i = bitcast %union.anon* %1515 to i64*
  %1516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1517 = getelementptr inbounds %struct.GPR, %struct.GPR* %1516, i32 0, i32 21
  %1518 = getelementptr inbounds %struct.Reg, %struct.Reg* %1517, i32 0, i32 0
  %R10.i = bitcast %union.anon* %1518 to i64*
  %1519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1520 = getelementptr inbounds %struct.GPR, %struct.GPR* %1519, i32 0, i32 23
  %1521 = getelementptr inbounds %struct.Reg, %struct.Reg* %1520, i32 0, i32 0
  %R11.i = bitcast %union.anon* %1521 to i64*
  %1522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1523 = getelementptr inbounds %struct.GPR, %struct.GPR* %1522, i32 0, i32 25
  %1524 = getelementptr inbounds %struct.Reg, %struct.Reg* %1523, i32 0, i32 0
  %R12.i = bitcast %union.anon* %1524 to i64*
  %1525 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1526 = getelementptr inbounds %struct.GPR, %struct.GPR* %1525, i32 0, i32 27
  %1527 = getelementptr inbounds %struct.Reg, %struct.Reg* %1526, i32 0, i32 0
  %R13.i = bitcast %union.anon* %1527 to i64*
  %1528 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1529 = getelementptr inbounds %struct.GPR, %struct.GPR* %1528, i32 0, i32 29
  %1530 = getelementptr inbounds %struct.Reg, %struct.Reg* %1529, i32 0, i32 0
  %R14.i = bitcast %union.anon* %1530 to i64*
  %1531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1532 = getelementptr inbounds %struct.GPR, %struct.GPR* %1531, i32 0, i32 31
  %1533 = getelementptr inbounds %struct.Reg, %struct.Reg* %1532, i32 0, i32 0
  %R15.i = bitcast %union.anon* %1533 to i64*
  %1534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1535 = getelementptr inbounds %struct.GPR, %struct.GPR* %1534, i32 0, i32 33
  %1536 = getelementptr inbounds %struct.Reg, %struct.Reg* %1535, i32 0, i32 0
  %RIP.i = bitcast %union.anon* %1536 to i64*
  %1537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1538 = getelementptr inbounds %struct.Segments, %struct.Segments* %1537, i32 0, i32 1
  %SS.i = bitcast %union.SegmentSelector* %1538 to i16*
  %1539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1540 = getelementptr inbounds %struct.Segments, %struct.Segments* %1539, i32 0, i32 3
  %ES.i = bitcast %union.SegmentSelector* %1540 to i16*
  %1541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1542 = getelementptr inbounds %struct.Segments, %struct.Segments* %1541, i32 0, i32 5
  %GS.i = bitcast %union.SegmentSelector* %1542 to i16*
  %1543 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1544 = getelementptr inbounds %struct.Segments, %struct.Segments* %1543, i32 0, i32 7
  %FS.i = bitcast %union.SegmentSelector* %1544 to i16*
  %1545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1546 = getelementptr inbounds %struct.Segments, %struct.Segments* %1545, i32 0, i32 9
  %DS.i = bitcast %union.SegmentSelector* %1546 to i16*
  %1547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %1548 = getelementptr inbounds %struct.Segments, %struct.Segments* %1547, i32 0, i32 11
  %CS.i = bitcast %union.SegmentSelector* %1548 to i16*
  %1549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1550 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1549, i32 0, i32 5
  %1551 = getelementptr inbounds %struct.Reg, %struct.Reg* %1550, i32 0, i32 0
  %GS_BASE.i = bitcast %union.anon* %1551 to i64*
  %1552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %1553 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %1552, i32 0, i32 7
  %1554 = getelementptr inbounds %struct.Reg, %struct.Reg* %1553, i32 0, i32 0
  %FS_BASE.i = bitcast %union.anon* %1554 to i64*
  %1555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1556 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1555, i64 0, i64 0
  %YMM0.i = bitcast %union.VectorReg* %1556 to %"class.std::bitset"*
  %1557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1558 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1557, i64 0, i64 1
  %YMM1.i = bitcast %union.VectorReg* %1558 to %"class.std::bitset"*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1560 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1559, i64 0, i64 2
  %YMM2.i = bitcast %union.VectorReg* %1560 to %"class.std::bitset"*
  %1561 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1562 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1561, i64 0, i64 3
  %YMM3.i = bitcast %union.VectorReg* %1562 to %"class.std::bitset"*
  %1563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1564 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1563, i64 0, i64 4
  %YMM4.i = bitcast %union.VectorReg* %1564 to %"class.std::bitset"*
  %1565 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1566 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1565, i64 0, i64 5
  %YMM5.i = bitcast %union.VectorReg* %1566 to %"class.std::bitset"*
  %1567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1568 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1567, i64 0, i64 6
  %YMM6.i = bitcast %union.VectorReg* %1568 to %"class.std::bitset"*
  %1569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1570 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1569, i64 0, i64 7
  %YMM7.i = bitcast %union.VectorReg* %1570 to %"class.std::bitset"*
  %1571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1572 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1571, i64 0, i64 8
  %YMM8.i = bitcast %union.VectorReg* %1572 to %"class.std::bitset"*
  %1573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1574 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1573, i64 0, i64 9
  %YMM9.i = bitcast %union.VectorReg* %1574 to %"class.std::bitset"*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1576 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1575, i64 0, i64 10
  %YMM10.i = bitcast %union.VectorReg* %1576 to %"class.std::bitset"*
  %1577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1578 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1577, i64 0, i64 11
  %YMM11.i = bitcast %union.VectorReg* %1578 to %"class.std::bitset"*
  %1579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1580 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1579, i64 0, i64 12
  %YMM12.i = bitcast %union.VectorReg* %1580 to %"class.std::bitset"*
  %1581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1582 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1581, i64 0, i64 13
  %YMM13.i = bitcast %union.VectorReg* %1582 to %"class.std::bitset"*
  %1583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1584 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1583, i64 0, i64 14
  %YMM14.i = bitcast %union.VectorReg* %1584 to %"class.std::bitset"*
  %1585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1586 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1585, i64 0, i64 15
  %YMM15.i = bitcast %union.VectorReg* %1586 to %"class.std::bitset"*
  %1587 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1588 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1587, i64 0, i64 0
  %XMM0.i = bitcast %union.VectorReg* %1588 to %union.vec128_t*
  %1589 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1590 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1589, i64 0, i64 1
  %XMM1.i = bitcast %union.VectorReg* %1590 to %union.vec128_t*
  %1591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1592 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1591, i64 0, i64 2
  %XMM2.i = bitcast %union.VectorReg* %1592 to %union.vec128_t*
  %1593 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1594 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1593, i64 0, i64 3
  %XMM3.i = bitcast %union.VectorReg* %1594 to %union.vec128_t*
  %1595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1596 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1595, i64 0, i64 4
  %XMM4.i = bitcast %union.VectorReg* %1596 to %union.vec128_t*
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1598 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1597, i64 0, i64 5
  %XMM5.i = bitcast %union.VectorReg* %1598 to %union.vec128_t*
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1600 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1599, i64 0, i64 6
  %XMM6.i = bitcast %union.VectorReg* %1600 to %union.vec128_t*
  %1601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1602 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1601, i64 0, i64 7
  %XMM7.i = bitcast %union.VectorReg* %1602 to %union.vec128_t*
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1604 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1603, i64 0, i64 8
  %XMM8.i = bitcast %union.VectorReg* %1604 to %union.vec128_t*
  %1605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1606 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1605, i64 0, i64 9
  %XMM9.i = bitcast %union.VectorReg* %1606 to %union.vec128_t*
  %1607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1608 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1607, i64 0, i64 10
  %XMM10.i = bitcast %union.VectorReg* %1608 to %union.vec128_t*
  %1609 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1610 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1609, i64 0, i64 11
  %XMM11.i = bitcast %union.VectorReg* %1610 to %union.vec128_t*
  %1611 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1612 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1611, i64 0, i64 12
  %XMM12.i = bitcast %union.VectorReg* %1612 to %union.vec128_t*
  %1613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1614 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1613, i64 0, i64 13
  %XMM13.i = bitcast %union.VectorReg* %1614 to %union.vec128_t*
  %1615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1616 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1615, i64 0, i64 14
  %XMM14.i = bitcast %union.VectorReg* %1616 to %union.vec128_t*
  %1617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %1618 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %1617, i64 0, i64 15
  %XMM15.i = bitcast %union.VectorReg* %1618 to %union.vec128_t*
  %1619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1620 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1619, i32 0, i32 0
  %1621 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1620, i64 0, i64 0
  %ST0.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1621, i32 0, i32 1
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1623 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1622, i32 0, i32 0
  %1624 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1623, i64 0, i64 1
  %ST1.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1624, i32 0, i32 1
  %1625 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1626 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1625, i32 0, i32 0
  %1627 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1626, i64 0, i64 2
  %ST2.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1627, i32 0, i32 1
  %1628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1629 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1628, i32 0, i32 0
  %1630 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1629, i64 0, i64 3
  %ST3.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1630, i32 0, i32 1
  %1631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1632 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1631, i32 0, i32 0
  %1633 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1632, i64 0, i64 4
  %ST4.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1633, i32 0, i32 1
  %1634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1635 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1634, i32 0, i32 0
  %1636 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1635, i64 0, i64 5
  %ST5.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1636, i32 0, i32 1
  %1637 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1638 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1637, i32 0, i32 0
  %1639 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1638, i64 0, i64 6
  %ST6.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1639, i32 0, i32 1
  %1640 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %1641 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %1640, i32 0, i32 0
  %1642 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %1641, i64 0, i64 7
  %ST7.i = getelementptr inbounds %struct.anon.3, %struct.anon.3* %1642, i32 0, i32 1
  %1643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1644 = getelementptr inbounds %struct.MMX, %struct.MMX* %1643, i32 0, i32 0
  %1645 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1644, i64 0, i64 0
  %1646 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1645, i32 0, i32 1
  %1647 = bitcast %union.vec64_t* %1646 to %struct.uint64v1_t*
  %1648 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1647, i32 0, i32 0
  %MM0.i = getelementptr inbounds [1 x i64], [1 x i64]* %1648, i64 0, i64 0
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1650 = getelementptr inbounds %struct.MMX, %struct.MMX* %1649, i32 0, i32 0
  %1651 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1650, i64 0, i64 1
  %1652 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1651, i32 0, i32 1
  %1653 = bitcast %union.vec64_t* %1652 to %struct.uint64v1_t*
  %1654 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1653, i32 0, i32 0
  %MM1.i = getelementptr inbounds [1 x i64], [1 x i64]* %1654, i64 0, i64 0
  %1655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1656 = getelementptr inbounds %struct.MMX, %struct.MMX* %1655, i32 0, i32 0
  %1657 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1656, i64 0, i64 2
  %1658 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1657, i32 0, i32 1
  %1659 = bitcast %union.vec64_t* %1658 to %struct.uint64v1_t*
  %1660 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1659, i32 0, i32 0
  %MM2.i = getelementptr inbounds [1 x i64], [1 x i64]* %1660, i64 0, i64 0
  %1661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1662 = getelementptr inbounds %struct.MMX, %struct.MMX* %1661, i32 0, i32 0
  %1663 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1662, i64 0, i64 3
  %1664 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1663, i32 0, i32 1
  %1665 = bitcast %union.vec64_t* %1664 to %struct.uint64v1_t*
  %1666 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1665, i32 0, i32 0
  %MM3.i = getelementptr inbounds [1 x i64], [1 x i64]* %1666, i64 0, i64 0
  %1667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1668 = getelementptr inbounds %struct.MMX, %struct.MMX* %1667, i32 0, i32 0
  %1669 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1668, i64 0, i64 4
  %1670 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1669, i32 0, i32 1
  %1671 = bitcast %union.vec64_t* %1670 to %struct.uint64v1_t*
  %1672 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1671, i32 0, i32 0
  %MM4.i = getelementptr inbounds [1 x i64], [1 x i64]* %1672, i64 0, i64 0
  %1673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1674 = getelementptr inbounds %struct.MMX, %struct.MMX* %1673, i32 0, i32 0
  %1675 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1674, i64 0, i64 5
  %1676 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1675, i32 0, i32 1
  %1677 = bitcast %union.vec64_t* %1676 to %struct.uint64v1_t*
  %1678 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1677, i32 0, i32 0
  %MM5.i = getelementptr inbounds [1 x i64], [1 x i64]* %1678, i64 0, i64 0
  %1679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1680 = getelementptr inbounds %struct.MMX, %struct.MMX* %1679, i32 0, i32 0
  %1681 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1680, i64 0, i64 6
  %1682 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1681, i32 0, i32 1
  %1683 = bitcast %union.vec64_t* %1682 to %struct.uint64v1_t*
  %1684 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1683, i32 0, i32 0
  %MM6.i = getelementptr inbounds [1 x i64], [1 x i64]* %1684, i64 0, i64 0
  %1685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %1686 = getelementptr inbounds %struct.MMX, %struct.MMX* %1685, i32 0, i32 0
  %1687 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %1686, i64 0, i64 7
  %1688 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %1687, i32 0, i32 1
  %1689 = bitcast %union.vec64_t* %1688 to %struct.uint64v1_t*
  %1690 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %1689, i32 0, i32 0
  %MM7.i = getelementptr inbounds [1 x i64], [1 x i64]* %1690, i64 0, i64 0
  %1691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1691, i32 0, i32 5
  %1692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1692, i32 0, i32 1
  %1693 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1693, i32 0, i32 11
  %1694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1694, i32 0, i32 13
  %1695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1695, i32 0, i32 3
  %1696 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1696, i32 0, i32 9
  %1697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF.i = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %1697, i32 0, i32 7
  store i64* @DR0, i64** %_DR0.i, align 8, !noalias !2505
  store i64* @DR1, i64** %_DR1.i, align 8, !noalias !2505
  store i64* @DR2, i64** %_DR2.i, align 8, !noalias !2505
  store i64* @DR3, i64** %_DR3.i, align 8, !noalias !2505
  store i64* @DR4, i64** %_DR4.i, align 8, !noalias !2505
  store i64* @DR5, i64** %_DR5.i, align 8, !noalias !2505
  store i64* @DR6, i64** %_DR6.i, align 8, !noalias !2505
  store i64* @DR7, i64** %_DR7.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4.i, align 8, !noalias !2505
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8.i, align 8, !noalias !2505
  %1698 = bitcast %"class.std::bitset"* %YMM0.i to double*
  %1699 = load double, double* %1698, !alias.scope !2509, !noalias !2510
  %1700 = load i64, i64* %RSP.i, !alias.scope !2509, !noalias !2510
  %1701 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2505
  %1702 = inttoptr i64 %1700 to i64*
  %1703 = load i64, i64* %1702
  store i64 %1703, i64* %PC.i, !alias.scope !2509, !noalias !2510
  %1704 = add i64 %1700, 8
  store i64 %1704, i64* %RSP.i, !alias.scope !2509, !noalias !2510
  %1705 = call double @sin(double %1699)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0.i, !alias.scope !2509, !noalias !2510
  %1706 = bitcast %"class.std::bitset"* %YMM0.i to double*
  store double %1705, double* %1706, !alias.scope !2509, !noalias !2510
  %1707 = load %struct.Memory*, %struct.Memory** %MEMORY.i, !noalias !2505
  %1708 = bitcast %struct.State** %state.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1708)
  %1709 = bitcast i64* %curr_pc.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1709)
  %1710 = bitcast %struct.Memory** %memory.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1710)
  call void @llvm.lifetime.end(i64 1, i8* %BRANCH_TAKEN.i)
  %1711 = bitcast i64* %SS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1711)
  %1712 = bitcast i64* %ES_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1712)
  %1713 = bitcast i64* %DS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1713)
  %1714 = bitcast i64* %CS_BASE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1714)
  %1715 = bitcast %struct.State** %STATE.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1715)
  %1716 = bitcast %struct.Memory** %MEMORY.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1716)
  %1717 = bitcast i64** %_DR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1717)
  %1718 = bitcast i64** %_DR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1718)
  %1719 = bitcast i64** %_DR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1719)
  %1720 = bitcast i64** %_DR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1720)
  %1721 = bitcast i64** %_DR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1721)
  %1722 = bitcast i64** %_DR5.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1722)
  %1723 = bitcast i64** %_DR6.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1723)
  %1724 = bitcast i64** %_DR7.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1724)
  %1725 = bitcast i64** %CR0.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1725)
  %1726 = bitcast i64** %CR1.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1726)
  %1727 = bitcast i64** %CR2.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1727)
  %1728 = bitcast i64** %CR3.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1728)
  %1729 = bitcast i64** %CR4.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1729)
  %1730 = bitcast i64** %CR8.i to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1730)
  %1731 = bitcast %union.vec128_t* %XMM0 to i8*
  %1732 = load i64, i64* %PC
  %1733 = add i64 %1732, 9
  store i64 %1733, i64* %PC
  %1734 = bitcast i8* %1731 to double*
  %1735 = load double, double* %1734, align 1
  store double %1735, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1736 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1737 = load i64, i64* %PC
  %1738 = add i64 %1737, 9
  store i64 %1738, i64* %PC
  %1739 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1740 = bitcast i8* %1736 to double*
  store double %1739, double* %1740, align 1, !tbaa !2452
  %1741 = getelementptr inbounds i8, i8* %1736, i64 8
  %1742 = bitcast i8* %1741 to double*
  store double 0.000000e+00, double* %1742, align 1, !tbaa !2452
  %1743 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1744 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1745 = load i64, i64* %PC
  %1746 = add i64 %1745, 9
  store i64 %1746, i64* %PC
  %1747 = bitcast i8* %1744 to double*
  %1748 = load double, double* %1747, align 1
  %1749 = getelementptr inbounds i8, i8* %1744, i64 8
  %1750 = bitcast i8* %1749 to i64*
  %1751 = load i64, i64* %1750, align 1
  %1752 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1753 = fmul double %1748, %1752
  %1754 = bitcast i8* %1743 to double*
  store double %1753, double* %1754, align 1, !tbaa !2452
  %1755 = getelementptr inbounds i8, i8* %1743, i64 8
  %1756 = bitcast i8* %1755 to i64*
  store i64 %1751, i64* %1756, align 1, !tbaa !2452
  %1757 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1758 = load i64, i64* %RBP
  %1759 = sub i64 %1758, 112
  %1760 = load i64, i64* %PC
  %1761 = add i64 %1760, 5
  store i64 %1761, i64* %PC
  %1762 = inttoptr i64 %1759 to double*
  %1763 = load double, double* %1762
  %1764 = bitcast i8* %1757 to double*
  store double %1763, double* %1764, align 1, !tbaa !2452
  %1765 = getelementptr inbounds i8, i8* %1757, i64 8
  %1766 = bitcast i8* %1765 to double*
  store double 0.000000e+00, double* %1766, align 1, !tbaa !2452
  %1767 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1768 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1769 = bitcast %union.vec128_t* %XMM0 to i8*
  %1770 = load i64, i64* %PC
  %1771 = add i64 %1770, 4
  store i64 %1771, i64* %PC
  %1772 = bitcast i8* %1768 to double*
  %1773 = load double, double* %1772, align 1
  %1774 = getelementptr inbounds i8, i8* %1768, i64 8
  %1775 = bitcast i8* %1774 to i64*
  %1776 = load i64, i64* %1775, align 1
  %1777 = bitcast i8* %1769 to double*
  %1778 = load double, double* %1777, align 1
  %1779 = fdiv double %1773, %1778
  %1780 = bitcast i8* %1767 to double*
  store double %1779, double* %1780, align 1, !tbaa !2452
  %1781 = getelementptr inbounds i8, i8* %1767, i64 8
  %1782 = bitcast i8* %1781 to i64*
  store i64 %1776, i64* %1782, align 1, !tbaa !2452
  %1783 = bitcast %union.vec128_t* %XMM1 to i8*
  %1784 = load i64, i64* %PC
  %1785 = add i64 %1784, 9
  store i64 %1785, i64* %PC
  %1786 = bitcast i8* %1783 to double*
  %1787 = load double, double* %1786, align 1
  store double %1787, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1788 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1789 = load i64, i64* %RBP
  %1790 = sub i64 %1789, 88
  %1791 = load i64, i64* %PC
  %1792 = add i64 %1791, 5
  store i64 %1792, i64* %PC
  %1793 = inttoptr i64 %1790 to double*
  %1794 = load double, double* %1793
  %1795 = bitcast i8* %1788 to double*
  store double %1794, double* %1795, align 1, !tbaa !2452
  %1796 = getelementptr inbounds i8, i8* %1788, i64 8
  %1797 = bitcast i8* %1796 to double*
  store double 0.000000e+00, double* %1797, align 1, !tbaa !2452
  %1798 = bitcast %union.vec128_t* %XMM0 to i8*
  %1799 = load i64, i64* %PC
  %1800 = add i64 %1799, 9
  store i64 %1800, i64* %PC
  %1801 = bitcast i8* %1798 to double*
  %1802 = load double, double* %1801, align 1
  store double %1802, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %1803 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1804 = load i64, i64* %PC
  %1805 = add i64 %1804, 9
  store i64 %1805, i64* %PC
  %1806 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %1807 = bitcast i8* %1803 to double*
  store double %1806, double* %1807, align 1, !tbaa !2452
  %1808 = getelementptr inbounds i8, i8* %1803, i64 8
  %1809 = bitcast i8* %1808 to double*
  store double 0.000000e+00, double* %1809, align 1, !tbaa !2452
  %1810 = bitcast %union.vec128_t* %XMM1 to i8*
  %1811 = load i64, i64* %PC
  %1812 = add i64 %1811, 9
  store i64 %1812, i64* %PC
  %1813 = bitcast i8* %1810 to double*
  %1814 = load double, double* %1813, align 1
  store double %1814, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %1815 = load i64, i64* %PC
  %1816 = add i64 %1815, 7
  store i64 %1816, i64* %PC
  %1817 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %1818 = zext i32 %1817 to i64
  store i64 %1818, i64* %RAX, align 8, !tbaa !2428
  %1819 = load i64, i64* %RAX
  %1820 = load i64, i64* %PC
  %1821 = add i64 %1820, 3
  store i64 %1821, i64* %PC
  %1822 = trunc i64 %1819 to i32
  %1823 = add i32 1, %1822
  %1824 = zext i32 %1823 to i64
  store i64 %1824, i64* %RAX, align 8, !tbaa !2428
  %1825 = icmp ult i32 %1823, %1822
  %1826 = icmp ult i32 %1823, 1
  %1827 = or i1 %1825, %1826
  %1828 = zext i1 %1827 to i8
  %1829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1828, i8* %1829, align 1, !tbaa !2432
  %1830 = and i32 %1823, 255
  %1831 = call i32 @llvm.ctpop.i32(i32 %1830) #17
  %1832 = trunc i32 %1831 to i8
  %1833 = and i8 %1832, 1
  %1834 = xor i8 %1833, 1
  %1835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1834, i8* %1835, align 1, !tbaa !2446
  %1836 = xor i64 1, %1819
  %1837 = trunc i64 %1836 to i32
  %1838 = xor i32 %1837, %1823
  %1839 = lshr i32 %1838, 4
  %1840 = trunc i32 %1839 to i8
  %1841 = and i8 %1840, 1
  %1842 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1841, i8* %1842, align 1, !tbaa !2447
  %1843 = icmp eq i32 %1823, 0
  %1844 = zext i1 %1843 to i8
  %1845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1844, i8* %1845, align 1, !tbaa !2448
  %1846 = lshr i32 %1823, 31
  %1847 = trunc i32 %1846 to i8
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1847, i8* %1848, align 1, !tbaa !2449
  %1849 = lshr i32 %1822, 31
  %1850 = xor i32 %1846, %1849
  %1851 = add nuw nsw i32 %1850, %1846
  %1852 = icmp eq i32 %1851, 2
  %1853 = zext i1 %1852 to i8
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1853, i8* %1854, align 1, !tbaa !2450
  %1855 = load i32, i32* %EAX
  %1856 = zext i32 %1855 to i64
  %1857 = load i64, i64* %PC
  %1858 = add i64 %1857, 7
  store i64 %1858, i64* %PC
  store i32 %1855, i32* bitcast (%itercount_type* @itercount to i32*)
  %1859 = load i64, i64* %PC
  %1860 = sub i64 %1859, 562
  %1861 = load i64, i64* %PC
  %1862 = add i64 %1861, 5
  store i64 %1862, i64* %PC
  %1863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1860, i64* %1863, align 8, !tbaa !2428
  br label %block_400919

block_400948:                                     ; preds = %block_400937
  store i64 4, i64* %RDI, align 8, !tbaa !2428
  %1864 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1865 = load i64, i64* %PC
  %1866 = add i64 %1865, 8
  store i64 %1866, i64* %PC
  %1867 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 112) to double*)
  %1868 = bitcast i8* %1864 to double*
  store double %1867, double* %1868, align 1, !tbaa !2452
  %1869 = getelementptr inbounds i8, i8* %1864, i64 8
  %1870 = bitcast i8* %1869 to double*
  store double 0.000000e+00, double* %1870, align 1, !tbaa !2452
  %1871 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1872 = load i64, i64* %PC
  %1873 = add i64 %1872, 9
  store i64 %1873, i64* %PC
  %1874 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 88) to double*)
  %1875 = bitcast i8* %1871 to double*
  store double %1874, double* %1875, align 1, !tbaa !2452
  %1876 = getelementptr inbounds i8, i8* %1871, i64 8
  %1877 = bitcast i8* %1876 to double*
  store double 0.000000e+00, double* %1877, align 1, !tbaa !2452
  %1878 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1879 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %1880 = bitcast %union.vec128_t* %XMM0 to i8*
  %1881 = load i64, i64* %PC
  %1882 = add i64 %1881, 4
  store i64 %1882, i64* %PC
  %1883 = bitcast i8* %1879 to double*
  %1884 = load double, double* %1883, align 1
  %1885 = getelementptr inbounds i8, i8* %1879, i64 8
  %1886 = bitcast i8* %1885 to i64*
  %1887 = load i64, i64* %1886, align 1
  %1888 = bitcast i8* %1880 to double*
  %1889 = load double, double* %1888, align 1
  %1890 = fdiv double %1884, %1889
  %1891 = bitcast i8* %1878 to double*
  store double %1890, double* %1891, align 1, !tbaa !2452
  %1892 = getelementptr inbounds i8, i8* %1878, i64 8
  %1893 = bitcast i8* %1892 to i64*
  store i64 %1887, i64* %1893, align 1, !tbaa !2452
  %1894 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1895 = bitcast %union.vec128_t* %XMM1 to i8*
  %1896 = load i64, i64* %PC
  %1897 = add i64 %1896, 3
  store i64 %1897, i64* %PC
  %1898 = bitcast i8* %1895 to <2 x i32>*
  %1899 = load <2 x i32>, <2 x i32>* %1898, align 1
  %1900 = getelementptr inbounds i8, i8* %1895, i64 8
  %1901 = bitcast i8* %1900 to <2 x i32>*
  %1902 = load <2 x i32>, <2 x i32>* %1901, align 1
  %1903 = extractelement <2 x i32> %1899, i32 0
  %1904 = bitcast i8* %1894 to i32*
  store i32 %1903, i32* %1904, align 1, !tbaa !2455
  %1905 = extractelement <2 x i32> %1899, i32 1
  %1906 = getelementptr inbounds i8, i8* %1894, i64 4
  %1907 = bitcast i8* %1906 to i32*
  store i32 %1905, i32* %1907, align 1, !tbaa !2455
  %1908 = extractelement <2 x i32> %1902, i32 0
  %1909 = getelementptr inbounds i8, i8* %1894, i64 8
  %1910 = bitcast i8* %1909 to i32*
  store i32 %1908, i32* %1910, align 1, !tbaa !2455
  %1911 = extractelement <2 x i32> %1902, i32 1
  %1912 = getelementptr inbounds i8, i8* %1894, i64 12
  %1913 = bitcast i8* %1912 to i32*
  store i32 %1911, i32* %1913, align 1, !tbaa !2455
  %1914 = load i64, i64* %PC
  %1915 = add i64 %1914, 1531
  %1916 = load i64, i64* %PC
  %1917 = add i64 %1916, 5
  %1918 = load i64, i64* %PC
  %1919 = add i64 %1918, 5
  store i64 %1919, i64* %PC
  %1920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %1921 = load i64, i64* %1920, align 8, !tbaa !2428
  %1922 = add i64 %1921, -8
  %1923 = inttoptr i64 %1922 to i64*
  store i64 %1917, i64* %1923
  store i64 %1922, i64* %1920, align 8, !tbaa !2428
  %1924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1915, i64* %1924, align 8, !tbaa !2428
  %1925 = load i64, i64* %PC
  %1926 = call %struct.Memory* @sub_400f60_trace_line(%struct.State* %0, i64 %1925, %struct.Memory* %MEMORY.2)
  %1927 = load i64, i64* %PC
  %1928 = add i64 %1927, 10
  store i64 %1928, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528), i64* %RCX, align 8, !tbaa !2428
  %1929 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %1930 = load i64, i64* %PC
  %1931 = add i64 %1930, 9
  store i64 %1931, i64* %PC
  %1932 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 520) to double*)
  %1933 = bitcast i8* %1929 to double*
  store double %1932, double* %1933, align 1, !tbaa !2452
  %1934 = getelementptr inbounds i8, i8* %1929, i64 8
  %1935 = bitcast i8* %1934 to double*
  store double 0.000000e+00, double* %1935, align 1, !tbaa !2452
  %1936 = load i64, i64* %PC
  %1937 = add i64 %1936, 9
  store i64 %1937, i64* %PC
  %1938 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %1939 = sext i16 %1938 to i64
  store i64 %1939, i64* %RDX, align 8, !tbaa !2428
  %1940 = load i64, i64* %RDX
  %1941 = load i64, i64* %PC
  %1942 = add i64 %1941, 4
  store i64 %1942, i64* %PC
  %1943 = shl i64 %1940, 3
  %1944 = icmp slt i64 %1943, 0
  %1945 = shl i64 %1943, 1
  store i64 %1945, i64* %RDX, align 8, !tbaa !2428
  %1946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %1947 = zext i1 %1944 to i8
  store i8 %1947, i8* %1946, align 1, !tbaa !2451
  %1948 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %1949 = trunc i64 %1945 to i32
  %1950 = and i32 %1949, 254
  %1951 = call i32 @llvm.ctpop.i32(i32 %1950) #17
  %1952 = trunc i32 %1951 to i8
  %1953 = and i8 %1952, 1
  %1954 = xor i8 %1953, 1
  store i8 %1954, i8* %1948, align 1, !tbaa !2451
  %1955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1955, align 1, !tbaa !2451
  %1956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1957 = icmp eq i64 %1945, 0
  %1958 = zext i1 %1957 to i8
  store i8 %1958, i8* %1956, align 1, !tbaa !2451
  %1959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %1960 = lshr i64 %1945, 63
  %1961 = trunc i64 %1960 to i8
  store i8 %1961, i8* %1959, align 1, !tbaa !2451
  %1962 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %1962, align 1, !tbaa !2451
  %1963 = load i64, i64* %RCX
  %1964 = load i64, i64* %PC
  %1965 = add i64 %1964, 3
  store i64 %1965, i64* %PC
  store i64 %1963, i64* %RSI, align 8, !tbaa !2428
  %1966 = load i64, i64* %RSI
  %1967 = load i64, i64* %RDX
  %1968 = load i64, i64* %PC
  %1969 = add i64 %1968, 3
  store i64 %1969, i64* %PC
  %1970 = add i64 %1967, %1966
  store i64 %1970, i64* %RSI, align 8, !tbaa !2428
  %1971 = icmp ult i64 %1970, %1966
  %1972 = icmp ult i64 %1970, %1967
  %1973 = or i1 %1971, %1972
  %1974 = zext i1 %1973 to i8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1974, i8* %1975, align 1, !tbaa !2432
  %1976 = trunc i64 %1970 to i32
  %1977 = and i32 %1976, 255
  %1978 = call i32 @llvm.ctpop.i32(i32 %1977) #17
  %1979 = trunc i32 %1978 to i8
  %1980 = and i8 %1979, 1
  %1981 = xor i8 %1980, 1
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1981, i8* %1982, align 1, !tbaa !2446
  %1983 = xor i64 %1967, %1966
  %1984 = xor i64 %1983, %1970
  %1985 = lshr i64 %1984, 4
  %1986 = trunc i64 %1985 to i8
  %1987 = and i8 %1986, 1
  %1988 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1987, i8* %1988, align 1, !tbaa !2447
  %1989 = icmp eq i64 %1970, 0
  %1990 = zext i1 %1989 to i8
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1990, i8* %1991, align 1, !tbaa !2448
  %1992 = lshr i64 %1970, 63
  %1993 = trunc i64 %1992 to i8
  %1994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1993, i8* %1994, align 1, !tbaa !2449
  %1995 = lshr i64 %1966, 63
  %1996 = lshr i64 %1967, 63
  %1997 = xor i64 %1992, %1995
  %1998 = xor i64 %1992, %1996
  %1999 = add nuw nsw i64 %1997, %1998
  %2000 = icmp eq i64 %1999, 2
  %2001 = zext i1 %2000 to i8
  %2002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2001, i8* %2002, align 1, !tbaa !2450
  %2003 = load i64, i64* %RSI
  %2004 = bitcast %union.vec128_t* %XMM0 to i8*
  %2005 = load i64, i64* %PC
  %2006 = add i64 %2005, 4
  store i64 %2006, i64* %PC
  %2007 = bitcast i8* %2004 to double*
  %2008 = load double, double* %2007, align 1
  %2009 = inttoptr i64 %2003 to double*
  store double %2008, double* %2009
  %2010 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2011 = load i64, i64* %PC
  %2012 = add i64 %2011, 9
  store i64 %2012, i64* %PC
  %2013 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 560) to double*)
  %2014 = bitcast i8* %2010 to double*
  store double %2013, double* %2014, align 1, !tbaa !2452
  %2015 = getelementptr inbounds i8, i8* %2010, i64 8
  %2016 = bitcast i8* %2015 to double*
  store double 0.000000e+00, double* %2016, align 1, !tbaa !2452
  %2017 = load i64, i64* %PC
  %2018 = add i64 %2017, 9
  store i64 %2018, i64* %PC
  %2019 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %2020 = sext i16 %2019 to i64
  store i64 %2020, i64* %RDX, align 8, !tbaa !2428
  %2021 = load i64, i64* %RDX
  %2022 = load i64, i64* %PC
  %2023 = add i64 %2022, 4
  store i64 %2023, i64* %PC
  %2024 = shl i64 %2021, 3
  %2025 = icmp slt i64 %2024, 0
  %2026 = shl i64 %2024, 1
  store i64 %2026, i64* %RDX, align 8, !tbaa !2428
  %2027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %2028 = zext i1 %2025 to i8
  store i8 %2028, i8* %2027, align 1, !tbaa !2451
  %2029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %2030 = trunc i64 %2026 to i32
  %2031 = and i32 %2030, 254
  %2032 = call i32 @llvm.ctpop.i32(i32 %2031) #17
  %2033 = trunc i32 %2032 to i8
  %2034 = and i8 %2033, 1
  %2035 = xor i8 %2034, 1
  store i8 %2035, i8* %2029, align 1, !tbaa !2451
  %2036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2036, align 1, !tbaa !2451
  %2037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2038 = icmp eq i64 %2026, 0
  %2039 = zext i1 %2038 to i8
  store i8 %2039, i8* %2037, align 1, !tbaa !2451
  %2040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2041 = lshr i64 %2026, 63
  %2042 = trunc i64 %2041 to i8
  store i8 %2042, i8* %2040, align 1, !tbaa !2451
  %2043 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2043, align 1, !tbaa !2451
  %2044 = load i64, i64* %RCX
  %2045 = load i64, i64* %RDX
  %2046 = load i64, i64* %PC
  %2047 = add i64 %2046, 3
  store i64 %2047, i64* %PC
  %2048 = add i64 %2045, %2044
  store i64 %2048, i64* %RCX, align 8, !tbaa !2428
  %2049 = icmp ult i64 %2048, %2044
  %2050 = icmp ult i64 %2048, %2045
  %2051 = or i1 %2049, %2050
  %2052 = zext i1 %2051 to i8
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2052, i8* %2053, align 1, !tbaa !2432
  %2054 = trunc i64 %2048 to i32
  %2055 = and i32 %2054, 255
  %2056 = call i32 @llvm.ctpop.i32(i32 %2055) #17
  %2057 = trunc i32 %2056 to i8
  %2058 = and i8 %2057, 1
  %2059 = xor i8 %2058, 1
  %2060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2059, i8* %2060, align 1, !tbaa !2446
  %2061 = xor i64 %2045, %2044
  %2062 = xor i64 %2061, %2048
  %2063 = lshr i64 %2062, 4
  %2064 = trunc i64 %2063 to i8
  %2065 = and i8 %2064, 1
  %2066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2065, i8* %2066, align 1, !tbaa !2447
  %2067 = icmp eq i64 %2048, 0
  %2068 = zext i1 %2067 to i8
  %2069 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2068, i8* %2069, align 1, !tbaa !2448
  %2070 = lshr i64 %2048, 63
  %2071 = trunc i64 %2070 to i8
  %2072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2071, i8* %2072, align 1, !tbaa !2449
  %2073 = lshr i64 %2044, 63
  %2074 = lshr i64 %2045, 63
  %2075 = xor i64 %2070, %2073
  %2076 = xor i64 %2070, %2074
  %2077 = add nuw nsw i64 %2075, %2076
  %2078 = icmp eq i64 %2077, 2
  %2079 = zext i1 %2078 to i8
  %2080 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2079, i8* %2080, align 1, !tbaa !2450
  %2081 = load i64, i64* %RCX
  %2082 = add i64 %2081, 8
  %2083 = bitcast %union.vec128_t* %XMM0 to i8*
  %2084 = load i64, i64* %PC
  %2085 = add i64 %2084, 5
  store i64 %2085, i64* %PC
  %2086 = bitcast i8* %2083 to double*
  %2087 = load double, double* %2086, align 1
  %2088 = inttoptr i64 %2082 to double*
  store double %2087, double* %2088
  %2089 = load i64, i64* %RBP
  %2090 = sub i64 %2089, 72
  %2091 = load i32, i32* %EAX
  %2092 = zext i32 %2091 to i64
  %2093 = load i64, i64* %PC
  %2094 = add i64 %2093, 3
  store i64 %2094, i64* %PC
  %2095 = inttoptr i64 %2090 to i32*
  store i32 %2091, i32* %2095
  %2096 = load i64, i64* %PC
  %2097 = add i64 %2096, 8
  store i64 %2097, i64* %PC
  %2098 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  store i16 %2098, i16* %AX, align 2, !tbaa !2511
  %2099 = load i16, i16* %AX
  %2100 = zext i16 %2099 to i64
  %2101 = load i64, i64* %PC
  %2102 = add i64 %2101, 4
  store i64 %2102, i64* %PC
  %2103 = add i16 1, %2099
  store i16 %2103, i16* %AX, align 2, !tbaa !2511
  %2104 = icmp ult i16 %2103, %2099
  %2105 = icmp ult i16 %2103, 1
  %2106 = or i1 %2104, %2105
  %2107 = zext i1 %2106 to i8
  %2108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2107, i8* %2108, align 1, !tbaa !2432
  %2109 = and i16 %2103, 255
  %2110 = zext i16 %2109 to i32
  %2111 = call i32 @llvm.ctpop.i32(i32 %2110) #17
  %2112 = trunc i32 %2111 to i8
  %2113 = and i8 %2112, 1
  %2114 = xor i8 %2113, 1
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2114, i8* %2115, align 1, !tbaa !2446
  %2116 = xor i64 1, %2100
  %2117 = trunc i64 %2116 to i16
  %2118 = xor i16 %2117, %2103
  %2119 = lshr i16 %2118, 4
  %2120 = trunc i16 %2119 to i8
  %2121 = and i8 %2120, 1
  %2122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2121, i8* %2122, align 1, !tbaa !2447
  %2123 = icmp eq i16 %2103, 0
  %2124 = zext i1 %2123 to i8
  %2125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2124, i8* %2125, align 1, !tbaa !2448
  %2126 = lshr i16 %2103, 15
  %2127 = trunc i16 %2126 to i8
  %2128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2127, i8* %2128, align 1, !tbaa !2449
  %2129 = lshr i16 %2099, 15
  %2130 = xor i16 %2126, %2129
  %2131 = add nuw nsw i16 %2130, %2126
  %2132 = icmp eq i16 %2131, 2
  %2133 = zext i1 %2132 to i8
  %2134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2133, i8* %2134, align 1, !tbaa !2450
  %2135 = load i16, i16* %AX
  %2136 = zext i16 %2135 to i64
  %2137 = load i64, i64* %PC
  %2138 = add i64 %2137, 8
  store i64 %2138, i64* %PC
  store i16 %2135, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %2139 = load i64, i64* %PC
  %2140 = sub i64 %2139, 146
  %2141 = load i64, i64* %PC
  %2142 = add i64 %2141, 5
  store i64 %2142, i64* %PC
  %2143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2140, i64* %2143, align 8, !tbaa !2428
  br label %block_400937

block_400f47:                                     ; preds = %block_400f30, %block_400ef2
  %MEMORY.1 = phi %struct.Memory* [ %3018, %block_400f30 ], [ %2430, %block_400ef2 ]
  %2144 = load i64, i64* %RAX
  %2145 = load i32, i32* %EAX
  %2146 = zext i32 %2145 to i64
  %2147 = load i64, i64* %PC
  %2148 = add i64 %2147, 2
  store i64 %2148, i64* %PC
  %2149 = xor i64 %2146, %2144
  %2150 = trunc i64 %2149 to i32
  %2151 = and i64 %2149, 4294967295
  store i64 %2151, i64* %RAX, align 8, !tbaa !2428
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2152, align 1, !tbaa !2432
  %2153 = and i32 %2150, 255
  %2154 = call i32 @llvm.ctpop.i32(i32 %2153) #17
  %2155 = trunc i32 %2154 to i8
  %2156 = and i8 %2155, 1
  %2157 = xor i8 %2156, 1
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2157, i8* %2158, align 1, !tbaa !2446
  %2159 = icmp eq i32 %2150, 0
  %2160 = zext i1 %2159 to i8
  %2161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2160, i8* %2161, align 1, !tbaa !2448
  %2162 = lshr i32 %2150, 31
  %2163 = trunc i32 %2162 to i8
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2163, i8* %2164, align 1, !tbaa !2449
  %2165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %2165, align 1, !tbaa !2450
  %2166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2166, align 1, !tbaa !2447
  %2167 = load i64, i64* %RSP
  %2168 = load i64, i64* %PC
  %2169 = add i64 %2168, 7
  store i64 %2169, i64* %PC
  %2170 = add i64 192, %2167
  store i64 %2170, i64* %RSP, align 8, !tbaa !2428
  %2171 = icmp ult i64 %2170, %2167
  %2172 = icmp ult i64 %2170, 192
  %2173 = or i1 %2171, %2172
  %2174 = zext i1 %2173 to i8
  %2175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2174, i8* %2175, align 1, !tbaa !2432
  %2176 = trunc i64 %2170 to i32
  %2177 = and i32 %2176, 255
  %2178 = call i32 @llvm.ctpop.i32(i32 %2177) #17
  %2179 = trunc i32 %2178 to i8
  %2180 = and i8 %2179, 1
  %2181 = xor i8 %2180, 1
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2181, i8* %2182, align 1, !tbaa !2446
  %2183 = xor i64 192, %2167
  %2184 = xor i64 %2183, %2170
  %2185 = lshr i64 %2184, 4
  %2186 = trunc i64 %2185 to i8
  %2187 = and i8 %2186, 1
  %2188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2187, i8* %2188, align 1, !tbaa !2447
  %2189 = icmp eq i64 %2170, 0
  %2190 = zext i1 %2189 to i8
  %2191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2190, i8* %2191, align 1, !tbaa !2448
  %2192 = lshr i64 %2170, 63
  %2193 = trunc i64 %2192 to i8
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2193, i8* %2194, align 1, !tbaa !2449
  %2195 = lshr i64 %2167, 63
  %2196 = xor i64 %2192, %2195
  %2197 = add nuw nsw i64 %2196, %2192
  %2198 = icmp eq i64 %2197, 2
  %2199 = zext i1 %2198 to i8
  %2200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2199, i8* %2200, align 1, !tbaa !2450
  %2201 = load i64, i64* %PC
  %2202 = add i64 %2201, 1
  store i64 %2202, i64* %PC
  %2203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2204 = load i64, i64* %2203, align 8, !tbaa !2428
  %2205 = add i64 %2204, 8
  %2206 = inttoptr i64 %2204 to i64*
  %2207 = load i64, i64* %2206
  store i64 %2207, i64* %RBP, align 8, !tbaa !2428
  store i64 %2205, i64* %2203, align 8, !tbaa !2428
  %2208 = load i64, i64* %PC
  %2209 = add i64 %2208, 1
  store i64 %2209, i64* %PC
  %2210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2212 = load i64, i64* %2211, align 8, !tbaa !2428
  %2213 = inttoptr i64 %2212 to i64*
  %2214 = load i64, i64* %2213
  store i64 %2214, i64* %2210, align 8, !tbaa !2428
  %2215 = add i64 %2212, 8
  store i64 %2215, i64* %2211, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.1

block_400ebe:                                     ; preds = %block_400e00
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 230), i64* %RDI, align 8, !tbaa !2428
  %2216 = load i64, i64* %PC
  %2217 = add i64 %2216, 2
  store i64 %2217, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %2218 = load i64, i64* %PC
  %2219 = sub i64 %2218, 2298
  %2220 = load i64, i64* %PC
  %2221 = add i64 %2220, 5
  %2222 = load i64, i64* %PC
  %2223 = add i64 %2222, 5
  store i64 %2223, i64* %PC
  %2224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2225 = load i64, i64* %2224, align 8, !tbaa !2428
  %2226 = add i64 %2225, -8
  %2227 = inttoptr i64 %2226 to i64*
  store i64 %2221, i64* %2227
  store i64 %2226, i64* %2224, align 8, !tbaa !2428
  %2228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2219, i64* %2228, align 8, !tbaa !2428
  %2229 = load i64, i64* %PC
  %2230 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %2229, %struct.Memory* %MEMORY.7)
  %2231 = load i64, i64* %RBP
  %2232 = sub i64 %2231, 184
  %2233 = load i32, i32* %EAX
  %2234 = zext i32 %2233 to i64
  %2235 = load i64, i64* %PC
  %2236 = add i64 %2235, 6
  store i64 %2236, i64* %PC
  %2237 = inttoptr i64 %2232 to i32*
  store i32 %2233, i32* %2237
  br label %block_400ed5

block_400ee8:                                     ; preds = %block_400d1f
  %2238 = load i64, i64* %RBP
  %2239 = sub i64 %2238, 32
  %2240 = load i64, i64* %PC
  %2241 = add i64 %2240, 4
  store i64 %2241, i64* %PC
  %2242 = inttoptr i64 %2239 to i32*
  %2243 = load i32, i32* %2242
  %2244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %2244, align 1, !tbaa !2432
  %2245 = and i32 %2243, 255
  %2246 = call i32 @llvm.ctpop.i32(i32 %2245) #17
  %2247 = trunc i32 %2246 to i8
  %2248 = and i8 %2247, 1
  %2249 = xor i8 %2248, 1
  %2250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2249, i8* %2250, align 1, !tbaa !2446
  %2251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2251, align 1, !tbaa !2447
  %2252 = icmp eq i32 %2243, 0
  %2253 = zext i1 %2252 to i8
  %2254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2253, i8* %2254, align 1, !tbaa !2448
  %2255 = lshr i32 %2243, 31
  %2256 = trunc i32 %2255 to i8
  %2257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2256, i8* %2257, align 1, !tbaa !2449
  %2258 = lshr i32 %2243, 31
  %2259 = xor i32 %2255, %2258
  %2260 = add nuw nsw i32 %2259, %2258
  %2261 = icmp eq i32 %2260, 2
  %2262 = zext i1 %2261 to i8
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2262, i8* %2263, align 1, !tbaa !2450
  %2264 = load i64, i64* %PC
  %2265 = add i64 %2264, 68
  %2266 = load i64, i64* %PC
  %2267 = add i64 %2266, 6
  %2268 = load i64, i64* %PC
  %2269 = add i64 %2268, 6
  store i64 %2269, i64* %PC
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2271 = load i8, i8* %2270, align 1, !tbaa !2448
  %2272 = icmp ne i8 %2271, 0
  %2273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2274 = load i8, i8* %2273, align 1, !tbaa !2449
  %2275 = icmp ne i8 %2274, 0
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2277 = load i8, i8* %2276, align 1, !tbaa !2450
  %2278 = icmp ne i8 %2277, 0
  %2279 = xor i1 %2275, %2278
  %2280 = or i1 %2272, %2279
  %2281 = zext i1 %2280 to i8
  store i8 %2281, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2283 = select i1 %2280, i64 %2265, i64 %2267
  store i64 %2283, i64* %2282, align 8, !tbaa !2428
  %2284 = load i8, i8* %BRANCH_TAKEN
  %2285 = icmp eq i8 %2284, 1
  %2286 = load i64, i64* %PC
  %2287 = add i64 %2286, 10
  store i64 %2287, i64* %PC
  br i1 %2285, label %block_400f30, label %block_400ef2

block_400937:                                     ; preds = %block_40092d, %block_400948
  %MEMORY.2 = phi %struct.Memory* [ %MEMORY.6, %block_40092d ], [ %1926, %block_400948 ]
  %2288 = load i64, i64* %PC
  %2289 = add i64 %2288, 8
  store i64 %2289, i64* %PC
  %2290 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  %2291 = sext i16 %2290 to i64
  %2292 = and i64 %2291, 4294967295
  store i64 %2292, i64* %RAX, align 8, !tbaa !2428
  %2293 = load i32, i32* %EAX
  %2294 = zext i32 %2293 to i64
  %2295 = load i64, i64* %PC
  %2296 = add i64 %2295, 3
  store i64 %2296, i64* %PC
  %2297 = sub i32 %2293, 1
  %2298 = icmp ult i32 %2293, 1
  %2299 = zext i1 %2298 to i8
  %2300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2299, i8* %2300, align 1, !tbaa !2432
  %2301 = and i32 %2297, 255
  %2302 = call i32 @llvm.ctpop.i32(i32 %2301) #17
  %2303 = trunc i32 %2302 to i8
  %2304 = and i8 %2303, 1
  %2305 = xor i8 %2304, 1
  %2306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2305, i8* %2306, align 1, !tbaa !2446
  %2307 = xor i64 1, %2294
  %2308 = trunc i64 %2307 to i32
  %2309 = xor i32 %2308, %2297
  %2310 = lshr i32 %2309, 4
  %2311 = trunc i32 %2310 to i8
  %2312 = and i8 %2311, 1
  %2313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2312, i8* %2313, align 1, !tbaa !2447
  %2314 = icmp eq i32 %2297, 0
  %2315 = zext i1 %2314 to i8
  %2316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2315, i8* %2316, align 1, !tbaa !2448
  %2317 = lshr i32 %2297, 31
  %2318 = trunc i32 %2317 to i8
  %2319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2318, i8* %2319, align 1, !tbaa !2449
  %2320 = lshr i32 %2293, 31
  %2321 = xor i32 %2317, %2320
  %2322 = add nuw nsw i32 %2321, %2320
  %2323 = icmp eq i32 %2322, 2
  %2324 = zext i1 %2323 to i8
  %2325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2324, i8* %2325, align 1, !tbaa !2450
  %2326 = load i64, i64* %PC
  %2327 = add i64 %2326, 140
  %2328 = load i64, i64* %PC
  %2329 = add i64 %2328, 6
  %2330 = load i64, i64* %PC
  %2331 = add i64 %2330, 6
  store i64 %2331, i64* %PC
  %2332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2333 = load i8, i8* %2332, align 1, !tbaa !2448
  %2334 = icmp eq i8 %2333, 0
  %2335 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2336 = load i8, i8* %2335, align 1, !tbaa !2449
  %2337 = icmp ne i8 %2336, 0
  %2338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2339 = load i8, i8* %2338, align 1, !tbaa !2450
  %2340 = icmp ne i8 %2339, 0
  %2341 = xor i1 %2337, %2340
  %2342 = xor i1 %2341, true
  %2343 = and i1 %2334, %2342
  %2344 = zext i1 %2343 to i8
  store i8 %2344, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %2345 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2346 = select i1 %2343, i64 %2327, i64 %2329
  store i64 %2346, i64* %2345, align 8, !tbaa !2428
  %2347 = load i8, i8* %BRANCH_TAKEN
  %2348 = icmp eq i8 %2347, 1
  %2349 = load i64, i64* %PC
  %2350 = add i64 %2349, 5
  store i64 %2350, i64* %PC
  br i1 %2348, label %block_4009ce, label %block_400948

block_400ef2:                                     ; preds = %block_400ee8
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 742), i64* %RDI, align 8, !tbaa !2428
  %2351 = load i64, i64* %PC
  %2352 = add i64 %2351, 10
  store i64 %2352, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 231), i64* %RAX, align 8, !tbaa !2428
  %2353 = load i64, i64* %PC
  %2354 = add i64 %2353, 10
  store i64 %2354, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 740), i64* %RCX, align 8, !tbaa !2428
  %2355 = load i64, i64* %RBP
  %2356 = sub i64 %2355, 32
  %2357 = load i64, i64* %PC
  %2358 = add i64 %2357, 3
  store i64 %2358, i64* %PC
  %2359 = inttoptr i64 %2356 to i32*
  %2360 = load i32, i32* %2359
  %2361 = zext i32 %2360 to i64
  store i64 %2361, i64* %RSI, align 8, !tbaa !2428
  %2362 = load i64, i64* %RBP
  %2363 = sub i64 %2362, 32
  %2364 = load i64, i64* %PC
  %2365 = add i64 %2364, 4
  store i64 %2365, i64* %PC
  %2366 = inttoptr i64 %2363 to i32*
  %2367 = load i32, i32* %2366
  %2368 = sub i32 %2367, 1
  %2369 = icmp ult i32 %2367, 1
  %2370 = zext i1 %2369 to i8
  %2371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2370, i8* %2371, align 1, !tbaa !2432
  %2372 = and i32 %2368, 255
  %2373 = call i32 @llvm.ctpop.i32(i32 %2372) #17
  %2374 = trunc i32 %2373 to i8
  %2375 = and i8 %2374, 1
  %2376 = xor i8 %2375, 1
  %2377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2376, i8* %2377, align 1, !tbaa !2446
  %2378 = xor i32 %2367, 1
  %2379 = xor i32 %2378, %2368
  %2380 = lshr i32 %2379, 4
  %2381 = trunc i32 %2380 to i8
  %2382 = and i8 %2381, 1
  %2383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2382, i8* %2383, align 1, !tbaa !2447
  %2384 = icmp eq i32 %2368, 0
  %2385 = zext i1 %2384 to i8
  %2386 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2385, i8* %2386, align 1, !tbaa !2448
  %2387 = lshr i32 %2368, 31
  %2388 = trunc i32 %2387 to i8
  %2389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2388, i8* %2389, align 1, !tbaa !2449
  %2390 = lshr i32 %2367, 31
  %2391 = xor i32 %2387, %2390
  %2392 = add nuw nsw i32 %2391, %2390
  %2393 = icmp eq i32 %2392, 2
  %2394 = zext i1 %2393 to i8
  %2395 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2394, i8* %2395, align 1, !tbaa !2450
  %2396 = load i64, i64* %RCX
  %2397 = load i64, i64* %PC
  %2398 = add i64 %2397, 4
  store i64 %2398, i64* %PC
  %2399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2400 = load i8, i8* %2399, align 1, !tbaa !2448
  %2401 = icmp eq i8 %2400, 0
  %2402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2403 = load i8, i8* %2402, align 1, !tbaa !2449
  %2404 = icmp ne i8 %2403, 0
  %2405 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2406 = load i8, i8* %2405, align 1, !tbaa !2450
  %2407 = icmp ne i8 %2406, 0
  %2408 = xor i1 %2404, %2407
  %2409 = xor i1 %2408, true
  %2410 = and i1 %2401, %2409
  %2411 = load i64, i64* %RAX, align 8, !tbaa !2428
  %2412 = select i1 %2410, i64 %2396, i64 %2411
  store i64 %2412, i64* %RAX, align 8, !tbaa !2428
  %2413 = load i64, i64* %RAX
  %2414 = load i64, i64* %PC
  %2415 = add i64 %2414, 3
  store i64 %2415, i64* %PC
  store i64 %2413, i64* %RDX, align 8, !tbaa !2428
  %2416 = load i64, i64* %PC
  %2417 = add i64 %2416, 2
  store i64 %2417, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %2418 = load i64, i64* %PC
  %2419 = sub i64 %2418, 2384
  %2420 = load i64, i64* %PC
  %2421 = add i64 %2420, 5
  %2422 = load i64, i64* %PC
  %2423 = add i64 %2422, 5
  store i64 %2423, i64* %PC
  %2424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2425 = load i64, i64* %2424, align 8, !tbaa !2428
  %2426 = add i64 %2425, -8
  %2427 = inttoptr i64 %2426 to i64*
  store i64 %2421, i64* %2427
  store i64 %2426, i64* %2424, align 8, !tbaa !2428
  %2428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2419, i64* %2428, align 8, !tbaa !2428
  %2429 = load i64, i64* %PC
  %2430 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %2429, %struct.Memory* %MEMORY.3)
  %2431 = load i64, i64* %RBP
  %2432 = sub i64 %2431, 188
  %2433 = load i32, i32* %EAX
  %2434 = zext i32 %2433 to i64
  %2435 = load i64, i64* %PC
  %2436 = add i64 %2435, 6
  store i64 %2436, i64* %PC
  %2437 = inttoptr i64 %2432 to i32*
  store i32 %2433, i32* %2437
  %2438 = load i64, i64* %PC
  %2439 = add i64 %2438, 28
  %2440 = load i64, i64* %PC
  %2441 = add i64 %2440, 5
  store i64 %2441, i64* %PC
  %2442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2439, i64* %2442, align 8, !tbaa !2428
  br label %block_400f47

block_400b50:                                     ; preds = %block_400919
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDI, align 8, !tbaa !2428
  %2443 = load i64, i64* %PC
  %2444 = add i64 %2443, 10
  store i64 %2444, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %2445 = load i64, i64* %PC
  %2446 = add i64 %2445, 10
  store i64 %2446, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 439), i64* %RDX, align 8, !tbaa !2428
  %2447 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2448 = load i64, i64* %PC
  %2449 = add i64 %2448, 9
  store i64 %2449, i64* %PC
  %2450 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 528) to double*)
  %2451 = bitcast i8* %2447 to double*
  store double %2450, double* %2451, align 1, !tbaa !2452
  %2452 = getelementptr inbounds i8, i8* %2447, i64 8
  %2453 = bitcast i8* %2452 to double*
  store double 0.000000e+00, double* %2453, align 1, !tbaa !2452
  %2454 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2455 = load i64, i64* %PC
  %2456 = add i64 %2455, 9
  store i64 %2456, i64* %PC
  %2457 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 536) to double*)
  %2458 = bitcast i8* %2454 to double*
  store double %2457, double* %2458, align 1, !tbaa !2452
  %2459 = getelementptr inbounds i8, i8* %2454, i64 8
  %2460 = bitcast i8* %2459 to double*
  store double 0.000000e+00, double* %2460, align 1, !tbaa !2452
  %2461 = load i64, i64* %PC
  %2462 = add i64 %2461, 2
  store i64 %2462, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2451
  %2463 = load i64, i64* %PC
  %2464 = sub i64 %2463, 1362
  %2465 = load i64, i64* %PC
  %2466 = add i64 %2465, 5
  %2467 = load i64, i64* %PC
  %2468 = add i64 %2467, 5
  store i64 %2468, i64* %PC
  %2469 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2470 = load i64, i64* %2469, align 8, !tbaa !2428
  %2471 = add i64 %2470, -8
  %2472 = inttoptr i64 %2471 to i64*
  store i64 %2466, i64* %2472
  store i64 %2471, i64* %2469, align 8, !tbaa !2428
  %2473 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2464, i64* %2473, align 8, !tbaa !2428
  %2474 = load i64, i64* %PC
  %2475 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2474, %struct.Memory* %MEMORY.6)
  %2476 = load i64, i64* %PC
  %2477 = add i64 %2476, 10
  store i64 %2477, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2478 = load i64, i64* %RDX
  %2479 = load i64, i64* %PC
  %2480 = add i64 %2479, 4
  store i64 %2480, i64* %PC
  %2481 = add i64 80, %2478
  store i64 %2481, i64* %RDX, align 8, !tbaa !2428
  %2482 = icmp ult i64 %2481, %2478
  %2483 = icmp ult i64 %2481, 80
  %2484 = or i1 %2482, %2483
  %2485 = zext i1 %2484 to i8
  %2486 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2485, i8* %2486, align 1, !tbaa !2432
  %2487 = trunc i64 %2481 to i32
  %2488 = and i32 %2487, 255
  %2489 = call i32 @llvm.ctpop.i32(i32 %2488) #17
  %2490 = trunc i32 %2489 to i8
  %2491 = and i8 %2490, 1
  %2492 = xor i8 %2491, 1
  %2493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2492, i8* %2493, align 1, !tbaa !2446
  %2494 = xor i64 80, %2478
  %2495 = xor i64 %2494, %2481
  %2496 = lshr i64 %2495, 4
  %2497 = trunc i64 %2496 to i8
  %2498 = and i8 %2497, 1
  %2499 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2498, i8* %2499, align 1, !tbaa !2447
  %2500 = icmp eq i64 %2481, 0
  %2501 = zext i1 %2500 to i8
  %2502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2501, i8* %2502, align 1, !tbaa !2448
  %2503 = lshr i64 %2481, 63
  %2504 = trunc i64 %2503 to i8
  %2505 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2504, i8* %2505, align 1, !tbaa !2449
  %2506 = lshr i64 %2478, 63
  %2507 = xor i64 %2503, %2506
  %2508 = add nuw nsw i64 %2507, %2503
  %2509 = icmp eq i64 %2508, 2
  %2510 = zext i1 %2509 to i8
  %2511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2510, i8* %2511, align 1, !tbaa !2450
  %2512 = load i64, i64* %PC
  %2513 = add i64 %2512, 10
  store i64 %2513, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 415), i64* %RSI, align 8, !tbaa !2428
  %2514 = load i64, i64* %PC
  %2515 = add i64 %2514, 10
  store i64 %2515, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 452), i64* %RDI, align 8, !tbaa !2428
  %2516 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2517 = load i64, i64* %PC
  %2518 = add i64 %2517, 9
  store i64 %2518, i64* %PC
  %2519 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 544) to double*)
  %2520 = bitcast i8* %2516 to double*
  store double %2519, double* %2520, align 1, !tbaa !2452
  %2521 = getelementptr inbounds i8, i8* %2516, i64 8
  %2522 = bitcast i8* %2521 to double*
  store double 0.000000e+00, double* %2522, align 1, !tbaa !2452
  %2523 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %2524 = load i64, i64* %PC
  %2525 = add i64 %2524, 9
  store i64 %2525, i64* %PC
  %2526 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 552) to double*)
  %2527 = bitcast i8* %2523 to double*
  store double %2526, double* %2527, align 1, !tbaa !2452
  %2528 = getelementptr inbounds i8, i8* %2523, i64 8
  %2529 = bitcast i8* %2528 to double*
  store double 0.000000e+00, double* %2529, align 1, !tbaa !2452
  %2530 = load i64, i64* %RBP
  %2531 = sub i64 %2530, 128
  %2532 = load i64, i64* %RDI
  %2533 = load i64, i64* %PC
  %2534 = add i64 %2533, 4
  store i64 %2534, i64* %PC
  %2535 = inttoptr i64 %2531 to i64*
  store i64 %2532, i64* %2535
  %2536 = load i64, i64* %RDX
  %2537 = load i64, i64* %PC
  %2538 = add i64 %2537, 3
  store i64 %2538, i64* %PC
  store i64 %2536, i64* %RDI, align 8, !tbaa !2428
  %2539 = load i64, i64* %RBP
  %2540 = sub i64 %2539, 128
  %2541 = load i64, i64* %PC
  %2542 = add i64 %2541, 4
  store i64 %2542, i64* %PC
  %2543 = inttoptr i64 %2540 to i64*
  %2544 = load i64, i64* %2543
  store i64 %2544, i64* %RDX, align 8, !tbaa !2428
  %2545 = load i64, i64* %RBP
  %2546 = sub i64 %2545, 132
  %2547 = load i32, i32* %EAX
  %2548 = zext i32 %2547 to i64
  %2549 = load i64, i64* %PC
  %2550 = add i64 %2549, 6
  store i64 %2550, i64* %PC
  %2551 = inttoptr i64 %2546 to i32*
  store i32 %2547, i32* %2551
  %2552 = load i64, i64* %PC
  %2553 = add i64 %2552, 2
  store i64 %2553, i64* %PC
  store i8 2, i8* %AL, align 1, !tbaa !2451
  %2554 = load i64, i64* %PC
  %2555 = sub i64 %2554, 1438
  %2556 = load i64, i64* %PC
  %2557 = add i64 %2556, 5
  %2558 = load i64, i64* %PC
  %2559 = add i64 %2558, 5
  store i64 %2559, i64* %PC
  %2560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2561 = load i64, i64* %2560, align 8, !tbaa !2428
  %2562 = add i64 %2561, -8
  %2563 = inttoptr i64 %2562 to i64*
  store i64 %2557, i64* %2563
  store i64 %2562, i64* %2560, align 8, !tbaa !2428
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2555, i64* %2564, align 8, !tbaa !2428
  %2565 = load i64, i64* %PC
  %2566 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2565, %struct.Memory* %2475)
  %2567 = load i64, i64* %PC
  %2568 = add i64 %2567, 10
  store i64 %2568, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2569 = load i64, i64* %RDX
  %2570 = load i64, i64* %PC
  %2571 = add i64 %2570, 7
  store i64 %2571, i64* %PC
  %2572 = add i64 160, %2569
  store i64 %2572, i64* %RDX, align 8, !tbaa !2428
  %2573 = icmp ult i64 %2572, %2569
  %2574 = icmp ult i64 %2572, 160
  %2575 = or i1 %2573, %2574
  %2576 = zext i1 %2575 to i8
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2576, i8* %2577, align 1, !tbaa !2432
  %2578 = trunc i64 %2572 to i32
  %2579 = and i32 %2578, 255
  %2580 = call i32 @llvm.ctpop.i32(i32 %2579) #17
  %2581 = trunc i32 %2580 to i8
  %2582 = and i8 %2581, 1
  %2583 = xor i8 %2582, 1
  %2584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2583, i8* %2584, align 1, !tbaa !2446
  %2585 = xor i64 160, %2569
  %2586 = xor i64 %2585, %2572
  %2587 = lshr i64 %2586, 4
  %2588 = trunc i64 %2587 to i8
  %2589 = and i8 %2588, 1
  %2590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2589, i8* %2590, align 1, !tbaa !2447
  %2591 = icmp eq i64 %2572, 0
  %2592 = zext i1 %2591 to i8
  %2593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2592, i8* %2593, align 1, !tbaa !2448
  %2594 = lshr i64 %2572, 63
  %2595 = trunc i64 %2594 to i8
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2595, i8* %2596, align 1, !tbaa !2449
  %2597 = lshr i64 %2569, 63
  %2598 = xor i64 %2594, %2597
  %2599 = add nuw nsw i64 %2598, %2594
  %2600 = icmp eq i64 %2599, 2
  %2601 = zext i1 %2600 to i8
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2601, i8* %2602, align 1, !tbaa !2450
  %2603 = load i64, i64* %PC
  %2604 = add i64 %2603, 10
  store i64 %2604, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 465), i64* %RSI, align 8, !tbaa !2428
  %2605 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2606 = load i64, i64* %PC
  %2607 = add i64 %2606, 9
  store i64 %2607, i64* %PC
  %2608 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 568) to double*)
  %2609 = bitcast i8* %2605 to double*
  store double %2608, double* %2609, align 1, !tbaa !2452
  %2610 = getelementptr inbounds i8, i8* %2605, i64 8
  %2611 = bitcast i8* %2610 to double*
  store double 0.000000e+00, double* %2611, align 1, !tbaa !2452
  %2612 = load i64, i64* %RDX
  %2613 = load i64, i64* %PC
  %2614 = add i64 %2613, 3
  store i64 %2614, i64* %PC
  store i64 %2612, i64* %RDI, align 8, !tbaa !2428
  %2615 = load i64, i64* %RBP
  %2616 = sub i64 %2615, 136
  %2617 = load i32, i32* %EAX
  %2618 = zext i32 %2617 to i64
  %2619 = load i64, i64* %PC
  %2620 = add i64 %2619, 6
  store i64 %2620, i64* %PC
  %2621 = inttoptr i64 %2616 to i32*
  store i32 %2617, i32* %2621
  %2622 = load i64, i64* %PC
  %2623 = add i64 %2622, 2
  store i64 %2623, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2624 = load i64, i64* %PC
  %2625 = sub i64 %2624, 1490
  %2626 = load i64, i64* %PC
  %2627 = add i64 %2626, 5
  %2628 = load i64, i64* %PC
  %2629 = add i64 %2628, 5
  store i64 %2629, i64* %PC
  %2630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2631 = load i64, i64* %2630, align 8, !tbaa !2428
  %2632 = add i64 %2631, -8
  %2633 = inttoptr i64 %2632 to i64*
  store i64 %2627, i64* %2633
  store i64 %2632, i64* %2630, align 8, !tbaa !2428
  %2634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2625, i64* %2634, align 8, !tbaa !2428
  %2635 = load i64, i64* %PC
  %2636 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2635, %struct.Memory* %2566)
  %2637 = load i64, i64* %PC
  %2638 = add i64 %2637, 10
  store i64 %2638, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2639 = load i64, i64* %RDX
  %2640 = load i64, i64* %PC
  %2641 = add i64 %2640, 7
  store i64 %2641, i64* %PC
  %2642 = add i64 240, %2639
  store i64 %2642, i64* %RDX, align 8, !tbaa !2428
  %2643 = icmp ult i64 %2642, %2639
  %2644 = icmp ult i64 %2642, 240
  %2645 = or i1 %2643, %2644
  %2646 = zext i1 %2645 to i8
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2646, i8* %2647, align 1, !tbaa !2432
  %2648 = trunc i64 %2642 to i32
  %2649 = and i32 %2648, 255
  %2650 = call i32 @llvm.ctpop.i32(i32 %2649) #17
  %2651 = trunc i32 %2650 to i8
  %2652 = and i8 %2651, 1
  %2653 = xor i8 %2652, 1
  %2654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2653, i8* %2654, align 1, !tbaa !2446
  %2655 = xor i64 240, %2639
  %2656 = xor i64 %2655, %2642
  %2657 = lshr i64 %2656, 4
  %2658 = trunc i64 %2657 to i8
  %2659 = and i8 %2658, 1
  %2660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2659, i8* %2660, align 1, !tbaa !2447
  %2661 = icmp eq i64 %2642, 0
  %2662 = zext i1 %2661 to i8
  %2663 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2662, i8* %2663, align 1, !tbaa !2448
  %2664 = lshr i64 %2642, 63
  %2665 = trunc i64 %2664 to i8
  %2666 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2665, i8* %2666, align 1, !tbaa !2449
  %2667 = lshr i64 %2639, 63
  %2668 = xor i64 %2664, %2667
  %2669 = add nuw nsw i64 %2668, %2664
  %2670 = icmp eq i64 %2669, 2
  %2671 = zext i1 %2670 to i8
  %2672 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2671, i8* %2672, align 1, !tbaa !2450
  %2673 = load i64, i64* %PC
  %2674 = add i64 %2673, 10
  store i64 %2674, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %2675 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2676 = load i64, i64* %PC
  %2677 = add i64 %2676, 9
  store i64 %2677, i64* %PC
  %2678 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 592) to double*)
  %2679 = bitcast i8* %2675 to double*
  store double %2678, double* %2679, align 1, !tbaa !2452
  %2680 = getelementptr inbounds i8, i8* %2675, i64 8
  %2681 = bitcast i8* %2680 to double*
  store double 0.000000e+00, double* %2681, align 1, !tbaa !2452
  %2682 = load i64, i64* %RDX
  %2683 = load i64, i64* %PC
  %2684 = add i64 %2683, 3
  store i64 %2684, i64* %PC
  store i64 %2682, i64* %RDI, align 8, !tbaa !2428
  %2685 = load i64, i64* %RBP
  %2686 = sub i64 %2685, 140
  %2687 = load i32, i32* %EAX
  %2688 = zext i32 %2687 to i64
  %2689 = load i64, i64* %PC
  %2690 = add i64 %2689, 6
  store i64 %2690, i64* %PC
  %2691 = inttoptr i64 %2686 to i32*
  store i32 %2687, i32* %2691
  %2692 = load i64, i64* %PC
  %2693 = add i64 %2692, 2
  store i64 %2693, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2694 = load i64, i64* %PC
  %2695 = sub i64 %2694, 1542
  %2696 = load i64, i64* %PC
  %2697 = add i64 %2696, 5
  %2698 = load i64, i64* %PC
  %2699 = add i64 %2698, 5
  store i64 %2699, i64* %PC
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2701 = load i64, i64* %2700, align 8, !tbaa !2428
  %2702 = add i64 %2701, -8
  %2703 = inttoptr i64 %2702 to i64*
  store i64 %2697, i64* %2703
  store i64 %2702, i64* %2700, align 8, !tbaa !2428
  %2704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2695, i64* %2704, align 8, !tbaa !2428
  %2705 = load i64, i64* %PC
  %2706 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2705, %struct.Memory* %2636)
  %2707 = load i64, i64* %PC
  %2708 = add i64 %2707, 10
  store i64 %2708, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2709 = load i64, i64* %RDX
  %2710 = load i64, i64* %PC
  %2711 = add i64 %2710, 7
  store i64 %2711, i64* %PC
  %2712 = add i64 320, %2709
  store i64 %2712, i64* %RDX, align 8, !tbaa !2428
  %2713 = icmp ult i64 %2712, %2709
  %2714 = icmp ult i64 %2712, 320
  %2715 = or i1 %2713, %2714
  %2716 = zext i1 %2715 to i8
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2716, i8* %2717, align 1, !tbaa !2432
  %2718 = trunc i64 %2712 to i32
  %2719 = and i32 %2718, 255
  %2720 = call i32 @llvm.ctpop.i32(i32 %2719) #17
  %2721 = trunc i32 %2720 to i8
  %2722 = and i8 %2721, 1
  %2723 = xor i8 %2722, 1
  %2724 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2723, i8* %2724, align 1, !tbaa !2446
  %2725 = xor i64 320, %2709
  %2726 = xor i64 %2725, %2712
  %2727 = lshr i64 %2726, 4
  %2728 = trunc i64 %2727 to i8
  %2729 = and i8 %2728, 1
  %2730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2729, i8* %2730, align 1, !tbaa !2447
  %2731 = icmp eq i64 %2712, 0
  %2732 = zext i1 %2731 to i8
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2732, i8* %2733, align 1, !tbaa !2448
  %2734 = lshr i64 %2712, 63
  %2735 = trunc i64 %2734 to i8
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2735, i8* %2736, align 1, !tbaa !2449
  %2737 = lshr i64 %2709, 63
  %2738 = xor i64 %2734, %2737
  %2739 = add nuw nsw i64 %2738, %2734
  %2740 = icmp eq i64 %2739, 2
  %2741 = zext i1 %2740 to i8
  %2742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2741, i8* %2742, align 1, !tbaa !2450
  %2743 = load i64, i64* %PC
  %2744 = add i64 %2743, 10
  store i64 %2744, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 561), i64* %RSI, align 8, !tbaa !2428
  %2745 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2746 = load i64, i64* %PC
  %2747 = add i64 %2746, 9
  store i64 %2747, i64* %PC
  %2748 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 576) to double*)
  %2749 = bitcast i8* %2745 to double*
  store double %2748, double* %2749, align 1, !tbaa !2452
  %2750 = getelementptr inbounds i8, i8* %2745, i64 8
  %2751 = bitcast i8* %2750 to double*
  store double 0.000000e+00, double* %2751, align 1, !tbaa !2452
  %2752 = load i64, i64* %RDX
  %2753 = load i64, i64* %PC
  %2754 = add i64 %2753, 3
  store i64 %2754, i64* %PC
  store i64 %2752, i64* %RDI, align 8, !tbaa !2428
  %2755 = load i64, i64* %RBP
  %2756 = sub i64 %2755, 144
  %2757 = load i32, i32* %EAX
  %2758 = zext i32 %2757 to i64
  %2759 = load i64, i64* %PC
  %2760 = add i64 %2759, 6
  store i64 %2760, i64* %PC
  %2761 = inttoptr i64 %2756 to i32*
  store i32 %2757, i32* %2761
  %2762 = load i64, i64* %PC
  %2763 = add i64 %2762, 2
  store i64 %2763, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2764 = load i64, i64* %PC
  %2765 = sub i64 %2764, 1594
  %2766 = load i64, i64* %PC
  %2767 = add i64 %2766, 5
  %2768 = load i64, i64* %PC
  %2769 = add i64 %2768, 5
  store i64 %2769, i64* %PC
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2771 = load i64, i64* %2770, align 8, !tbaa !2428
  %2772 = add i64 %2771, -8
  %2773 = inttoptr i64 %2772 to i64*
  store i64 %2767, i64* %2773
  store i64 %2772, i64* %2770, align 8, !tbaa !2428
  %2774 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2765, i64* %2774, align 8, !tbaa !2428
  %2775 = load i64, i64* %PC
  %2776 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2775, %struct.Memory* %2706)
  %2777 = load i64, i64* %PC
  %2778 = add i64 %2777, 10
  store i64 %2778, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2779 = load i64, i64* %RDX
  %2780 = load i64, i64* %PC
  %2781 = add i64 %2780, 7
  store i64 %2781, i64* %PC
  %2782 = add i64 400, %2779
  store i64 %2782, i64* %RDX, align 8, !tbaa !2428
  %2783 = icmp ult i64 %2782, %2779
  %2784 = icmp ult i64 %2782, 400
  %2785 = or i1 %2783, %2784
  %2786 = zext i1 %2785 to i8
  %2787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2786, i8* %2787, align 1, !tbaa !2432
  %2788 = trunc i64 %2782 to i32
  %2789 = and i32 %2788, 255
  %2790 = call i32 @llvm.ctpop.i32(i32 %2789) #17
  %2791 = trunc i32 %2790 to i8
  %2792 = and i8 %2791, 1
  %2793 = xor i8 %2792, 1
  %2794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2793, i8* %2794, align 1, !tbaa !2446
  %2795 = xor i64 400, %2779
  %2796 = xor i64 %2795, %2782
  %2797 = lshr i64 %2796, 4
  %2798 = trunc i64 %2797 to i8
  %2799 = and i8 %2798, 1
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2799, i8* %2800, align 1, !tbaa !2447
  %2801 = icmp eq i64 %2782, 0
  %2802 = zext i1 %2801 to i8
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2802, i8* %2803, align 1, !tbaa !2448
  %2804 = lshr i64 %2782, 63
  %2805 = trunc i64 %2804 to i8
  %2806 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2805, i8* %2806, align 1, !tbaa !2449
  %2807 = lshr i64 %2779, 63
  %2808 = xor i64 %2804, %2807
  %2809 = add nuw nsw i64 %2808, %2804
  %2810 = icmp eq i64 %2809, 2
  %2811 = zext i1 %2810 to i8
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2811, i8* %2812, align 1, !tbaa !2450
  %2813 = load i64, i64* %PC
  %2814 = add i64 %2813, 10
  store i64 %2814, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %2815 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2816 = load i64, i64* %PC
  %2817 = add i64 %2816, 9
  store i64 %2817, i64* %PC
  %2818 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 600) to double*)
  %2819 = bitcast i8* %2815 to double*
  store double %2818, double* %2819, align 1, !tbaa !2452
  %2820 = getelementptr inbounds i8, i8* %2815, i64 8
  %2821 = bitcast i8* %2820 to double*
  store double 0.000000e+00, double* %2821, align 1, !tbaa !2452
  %2822 = load i64, i64* %RDX
  %2823 = load i64, i64* %PC
  %2824 = add i64 %2823, 3
  store i64 %2824, i64* %PC
  store i64 %2822, i64* %RDI, align 8, !tbaa !2428
  %2825 = load i64, i64* %RBP
  %2826 = sub i64 %2825, 148
  %2827 = load i32, i32* %EAX
  %2828 = zext i32 %2827 to i64
  %2829 = load i64, i64* %PC
  %2830 = add i64 %2829, 6
  store i64 %2830, i64* %PC
  %2831 = inttoptr i64 %2826 to i32*
  store i32 %2827, i32* %2831
  %2832 = load i64, i64* %PC
  %2833 = add i64 %2832, 2
  store i64 %2833, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2834 = load i64, i64* %PC
  %2835 = sub i64 %2834, 1646
  %2836 = load i64, i64* %PC
  %2837 = add i64 %2836, 5
  %2838 = load i64, i64* %PC
  %2839 = add i64 %2838, 5
  store i64 %2839, i64* %PC
  %2840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2841 = load i64, i64* %2840, align 8, !tbaa !2428
  %2842 = add i64 %2841, -8
  %2843 = inttoptr i64 %2842 to i64*
  store i64 %2837, i64* %2843
  store i64 %2842, i64* %2840, align 8, !tbaa !2428
  %2844 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2835, i64* %2844, align 8, !tbaa !2428
  %2845 = load i64, i64* %PC
  %2846 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2845, %struct.Memory* %2776)
  %2847 = load i64, i64* %PC
  %2848 = add i64 %2847, 10
  store i64 %2848, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2849 = load i64, i64* %RDX
  %2850 = load i64, i64* %PC
  %2851 = add i64 %2850, 7
  store i64 %2851, i64* %PC
  %2852 = add i64 480, %2849
  store i64 %2852, i64* %RDX, align 8, !tbaa !2428
  %2853 = icmp ult i64 %2852, %2849
  %2854 = icmp ult i64 %2852, 480
  %2855 = or i1 %2853, %2854
  %2856 = zext i1 %2855 to i8
  %2857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2856, i8* %2857, align 1, !tbaa !2432
  %2858 = trunc i64 %2852 to i32
  %2859 = and i32 %2858, 255
  %2860 = call i32 @llvm.ctpop.i32(i32 %2859) #17
  %2861 = trunc i32 %2860 to i8
  %2862 = and i8 %2861, 1
  %2863 = xor i8 %2862, 1
  %2864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2863, i8* %2864, align 1, !tbaa !2446
  %2865 = xor i64 480, %2849
  %2866 = xor i64 %2865, %2852
  %2867 = lshr i64 %2866, 4
  %2868 = trunc i64 %2867 to i8
  %2869 = and i8 %2868, 1
  %2870 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2869, i8* %2870, align 1, !tbaa !2447
  %2871 = icmp eq i64 %2852, 0
  %2872 = zext i1 %2871 to i8
  %2873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2872, i8* %2873, align 1, !tbaa !2448
  %2874 = lshr i64 %2852, 63
  %2875 = trunc i64 %2874 to i8
  %2876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2875, i8* %2876, align 1, !tbaa !2449
  %2877 = lshr i64 %2849, 63
  %2878 = xor i64 %2874, %2877
  %2879 = add nuw nsw i64 %2878, %2874
  %2880 = icmp eq i64 %2879, 2
  %2881 = zext i1 %2880 to i8
  %2882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2881, i8* %2882, align 1, !tbaa !2450
  %2883 = load i64, i64* %PC
  %2884 = add i64 %2883, 10
  store i64 %2884, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 609), i64* %RSI, align 8, !tbaa !2428
  %2885 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2886 = load i64, i64* %PC
  %2887 = add i64 %2886, 9
  store i64 %2887, i64* %PC
  %2888 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 584) to double*)
  %2889 = bitcast i8* %2885 to double*
  store double %2888, double* %2889, align 1, !tbaa !2452
  %2890 = getelementptr inbounds i8, i8* %2885, i64 8
  %2891 = bitcast i8* %2890 to double*
  store double 0.000000e+00, double* %2891, align 1, !tbaa !2452
  %2892 = load i64, i64* %RDX
  %2893 = load i64, i64* %PC
  %2894 = add i64 %2893, 3
  store i64 %2894, i64* %PC
  store i64 %2892, i64* %RDI, align 8, !tbaa !2428
  %2895 = load i64, i64* %RBP
  %2896 = sub i64 %2895, 152
  %2897 = load i32, i32* %EAX
  %2898 = zext i32 %2897 to i64
  %2899 = load i64, i64* %PC
  %2900 = add i64 %2899, 6
  store i64 %2900, i64* %PC
  %2901 = inttoptr i64 %2896 to i32*
  store i32 %2897, i32* %2901
  %2902 = load i64, i64* %PC
  %2903 = add i64 %2902, 2
  store i64 %2903, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2904 = load i64, i64* %PC
  %2905 = sub i64 %2904, 1698
  %2906 = load i64, i64* %PC
  %2907 = add i64 %2906, 5
  %2908 = load i64, i64* %PC
  %2909 = add i64 %2908, 5
  store i64 %2909, i64* %PC
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2911 = load i64, i64* %2910, align 8, !tbaa !2428
  %2912 = add i64 %2911, -8
  %2913 = inttoptr i64 %2912 to i64*
  store i64 %2907, i64* %2913
  store i64 %2912, i64* %2910, align 8, !tbaa !2428
  %2914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2905, i64* %2914, align 8, !tbaa !2428
  %2915 = load i64, i64* %PC
  %2916 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2915, %struct.Memory* %2846)
  %2917 = load i64, i64* %PC
  %2918 = add i64 %2917, 10
  store i64 %2918, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %2919 = load i64, i64* %RDX
  %2920 = load i64, i64* %PC
  %2921 = add i64 %2920, 7
  store i64 %2921, i64* %PC
  %2922 = add i64 560, %2919
  store i64 %2922, i64* %RDX, align 8, !tbaa !2428
  %2923 = icmp ult i64 %2922, %2919
  %2924 = icmp ult i64 %2922, 560
  %2925 = or i1 %2923, %2924
  %2926 = zext i1 %2925 to i8
  %2927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2926, i8* %2927, align 1, !tbaa !2432
  %2928 = trunc i64 %2922 to i32
  %2929 = and i32 %2928, 255
  %2930 = call i32 @llvm.ctpop.i32(i32 %2929) #17
  %2931 = trunc i32 %2930 to i8
  %2932 = and i8 %2931, 1
  %2933 = xor i8 %2932, 1
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2933, i8* %2934, align 1, !tbaa !2446
  %2935 = xor i64 560, %2919
  %2936 = xor i64 %2935, %2922
  %2937 = lshr i64 %2936, 4
  %2938 = trunc i64 %2937 to i8
  %2939 = and i8 %2938, 1
  %2940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2939, i8* %2940, align 1, !tbaa !2447
  %2941 = icmp eq i64 %2922, 0
  %2942 = zext i1 %2941 to i8
  %2943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2942, i8* %2943, align 1, !tbaa !2448
  %2944 = lshr i64 %2922, 63
  %2945 = trunc i64 %2944 to i8
  %2946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2945, i8* %2946, align 1, !tbaa !2449
  %2947 = lshr i64 %2919, 63
  %2948 = xor i64 %2944, %2947
  %2949 = add nuw nsw i64 %2948, %2944
  %2950 = icmp eq i64 %2949, 2
  %2951 = zext i1 %2950 to i8
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2951, i8* %2952, align 1, !tbaa !2450
  %2953 = load i64, i64* %PC
  %2954 = add i64 %2953, 10
  store i64 %2954, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 513), i64* %RSI, align 8, !tbaa !2428
  %2955 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %2956 = load i64, i64* %PC
  %2957 = add i64 %2956, 9
  store i64 %2957, i64* %PC
  %2958 = load double, double* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 608) to double*)
  %2959 = bitcast i8* %2955 to double*
  store double %2958, double* %2959, align 1, !tbaa !2452
  %2960 = getelementptr inbounds i8, i8* %2955, i64 8
  %2961 = bitcast i8* %2960 to double*
  store double 0.000000e+00, double* %2961, align 1, !tbaa !2452
  %2962 = load i64, i64* %RDX
  %2963 = load i64, i64* %PC
  %2964 = add i64 %2963, 3
  store i64 %2964, i64* %PC
  store i64 %2962, i64* %RDI, align 8, !tbaa !2428
  %2965 = load i64, i64* %RBP
  %2966 = sub i64 %2965, 156
  %2967 = load i32, i32* %EAX
  %2968 = zext i32 %2967 to i64
  %2969 = load i64, i64* %PC
  %2970 = add i64 %2969, 6
  store i64 %2970, i64* %PC
  %2971 = inttoptr i64 %2966 to i32*
  store i32 %2967, i32* %2971
  %2972 = load i64, i64* %PC
  %2973 = add i64 %2972, 2
  store i64 %2973, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %2974 = load i64, i64* %PC
  %2975 = sub i64 %2974, 1750
  %2976 = load i64, i64* %PC
  %2977 = add i64 %2976, 5
  %2978 = load i64, i64* %PC
  %2979 = add i64 %2978, 5
  store i64 %2979, i64* %PC
  %2980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %2981 = load i64, i64* %2980, align 8, !tbaa !2428
  %2982 = add i64 %2981, -8
  %2983 = inttoptr i64 %2982 to i64*
  store i64 %2977, i64* %2983
  store i64 %2982, i64* %2980, align 8, !tbaa !2428
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2975, i64* %2984, align 8, !tbaa !2428
  %2985 = load i64, i64* %PC
  %2986 = call %struct.Memory* @ext_6026e0_sprintf(%struct.State* %0, i64 %2985, %struct.Memory* %2916)
  %2987 = load i64, i64* %RBP
  %2988 = sub i64 %2987, 32
  %2989 = load i64, i64* %PC
  %2990 = add i64 %2989, 7
  store i64 %2990, i64* %PC
  %2991 = inttoptr i64 %2988 to i32*
  store i32 0, i32* %2991
  %2992 = load i64, i64* %RBP
  %2993 = sub i64 %2992, 20
  %2994 = load i64, i64* %PC
  %2995 = add i64 %2994, 7
  store i64 %2995, i64* %PC
  %2996 = inttoptr i64 %2993 to i32*
  store i32 0, i32* %2996
  %2997 = load i64, i64* %RBP
  %2998 = sub i64 %2997, 160
  %2999 = load i32, i32* %EAX
  %3000 = zext i32 %2999 to i64
  %3001 = load i64, i64* %PC
  %3002 = add i64 %3001, 6
  store i64 %3002, i64* %PC
  %3003 = inttoptr i64 %2998 to i32*
  store i32 %2999, i32* %3003
  br label %block_400d1f

block_400f30:                                     ; preds = %block_400ee8
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 790), i64* %RDI, align 8, !tbaa !2428
  %3004 = load i64, i64* %PC
  %3005 = add i64 %3004, 2
  store i64 %3005, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3006 = load i64, i64* %PC
  %3007 = sub i64 %3006, 2412
  %3008 = load i64, i64* %PC
  %3009 = add i64 %3008, 5
  %3010 = load i64, i64* %PC
  %3011 = add i64 %3010, 5
  store i64 %3011, i64* %PC
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3013 = load i64, i64* %3012, align 8, !tbaa !2428
  %3014 = add i64 %3013, -8
  %3015 = inttoptr i64 %3014 to i64*
  store i64 %3009, i64* %3015
  store i64 %3014, i64* %3012, align 8, !tbaa !2428
  %3016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3007, i64* %3016, align 8, !tbaa !2428
  %3017 = load i64, i64* %PC
  %3018 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %3017, %struct.Memory* %MEMORY.3)
  %3019 = load i64, i64* %RBP
  %3020 = sub i64 %3019, 192
  %3021 = load i32, i32* %EAX
  %3022 = zext i32 %3021 to i64
  %3023 = load i64, i64* %PC
  %3024 = add i64 %3023, 6
  store i64 %3024, i64* %PC
  %3025 = inttoptr i64 %3020 to i32*
  store i32 %3021, i32* %3025
  br label %block_400f47

block_40092d:                                     ; preds = %block_400919
  store i16 0, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 512) to i16*)
  br label %block_400937

block_400824:                                     ; preds = %block_40081a
  %3026 = add i64 %3774, 10
  store i64 %3026, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 112), i64* %RAX, align 8, !tbaa !2428
  %3027 = load i64, i64* %PC
  %3028 = add i64 %3027, 10
  store i64 %3028, i64* %PC
  store i64 add (i64 ptrtoint (%niter_type* @niter to i64), i64 16), i64* %RCX, align 8, !tbaa !2428
  %3029 = load i64, i64* %RBP
  %3030 = sub i64 %3029, 20
  %3031 = load i64, i64* %PC
  %3032 = add i64 %3031, 4
  store i64 %3032, i64* %PC
  %3033 = inttoptr i64 %3030 to i32*
  %3034 = load i32, i32* %3033
  %3035 = sext i32 %3034 to i64
  store i64 %3035, i64* %RDX, align 8, !tbaa !2428
  %3036 = load i64, i64* %RDX
  %3037 = load i64, i64* %PC
  %3038 = add i64 %3037, 4
  store i64 %3038, i64* %PC
  %3039 = shl i64 %3036, 4
  %3040 = icmp slt i64 %3039, 0
  %3041 = shl i64 %3039, 1
  store i64 %3041, i64* %RDX, align 8, !tbaa !2428
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  %3043 = zext i1 %3040 to i8
  store i8 %3043, i8* %3042, align 1, !tbaa !2451
  %3044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %3045 = trunc i64 %3041 to i32
  %3046 = and i32 %3045, 254
  %3047 = call i32 @llvm.ctpop.i32(i32 %3046) #17
  %3048 = trunc i32 %3047 to i8
  %3049 = and i8 %3048, 1
  %3050 = xor i8 %3049, 1
  store i8 %3050, i8* %3044, align 1, !tbaa !2451
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3051, align 1, !tbaa !2451
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3053 = icmp eq i64 %3041, 0
  %3054 = zext i1 %3053 to i8
  store i8 %3054, i8* %3052, align 1, !tbaa !2451
  %3055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3056 = lshr i64 %3041, 63
  %3057 = trunc i64 %3056 to i8
  store i8 %3057, i8* %3055, align 1, !tbaa !2451
  %3058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %3058, align 1, !tbaa !2451
  %3059 = load i64, i64* %RCX
  %3060 = load i64, i64* %RDX
  %3061 = load i64, i64* %PC
  %3062 = add i64 %3061, 3
  store i64 %3062, i64* %PC
  %3063 = add i64 %3060, %3059
  store i64 %3063, i64* %RCX, align 8, !tbaa !2428
  %3064 = icmp ult i64 %3063, %3059
  %3065 = icmp ult i64 %3063, %3060
  %3066 = or i1 %3064, %3065
  %3067 = zext i1 %3066 to i8
  %3068 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3067, i8* %3068, align 1, !tbaa !2432
  %3069 = trunc i64 %3063 to i32
  %3070 = and i32 %3069, 255
  %3071 = call i32 @llvm.ctpop.i32(i32 %3070) #17
  %3072 = trunc i32 %3071 to i8
  %3073 = and i8 %3072, 1
  %3074 = xor i8 %3073, 1
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3074, i8* %3075, align 1, !tbaa !2446
  %3076 = xor i64 %3060, %3059
  %3077 = xor i64 %3076, %3063
  %3078 = lshr i64 %3077, 4
  %3079 = trunc i64 %3078 to i8
  %3080 = and i8 %3079, 1
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3080, i8* %3081, align 1, !tbaa !2447
  %3082 = icmp eq i64 %3063, 0
  %3083 = zext i1 %3082 to i8
  %3084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3083, i8* %3084, align 1, !tbaa !2448
  %3085 = lshr i64 %3063, 63
  %3086 = trunc i64 %3085 to i8
  %3087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3086, i8* %3087, align 1, !tbaa !2449
  %3088 = lshr i64 %3059, 63
  %3089 = lshr i64 %3060, 63
  %3090 = xor i64 %3085, %3088
  %3091 = xor i64 %3085, %3089
  %3092 = add nuw nsw i64 %3090, %3091
  %3093 = icmp eq i64 %3092, 2
  %3094 = zext i1 %3093 to i8
  %3095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3094, i8* %3095, align 1, !tbaa !2450
  %3096 = load i64, i64* %RBP
  %3097 = sub i64 %3096, 24
  %3098 = load i64, i64* %PC
  %3099 = add i64 %3098, 4
  store i64 %3099, i64* %PC
  %3100 = inttoptr i64 %3097 to i32*
  %3101 = load i32, i32* %3100
  %3102 = sext i32 %3101 to i64
  store i64 %3102, i64* %RDX, align 8, !tbaa !2428
  %3103 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %3104 = load i64, i64* %RCX
  %3105 = load i64, i64* %RDX
  %3106 = mul i64 %3105, 8
  %3107 = add i64 %3106, %3104
  %3108 = load i64, i64* %PC
  %3109 = add i64 %3108, 5
  store i64 %3109, i64* %PC
  %3110 = inttoptr i64 %3107 to double*
  %3111 = load double, double* %3110
  %3112 = bitcast i8* %3103 to double*
  store double %3111, double* %3112, align 1, !tbaa !2452
  %3113 = getelementptr inbounds i8, i8* %3103, i64 8
  %3114 = bitcast i8* %3113 to double*
  store double 0.000000e+00, double* %3114, align 1, !tbaa !2452
  %3115 = load i64, i64* %RBP
  %3116 = sub i64 %3115, 20
  %3117 = load i64, i64* %PC
  %3118 = add i64 %3117, 3
  store i64 %3118, i64* %PC
  %3119 = inttoptr i64 %3116 to i32*
  %3120 = load i32, i32* %3119
  %3121 = zext i32 %3120 to i64
  store i64 %3121, i64* %RSI, align 8, !tbaa !2428
  %3122 = load i64, i64* %RSI
  %3123 = load i64, i64* %PC
  %3124 = add i64 %3123, 3
  store i64 %3124, i64* %PC
  %3125 = trunc i64 %3122 to i32
  %3126 = add i32 1, %3125
  %3127 = zext i32 %3126 to i64
  store i64 %3127, i64* %RSI, align 8, !tbaa !2428
  %3128 = icmp ult i32 %3126, %3125
  %3129 = icmp ult i32 %3126, 1
  %3130 = or i1 %3128, %3129
  %3131 = zext i1 %3130 to i8
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3131, i8* %3132, align 1, !tbaa !2432
  %3133 = and i32 %3126, 255
  %3134 = call i32 @llvm.ctpop.i32(i32 %3133) #17
  %3135 = trunc i32 %3134 to i8
  %3136 = and i8 %3135, 1
  %3137 = xor i8 %3136, 1
  %3138 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3137, i8* %3138, align 1, !tbaa !2446
  %3139 = xor i64 1, %3122
  %3140 = trunc i64 %3139 to i32
  %3141 = xor i32 %3140, %3126
  %3142 = lshr i32 %3141, 4
  %3143 = trunc i32 %3142 to i8
  %3144 = and i8 %3143, 1
  %3145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3144, i8* %3145, align 1, !tbaa !2447
  %3146 = icmp eq i32 %3126, 0
  %3147 = zext i1 %3146 to i8
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3147, i8* %3148, align 1, !tbaa !2448
  %3149 = lshr i32 %3126, 31
  %3150 = trunc i32 %3149 to i8
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3150, i8* %3151, align 1, !tbaa !2449
  %3152 = lshr i32 %3125, 31
  %3153 = xor i32 %3149, %3152
  %3154 = add nuw nsw i32 %3153, %3149
  %3155 = icmp eq i32 %3154, 2
  %3156 = zext i1 %3155 to i8
  %3157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3156, i8* %3157, align 1, !tbaa !2450
  %3158 = load i32, i32* %ESI
  %3159 = zext i32 %3158 to i64
  %3160 = load i64, i64* %PC
  %3161 = add i64 %3160, 3
  store i64 %3161, i64* %PC
  %3162 = shl i64 %3159, 32
  %3163 = ashr exact i64 %3162, 32
  store i64 %3163, i64* %RCX, align 8, !tbaa !2428
  %3164 = load i64, i64* %RCX
  %3165 = load i64, i64* %PC
  %3166 = add i64 %3165, 4
  store i64 %3166, i64* %PC
  %3167 = sext i64 %3164 to i128
  %3168 = and i128 %3167, -18446744073709551616
  %3169 = zext i64 %3164 to i128
  %3170 = or i128 %3168, %3169
  %3171 = mul nsw i128 40, %3170
  %3172 = trunc i128 %3171 to i64
  store i64 %3172, i64* %RCX, align 8, !tbaa !2428
  %3173 = sext i64 %3172 to i128
  %3174 = icmp ne i128 %3173, %3171
  %3175 = zext i1 %3174 to i8
  %3176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3175, i8* %3176, align 1, !tbaa !2432
  %3177 = trunc i128 %3171 to i32
  %3178 = and i32 %3177, 255
  %3179 = call i32 @llvm.ctpop.i32(i32 %3178) #17
  %3180 = trunc i32 %3179 to i8
  %3181 = and i8 %3180, 1
  %3182 = xor i8 %3181, 1
  %3183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3182, i8* %3183, align 1, !tbaa !2446
  %3184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3184, align 1, !tbaa !2447
  %3185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3185, align 1, !tbaa !2448
  %3186 = lshr i64 %3172, 63
  %3187 = trunc i64 %3186 to i8
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3187, i8* %3188, align 1, !tbaa !2449
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3175, i8* %3189, align 1, !tbaa !2450
  %3190 = load i64, i64* %RAX
  %3191 = load i64, i64* %RCX
  %3192 = load i64, i64* %PC
  %3193 = add i64 %3192, 3
  store i64 %3193, i64* %PC
  %3194 = add i64 %3191, %3190
  store i64 %3194, i64* %RAX, align 8, !tbaa !2428
  %3195 = icmp ult i64 %3194, %3190
  %3196 = icmp ult i64 %3194, %3191
  %3197 = or i1 %3195, %3196
  %3198 = zext i1 %3197 to i8
  %3199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3198, i8* %3199, align 1, !tbaa !2432
  %3200 = trunc i64 %3194 to i32
  %3201 = and i32 %3200, 255
  %3202 = call i32 @llvm.ctpop.i32(i32 %3201) #17
  %3203 = trunc i32 %3202 to i8
  %3204 = and i8 %3203, 1
  %3205 = xor i8 %3204, 1
  %3206 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3205, i8* %3206, align 1, !tbaa !2446
  %3207 = xor i64 %3191, %3190
  %3208 = xor i64 %3207, %3194
  %3209 = lshr i64 %3208, 4
  %3210 = trunc i64 %3209 to i8
  %3211 = and i8 %3210, 1
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3211, i8* %3212, align 1, !tbaa !2447
  %3213 = icmp eq i64 %3194, 0
  %3214 = zext i1 %3213 to i8
  %3215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3214, i8* %3215, align 1, !tbaa !2448
  %3216 = lshr i64 %3194, 63
  %3217 = trunc i64 %3216 to i8
  %3218 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3217, i8* %3218, align 1, !tbaa !2449
  %3219 = lshr i64 %3190, 63
  %3220 = lshr i64 %3191, 63
  %3221 = xor i64 %3216, %3219
  %3222 = xor i64 %3216, %3220
  %3223 = add nuw nsw i64 %3221, %3222
  %3224 = icmp eq i64 %3223, 2
  %3225 = zext i1 %3224 to i8
  %3226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3225, i8* %3226, align 1, !tbaa !2450
  %3227 = load i64, i64* %RBP
  %3228 = sub i64 %3227, 24
  %3229 = load i64, i64* %PC
  %3230 = add i64 %3229, 3
  store i64 %3230, i64* %PC
  %3231 = inttoptr i64 %3228 to i32*
  %3232 = load i32, i32* %3231
  %3233 = zext i32 %3232 to i64
  store i64 %3233, i64* %RSI, align 8, !tbaa !2428
  %3234 = load i64, i64* %RSI
  %3235 = load i64, i64* %PC
  %3236 = add i64 %3235, 3
  store i64 %3236, i64* %PC
  %3237 = trunc i64 %3234 to i32
  %3238 = add i32 1, %3237
  %3239 = zext i32 %3238 to i64
  store i64 %3239, i64* %RSI, align 8, !tbaa !2428
  %3240 = icmp ult i32 %3238, %3237
  %3241 = icmp ult i32 %3238, 1
  %3242 = or i1 %3240, %3241
  %3243 = zext i1 %3242 to i8
  %3244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3243, i8* %3244, align 1, !tbaa !2432
  %3245 = and i32 %3238, 255
  %3246 = call i32 @llvm.ctpop.i32(i32 %3245) #17
  %3247 = trunc i32 %3246 to i8
  %3248 = and i8 %3247, 1
  %3249 = xor i8 %3248, 1
  %3250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3249, i8* %3250, align 1, !tbaa !2446
  %3251 = xor i64 1, %3234
  %3252 = trunc i64 %3251 to i32
  %3253 = xor i32 %3252, %3238
  %3254 = lshr i32 %3253, 4
  %3255 = trunc i32 %3254 to i8
  %3256 = and i8 %3255, 1
  %3257 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3256, i8* %3257, align 1, !tbaa !2447
  %3258 = icmp eq i32 %3238, 0
  %3259 = zext i1 %3258 to i8
  %3260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3259, i8* %3260, align 1, !tbaa !2448
  %3261 = lshr i32 %3238, 31
  %3262 = trunc i32 %3261 to i8
  %3263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3262, i8* %3263, align 1, !tbaa !2449
  %3264 = lshr i32 %3237, 31
  %3265 = xor i32 %3261, %3264
  %3266 = add nuw nsw i32 %3265, %3261
  %3267 = icmp eq i32 %3266, 2
  %3268 = zext i1 %3267 to i8
  %3269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3268, i8* %3269, align 1, !tbaa !2450
  %3270 = load i32, i32* %ESI
  %3271 = zext i32 %3270 to i64
  %3272 = load i64, i64* %PC
  %3273 = add i64 %3272, 3
  store i64 %3273, i64* %PC
  %3274 = shl i64 %3271, 32
  %3275 = ashr exact i64 %3274, 32
  store i64 %3275, i64* %RCX, align 8, !tbaa !2428
  %3276 = load i64, i64* %RAX
  %3277 = load i64, i64* %RCX
  %3278 = mul i64 %3277, 8
  %3279 = add i64 %3278, %3276
  %3280 = bitcast %union.vec128_t* %XMM0 to i8*
  %3281 = load i64, i64* %PC
  %3282 = add i64 %3281, 5
  store i64 %3282, i64* %PC
  %3283 = bitcast i8* %3280 to double*
  %3284 = load double, double* %3283, align 1
  %3285 = inttoptr i64 %3279 to double*
  store double %3284, double* %3285
  %3286 = load i64, i64* %RBP
  %3287 = sub i64 %3286, 24
  %3288 = load i64, i64* %PC
  %3289 = add i64 %3288, 3
  store i64 %3289, i64* %PC
  %3290 = inttoptr i64 %3287 to i32*
  %3291 = load i32, i32* %3290
  %3292 = zext i32 %3291 to i64
  store i64 %3292, i64* %RAX, align 8, !tbaa !2428
  %3293 = load i64, i64* %RAX
  %3294 = load i64, i64* %PC
  %3295 = add i64 %3294, 3
  store i64 %3295, i64* %PC
  %3296 = trunc i64 %3293 to i32
  %3297 = add i32 1, %3296
  %3298 = zext i32 %3297 to i64
  store i64 %3298, i64* %RAX, align 8, !tbaa !2428
  %3299 = icmp ult i32 %3297, %3296
  %3300 = icmp ult i32 %3297, 1
  %3301 = or i1 %3299, %3300
  %3302 = zext i1 %3301 to i8
  %3303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3302, i8* %3303, align 1, !tbaa !2432
  %3304 = and i32 %3297, 255
  %3305 = call i32 @llvm.ctpop.i32(i32 %3304) #17
  %3306 = trunc i32 %3305 to i8
  %3307 = and i8 %3306, 1
  %3308 = xor i8 %3307, 1
  %3309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3308, i8* %3309, align 1, !tbaa !2446
  %3310 = xor i64 1, %3293
  %3311 = trunc i64 %3310 to i32
  %3312 = xor i32 %3311, %3297
  %3313 = lshr i32 %3312, 4
  %3314 = trunc i32 %3313 to i8
  %3315 = and i8 %3314, 1
  %3316 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3315, i8* %3316, align 1, !tbaa !2447
  %3317 = icmp eq i32 %3297, 0
  %3318 = zext i1 %3317 to i8
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3318, i8* %3319, align 1, !tbaa !2448
  %3320 = lshr i32 %3297, 31
  %3321 = trunc i32 %3320 to i8
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3321, i8* %3322, align 1, !tbaa !2449
  %3323 = lshr i32 %3296, 31
  %3324 = xor i32 %3320, %3323
  %3325 = add nuw nsw i32 %3324, %3320
  %3326 = icmp eq i32 %3325, 2
  %3327 = zext i1 %3326 to i8
  %3328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3327, i8* %3328, align 1, !tbaa !2450
  %3329 = load i64, i64* %RBP
  %3330 = sub i64 %3329, 24
  %3331 = load i32, i32* %EAX
  %3332 = zext i32 %3331 to i64
  %3333 = load i64, i64* %PC
  %3334 = add i64 %3333, 3
  store i64 %3334, i64* %PC
  %3335 = inttoptr i64 %3330 to i32*
  store i32 %3331, i32* %3335
  %3336 = load i64, i64* %PC
  %3337 = sub i64 %3336, 89
  %3338 = load i64, i64* %PC
  %3339 = add i64 %3338, 5
  store i64 %3339, i64* %PC
  %3340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3337, i64* %3340, align 8, !tbaa !2428
  br label %block_40081a

block_400ea2:                                     ; preds = %block_400e0c
  %3341 = load i64, i64* %RBP
  %3342 = sub i64 %3341, 32
  %3343 = load i64, i64* %PC
  %3344 = add i64 %3343, 3
  store i64 %3344, i64* %PC
  %3345 = inttoptr i64 %3342 to i32*
  %3346 = load i32, i32* %3345
  %3347 = zext i32 %3346 to i64
  store i64 %3347, i64* %RAX, align 8, !tbaa !2428
  %3348 = load i64, i64* %RAX
  %3349 = load i64, i64* %PC
  %3350 = add i64 %3349, 3
  store i64 %3350, i64* %PC
  %3351 = trunc i64 %3348 to i32
  %3352 = add i32 1, %3351
  %3353 = zext i32 %3352 to i64
  store i64 %3353, i64* %RAX, align 8, !tbaa !2428
  %3354 = icmp ult i32 %3352, %3351
  %3355 = icmp ult i32 %3352, 1
  %3356 = or i1 %3354, %3355
  %3357 = zext i1 %3356 to i8
  %3358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3357, i8* %3358, align 1, !tbaa !2432
  %3359 = and i32 %3352, 255
  %3360 = call i32 @llvm.ctpop.i32(i32 %3359) #17
  %3361 = trunc i32 %3360 to i8
  %3362 = and i8 %3361, 1
  %3363 = xor i8 %3362, 1
  %3364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3363, i8* %3364, align 1, !tbaa !2446
  %3365 = xor i64 1, %3348
  %3366 = trunc i64 %3365 to i32
  %3367 = xor i32 %3366, %3352
  %3368 = lshr i32 %3367, 4
  %3369 = trunc i32 %3368 to i8
  %3370 = and i8 %3369, 1
  %3371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3370, i8* %3371, align 1, !tbaa !2447
  %3372 = icmp eq i32 %3352, 0
  %3373 = zext i1 %3372 to i8
  %3374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3373, i8* %3374, align 1, !tbaa !2448
  %3375 = lshr i32 %3352, 31
  %3376 = trunc i32 %3375 to i8
  %3377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3376, i8* %3377, align 1, !tbaa !2449
  %3378 = lshr i32 %3351, 31
  %3379 = xor i32 %3375, %3378
  %3380 = add nuw nsw i32 %3379, %3375
  %3381 = icmp eq i32 %3380, 2
  %3382 = zext i1 %3381 to i8
  %3383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3382, i8* %3383, align 1, !tbaa !2450
  %3384 = load i64, i64* %RBP
  %3385 = sub i64 %3384, 32
  %3386 = load i32, i32* %EAX
  %3387 = zext i32 %3386 to i64
  %3388 = load i64, i64* %PC
  %3389 = add i64 %3388, 3
  store i64 %3389, i64* %PC
  %3390 = inttoptr i64 %3385 to i32*
  store i32 %3386, i32* %3390
  br label %block_400eab

block_400d5b:                                     ; preds = %block_400d29
  %3391 = load i64, i64* %PC
  %3392 = add i64 %3391, 10
  store i64 %3392, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 657), i64* %RDI, align 8, !tbaa !2428
  %3393 = load i64, i64* %RBP
  %3394 = sub i64 %3393, 20
  %3395 = load i64, i64* %PC
  %3396 = add i64 %3395, 3
  store i64 %3396, i64* %PC
  %3397 = inttoptr i64 %3394 to i32*
  %3398 = load i32, i32* %3397
  %3399 = zext i32 %3398 to i64
  store i64 %3399, i64* %RAX, align 8, !tbaa !2428
  %3400 = load i64, i64* %RAX
  %3401 = load i64, i64* %PC
  %3402 = add i64 %3401, 3
  store i64 %3402, i64* %PC
  %3403 = trunc i64 %3400 to i32
  %3404 = add i32 1, %3403
  %3405 = zext i32 %3404 to i64
  store i64 %3405, i64* %RAX, align 8, !tbaa !2428
  %3406 = icmp ult i32 %3404, %3403
  %3407 = icmp ult i32 %3404, 1
  %3408 = or i1 %3406, %3407
  %3409 = zext i1 %3408 to i8
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3409, i8* %3410, align 1, !tbaa !2432
  %3411 = and i32 %3404, 255
  %3412 = call i32 @llvm.ctpop.i32(i32 %3411) #17
  %3413 = trunc i32 %3412 to i8
  %3414 = and i8 %3413, 1
  %3415 = xor i8 %3414, 1
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3415, i8* %3416, align 1, !tbaa !2446
  %3417 = xor i64 1, %3400
  %3418 = trunc i64 %3417 to i32
  %3419 = xor i32 %3418, %3404
  %3420 = lshr i32 %3419, 4
  %3421 = trunc i32 %3420 to i8
  %3422 = and i8 %3421, 1
  %3423 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3422, i8* %3423, align 1, !tbaa !2447
  %3424 = icmp eq i32 %3404, 0
  %3425 = zext i1 %3424 to i8
  %3426 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3425, i8* %3426, align 1, !tbaa !2448
  %3427 = lshr i32 %3404, 31
  %3428 = trunc i32 %3427 to i8
  %3429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3428, i8* %3429, align 1, !tbaa !2449
  %3430 = lshr i32 %3403, 31
  %3431 = xor i32 %3427, %3430
  %3432 = add nuw nsw i32 %3431, %3427
  %3433 = icmp eq i32 %3432, 2
  %3434 = zext i1 %3433 to i8
  %3435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3434, i8* %3435, align 1, !tbaa !2450
  %3436 = load i32, i32* %EAX
  %3437 = zext i32 %3436 to i64
  %3438 = load i64, i64* %PC
  %3439 = add i64 %3438, 2
  store i64 %3439, i64* %PC
  %3440 = and i64 %3437, 4294967295
  store i64 %3440, i64* %RSI, align 8, !tbaa !2428
  %3441 = load i64, i64* %PC
  %3442 = add i64 %3441, 2
  store i64 %3442, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3443 = load i64, i64* %PC
  %3444 = sub i64 %3443, 1951
  %3445 = load i64, i64* %PC
  %3446 = add i64 %3445, 5
  %3447 = load i64, i64* %PC
  %3448 = add i64 %3447, 5
  store i64 %3448, i64* %PC
  %3449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3450 = load i64, i64* %3449, align 8, !tbaa !2428
  %3451 = add i64 %3450, -8
  %3452 = inttoptr i64 %3451 to i64*
  store i64 %3446, i64* %3452
  store i64 %3451, i64* %3449, align 8, !tbaa !2428
  %3453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3444, i64* %3453, align 8, !tbaa !2428
  %3454 = load i64, i64* %PC
  %3455 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %3454, %struct.Memory* %3996)
  %3456 = load i64, i64* %PC
  %3457 = add i64 %3456, 10
  store i64 %3457, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 690), i64* %RDI, align 8, !tbaa !2428
  %3458 = load i64, i64* %RBP
  %3459 = sub i64 %3458, 20
  %3460 = load i64, i64* %PC
  %3461 = add i64 %3460, 4
  store i64 %3461, i64* %PC
  %3462 = inttoptr i64 %3459 to i32*
  %3463 = load i32, i32* %3462
  %3464 = sext i32 %3463 to i64
  store i64 %3464, i64* %RCX, align 8, !tbaa !2428
  %3465 = load i64, i64* %RCX
  %3466 = mul i64 %3465, 8
  %3467 = add i64 %3466, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %3468 = load i64, i64* %PC
  %3469 = add i64 %3468, 8
  store i64 %3469, i64* %PC
  %3470 = inttoptr i64 %3467 to i64*
  %3471 = load i64, i64* %3470
  store i64 %3471, i64* %RSI, align 8, !tbaa !2428
  %3472 = load i64, i64* %RBP
  %3473 = sub i64 %3472, 164
  %3474 = load i32, i32* %EAX
  %3475 = zext i32 %3474 to i64
  %3476 = load i64, i64* %PC
  %3477 = add i64 %3476, 6
  store i64 %3477, i64* %PC
  %3478 = inttoptr i64 %3473 to i32*
  store i32 %3474, i32* %3478
  %3479 = load i64, i64* %PC
  %3480 = add i64 %3479, 2
  store i64 %3480, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3481 = load i64, i64* %PC
  %3482 = sub i64 %3481, 1986
  %3483 = load i64, i64* %PC
  %3484 = add i64 %3483, 5
  %3485 = load i64, i64* %PC
  %3486 = add i64 %3485, 5
  store i64 %3486, i64* %PC
  %3487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3488 = load i64, i64* %3487, align 8, !tbaa !2428
  %3489 = add i64 %3488, -8
  %3490 = inttoptr i64 %3489 to i64*
  store i64 %3484, i64* %3490
  store i64 %3489, i64* %3487, align 8, !tbaa !2428
  %3491 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3482, i64* %3491, align 8, !tbaa !2428
  %3492 = load i64, i64* %PC
  %3493 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %3492, %struct.Memory* %3455)
  %3494 = load i64, i64* %PC
  %3495 = add i64 %3494, 10
  store i64 %3495, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 707), i64* %RDI, align 8, !tbaa !2428
  %3496 = load i64, i64* %PC
  %3497 = add i64 %3496, 10
  store i64 %3497, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RCX, align 8, !tbaa !2428
  %3498 = load i64, i64* %RBP
  %3499 = sub i64 %3498, 20
  %3500 = load i64, i64* %PC
  %3501 = add i64 %3500, 4
  store i64 %3501, i64* %PC
  %3502 = inttoptr i64 %3499 to i32*
  %3503 = load i32, i32* %3502
  %3504 = sext i32 %3503 to i64
  store i64 %3504, i64* %RSI, align 8, !tbaa !2428
  %3505 = load i64, i64* %RSI
  %3506 = load i64, i64* %PC
  %3507 = add i64 %3506, 4
  store i64 %3507, i64* %PC
  %3508 = sext i64 %3505 to i128
  %3509 = and i128 %3508, -18446744073709551616
  %3510 = zext i64 %3505 to i128
  %3511 = or i128 %3509, %3510
  %3512 = mul nsw i128 80, %3511
  %3513 = trunc i128 %3512 to i64
  store i64 %3513, i64* %RSI, align 8, !tbaa !2428
  %3514 = sext i64 %3513 to i128
  %3515 = icmp ne i128 %3514, %3512
  %3516 = zext i1 %3515 to i8
  %3517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3516, i8* %3517, align 1, !tbaa !2432
  %3518 = trunc i128 %3512 to i32
  %3519 = and i32 %3518, 255
  %3520 = call i32 @llvm.ctpop.i32(i32 %3519) #17
  %3521 = trunc i32 %3520 to i8
  %3522 = and i8 %3521, 1
  %3523 = xor i8 %3522, 1
  %3524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3523, i8* %3524, align 1, !tbaa !2446
  %3525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3525, align 1, !tbaa !2447
  %3526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3526, align 1, !tbaa !2448
  %3527 = lshr i64 %3513, 63
  %3528 = trunc i64 %3527 to i8
  %3529 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3528, i8* %3529, align 1, !tbaa !2449
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3516, i8* %3530, align 1, !tbaa !2450
  %3531 = load i64, i64* %RCX
  %3532 = load i64, i64* %RSI
  %3533 = load i64, i64* %PC
  %3534 = add i64 %3533, 3
  store i64 %3534, i64* %PC
  %3535 = add i64 %3532, %3531
  store i64 %3535, i64* %RCX, align 8, !tbaa !2428
  %3536 = icmp ult i64 %3535, %3531
  %3537 = icmp ult i64 %3535, %3532
  %3538 = or i1 %3536, %3537
  %3539 = zext i1 %3538 to i8
  %3540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3539, i8* %3540, align 1, !tbaa !2432
  %3541 = trunc i64 %3535 to i32
  %3542 = and i32 %3541, 255
  %3543 = call i32 @llvm.ctpop.i32(i32 %3542) #17
  %3544 = trunc i32 %3543 to i8
  %3545 = and i8 %3544, 1
  %3546 = xor i8 %3545, 1
  %3547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3546, i8* %3547, align 1, !tbaa !2446
  %3548 = xor i64 %3532, %3531
  %3549 = xor i64 %3548, %3535
  %3550 = lshr i64 %3549, 4
  %3551 = trunc i64 %3550 to i8
  %3552 = and i8 %3551, 1
  %3553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3552, i8* %3553, align 1, !tbaa !2447
  %3554 = icmp eq i64 %3535, 0
  %3555 = zext i1 %3554 to i8
  %3556 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3555, i8* %3556, align 1, !tbaa !2448
  %3557 = lshr i64 %3535, 63
  %3558 = trunc i64 %3557 to i8
  %3559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3558, i8* %3559, align 1, !tbaa !2449
  %3560 = lshr i64 %3531, 63
  %3561 = lshr i64 %3532, 63
  %3562 = xor i64 %3557, %3560
  %3563 = xor i64 %3557, %3561
  %3564 = add nuw nsw i64 %3562, %3563
  %3565 = icmp eq i64 %3564, 2
  %3566 = zext i1 %3565 to i8
  %3567 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3566, i8* %3567, align 1, !tbaa !2450
  %3568 = load i64, i64* %RCX
  %3569 = load i64, i64* %PC
  %3570 = add i64 %3569, 3
  store i64 %3570, i64* %PC
  store i64 %3568, i64* %RSI, align 8, !tbaa !2428
  %3571 = load i64, i64* %RBP
  %3572 = sub i64 %3571, 168
  %3573 = load i32, i32* %EAX
  %3574 = zext i32 %3573 to i64
  %3575 = load i64, i64* %PC
  %3576 = add i64 %3575, 6
  store i64 %3576, i64* %PC
  %3577 = inttoptr i64 %3572 to i32*
  store i32 %3573, i32* %3577
  %3578 = load i64, i64* %PC
  %3579 = add i64 %3578, 2
  store i64 %3579, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3580 = load i64, i64* %PC
  %3581 = sub i64 %3580, 2033
  %3582 = load i64, i64* %PC
  %3583 = add i64 %3582, 5
  %3584 = load i64, i64* %PC
  %3585 = add i64 %3584, 5
  store i64 %3585, i64* %PC
  %3586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3587 = load i64, i64* %3586, align 8, !tbaa !2428
  %3588 = add i64 %3587, -8
  %3589 = inttoptr i64 %3588 to i64*
  store i64 %3583, i64* %3589
  store i64 %3588, i64* %3586, align 8, !tbaa !2428
  %3590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3581, i64* %3590, align 8, !tbaa !2428
  %3591 = load i64, i64* %PC
  %3592 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %3591, %struct.Memory* %3493)
  %3593 = load i64, i64* %PC
  %3594 = add i64 %3593, 10
  store i64 %3594, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 724), i64* %RDI, align 8, !tbaa !2428
  %3595 = load i64, i64* %RBP
  %3596 = sub i64 %3595, 172
  %3597 = load i32, i32* %EAX
  %3598 = zext i32 %3597 to i64
  %3599 = load i64, i64* %PC
  %3600 = add i64 %3599, 6
  store i64 %3600, i64* %PC
  %3601 = inttoptr i64 %3596 to i32*
  store i32 %3597, i32* %3601
  %3602 = load i64, i64* %PC
  %3603 = add i64 %3602, 2
  store i64 %3603, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %3604 = load i64, i64* %PC
  %3605 = sub i64 %3604, 2056
  %3606 = load i64, i64* %PC
  %3607 = add i64 %3606, 5
  %3608 = load i64, i64* %PC
  %3609 = add i64 %3608, 5
  store i64 %3609, i64* %PC
  %3610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3611 = load i64, i64* %3610, align 8, !tbaa !2428
  %3612 = add i64 %3611, -8
  %3613 = inttoptr i64 %3612 to i64*
  store i64 %3607, i64* %3613
  store i64 %3612, i64* %3610, align 8, !tbaa !2428
  %3614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3605, i64* %3614, align 8, !tbaa !2428
  %3615 = load i64, i64* %PC
  %3616 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %3615, %struct.Memory* %3592)
  %3617 = load i64, i64* %RBP
  %3618 = sub i64 %3617, 20
  %3619 = load i64, i64* %PC
  %3620 = add i64 %3619, 4
  store i64 %3620, i64* %PC
  %3621 = inttoptr i64 %3618 to i32*
  %3622 = load i32, i32* %3621
  %3623 = sext i32 %3622 to i64
  store i64 %3623, i64* %RCX, align 8, !tbaa !2428
  %3624 = load i64, i64* %RCX
  %3625 = mul i64 %3624, 8
  %3626 = add i64 %3625, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %3627 = load i64, i64* %PC
  %3628 = add i64 %3627, 8
  store i64 %3628, i64* %PC
  %3629 = inttoptr i64 %3626 to i64*
  %3630 = load i64, i64* %3629
  store i64 %3630, i64* %RDI, align 8, !tbaa !2428
  %3631 = load i64, i64* %RBP
  %3632 = sub i64 %3631, 176
  %3633 = load i32, i32* %EAX
  %3634 = zext i32 %3633 to i64
  %3635 = load i64, i64* %PC
  %3636 = add i64 %3635, 6
  store i64 %3636, i64* %PC
  %3637 = inttoptr i64 %3632 to i32*
  store i32 %3633, i32* %3637
  %3638 = load i64, i64* %PC
  %3639 = sub i64 %3638, 2095
  %3640 = load i64, i64* %PC
  %3641 = add i64 %3640, 5
  %3642 = load i64, i64* %PC
  %3643 = add i64 %3642, 5
  store i64 %3643, i64* %PC
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3645 = load i64, i64* %3644, align 8, !tbaa !2428
  %3646 = add i64 %3645, -8
  %3647 = inttoptr i64 %3646 to i64*
  store i64 %3641, i64* %3647
  store i64 %3646, i64* %3644, align 8, !tbaa !2428
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3639, i64* %3648, align 8, !tbaa !2428
  %3649 = load i64, i64* %PC
  %3650 = call %struct.Memory* @ext_6026a0_strlen(%struct.State* %0, i64 %3649, %struct.Memory* %3616)
  %3651 = load i32, i32* %EAX
  %3652 = zext i32 %3651 to i64
  %3653 = load i64, i64* %PC
  %3654 = add i64 %3653, 2
  store i64 %3654, i64* %PC
  %3655 = and i64 %3652, 4294967295
  store i64 %3655, i64* %RDX, align 8, !tbaa !2428
  %3656 = load i64, i64* %RBP
  %3657 = sub i64 %3656, 28
  %3658 = load i32, i32* %EDX
  %3659 = zext i32 %3658 to i64
  %3660 = load i64, i64* %PC
  %3661 = add i64 %3660, 3
  store i64 %3661, i64* %PC
  %3662 = inttoptr i64 %3657 to i32*
  store i32 %3658, i32* %3662
  %3663 = load i64, i64* %RBP
  %3664 = sub i64 %3663, 24
  %3665 = load i64, i64* %PC
  %3666 = add i64 %3665, 7
  store i64 %3666, i64* %PC
  %3667 = inttoptr i64 %3664 to i32*
  store i32 0, i32* %3667
  br label %block_400e00

block_400d1f:                                     ; preds = %block_400b50, %block_400ed5
  %MEMORY.3 = phi %struct.Memory* [ %2986, %block_400b50 ], [ %MEMORY.0, %block_400ed5 ]
  %3668 = load i64, i64* %RBP
  %3669 = sub i64 %3668, 20
  %3670 = load i64, i64* %PC
  %3671 = add i64 %3670, 4
  store i64 %3671, i64* %PC
  %3672 = inttoptr i64 %3669 to i32*
  %3673 = load i32, i32* %3672
  %3674 = sub i32 %3673, 8
  %3675 = icmp ult i32 %3673, 8
  %3676 = zext i1 %3675 to i8
  %3677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3676, i8* %3677, align 1, !tbaa !2432
  %3678 = and i32 %3674, 255
  %3679 = call i32 @llvm.ctpop.i32(i32 %3678) #17
  %3680 = trunc i32 %3679 to i8
  %3681 = and i8 %3680, 1
  %3682 = xor i8 %3681, 1
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3682, i8* %3683, align 1, !tbaa !2446
  %3684 = xor i32 %3673, 8
  %3685 = xor i32 %3684, %3674
  %3686 = lshr i32 %3685, 4
  %3687 = trunc i32 %3686 to i8
  %3688 = and i8 %3687, 1
  %3689 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3688, i8* %3689, align 1, !tbaa !2447
  %3690 = icmp eq i32 %3674, 0
  %3691 = zext i1 %3690 to i8
  %3692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3691, i8* %3692, align 1, !tbaa !2448
  %3693 = lshr i32 %3674, 31
  %3694 = trunc i32 %3693 to i8
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3694, i8* %3695, align 1, !tbaa !2449
  %3696 = lshr i32 %3673, 31
  %3697 = xor i32 %3693, %3696
  %3698 = add nuw nsw i32 %3697, %3696
  %3699 = icmp eq i32 %3698, 2
  %3700 = zext i1 %3699 to i8
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3700, i8* %3701, align 1, !tbaa !2450
  %3702 = load i64, i64* %PC
  %3703 = add i64 %3702, 453
  %3704 = load i64, i64* %PC
  %3705 = add i64 %3704, 6
  %3706 = load i64, i64* %PC
  %3707 = add i64 %3706, 6
  store i64 %3707, i64* %PC
  %3708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3709 = load i8, i8* %3708, align 1, !tbaa !2449
  %3710 = icmp ne i8 %3709, 0
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3712 = load i8, i8* %3711, align 1, !tbaa !2450
  %3713 = icmp ne i8 %3712, 0
  %3714 = xor i1 %3710, %3713
  %3715 = xor i1 %3714, true
  %3716 = zext i1 %3715 to i8
  store i8 %3716, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %3717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3718 = select i1 %3714, i64 %3705, i64 %3703
  store i64 %3718, i64* %3717, align 8, !tbaa !2428
  %3719 = load i8, i8* %BRANCH_TAKEN
  %3720 = icmp eq i8 %3719, 1
  br i1 %3720, label %block_400ee8, label %block_400d29

block_40081a:                                     ; preds = %block_400813, %block_400824
  %MEMORY.4 = phi %struct.Memory* [ %MEMORY.8, %block_400813 ], [ %MEMORY.4, %block_400824 ]
  %3721 = load i64, i64* %RBP
  %3722 = sub i64 %3721, 24
  %3723 = load i64, i64* %PC
  %3724 = add i64 %3723, 4
  store i64 %3724, i64* %PC
  %3725 = inttoptr i64 %3722 to i32*
  %3726 = load i32, i32* %3725
  %3727 = sub i32 %3726, 4
  %3728 = icmp ult i32 %3726, 4
  %3729 = zext i1 %3728 to i8
  %3730 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3729, i8* %3730, align 1, !tbaa !2432
  %3731 = and i32 %3727, 255
  %3732 = call i32 @llvm.ctpop.i32(i32 %3731) #17
  %3733 = trunc i32 %3732 to i8
  %3734 = and i8 %3733, 1
  %3735 = xor i8 %3734, 1
  %3736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3735, i8* %3736, align 1, !tbaa !2446
  %3737 = xor i32 %3726, 4
  %3738 = xor i32 %3737, %3727
  %3739 = lshr i32 %3738, 4
  %3740 = trunc i32 %3739 to i8
  %3741 = and i8 %3740, 1
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3741, i8* %3742, align 1, !tbaa !2447
  %3743 = icmp eq i32 %3727, 0
  %3744 = zext i1 %3743 to i8
  %3745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3744, i8* %3745, align 1, !tbaa !2448
  %3746 = lshr i32 %3727, 31
  %3747 = trunc i32 %3746 to i8
  %3748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3747, i8* %3748, align 1, !tbaa !2449
  %3749 = lshr i32 %3726, 31
  %3750 = xor i32 %3746, %3749
  %3751 = add nuw nsw i32 %3750, %3749
  %3752 = icmp eq i32 %3751, 2
  %3753 = zext i1 %3752 to i8
  %3754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3753, i8* %3754, align 1, !tbaa !2450
  %3755 = load i64, i64* %PC
  %3756 = add i64 %3755, 90
  %3757 = load i64, i64* %PC
  %3758 = add i64 %3757, 6
  %3759 = load i64, i64* %PC
  %3760 = add i64 %3759, 6
  store i64 %3760, i64* %PC
  %3761 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3762 = load i8, i8* %3761, align 1, !tbaa !2449
  %3763 = icmp ne i8 %3762, 0
  %3764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3765 = load i8, i8* %3764, align 1, !tbaa !2450
  %3766 = icmp ne i8 %3765, 0
  %3767 = xor i1 %3763, %3766
  %3768 = xor i1 %3767, true
  %3769 = zext i1 %3768 to i8
  store i8 %3769, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %3770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3771 = select i1 %3767, i64 %3758, i64 %3756
  store i64 %3771, i64* %3770, align 8, !tbaa !2428
  %3772 = load i8, i8* %BRANCH_TAKEN
  %3773 = icmp eq i8 %3772, 1
  %3774 = load i64, i64* %PC
  br i1 %3773, label %block_400878, label %block_400824

block_400eab:                                     ; preds = %block_400e0c, %block_400ea2
  %MEMORY.5 = phi %struct.Memory* [ %4229, %block_400e0c ], [ %4229, %block_400ea2 ]
  %3775 = load i64, i64* %PC
  %3776 = add i64 %3775, 5
  %3777 = load i64, i64* %PC
  %3778 = add i64 %3777, 5
  store i64 %3778, i64* %PC
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3776, i64* %3779, align 8, !tbaa !2428
  %3780 = load i64, i64* %RBP
  %3781 = sub i64 %3780, 24
  %3782 = load i64, i64* %PC
  %3783 = add i64 %3782, 3
  store i64 %3783, i64* %PC
  %3784 = inttoptr i64 %3781 to i32*
  %3785 = load i32, i32* %3784
  %3786 = zext i32 %3785 to i64
  store i64 %3786, i64* %RAX, align 8, !tbaa !2428
  %3787 = load i64, i64* %RAX
  %3788 = load i64, i64* %PC
  %3789 = add i64 %3788, 3
  store i64 %3789, i64* %PC
  %3790 = trunc i64 %3787 to i32
  %3791 = add i32 1, %3790
  %3792 = zext i32 %3791 to i64
  store i64 %3792, i64* %RAX, align 8, !tbaa !2428
  %3793 = icmp ult i32 %3791, %3790
  %3794 = icmp ult i32 %3791, 1
  %3795 = or i1 %3793, %3794
  %3796 = zext i1 %3795 to i8
  %3797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3796, i8* %3797, align 1, !tbaa !2432
  %3798 = and i32 %3791, 255
  %3799 = call i32 @llvm.ctpop.i32(i32 %3798) #17
  %3800 = trunc i32 %3799 to i8
  %3801 = and i8 %3800, 1
  %3802 = xor i8 %3801, 1
  %3803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3802, i8* %3803, align 1, !tbaa !2446
  %3804 = xor i64 1, %3787
  %3805 = trunc i64 %3804 to i32
  %3806 = xor i32 %3805, %3791
  %3807 = lshr i32 %3806, 4
  %3808 = trunc i32 %3807 to i8
  %3809 = and i8 %3808, 1
  %3810 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3809, i8* %3810, align 1, !tbaa !2447
  %3811 = icmp eq i32 %3791, 0
  %3812 = zext i1 %3811 to i8
  %3813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3812, i8* %3813, align 1, !tbaa !2448
  %3814 = lshr i32 %3791, 31
  %3815 = trunc i32 %3814 to i8
  %3816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3815, i8* %3816, align 1, !tbaa !2449
  %3817 = lshr i32 %3790, 31
  %3818 = xor i32 %3814, %3817
  %3819 = add nuw nsw i32 %3818, %3814
  %3820 = icmp eq i32 %3819, 2
  %3821 = zext i1 %3820 to i8
  %3822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3821, i8* %3822, align 1, !tbaa !2450
  %3823 = load i64, i64* %RBP
  %3824 = sub i64 %3823, 24
  %3825 = load i32, i32* %EAX
  %3826 = zext i32 %3825 to i64
  %3827 = load i64, i64* %PC
  %3828 = add i64 %3827, 3
  store i64 %3828, i64* %PC
  %3829 = inttoptr i64 %3824 to i32*
  store i32 %3825, i32* %3829
  %3830 = load i64, i64* %PC
  %3831 = sub i64 %3830, 185
  %3832 = load i64, i64* %PC
  %3833 = add i64 %3832, 5
  store i64 %3833, i64* %PC
  %3834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3831, i64* %3834, align 8, !tbaa !2428
  br label %block_400e00

block_400919:                                     ; preds = %block_40088b, %block_4009ce
  %MEMORY.6 = phi %struct.Memory* [ %4570, %block_40088b ], [ %1707, %block_4009ce ]
  %3835 = load i64, i64* %PC
  %3836 = add i64 %3835, 7
  store i64 %3836, i64* %PC
  %3837 = load i32, i32* bitcast (%itercount_type* @itercount to i32*)
  %3838 = zext i32 %3837 to i64
  store i64 %3838, i64* %RAX, align 8, !tbaa !2428
  %3839 = load i32, i32* %EAX
  %3840 = zext i32 %3839 to i64
  %3841 = load i64, i64* %PC
  %3842 = add i64 %3841, 7
  store i64 %3842, i64* %PC
  %3843 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %3844 = sub i32 %3839, %3843
  %3845 = icmp ult i32 %3839, %3843
  %3846 = zext i1 %3845 to i8
  %3847 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3846, i8* %3847, align 1, !tbaa !2432
  %3848 = and i32 %3844, 255
  %3849 = call i32 @llvm.ctpop.i32(i32 %3848) #17
  %3850 = trunc i32 %3849 to i8
  %3851 = and i8 %3850, 1
  %3852 = xor i8 %3851, 1
  %3853 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3852, i8* %3853, align 1, !tbaa !2446
  %3854 = xor i32 %3843, %3839
  %3855 = xor i32 %3854, %3844
  %3856 = lshr i32 %3855, 4
  %3857 = trunc i32 %3856 to i8
  %3858 = and i8 %3857, 1
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3858, i8* %3859, align 1, !tbaa !2447
  %3860 = icmp eq i32 %3844, 0
  %3861 = zext i1 %3860 to i8
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3861, i8* %3862, align 1, !tbaa !2448
  %3863 = lshr i32 %3844, 31
  %3864 = trunc i32 %3863 to i8
  %3865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3864, i8* %3865, align 1, !tbaa !2449
  %3866 = lshr i32 %3839, 31
  %3867 = lshr i32 %3843, 31
  %3868 = xor i32 %3867, %3866
  %3869 = xor i32 %3863, %3866
  %3870 = add nuw nsw i32 %3869, %3868
  %3871 = icmp eq i32 %3870, 2
  %3872 = zext i1 %3871 to i8
  %3873 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3872, i8* %3873, align 1, !tbaa !2450
  %3874 = load i64, i64* %PC
  %3875 = add i64 %3874, 553
  %3876 = load i64, i64* %PC
  %3877 = add i64 %3876, 6
  %3878 = load i64, i64* %PC
  %3879 = add i64 %3878, 6
  store i64 %3879, i64* %PC
  %3880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %3881 = load i8, i8* %3880, align 1, !tbaa !2449
  %3882 = icmp ne i8 %3881, 0
  %3883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %3884 = load i8, i8* %3883, align 1, !tbaa !2450
  %3885 = icmp ne i8 %3884, 0
  %3886 = xor i1 %3882, %3885
  %3887 = xor i1 %3886, true
  %3888 = zext i1 %3887 to i8
  store i8 %3888, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %3889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3890 = select i1 %3886, i64 %3877, i64 %3875
  store i64 %3890, i64* %3889, align 8, !tbaa !2428
  %3891 = load i8, i8* %BRANCH_TAKEN
  %3892 = icmp eq i8 %3891, 1
  %3893 = load i64, i64* %PC
  %3894 = add i64 %3893, 10
  store i64 %3894, i64* %PC
  br i1 %3892, label %block_400b50, label %block_40092d

block_400d29:                                     ; preds = %block_400d1f
  %3895 = load i64, i64* %PC
  %3896 = add i64 %3895, 10
  store i64 %3896, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RAX, align 8, !tbaa !2428
  %3897 = load i64, i64* %RBP
  %3898 = sub i64 %3897, 20
  %3899 = load i64, i64* %PC
  %3900 = add i64 %3899, 4
  store i64 %3900, i64* %PC
  %3901 = inttoptr i64 %3898 to i32*
  %3902 = load i32, i32* %3901
  %3903 = sext i32 %3902 to i64
  store i64 %3903, i64* %RCX, align 8, !tbaa !2428
  %3904 = load i64, i64* %RCX
  %3905 = load i64, i64* %PC
  %3906 = add i64 %3905, 4
  store i64 %3906, i64* %PC
  %3907 = sext i64 %3904 to i128
  %3908 = and i128 %3907, -18446744073709551616
  %3909 = zext i64 %3904 to i128
  %3910 = or i128 %3908, %3909
  %3911 = mul nsw i128 80, %3910
  %3912 = trunc i128 %3911 to i64
  store i64 %3912, i64* %RCX, align 8, !tbaa !2428
  %3913 = sext i64 %3912 to i128
  %3914 = icmp ne i128 %3913, %3911
  %3915 = zext i1 %3914 to i8
  %3916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3915, i8* %3916, align 1, !tbaa !2432
  %3917 = trunc i128 %3911 to i32
  %3918 = and i32 %3917, 255
  %3919 = call i32 @llvm.ctpop.i32(i32 %3918) #17
  %3920 = trunc i32 %3919 to i8
  %3921 = and i8 %3920, 1
  %3922 = xor i8 %3921, 1
  %3923 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3922, i8* %3923, align 1, !tbaa !2446
  %3924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3924, align 1, !tbaa !2447
  %3925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3925, align 1, !tbaa !2448
  %3926 = lshr i64 %3912, 63
  %3927 = trunc i64 %3926 to i8
  %3928 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3927, i8* %3928, align 1, !tbaa !2449
  %3929 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3915, i8* %3929, align 1, !tbaa !2450
  %3930 = load i64, i64* %RAX
  %3931 = load i64, i64* %RCX
  %3932 = load i64, i64* %PC
  %3933 = add i64 %3932, 3
  store i64 %3933, i64* %PC
  %3934 = add i64 %3931, %3930
  store i64 %3934, i64* %RAX, align 8, !tbaa !2428
  %3935 = icmp ult i64 %3934, %3930
  %3936 = icmp ult i64 %3934, %3931
  %3937 = or i1 %3935, %3936
  %3938 = zext i1 %3937 to i8
  %3939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3938, i8* %3939, align 1, !tbaa !2432
  %3940 = trunc i64 %3934 to i32
  %3941 = and i32 %3940, 255
  %3942 = call i32 @llvm.ctpop.i32(i32 %3941) #17
  %3943 = trunc i32 %3942 to i8
  %3944 = and i8 %3943, 1
  %3945 = xor i8 %3944, 1
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3945, i8* %3946, align 1, !tbaa !2446
  %3947 = xor i64 %3931, %3930
  %3948 = xor i64 %3947, %3934
  %3949 = lshr i64 %3948, 4
  %3950 = trunc i64 %3949 to i8
  %3951 = and i8 %3950, 1
  %3952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3951, i8* %3952, align 1, !tbaa !2447
  %3953 = icmp eq i64 %3934, 0
  %3954 = zext i1 %3953 to i8
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3954, i8* %3955, align 1, !tbaa !2448
  %3956 = lshr i64 %3934, 63
  %3957 = trunc i64 %3956 to i8
  %3958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3957, i8* %3958, align 1, !tbaa !2449
  %3959 = lshr i64 %3930, 63
  %3960 = lshr i64 %3931, 63
  %3961 = xor i64 %3956, %3959
  %3962 = xor i64 %3956, %3960
  %3963 = add nuw nsw i64 %3961, %3962
  %3964 = icmp eq i64 %3963, 2
  %3965 = zext i1 %3964 to i8
  %3966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3965, i8* %3966, align 1, !tbaa !2450
  %3967 = load i64, i64* %RBP
  %3968 = sub i64 %3967, 20
  %3969 = load i64, i64* %PC
  %3970 = add i64 %3969, 4
  store i64 %3970, i64* %PC
  %3971 = inttoptr i64 %3968 to i32*
  %3972 = load i32, i32* %3971
  %3973 = sext i32 %3972 to i64
  store i64 %3973, i64* %RCX, align 8, !tbaa !2428
  %3974 = load i64, i64* %RCX
  %3975 = mul i64 %3974, 8
  %3976 = add i64 %3975, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %3977 = load i64, i64* %PC
  %3978 = add i64 %3977, 8
  store i64 %3978, i64* %PC
  %3979 = inttoptr i64 %3976 to i64*
  %3980 = load i64, i64* %3979
  store i64 %3980, i64* %RSI, align 8, !tbaa !2428
  %3981 = load i64, i64* %RAX
  %3982 = load i64, i64* %PC
  %3983 = add i64 %3982, 3
  store i64 %3983, i64* %PC
  store i64 %3981, i64* %RDI, align 8, !tbaa !2428
  %3984 = load i64, i64* %PC
  %3985 = sub i64 %3984, 1885
  %3986 = load i64, i64* %PC
  %3987 = add i64 %3986, 5
  %3988 = load i64, i64* %PC
  %3989 = add i64 %3988, 5
  store i64 %3989, i64* %PC
  %3990 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %3991 = load i64, i64* %3990, align 8, !tbaa !2428
  %3992 = add i64 %3991, -8
  %3993 = inttoptr i64 %3992 to i64*
  store i64 %3987, i64* %3993
  store i64 %3992, i64* %3990, align 8, !tbaa !2428
  %3994 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3985, i64* %3994, align 8, !tbaa !2428
  %3995 = load i64, i64* %PC
  %3996 = call %struct.Memory* @ext_602678_strcmp(%struct.State* %0, i64 %3995, %struct.Memory* %MEMORY.3)
  %3997 = load i32, i32* %EAX
  %3998 = zext i32 %3997 to i64
  %3999 = load i64, i64* %PC
  %4000 = add i64 %3999, 3
  store i64 %4000, i64* %PC
  %4001 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4001, align 1, !tbaa !2432
  %4002 = and i32 %3997, 255
  %4003 = call i32 @llvm.ctpop.i32(i32 %4002) #17
  %4004 = trunc i32 %4003 to i8
  %4005 = and i8 %4004, 1
  %4006 = xor i8 %4005, 1
  %4007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4006, i8* %4007, align 1, !tbaa !2446
  %4008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4008, align 1, !tbaa !2447
  %4009 = icmp eq i32 %3997, 0
  %4010 = zext i1 %4009 to i8
  %4011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4010, i8* %4011, align 1, !tbaa !2448
  %4012 = lshr i32 %3997, 31
  %4013 = trunc i32 %4012 to i8
  %4014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4013, i8* %4014, align 1, !tbaa !2449
  %4015 = lshr i32 %3997, 31
  %4016 = xor i32 %4012, %4015
  %4017 = add nuw nsw i32 %4016, %4015
  %4018 = icmp eq i32 %4017, 2
  %4019 = zext i1 %4018 to i8
  %4020 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4019, i8* %4020, align 1, !tbaa !2450
  %4021 = load i64, i64* %PC
  %4022 = add i64 %4021, 384
  %4023 = load i64, i64* %PC
  %4024 = add i64 %4023, 6
  %4025 = load i64, i64* %PC
  %4026 = add i64 %4025, 6
  store i64 %4026, i64* %PC
  %4027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4028 = load i8, i8* %4027, align 1, !tbaa !2448
  store i8 %4028, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4030 = icmp ne i8 %4028, 0
  %4031 = select i1 %4030, i64 %4022, i64 %4024
  store i64 %4031, i64* %4029, align 8, !tbaa !2428
  %4032 = load i8, i8* %BRANCH_TAKEN
  %4033 = icmp eq i8 %4032, 1
  br i1 %4033, label %block_400ed5, label %block_400d5b

block_400813:                                     ; preds = %block_400800
  %4034 = load i64, i64* %RBP
  %4035 = sub i64 %4034, 24
  %4036 = load i64, i64* %PC
  %4037 = add i64 %4036, 7
  store i64 %4037, i64* %PC
  %4038 = inttoptr i64 %4035 to i32*
  store i32 0, i32* %4038
  br label %block_40081a

block_400e0c:                                     ; preds = %block_400e00
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 737), i64* %RDI, align 8, !tbaa !2428
  %4039 = load i64, i64* %PC
  %4040 = add i64 %4039, 5
  store i64 %4040, i64* %PC
  store i64 94, i64* %RAX, align 8, !tbaa !2428
  %4041 = load i64, i64* %PC
  %4042 = add i64 %4041, 5
  store i64 %4042, i64* %PC
  store i64 32, i64* %RCX, align 8, !tbaa !2428
  %4043 = load i64, i64* %PC
  %4044 = add i64 %4043, 10
  store i64 %4044, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4045 = load i64, i64* %RBP
  %4046 = sub i64 %4045, 20
  %4047 = load i64, i64* %PC
  %4048 = add i64 %4047, 4
  store i64 %4048, i64* %PC
  %4049 = inttoptr i64 %4046 to i32*
  %4050 = load i32, i32* %4049
  %4051 = sext i32 %4050 to i64
  store i64 %4051, i64* %RSI, align 8, !tbaa !2428
  %4052 = load i64, i64* %RSI
  %4053 = mul i64 %4052, 8
  %4054 = add i64 %4053, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4055 = load i64, i64* %PC
  %4056 = add i64 %4055, 8
  store i64 %4056, i64* %PC
  %4057 = inttoptr i64 %4054 to i64*
  %4058 = load i64, i64* %4057
  store i64 %4058, i64* %RSI, align 8, !tbaa !2428
  %4059 = load i64, i64* %RBP
  %4060 = sub i64 %4059, 24
  %4061 = load i64, i64* %PC
  %4062 = add i64 %4061, 4
  store i64 %4062, i64* %PC
  %4063 = inttoptr i64 %4060 to i32*
  %4064 = load i32, i32* %4063
  %4065 = sext i32 %4064 to i64
  store i64 %4065, i64* %R8, align 8, !tbaa !2428
  %4066 = bitcast i32* %R9D to i64*
  %4067 = load i64, i64* %RSI
  %4068 = load i64, i64* %R8
  %4069 = add i64 %4068, %4067
  %4070 = load i64, i64* %PC
  %4071 = add i64 %4070, 5
  store i64 %4071, i64* %PC
  %4072 = inttoptr i64 %4069 to i8*
  %4073 = load i8, i8* %4072
  %4074 = sext i8 %4073 to i64
  %4075 = and i64 %4074, 4294967295
  store i64 %4075, i64* %4066, align 8, !tbaa !2428
  %4076 = load i64, i64* %RBP
  %4077 = sub i64 %4076, 20
  %4078 = load i64, i64* %PC
  %4079 = add i64 %4078, 4
  store i64 %4079, i64* %PC
  %4080 = inttoptr i64 %4077 to i32*
  %4081 = load i32, i32* %4080
  %4082 = sext i32 %4081 to i64
  store i64 %4082, i64* %RSI, align 8, !tbaa !2428
  %4083 = load i64, i64* %RSI
  %4084 = load i64, i64* %PC
  %4085 = add i64 %4084, 4
  store i64 %4085, i64* %PC
  %4086 = sext i64 %4083 to i128
  %4087 = and i128 %4086, -18446744073709551616
  %4088 = zext i64 %4083 to i128
  %4089 = or i128 %4087, %4088
  %4090 = mul nsw i128 80, %4089
  %4091 = trunc i128 %4090 to i64
  store i64 %4091, i64* %RSI, align 8, !tbaa !2428
  %4092 = sext i64 %4091 to i128
  %4093 = icmp ne i128 %4092, %4090
  %4094 = zext i1 %4093 to i8
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4094, i8* %4095, align 1, !tbaa !2432
  %4096 = trunc i128 %4090 to i32
  %4097 = and i32 %4096, 255
  %4098 = call i32 @llvm.ctpop.i32(i32 %4097) #17
  %4099 = trunc i32 %4098 to i8
  %4100 = and i8 %4099, 1
  %4101 = xor i8 %4100, 1
  %4102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4101, i8* %4102, align 1, !tbaa !2446
  %4103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4103, align 1, !tbaa !2447
  %4104 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4104, align 1, !tbaa !2448
  %4105 = lshr i64 %4091, 63
  %4106 = trunc i64 %4105 to i8
  %4107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4106, i8* %4107, align 1, !tbaa !2449
  %4108 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4094, i8* %4108, align 1, !tbaa !2450
  %4109 = load i64, i64* %RDX
  %4110 = load i64, i64* %RSI
  %4111 = load i64, i64* %PC
  %4112 = add i64 %4111, 3
  store i64 %4112, i64* %PC
  %4113 = add i64 %4110, %4109
  store i64 %4113, i64* %RDX, align 8, !tbaa !2428
  %4114 = icmp ult i64 %4113, %4109
  %4115 = icmp ult i64 %4113, %4110
  %4116 = or i1 %4114, %4115
  %4117 = zext i1 %4116 to i8
  %4118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4117, i8* %4118, align 1, !tbaa !2432
  %4119 = trunc i64 %4113 to i32
  %4120 = and i32 %4119, 255
  %4121 = call i32 @llvm.ctpop.i32(i32 %4120) #17
  %4122 = trunc i32 %4121 to i8
  %4123 = and i8 %4122, 1
  %4124 = xor i8 %4123, 1
  %4125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4124, i8* %4125, align 1, !tbaa !2446
  %4126 = xor i64 %4110, %4109
  %4127 = xor i64 %4126, %4113
  %4128 = lshr i64 %4127, 4
  %4129 = trunc i64 %4128 to i8
  %4130 = and i8 %4129, 1
  %4131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4130, i8* %4131, align 1, !tbaa !2447
  %4132 = icmp eq i64 %4113, 0
  %4133 = zext i1 %4132 to i8
  %4134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4133, i8* %4134, align 1, !tbaa !2448
  %4135 = lshr i64 %4113, 63
  %4136 = trunc i64 %4135 to i8
  %4137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4136, i8* %4137, align 1, !tbaa !2449
  %4138 = lshr i64 %4109, 63
  %4139 = lshr i64 %4110, 63
  %4140 = xor i64 %4135, %4138
  %4141 = xor i64 %4135, %4139
  %4142 = add nuw nsw i64 %4140, %4141
  %4143 = icmp eq i64 %4142, 2
  %4144 = zext i1 %4143 to i8
  %4145 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4144, i8* %4145, align 1, !tbaa !2450
  %4146 = load i64, i64* %RBP
  %4147 = sub i64 %4146, 24
  %4148 = load i64, i64* %PC
  %4149 = add i64 %4148, 4
  store i64 %4149, i64* %PC
  %4150 = inttoptr i64 %4147 to i32*
  %4151 = load i32, i32* %4150
  %4152 = sext i32 %4151 to i64
  store i64 %4152, i64* %RSI, align 8, !tbaa !2428
  %4153 = bitcast i32* %R10D to i64*
  %4154 = load i64, i64* %RDX
  %4155 = load i64, i64* %RSI
  %4156 = add i64 %4155, %4154
  %4157 = load i64, i64* %PC
  %4158 = add i64 %4157, 5
  store i64 %4158, i64* %PC
  %4159 = inttoptr i64 %4156 to i8*
  %4160 = load i8, i8* %4159
  %4161 = sext i8 %4160 to i64
  %4162 = and i64 %4161, 4294967295
  store i64 %4162, i64* %4153, align 8, !tbaa !2428
  %4163 = load i32, i32* %R9D
  %4164 = zext i32 %4163 to i64
  %4165 = load i32, i32* %R10D
  %4166 = zext i32 %4165 to i64
  %4167 = load i64, i64* %PC
  %4168 = add i64 %4167, 3
  store i64 %4168, i64* %PC
  %4169 = sub i32 %4163, %4165
  %4170 = icmp ult i32 %4163, %4165
  %4171 = zext i1 %4170 to i8
  %4172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4171, i8* %4172, align 1, !tbaa !2432
  %4173 = and i32 %4169, 255
  %4174 = call i32 @llvm.ctpop.i32(i32 %4173) #17
  %4175 = trunc i32 %4174 to i8
  %4176 = and i8 %4175, 1
  %4177 = xor i8 %4176, 1
  %4178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4177, i8* %4178, align 1, !tbaa !2446
  %4179 = xor i64 %4166, %4164
  %4180 = trunc i64 %4179 to i32
  %4181 = xor i32 %4180, %4169
  %4182 = lshr i32 %4181, 4
  %4183 = trunc i32 %4182 to i8
  %4184 = and i8 %4183, 1
  %4185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4184, i8* %4185, align 1, !tbaa !2447
  %4186 = icmp eq i32 %4169, 0
  %4187 = zext i1 %4186 to i8
  %4188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4187, i8* %4188, align 1, !tbaa !2448
  %4189 = lshr i32 %4169, 31
  %4190 = trunc i32 %4189 to i8
  %4191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4190, i8* %4191, align 1, !tbaa !2449
  %4192 = lshr i32 %4163, 31
  %4193 = lshr i32 %4165, 31
  %4194 = xor i32 %4193, %4192
  %4195 = xor i32 %4189, %4192
  %4196 = add nuw nsw i32 %4195, %4194
  %4197 = icmp eq i32 %4196, 2
  %4198 = zext i1 %4197 to i8
  %4199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4198, i8* %4199, align 1, !tbaa !2450
  %4200 = load i32, i32* %ECX
  %4201 = zext i32 %4200 to i64
  %4202 = load i64, i64* %PC
  %4203 = add i64 %4202, 3
  store i64 %4203, i64* %PC
  %4204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4205 = load i8, i8* %4204, align 1, !tbaa !2448
  %4206 = icmp ne i8 %4205, 0
  %4207 = load i64, i64* %RAX, align 8, !tbaa !2428
  %4208 = select i1 %4206, i64 %4201, i64 %4207
  %4209 = and i64 %4208, 4294967295
  store i64 %4209, i64* %RAX, align 8, !tbaa !2428
  %4210 = load i32, i32* %EAX
  %4211 = zext i32 %4210 to i64
  %4212 = load i64, i64* %PC
  %4213 = add i64 %4212, 2
  store i64 %4213, i64* %PC
  %4214 = and i64 %4211, 4294967295
  store i64 %4214, i64* %RSI, align 8, !tbaa !2428
  %4215 = load i64, i64* %PC
  %4216 = add i64 %4215, 2
  store i64 %4216, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4217 = load i64, i64* %PC
  %4218 = sub i64 %4217, 2189
  %4219 = load i64, i64* %PC
  %4220 = add i64 %4219, 5
  %4221 = load i64, i64* %PC
  %4222 = add i64 %4221, 5
  store i64 %4222, i64* %PC
  %4223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4224 = load i64, i64* %4223, align 8, !tbaa !2428
  %4225 = add i64 %4224, -8
  %4226 = inttoptr i64 %4225 to i64*
  store i64 %4220, i64* %4226
  store i64 %4225, i64* %4223, align 8, !tbaa !2428
  %4227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4218, i64* %4227, align 8, !tbaa !2428
  %4228 = load i64, i64* %PC
  %4229 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4228, %struct.Memory* %MEMORY.7)
  %4230 = load i64, i64* %PC
  %4231 = add i64 %4230, 10
  store i64 %4231, i64* %PC
  store i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 624), i64* %RDX, align 8, !tbaa !2428
  %4232 = load i64, i64* %RBP
  %4233 = sub i64 %4232, 20
  %4234 = load i64, i64* %PC
  %4235 = add i64 %4234, 4
  store i64 %4235, i64* %PC
  %4236 = inttoptr i64 %4233 to i32*
  %4237 = load i32, i32* %4236
  %4238 = sext i32 %4237 to i64
  store i64 %4238, i64* %RDI, align 8, !tbaa !2428
  %4239 = load i64, i64* %RDI
  %4240 = mul i64 %4239, 8
  %4241 = add i64 %4240, add (i64 ptrtoint (%niter_type* @niter to i64), i64 144)
  %4242 = load i64, i64* %PC
  %4243 = add i64 %4242, 8
  store i64 %4243, i64* %PC
  %4244 = inttoptr i64 %4241 to i64*
  %4245 = load i64, i64* %4244
  store i64 %4245, i64* %RDI, align 8, !tbaa !2428
  %4246 = load i64, i64* %RBP
  %4247 = sub i64 %4246, 24
  %4248 = load i64, i64* %PC
  %4249 = add i64 %4248, 4
  store i64 %4249, i64* %PC
  %4250 = inttoptr i64 %4247 to i32*
  %4251 = load i32, i32* %4250
  %4252 = sext i32 %4251 to i64
  store i64 %4252, i64* %R8, align 8, !tbaa !2428
  %4253 = load i64, i64* %RDI
  %4254 = load i64, i64* %R8
  %4255 = add i64 %4254, %4253
  %4256 = load i64, i64* %PC
  %4257 = add i64 %4256, 5
  store i64 %4257, i64* %PC
  %4258 = inttoptr i64 %4255 to i8*
  %4259 = load i8, i8* %4258
  %4260 = sext i8 %4259 to i64
  %4261 = and i64 %4260, 4294967295
  store i64 %4261, i64* %RCX, align 8, !tbaa !2428
  %4262 = load i64, i64* %RBP
  %4263 = sub i64 %4262, 20
  %4264 = load i64, i64* %PC
  %4265 = add i64 %4264, 4
  store i64 %4265, i64* %PC
  %4266 = inttoptr i64 %4263 to i32*
  %4267 = load i32, i32* %4266
  %4268 = sext i32 %4267 to i64
  store i64 %4268, i64* %RDI, align 8, !tbaa !2428
  %4269 = load i64, i64* %RDI
  %4270 = load i64, i64* %PC
  %4271 = add i64 %4270, 4
  store i64 %4271, i64* %PC
  %4272 = sext i64 %4269 to i128
  %4273 = and i128 %4272, -18446744073709551616
  %4274 = zext i64 %4269 to i128
  %4275 = or i128 %4273, %4274
  %4276 = mul nsw i128 80, %4275
  %4277 = trunc i128 %4276 to i64
  store i64 %4277, i64* %RDI, align 8, !tbaa !2428
  %4278 = sext i64 %4277 to i128
  %4279 = icmp ne i128 %4278, %4276
  %4280 = zext i1 %4279 to i8
  %4281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4280, i8* %4281, align 1, !tbaa !2432
  %4282 = trunc i128 %4276 to i32
  %4283 = and i32 %4282, 255
  %4284 = call i32 @llvm.ctpop.i32(i32 %4283) #17
  %4285 = trunc i32 %4284 to i8
  %4286 = and i8 %4285, 1
  %4287 = xor i8 %4286, 1
  %4288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4287, i8* %4288, align 1, !tbaa !2446
  %4289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4289, align 1, !tbaa !2447
  %4290 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4290, align 1, !tbaa !2448
  %4291 = lshr i64 %4277, 63
  %4292 = trunc i64 %4291 to i8
  %4293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4292, i8* %4293, align 1, !tbaa !2449
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4280, i8* %4294, align 1, !tbaa !2450
  %4295 = load i64, i64* %RDX
  %4296 = load i64, i64* %RDI
  %4297 = load i64, i64* %PC
  %4298 = add i64 %4297, 3
  store i64 %4298, i64* %PC
  %4299 = add i64 %4296, %4295
  store i64 %4299, i64* %RDX, align 8, !tbaa !2428
  %4300 = icmp ult i64 %4299, %4295
  %4301 = icmp ult i64 %4299, %4296
  %4302 = or i1 %4300, %4301
  %4303 = zext i1 %4302 to i8
  %4304 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4303, i8* %4304, align 1, !tbaa !2432
  %4305 = trunc i64 %4299 to i32
  %4306 = and i32 %4305, 255
  %4307 = call i32 @llvm.ctpop.i32(i32 %4306) #17
  %4308 = trunc i32 %4307 to i8
  %4309 = and i8 %4308, 1
  %4310 = xor i8 %4309, 1
  %4311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4310, i8* %4311, align 1, !tbaa !2446
  %4312 = xor i64 %4296, %4295
  %4313 = xor i64 %4312, %4299
  %4314 = lshr i64 %4313, 4
  %4315 = trunc i64 %4314 to i8
  %4316 = and i8 %4315, 1
  %4317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4316, i8* %4317, align 1, !tbaa !2447
  %4318 = icmp eq i64 %4299, 0
  %4319 = zext i1 %4318 to i8
  %4320 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4319, i8* %4320, align 1, !tbaa !2448
  %4321 = lshr i64 %4299, 63
  %4322 = trunc i64 %4321 to i8
  %4323 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4322, i8* %4323, align 1, !tbaa !2449
  %4324 = lshr i64 %4295, 63
  %4325 = lshr i64 %4296, 63
  %4326 = xor i64 %4321, %4324
  %4327 = xor i64 %4321, %4325
  %4328 = add nuw nsw i64 %4326, %4327
  %4329 = icmp eq i64 %4328, 2
  %4330 = zext i1 %4329 to i8
  %4331 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4330, i8* %4331, align 1, !tbaa !2450
  %4332 = load i64, i64* %RBP
  %4333 = sub i64 %4332, 24
  %4334 = load i64, i64* %PC
  %4335 = add i64 %4334, 4
  store i64 %4335, i64* %PC
  %4336 = inttoptr i64 %4333 to i32*
  %4337 = load i32, i32* %4336
  %4338 = sext i32 %4337 to i64
  store i64 %4338, i64* %RDI, align 8, !tbaa !2428
  %4339 = load i64, i64* %RDX
  %4340 = load i64, i64* %RDI
  %4341 = add i64 %4340, %4339
  %4342 = load i64, i64* %PC
  %4343 = add i64 %4342, 4
  store i64 %4343, i64* %PC
  %4344 = inttoptr i64 %4341 to i8*
  %4345 = load i8, i8* %4344
  %4346 = sext i8 %4345 to i64
  %4347 = and i64 %4346, 4294967295
  store i64 %4347, i64* %RSI, align 8, !tbaa !2428
  %4348 = load i32, i32* %ECX
  %4349 = zext i32 %4348 to i64
  %4350 = load i32, i32* %ESI
  %4351 = zext i32 %4350 to i64
  %4352 = load i64, i64* %PC
  %4353 = add i64 %4352, 2
  store i64 %4353, i64* %PC
  %4354 = sub i32 %4348, %4350
  %4355 = icmp ult i32 %4348, %4350
  %4356 = zext i1 %4355 to i8
  %4357 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4356, i8* %4357, align 1, !tbaa !2432
  %4358 = and i32 %4354, 255
  %4359 = call i32 @llvm.ctpop.i32(i32 %4358) #17
  %4360 = trunc i32 %4359 to i8
  %4361 = and i8 %4360, 1
  %4362 = xor i8 %4361, 1
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4362, i8* %4363, align 1, !tbaa !2446
  %4364 = xor i64 %4351, %4349
  %4365 = trunc i64 %4364 to i32
  %4366 = xor i32 %4365, %4354
  %4367 = lshr i32 %4366, 4
  %4368 = trunc i32 %4367 to i8
  %4369 = and i8 %4368, 1
  %4370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4369, i8* %4370, align 1, !tbaa !2447
  %4371 = icmp eq i32 %4354, 0
  %4372 = zext i1 %4371 to i8
  %4373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4372, i8* %4373, align 1, !tbaa !2448
  %4374 = lshr i32 %4354, 31
  %4375 = trunc i32 %4374 to i8
  %4376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4375, i8* %4376, align 1, !tbaa !2449
  %4377 = lshr i32 %4348, 31
  %4378 = lshr i32 %4350, 31
  %4379 = xor i32 %4378, %4377
  %4380 = xor i32 %4374, %4377
  %4381 = add nuw nsw i32 %4380, %4379
  %4382 = icmp eq i32 %4381, 2
  %4383 = zext i1 %4382 to i8
  %4384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4383, i8* %4384, align 1, !tbaa !2450
  %4385 = load i64, i64* %RBP
  %4386 = sub i64 %4385, 180
  %4387 = load i32, i32* %EAX
  %4388 = zext i32 %4387 to i64
  %4389 = load i64, i64* %PC
  %4390 = add i64 %4389, 6
  store i64 %4390, i64* %PC
  %4391 = inttoptr i64 %4386 to i32*
  store i32 %4387, i32* %4391
  %4392 = load i64, i64* %PC
  %4393 = add i64 %4392, 15
  %4394 = load i64, i64* %PC
  %4395 = add i64 %4394, 6
  %4396 = load i64, i64* %PC
  %4397 = add i64 %4396, 6
  store i64 %4397, i64* %PC
  %4398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4399 = load i8, i8* %4398, align 1, !tbaa !2448
  store i8 %4399, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4401 = icmp ne i8 %4399, 0
  %4402 = select i1 %4401, i64 %4393, i64 %4395
  store i64 %4402, i64* %4400, align 8, !tbaa !2428
  %4403 = load i8, i8* %BRANCH_TAKEN
  %4404 = icmp eq i8 %4403, 1
  br i1 %4404, label %block_400eab, label %block_400ea2

block_40088b:                                     ; preds = %block_400800
  %4405 = load i64, i64* %PC
  %4406 = add i64 %4405, 10
  store i64 %4406, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 120), i64* %RDI, align 8, !tbaa !2428
  %4407 = load i64, i64* %PC
  %4408 = add i64 %4407, 2
  store i64 %4408, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4409 = load i64, i64* %PC
  %4410 = sub i64 %4409, 711
  %4411 = load i64, i64* %PC
  %4412 = add i64 %4411, 5
  %4413 = load i64, i64* %PC
  %4414 = add i64 %4413, 5
  store i64 %4414, i64* %PC
  %4415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4416 = load i64, i64* %4415, align 8, !tbaa !2428
  %4417 = add i64 %4416, -8
  %4418 = inttoptr i64 %4417 to i64*
  store i64 %4412, i64* %4418
  store i64 %4417, i64* %4415, align 8, !tbaa !2428
  %4419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4410, i64* %4419, align 8, !tbaa !2428
  %4420 = load i64, i64* %PC
  %4421 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4420, %struct.Memory* %MEMORY.8)
  %4422 = load i64, i64* %PC
  %4423 = add i64 %4422, 10
  store i64 %4423, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 174), i64* %RDI, align 8, !tbaa !2428
  %4424 = load i64, i64* %PC
  %4425 = add i64 %4424, 7
  store i64 %4425, i64* %PC
  %4426 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %4427 = zext i32 %4426 to i64
  store i64 %4427, i64* %RSI, align 8, !tbaa !2428
  %4428 = load i64, i64* %RBP
  %4429 = sub i64 %4428, 52
  %4430 = load i32, i32* %EAX
  %4431 = zext i32 %4430 to i64
  %4432 = load i64, i64* %PC
  %4433 = add i64 %4432, 3
  store i64 %4433, i64* %PC
  %4434 = inttoptr i64 %4429 to i32*
  store i32 %4430, i32* %4434
  %4435 = load i64, i64* %PC
  %4436 = add i64 %4435, 2
  store i64 %4436, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4437 = load i64, i64* %PC
  %4438 = sub i64 %4437, 738
  %4439 = load i64, i64* %PC
  %4440 = add i64 %4439, 5
  %4441 = load i64, i64* %PC
  %4442 = add i64 %4441, 5
  store i64 %4442, i64* %PC
  %4443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4444 = load i64, i64* %4443, align 8, !tbaa !2428
  %4445 = add i64 %4444, -8
  %4446 = inttoptr i64 %4445 to i64*
  store i64 %4440, i64* %4446
  store i64 %4445, i64* %4443, align 8, !tbaa !2428
  %4447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4438, i64* %4447, align 8, !tbaa !2428
  %4448 = load i64, i64* %PC
  %4449 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4448, %struct.Memory* %4421)
  %4450 = load i64, i64* %PC
  %4451 = add i64 %4450, 10
  store i64 %4451, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 232), i64* %RDI, align 8, !tbaa !2428
  %4452 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4453 = load i64, i64* %PC
  %4454 = add i64 %4453, 8
  store i64 %4454, i64* %PC
  %4455 = load double, double* inttoptr (i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 80) to double*)
  %4456 = bitcast i8* %4452 to double*
  store double %4455, double* %4456, align 1, !tbaa !2452
  %4457 = getelementptr inbounds i8, i8* %4452, i64 8
  %4458 = bitcast i8* %4457 to double*
  store double 0.000000e+00, double* %4458, align 1, !tbaa !2452
  %4459 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4460 = load i64, i64* %PC
  %4461 = add i64 %4460, 9
  store i64 %4461, i64* %PC
  %4462 = load i32, i32* bitcast (%niter_type* @niter to i32*)
  %4463 = sitofp i32 %4462 to double
  %4464 = bitcast i8* %4459 to double*
  store double %4463, double* %4464, align 1, !tbaa !2452
  %4465 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4466 = bitcast %"class.std::bitset"* %YMM1 to i8*
  %4467 = bitcast %union.vec128_t* %XMM0 to i8*
  %4468 = load i64, i64* %PC
  %4469 = add i64 %4468, 4
  store i64 %4469, i64* %PC
  %4470 = bitcast i8* %4466 to double*
  %4471 = load double, double* %4470, align 1
  %4472 = getelementptr inbounds i8, i8* %4466, i64 8
  %4473 = bitcast i8* %4472 to i64*
  %4474 = load i64, i64* %4473, align 1
  %4475 = bitcast i8* %4467 to double*
  %4476 = load double, double* %4475, align 1
  %4477 = fdiv double %4471, %4476
  %4478 = bitcast i8* %4465 to double*
  store double %4477, double* %4478, align 1, !tbaa !2452
  %4479 = getelementptr inbounds i8, i8* %4465, i64 8
  %4480 = bitcast i8* %4479 to i64*
  store i64 %4474, i64* %4480, align 1, !tbaa !2452
  %4481 = bitcast %"class.std::bitset"* %YMM0 to i8*
  %4482 = bitcast %union.vec128_t* %XMM1 to i8*
  %4483 = load i64, i64* %PC
  %4484 = add i64 %4483, 3
  store i64 %4484, i64* %PC
  %4485 = bitcast i8* %4482 to <2 x i32>*
  %4486 = load <2 x i32>, <2 x i32>* %4485, align 1
  %4487 = getelementptr inbounds i8, i8* %4482, i64 8
  %4488 = bitcast i8* %4487 to <2 x i32>*
  %4489 = load <2 x i32>, <2 x i32>* %4488, align 1
  %4490 = extractelement <2 x i32> %4486, i32 0
  %4491 = bitcast i8* %4481 to i32*
  store i32 %4490, i32* %4491, align 1, !tbaa !2455
  %4492 = extractelement <2 x i32> %4486, i32 1
  %4493 = getelementptr inbounds i8, i8* %4481, i64 4
  %4494 = bitcast i8* %4493 to i32*
  store i32 %4492, i32* %4494, align 1, !tbaa !2455
  %4495 = extractelement <2 x i32> %4489, i32 0
  %4496 = getelementptr inbounds i8, i8* %4481, i64 8
  %4497 = bitcast i8* %4496 to i32*
  store i32 %4495, i32* %4497, align 1, !tbaa !2455
  %4498 = extractelement <2 x i32> %4489, i32 1
  %4499 = getelementptr inbounds i8, i8* %4481, i64 12
  %4500 = bitcast i8* %4499 to i32*
  store i32 %4498, i32* %4500, align 1, !tbaa !2455
  %4501 = load i64, i64* %RBP
  %4502 = sub i64 %4501, 56
  %4503 = load i32, i32* %EAX
  %4504 = zext i32 %4503 to i64
  %4505 = load i64, i64* %PC
  %4506 = add i64 %4505, 3
  store i64 %4506, i64* %PC
  %4507 = inttoptr i64 %4502 to i32*
  store i32 %4503, i32* %4507
  %4508 = load i64, i64* %PC
  %4509 = add i64 %4508, 2
  store i64 %4509, i64* %PC
  store i8 1, i8* %AL, align 1, !tbaa !2451
  %4510 = load i64, i64* %PC
  %4511 = sub i64 %4510, 782
  %4512 = load i64, i64* %PC
  %4513 = add i64 %4512, 5
  %4514 = load i64, i64* %PC
  %4515 = add i64 %4514, 5
  store i64 %4515, i64* %PC
  %4516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4517 = load i64, i64* %4516, align 8, !tbaa !2428
  %4518 = add i64 %4517, -8
  %4519 = inttoptr i64 %4518 to i64*
  store i64 %4513, i64* %4519
  store i64 %4518, i64* %4516, align 8, !tbaa !2428
  %4520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4511, i64* %4520, align 8, !tbaa !2428
  %4521 = load i64, i64* %PC
  %4522 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4521, %struct.Memory* %4449)
  %4523 = load i64, i64* %PC
  %4524 = add i64 %4523, 10
  store i64 %4524, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 288), i64* %RDI, align 8, !tbaa !2428
  %4525 = load i64, i64* %RBP
  %4526 = sub i64 %4525, 60
  %4527 = load i32, i32* %EAX
  %4528 = zext i32 %4527 to i64
  %4529 = load i64, i64* %PC
  %4530 = add i64 %4529, 3
  store i64 %4530, i64* %PC
  %4531 = inttoptr i64 %4526 to i32*
  store i32 %4527, i32* %4531
  %4532 = load i64, i64* %PC
  %4533 = add i64 %4532, 2
  store i64 %4533, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4534 = load i64, i64* %PC
  %4535 = sub i64 %4534, 802
  %4536 = load i64, i64* %PC
  %4537 = add i64 %4536, 5
  %4538 = load i64, i64* %PC
  %4539 = add i64 %4538, 5
  store i64 %4539, i64* %PC
  %4540 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4541 = load i64, i64* %4540, align 8, !tbaa !2428
  %4542 = add i64 %4541, -8
  %4543 = inttoptr i64 %4542 to i64*
  store i64 %4537, i64* %4543
  store i64 %4542, i64* %4540, align 8, !tbaa !2428
  %4544 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4535, i64* %4544, align 8, !tbaa !2428
  %4545 = load i64, i64* %PC
  %4546 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4545, %struct.Memory* %4522)
  %4547 = load i64, i64* %PC
  %4548 = add i64 %4547, 10
  store i64 %4548, i64* %PC
  store i64 add (i64 ptrtoint (%seg_4015e0__rodata_type* @seg_4015e0__rodata to i64), i64 348), i64* %RDI, align 8, !tbaa !2428
  %4549 = load i64, i64* %RBP
  %4550 = sub i64 %4549, 64
  %4551 = load i32, i32* %EAX
  %4552 = zext i32 %4551 to i64
  %4553 = load i64, i64* %PC
  %4554 = add i64 %4553, 3
  store i64 %4554, i64* %PC
  %4555 = inttoptr i64 %4550 to i32*
  store i32 %4551, i32* %4555
  %4556 = load i64, i64* %PC
  %4557 = add i64 %4556, 2
  store i64 %4557, i64* %PC
  store i8 0, i8* %AL, align 1, !tbaa !2451
  %4558 = load i64, i64* %PC
  %4559 = sub i64 %4558, 822
  %4560 = load i64, i64* %PC
  %4561 = add i64 %4560, 5
  %4562 = load i64, i64* %PC
  %4563 = add i64 %4562, 5
  store i64 %4563, i64* %PC
  %4564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %4565 = load i64, i64* %4564, align 8, !tbaa !2428
  %4566 = add i64 %4565, -8
  %4567 = inttoptr i64 %4566 to i64*
  store i64 %4561, i64* %4567
  store i64 %4566, i64* %4564, align 8, !tbaa !2428
  %4568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4559, i64* %4568, align 8, !tbaa !2428
  %4569 = load i64, i64* %PC
  %4570 = call %struct.Memory* @ext_4005d0_printf(%struct.State* %0, i64 %4569, %struct.Memory* %4546)
  %4571 = load i64, i64* %PC
  %4572 = add i64 %4571, 11
  store i64 %4572, i64* %PC
  store i32 0, i32* bitcast (%itercount_type* @itercount to i32*)
  %4573 = load i64, i64* %RBP
  %4574 = sub i64 %4573, 68
  %4575 = load i32, i32* %EAX
  %4576 = zext i32 %4575 to i64
  %4577 = load i64, i64* %PC
  %4578 = add i64 %4577, 3
  store i64 %4578, i64* %PC
  %4579 = inttoptr i64 %4574 to i32*
  store i32 %4575, i32* %4579
  br label %block_400919

block_400e00:                                     ; preds = %block_400eab, %block_400d5b
  %MEMORY.7 = phi %struct.Memory* [ %3650, %block_400d5b ], [ %MEMORY.5, %block_400eab ]
  %4580 = load i64, i64* %RBP
  %4581 = sub i64 %4580, 24
  %4582 = load i64, i64* %PC
  %4583 = add i64 %4582, 3
  store i64 %4583, i64* %PC
  %4584 = inttoptr i64 %4581 to i32*
  %4585 = load i32, i32* %4584
  %4586 = zext i32 %4585 to i64
  store i64 %4586, i64* %RAX, align 8, !tbaa !2428
  %4587 = load i32, i32* %EAX
  %4588 = zext i32 %4587 to i64
  %4589 = load i64, i64* %RBP
  %4590 = sub i64 %4589, 28
  %4591 = load i64, i64* %PC
  %4592 = add i64 %4591, 3
  store i64 %4592, i64* %PC
  %4593 = inttoptr i64 %4590 to i32*
  %4594 = load i32, i32* %4593
  %4595 = sub i32 %4587, %4594
  %4596 = icmp ult i32 %4587, %4594
  %4597 = zext i1 %4596 to i8
  %4598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4597, i8* %4598, align 1, !tbaa !2432
  %4599 = and i32 %4595, 255
  %4600 = call i32 @llvm.ctpop.i32(i32 %4599) #17
  %4601 = trunc i32 %4600 to i8
  %4602 = and i8 %4601, 1
  %4603 = xor i8 %4602, 1
  %4604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4603, i8* %4604, align 1, !tbaa !2446
  %4605 = xor i32 %4594, %4587
  %4606 = xor i32 %4605, %4595
  %4607 = lshr i32 %4606, 4
  %4608 = trunc i32 %4607 to i8
  %4609 = and i8 %4608, 1
  %4610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4609, i8* %4610, align 1, !tbaa !2447
  %4611 = icmp eq i32 %4595, 0
  %4612 = zext i1 %4611 to i8
  %4613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4612, i8* %4613, align 1, !tbaa !2448
  %4614 = lshr i32 %4595, 31
  %4615 = trunc i32 %4614 to i8
  %4616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4615, i8* %4616, align 1, !tbaa !2449
  %4617 = lshr i32 %4587, 31
  %4618 = lshr i32 %4594, 31
  %4619 = xor i32 %4618, %4617
  %4620 = xor i32 %4614, %4617
  %4621 = add nuw nsw i32 %4620, %4619
  %4622 = icmp eq i32 %4621, 2
  %4623 = zext i1 %4622 to i8
  %4624 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4623, i8* %4624, align 1, !tbaa !2450
  %4625 = load i64, i64* %PC
  %4626 = add i64 %4625, 184
  %4627 = load i64, i64* %PC
  %4628 = add i64 %4627, 6
  %4629 = load i64, i64* %PC
  %4630 = add i64 %4629, 6
  store i64 %4630, i64* %PC
  %4631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4632 = load i8, i8* %4631, align 1, !tbaa !2449
  %4633 = icmp ne i8 %4632, 0
  %4634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4635 = load i8, i8* %4634, align 1, !tbaa !2450
  %4636 = icmp ne i8 %4635, 0
  %4637 = xor i1 %4633, %4636
  %4638 = xor i1 %4637, true
  %4639 = zext i1 %4638 to i8
  store i8 %4639, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4641 = select i1 %4637, i64 %4628, i64 %4626
  store i64 %4641, i64* %4640, align 8, !tbaa !2428
  %4642 = load i8, i8* %BRANCH_TAKEN
  %4643 = icmp eq i8 %4642, 1
  %4644 = load i64, i64* %PC
  %4645 = add i64 %4644, 10
  store i64 %4645, i64* %PC
  br i1 %4643, label %block_400ebe, label %block_400e0c

block_400800:                                     ; preds = %block_400878, %block_400730
  %MEMORY.8 = phi %struct.Memory* [ %2, %block_400730 ], [ %MEMORY.4, %block_400878 ]
  %4646 = load i64, i64* %RBP
  %4647 = sub i64 %4646, 20
  %4648 = load i64, i64* %PC
  %4649 = add i64 %4648, 3
  store i64 %4649, i64* %PC
  %4650 = inttoptr i64 %4647 to i32*
  %4651 = load i32, i32* %4650
  %4652 = zext i32 %4651 to i64
  store i64 %4652, i64* %RAX, align 8, !tbaa !2428
  %4653 = load i64, i64* %PC
  %4654 = add i64 %4653, 8
  store i64 %4654, i64* %PC
  %4655 = load i16, i16* inttoptr (i64 add (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 96) to i16*)
  %4656 = sext i16 %4655 to i64
  %4657 = and i64 %4656, 4294967295
  store i64 %4657, i64* %RCX, align 8, !tbaa !2428
  %4658 = load i32, i32* %EAX
  %4659 = zext i32 %4658 to i64
  %4660 = load i32, i32* %ECX
  %4661 = zext i32 %4660 to i64
  %4662 = load i64, i64* %PC
  %4663 = add i64 %4662, 2
  store i64 %4663, i64* %PC
  %4664 = sub i32 %4658, %4660
  %4665 = icmp ult i32 %4658, %4660
  %4666 = zext i1 %4665 to i8
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4666, i8* %4667, align 1, !tbaa !2432
  %4668 = and i32 %4664, 255
  %4669 = call i32 @llvm.ctpop.i32(i32 %4668) #17
  %4670 = trunc i32 %4669 to i8
  %4671 = and i8 %4670, 1
  %4672 = xor i8 %4671, 1
  %4673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4672, i8* %4673, align 1, !tbaa !2446
  %4674 = xor i64 %4661, %4659
  %4675 = trunc i64 %4674 to i32
  %4676 = xor i32 %4675, %4664
  %4677 = lshr i32 %4676, 4
  %4678 = trunc i32 %4677 to i8
  %4679 = and i8 %4678, 1
  %4680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4679, i8* %4680, align 1, !tbaa !2447
  %4681 = icmp eq i32 %4664, 0
  %4682 = zext i1 %4681 to i8
  %4683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4682, i8* %4683, align 1, !tbaa !2448
  %4684 = lshr i32 %4664, 31
  %4685 = trunc i32 %4684 to i8
  %4686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4685, i8* %4686, align 1, !tbaa !2449
  %4687 = lshr i32 %4658, 31
  %4688 = lshr i32 %4660, 31
  %4689 = xor i32 %4688, %4687
  %4690 = xor i32 %4684, %4687
  %4691 = add nuw nsw i32 %4690, %4689
  %4692 = icmp eq i32 %4691, 2
  %4693 = zext i1 %4692 to i8
  %4694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4693, i8* %4694, align 1, !tbaa !2450
  %4695 = load i64, i64* %PC
  %4696 = add i64 %4695, 126
  %4697 = load i64, i64* %PC
  %4698 = add i64 %4697, 6
  %4699 = load i64, i64* %PC
  %4700 = add i64 %4699, 6
  store i64 %4700, i64* %PC
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %4702 = load i8, i8* %4701, align 1, !tbaa !2449
  %4703 = icmp ne i8 %4702, 0
  %4704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %4705 = load i8, i8* %4704, align 1, !tbaa !2450
  %4706 = icmp ne i8 %4705, 0
  %4707 = xor i1 %4703, %4706
  %4708 = xor i1 %4707, true
  %4709 = zext i1 %4708 to i8
  store i8 %4709, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %4710 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4711 = select i1 %4707, i64 %4698, i64 %4696
  store i64 %4711, i64* %4710, align 8, !tbaa !2428
  %4712 = load i8, i8* %BRANCH_TAKEN
  %4713 = icmp eq i8 %4712, 1
  br i1 %4713, label %block_40088b, label %block_400813
}

; Function Attrs: noinline
define %struct.Memory* @sub_400670__dl_relocate_static_pie(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400670:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_4015d0___libc_csu_fini(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4015d0:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 2
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !tbaa !2428
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8, !tbaa !2428
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8, !tbaa !2428
  ret %struct.Memory* %2
}

; Function Attrs: noinline
define %struct.Memory* @sub_400640__start(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400640:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBP = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 5
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RCX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 7
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDX = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 9
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 11
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RDI = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 13
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RSP = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 15
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RBP = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 17
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %R8 = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 19
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %R9 = bitcast %union.anon* %35 to i64*
  %36 = load i64, i64* %RBP
  %37 = load i32, i32* %EBP
  %38 = zext i32 %37 to i64
  %39 = load i64, i64* %PC
  %40 = add i64 %39, 2
  store i64 %40, i64* %PC
  %41 = xor i64 %38, %36
  %42 = trunc i64 %41 to i32
  %43 = and i64 %41, 4294967295
  store i64 %43, i64* %RBP, align 8, !tbaa !2428
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %44, align 1, !tbaa !2432
  %45 = and i32 %42, 255
  %46 = call i32 @llvm.ctpop.i32(i32 %45) #17
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 1
  %49 = xor i8 %48, 1
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %49, i8* %50, align 1, !tbaa !2446
  %51 = icmp eq i32 %42, 0
  %52 = zext i1 %51 to i8
  %53 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %52, i8* %53, align 1, !tbaa !2448
  %54 = lshr i32 %42, 31
  %55 = trunc i32 %54 to i8
  %56 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %55, i8* %56, align 1, !tbaa !2449
  %57 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %57, align 1, !tbaa !2450
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %58, align 1, !tbaa !2447
  %59 = load i64, i64* %RDX
  %60 = load i64, i64* %PC
  %61 = add i64 %60, 3
  store i64 %61, i64* %PC
  store i64 %59, i64* %R9, align 8, !tbaa !2428
  %62 = load i64, i64* %PC
  %63 = add i64 %62, 1
  store i64 %63, i64* %PC
  %64 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %65 = load i64, i64* %64, align 8, !tbaa !2428
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %65 to i64*
  %68 = load i64, i64* %67
  store i64 %68, i64* %RSI, align 8, !tbaa !2428
  store i64 %66, i64* %64, align 8, !tbaa !2428
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RDX, align 8, !tbaa !2428
  %72 = load i64, i64* %RSP
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = and i64 -16, %72
  store i64 %75, i64* %RSP, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %76, align 1, !tbaa !2432
  %77 = trunc i64 %75 to i32
  %78 = and i32 %77, 255
  %79 = call i32 @llvm.ctpop.i32(i32 %78) #17
  %80 = trunc i32 %79 to i8
  %81 = and i8 %80, 1
  %82 = xor i8 %81, 1
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %82, i8* %83, align 1, !tbaa !2446
  %84 = icmp eq i64 %75, 0
  %85 = zext i1 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %85, i8* %86, align 1, !tbaa !2448
  %87 = lshr i64 %75, 63
  %88 = trunc i64 %87 to i8
  %89 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %88, i8* %89, align 1, !tbaa !2449
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %90, align 1, !tbaa !2450
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %91, align 1, !tbaa !2447
  %92 = load i64, i64* %RAX
  %93 = load i64, i64* %PC
  %94 = add i64 %93, 1
  store i64 %94, i64* %PC
  %95 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %96 = load i64, i64* %95, align 8, !tbaa !2428
  %97 = add i64 %96, -8
  %98 = inttoptr i64 %97 to i64*
  store i64 %92, i64* %98
  store i64 %97, i64* %95, align 8, !tbaa !2428
  %99 = load i64, i64* %RSP
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 1
  store i64 %101, i64* %PC
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %103 = load i64, i64* %102, align 8, !tbaa !2428
  %104 = add i64 %103, -8
  %105 = inttoptr i64 %104 to i64*
  store i64 %99, i64* %105
  store i64 %104, i64* %102, align 8, !tbaa !2428
  %106 = load i64, i64* %PC
  %107 = add i64 %106, 7
  store i64 %107, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_4015d0___libc_csu_fini to i64), i64* %R8, align 8, !tbaa !2428
  %108 = load i64, i64* %PC
  %109 = add i64 %108, 7
  store i64 %109, i64* %PC
  store i64 ptrtoint (void ()* @callback_sub_401560___libc_csu_init to i64), i64* %RCX, align 8, !tbaa !2428
  %110 = load i64, i64* %PC
  %111 = add i64 %110, 7
  store i64 %111, i64* %PC
  store i64 ptrtoint (void ()* @main to i64), i64* %RDI, align 8, !tbaa !2428
  %112 = load i64, i64* %PC
  %113 = add i64 %112, 6
  %114 = load i64, i64* %PC
  %115 = add i64 %114, 6
  store i64 %115, i64* %PC
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %117 = load i64, i64* %116, align 8, !tbaa !2428
  %118 = add i64 %117, -8
  %119 = inttoptr i64 %118 to i64*
  store i64 %113, i64* %119
  store i64 %118, i64* %116, align 8, !tbaa !2428
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %121 = load i64, i64* getelementptr inbounds (%seg_601ff0__got_type, %seg_601ff0__got_type* @seg_601ff0__got, i32 0, i32 0)
  store i64 %121, i64* %120, align 8, !tbaa !2428
  %122 = load i64, i64* %PC
  %123 = call %struct.Memory* @ext_602670___libc_start_main(%struct.State* %0, i64 %122, %struct.Memory* %2)
  %124 = load i64, i64* %PC
  %125 = add i64 %124, 1
  store i64 %125, i64* %PC
  %126 = load i64, i64* %PC
  %127 = tail call %struct.Memory* @__remill_error(%struct.State* %0, i64 %126, %struct.Memory* %123)
  ret %struct.Memory* %127
}

; Function Attrs: noinline
define %struct.Memory* @sub_400680_deregister_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400680:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 11
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RDI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 13
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RSP = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 15
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBP = bitcast %union.anon* %23 to i64*
  %24 = load i64, i64* %RBP
  %25 = load i64, i64* %PC
  %26 = add i64 %25, 1
  store i64 %26, i64* %PC
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %28 = load i64, i64* %27, align 8, !tbaa !2428
  %29 = add i64 %28, -8
  %30 = inttoptr i64 %29 to i64*
  store i64 %24, i64* %30
  store i64 %29, i64* %27, align 8, !tbaa !2428
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 5
  store i64 %32, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RAX, align 8, !tbaa !2428
  %33 = load i64, i64* %RAX
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 6
  store i64 %35, i64* %PC
  %36 = sub i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %37 = icmp ult i64 %33, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %38, i8* %39, align 1, !tbaa !2432
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 255
  %42 = call i32 @llvm.ctpop.i32(i32 %41) #17
  %43 = trunc i32 %42 to i8
  %44 = and i8 %43, 1
  %45 = xor i8 %44, 1
  %46 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !2446
  %47 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %33
  %48 = xor i64 %47, %36
  %49 = lshr i64 %48, 4
  %50 = trunc i64 %49 to i8
  %51 = and i8 %50, 1
  %52 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %51, i8* %52, align 1, !tbaa !2447
  %53 = icmp eq i64 %36, 0
  %54 = zext i1 %53 to i8
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %54, i8* %55, align 1, !tbaa !2448
  %56 = lshr i64 %36, 63
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %57, i8* %58, align 1, !tbaa !2449
  %59 = lshr i64 %33, 63
  %60 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %59
  %61 = xor i64 %56, %59
  %62 = add nuw nsw i64 %61, %60
  %63 = icmp eq i64 %62, 2
  %64 = zext i1 %63 to i8
  %65 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %64, i8* %65, align 1, !tbaa !2450
  %66 = load i64, i64* %RSP
  %67 = load i64, i64* %PC
  %68 = add i64 %67, 3
  store i64 %68, i64* %PC
  store i64 %66, i64* %RBP, align 8, !tbaa !2428
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 25
  %71 = load i64, i64* %PC
  %72 = add i64 %71, 2
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 2
  store i64 %74, i64* %PC
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %76 = load i8, i8* %75, align 1, !tbaa !2448
  store i8 %76, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %77 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %78 = icmp ne i8 %76, 0
  %79 = select i1 %78, i64 %70, i64 %72
  store i64 %79, i64* %77, align 8, !tbaa !2428
  %80 = load i8, i8* %BRANCH_TAKEN
  %81 = icmp eq i8 %80, 1
  br i1 %81, label %block_4006a8, label %block_400691

block_40069b:                                     ; preds = %block_400691
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 1
  store i64 %83, i64* %PC
  %84 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %85 = load i64, i64* %84, align 8, !tbaa !2428
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %85 to i64*
  %88 = load i64, i64* %87
  store i64 %88, i64* %RBP, align 8, !tbaa !2428
  store i64 %86, i64* %84, align 8, !tbaa !2428
  %89 = load i64, i64* %PC
  %90 = add i64 %89, 5
  store i64 %90, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %91 = load i64, i64* %RAX
  %92 = load i64, i64* %PC
  %93 = add i64 %92, 2
  store i64 %93, i64* %PC
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %91, i64* %94, align 8, !tbaa !2428
  %95 = load i64, i64* %PC
  switch i64 %95, label %163 [
    i64 4196010, label %block_4006aa
    i64 4196003, label %block_4006a3
  ]

block_400691:                                     ; preds = %block_400680
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 5
  store i64 %97, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %RAX
  %100 = load i64, i64* %PC
  %101 = add i64 %100, 3
  store i64 %101, i64* %PC
  %102 = and i64 %99, %98
  %103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %103, align 1, !tbaa !2432
  %104 = trunc i64 %102 to i32
  %105 = and i32 %104, 255
  %106 = call i32 @llvm.ctpop.i32(i32 %105) #17
  %107 = trunc i32 %106 to i8
  %108 = and i8 %107, 1
  %109 = xor i8 %108, 1
  %110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %109, i8* %110, align 1, !tbaa !2446
  %111 = icmp eq i64 %102, 0
  %112 = zext i1 %111 to i8
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %112, i8* %113, align 1, !tbaa !2448
  %114 = lshr i64 %102, 63
  %115 = trunc i64 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %115, i8* %116, align 1, !tbaa !2449
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %117, align 1, !tbaa !2450
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %118, align 1, !tbaa !2447
  %119 = load i64, i64* %PC
  %120 = add i64 %119, 15
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 2
  %123 = load i64, i64* %PC
  %124 = add i64 %123, 2
  store i64 %124, i64* %PC
  %125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %126 = load i8, i8* %125, align 1, !tbaa !2448
  store i8 %126, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %127 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %128 = icmp ne i8 %126, 0
  %129 = select i1 %128, i64 %120, i64 %122
  store i64 %129, i64* %127, align 8, !tbaa !2428
  %130 = load i8, i8* %BRANCH_TAKEN
  %131 = icmp eq i8 %130, 1
  br i1 %131, label %block_4006a8, label %block_40069b

block_4006a8:                                     ; preds = %block_4006a3, %block_400691, %block_400680
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_400680 ], [ %2, %block_400691 ], [ %2, %block_4006a3 ]
  %132 = load i64, i64* %PC
  %133 = add i64 %132, 1
  store i64 %133, i64* %PC
  %134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %135 = load i64, i64* %134, align 8, !tbaa !2428
  %136 = add i64 %135, 8
  %137 = inttoptr i64 %135 to i64*
  %138 = load i64, i64* %137
  store i64 %138, i64* %RBP, align 8, !tbaa !2428
  store i64 %136, i64* %134, align 8, !tbaa !2428
  %139 = load i64, i64* %PC
  %140 = add i64 %139, 1
  store i64 %140, i64* %PC
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %143 = load i64, i64* %142, align 8, !tbaa !2428
  %144 = inttoptr i64 %143 to i64*
  %145 = load i64, i64* %144
  store i64 %145, i64* %141, align 8, !tbaa !2428
  %146 = add i64 %143, 8
  store i64 %146, i64* %142, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4006aa:                                     ; preds = %block_40069b
  %147 = load i64, i64* %RAX
  %148 = load i64, i64* %RAX
  %149 = add i64 %148, %147
  %150 = load i16, i16* %AX
  %151 = zext i16 %150 to i64
  %152 = load i64, i64* %PC
  %153 = add i64 %152, 6
  store i64 %153, i64* %PC
  %154 = load i64, i64* %PC
  %155 = tail call %struct.Memory* @sub_4006b0_register_tm_clones(%struct.State* %0, i64 %154, %struct.Memory* %2)
  ret %struct.Memory* %155

block_4006a3:                                     ; preds = %block_40069b
  %156 = load i64, i64* %RAX
  %157 = load i64, i64* %RAX
  %158 = add i64 %157, %156
  %159 = load i32, i32* %EAX
  %160 = zext i32 %159 to i64
  %161 = load i64, i64* %PC
  %162 = add i64 %161, 5
  store i64 %162, i64* %PC
  br label %block_4006a8

; <label>:163:                                    ; preds = %block_40069b
  %164 = load i64, i64* %PC
  %165 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %164, %struct.Memory* %2)
  ret %struct.Memory* %165
}

; Function Attrs: noinline
define %struct.Memory* @sub_4006b0_register_tm_clones(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4006b0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %AX = bitcast %union.anon* %8 to i16*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EAX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 1
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RAX = bitcast %union.anon* %14 to i64*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 9
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %RSI = bitcast %union.anon* %17 to i64*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 11
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RDI = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 13
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RSP = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 15
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RBP = bitcast %union.anon* %26 to i64*
  %27 = load i64, i64* %PC
  %28 = add i64 %27, 5
  store i64 %28, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RSI, align 8, !tbaa !2428
  %29 = load i64, i64* %RBP
  %30 = load i64, i64* %PC
  %31 = add i64 %30, 1
  store i64 %31, i64* %PC
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %33 = load i64, i64* %32, align 8, !tbaa !2428
  %34 = add i64 %33, -8
  %35 = inttoptr i64 %34 to i64*
  store i64 %29, i64* %35
  store i64 %34, i64* %32, align 8, !tbaa !2428
  %36 = load i64, i64* %RSI
  %37 = load i64, i64* %PC
  %38 = add i64 %37, 7
  store i64 %38, i64* %PC
  %39 = sub i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  store i64 %39, i64* %RSI, align 8, !tbaa !2428
  %40 = icmp ult i64 %36, ptrtoint (%__bss_start_type* @__bss_start to i64)
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %41, i8* %42, align 1, !tbaa !2432
  %43 = trunc i64 %39 to i32
  %44 = and i32 %43, 255
  %45 = call i32 @llvm.ctpop.i32(i32 %44) #17
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = xor i8 %47, 1
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %48, i8* %49, align 1, !tbaa !2446
  %50 = xor i64 ptrtoint (%__bss_start_type* @__bss_start to i64), %36
  %51 = xor i64 %50, %39
  %52 = lshr i64 %51, 4
  %53 = trunc i64 %52 to i8
  %54 = and i8 %53, 1
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %54, i8* %55, align 1, !tbaa !2447
  %56 = icmp eq i64 %39, 0
  %57 = zext i1 %56 to i8
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %57, i8* %58, align 1, !tbaa !2448
  %59 = lshr i64 %39, 63
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %60, i8* %61, align 1, !tbaa !2449
  %62 = lshr i64 %36, 63
  %63 = xor i64 lshr (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 63), %62
  %64 = xor i64 %59, %62
  %65 = add nuw nsw i64 %64, %63
  %66 = icmp eq i64 %65, 2
  %67 = zext i1 %66 to i8
  %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %67, i8* %68, align 1, !tbaa !2450
  %69 = load i64, i64* %RSP
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 3
  store i64 %71, i64* %PC
  store i64 %69, i64* %RBP, align 8, !tbaa !2428
  %72 = load i64, i64* %RSI
  %73 = load i64, i64* %PC
  %74 = add i64 %73, 4
  store i64 %74, i64* %PC
  %75 = ashr i64 %72, 2
  %76 = trunc i64 %75 to i8
  %77 = and i8 %76, 1
  %78 = ashr i64 %75, 1
  store i64 %78, i64* %RSI, align 8, !tbaa !2428
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %77, i8* %79, align 1, !tbaa !2451
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %81 = trunc i64 %78 to i32
  %82 = and i32 %81, 255
  %83 = call i32 @llvm.ctpop.i32(i32 %82) #17
  %84 = trunc i32 %83 to i8
  %85 = and i8 %84, 1
  %86 = xor i8 %85, 1
  store i8 %86, i8* %80, align 1, !tbaa !2451
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %87, align 1, !tbaa !2451
  %88 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %89 = icmp eq i64 %78, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %88, align 1, !tbaa !2451
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %92 = lshr i64 %78, 63
  %93 = trunc i64 %92 to i8
  store i8 %93, i8* %91, align 1, !tbaa !2451
  %94 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %94, align 1, !tbaa !2451
  %95 = load i64, i64* %RSI
  %96 = load i64, i64* %PC
  %97 = add i64 %96, 3
  store i64 %97, i64* %PC
  store i64 %95, i64* %RAX, align 8, !tbaa !2428
  %98 = load i64, i64* %RAX
  %99 = load i64, i64* %PC
  %100 = add i64 %99, 4
  store i64 %100, i64* %PC
  %101 = lshr i64 %98, 62
  %102 = trunc i64 %101 to i8
  %103 = and i8 %102, 1
  %104 = lshr i64 %101, 1
  store i64 %104, i64* %RAX, align 8, !tbaa !2428
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %103, i8* %105, align 1, !tbaa !2451
  %106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %107 = trunc i64 %104 to i32
  %108 = and i32 %107, 255
  %109 = call i32 @llvm.ctpop.i32(i32 %108) #17
  %110 = trunc i32 %109 to i8
  %111 = and i8 %110, 1
  %112 = xor i8 %111, 1
  store i8 %112, i8* %106, align 1, !tbaa !2451
  %113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %113, align 1, !tbaa !2451
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %115 = icmp eq i64 %104, 0
  %116 = zext i1 %115 to i8
  store i8 %116, i8* %114, align 1, !tbaa !2451
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 0, i8* %117, align 1, !tbaa !2451
  %118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %118, align 1, !tbaa !2451
  %119 = load i64, i64* %RSI
  %120 = load i64, i64* %RAX
  %121 = load i64, i64* %PC
  %122 = add i64 %121, 3
  store i64 %122, i64* %PC
  %123 = add i64 %120, %119
  store i64 %123, i64* %RSI, align 8, !tbaa !2428
  %124 = icmp ult i64 %123, %119
  %125 = icmp ult i64 %123, %120
  %126 = or i1 %124, %125
  %127 = zext i1 %126 to i8
  %128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %127, i8* %128, align 1, !tbaa !2432
  %129 = trunc i64 %123 to i32
  %130 = and i32 %129, 255
  %131 = call i32 @llvm.ctpop.i32(i32 %130) #17
  %132 = trunc i32 %131 to i8
  %133 = and i8 %132, 1
  %134 = xor i8 %133, 1
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %134, i8* %135, align 1, !tbaa !2446
  %136 = xor i64 %120, %119
  %137 = xor i64 %136, %123
  %138 = lshr i64 %137, 4
  %139 = trunc i64 %138 to i8
  %140 = and i8 %139, 1
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %140, i8* %141, align 1, !tbaa !2447
  %142 = icmp eq i64 %123, 0
  %143 = zext i1 %142 to i8
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %143, i8* %144, align 1, !tbaa !2448
  %145 = lshr i64 %123, 63
  %146 = trunc i64 %145 to i8
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %146, i8* %147, align 1, !tbaa !2449
  %148 = lshr i64 %119, 63
  %149 = lshr i64 %120, 63
  %150 = xor i64 %145, %148
  %151 = xor i64 %145, %149
  %152 = add nuw nsw i64 %150, %151
  %153 = icmp eq i64 %152, 2
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %154, i8* %155, align 1, !tbaa !2450
  %156 = load i64, i64* %RSI
  %157 = load i64, i64* %PC
  %158 = add i64 %157, 3
  store i64 %158, i64* %PC
  %159 = trunc i64 %156 to i8
  %160 = and i8 %159, 1
  %161 = ashr i64 %156, 1
  store i64 %161, i64* %RSI, align 8, !tbaa !2428
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %160, i8* %162, align 1, !tbaa !2451
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %164 = trunc i64 %161 to i32
  %165 = and i32 %164, 255
  %166 = call i32 @llvm.ctpop.i32(i32 %165) #17
  %167 = trunc i32 %166 to i8
  %168 = and i8 %167, 1
  %169 = xor i8 %168, 1
  store i8 %169, i8* %163, align 1, !tbaa !2451
  %170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %170, align 1, !tbaa !2451
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %172 = icmp eq i64 %161, 0
  %173 = zext i1 %172 to i8
  store i8 %173, i8* %171, align 1, !tbaa !2451
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %175 = lshr i64 %161, 63
  %176 = trunc i64 %175 to i8
  store i8 %176, i8* %174, align 1, !tbaa !2451
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %177, align 1, !tbaa !2451
  %178 = load i64, i64* %PC
  %179 = add i64 %178, 23
  %180 = load i64, i64* %PC
  %181 = add i64 %180, 2
  %182 = load i64, i64* %PC
  %183 = add i64 %182, 2
  store i64 %183, i64* %PC
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %185 = load i8, i8* %184, align 1, !tbaa !2448
  store i8 %185, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %187 = icmp ne i8 %185, 0
  %188 = select i1 %187, i64 %179, i64 %181
  store i64 %188, i64* %186, align 8, !tbaa !2428
  %189 = load i8, i8* %BRANCH_TAKEN
  %190 = icmp eq i8 %189, 1
  br i1 %190, label %block_4006e8, label %block_4006d3

block_4006dd:                                     ; preds = %block_4006d3
  %191 = load i64, i64* %PC
  %192 = add i64 %191, 1
  store i64 %192, i64* %PC
  %193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %194 = load i64, i64* %193, align 8, !tbaa !2428
  %195 = add i64 %194, 8
  %196 = inttoptr i64 %194 to i64*
  %197 = load i64, i64* %196
  store i64 %197, i64* %RBP, align 8, !tbaa !2428
  store i64 %195, i64* %193, align 8, !tbaa !2428
  %198 = load i64, i64* %PC
  %199 = add i64 %198, 5
  store i64 %199, i64* %PC
  store i64 and (i64 ptrtoint (%__bss_start_type* @__bss_start to i64), i64 4294967295), i64* %RDI, align 8, !tbaa !2428
  %200 = load i64, i64* %RAX
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 2
  store i64 %202, i64* %PC
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %203, align 8, !tbaa !2428
  %204 = load i64, i64* %PC
  switch i64 %204, label %270 [
    i64 4196074, label %block_4006ea
    i64 4196069, label %block_4006e5
  ]

block_4006ea:                                     ; preds = %block_4006dd
  %205 = load i64, i64* %RAX
  %206 = load i64, i64* %RAX
  %207 = add i64 %206, %205
  %208 = load i16, i16* %AX
  %209 = zext i16 %208 to i64
  %210 = load i64, i64* %PC
  %211 = add i64 %210, 6
  store i64 %211, i64* %PC
  %212 = load i64, i64* %PC
  %213 = tail call %struct.Memory* @sub_4006f0___do_global_dtors_aux(%struct.State* %0, i64 %212, %struct.Memory* %2)
  ret %struct.Memory* %213

block_4006d3:                                     ; preds = %block_4006b0
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 5
  store i64 %215, i64* %PC
  store i64 0, i64* %RAX, align 8, !tbaa !2428
  %216 = load i64, i64* %RAX
  %217 = load i64, i64* %RAX
  %218 = load i64, i64* %PC
  %219 = add i64 %218, 3
  store i64 %219, i64* %PC
  %220 = and i64 %217, %216
  %221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %221, align 1, !tbaa !2432
  %222 = trunc i64 %220 to i32
  %223 = and i32 %222, 255
  %224 = call i32 @llvm.ctpop.i32(i32 %223) #17
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 1
  %227 = xor i8 %226, 1
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %227, i8* %228, align 1, !tbaa !2446
  %229 = icmp eq i64 %220, 0
  %230 = zext i1 %229 to i8
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %230, i8* %231, align 1, !tbaa !2448
  %232 = lshr i64 %220, 63
  %233 = trunc i64 %232 to i8
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %233, i8* %234, align 1, !tbaa !2449
  %235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %235, align 1, !tbaa !2450
  %236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %236, align 1, !tbaa !2447
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 13
  %239 = load i64, i64* %PC
  %240 = add i64 %239, 2
  %241 = load i64, i64* %PC
  %242 = add i64 %241, 2
  store i64 %242, i64* %PC
  %243 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %244 = load i8, i8* %243, align 1, !tbaa !2448
  store i8 %244, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %245 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %246 = icmp ne i8 %244, 0
  %247 = select i1 %246, i64 %238, i64 %240
  store i64 %247, i64* %245, align 8, !tbaa !2428
  %248 = load i8, i8* %BRANCH_TAKEN
  %249 = icmp eq i8 %248, 1
  br i1 %249, label %block_4006e8, label %block_4006dd

block_4006e8:                                     ; preds = %block_4006e5, %block_4006d3, %block_4006b0
  %MEMORY.0 = phi %struct.Memory* [ %2, %block_4006b0 ], [ %2, %block_4006d3 ], [ %2, %block_4006e5 ]
  %250 = load i64, i64* %PC
  %251 = add i64 %250, 1
  store i64 %251, i64* %PC
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %253 = load i64, i64* %252, align 8, !tbaa !2428
  %254 = add i64 %253, 8
  %255 = inttoptr i64 %253 to i64*
  %256 = load i64, i64* %255
  store i64 %256, i64* %RBP, align 8, !tbaa !2428
  store i64 %254, i64* %252, align 8, !tbaa !2428
  %257 = load i64, i64* %PC
  %258 = add i64 %257, 1
  store i64 %258, i64* %PC
  %259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %261 = load i64, i64* %260, align 8, !tbaa !2428
  %262 = inttoptr i64 %261 to i64*
  %263 = load i64, i64* %262
  store i64 %263, i64* %259, align 8, !tbaa !2428
  %264 = add i64 %261, 8
  store i64 %264, i64* %260, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_4006e5:                                     ; preds = %block_4006dd
  %265 = load i64, i64* %RAX
  %266 = load i32, i32* %EAX
  %267 = zext i32 %266 to i64
  %268 = load i64, i64* %PC
  %269 = add i64 %268, 3
  store i64 %269, i64* %PC
  br label %block_4006e8

; <label>:270:                                    ; preds = %block_4006dd
  %271 = load i64, i64* %PC
  %272 = tail call %struct.Memory* @__remill_jump(%struct.State* %0, i64 %271, %struct.Memory* %2)
  ret %struct.Memory* %272
}

; Function Attrs: noinline
define %struct.Memory* @sub_4006f0___do_global_dtors_aux(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_4006f0:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 7
  store i64 %13, i64* %PC
  %14 = load i8, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %15, align 1, !tbaa !2432
  %16 = zext i8 %14 to i32
  %17 = call i32 @llvm.ctpop.i32(i32 %16) #17
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1, !tbaa !2446
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %22, align 1, !tbaa !2447
  %23 = icmp eq i8 %14, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1, !tbaa !2448
  %26 = lshr i8 %14, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1, !tbaa !2449
  %28 = lshr i8 %14, 7
  %29 = xor i8 %26, %28
  %30 = add nuw nsw i8 %29, %28
  %31 = icmp eq i8 %30, 2
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %32, i8* %33, align 1, !tbaa !2450
  %34 = load i64, i64* %PC
  %35 = add i64 %34, 25
  %36 = load i64, i64* %PC
  %37 = add i64 %36, 2
  %38 = load i64, i64* %PC
  %39 = add i64 %38, 2
  store i64 %39, i64* %PC
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %41 = load i8, i8* %40, align 1, !tbaa !2448
  %42 = icmp eq i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %45 = select i1 %42, i64 %35, i64 %37
  store i64 %45, i64* %44, align 8, !tbaa !2428
  %46 = load i8, i8* %BRANCH_TAKEN
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %block_400710, label %block_4006f9

block_400710:                                     ; preds = %block_4006f0
  %48 = load i64, i64* %PC
  %49 = add i64 %48, 2
  store i64 %49, i64* %PC
  %50 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8, !tbaa !2428
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53
  store i64 %54, i64* %50, align 8, !tbaa !2428
  %55 = add i64 %52, 8
  store i64 %55, i64* %51, align 8, !tbaa !2428
  ret %struct.Memory* %2

block_4006f9:                                     ; preds = %block_4006f0
  %56 = load i64, i64* %RBP
  %57 = load i64, i64* %PC
  %58 = add i64 %57, 1
  store i64 %58, i64* %PC
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %60 = load i64, i64* %59, align 8, !tbaa !2428
  %61 = add i64 %60, -8
  %62 = inttoptr i64 %61 to i64*
  store i64 %56, i64* %62
  store i64 %61, i64* %59, align 8, !tbaa !2428
  %63 = load i64, i64* %RSP
  %64 = load i64, i64* %PC
  %65 = add i64 %64, 3
  store i64 %65, i64* %PC
  store i64 %63, i64* %RBP, align 8, !tbaa !2428
  %66 = load i64, i64* %PC
  %67 = sub i64 %66, 125
  %68 = load i64, i64* %PC
  %69 = add i64 %68, 5
  %70 = load i64, i64* %PC
  %71 = add i64 %70, 5
  store i64 %71, i64* %PC
  %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %73 = load i64, i64* %72, align 8, !tbaa !2428
  %74 = add i64 %73, -8
  %75 = inttoptr i64 %74 to i64*
  store i64 %69, i64* %75
  store i64 %74, i64* %72, align 8, !tbaa !2428
  %76 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %67, i64* %76, align 8, !tbaa !2428
  %77 = load i64, i64* %PC
  %78 = call %struct.Memory* @sub_400680_deregister_tm_clones(%struct.State* %0, i64 %77, %struct.Memory* %2)
  %79 = load i64, i64* %PC
  %80 = add i64 %79, 7
  store i64 %80, i64* %PC
  store i8 1, i8* getelementptr inbounds (%__bss_start_type, %__bss_start_type* @__bss_start, i32 0, i32 0, i32 0)
  %81 = load i64, i64* %PC
  %82 = add i64 %81, 1
  store i64 %82, i64* %PC
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %84 = load i64, i64* %83, align 8, !tbaa !2428
  %85 = add i64 %84, 8
  %86 = inttoptr i64 %84 to i64*
  %87 = load i64, i64* %86
  store i64 %87, i64* %RBP, align 8, !tbaa !2428
  store i64 %85, i64* %83, align 8, !tbaa !2428
  %88 = load i64, i64* %PC
  %89 = add i64 %88, 1
  store i64 %89, i64* %PC
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %91 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %92 = load i64, i64* %91, align 8, !tbaa !2428
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93
  store i64 %94, i64* %90, align 8, !tbaa !2428
  %95 = add i64 %92, 8
  store i64 %95, i64* %91, align 8, !tbaa !2428
  ret %struct.Memory* %78
}

; Function Attrs: noinline
define %struct.Memory* @sub_400720_frame_dummy(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_400720:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 1
  store i64 %14, i64* %PC
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %16 = load i64, i64* %15, align 8, !tbaa !2428
  %17 = add i64 %16, -8
  %18 = inttoptr i64 %17 to i64*
  store i64 %12, i64* %18
  store i64 %17, i64* %15, align 8, !tbaa !2428
  %19 = load i64, i64* %RSP
  %20 = load i64, i64* %PC
  %21 = add i64 %20, 3
  store i64 %21, i64* %PC
  store i64 %19, i64* %RBP, align 8, !tbaa !2428
  %22 = load i64, i64* %PC
  %23 = add i64 %22, 1
  store i64 %23, i64* %PC
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %25 = load i64, i64* %24, align 8, !tbaa !2428
  %26 = add i64 %25, 8
  %27 = inttoptr i64 %25 to i64*
  %28 = load i64, i64* %27
  store i64 %28, i64* %RBP, align 8, !tbaa !2428
  store i64 %26, i64* %24, align 8, !tbaa !2428
  %29 = load i64, i64* %PC
  %30 = sub i64 %29, 117
  %31 = load i64, i64* %PC
  %32 = add i64 %31, 2
  store i64 %32, i64* %PC
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %30, i64* %33, align 8, !tbaa !2428
  %34 = load i64, i64* %PC
  %35 = tail call %struct.Memory* @sub_4006b0_register_tm_clones(%struct.State* %0, i64 %34, %struct.Memory* %2)
  ret %struct.Memory* %35
}

; Function Attrs: noinline
define %struct.Memory* @sub_401560___libc_csu_init(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #14 {
block_401560:
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  store i64 %1, i64* %PC, align 8
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 3
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EBX = bitcast %union.anon* %11 to i32*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 11
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %EDI = bitcast %union.anon* %14 to i32*
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 27
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %R13D = bitcast %union.anon* %17 to i32*
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %19 = getelementptr inbounds %struct.GPR, %struct.GPR* %18, i32 0, i32 1
  %20 = getelementptr inbounds %struct.Reg, %struct.Reg* %19, i32 0, i32 0
  %RAX = bitcast %union.anon* %20 to i64*
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %22 = getelementptr inbounds %struct.GPR, %struct.GPR* %21, i32 0, i32 3
  %23 = getelementptr inbounds %struct.Reg, %struct.Reg* %22, i32 0, i32 0
  %RBX = bitcast %union.anon* %23 to i64*
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.GPR, %struct.GPR* %24, i32 0, i32 7
  %26 = getelementptr inbounds %struct.Reg, %struct.Reg* %25, i32 0, i32 0
  %RDX = bitcast %union.anon* %26 to i64*
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 9
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %RSI = bitcast %union.anon* %29 to i64*
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %31 = getelementptr inbounds %struct.GPR, %struct.GPR* %30, i32 0, i32 11
  %32 = getelementptr inbounds %struct.Reg, %struct.Reg* %31, i32 0, i32 0
  %RDI = bitcast %union.anon* %32 to i64*
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %34 = getelementptr inbounds %struct.GPR, %struct.GPR* %33, i32 0, i32 13
  %35 = getelementptr inbounds %struct.Reg, %struct.Reg* %34, i32 0, i32 0
  %RSP = bitcast %union.anon* %35 to i64*
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %37 = getelementptr inbounds %struct.GPR, %struct.GPR* %36, i32 0, i32 15
  %38 = getelementptr inbounds %struct.Reg, %struct.Reg* %37, i32 0, i32 0
  %RBP = bitcast %union.anon* %38 to i64*
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 25
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %R12 = bitcast %union.anon* %41 to i64*
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 27
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %R13 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 29
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %R14 = bitcast %union.anon* %47 to i64*
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.GPR, %struct.GPR* %48, i32 0, i32 31
  %50 = getelementptr inbounds %struct.Reg, %struct.Reg* %49, i32 0, i32 0
  %R15 = bitcast %union.anon* %50 to i64*
  %51 = load i64, i64* %R15
  %52 = load i64, i64* %PC
  %53 = add i64 %52, 2
  store i64 %53, i64* %PC
  %54 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %55 = load i64, i64* %54, align 8, !tbaa !2428
  %56 = add i64 %55, -8
  %57 = inttoptr i64 %56 to i64*
  store i64 %51, i64* %57
  store i64 %56, i64* %54, align 8, !tbaa !2428
  %58 = load i64, i64* %R14
  %59 = load i64, i64* %PC
  %60 = add i64 %59, 2
  store i64 %60, i64* %PC
  %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %62 = load i64, i64* %61, align 8, !tbaa !2428
  %63 = add i64 %62, -8
  %64 = inttoptr i64 %63 to i64*
  store i64 %58, i64* %64
  store i64 %63, i64* %61, align 8, !tbaa !2428
  %65 = load i64, i64* %RDX
  %66 = load i64, i64* %PC
  %67 = add i64 %66, 3
  store i64 %67, i64* %PC
  store i64 %65, i64* %R15, align 8, !tbaa !2428
  %68 = load i64, i64* %R13
  %69 = load i64, i64* %PC
  %70 = add i64 %69, 2
  store i64 %70, i64* %PC
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %72 = load i64, i64* %71, align 8, !tbaa !2428
  %73 = add i64 %72, -8
  %74 = inttoptr i64 %73 to i64*
  store i64 %68, i64* %74
  store i64 %73, i64* %71, align 8, !tbaa !2428
  %75 = load i64, i64* %R12
  %76 = load i64, i64* %PC
  %77 = add i64 %76, 2
  store i64 %77, i64* %PC
  %78 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %79 = load i64, i64* %78, align 8, !tbaa !2428
  %80 = add i64 %79, -8
  %81 = inttoptr i64 %80 to i64*
  store i64 %75, i64* %81
  store i64 %80, i64* %78, align 8, !tbaa !2428
  %82 = load i64, i64* %PC
  %83 = add i64 %82, 7
  store i64 %83, i64* %PC
  store i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64* %R12, align 8, !tbaa !2428
  %84 = load i64, i64* %RBP
  %85 = load i64, i64* %PC
  %86 = add i64 %85, 1
  store i64 %86, i64* %PC
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %88 = load i64, i64* %87, align 8, !tbaa !2428
  %89 = add i64 %88, -8
  %90 = inttoptr i64 %89 to i64*
  store i64 %84, i64* %90
  store i64 %89, i64* %87, align 8, !tbaa !2428
  %91 = load i64, i64* %PC
  %92 = add i64 %91, 7
  store i64 %92, i64* %PC
  store i64 add (i64 ptrtoint (%seg_601df0__init_array_type* @seg_601df0__init_array to i64), i64 8), i64* %RBP, align 8, !tbaa !2428
  %93 = load i64, i64* %RBX
  %94 = load i64, i64* %PC
  %95 = add i64 %94, 1
  store i64 %95, i64* %PC
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %97 = load i64, i64* %96, align 8, !tbaa !2428
  %98 = add i64 %97, -8
  %99 = inttoptr i64 %98 to i64*
  store i64 %93, i64* %99
  store i64 %98, i64* %96, align 8, !tbaa !2428
  %100 = bitcast i32* %R13D to i64*
  %101 = load i32, i32* %EDI
  %102 = zext i32 %101 to i64
  %103 = load i64, i64* %PC
  %104 = add i64 %103, 3
  store i64 %104, i64* %PC
  %105 = and i64 %102, 4294967295
  store i64 %105, i64* %100, align 8, !tbaa !2428
  %106 = load i64, i64* %RSI
  %107 = load i64, i64* %PC
  %108 = add i64 %107, 3
  store i64 %108, i64* %PC
  store i64 %106, i64* %R14, align 8, !tbaa !2428
  %109 = load i64, i64* %RBP
  %110 = load i64, i64* %R12
  %111 = load i64, i64* %PC
  %112 = add i64 %111, 3
  store i64 %112, i64* %PC
  %113 = sub i64 %109, %110
  store i64 %113, i64* %RBP, align 8, !tbaa !2428
  %114 = icmp ult i64 %109, %110
  %115 = zext i1 %114 to i8
  %116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %115, i8* %116, align 1, !tbaa !2432
  %117 = trunc i64 %113 to i32
  %118 = and i32 %117, 255
  %119 = call i32 @llvm.ctpop.i32(i32 %118) #17
  %120 = trunc i32 %119 to i8
  %121 = and i8 %120, 1
  %122 = xor i8 %121, 1
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %122, i8* %123, align 1, !tbaa !2446
  %124 = xor i64 %110, %109
  %125 = xor i64 %124, %113
  %126 = lshr i64 %125, 4
  %127 = trunc i64 %126 to i8
  %128 = and i8 %127, 1
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %128, i8* %129, align 1, !tbaa !2447
  %130 = icmp eq i64 %113, 0
  %131 = zext i1 %130 to i8
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %131, i8* %132, align 1, !tbaa !2448
  %133 = lshr i64 %113, 63
  %134 = trunc i64 %133 to i8
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %134, i8* %135, align 1, !tbaa !2449
  %136 = lshr i64 %109, 63
  %137 = lshr i64 %110, 63
  %138 = xor i64 %137, %136
  %139 = xor i64 %133, %136
  %140 = add nuw nsw i64 %139, %138
  %141 = icmp eq i64 %140, 2
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %142, i8* %143, align 1, !tbaa !2450
  %144 = load i64, i64* %RSP
  %145 = load i64, i64* %PC
  %146 = add i64 %145, 4
  store i64 %146, i64* %PC
  %147 = sub i64 %144, 8
  store i64 %147, i64* %RSP, align 8, !tbaa !2428
  %148 = icmp ult i64 %144, 8
  %149 = zext i1 %148 to i8
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %149, i8* %150, align 1, !tbaa !2432
  %151 = trunc i64 %147 to i32
  %152 = and i32 %151, 255
  %153 = call i32 @llvm.ctpop.i32(i32 %152) #17
  %154 = trunc i32 %153 to i8
  %155 = and i8 %154, 1
  %156 = xor i8 %155, 1
  %157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %156, i8* %157, align 1, !tbaa !2446
  %158 = xor i64 8, %144
  %159 = xor i64 %158, %147
  %160 = lshr i64 %159, 4
  %161 = trunc i64 %160 to i8
  %162 = and i8 %161, 1
  %163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %162, i8* %163, align 1, !tbaa !2447
  %164 = icmp eq i64 %147, 0
  %165 = zext i1 %164 to i8
  %166 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %165, i8* %166, align 1, !tbaa !2448
  %167 = lshr i64 %147, 63
  %168 = trunc i64 %167 to i8
  %169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %168, i8* %169, align 1, !tbaa !2449
  %170 = lshr i64 %144, 63
  %171 = xor i64 %167, %170
  %172 = add nuw nsw i64 %171, %170
  %173 = icmp eq i64 %172, 2
  %174 = zext i1 %173 to i8
  %175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %174, i8* %175, align 1, !tbaa !2450
  %176 = load i64, i64* %RBP
  %177 = load i64, i64* %PC
  %178 = add i64 %177, 4
  store i64 %178, i64* %PC
  %179 = ashr i64 %176, 2
  %180 = trunc i64 %179 to i8
  %181 = and i8 %180, 1
  %182 = ashr i64 %179, 1
  store i64 %182, i64* %RBP, align 8, !tbaa !2428
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %181, i8* %183, align 1, !tbaa !2451
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  %185 = trunc i64 %182 to i32
  %186 = and i32 %185, 255
  %187 = call i32 @llvm.ctpop.i32(i32 %186) #17
  %188 = trunc i32 %187 to i8
  %189 = and i8 %188, 1
  %190 = xor i8 %189, 1
  store i8 %190, i8* %184, align 1, !tbaa !2451
  %191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %191, align 1, !tbaa !2451
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %193 = icmp eq i64 %182, 0
  %194 = zext i1 %193 to i8
  store i8 %194, i8* %192, align 1, !tbaa !2451
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %196 = lshr i64 %182, 63
  %197 = trunc i64 %196 to i8
  store i8 %197, i8* %195, align 1, !tbaa !2451
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %198, align 1, !tbaa !2451
  %199 = load i64, i64* %PC
  %200 = sub i64 %199, 4092
  %201 = load i64, i64* %PC
  %202 = add i64 %201, 5
  %203 = load i64, i64* %PC
  %204 = add i64 %203, 5
  store i64 %204, i64* %PC
  %205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %206 = load i64, i64* %205, align 8, !tbaa !2428
  %207 = add i64 %206, -8
  %208 = inttoptr i64 %207 to i64*
  store i64 %202, i64* %208
  store i64 %207, i64* %205, align 8, !tbaa !2428
  %209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %200, i64* %209, align 8, !tbaa !2428
  %210 = load i64, i64* %PC
  %211 = call %struct.Memory* @sub_400590__init_proc(%struct.State* %0, i64 %210, %struct.Memory* %2)
  %212 = load i64, i64* %RBP
  %213 = load i64, i64* %RBP
  %214 = load i64, i64* %PC
  %215 = add i64 %214, 3
  store i64 %215, i64* %PC
  %216 = and i64 %213, %212
  %217 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %217, align 1, !tbaa !2432
  %218 = trunc i64 %216 to i32
  %219 = and i32 %218, 255
  %220 = call i32 @llvm.ctpop.i32(i32 %219) #17
  %221 = trunc i32 %220 to i8
  %222 = and i8 %221, 1
  %223 = xor i8 %222, 1
  %224 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %223, i8* %224, align 1, !tbaa !2446
  %225 = icmp eq i64 %216, 0
  %226 = zext i1 %225 to i8
  %227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %226, i8* %227, align 1, !tbaa !2448
  %228 = lshr i64 %216, 63
  %229 = trunc i64 %228 to i8
  %230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %229, i8* %230, align 1, !tbaa !2449
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %231, align 1, !tbaa !2450
  %232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %232, align 1, !tbaa !2447
  %233 = load i64, i64* %PC
  %234 = add i64 %233, 34
  %235 = load i64, i64* %PC
  %236 = add i64 %235, 2
  %237 = load i64, i64* %PC
  %238 = add i64 %237, 2
  store i64 %238, i64* %PC
  %239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %240 = load i8, i8* %239, align 1, !tbaa !2448
  store i8 %240, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %242 = icmp ne i8 %240, 0
  %243 = select i1 %242, i64 %234, i64 %236
  store i64 %243, i64* %241, align 8, !tbaa !2428
  %244 = load i8, i8* %BRANCH_TAKEN
  %245 = icmp eq i8 %244, 1
  br i1 %245, label %block_4015b6, label %block_401596

block_4015b6:                                     ; preds = %block_4015a0, %block_401560
  %MEMORY.0 = phi %struct.Memory* [ %211, %block_401560 ], [ %387, %block_4015a0 ]
  %246 = load i64, i64* %RSP
  %247 = load i64, i64* %PC
  %248 = add i64 %247, 4
  store i64 %248, i64* %PC
  %249 = add i64 8, %246
  store i64 %249, i64* %RSP, align 8, !tbaa !2428
  %250 = icmp ult i64 %249, %246
  %251 = icmp ult i64 %249, 8
  %252 = or i1 %250, %251
  %253 = zext i1 %252 to i8
  %254 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %253, i8* %254, align 1, !tbaa !2432
  %255 = trunc i64 %249 to i32
  %256 = and i32 %255, 255
  %257 = call i32 @llvm.ctpop.i32(i32 %256) #17
  %258 = trunc i32 %257 to i8
  %259 = and i8 %258, 1
  %260 = xor i8 %259, 1
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %260, i8* %261, align 1, !tbaa !2446
  %262 = xor i64 8, %246
  %263 = xor i64 %262, %249
  %264 = lshr i64 %263, 4
  %265 = trunc i64 %264 to i8
  %266 = and i8 %265, 1
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %266, i8* %267, align 1, !tbaa !2447
  %268 = icmp eq i64 %249, 0
  %269 = zext i1 %268 to i8
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %269, i8* %270, align 1, !tbaa !2448
  %271 = lshr i64 %249, 63
  %272 = trunc i64 %271 to i8
  %273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %272, i8* %273, align 1, !tbaa !2449
  %274 = lshr i64 %246, 63
  %275 = xor i64 %271, %274
  %276 = add nuw nsw i64 %275, %271
  %277 = icmp eq i64 %276, 2
  %278 = zext i1 %277 to i8
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %278, i8* %279, align 1, !tbaa !2450
  %280 = load i64, i64* %PC
  %281 = add i64 %280, 1
  store i64 %281, i64* %PC
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %283 = load i64, i64* %282, align 8, !tbaa !2428
  %284 = add i64 %283, 8
  %285 = inttoptr i64 %283 to i64*
  %286 = load i64, i64* %285
  store i64 %286, i64* %RBX, align 8, !tbaa !2428
  store i64 %284, i64* %282, align 8, !tbaa !2428
  %287 = load i64, i64* %PC
  %288 = add i64 %287, 1
  store i64 %288, i64* %PC
  %289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %290 = load i64, i64* %289, align 8, !tbaa !2428
  %291 = add i64 %290, 8
  %292 = inttoptr i64 %290 to i64*
  %293 = load i64, i64* %292
  store i64 %293, i64* %RBP, align 8, !tbaa !2428
  store i64 %291, i64* %289, align 8, !tbaa !2428
  %294 = load i64, i64* %PC
  %295 = add i64 %294, 2
  store i64 %295, i64* %PC
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %297 = load i64, i64* %296, align 8, !tbaa !2428
  %298 = add i64 %297, 8
  %299 = inttoptr i64 %297 to i64*
  %300 = load i64, i64* %299
  store i64 %300, i64* %R12, align 8, !tbaa !2428
  store i64 %298, i64* %296, align 8, !tbaa !2428
  %301 = load i64, i64* %PC
  %302 = add i64 %301, 2
  store i64 %302, i64* %PC
  %303 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %304 = load i64, i64* %303, align 8, !tbaa !2428
  %305 = add i64 %304, 8
  %306 = inttoptr i64 %304 to i64*
  %307 = load i64, i64* %306
  store i64 %307, i64* %R13, align 8, !tbaa !2428
  store i64 %305, i64* %303, align 8, !tbaa !2428
  %308 = load i64, i64* %PC
  %309 = add i64 %308, 2
  store i64 %309, i64* %PC
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %311 = load i64, i64* %310, align 8, !tbaa !2428
  %312 = add i64 %311, 8
  %313 = inttoptr i64 %311 to i64*
  %314 = load i64, i64* %313
  store i64 %314, i64* %R14, align 8, !tbaa !2428
  store i64 %312, i64* %310, align 8, !tbaa !2428
  %315 = load i64, i64* %PC
  %316 = add i64 %315, 2
  store i64 %316, i64* %PC
  %317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %318 = load i64, i64* %317, align 8, !tbaa !2428
  %319 = add i64 %318, 8
  %320 = inttoptr i64 %318 to i64*
  %321 = load i64, i64* %320
  store i64 %321, i64* %R15, align 8, !tbaa !2428
  store i64 %319, i64* %317, align 8, !tbaa !2428
  %322 = load i64, i64* %PC
  %323 = add i64 %322, 1
  store i64 %323, i64* %PC
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %326 = load i64, i64* %325, align 8, !tbaa !2428
  %327 = inttoptr i64 %326 to i64*
  %328 = load i64, i64* %327
  store i64 %328, i64* %324, align 8, !tbaa !2428
  %329 = add i64 %326, 8
  store i64 %329, i64* %325, align 8, !tbaa !2428
  ret %struct.Memory* %MEMORY.0

block_401596:                                     ; preds = %block_401560
  %330 = load i64, i64* %RBX
  %331 = load i32, i32* %EBX
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %PC
  %334 = add i64 %333, 2
  store i64 %334, i64* %PC
  %335 = xor i64 %332, %330
  %336 = trunc i64 %335 to i32
  %337 = and i64 %335, 4294967295
  store i64 %337, i64* %RBX, align 8, !tbaa !2428
  %338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %338, align 1, !tbaa !2432
  %339 = and i32 %336, 255
  %340 = call i32 @llvm.ctpop.i32(i32 %339) #17
  %341 = trunc i32 %340 to i8
  %342 = and i8 %341, 1
  %343 = xor i8 %342, 1
  %344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %343, i8* %344, align 1, !tbaa !2446
  %345 = icmp eq i32 %336, 0
  %346 = zext i1 %345 to i8
  %347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %346, i8* %347, align 1, !tbaa !2448
  %348 = lshr i32 %336, 31
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %349, i8* %350, align 1, !tbaa !2449
  %351 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 0, i8* %351, align 1, !tbaa !2450
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %352, align 1, !tbaa !2447
  %353 = load i64, i64* %RAX
  %354 = load i64, i64* %RAX
  %355 = add i64 %354, %353
  %356 = load i32, i32* %EAX
  %357 = zext i32 %356 to i64
  %358 = load i64, i64* %PC
  %359 = add i64 %358, 8
  store i64 %359, i64* %PC
  br label %block_4015a0

block_4015a0:                                     ; preds = %block_4015a0, %block_401596
  %MEMORY.1 = phi %struct.Memory* [ %211, %block_401596 ], [ %387, %block_4015a0 ]
  %360 = load i64, i64* %R15
  %361 = load i64, i64* %PC
  %362 = add i64 %361, 3
  store i64 %362, i64* %PC
  store i64 %360, i64* %RDX, align 8, !tbaa !2428
  %363 = load i64, i64* %R14
  %364 = load i64, i64* %PC
  %365 = add i64 %364, 3
  store i64 %365, i64* %PC
  store i64 %363, i64* %RSI, align 8, !tbaa !2428
  %366 = load i32, i32* %R13D
  %367 = zext i32 %366 to i64
  %368 = load i64, i64* %PC
  %369 = add i64 %368, 3
  store i64 %369, i64* %PC
  %370 = and i64 %367, 4294967295
  store i64 %370, i64* %RDI, align 8, !tbaa !2428
  %371 = load i64, i64* %R12
  %372 = load i64, i64* %RBX
  %373 = mul i64 %372, 8
  %374 = add i64 %373, %371
  %375 = load i64, i64* %PC
  %376 = add i64 %375, 4
  %377 = load i64, i64* %PC
  %378 = add i64 %377, 4
  store i64 %378, i64* %PC
  %379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %380 = load i64, i64* %379, align 8, !tbaa !2428
  %381 = add i64 %380, -8
  %382 = inttoptr i64 %381 to i64*
  store i64 %376, i64* %382
  store i64 %381, i64* %379, align 8, !tbaa !2428
  %383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %384 = inttoptr i64 %374 to i64*
  %385 = load i64, i64* %384
  store i64 %385, i64* %383, align 8, !tbaa !2428
  %386 = load i64, i64* %PC
  %387 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 %386, %struct.Memory* %MEMORY.1)
  %388 = load i64, i64* %RBX
  %389 = load i64, i64* %PC
  %390 = add i64 %389, 4
  store i64 %390, i64* %PC
  %391 = add i64 1, %388
  store i64 %391, i64* %RBX, align 8, !tbaa !2428
  %392 = icmp ult i64 %391, %388
  %393 = icmp ult i64 %391, 1
  %394 = or i1 %392, %393
  %395 = zext i1 %394 to i8
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %395, i8* %396, align 1, !tbaa !2432
  %397 = trunc i64 %391 to i32
  %398 = and i32 %397, 255
  %399 = call i32 @llvm.ctpop.i32(i32 %398) #17
  %400 = trunc i32 %399 to i8
  %401 = and i8 %400, 1
  %402 = xor i8 %401, 1
  %403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %402, i8* %403, align 1, !tbaa !2446
  %404 = xor i64 1, %388
  %405 = xor i64 %404, %391
  %406 = lshr i64 %405, 4
  %407 = trunc i64 %406 to i8
  %408 = and i8 %407, 1
  %409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %408, i8* %409, align 1, !tbaa !2447
  %410 = icmp eq i64 %391, 0
  %411 = zext i1 %410 to i8
  %412 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %411, i8* %412, align 1, !tbaa !2448
  %413 = lshr i64 %391, 63
  %414 = trunc i64 %413 to i8
  %415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %414, i8* %415, align 1, !tbaa !2449
  %416 = lshr i64 %388, 63
  %417 = xor i64 %413, %416
  %418 = add nuw nsw i64 %417, %413
  %419 = icmp eq i64 %418, 2
  %420 = zext i1 %419 to i8
  %421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %420, i8* %421, align 1, !tbaa !2450
  %422 = load i64, i64* %RBP
  %423 = load i64, i64* %RBX
  %424 = load i64, i64* %PC
  %425 = add i64 %424, 3
  store i64 %425, i64* %PC
  %426 = sub i64 %422, %423
  %427 = icmp ult i64 %422, %423
  %428 = zext i1 %427 to i8
  %429 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %428, i8* %429, align 1, !tbaa !2432
  %430 = trunc i64 %426 to i32
  %431 = and i32 %430, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431) #17
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1, !tbaa !2446
  %437 = xor i64 %423, %422
  %438 = xor i64 %437, %426
  %439 = lshr i64 %438, 4
  %440 = trunc i64 %439 to i8
  %441 = and i8 %440, 1
  %442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %441, i8* %442, align 1, !tbaa !2447
  %443 = icmp eq i64 %426, 0
  %444 = zext i1 %443 to i8
  %445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %444, i8* %445, align 1, !tbaa !2448
  %446 = lshr i64 %426, 63
  %447 = trunc i64 %446 to i8
  %448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %447, i8* %448, align 1, !tbaa !2449
  %449 = lshr i64 %422, 63
  %450 = lshr i64 %423, 63
  %451 = xor i64 %450, %449
  %452 = xor i64 %446, %449
  %453 = add nuw nsw i64 %452, %451
  %454 = icmp eq i64 %453, 2
  %455 = zext i1 %454 to i8
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %455, i8* %456, align 1, !tbaa !2450
  %457 = load i64, i64* %PC
  %458 = sub i64 %457, 20
  %459 = load i64, i64* %PC
  %460 = add i64 %459, 2
  %461 = load i64, i64* %PC
  %462 = add i64 %461, 2
  store i64 %462, i64* %PC
  %463 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %464 = load i8, i8* %463, align 1, !tbaa !2448
  %465 = icmp eq i8 %464, 0
  %466 = zext i1 %465 to i8
  store i8 %466, i8* %BRANCH_TAKEN, align 1, !tbaa !2451
  %467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %468 = select i1 %465, i64 %458, i64 %460
  store i64 %468, i64* %467, align 8, !tbaa !2428
  %469 = load i8, i8* %BRANCH_TAKEN
  %470 = icmp eq i8 %469, 1
  br i1 %470, label %block_4015a0, label %block_4015b6
}

; Function Attrs: noinline
declare void @__mcsema_attach_call() #13

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_400720_frame_dummy() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400720;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @1, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_400720_frame_dummy_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400720_frame_dummy(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4006f0___do_global_dtors_aux() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4006f0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @3, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4006f0___do_global_dtors_aux_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4006f0___do_global_dtors_aux(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6026d0_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @sin(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602690_asin(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_602668_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @cos(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: alwaysinline inlinehint
define %struct.Memory* @ext_6026c8_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) #16 {
  %state = alloca %struct.State*, align 8
  %curr_pc = alloca i64, align 8
  %memory = alloca %struct.Memory*, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  %SS_BASE = alloca i64, align 8
  %ES_BASE = alloca i64, align 8
  %DS_BASE = alloca i64, align 8
  %CS_BASE = alloca i64, align 8
  %STATE = alloca %struct.State*, align 8
  %MEMORY = alloca %struct.Memory*, align 8
  %_DR0 = alloca i64*, align 8
  %_DR1 = alloca i64*, align 8
  %_DR2 = alloca i64*, align 8
  %_DR3 = alloca i64*, align 8
  %_DR4 = alloca i64*, align 8
  %_DR5 = alloca i64*, align 8
  %_DR6 = alloca i64*, align 8
  %_DR7 = alloca i64*, align 8
  %CR0 = alloca i64*, align 8
  %CR1 = alloca i64*, align 8
  %CR2 = alloca i64*, align 8
  %CR3 = alloca i64*, align 8
  %CR4 = alloca i64*, align 8
  %CR8 = alloca i64*, align 8
  store %struct.State* %0, %struct.State** %state, align 8
  store i64 %1, i64* %curr_pc, align 8
  store %struct.Memory* %2, %struct.Memory** %memory, align 8
  store i8 0, i8* %BRANCH_TAKEN, align 1
  store i64 0, i64* %SS_BASE, align 8
  store i64 0, i64* %ES_BASE, align 8
  store i64 0, i64* %DS_BASE, align 8
  store i64 0, i64* %CS_BASE, align 8
  store %struct.State* %0, %struct.State** %STATE, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC = bitcast %union.anon* %6 to i64*
  store i64 %1, i64* %PC, align 8
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 1
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.anon.2*
  %AH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %10, i32 0, i32 1
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12 = getelementptr inbounds %struct.GPR, %struct.GPR* %11, i32 0, i32 3
  %13 = getelementptr inbounds %struct.Reg, %struct.Reg* %12, i32 0, i32 0
  %14 = bitcast %union.anon* %13 to %struct.anon.2*
  %BH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %14, i32 0, i32 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %16 = getelementptr inbounds %struct.GPR, %struct.GPR* %15, i32 0, i32 5
  %17 = getelementptr inbounds %struct.Reg, %struct.Reg* %16, i32 0, i32 0
  %18 = bitcast %union.anon* %17 to %struct.anon.2*
  %CH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %18, i32 0, i32 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %20 = getelementptr inbounds %struct.GPR, %struct.GPR* %19, i32 0, i32 7
  %21 = getelementptr inbounds %struct.Reg, %struct.Reg* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.anon.2*
  %DH = getelementptr inbounds %struct.anon.2, %struct.anon.2* %22, i32 0, i32 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 1
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %26, i32 0, i32 0
  %27 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %28 = getelementptr inbounds %struct.GPR, %struct.GPR* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.Reg, %struct.Reg* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.anon.2*
  %BL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %30, i32 0, i32 0
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %32 = getelementptr inbounds %struct.GPR, %struct.GPR* %31, i32 0, i32 5
  %33 = getelementptr inbounds %struct.Reg, %struct.Reg* %32, i32 0, i32 0
  %34 = bitcast %union.anon* %33 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %34, i32 0, i32 0
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %36 = getelementptr inbounds %struct.GPR, %struct.GPR* %35, i32 0, i32 7
  %37 = getelementptr inbounds %struct.Reg, %struct.Reg* %36, i32 0, i32 0
  %38 = bitcast %union.anon* %37 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %38, i32 0, i32 0
  %39 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.GPR, %struct.GPR* %39, i32 0, i32 9
  %41 = getelementptr inbounds %struct.Reg, %struct.Reg* %40, i32 0, i32 0
  %42 = bitcast %union.anon* %41 to %struct.anon.2*
  %SIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %42, i32 0, i32 0
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.GPR, %struct.GPR* %43, i32 0, i32 11
  %45 = getelementptr inbounds %struct.Reg, %struct.Reg* %44, i32 0, i32 0
  %46 = bitcast %union.anon* %45 to %struct.anon.2*
  %DIL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %46, i32 0, i32 0
  %47 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %48 = getelementptr inbounds %struct.GPR, %struct.GPR* %47, i32 0, i32 13
  %49 = getelementptr inbounds %struct.Reg, %struct.Reg* %48, i32 0, i32 0
  %50 = bitcast %union.anon* %49 to %struct.anon.2*
  %SPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %50, i32 0, i32 0
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %52 = getelementptr inbounds %struct.GPR, %struct.GPR* %51, i32 0, i32 15
  %53 = getelementptr inbounds %struct.Reg, %struct.Reg* %52, i32 0, i32 0
  %54 = bitcast %union.anon* %53 to %struct.anon.2*
  %BPL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %54, i32 0, i32 0
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 17
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %58 = bitcast %union.anon* %57 to %struct.anon.2*
  %R8B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %58, i32 0, i32 0
  %59 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %60 = getelementptr inbounds %struct.GPR, %struct.GPR* %59, i32 0, i32 19
  %61 = getelementptr inbounds %struct.Reg, %struct.Reg* %60, i32 0, i32 0
  %62 = bitcast %union.anon* %61 to %struct.anon.2*
  %R9B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %62, i32 0, i32 0
  %63 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.GPR, %struct.GPR* %63, i32 0, i32 21
  %65 = getelementptr inbounds %struct.Reg, %struct.Reg* %64, i32 0, i32 0
  %66 = bitcast %union.anon* %65 to %struct.anon.2*
  %R10B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %66, i32 0, i32 0
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %68 = getelementptr inbounds %struct.GPR, %struct.GPR* %67, i32 0, i32 23
  %69 = getelementptr inbounds %struct.Reg, %struct.Reg* %68, i32 0, i32 0
  %70 = bitcast %union.anon* %69 to %struct.anon.2*
  %R11B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %70, i32 0, i32 0
  %71 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.GPR, %struct.GPR* %71, i32 0, i32 25
  %73 = getelementptr inbounds %struct.Reg, %struct.Reg* %72, i32 0, i32 0
  %74 = bitcast %union.anon* %73 to %struct.anon.2*
  %R12B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %74, i32 0, i32 0
  %75 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %76 = getelementptr inbounds %struct.GPR, %struct.GPR* %75, i32 0, i32 27
  %77 = getelementptr inbounds %struct.Reg, %struct.Reg* %76, i32 0, i32 0
  %78 = bitcast %union.anon* %77 to %struct.anon.2*
  %R13B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %78, i32 0, i32 0
  %79 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %80 = getelementptr inbounds %struct.GPR, %struct.GPR* %79, i32 0, i32 29
  %81 = getelementptr inbounds %struct.Reg, %struct.Reg* %80, i32 0, i32 0
  %82 = bitcast %union.anon* %81 to %struct.anon.2*
  %R14B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %82, i32 0, i32 0
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.GPR, %struct.GPR* %83, i32 0, i32 31
  %85 = getelementptr inbounds %struct.Reg, %struct.Reg* %84, i32 0, i32 0
  %86 = bitcast %union.anon* %85 to %struct.anon.2*
  %R15B = getelementptr inbounds %struct.anon.2, %struct.anon.2* %86, i32 0, i32 0
  %87 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %88 = getelementptr inbounds %struct.GPR, %struct.GPR* %87, i32 0, i32 1
  %89 = getelementptr inbounds %struct.Reg, %struct.Reg* %88, i32 0, i32 0
  %AX = bitcast %union.anon* %89 to i16*
  %90 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.GPR, %struct.GPR* %90, i32 0, i32 3
  %92 = getelementptr inbounds %struct.Reg, %struct.Reg* %91, i32 0, i32 0
  %BX = bitcast %union.anon* %92 to i16*
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 5
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %CX = bitcast %union.anon* %95 to i16*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %DX = bitcast %union.anon* %98 to i16*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 9
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %SI = bitcast %union.anon* %101 to i16*
  %102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.GPR, %struct.GPR* %102, i32 0, i32 11
  %104 = getelementptr inbounds %struct.Reg, %struct.Reg* %103, i32 0, i32 0
  %DI = bitcast %union.anon* %104 to i16*
  %105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %106 = getelementptr inbounds %struct.GPR, %struct.GPR* %105, i32 0, i32 13
  %107 = getelementptr inbounds %struct.Reg, %struct.Reg* %106, i32 0, i32 0
  %SP = bitcast %union.anon* %107 to i16*
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 15
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %BP = bitcast %union.anon* %110 to i16*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 17
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %R8W = bitcast %union.anon* %113 to i16*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 19
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R9W = bitcast %union.anon* %116 to i16*
  %117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.GPR, %struct.GPR* %117, i32 0, i32 21
  %119 = getelementptr inbounds %struct.Reg, %struct.Reg* %118, i32 0, i32 0
  %R10W = bitcast %union.anon* %119 to i16*
  %120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.GPR, %struct.GPR* %120, i32 0, i32 23
  %122 = getelementptr inbounds %struct.Reg, %struct.Reg* %121, i32 0, i32 0
  %R11W = bitcast %union.anon* %122 to i16*
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 25
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %R12W = bitcast %union.anon* %125 to i16*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 27
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %R13W = bitcast %union.anon* %128 to i16*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 29
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R14W = bitcast %union.anon* %131 to i16*
  %132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %133 = getelementptr inbounds %struct.GPR, %struct.GPR* %132, i32 0, i32 31
  %134 = getelementptr inbounds %struct.Reg, %struct.Reg* %133, i32 0, i32 0
  %R15W = bitcast %union.anon* %134 to i16*
  %135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %136 = getelementptr inbounds %struct.GPR, %struct.GPR* %135, i32 0, i32 33
  %137 = getelementptr inbounds %struct.Reg, %struct.Reg* %136, i32 0, i32 0
  %IP = bitcast %union.anon* %137 to i16*
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 1
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %EAX = bitcast %union.anon* %140 to i32*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %EBX = bitcast %union.anon* %143 to i32*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 5
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %ECX = bitcast %union.anon* %146 to i32*
  %147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %148 = getelementptr inbounds %struct.GPR, %struct.GPR* %147, i32 0, i32 7
  %149 = getelementptr inbounds %struct.Reg, %struct.Reg* %148, i32 0, i32 0
  %EDX = bitcast %union.anon* %149 to i32*
  %150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %151 = getelementptr inbounds %struct.GPR, %struct.GPR* %150, i32 0, i32 9
  %152 = getelementptr inbounds %struct.Reg, %struct.Reg* %151, i32 0, i32 0
  %ESI = bitcast %union.anon* %152 to i32*
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 11
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %EDI = bitcast %union.anon* %155 to i32*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 13
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %ESP = bitcast %union.anon* %158 to i32*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 15
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %EBP = bitcast %union.anon* %161 to i32*
  %162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %163 = getelementptr inbounds %struct.GPR, %struct.GPR* %162, i32 0, i32 33
  %164 = getelementptr inbounds %struct.Reg, %struct.Reg* %163, i32 0, i32 0
  %EIP = bitcast %union.anon* %164 to i32*
  %165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %166 = getelementptr inbounds %struct.GPR, %struct.GPR* %165, i32 0, i32 17
  %167 = getelementptr inbounds %struct.Reg, %struct.Reg* %166, i32 0, i32 0
  %R8D = bitcast %union.anon* %167 to i32*
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 19
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %R9D = bitcast %union.anon* %170 to i32*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 21
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %R10D = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 23
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %R11D = bitcast %union.anon* %176 to i32*
  %177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %178 = getelementptr inbounds %struct.GPR, %struct.GPR* %177, i32 0, i32 25
  %179 = getelementptr inbounds %struct.Reg, %struct.Reg* %178, i32 0, i32 0
  %R12D = bitcast %union.anon* %179 to i32*
  %180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %181 = getelementptr inbounds %struct.GPR, %struct.GPR* %180, i32 0, i32 27
  %182 = getelementptr inbounds %struct.Reg, %struct.Reg* %181, i32 0, i32 0
  %R13D = bitcast %union.anon* %182 to i32*
  %183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %184 = getelementptr inbounds %struct.GPR, %struct.GPR* %183, i32 0, i32 29
  %185 = getelementptr inbounds %struct.Reg, %struct.Reg* %184, i32 0, i32 0
  %R14D = bitcast %union.anon* %185 to i32*
  %186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %187 = getelementptr inbounds %struct.GPR, %struct.GPR* %186, i32 0, i32 31
  %188 = getelementptr inbounds %struct.Reg, %struct.Reg* %187, i32 0, i32 0
  %R15D = bitcast %union.anon* %188 to i32*
  %189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %190 = getelementptr inbounds %struct.GPR, %struct.GPR* %189, i32 0, i32 1
  %191 = getelementptr inbounds %struct.Reg, %struct.Reg* %190, i32 0, i32 0
  %RAX = bitcast %union.anon* %191 to i64*
  %192 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %193 = getelementptr inbounds %struct.GPR, %struct.GPR* %192, i32 0, i32 3
  %194 = getelementptr inbounds %struct.Reg, %struct.Reg* %193, i32 0, i32 0
  %RBX = bitcast %union.anon* %194 to i64*
  %195 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %196 = getelementptr inbounds %struct.GPR, %struct.GPR* %195, i32 0, i32 5
  %197 = getelementptr inbounds %struct.Reg, %struct.Reg* %196, i32 0, i32 0
  %RCX = bitcast %union.anon* %197 to i64*
  %198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %199 = getelementptr inbounds %struct.GPR, %struct.GPR* %198, i32 0, i32 7
  %200 = getelementptr inbounds %struct.Reg, %struct.Reg* %199, i32 0, i32 0
  %RDX = bitcast %union.anon* %200 to i64*
  %201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %202 = getelementptr inbounds %struct.GPR, %struct.GPR* %201, i32 0, i32 9
  %203 = getelementptr inbounds %struct.Reg, %struct.Reg* %202, i32 0, i32 0
  %RSI = bitcast %union.anon* %203 to i64*
  %204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %205 = getelementptr inbounds %struct.GPR, %struct.GPR* %204, i32 0, i32 11
  %206 = getelementptr inbounds %struct.Reg, %struct.Reg* %205, i32 0, i32 0
  %RDI = bitcast %union.anon* %206 to i64*
  %207 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %208 = getelementptr inbounds %struct.GPR, %struct.GPR* %207, i32 0, i32 13
  %209 = getelementptr inbounds %struct.Reg, %struct.Reg* %208, i32 0, i32 0
  %RSP = bitcast %union.anon* %209 to i64*
  %210 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %211 = getelementptr inbounds %struct.GPR, %struct.GPR* %210, i32 0, i32 15
  %212 = getelementptr inbounds %struct.Reg, %struct.Reg* %211, i32 0, i32 0
  %RBP = bitcast %union.anon* %212 to i64*
  %213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %214 = getelementptr inbounds %struct.GPR, %struct.GPR* %213, i32 0, i32 17
  %215 = getelementptr inbounds %struct.Reg, %struct.Reg* %214, i32 0, i32 0
  %R8 = bitcast %union.anon* %215 to i64*
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 19
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %R9 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 21
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %R10 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 23
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %R11 = bitcast %union.anon* %224 to i64*
  %225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %226 = getelementptr inbounds %struct.GPR, %struct.GPR* %225, i32 0, i32 25
  %227 = getelementptr inbounds %struct.Reg, %struct.Reg* %226, i32 0, i32 0
  %R12 = bitcast %union.anon* %227 to i64*
  %228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %229 = getelementptr inbounds %struct.GPR, %struct.GPR* %228, i32 0, i32 27
  %230 = getelementptr inbounds %struct.Reg, %struct.Reg* %229, i32 0, i32 0
  %R13 = bitcast %union.anon* %230 to i64*
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 29
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %R14 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 31
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %R15 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 33
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %RIP = bitcast %union.anon* %239 to i64*
  %240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %241 = getelementptr inbounds %struct.Segments, %struct.Segments* %240, i32 0, i32 1
  %SS = bitcast %union.SegmentSelector* %241 to i16*
  %242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %243 = getelementptr inbounds %struct.Segments, %struct.Segments* %242, i32 0, i32 3
  %ES = bitcast %union.SegmentSelector* %243 to i16*
  %244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %245 = getelementptr inbounds %struct.Segments, %struct.Segments* %244, i32 0, i32 5
  %GS = bitcast %union.SegmentSelector* %245 to i16*
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %247 = getelementptr inbounds %struct.Segments, %struct.Segments* %246, i32 0, i32 7
  %FS = bitcast %union.SegmentSelector* %247 to i16*
  %248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %249 = getelementptr inbounds %struct.Segments, %struct.Segments* %248, i32 0, i32 9
  %DS = bitcast %union.SegmentSelector* %249 to i16*
  %250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 4
  %251 = getelementptr inbounds %struct.Segments, %struct.Segments* %250, i32 0, i32 11
  %CS = bitcast %union.SegmentSelector* %251 to i16*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %253 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %252, i32 0, i32 5
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %GS_BASE = bitcast %union.anon* %254 to i64*
  %255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 5
  %256 = getelementptr inbounds %struct.AddressSpace, %struct.AddressSpace* %255, i32 0, i32 7
  %257 = getelementptr inbounds %struct.Reg, %struct.Reg* %256, i32 0, i32 0
  %FS_BASE = bitcast %union.anon* %257 to i64*
  %258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %259 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %258, i64 0, i64 0
  %YMM0 = bitcast %union.VectorReg* %259 to %"class.std::bitset"*
  %260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %261 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %260, i64 0, i64 1
  %YMM1 = bitcast %union.VectorReg* %261 to %"class.std::bitset"*
  %262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %263 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %262, i64 0, i64 2
  %YMM2 = bitcast %union.VectorReg* %263 to %"class.std::bitset"*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %265 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %264, i64 0, i64 3
  %YMM3 = bitcast %union.VectorReg* %265 to %"class.std::bitset"*
  %266 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %267 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %266, i64 0, i64 4
  %YMM4 = bitcast %union.VectorReg* %267 to %"class.std::bitset"*
  %268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %269 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %268, i64 0, i64 5
  %YMM5 = bitcast %union.VectorReg* %269 to %"class.std::bitset"*
  %270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %271 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %270, i64 0, i64 6
  %YMM6 = bitcast %union.VectorReg* %271 to %"class.std::bitset"*
  %272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %273 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %272, i64 0, i64 7
  %YMM7 = bitcast %union.VectorReg* %273 to %"class.std::bitset"*
  %274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %275 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %274, i64 0, i64 8
  %YMM8 = bitcast %union.VectorReg* %275 to %"class.std::bitset"*
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %277 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %276, i64 0, i64 9
  %YMM9 = bitcast %union.VectorReg* %277 to %"class.std::bitset"*
  %278 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %279 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %278, i64 0, i64 10
  %YMM10 = bitcast %union.VectorReg* %279 to %"class.std::bitset"*
  %280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %281 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %280, i64 0, i64 11
  %YMM11 = bitcast %union.VectorReg* %281 to %"class.std::bitset"*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %283 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %282, i64 0, i64 12
  %YMM12 = bitcast %union.VectorReg* %283 to %"class.std::bitset"*
  %284 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %285 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %284, i64 0, i64 13
  %YMM13 = bitcast %union.VectorReg* %285 to %"class.std::bitset"*
  %286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %287 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %286, i64 0, i64 14
  %YMM14 = bitcast %union.VectorReg* %287 to %"class.std::bitset"*
  %288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %289 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %288, i64 0, i64 15
  %YMM15 = bitcast %union.VectorReg* %289 to %"class.std::bitset"*
  %290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %291 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %290, i64 0, i64 0
  %XMM0 = bitcast %union.VectorReg* %291 to %union.vec128_t*
  %292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %293 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %292, i64 0, i64 1
  %XMM1 = bitcast %union.VectorReg* %293 to %union.vec128_t*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %295 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %294, i64 0, i64 2
  %XMM2 = bitcast %union.VectorReg* %295 to %union.vec128_t*
  %296 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %297 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %296, i64 0, i64 3
  %XMM3 = bitcast %union.VectorReg* %297 to %union.vec128_t*
  %298 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %299 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %298, i64 0, i64 4
  %XMM4 = bitcast %union.VectorReg* %299 to %union.vec128_t*
  %300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %301 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %300, i64 0, i64 5
  %XMM5 = bitcast %union.VectorReg* %301 to %union.vec128_t*
  %302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %303 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %302, i64 0, i64 6
  %XMM6 = bitcast %union.VectorReg* %303 to %union.vec128_t*
  %304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %305 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %304, i64 0, i64 7
  %XMM7 = bitcast %union.VectorReg* %305 to %union.vec128_t*
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %307 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %306, i64 0, i64 8
  %XMM8 = bitcast %union.VectorReg* %307 to %union.vec128_t*
  %308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %309 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %308, i64 0, i64 9
  %XMM9 = bitcast %union.VectorReg* %309 to %union.vec128_t*
  %310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %311 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %310, i64 0, i64 10
  %XMM10 = bitcast %union.VectorReg* %311 to %union.vec128_t*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %313 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %312, i64 0, i64 11
  %XMM11 = bitcast %union.VectorReg* %313 to %union.vec128_t*
  %314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %315 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %314, i64 0, i64 12
  %XMM12 = bitcast %union.VectorReg* %315 to %union.vec128_t*
  %316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %317 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %316, i64 0, i64 13
  %XMM13 = bitcast %union.VectorReg* %317 to %union.vec128_t*
  %318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %319 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %318, i64 0, i64 14
  %XMM14 = bitcast %union.VectorReg* %319 to %union.vec128_t*
  %320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 1
  %321 = getelementptr inbounds [32 x %union.VectorReg], [32 x %union.VectorReg]* %320, i64 0, i64 15
  %XMM15 = bitcast %union.VectorReg* %321 to %union.vec128_t*
  %322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %323 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %322, i32 0, i32 0
  %324 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %323, i64 0, i64 0
  %ST0 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %324, i32 0, i32 1
  %325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %326 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %325, i32 0, i32 0
  %327 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %326, i64 0, i64 1
  %ST1 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %327, i32 0, i32 1
  %328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %329 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %328, i32 0, i32 0
  %330 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %329, i64 0, i64 2
  %ST2 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %330, i32 0, i32 1
  %331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %332 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %331, i32 0, i32 0
  %333 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %332, i64 0, i64 3
  %ST3 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %333, i32 0, i32 1
  %334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %335 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %334, i32 0, i32 0
  %336 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %335, i64 0, i64 4
  %ST4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %336, i32 0, i32 1
  %337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %338 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %337, i32 0, i32 0
  %339 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %338, i64 0, i64 5
  %ST5 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %339, i32 0, i32 1
  %340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %341 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %340, i32 0, i32 0
  %342 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %341, i64 0, i64 6
  %ST6 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %342, i32 0, i32 1
  %343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 7
  %344 = getelementptr inbounds %struct.X87Stack, %struct.X87Stack* %343, i32 0, i32 0
  %345 = getelementptr inbounds [8 x %struct.anon.3], [8 x %struct.anon.3]* %344, i64 0, i64 7
  %ST7 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %345, i32 0, i32 1
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %347 = getelementptr inbounds %struct.MMX, %struct.MMX* %346, i32 0, i32 0
  %348 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %347, i64 0, i64 0
  %349 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %348, i32 0, i32 1
  %350 = bitcast %union.vec64_t* %349 to %struct.uint64v1_t*
  %351 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %350, i32 0, i32 0
  %MM0 = getelementptr inbounds [1 x i64], [1 x i64]* %351, i64 0, i64 0
  %352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %353 = getelementptr inbounds %struct.MMX, %struct.MMX* %352, i32 0, i32 0
  %354 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %353, i64 0, i64 1
  %355 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %354, i32 0, i32 1
  %356 = bitcast %union.vec64_t* %355 to %struct.uint64v1_t*
  %357 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %356, i32 0, i32 0
  %MM1 = getelementptr inbounds [1 x i64], [1 x i64]* %357, i64 0, i64 0
  %358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %359 = getelementptr inbounds %struct.MMX, %struct.MMX* %358, i32 0, i32 0
  %360 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %359, i64 0, i64 2
  %361 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %360, i32 0, i32 1
  %362 = bitcast %union.vec64_t* %361 to %struct.uint64v1_t*
  %363 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %362, i32 0, i32 0
  %MM2 = getelementptr inbounds [1 x i64], [1 x i64]* %363, i64 0, i64 0
  %364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %365 = getelementptr inbounds %struct.MMX, %struct.MMX* %364, i32 0, i32 0
  %366 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %365, i64 0, i64 3
  %367 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %366, i32 0, i32 1
  %368 = bitcast %union.vec64_t* %367 to %struct.uint64v1_t*
  %369 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %368, i32 0, i32 0
  %MM3 = getelementptr inbounds [1 x i64], [1 x i64]* %369, i64 0, i64 0
  %370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %371 = getelementptr inbounds %struct.MMX, %struct.MMX* %370, i32 0, i32 0
  %372 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %371, i64 0, i64 4
  %373 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %372, i32 0, i32 1
  %374 = bitcast %union.vec64_t* %373 to %struct.uint64v1_t*
  %375 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %374, i32 0, i32 0
  %MM4 = getelementptr inbounds [1 x i64], [1 x i64]* %375, i64 0, i64 0
  %376 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %377 = getelementptr inbounds %struct.MMX, %struct.MMX* %376, i32 0, i32 0
  %378 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %377, i64 0, i64 5
  %379 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %378, i32 0, i32 1
  %380 = bitcast %union.vec64_t* %379 to %struct.uint64v1_t*
  %381 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %380, i32 0, i32 0
  %MM5 = getelementptr inbounds [1 x i64], [1 x i64]* %381, i64 0, i64 0
  %382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %383 = getelementptr inbounds %struct.MMX, %struct.MMX* %382, i32 0, i32 0
  %384 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %383, i64 0, i64 6
  %385 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %384, i32 0, i32 1
  %386 = bitcast %union.vec64_t* %385 to %struct.uint64v1_t*
  %387 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %386, i32 0, i32 0
  %MM6 = getelementptr inbounds [1 x i64], [1 x i64]* %387, i64 0, i64 0
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 8
  %389 = getelementptr inbounds %struct.MMX, %struct.MMX* %388, i32 0, i32 0
  %390 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %389, i64 0, i64 7
  %391 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %390, i32 0, i32 1
  %392 = bitcast %union.vec64_t* %391 to %struct.uint64v1_t*
  %393 = getelementptr inbounds %struct.uint64v1_t, %struct.uint64v1_t* %392, i32 0, i32 0
  %MM7 = getelementptr inbounds [1 x i64], [1 x i64]* %393, i64 0, i64 0
  %394 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %AF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %394, i32 0, i32 5
  %395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %CF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %395, i32 0, i32 1
  %396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %DF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %396, i32 0, i32 11
  %397 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %OF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %397, i32 0, i32 13
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %PF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %398, i32 0, i32 3
  %399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %SF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %399, i32 0, i32 9
  %400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 2
  %ZF = getelementptr inbounds %struct.ArithFlags, %struct.ArithFlags* %400, i32 0, i32 7
  store i64* @DR0, i64** %_DR0, align 8
  store i64* @DR1, i64** %_DR1, align 8
  store i64* @DR2, i64** %_DR2, align 8
  store i64* @DR3, i64** %_DR3, align 8
  store i64* @DR4, i64** %_DR4, align 8
  store i64* @DR5, i64** %_DR5, align 8
  store i64* @DR6, i64** %_DR6, align 8
  store i64* @DR7, i64** %_DR7, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR0, i32 0, i32 0), i64** %CR0, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR1, i32 0, i32 0), i64** %CR1, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR2, i32 0, i32 0), i64** %CR2, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR3, i32 0, i32 0), i64** %CR3, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR4, i32 0, i32 0), i64** %CR4, align 8
  store i64* getelementptr inbounds (%union.anon, %union.anon* @gCR8, i32 0, i32 0), i64** %CR8, align 8
  %401 = bitcast %"class.std::bitset"* %YMM0 to double*
  %402 = load double, double* %401
  %403 = load i64, i64* %RSP
  %404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %405 = inttoptr i64 %403 to i64*
  %406 = load i64, i64* %405
  store i64 %406, i64* %PC
  %407 = add i64 %403, 8
  store i64 %407, i64* %RSP
  %408 = call double @tan(double %402)
  store %"class.std::bitset" zeroinitializer, %"class.std::bitset"* %YMM0
  %409 = bitcast %"class.std::bitset"* %YMM0 to double*
  store double %408, double* %409
  %410 = load %struct.Memory*, %struct.Memory** %MEMORY
  ret %struct.Memory* %410
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_4005d0_printf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026e0_sprintf(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_6026a0_strlen(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602678_strcmp(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_4015d0___libc_csu_fini() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015d0;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @4, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_4015d0___libc_csu_fini_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015d0___libc_csu_fini(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define internal void @callback_sub_401560___libc_csu_init() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x401560;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @5, void ()** @2)
  ret void
}

define internal %struct.Memory* @callback_sub_401560___libc_csu_init_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_401560___libc_csu_init(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @main() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400730;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @6, void ()** @2)
  ret void
}

define internal %struct.Memory* @main_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400730_main(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: noinline
define internal %struct.Memory* @ext_602670___libc_start_main(%struct.State*, i64, %struct.Memory*) #13 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64)* @__libc_start_main to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.term_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x4015d4;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @7, void ()** @2)
  ret void
}

define internal %struct.Memory* @.term_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_4015d4__term_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

; Function Attrs: naked nobuiltin noinline
define dllexport void @.init_proc() #15 {
  call void asm sideeffect "pushq $0;pushq $$0x400590;jmpq *$1;", "*m,*m,~{dirflag},~{fpsr},~{flags}"(%struct.Memory* (%struct.State*, i64, %struct.Memory*)** @8, void ()** @2)
  ret void
}

define internal %struct.Memory* @.init_proc_wrapper(%struct.State*, i64, %struct.Memory*) {
  %4 = load volatile i1, i1* @0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %3
  br label %__mcsema_early_init.exit

; <label>:6:                                      ; preds = %3
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %6, %5
  %7 = tail call %struct.Memory* @sub_400590__init_proc(%struct.State* %0, i64 %1, %struct.Memory* %2)
  ret %struct.Memory* %7
}

define internal void @__mcsema_destructor() {
  call void @callback_sub_4015d0___libc_csu_fini()
  ret void
}

define internal void @__mcsema_constructor() {
  %1 = load volatile i1, i1* @0
  br i1 %1, label %2, label %3

; <label>:2:                                      ; preds = %0
  br label %__mcsema_early_init.exit

; <label>:3:                                      ; preds = %0
  store volatile i1 true, i1* @0
  br label %__mcsema_early_init.exit

__mcsema_early_init.exit:                         ; preds = %3, %2
  call void @callback_sub_401560___libc_csu_init()
  ret void
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noduplicate noinline nounwind optnone readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noduplicate noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline }
attributes #14 = { noinline "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { naked nobuiltin noinline }
attributes #16 = { alwaysinline inlinehint "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { alwaysinline nobuiltin nounwind }

!llvm.ident = !{!0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!1259, !1260}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !2, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, retainedTypes: !67, imports: !70)
!2 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/BasicBlock.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!3 = !{!4, !26, !35, !39, !45, !51, !55, !61}
!4 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "Name", scope: !6, file: !5, line: 70, baseType: !8, size: 32, elements: !11, identifier: "_ZTSN14AsyncHyperCall4NameE")
!5 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/HyperCall.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!6 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "AsyncHyperCall", file: !5, line: 68, size: 8, elements: !7, identifier: "_ZTS14AsyncHyperCall")
!7 = !{}
!8 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !9, line: 183, baseType: !10)
!9 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stdint.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!10 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!11 = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!12 = !DIEnumerator(name: "kInvalid", value: 0)
!13 = !DIEnumerator(name: "kX86Int1", value: 1)
!14 = !DIEnumerator(name: "kX86Int3", value: 2)
!15 = !DIEnumerator(name: "kX86IntO", value: 3)
!16 = !DIEnumerator(name: "kX86IntN", value: 4)
!17 = !DIEnumerator(name: "kX86Bound", value: 5)
!18 = !DIEnumerator(name: "kX86IRet", value: 6)
!19 = !DIEnumerator(name: "kX86SysCall", value: 7)
!20 = !DIEnumerator(name: "kX86SysRet", value: 8)
!21 = !DIEnumerator(name: "kX86SysEnter", value: 9)
!22 = !DIEnumerator(name: "kX86SysExit", value: 10)
!23 = !DIEnumerator(name: "kX86JmpFar", value: 11)
!24 = !DIEnumerator(name: "kAArch64SupervisorCall", value: 12)
!25 = !DIEnumerator(name: "kInvalidInstruction", value: 13)
!26 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "RequestPrivilegeLevel", file: !27, line: 64, baseType: !28, size: 16, elements: !30, identifier: "_ZTS21RequestPrivilegeLevel")
!27 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/X86/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !9, line: 218, baseType: !29)
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !{!31, !32, !33, !34}
!31 = !DIEnumerator(name: "kRPLRingZero", value: 0)
!32 = !DIEnumerator(name: "kRPLRingOne", value: 1)
!33 = !DIEnumerator(name: "kRPLRingTwo", value: 2)
!34 = !DIEnumerator(name: "kRPLRingThree", value: 3)
!35 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "TableIndicator", file: !27, line: 71, baseType: !28, size: 16, elements: !36, identifier: "_ZTS14TableIndicator")
!36 = !{!37, !38}
!37 = !DIEnumerator(name: "kGlobalDescriptorTable", value: 0)
!38 = !DIEnumerator(name: "kLocalDescriptorTable", value: 1)
!39 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUPrecisionControl", file: !27, line: 123, baseType: !28, size: 16, elements: !40, identifier: "_ZTS19FPUPrecisionControl")
!40 = !{!41, !42, !43, !44}
!41 = !DIEnumerator(name: "kPrecisionSingle", value: 0)
!42 = !DIEnumerator(name: "kPrecisionReserved", value: 1)
!43 = !DIEnumerator(name: "kPrecisionDouble", value: 2)
!44 = !DIEnumerator(name: "kPrecisionExtended", value: 3)
!45 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPURoundingControl", file: !27, line: 130, baseType: !28, size: 16, elements: !46, identifier: "_ZTS18FPURoundingControl")
!46 = !{!47, !48, !49, !50}
!47 = !DIEnumerator(name: "kFPURoundToNearestEven", value: 0)
!48 = !DIEnumerator(name: "kFPURoundDownNegInf", value: 1)
!49 = !DIEnumerator(name: "kFPURoundUpInf", value: 2)
!50 = !DIEnumerator(name: "kFPURoundToZero", value: 3)
!51 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUInfinityControl", file: !27, line: 137, baseType: !28, size: 16, elements: !52, identifier: "_ZTS18FPUInfinityControl")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "kInfinityProjective", value: 0)
!54 = !DIEnumerator(name: "kInfinityAffine", value: 1)
!55 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUTag", file: !27, line: 214, baseType: !28, size: 16, elements: !56, identifier: "_ZTS6FPUTag")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "kFPUTagNonZero", value: 0)
!58 = !DIEnumerator(name: "kFPUTagZero", value: 1)
!59 = !DIEnumerator(name: "kFPUTagSpecial", value: 2)
!60 = !DIEnumerator(name: "kFPUTagEmpty", value: 3)
!61 = distinct !DICompositeType(tag: DW_TAG_enumeration_type, name: "FPUAbridgedTag", file: !27, line: 221, baseType: !62, size: 8, elements: !64, identifier: "_ZTS14FPUAbridgedTag")
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !9, line: 237, baseType: !63)
!63 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!64 = !{!65, !66}
!65 = !DIEnumerator(name: "kFPUAbridgedTagEmpty", value: 0)
!66 = !DIEnumerator(name: "kFPUAbridgedTagValid", value: 1)
!67 = !{!68}
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!70 = !{!71, !77, !83, !86, !93, !97, !102, !104, !112, !116, !120, !132, !136, !140, !144, !148, !153, !157, !161, !165, !169, !177, !181, !185, !187, !191, !195, !199, !205, !209, !213, !215, !223, !227, !235, !237, !241, !245, !249, !253, !258, !263, !268, !269, !270, !271, !274, !275, !276, !277, !278, !279, !280, !335, !339, !355, !358, !363, !371, !376, !380, !384, !388, !392, !394, !396, !400, !406, !410, !416, !422, !424, !428, !432, !436, !440, !451, !453, !457, !461, !465, !467, !471, !475, !479, !481, !483, !487, !495, !499, !503, !507, !509, !515, !517, !523, !527, !531, !535, !539, !543, !547, !549, !551, !555, !559, !563, !565, !569, !573, !575, !577, !581, !585, !589, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !606, !609, !611, !613, !615, !617, !619, !621, !623, !625, !627, !629, !631, !633, !634, !635, !636, !638, !640, !642, !644, !646, !648, !650, !652, !654, !656, !658, !660, !662, !665, !669, !674, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !706, !712, !717, !721, !723, !725, !727, !729, !736, !740, !744, !748, !752, !756, !761, !765, !767, !771, !777, !781, !786, !788, !790, !794, !798, !802, !804, !806, !808, !810, !814, !816, !818, !822, !826, !830, !834, !838, !840, !842, !846, !850, !854, !858, !860, !862, !866, !870, !871, !872, !873, !874, !875, !880, !882, !884, !888, !890, !892, !894, !896, !898, !900, !902, !907, !911, !913, !915, !920, !922, !924, !926, !928, !930, !932, !935, !937, !939, !943, !947, !949, !951, !953, !955, !957, !959, !961, !963, !965, !967, !971, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1009, !1013, !1017, !1019, !1021, !1023, !1025, !1027, !1029, !1031, !1033, !1035, !1039, !1043, !1047, !1049, !1051, !1053, !1057, !1061, !1065, !1067, !1069, !1071, !1073, !1075, !1077, !1079, !1081, !1083, !1085, !1087, !1089, !1093, !1097, !1101, !1103, !1105, !1107, !1109, !1113, !1117, !1119, !1121, !1123, !1125, !1127, !1129, !1133, !1137, !1139, !1141, !1143, !1145, !1149, !1153, !1157, !1159, !1161, !1163, !1165, !1167, !1169, !1173, !1177, !1181, !1183, !1187, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1207, !1209, !1212, !1217, !1219, !1225, !1227, !1229, !1231, !1236, !1238, !1244, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!71 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !72, entity: !74, line: 58)
!72 = !DINamespace(name: "__gnu_debug", scope: null, file: !73, line: 56)
!73 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/debug/debug.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!74 = !DINamespace(name: "__debug", scope: !75, file: !73, line: 50)
!75 = !DINamespace(name: "std", scope: null, file: !76, line: 229)
!76 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/x86_64-linux-gnu/c++/7.4.0/bits/c++config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!77 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !78, line: 52)
!78 = !DISubprogram(name: "abs", scope: !79, file: !79, line: 837, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!79 = !DIFile(filename: "/usr/include/stdlib.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !82}
!82 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!83 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !84, line: 127)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !79, line: 62, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!86 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !87, line: 128)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !79, line: 70, baseType: !88)
!88 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 66, size: 128, elements: !89, identifier: "_ZTS6ldiv_t")
!89 = !{!90, !92}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !88, file: !79, line: 68, baseType: !91, size: 64)
!91 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !88, file: !79, line: 69, baseType: !91, size: 64, offset: 64)
!93 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !94, line: 130)
!94 = !DISubprogram(name: "abort", scope: !79, file: !79, line: 588, type: !95, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!95 = !DISubroutineType(types: !96)
!96 = !{null}
!97 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !98, line: 134)
!98 = !DISubprogram(name: "atexit", scope: !79, file: !79, line: 592, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!99 = !DISubroutineType(types: !100)
!100 = !{!82, !101}
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!102 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !103, line: 137)
!103 = !DISubprogram(name: "at_quick_exit", scope: !79, file: !79, line: 597, type: !99, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!104 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !105, line: 140)
!105 = !DISubprogram(name: "atof", scope: !79, file: !79, line: 101, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!106 = !DISubroutineType(types: !107)
!107 = !{!108, !109}
!108 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!111 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!112 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !113, line: 141)
!113 = !DISubprogram(name: "atoi", scope: !79, file: !79, line: 104, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!114 = !DISubroutineType(types: !115)
!115 = !{!82, !109}
!116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !117, line: 142)
!117 = !DISubprogram(name: "atol", scope: !79, file: !79, line: 107, type: !118, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!118 = !DISubroutineType(types: !119)
!119 = !{!91, !109}
!120 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !121, line: 143)
!121 = !DISubprogram(name: "bsearch", scope: !79, file: !79, line: 817, type: !122, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!122 = !DISubroutineType(types: !123)
!123 = !{!124, !68, !68, !125, !125, !128}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !126, line: 62, baseType: !127)
!126 = !DIFile(filename: "/home/ubuntu/Github/remill/remill-build/libraries/llvm/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!127 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !79, line: 805, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!82, !68, !68}
!132 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !133, line: 144)
!133 = !DISubprogram(name: "calloc", scope: !79, file: !79, line: 541, type: !134, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!134 = !DISubroutineType(types: !135)
!135 = !{!124, !125, !125}
!136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !137, line: 145)
!137 = !DISubprogram(name: "div", scope: !79, file: !79, line: 849, type: !138, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!138 = !DISubroutineType(types: !139)
!139 = !{!84, !82, !82}
!140 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !141, line: 146)
!141 = !DISubprogram(name: "exit", scope: !79, file: !79, line: 614, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !82}
!144 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !145, line: 147)
!145 = !DISubprogram(name: "free", scope: !79, file: !79, line: 563, type: !146, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!146 = !DISubroutineType(types: !147)
!147 = !{null, !124}
!148 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !149, line: 148)
!149 = !DISubprogram(name: "getenv", scope: !79, file: !79, line: 631, type: !150, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !109}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !154, line: 149)
!154 = !DISubprogram(name: "labs", scope: !79, file: !79, line: 838, type: !155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!155 = !DISubroutineType(types: !156)
!156 = !{!91, !91}
!157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !158, line: 150)
!158 = !DISubprogram(name: "ldiv", scope: !79, file: !79, line: 851, type: !159, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!159 = !DISubroutineType(types: !160)
!160 = !{!87, !91, !91}
!161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !162, line: 151)
!162 = !DISubprogram(name: "malloc", scope: !79, file: !79, line: 539, type: !163, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!163 = !DISubroutineType(types: !164)
!164 = !{!124, !125}
!165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !166, line: 153)
!166 = !DISubprogram(name: "mblen", scope: !79, file: !79, line: 919, type: !167, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!167 = !DISubroutineType(types: !168)
!168 = !{!82, !109, !125}
!169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !170, line: 154)
!170 = !DISubprogram(name: "mbstowcs", scope: !79, file: !79, line: 930, type: !171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!171 = !DISubroutineType(types: !172)
!172 = !{!125, !173, !176, !125}
!173 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !174)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !109)
!177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !178, line: 155)
!178 = !DISubprogram(name: "mbtowc", scope: !79, file: !79, line: 922, type: !179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!179 = !DISubroutineType(types: !180)
!180 = !{!82, !173, !176, !125}
!181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !182, line: 157)
!182 = !DISubprogram(name: "qsort", scope: !79, file: !79, line: 827, type: !183, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!183 = !DISubroutineType(types: !184)
!184 = !{null, !124, !125, !125, !128}
!185 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !186, line: 160)
!186 = !DISubprogram(name: "quick_exit", scope: !79, file: !79, line: 620, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !188, line: 163)
!188 = !DISubprogram(name: "rand", scope: !79, file: !79, line: 453, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!189 = !DISubroutineType(types: !190)
!190 = !{!82}
!191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !192, line: 164)
!192 = !DISubprogram(name: "realloc", scope: !79, file: !79, line: 549, type: !193, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!193 = !DISubroutineType(types: !194)
!194 = !{!124, !124, !125}
!195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !196, line: 165)
!196 = !DISubprogram(name: "srand", scope: !79, file: !79, line: 455, type: !197, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !10}
!199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !200, line: 166)
!200 = !DISubprogram(name: "strtod", scope: !79, file: !79, line: 117, type: !201, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!201 = !DISubroutineType(types: !202)
!202 = !{!108, !176, !203}
!203 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!205 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !206, line: 167)
!206 = !DISubprogram(name: "strtol", scope: !79, file: !79, line: 176, type: !207, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!207 = !DISubroutineType(types: !208)
!208 = !{!91, !176, !203, !82}
!209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !210, line: 168)
!210 = !DISubprogram(name: "strtoul", scope: !79, file: !79, line: 180, type: !211, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!211 = !DISubroutineType(types: !212)
!212 = !{!127, !176, !203, !82}
!213 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !214, line: 169)
!214 = !DISubprogram(name: "system", scope: !79, file: !79, line: 781, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !216, line: 171)
!216 = !DISubprogram(name: "wcstombs", scope: !79, file: !79, line: 933, type: !217, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!217 = !DISubroutineType(types: !218)
!218 = !{!125, !219, !220, !125}
!219 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !152)
!220 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !224, line: 172)
!224 = !DISubprogram(name: "wctomb", scope: !79, file: !79, line: 926, type: !225, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!225 = !DISubroutineType(types: !226)
!226 = !{!82, !152, !175}
!227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !229, line: 200)
!228 = !DINamespace(name: "__gnu_cxx", scope: null, file: !76, line: 255)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !79, line: 80, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !79, line: 76, size: 128, elements: !231, identifier: "_ZTS7lldiv_t")
!231 = !{!232, !234}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !230, file: !79, line: 78, baseType: !233, size: 64)
!233 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !230, file: !79, line: 79, baseType: !233, size: 64, offset: 64)
!235 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !236, line: 206)
!236 = !DISubprogram(name: "_Exit", scope: !79, file: !79, line: 626, type: !142, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!237 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !238, line: 210)
!238 = !DISubprogram(name: "llabs", scope: !79, file: !79, line: 841, type: !239, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!239 = !DISubroutineType(types: !240)
!240 = !{!233, !233}
!241 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !242, line: 216)
!242 = !DISubprogram(name: "lldiv", scope: !79, file: !79, line: 855, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!243 = !DISubroutineType(types: !244)
!244 = !{!229, !233, !233}
!245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !246, line: 227)
!246 = !DISubprogram(name: "atoll", scope: !79, file: !79, line: 112, type: !247, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!247 = !DISubroutineType(types: !248)
!248 = !{!233, !109}
!249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !250, line: 228)
!250 = !DISubprogram(name: "strtoll", scope: !79, file: !79, line: 200, type: !251, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!251 = !DISubroutineType(types: !252)
!252 = !{!233, !176, !203, !82}
!253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !254, line: 229)
!254 = !DISubprogram(name: "strtoull", scope: !79, file: !79, line: 205, type: !255, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !176, !203, !82}
!257 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !259, line: 231)
!259 = !DISubprogram(name: "strtof", scope: !79, file: !79, line: 123, type: !260, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !176, !203}
!262 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !264, line: 232)
!264 = !DISubprogram(name: "strtold", scope: !79, file: !79, line: 126, type: !265, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!265 = !DISubroutineType(types: !266)
!266 = !{!267, !176, !203}
!267 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!268 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !229, line: 240)
!269 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !236, line: 242)
!270 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !238, line: 244)
!271 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !272, line: 245)
!272 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !228, file: !273, line: 213, type: !243, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!273 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/cstdlib", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !242, line: 246)
!275 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !246, line: 248)
!276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !259, line: 249)
!277 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !250, line: 250)
!278 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !254, line: 251)
!279 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !264, line: 252)
!280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !281, line: 57)
!281 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !283, file: !282, line: 79, size: 64, elements: !284, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!282 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/bits/exception_ptr.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!283 = !DINamespace(name: "__exception_ptr", scope: !75, file: !282, line: 52)
!284 = !{!285, !286, !290, !293, !294, !299, !300, !304, !309, !313, !317, !320, !321, !324, !328}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !281, file: !282, line: 81, baseType: !124, size: 64)
!286 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 83, type: !287, isLocal: false, isDefinition: false, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289, !124}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !281, file: !282, line: 85, type: !291, isLocal: false, isDefinition: false, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289}
!293 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !281, file: !282, line: 86, type: !291, isLocal: false, isDefinition: false, scopeLine: 86, flags: DIFlagPrototyped, isOptimized: false)
!294 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !281, file: !282, line: 88, type: !295, isLocal: false, isDefinition: false, scopeLine: 88, flags: DIFlagPrototyped, isOptimized: false)
!295 = !DISubroutineType(types: !296)
!296 = !{!124, !297}
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!299 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 96, type: !291, isLocal: false, isDefinition: false, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!300 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 98, type: !301, isLocal: false, isDefinition: false, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!301 = !DISubroutineType(types: !302)
!302 = !{null, !289, !303}
!303 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !298, size: 64)
!304 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 101, type: !305, isLocal: false, isDefinition: false, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !289, !307}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !75, file: !76, line: 235, baseType: !308)
!308 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!309 = !DISubprogram(name: "exception_ptr", scope: !281, file: !282, line: 105, type: !310, isLocal: false, isDefinition: false, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !289, !312}
!312 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !281, size: 64)
!313 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !281, file: !282, line: 118, type: !314, isLocal: false, isDefinition: false, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!314 = !DISubroutineType(types: !315)
!315 = !{!316, !289, !303}
!316 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !281, size: 64)
!317 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !281, file: !282, line: 122, type: !318, isLocal: false, isDefinition: false, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!318 = !DISubroutineType(types: !319)
!319 = !{!316, !289, !312}
!320 = !DISubprogram(name: "~exception_ptr", scope: !281, file: !282, line: 129, type: !291, isLocal: false, isDefinition: false, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!321 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !281, file: !282, line: 132, type: !322, isLocal: false, isDefinition: false, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!322 = !DISubroutineType(types: !323)
!323 = !{null, !289, !316}
!324 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !281, file: !282, line: 144, type: !325, isLocal: false, isDefinition: false, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, isOptimized: false)
!325 = !DISubroutineType(types: !326)
!326 = !{!327, !297}
!327 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!328 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !281, file: !282, line: 153, type: !329, isLocal: false, isDefinition: false, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, isOptimized: false)
!329 = !DISubroutineType(types: !330)
!330 = !{!331, !297}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !75, file: !334, line: 88, flags: DIFlagFwdDecl, identifier: "_ZTSSt9type_info")
!334 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.4.0/../../../../include/c++/7.4.0/typeinfo", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!335 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !283, entity: !336, line: 73)
!336 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !75, file: !282, line: 69, type: !337, isLocal: false, isDefinition: false, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: false)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !281}
!339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !340, line: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !341, line: 6, baseType: !342)
!341 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !343, line: 21, baseType: !344)
!343 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 13, size: 64, elements: !345, identifier: "_ZTS11__mbstate_t")
!345 = !{!346, !347}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !344, file: !343, line: 15, baseType: !82, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !344, file: !343, line: 20, baseType: !348, size: 32, offset: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !343, line: 16, size: 32, elements: !349, identifier: "_ZTSN11__mbstate_tUt_E")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !348, file: !343, line: 18, baseType: !10, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !348, file: !343, line: 19, baseType: !352, size: 32)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 32, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 4)
!355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !356, line: 139)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !357, line: 20, baseType: !10)
!357 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!358 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !359, line: 141)
!359 = !DISubprogram(name: "btowc", scope: !360, file: !360, line: 284, type: !361, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!360 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!361 = !DISubroutineType(types: !362)
!362 = !{!356, !82}
!363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !364, line: 142)
!364 = !DISubprogram(name: "fgetwc", scope: !360, file: !360, line: 727, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!365 = !DISubroutineType(types: !366)
!366 = !{!356, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !369, line: 5, baseType: !370)
!369 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !369, line: 4, flags: DIFlagFwdDecl, identifier: "_ZTS8_IO_FILE")
!371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !372, line: 143)
!372 = !DISubprogram(name: "fgetws", scope: !360, file: !360, line: 756, type: !373, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!373 = !DISubroutineType(types: !374)
!374 = !{!174, !173, !82, !375}
!375 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !367)
!376 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !377, line: 144)
!377 = !DISubprogram(name: "fputwc", scope: !360, file: !360, line: 741, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!378 = !DISubroutineType(types: !379)
!379 = !{!356, !175, !367}
!380 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !381, line: 145)
!381 = !DISubprogram(name: "fputws", scope: !360, file: !360, line: 763, type: !382, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!382 = !DISubroutineType(types: !383)
!383 = !{!82, !220, !375}
!384 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !385, line: 146)
!385 = !DISubprogram(name: "fwide", scope: !360, file: !360, line: 573, type: !386, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!386 = !DISubroutineType(types: !387)
!387 = !{!82, !367, !82}
!388 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !389, line: 147)
!389 = !DISubprogram(name: "fwprintf", scope: !360, file: !360, line: 580, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!390 = !DISubroutineType(types: !391)
!391 = !{!82, !375, !220, null}
!392 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !393, line: 148)
!393 = !DISubprogram(name: "fwscanf", scope: !360, file: !360, line: 621, type: !390, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!394 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !395, line: 149)
!395 = !DISubprogram(name: "getwc", scope: !360, file: !360, line: 728, type: !365, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!396 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !397, line: 150)
!397 = !DISubprogram(name: "getwchar", scope: !360, file: !360, line: 734, type: !398, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!398 = !DISubroutineType(types: !399)
!399 = !{!356}
!400 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !401, line: 151)
!401 = !DISubprogram(name: "mbrlen", scope: !360, file: !360, line: 307, type: !402, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!402 = !DISubroutineType(types: !403)
!403 = !{!125, !176, !125, !404}
!404 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !405)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!406 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !407, line: 152)
!407 = !DISubprogram(name: "mbrtowc", scope: !360, file: !360, line: 296, type: !408, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!408 = !DISubroutineType(types: !409)
!409 = !{!125, !173, !176, !125, !404}
!410 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !411, line: 153)
!411 = !DISubprogram(name: "mbsinit", scope: !360, file: !360, line: 292, type: !412, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!412 = !DISubroutineType(types: !413)
!413 = !{!82, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!416 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !417, line: 154)
!417 = !DISubprogram(name: "mbsrtowcs", scope: !360, file: !360, line: 337, type: !418, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!418 = !DISubroutineType(types: !419)
!419 = !{!125, !173, !420, !125, !404}
!420 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !423, line: 155)
!423 = !DISubprogram(name: "putwc", scope: !360, file: !360, line: 742, type: !378, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !425, line: 156)
!425 = !DISubprogram(name: "putwchar", scope: !360, file: !360, line: 748, type: !426, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!426 = !DISubroutineType(types: !427)
!427 = !{!356, !175}
!428 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !429, line: 158)
!429 = !DISubprogram(name: "swprintf", scope: !360, file: !360, line: 590, type: !430, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!430 = !DISubroutineType(types: !431)
!431 = !{!82, !173, !125, !220, null}
!432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !433, line: 160)
!433 = !DISubprogram(name: "swscanf", scope: !360, file: !360, line: 631, type: !434, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!434 = !DISubroutineType(types: !435)
!435 = !{!82, !220, !220, null}
!436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !437, line: 161)
!437 = !DISubprogram(name: "ungetwc", scope: !360, file: !360, line: 771, type: !438, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!438 = !DISubroutineType(types: !439)
!439 = !{!356, !356, !367}
!440 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !441, line: 162)
!441 = !DISubprogram(name: "vfwprintf", scope: !360, file: !360, line: 598, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!442 = !DISubroutineType(types: !443)
!443 = !{!82, !375, !220, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2, size: 192, elements: !446, identifier: "_ZTS13__va_list_tag")
!446 = !{!447, !448, !449, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !445, file: !2, baseType: !10, size: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !445, file: !2, baseType: !10, size: 32, offset: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !445, file: !2, baseType: !124, size: 64, offset: 128)
!451 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 164)
!452 = !DISubprogram(name: "vfwscanf", scope: !360, file: !360, line: 673, type: !442, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!453 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !454, line: 167)
!454 = !DISubprogram(name: "vswprintf", scope: !360, file: !360, line: 611, type: !455, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!455 = !DISubroutineType(types: !456)
!456 = !{!82, !173, !125, !220, !444}
!457 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 170)
!458 = !DISubprogram(name: "vswscanf", scope: !360, file: !360, line: 685, type: !459, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!459 = !DISubroutineType(types: !460)
!460 = !{!82, !220, !220, !444}
!461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !462, line: 172)
!462 = !DISubprogram(name: "vwprintf", scope: !360, file: !360, line: 606, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!463 = !DISubroutineType(types: !464)
!464 = !{!82, !220, !444}
!465 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 174)
!466 = !DISubprogram(name: "vwscanf", scope: !360, file: !360, line: 681, type: !463, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !468, line: 176)
!468 = !DISubprogram(name: "wcrtomb", scope: !360, file: !360, line: 301, type: !469, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!469 = !DISubroutineType(types: !470)
!470 = !{!125, !219, !175, !404}
!471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !472, line: 177)
!472 = !DISubprogram(name: "wcscat", scope: !360, file: !360, line: 97, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!473 = !DISubroutineType(types: !474)
!474 = !{!174, !173, !220}
!475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !476, line: 178)
!476 = !DISubprogram(name: "wcscmp", scope: !360, file: !360, line: 106, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!477 = !DISubroutineType(types: !478)
!478 = !{!82, !221, !221}
!479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !480, line: 179)
!480 = !DISubprogram(name: "wcscoll", scope: !360, file: !360, line: 131, type: !477, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !482, line: 180)
!482 = !DISubprogram(name: "wcscpy", scope: !360, file: !360, line: 87, type: !473, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !484, line: 181)
!484 = !DISubprogram(name: "wcscspn", scope: !360, file: !360, line: 187, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!485 = !DISubroutineType(types: !486)
!486 = !{!125, !221, !221}
!487 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !488, line: 182)
!488 = !DISubprogram(name: "wcsftime", scope: !360, file: !360, line: 835, type: !489, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!489 = !DISubroutineType(types: !490)
!490 = !{!125, !173, !125, !220, !491}
!491 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !360, line: 83, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!495 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !496, line: 183)
!496 = !DISubprogram(name: "wcslen", scope: !360, file: !360, line: 222, type: !497, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!497 = !DISubroutineType(types: !498)
!498 = !{!125, !221}
!499 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !500, line: 184)
!500 = !DISubprogram(name: "wcsncat", scope: !360, file: !360, line: 101, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !173, !220, !125}
!503 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !504, line: 185)
!504 = !DISubprogram(name: "wcsncmp", scope: !360, file: !360, line: 109, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!505 = !DISubroutineType(types: !506)
!506 = !{!82, !221, !221, !125}
!507 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !508, line: 186)
!508 = !DISubprogram(name: "wcsncpy", scope: !360, file: !360, line: 92, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !510, line: 187)
!510 = !DISubprogram(name: "wcsrtombs", scope: !360, file: !360, line: 343, type: !511, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!511 = !DISubroutineType(types: !512)
!512 = !{!125, !219, !513, !125, !404}
!513 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !514)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !516, line: 188)
!516 = !DISubprogram(name: "wcsspn", scope: !360, file: !360, line: 191, type: !485, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !518, line: 189)
!518 = !DISubprogram(name: "wcstod", scope: !360, file: !360, line: 377, type: !519, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!519 = !DISubroutineType(types: !520)
!520 = !{!108, !220, !521}
!521 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !522)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 191)
!524 = !DISubprogram(name: "wcstof", scope: !360, file: !360, line: 382, type: !525, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!525 = !DISubroutineType(types: !526)
!526 = !{!262, !220, !521}
!527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !528, line: 193)
!528 = !DISubprogram(name: "wcstok", scope: !360, file: !360, line: 217, type: !529, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!529 = !DISubroutineType(types: !530)
!530 = !{!174, !173, !220, !521}
!531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !532, line: 194)
!532 = !DISubprogram(name: "wcstol", scope: !360, file: !360, line: 428, type: !533, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!533 = !DISubroutineType(types: !534)
!534 = !{!91, !220, !521, !82}
!535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !536, line: 195)
!536 = !DISubprogram(name: "wcstoul", scope: !360, file: !360, line: 433, type: !537, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!537 = !DISubroutineType(types: !538)
!538 = !{!127, !220, !521, !82}
!539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !540, line: 196)
!540 = !DISubprogram(name: "wcsxfrm", scope: !360, file: !360, line: 135, type: !541, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!541 = !DISubroutineType(types: !542)
!542 = !{!125, !173, !220, !125}
!543 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !544, line: 197)
!544 = !DISubprogram(name: "wctob", scope: !360, file: !360, line: 288, type: !545, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!545 = !DISubroutineType(types: !546)
!546 = !{!82, !356}
!547 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !548, line: 198)
!548 = !DISubprogram(name: "wmemcmp", scope: !360, file: !360, line: 258, type: !505, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !550, line: 199)
!550 = !DISubprogram(name: "wmemcpy", scope: !360, file: !360, line: 262, type: !501, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!551 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !552, line: 200)
!552 = !DISubprogram(name: "wmemmove", scope: !360, file: !360, line: 267, type: !553, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!553 = !DISubroutineType(types: !554)
!554 = !{!174, !174, !221, !125}
!555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !556, line: 201)
!556 = !DISubprogram(name: "wmemset", scope: !360, file: !360, line: 271, type: !557, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!557 = !DISubroutineType(types: !558)
!558 = !{!174, !174, !175, !125}
!559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !560, line: 202)
!560 = !DISubprogram(name: "wprintf", scope: !360, file: !360, line: 587, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!561 = !DISubroutineType(types: !562)
!562 = !{!82, !220, null}
!563 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !564, line: 203)
!564 = !DISubprogram(name: "wscanf", scope: !360, file: !360, line: 628, type: !561, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!565 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !566, line: 204)
!566 = !DISubprogram(name: "wcschr", scope: !360, file: !360, line: 164, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!567 = !DISubroutineType(types: !568)
!568 = !{!174, !221, !175}
!569 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !570, line: 205)
!570 = !DISubprogram(name: "wcspbrk", scope: !360, file: !360, line: 201, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!571 = !DISubroutineType(types: !572)
!572 = !{!174, !221, !221}
!573 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !574, line: 206)
!574 = !DISubprogram(name: "wcsrchr", scope: !360, file: !360, line: 174, type: !567, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!575 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !576, line: 207)
!576 = !DISubprogram(name: "wcsstr", scope: !360, file: !360, line: 212, type: !571, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!577 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !578, line: 208)
!578 = !DISubprogram(name: "wmemchr", scope: !360, file: !360, line: 253, type: !579, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!579 = !DISubroutineType(types: !580)
!580 = !{!174, !221, !175, !125}
!581 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !582, line: 248)
!582 = !DISubprogram(name: "wcstold", scope: !360, file: !360, line: 384, type: !583, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!583 = !DISubroutineType(types: !584)
!584 = !{!267, !220, !521}
!585 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !586, line: 257)
!586 = !DISubprogram(name: "wcstoll", scope: !360, file: !360, line: 441, type: !587, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!587 = !DISubroutineType(types: !588)
!588 = !{!233, !220, !521, !82}
!589 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !590, line: 258)
!590 = !DISubprogram(name: "wcstoull", scope: !360, file: !360, line: 448, type: !591, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!591 = !DISubroutineType(types: !592)
!592 = !{!257, !220, !521, !82}
!593 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 264)
!594 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 265)
!595 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 266)
!596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !524, line: 280)
!597 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !452, line: 283)
!598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !458, line: 286)
!599 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !466, line: 289)
!600 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !582, line: 293)
!601 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !586, line: 294)
!602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !590, line: 295)
!603 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !604, line: 48)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !9, line: 235, baseType: !605)
!605 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!606 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !607, line: 49)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !9, line: 216, baseType: !608)
!608 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!609 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !610, line: 50)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !9, line: 178, baseType: !82)
!611 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !612, line: 51)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !9, line: 107, baseType: !91)
!613 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !614, line: 53)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !9, line: 245, baseType: !604)
!615 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !616, line: 54)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !9, line: 228, baseType: !607)
!617 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !618, line: 55)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !9, line: 197, baseType: !610)
!619 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !620, line: 56)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !9, line: 123, baseType: !612)
!621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !622, line: 58)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !9, line: 243, baseType: !604)
!623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !624, line: 59)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !9, line: 226, baseType: !607)
!625 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !626, line: 60)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !9, line: 195, baseType: !610)
!627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !628, line: 61)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !9, line: 121, baseType: !612)
!629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !630, line: 63)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !9, line: 276, baseType: !91)
!631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !632, line: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !9, line: 263, baseType: !612)
!633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !62, line: 66)
!634 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !28, line: 67)
!635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !8, line: 68)
!636 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !637, line: 69)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !9, line: 109, baseType: !127)
!638 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !639, line: 71)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !9, line: 246, baseType: !62)
!640 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !641, line: 72)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !9, line: 229, baseType: !28)
!642 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !643, line: 73)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !9, line: 198, baseType: !8)
!644 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !645, line: 74)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !9, line: 124, baseType: !637)
!646 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !647, line: 76)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !9, line: 244, baseType: !62)
!648 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !649, line: 77)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !9, line: 227, baseType: !28)
!650 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !651, line: 78)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !9, line: 196, baseType: !8)
!652 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !653, line: 79)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !9, line: 122, baseType: !637)
!654 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !655, line: 81)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !9, line: 277, baseType: !127)
!656 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !657, line: 82)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !9, line: 270, baseType: !637)
!658 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !659, line: 44)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !75, file: !76, line: 231, baseType: !127)
!660 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !661, line: 45)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !75, file: !76, line: 232, baseType: !91)
!662 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !663, line: 53)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !664, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!664 = !DIFile(filename: "/usr/include/locale.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !666, line: 54)
!666 = !DISubprogram(name: "setlocale", scope: !664, file: !664, line: 122, type: !667, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!667 = !DISubroutineType(types: !668)
!668 = !{!152, !82, !109}
!669 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !670, line: 55)
!670 = !DISubprogram(name: "localeconv", scope: !664, file: !664, line: 125, type: !671, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!671 = !DISubroutineType(types: !672)
!672 = !{!673}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!674 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !675, line: 64)
!675 = !DISubprogram(name: "isalnum", scope: !676, file: !676, line: 108, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!676 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!677 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !678, line: 65)
!678 = !DISubprogram(name: "isalpha", scope: !676, file: !676, line: 109, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !680, line: 66)
!680 = !DISubprogram(name: "iscntrl", scope: !676, file: !676, line: 110, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!681 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !682, line: 67)
!682 = !DISubprogram(name: "isdigit", scope: !676, file: !676, line: 111, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !684, line: 68)
!684 = !DISubprogram(name: "isgraph", scope: !676, file: !676, line: 113, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !686, line: 69)
!686 = !DISubprogram(name: "islower", scope: !676, file: !676, line: 112, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !688, line: 70)
!688 = !DISubprogram(name: "isprint", scope: !676, file: !676, line: 114, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!689 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !690, line: 71)
!690 = !DISubprogram(name: "ispunct", scope: !676, file: !676, line: 115, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !692, line: 72)
!692 = !DISubprogram(name: "isspace", scope: !676, file: !676, line: 116, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!693 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !694, line: 73)
!694 = !DISubprogram(name: "isupper", scope: !676, file: !676, line: 117, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !696, line: 74)
!696 = !DISubprogram(name: "isxdigit", scope: !676, file: !676, line: 118, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !698, line: 75)
!698 = !DISubprogram(name: "tolower", scope: !676, file: !676, line: 122, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !700, line: 76)
!700 = !DISubprogram(name: "toupper", scope: !676, file: !676, line: 125, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!701 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !702, line: 87)
!702 = !DISubprogram(name: "isblank", scope: !676, file: !676, line: 130, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!703 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !704, line: 98)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !705, line: 7, baseType: !370)
!705 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!706 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !707, line: 99)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !708, line: 78, baseType: !709)
!708 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !710, line: 30, baseType: !711)
!710 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !710, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!712 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !713, line: 101)
!713 = !DISubprogram(name: "clearerr", scope: !708, file: !708, line: 757, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !716}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!717 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !718, line: 102)
!718 = !DISubprogram(name: "fclose", scope: !708, file: !708, line: 199, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!719 = !DISubroutineType(types: !720)
!720 = !{!82, !716}
!721 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !722, line: 103)
!722 = !DISubprogram(name: "feof", scope: !708, file: !708, line: 759, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!723 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !724, line: 104)
!724 = !DISubprogram(name: "ferror", scope: !708, file: !708, line: 761, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!725 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !726, line: 105)
!726 = !DISubprogram(name: "fflush", scope: !708, file: !708, line: 204, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!727 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !728, line: 106)
!728 = !DISubprogram(name: "fgetc", scope: !708, file: !708, line: 477, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!729 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !730, line: 107)
!730 = !DISubprogram(name: "fgetpos", scope: !708, file: !708, line: 731, type: !731, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!731 = !DISubroutineType(types: !732)
!732 = !{!82, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !716)
!734 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !737, line: 108)
!737 = !DISubprogram(name: "fgets", scope: !708, file: !708, line: 564, type: !738, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !219, !82, !733}
!740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !741, line: 109)
!741 = !DISubprogram(name: "fopen", scope: !708, file: !708, line: 232, type: !742, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!742 = !DISubroutineType(types: !743)
!743 = !{!716, !176, !176}
!744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !745, line: 110)
!745 = !DISubprogram(name: "fprintf", scope: !708, file: !708, line: 312, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!746 = !DISubroutineType(types: !747)
!747 = !{!82, !733, !176, null}
!748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !749, line: 111)
!749 = !DISubprogram(name: "fputc", scope: !708, file: !708, line: 517, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!750 = !DISubroutineType(types: !751)
!751 = !{!82, !82, !716}
!752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !753, line: 112)
!753 = !DISubprogram(name: "fputs", scope: !708, file: !708, line: 626, type: !754, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!754 = !DISubroutineType(types: !755)
!755 = !{!82, !176, !733}
!756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !757, line: 113)
!757 = !DISubprogram(name: "fread", scope: !708, file: !708, line: 646, type: !758, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!758 = !DISubroutineType(types: !759)
!759 = !{!125, !760, !125, !125, !733}
!760 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!761 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !762, line: 114)
!762 = !DISubprogram(name: "freopen", scope: !708, file: !708, line: 238, type: !763, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!763 = !DISubroutineType(types: !764)
!764 = !{!716, !176, !176, !733}
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !766, line: 115)
!766 = !DISubprogram(name: "fscanf", scope: !708, file: !708, line: 377, type: !746, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!767 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !768, line: 116)
!768 = !DISubprogram(name: "fseek", scope: !708, file: !708, line: 684, type: !769, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!769 = !DISubroutineType(types: !770)
!770 = !{!82, !716, !91, !82}
!771 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !772, line: 117)
!772 = !DISubprogram(name: "fsetpos", scope: !708, file: !708, line: 736, type: !773, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!773 = !DISubroutineType(types: !774)
!774 = !{!82, !716, !775}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!777 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !778, line: 118)
!778 = !DISubprogram(name: "ftell", scope: !708, file: !708, line: 689, type: !779, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!779 = !DISubroutineType(types: !780)
!780 = !{!91, !716}
!781 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !782, line: 119)
!782 = !DISubprogram(name: "fwrite", scope: !708, file: !708, line: 652, type: !783, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!783 = !DISubroutineType(types: !784)
!784 = !{!125, !785, !125, !125, !733}
!785 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !787, line: 120)
!787 = !DISubprogram(name: "getc", scope: !708, file: !708, line: 478, type: !719, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!788 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !789, line: 121)
!789 = !DISubprogram(name: "getchar", scope: !708, file: !708, line: 484, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!790 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !791, line: 124)
!791 = !DISubprogram(name: "gets", scope: !708, file: !708, line: 577, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!792 = !DISubroutineType(types: !793)
!793 = !{!152, !152}
!794 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !795, line: 126)
!795 = !DISubprogram(name: "perror", scope: !708, file: !708, line: 775, type: !796, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !109}
!798 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !799, line: 127)
!799 = !DISubprogram(name: "printf", scope: !708, file: !708, line: 318, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!800 = !DISubroutineType(types: !801)
!801 = !{!82, !176, null}
!802 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !803, line: 128)
!803 = !DISubprogram(name: "putc", scope: !708, file: !708, line: 518, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!804 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !805, line: 129)
!805 = !DISubprogram(name: "putchar", scope: !708, file: !708, line: 524, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!806 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !807, line: 130)
!807 = !DISubprogram(name: "puts", scope: !708, file: !708, line: 632, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!808 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !809, line: 131)
!809 = !DISubprogram(name: "remove", scope: !708, file: !708, line: 144, type: !114, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!810 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !811, line: 132)
!811 = !DISubprogram(name: "rename", scope: !708, file: !708, line: 146, type: !812, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!812 = !DISubroutineType(types: !813)
!813 = !{!82, !109, !109}
!814 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !815, line: 133)
!815 = !DISubprogram(name: "rewind", scope: !708, file: !708, line: 694, type: !714, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!816 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !817, line: 134)
!817 = !DISubprogram(name: "scanf", scope: !708, file: !708, line: 383, type: !800, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!818 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !819, line: 135)
!819 = !DISubprogram(name: "setbuf", scope: !708, file: !708, line: 290, type: !820, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!820 = !DISubroutineType(types: !821)
!821 = !{null, !733, !219}
!822 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !823, line: 136)
!823 = !DISubprogram(name: "setvbuf", scope: !708, file: !708, line: 294, type: !824, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!824 = !DISubroutineType(types: !825)
!825 = !{!82, !733, !219, !82, !125}
!826 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !827, line: 137)
!827 = !DISubprogram(name: "sprintf", scope: !708, file: !708, line: 320, type: !828, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!828 = !DISubroutineType(types: !829)
!829 = !{!82, !219, !176, null}
!830 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !831, line: 138)
!831 = !DISubprogram(name: "sscanf", scope: !708, file: !708, line: 385, type: !832, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!832 = !DISubroutineType(types: !833)
!833 = !{!82, !176, !176, null}
!834 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !835, line: 139)
!835 = !DISubprogram(name: "tmpfile", scope: !708, file: !708, line: 159, type: !836, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!836 = !DISubroutineType(types: !837)
!837 = !{!716}
!838 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !839, line: 141)
!839 = !DISubprogram(name: "tmpnam", scope: !708, file: !708, line: 173, type: !792, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!840 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !841, line: 143)
!841 = !DISubprogram(name: "ungetc", scope: !708, file: !708, line: 639, type: !750, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!842 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !843, line: 144)
!843 = !DISubprogram(name: "vfprintf", scope: !708, file: !708, line: 327, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!844 = !DISubroutineType(types: !845)
!845 = !{!82, !733, !176, !444}
!846 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !847, line: 145)
!847 = !DISubprogram(name: "vprintf", scope: !708, file: !708, line: 333, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!848 = !DISubroutineType(types: !849)
!849 = !{!82, !176, !444}
!850 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !851, line: 146)
!851 = !DISubprogram(name: "vsprintf", scope: !708, file: !708, line: 335, type: !852, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!852 = !DISubroutineType(types: !853)
!853 = !{!82, !219, !176, !444}
!854 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !855, line: 175)
!855 = !DISubprogram(name: "snprintf", scope: !708, file: !708, line: 340, type: !856, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!856 = !DISubroutineType(types: !857)
!857 = !{!82, !219, !125, !176, null}
!858 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !859, line: 176)
!859 = !DISubprogram(name: "vfscanf", scope: !708, file: !708, line: 420, type: !844, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!860 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !861, line: 177)
!861 = !DISubprogram(name: "vscanf", scope: !708, file: !708, line: 428, type: !848, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!862 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !863, line: 178)
!863 = !DISubprogram(name: "vsnprintf", scope: !708, file: !708, line: 344, type: !864, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!864 = !DISubroutineType(types: !865)
!865 = !{!82, !219, !125, !176, !444}
!866 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !228, entity: !867, line: 179)
!867 = !DISubprogram(name: "vsscanf", scope: !708, file: !708, line: 432, type: !868, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!868 = !DISubroutineType(types: !869)
!869 = !{!82, !176, !176, !444}
!870 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !855, line: 185)
!871 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !859, line: 186)
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !861, line: 187)
!873 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !863, line: 188)
!874 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !867, line: 189)
!875 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !876, line: 83)
!876 = !DISubprogram(name: "acos", scope: !877, file: !877, line: 53, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!877 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/mathcalls.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!878 = !DISubroutineType(types: !879)
!879 = !{!108, !108}
!880 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !881, line: 102)
!881 = !DISubprogram(name: "asin", scope: !877, file: !877, line: 55, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!882 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !883, line: 121)
!883 = !DISubprogram(name: "atan", scope: !877, file: !877, line: 57, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!884 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !885, line: 140)
!885 = !DISubprogram(name: "atan2", scope: !877, file: !877, line: 59, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!886 = !DISubroutineType(types: !887)
!887 = !{!108, !108, !108}
!888 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !889, line: 161)
!889 = !DISubprogram(name: "ceil", scope: !877, file: !877, line: 159, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !891, line: 180)
!891 = !DISubprogram(name: "cos", scope: !877, file: !877, line: 62, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!892 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !893, line: 199)
!893 = !DISubprogram(name: "cosh", scope: !877, file: !877, line: 71, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!894 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !895, line: 218)
!895 = !DISubprogram(name: "exp", scope: !877, file: !877, line: 95, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!896 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !897, line: 237)
!897 = !DISubprogram(name: "fabs", scope: !877, file: !877, line: 162, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!898 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !899, line: 256)
!899 = !DISubprogram(name: "floor", scope: !877, file: !877, line: 165, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!900 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !901, line: 275)
!901 = !DISubprogram(name: "fmod", scope: !877, file: !877, line: 168, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!902 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !903, line: 296)
!903 = !DISubprogram(name: "frexp", scope: !877, file: !877, line: 98, type: !904, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!904 = !DISubroutineType(types: !905)
!905 = !{!108, !108, !906}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !908, line: 315)
!908 = !DISubprogram(name: "ldexp", scope: !877, file: !877, line: 101, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!909 = !DISubroutineType(types: !910)
!910 = !{!108, !108, !82}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !912, line: 334)
!912 = !DISubprogram(name: "log", scope: !877, file: !877, line: 104, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!913 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !914, line: 353)
!914 = !DISubprogram(name: "log10", scope: !877, file: !877, line: 107, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !916, line: 372)
!916 = !DISubprogram(name: "modf", scope: !877, file: !877, line: 110, type: !917, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!917 = !DISubroutineType(types: !918)
!918 = !{!108, !108, !919}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !921, line: 384)
!921 = !DISubprogram(name: "pow", scope: !877, file: !877, line: 140, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!922 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !923, line: 421)
!923 = !DISubprogram(name: "sin", scope: !877, file: !877, line: 64, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!924 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !925, line: 440)
!925 = !DISubprogram(name: "sinh", scope: !877, file: !877, line: 73, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!926 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !927, line: 459)
!927 = !DISubprogram(name: "sqrt", scope: !877, file: !877, line: 143, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!928 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !929, line: 478)
!929 = !DISubprogram(name: "tan", scope: !877, file: !877, line: 66, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !931, line: 497)
!931 = !DISubprogram(name: "tanh", scope: !877, file: !877, line: 75, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !933, line: 1080)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_t", file: !934, line: 150, baseType: !108)
!934 = !DIFile(filename: "/usr/include/math.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !936, line: 1081)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "float_t", file: !934, line: 149, baseType: !262)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !938, line: 1084)
!938 = !DISubprogram(name: "acosh", scope: !877, file: !877, line: 85, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !940, line: 1085)
!940 = !DISubprogram(name: "acoshf", scope: !877, file: !877, line: 85, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!941 = !DISubroutineType(types: !942)
!942 = !{!262, !262}
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !944, line: 1086)
!944 = !DISubprogram(name: "acoshl", scope: !877, file: !877, line: 85, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!945 = !DISubroutineType(types: !946)
!946 = !{!267, !267}
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !948, line: 1088)
!948 = !DISubprogram(name: "asinh", scope: !877, file: !877, line: 87, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !950, line: 1089)
!950 = !DISubprogram(name: "asinhf", scope: !877, file: !877, line: 87, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!951 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !952, line: 1090)
!952 = !DISubprogram(name: "asinhl", scope: !877, file: !877, line: 87, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!953 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !954, line: 1092)
!954 = !DISubprogram(name: "atanh", scope: !877, file: !877, line: 89, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !956, line: 1093)
!956 = !DISubprogram(name: "atanhf", scope: !877, file: !877, line: 89, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !958, line: 1094)
!958 = !DISubprogram(name: "atanhl", scope: !877, file: !877, line: 89, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !960, line: 1096)
!960 = !DISubprogram(name: "cbrt", scope: !877, file: !877, line: 152, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !962, line: 1097)
!962 = !DISubprogram(name: "cbrtf", scope: !877, file: !877, line: 152, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !964, line: 1098)
!964 = !DISubprogram(name: "cbrtl", scope: !877, file: !877, line: 152, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !966, line: 1100)
!966 = !DISubprogram(name: "copysign", scope: !877, file: !877, line: 196, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !968, line: 1101)
!968 = !DISubprogram(name: "copysignf", scope: !877, file: !877, line: 196, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!969 = !DISubroutineType(types: !970)
!970 = !{!262, !262, !262}
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !972, line: 1102)
!972 = !DISubprogram(name: "copysignl", scope: !877, file: !877, line: 196, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!973 = !DISubroutineType(types: !974)
!974 = !{!267, !267, !267}
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !976, line: 1104)
!976 = !DISubprogram(name: "erf", scope: !877, file: !877, line: 228, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !978, line: 1105)
!978 = !DISubprogram(name: "erff", scope: !877, file: !877, line: 228, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!979 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !980, line: 1106)
!980 = !DISubprogram(name: "erfl", scope: !877, file: !877, line: 228, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!981 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !982, line: 1108)
!982 = !DISubprogram(name: "erfc", scope: !877, file: !877, line: 229, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!983 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !984, line: 1109)
!984 = !DISubprogram(name: "erfcf", scope: !877, file: !877, line: 229, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!985 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !986, line: 1110)
!986 = !DISubprogram(name: "erfcl", scope: !877, file: !877, line: 229, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!987 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !988, line: 1112)
!988 = !DISubprogram(name: "exp2", scope: !877, file: !877, line: 130, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!989 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !990, line: 1113)
!990 = !DISubprogram(name: "exp2f", scope: !877, file: !877, line: 130, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!991 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !992, line: 1114)
!992 = !DISubprogram(name: "exp2l", scope: !877, file: !877, line: 130, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!993 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !994, line: 1116)
!994 = !DISubprogram(name: "expm1", scope: !877, file: !877, line: 119, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!995 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !996, line: 1117)
!996 = !DISubprogram(name: "expm1f", scope: !877, file: !877, line: 119, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!997 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !998, line: 1118)
!998 = !DISubprogram(name: "expm1l", scope: !877, file: !877, line: 119, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!999 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1000, line: 1120)
!1000 = !DISubprogram(name: "fdim", scope: !877, file: !877, line: 326, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1001 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1002, line: 1121)
!1002 = !DISubprogram(name: "fdimf", scope: !877, file: !877, line: 326, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1003 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1004, line: 1122)
!1004 = !DISubprogram(name: "fdiml", scope: !877, file: !877, line: 326, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1005 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1006, line: 1124)
!1006 = !DISubprogram(name: "fma", scope: !877, file: !877, line: 335, type: !1007, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!108, !108, !108, !108}
!1009 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1010, line: 1125)
!1010 = !DISubprogram(name: "fmaf", scope: !877, file: !877, line: 335, type: !1011, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!262, !262, !262, !262}
!1013 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1014, line: 1126)
!1014 = !DISubprogram(name: "fmal", scope: !877, file: !877, line: 335, type: !1015, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!267, !267, !267, !267}
!1017 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1018, line: 1128)
!1018 = !DISubprogram(name: "fmax", scope: !877, file: !877, line: 329, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1019 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1020, line: 1129)
!1020 = !DISubprogram(name: "fmaxf", scope: !877, file: !877, line: 329, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1021 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1022, line: 1130)
!1022 = !DISubprogram(name: "fmaxl", scope: !877, file: !877, line: 329, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1023 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1024, line: 1132)
!1024 = !DISubprogram(name: "fmin", scope: !877, file: !877, line: 332, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1025 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1026, line: 1133)
!1026 = !DISubprogram(name: "fminf", scope: !877, file: !877, line: 332, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1027 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1028, line: 1134)
!1028 = !DISubprogram(name: "fminl", scope: !877, file: !877, line: 332, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1029 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1030, line: 1136)
!1030 = !DISubprogram(name: "hypot", scope: !877, file: !877, line: 147, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1031 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1032, line: 1137)
!1032 = !DISubprogram(name: "hypotf", scope: !877, file: !877, line: 147, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1033 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1034, line: 1138)
!1034 = !DISubprogram(name: "hypotl", scope: !877, file: !877, line: 147, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1035 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1036, line: 1140)
!1036 = !DISubprogram(name: "ilogb", scope: !877, file: !877, line: 280, type: !1037, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!82, !108}
!1039 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1040, line: 1141)
!1040 = !DISubprogram(name: "ilogbf", scope: !877, file: !877, line: 280, type: !1041, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!82, !262}
!1043 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1044, line: 1142)
!1044 = !DISubprogram(name: "ilogbl", scope: !877, file: !877, line: 280, type: !1045, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!82, !267}
!1047 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1048, line: 1144)
!1048 = !DISubprogram(name: "lgamma", scope: !877, file: !877, line: 230, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1049 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1050, line: 1145)
!1050 = !DISubprogram(name: "lgammaf", scope: !877, file: !877, line: 230, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1051 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1052, line: 1146)
!1052 = !DISubprogram(name: "lgammal", scope: !877, file: !877, line: 230, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1053 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1054, line: 1149)
!1054 = !DISubprogram(name: "llrint", scope: !877, file: !877, line: 316, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!233, !108}
!1057 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1058, line: 1150)
!1058 = !DISubprogram(name: "llrintf", scope: !877, file: !877, line: 316, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!233, !262}
!1061 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1062, line: 1151)
!1062 = !DISubprogram(name: "llrintl", scope: !877, file: !877, line: 316, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!233, !267}
!1065 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1066, line: 1153)
!1066 = !DISubprogram(name: "llround", scope: !877, file: !877, line: 322, type: !1055, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1067 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1068, line: 1154)
!1068 = !DISubprogram(name: "llroundf", scope: !877, file: !877, line: 322, type: !1059, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1069 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1070, line: 1155)
!1070 = !DISubprogram(name: "llroundl", scope: !877, file: !877, line: 322, type: !1063, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1071 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1072, line: 1158)
!1072 = !DISubprogram(name: "log1p", scope: !877, file: !877, line: 122, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1073 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1074, line: 1159)
!1074 = !DISubprogram(name: "log1pf", scope: !877, file: !877, line: 122, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1075 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1076, line: 1160)
!1076 = !DISubprogram(name: "log1pl", scope: !877, file: !877, line: 122, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1077 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1078, line: 1162)
!1078 = !DISubprogram(name: "log2", scope: !877, file: !877, line: 133, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1079 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1080, line: 1163)
!1080 = !DISubprogram(name: "log2f", scope: !877, file: !877, line: 133, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1081 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1082, line: 1164)
!1082 = !DISubprogram(name: "log2l", scope: !877, file: !877, line: 133, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1083 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1084, line: 1166)
!1084 = !DISubprogram(name: "logb", scope: !877, file: !877, line: 125, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1085 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1086, line: 1167)
!1086 = !DISubprogram(name: "logbf", scope: !877, file: !877, line: 125, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1087 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1088, line: 1168)
!1088 = !DISubprogram(name: "logbl", scope: !877, file: !877, line: 125, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1089 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1090, line: 1170)
!1090 = !DISubprogram(name: "lrint", scope: !877, file: !877, line: 314, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!91, !108}
!1093 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1094, line: 1171)
!1094 = !DISubprogram(name: "lrintf", scope: !877, file: !877, line: 314, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!91, !262}
!1097 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1098, line: 1172)
!1098 = !DISubprogram(name: "lrintl", scope: !877, file: !877, line: 314, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!91, !267}
!1101 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1102, line: 1174)
!1102 = !DISubprogram(name: "lround", scope: !877, file: !877, line: 320, type: !1091, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1103 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1104, line: 1175)
!1104 = !DISubprogram(name: "lroundf", scope: !877, file: !877, line: 320, type: !1095, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1105 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1106, line: 1176)
!1106 = !DISubprogram(name: "lroundl", scope: !877, file: !877, line: 320, type: !1099, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1107 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1108, line: 1178)
!1108 = !DISubprogram(name: "nan", scope: !877, file: !877, line: 201, type: !106, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1109 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1110, line: 1179)
!1110 = !DISubprogram(name: "nanf", scope: !877, file: !877, line: 201, type: !1111, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!262, !109}
!1113 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1114, line: 1180)
!1114 = !DISubprogram(name: "nanl", scope: !877, file: !877, line: 201, type: !1115, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!267, !109}
!1117 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1118, line: 1182)
!1118 = !DISubprogram(name: "nearbyint", scope: !877, file: !877, line: 294, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1119 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1120, line: 1183)
!1120 = !DISubprogram(name: "nearbyintf", scope: !877, file: !877, line: 294, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1121 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1122, line: 1184)
!1122 = !DISubprogram(name: "nearbyintl", scope: !877, file: !877, line: 294, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1123 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1124, line: 1186)
!1124 = !DISubprogram(name: "nextafter", scope: !877, file: !877, line: 259, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1125 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1126, line: 1187)
!1126 = !DISubprogram(name: "nextafterf", scope: !877, file: !877, line: 259, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1127 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1128, line: 1188)
!1128 = !DISubprogram(name: "nextafterl", scope: !877, file: !877, line: 259, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1129 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1130, line: 1190)
!1130 = !DISubprogram(name: "nexttoward", scope: !877, file: !877, line: 261, type: !1131, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!108, !108, !267}
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1134, line: 1191)
!1134 = !DISubprogram(name: "nexttowardf", scope: !877, file: !877, line: 261, type: !1135, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!262, !262, !267}
!1137 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1138, line: 1192)
!1138 = !DISubprogram(name: "nexttowardl", scope: !877, file: !877, line: 261, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1139 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1140, line: 1194)
!1140 = !DISubprogram(name: "remainder", scope: !877, file: !877, line: 272, type: !886, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1142, line: 1195)
!1142 = !DISubprogram(name: "remainderf", scope: !877, file: !877, line: 272, type: !969, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1143 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1144, line: 1196)
!1144 = !DISubprogram(name: "remainderl", scope: !877, file: !877, line: 272, type: !973, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1145 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1146, line: 1198)
!1146 = !DISubprogram(name: "remquo", scope: !877, file: !877, line: 307, type: !1147, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!108, !108, !108, !906}
!1149 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1150, line: 1199)
!1150 = !DISubprogram(name: "remquof", scope: !877, file: !877, line: 307, type: !1151, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!262, !262, !262, !906}
!1153 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1154, line: 1200)
!1154 = !DISubprogram(name: "remquol", scope: !877, file: !877, line: 307, type: !1155, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!267, !267, !267, !906}
!1157 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1158, line: 1202)
!1158 = !DISubprogram(name: "rint", scope: !877, file: !877, line: 256, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1159 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1160, line: 1203)
!1160 = !DISubprogram(name: "rintf", scope: !877, file: !877, line: 256, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1161 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1162, line: 1204)
!1162 = !DISubprogram(name: "rintl", scope: !877, file: !877, line: 256, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1163 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1164, line: 1206)
!1164 = !DISubprogram(name: "round", scope: !877, file: !877, line: 298, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1165 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1166, line: 1207)
!1166 = !DISubprogram(name: "roundf", scope: !877, file: !877, line: 298, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1167 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1168, line: 1208)
!1168 = !DISubprogram(name: "roundl", scope: !877, file: !877, line: 298, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1169 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1170, line: 1210)
!1170 = !DISubprogram(name: "scalbln", scope: !877, file: !877, line: 290, type: !1171, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!108, !108, !91}
!1173 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1174, line: 1211)
!1174 = !DISubprogram(name: "scalblnf", scope: !877, file: !877, line: 290, type: !1175, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!262, !262, !91}
!1177 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1178, line: 1212)
!1178 = !DISubprogram(name: "scalblnl", scope: !877, file: !877, line: 290, type: !1179, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!267, !267, !91}
!1181 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1182, line: 1214)
!1182 = !DISubprogram(name: "scalbn", scope: !877, file: !877, line: 276, type: !909, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1183 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1184, line: 1215)
!1184 = !DISubprogram(name: "scalbnf", scope: !877, file: !877, line: 276, type: !1185, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!262, !262, !82}
!1187 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1188, line: 1216)
!1188 = !DISubprogram(name: "scalbnl", scope: !877, file: !877, line: 276, type: !1189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!267, !267, !82}
!1191 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1192, line: 1218)
!1192 = !DISubprogram(name: "tgamma", scope: !877, file: !877, line: 235, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1193 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1194, line: 1219)
!1194 = !DISubprogram(name: "tgammaf", scope: !877, file: !877, line: 235, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1195 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1196, line: 1220)
!1196 = !DISubprogram(name: "tgammal", scope: !877, file: !877, line: 235, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1197 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1198, line: 1222)
!1198 = !DISubprogram(name: "trunc", scope: !877, file: !877, line: 302, type: !878, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1200, line: 1223)
!1200 = !DISubprogram(name: "truncf", scope: !877, file: !877, line: 302, type: !941, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1201 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1202, line: 1224)
!1202 = !DISubprogram(name: "truncl", scope: !877, file: !877, line: 302, type: !945, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 58)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "fenv_t", file: !1205, line: 94, baseType: !1206)
!1205 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1205, line: 75, flags: DIFlagFwdDecl, identifier: "_ZTS6fenv_t")
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 59)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "fexcept_t", file: !1205, line: 68, baseType: !29)
!1209 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 62)
!1210 = !DISubprogram(name: "feclearexcept", scope: !1211, file: !1211, line: 71, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1211 = !DIFile(filename: "/usr/include/fenv.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1212 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 63)
!1213 = !DISubprogram(name: "fegetexceptflag", scope: !1211, file: !1211, line: 75, type: !1214, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!82, !1216, !82}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 64)
!1218 = !DISubprogram(name: "feraiseexcept", scope: !1211, file: !1211, line: 78, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 65)
!1220 = !DISubprogram(name: "fesetexceptflag", scope: !1211, file: !1211, line: 88, type: !1221, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!82, !1223, !82}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1225 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 66)
!1226 = !DISubprogram(name: "fetestexcept", scope: !1211, file: !1211, line: 92, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1227 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 68)
!1228 = !DISubprogram(name: "fegetround", scope: !1211, file: !1211, line: 104, type: !189, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 69)
!1230 = !DISubprogram(name: "fesetround", scope: !1211, file: !1211, line: 107, type: !80, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1231 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 71)
!1232 = !DISubprogram(name: "fegetenv", scope: !1211, file: !1211, line: 114, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!82, !1235}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1236 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 72)
!1237 = !DISubprogram(name: "feholdexcept", scope: !1211, file: !1211, line: 119, type: !1233, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1238 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 73)
!1239 = !DISubprogram(name: "fesetenv", scope: !1211, file: !1211, line: 123, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!82, !1242}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1204)
!1244 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 74)
!1245 = !DISubprogram(name: "feupdateenv", scope: !1211, file: !1211, line: 128, type: !1240, isLocal: false, isDefinition: false, flags: DIFlagPrototyped, isOptimized: false)
!1246 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1204, line: 61)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1208, line: 62)
!1248 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1210, line: 65)
!1249 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1213, line: 66)
!1250 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1218, line: 67)
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1220, line: 68)
!1252 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1226, line: 69)
!1253 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1228, line: 71)
!1254 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1230, line: 72)
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1232, line: 74)
!1256 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1237, line: 75)
!1257 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1239, line: 76)
!1258 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !75, entity: !1245, line: 77)
!1259 = !{i32 2, !"Dwarf Version", i32 4}
!1260 = !{i32 2, !"Debug Info Version", i32 3}
!1261 = distinct !DISubprogram(name: "__remill_basic_block", scope: !2, file: !2, line: 52, type: !1262, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1267, !1950, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Memory", file: !1266, line: 36, flags: DIFlagFwdDecl, identifier: "_ZTS6Memory")
!1266 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Types.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1267 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !27, line: 742, size: 27008, align: 128, elements: !1269, identifier: "_ZTS5State")
!1269 = !{!1270, !1282, !1491, !1511, !1541, !1566, !1595, !1632, !1642, !1703, !1728, !1752, !1932}
!1270 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1268, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArchState", file: !1272, line: 21, size: 128, elements: !1273, identifier: "_ZTS9ArchState")
!1272 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/State.h", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!1273 = !{!1274, !1275, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call", scope: !1271, file: !1272, line: 23, baseType: !4, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1271, file: !1272, line: 25, baseType: !8, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, scope: !1271, file: !1272, line: 31, baseType: !1277, size: 64, offset: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1271, file: !1272, line: 31, size: 64, elements: !1278, identifier: "_ZTSN9ArchStateUt_E")
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_load", scope: !1277, file: !1272, line: 32, baseType: !637, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "addr_to_store", scope: !1277, file: !1272, line: 33, baseType: !637, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "hyper_call_vector", scope: !1277, file: !1272, line: 34, baseType: !8, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1268, file: !27, line: 747, baseType: !1283, size: 16384, offset: 128)
!1283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1284, size: 16384, elements: !1369)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "VectorReg", file: !27, line: 636, size: 512, align: 128, elements: !1285, identifier: "_ZTS9VectorReg")
!1285 = !{!1286, !1361, !1426}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1284, file: !27, line: 637, baseType: !1287, size: 128, align: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec128_t", file: !1266, line: 317, size: 128, elements: !1288, identifier: "_ZTS8vec128_t")
!1288 = !{!1289, !1298, !1305, !1312, !1317, !1324, !1329, !1334, !1339, !1344, !1349, !1354}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1287, file: !1266, line: 321, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v1_t", file: !1266, line: 205, size: 128, elements: !1291, identifier: "_ZTS11uint128v1_t")
!1291 = !{!1292}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1290, file: !1266, line: 205, baseType: !1293, size: 128)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 128, elements: !1296)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint128_t", file: !1266, line: 46, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned __int128", size: 128, encoding: DW_ATE_unsigned)
!1296 = !{!1297}
!1297 = !DISubrange(count: 1)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1287, file: !1266, line: 323, baseType: !1299, size: 128)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v16_t", file: !1266, line: 182, size: 128, elements: !1300, identifier: "_ZTS10uint8v16_t")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1299, file: !1266, line: 182, baseType: !1302, size: 128)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 128, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 16)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1287, file: !1266, line: 324, baseType: !1306, size: 128)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v8_t", file: !1266, line: 189, size: 128, elements: !1307, identifier: "_ZTS10uint16v8_t")
!1307 = !{!1308}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1306, file: !1266, line: 189, baseType: !1309, size: 128)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1310)
!1310 = !{!1311}
!1311 = !DISubrange(count: 8)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1287, file: !1266, line: 325, baseType: !1313, size: 128)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v4_t", file: !1266, line: 195, size: 128, elements: !1314, identifier: "_ZTS10uint32v4_t")
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1313, file: !1266, line: 195, baseType: !1316, size: 128)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 128, elements: !353)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1287, file: !1266, line: 326, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v2_t", file: !1266, line: 200, size: 128, elements: !1319, identifier: "_ZTS10uint64v2_t")
!1319 = !{!1320}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1318, file: !1266, line: 200, baseType: !1321, size: 128)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 128, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 2)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1287, file: !1266, line: 327, baseType: !1325, size: 128)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v4_t", file: !1266, line: 242, size: 128, elements: !1326, identifier: "_ZTS11float32v4_t")
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1325, file: !1266, line: 242, baseType: !1328, size: 128)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 128, elements: !353)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1287, file: !1266, line: 328, baseType: !1330, size: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v2_t", file: !1266, line: 247, size: 128, elements: !1331, identifier: "_ZTS11float64v2_t")
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1330, file: !1266, line: 247, baseType: !1333, size: 128)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 128, elements: !1322)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1287, file: !1266, line: 330, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v16_t", file: !1266, line: 213, size: 128, elements: !1336, identifier: "_ZTS9int8v16_t")
!1336 = !{!1337}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1335, file: !1266, line: 213, baseType: !1338, size: 128)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 128, elements: !1303)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1287, file: !1266, line: 331, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v8_t", file: !1266, line: 220, size: 128, elements: !1341, identifier: "_ZTS9int16v8_t")
!1341 = !{!1342}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1340, file: !1266, line: 220, baseType: !1343, size: 128)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 128, elements: !1310)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1287, file: !1266, line: 332, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v4_t", file: !1266, line: 226, size: 128, elements: !1346, identifier: "_ZTS9int32v4_t")
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1345, file: !1266, line: 226, baseType: !1348, size: 128)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 128, elements: !353)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1287, file: !1266, line: 333, baseType: !1350, size: 128)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v2_t", file: !1266, line: 231, size: 128, elements: !1351, identifier: "_ZTS9int64v2_t")
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1350, file: !1266, line: 231, baseType: !1353, size: 128)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 128, elements: !1322)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1287, file: !1266, line: 334, baseType: !1355, size: 128)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v1_t", file: !1266, line: 236, size: 128, elements: !1356, identifier: "_ZTS10int128v1_t")
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1355, file: !1266, line: 236, baseType: !1358, size: 128)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !1296)
!1359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int128_t", file: !1266, line: 47, baseType: !1360)
!1360 = !DIBasicType(name: "__int128", size: 128, encoding: DW_ATE_signed)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1284, file: !27, line: 638, baseType: !1362, size: 256, align: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec256_t", file: !1266, line: 340, size: 256, elements: !1363, identifier: "_ZTS8vec256_t")
!1363 = !{!1364, !1371, !1376, !1381, !1386, !1391, !1396, !1401, !1406, !1411, !1416, !1421}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1362, file: !1266, line: 341, baseType: !1365, size: 256)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v32_t", file: !1266, line: 183, size: 256, elements: !1366, identifier: "_ZTS10uint8v32_t")
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1365, file: !1266, line: 183, baseType: !1368, size: 256)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 256, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1362, file: !1266, line: 342, baseType: !1372, size: 256)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v16_t", file: !1266, line: 190, size: 256, elements: !1373, identifier: "_ZTS11uint16v16_t")
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1372, file: !1266, line: 190, baseType: !1375, size: 256)
!1375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !1303)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1362, file: !1266, line: 343, baseType: !1377, size: 256)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v8_t", file: !1266, line: 196, size: 256, elements: !1378, identifier: "_ZTS10uint32v8_t")
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1377, file: !1266, line: 196, baseType: !1380, size: 256)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 256, elements: !1310)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1362, file: !1266, line: 344, baseType: !1382, size: 256)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v4_t", file: !1266, line: 201, size: 256, elements: !1383, identifier: "_ZTS10uint64v4_t")
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1382, file: !1266, line: 201, baseType: !1385, size: 256)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !353)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1362, file: !1266, line: 345, baseType: !1387, size: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v2_t", file: !1266, line: 206, size: 256, elements: !1388, identifier: "_ZTS11uint128v2_t")
!1388 = !{!1389}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1387, file: !1266, line: 206, baseType: !1390, size: 256)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 256, elements: !1322)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1362, file: !1266, line: 346, baseType: !1392, size: 256)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v8_t", file: !1266, line: 243, size: 256, elements: !1393, identifier: "_ZTS11float32v8_t")
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1392, file: !1266, line: 243, baseType: !1395, size: 256)
!1395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 256, elements: !1310)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1362, file: !1266, line: 347, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v4_t", file: !1266, line: 248, size: 256, elements: !1398, identifier: "_ZTS11float64v4_t")
!1398 = !{!1399}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1397, file: !1266, line: 248, baseType: !1400, size: 256)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !353)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1362, file: !1266, line: 349, baseType: !1402, size: 256)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v32_t", file: !1266, line: 214, size: 256, elements: !1403, identifier: "_ZTS9int8v32_t")
!1403 = !{!1404}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1402, file: !1266, line: 214, baseType: !1405, size: 256)
!1405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 256, elements: !1369)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1362, file: !1266, line: 350, baseType: !1407, size: 256)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v16_t", file: !1266, line: 221, size: 256, elements: !1408, identifier: "_ZTS10int16v16_t")
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1407, file: !1266, line: 221, baseType: !1410, size: 256)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 256, elements: !1303)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1362, file: !1266, line: 351, baseType: !1412, size: 256)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v8_t", file: !1266, line: 227, size: 256, elements: !1413, identifier: "_ZTS9int32v8_t")
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1412, file: !1266, line: 227, baseType: !1415, size: 256)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !1310)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1362, file: !1266, line: 352, baseType: !1417, size: 256)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v4_t", file: !1266, line: 232, size: 256, elements: !1418, identifier: "_ZTS9int64v4_t")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1417, file: !1266, line: 232, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !353)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1362, file: !1266, line: 353, baseType: !1422, size: 256)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v2_t", file: !1266, line: 237, size: 256, elements: !1423, identifier: "_ZTS10int128v2_t")
!1423 = !{!1424}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1422, file: !1266, line: 237, baseType: !1425, size: 256)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 256, elements: !1322)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "zmm", scope: !1284, file: !27, line: 639, baseType: !1427, size: 512, align: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec512_t", file: !1266, line: 359, size: 512, elements: !1428, identifier: "_ZTS8vec512_t")
!1428 = !{!1429, !1436, !1441, !1446, !1451, !1456, !1461, !1466, !1471, !1476, !1481, !1486}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1427, file: !1266, line: 360, baseType: !1430, size: 512)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v64_t", file: !1266, line: 184, size: 512, elements: !1431, identifier: "_ZTS10uint8v64_t")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1430, file: !1266, line: 184, baseType: !1433, size: 512)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 512, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1427, file: !1266, line: 361, baseType: !1437, size: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v32_t", file: !1266, line: 191, size: 512, elements: !1438, identifier: "_ZTS11uint16v32_t")
!1438 = !{!1439}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1437, file: !1266, line: 191, baseType: !1440, size: 512)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !1369)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1427, file: !1266, line: 362, baseType: !1442, size: 512)
!1442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v16_t", file: !1266, line: 197, size: 512, elements: !1443, identifier: "_ZTS11uint32v16_t")
!1443 = !{!1444}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1442, file: !1266, line: 197, baseType: !1445, size: 512)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 512, elements: !1303)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1427, file: !1266, line: 363, baseType: !1447, size: 512)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v8_t", file: !1266, line: 202, size: 512, elements: !1448, identifier: "_ZTS10uint64v8_t")
!1448 = !{!1449}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1447, file: !1266, line: 202, baseType: !1450, size: 512)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 512, elements: !1310)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "dqwords", scope: !1427, file: !1266, line: 364, baseType: !1452, size: 512)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint128v4_t", file: !1266, line: 207, size: 512, elements: !1453, identifier: "_ZTS11uint128v4_t")
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1452, file: !1266, line: 207, baseType: !1455, size: 512)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1294, size: 512, elements: !353)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1427, file: !1266, line: 365, baseType: !1457, size: 512)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v16_t", file: !1266, line: 244, size: 512, elements: !1458, identifier: "_ZTS12float32v16_t")
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1457, file: !1266, line: 244, baseType: !1460, size: 512)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 512, elements: !1303)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1427, file: !1266, line: 366, baseType: !1462, size: 512)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v8_t", file: !1266, line: 249, size: 512, elements: !1463, identifier: "_ZTS11float64v8_t")
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1462, file: !1266, line: 249, baseType: !1465, size: 512)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 512, elements: !1310)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1427, file: !1266, line: 368, baseType: !1467, size: 512)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v64_t", file: !1266, line: 215, size: 512, elements: !1468, identifier: "_ZTS9int8v64_t")
!1468 = !{!1469}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1467, file: !1266, line: 215, baseType: !1470, size: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 512, elements: !1434)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1427, file: !1266, line: 369, baseType: !1472, size: 512)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v32_t", file: !1266, line: 222, size: 512, elements: !1473, identifier: "_ZTS10int16v32_t")
!1473 = !{!1474}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1472, file: !1266, line: 222, baseType: !1475, size: 512)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 512, elements: !1369)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1427, file: !1266, line: 370, baseType: !1477, size: 512)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v16_t", file: !1266, line: 228, size: 512, elements: !1478, identifier: "_ZTS10int32v16_t")
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1477, file: !1266, line: 228, baseType: !1480, size: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 512, elements: !1303)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1427, file: !1266, line: 371, baseType: !1482, size: 512)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v8_t", file: !1266, line: 233, size: 512, elements: !1483, identifier: "_ZTS9int64v8_t")
!1483 = !{!1484}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1482, file: !1266, line: 233, baseType: !1485, size: 512)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 512, elements: !1310)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "sdqwords", scope: !1427, file: !1266, line: 372, baseType: !1487, size: 512)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int128v4_t", file: !1266, line: 238, size: 512, elements: !1488, identifier: "_ZTS10int128v4_t")
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1487, file: !1266, line: 238, baseType: !1490, size: 512)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 512, elements: !353)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "aflag", scope: !1268, file: !27, line: 751, baseType: !1492, size: 128, align: 64, offset: 16512)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArithFlags", file: !27, line: 402, size: 128, align: 64, elements: !1493, identifier: "_ZTS10ArithFlags")
!1493 = !{!1494, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1492, file: !27, line: 404, baseType: !1495, size: 8)
!1495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !62)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1492, file: !27, line: 405, baseType: !62, size: 8, offset: 8)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1492, file: !27, line: 406, baseType: !1495, size: 8, offset: 16)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1492, file: !27, line: 407, baseType: !62, size: 8, offset: 24)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1492, file: !27, line: 408, baseType: !1495, size: 8, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1492, file: !27, line: 409, baseType: !62, size: 8, offset: 40)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1492, file: !27, line: 410, baseType: !1495, size: 8, offset: 48)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1492, file: !27, line: 411, baseType: !62, size: 8, offset: 56)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1492, file: !27, line: 412, baseType: !1495, size: 8, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1492, file: !27, line: 413, baseType: !62, size: 8, offset: 72)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1492, file: !27, line: 414, baseType: !1495, size: 8, offset: 80)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1492, file: !27, line: 415, baseType: !62, size: 8, offset: 88)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1492, file: !27, line: 416, baseType: !1495, size: 8, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1492, file: !27, line: 417, baseType: !62, size: 8, offset: 104)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1492, file: !27, line: 418, baseType: !1495, size: 8, offset: 112)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1492, file: !27, line: 419, baseType: !1495, size: 8, offset: 120)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !1268, file: !27, line: 752, baseType: !1512, size: 64, align: 64, offset: 16640)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "Flags", file: !27, line: 366, size: 64, align: 64, elements: !1513, identifier: "_ZTS5Flags")
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1512, file: !27, line: 367, baseType: !637, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1512, file: !27, line: 368, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1512, file: !27, line: 368, size: 64, elements: !1517, identifier: "_ZTSN5FlagsUt_E")
!1517 = !{!1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "cf", scope: !1516, file: !27, line: 369, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_1", scope: !1516, file: !27, line: 370, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !1516, file: !27, line: 371, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0a", scope: !1516, file: !27, line: 372, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "af", scope: !1516, file: !27, line: 374, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0b", scope: !1516, file: !27, line: 375, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "zf", scope: !1516, file: !27, line: 376, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1516, file: !27, line: 377, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tf", scope: !1516, file: !27, line: 379, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_if", scope: !1516, file: !27, line: 380, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "df", scope: !1516, file: !27, line: 381, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "of", scope: !1516, file: !27, line: 382, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "iopl", scope: !1516, file: !27, line: 384, baseType: !8, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nt", scope: !1516, file: !27, line: 385, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "must_be_0c", scope: !1516, file: !27, line: 386, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "rf", scope: !1516, file: !27, line: 388, baseType: !8, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "vm", scope: !1516, file: !27, line: 389, baseType: !8, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ac", scope: !1516, file: !27, line: 390, baseType: !8, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !1516, file: !27, line: 391, baseType: !8, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "vip", scope: !1516, file: !27, line: 393, baseType: !8, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1516, file: !27, line: 394, baseType: !8, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_eflags", scope: !1516, file: !27, line: 395, baseType: !8, size: 10, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_rflags", scope: !1516, file: !27, line: 396, baseType: !8, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "seg", scope: !1268, file: !27, line: 753, baseType: !1542, size: 192, align: 64, offset: 16704)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Segments", file: !27, line: 451, size: 192, align: 64, elements: !1543, identifier: "_ZTS8Segments")
!1543 = !{!1544, !1546, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1542, file: !27, line: 452, baseType: !1545, size: 16)
!1545 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !28)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1542, file: !27, line: 453, baseType: !1547, size: 16, offset: 16)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "SegmentSelector", file: !27, line: 76, size: 16, elements: !1548, identifier: "_ZTS15SegmentSelector")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1547, file: !27, line: 77, baseType: !28, size: 16)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1547, file: !27, line: 78, baseType: !1551, size: 16)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1547, file: !27, line: 78, size: 16, elements: !1552, identifier: "_ZTSN15SegmentSelectorUt_E")
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "rpi", scope: !1551, file: !27, line: 79, baseType: !26, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ti", scope: !1551, file: !27, line: 80, baseType: !35, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1551, file: !27, line: 81, baseType: !28, size: 13, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1542, file: !27, line: 454, baseType: !1545, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1542, file: !27, line: 455, baseType: !1547, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1542, file: !27, line: 456, baseType: !1545, size: 16, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1542, file: !27, line: 457, baseType: !1547, size: 16, offset: 80)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1542, file: !27, line: 458, baseType: !1545, size: 16, offset: 96)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1542, file: !27, line: 459, baseType: !1547, size: 16, offset: 112)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1542, file: !27, line: 460, baseType: !1545, size: 16, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1542, file: !27, line: 461, baseType: !1547, size: 16, offset: 144)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1542, file: !27, line: 462, baseType: !1545, size: 16, offset: 160)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1542, file: !27, line: 463, baseType: !1547, size: 16, offset: 176)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !1268, file: !27, line: 754, baseType: !1567, size: 768, align: 64, offset: 16896)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AddressSpace", file: !27, line: 654, size: 768, align: 64, elements: !1568, identifier: "_ZTS12AddressSpace")
!1568 = !{!1569, !1571, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1567, file: !27, line: 655, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !637)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ss_base", scope: !1567, file: !27, line: 656, baseType: !1572, size: 64, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Reg", file: !27, line: 610, size: 64, elements: !1573, identifier: "_ZTS3Reg")
!1573 = !{!1574}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1572, file: !27, line: 611, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !27, line: 611, size: 64, elements: !1576, identifier: "_ZTSN3RegUt_E")
!1576 = !{!1577, !1582, !1583, !1584}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !1575, file: !27, line: 615, baseType: !1578, size: 16, align: 8)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !27, line: 612, size: 16, elements: !1579, identifier: "_ZTSN3RegUt_Ut_E")
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1578, file: !27, line: 613, baseType: !62, size: 8)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1578, file: !27, line: 614, baseType: !62, size: 8, offset: 8)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !1575, file: !27, line: 616, baseType: !28, size: 16, align: 16)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1575, file: !27, line: 617, baseType: !8, size: 32, align: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1575, file: !27, line: 618, baseType: !637, size: 64, align: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1567, file: !27, line: 657, baseType: !1570, size: 64, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "es_base", scope: !1567, file: !27, line: 658, baseType: !1572, size: 64, offset: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1567, file: !27, line: 659, baseType: !1570, size: 64, offset: 256)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gs_base", scope: !1567, file: !27, line: 660, baseType: !1572, size: 64, offset: 320)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1567, file: !27, line: 661, baseType: !1570, size: 64, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fs_base", scope: !1567, file: !27, line: 662, baseType: !1572, size: 64, offset: 448)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1567, file: !27, line: 663, baseType: !1570, size: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ds_base", scope: !1567, file: !27, line: 664, baseType: !1572, size: 64, offset: 576)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1567, file: !27, line: 665, baseType: !1570, size: 64, offset: 640)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cs_base", scope: !1567, file: !27, line: 666, baseType: !1572, size: 64, offset: 704)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gpr", scope: !1268, file: !27, line: 755, baseType: !1596, size: 2176, align: 64, offset: 17664)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPR", file: !27, line: 677, size: 2176, align: 64, elements: !1597, identifier: "_ZTS3GPR")
!1597 = !{!1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1596, file: !27, line: 679, baseType: !1570, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rax", scope: !1596, file: !27, line: 680, baseType: !1572, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1596, file: !27, line: 681, baseType: !1570, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "rbx", scope: !1596, file: !27, line: 682, baseType: !1572, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1596, file: !27, line: 683, baseType: !1570, size: 64, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rcx", scope: !1596, file: !27, line: 684, baseType: !1572, size: 64, offset: 320)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1596, file: !27, line: 685, baseType: !1570, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "rdx", scope: !1596, file: !27, line: 686, baseType: !1572, size: 64, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1596, file: !27, line: 687, baseType: !1570, size: 64, offset: 512)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "rsi", scope: !1596, file: !27, line: 688, baseType: !1572, size: 64, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1596, file: !27, line: 689, baseType: !1570, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rdi", scope: !1596, file: !27, line: 690, baseType: !1572, size: 64, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1596, file: !27, line: 691, baseType: !1570, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !1596, file: !27, line: 692, baseType: !1572, size: 64, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1596, file: !27, line: 693, baseType: !1570, size: 64, offset: 896)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "rbp", scope: !1596, file: !27, line: 694, baseType: !1572, size: 64, offset: 960)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1596, file: !27, line: 695, baseType: !1570, size: 64, offset: 1024)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1596, file: !27, line: 696, baseType: !1572, size: 64, offset: 1088)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1596, file: !27, line: 697, baseType: !1570, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1596, file: !27, line: 698, baseType: !1572, size: 64, offset: 1216)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_10", scope: !1596, file: !27, line: 699, baseType: !1570, size: 64, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1596, file: !27, line: 700, baseType: !1572, size: 64, offset: 1344)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_11", scope: !1596, file: !27, line: 701, baseType: !1570, size: 64, offset: 1408)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1596, file: !27, line: 702, baseType: !1572, size: 64, offset: 1472)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_12", scope: !1596, file: !27, line: 703, baseType: !1570, size: 64, offset: 1536)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1596, file: !27, line: 704, baseType: !1572, size: 64, offset: 1600)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "_13", scope: !1596, file: !27, line: 705, baseType: !1570, size: 64, offset: 1664)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1596, file: !27, line: 706, baseType: !1572, size: 64, offset: 1728)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_14", scope: !1596, file: !27, line: 707, baseType: !1570, size: 64, offset: 1792)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1596, file: !27, line: 708, baseType: !1572, size: 64, offset: 1856)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_15", scope: !1596, file: !27, line: 709, baseType: !1570, size: 64, offset: 1920)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1596, file: !27, line: 710, baseType: !1572, size: 64, offset: 1984)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_16", scope: !1596, file: !27, line: 711, baseType: !1570, size: 64, offset: 2048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1596, file: !27, line: 714, baseType: !1572, size: 64, offset: 2112)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1268, file: !27, line: 756, baseType: !1633, size: 1024, align: 64, offset: 19840)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "X87Stack", file: !27, line: 719, size: 1024, align: 64, elements: !1634, identifier: "_ZTS8X87Stack")
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1633, file: !27, line: 723, baseType: !1636, size: 1024)
!1636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 1024, elements: !1310)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1633, file: !27, line: 720, size: 128, align: 64, elements: !1638, identifier: "_ZTSN8X87StackUt_E")
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1637, file: !27, line: 721, baseType: !637, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1637, file: !27, line: 722, baseType: !1641, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "float64_t", file: !1266, line: 61, baseType: !108)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1268, file: !27, line: 757, baseType: !1643, size: 1024, align: 64, offset: 20864)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MMX", file: !27, line: 729, size: 1024, align: 64, elements: !1644, identifier: "_ZTS3MMX")
!1644 = !{!1645}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1643, file: !27, line: 733, baseType: !1646, size: 1024)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1647, size: 1024, elements: !1310)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1643, file: !27, line: 730, size: 128, align: 64, elements: !1648, identifier: "_ZTSN3MMXUt_E")
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1647, file: !27, line: 731, baseType: !637, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1647, file: !27, line: 732, baseType: !1651, size: 64, offset: 64)
!1651 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "vec64_t", file: !1266, line: 294, size: 64, elements: !1652, identifier: "_ZTS7vec64_t")
!1652 = !{!1653, !1658, !1663, !1668, !1673, !1678, !1683, !1688, !1693, !1698}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "qwords", scope: !1651, file: !1266, line: 298, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint64v1_t", file: !1266, line: 199, size: 64, elements: !1655, identifier: "_ZTS10uint64v1_t")
!1655 = !{!1656}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1654, file: !1266, line: 199, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 64, elements: !1296)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1651, file: !1266, line: 300, baseType: !1659, size: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint8v8_t", file: !1266, line: 181, size: 64, elements: !1660, identifier: "_ZTS9uint8v8_t")
!1660 = !{!1661}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1659, file: !1266, line: 181, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 64, elements: !1310)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1651, file: !1266, line: 301, baseType: !1664, size: 64)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint16v4_t", file: !1266, line: 188, size: 64, elements: !1665, identifier: "_ZTS10uint16v4_t")
!1665 = !{!1666}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1664, file: !1266, line: 188, baseType: !1667, size: 64)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !353)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "dwords", scope: !1651, file: !1266, line: 302, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uint32v2_t", file: !1266, line: 194, size: 64, elements: !1670, identifier: "_ZTS10uint32v2_t")
!1670 = !{!1671}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1669, file: !1266, line: 194, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 64, elements: !1322)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "floats", scope: !1651, file: !1266, line: 303, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float32v2_t", file: !1266, line: 241, size: 64, elements: !1675, identifier: "_ZTS11float32v2_t")
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1674, file: !1266, line: 241, baseType: !1677, size: 64)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 64, elements: !1322)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "doubles", scope: !1651, file: !1266, line: 304, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float64v1_t", file: !1266, line: 246, size: 64, elements: !1680, identifier: "_ZTS11float64v1_t")
!1680 = !{!1681}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1679, file: !1266, line: 246, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1296)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !1651, file: !1266, line: 306, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int8v8_t", file: !1266, line: 212, size: 64, elements: !1685, identifier: "_ZTS8int8v8_t")
!1685 = !{!1686}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1684, file: !1266, line: 212, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, size: 64, elements: !1310)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "swords", scope: !1651, file: !1266, line: 307, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int16v4_t", file: !1266, line: 219, size: 64, elements: !1690, identifier: "_ZTS9int16v4_t")
!1690 = !{!1691}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1689, file: !1266, line: 219, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !607, size: 64, elements: !353)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sdwords", scope: !1651, file: !1266, line: 308, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int32v2_t", file: !1266, line: 225, size: 64, elements: !1695, identifier: "_ZTS9int32v2_t")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1694, file: !1266, line: 225, baseType: !1697, size: 64)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 64, elements: !1322)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sqwords", scope: !1651, file: !1266, line: 309, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int64v1_t", file: !1266, line: 230, size: 64, elements: !1700, identifier: "_ZTS9int64v1_t")
!1700 = !{!1701}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !1699, file: !1266, line: 230, baseType: !1702, size: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 64, elements: !1296)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !1268, file: !27, line: 758, baseType: !1704, size: 192, offset: 21888)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStatusFlags", file: !27, line: 332, size: 192, elements: !1705, identifier: "_ZTS14FPUStatusFlags")
!1705 = !{!1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_0", scope: !1704, file: !27, line: 333, baseType: !62, size: 8)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1704, file: !27, line: 334, baseType: !62, size: 8, offset: 8)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_1", scope: !1704, file: !27, line: 335, baseType: !62, size: 8, offset: 16)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1704, file: !27, line: 336, baseType: !62, size: 8, offset: 24)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_2", scope: !1704, file: !27, line: 337, baseType: !62, size: 8, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1704, file: !27, line: 338, baseType: !62, size: 8, offset: 40)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "_3", scope: !1704, file: !27, line: 339, baseType: !62, size: 8, offset: 48)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1704, file: !27, line: 340, baseType: !62, size: 8, offset: 56)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_4", scope: !1704, file: !27, line: 342, baseType: !62, size: 8, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1704, file: !27, line: 343, baseType: !62, size: 8, offset: 72)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "_5", scope: !1704, file: !27, line: 345, baseType: !62, size: 8, offset: 80)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1704, file: !27, line: 346, baseType: !62, size: 8, offset: 88)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_6", scope: !1704, file: !27, line: 348, baseType: !62, size: 8, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1704, file: !27, line: 349, baseType: !62, size: 8, offset: 104)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_7", scope: !1704, file: !27, line: 351, baseType: !62, size: 8, offset: 112)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1704, file: !27, line: 352, baseType: !62, size: 8, offset: 120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "_8", scope: !1704, file: !27, line: 354, baseType: !62, size: 8, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1704, file: !27, line: 355, baseType: !62, size: 8, offset: 136)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_9", scope: !1704, file: !27, line: 357, baseType: !62, size: 8, offset: 144)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1704, file: !27, line: 358, baseType: !62, size: 8, offset: 152)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "_padding", scope: !1704, file: !27, line: 360, baseType: !1727, size: 32, offset: 160)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 32, elements: !353)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "xcr0", scope: !1268, file: !27, line: 759, baseType: !1729, size: 64, offset: 22080)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "XCR0", file: !27, line: 424, size: 64, elements: !1730, identifier: "_ZTS4XCR0")
!1730 = !{!1731, !1732, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1729, file: !27, line: 425, baseType: !637, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 427, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 427, size: 64, elements: !1734, identifier: "_ZTSN4XCR0Ut_E")
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "eax", scope: !1733, file: !27, line: 428, baseType: !8, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "edx", scope: !1733, file: !27, line: 429, baseType: !8, size: 32, offset: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !27, line: 433, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !27, line: 433, size: 64, elements: !1739, identifier: "_ZTSN4XCR0Ut0_E")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "x87_fpu_mmx", scope: !1738, file: !27, line: 434, baseType: !637, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1738, file: !27, line: 435, baseType: !637, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ymm", scope: !1738, file: !27, line: 436, baseType: !637, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "bndreg", scope: !1738, file: !27, line: 437, baseType: !637, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bndcsr", scope: !1738, file: !27, line: 438, baseType: !637, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "opmask", scope: !1738, file: !27, line: 439, baseType: !637, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "zmm_hi256", scope: !1738, file: !27, line: 440, baseType: !637, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "hi16_zmm", scope: !1738, file: !27, line: 441, baseType: !637, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pkru", scope: !1738, file: !27, line: 442, baseType: !637, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1738, file: !27, line: 443, baseType: !637, size: 53, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lwp", scope: !1738, file: !27, line: 444, baseType: !637, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 0)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1738, file: !27, line: 445, baseType: !637, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 0)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "x87", scope: !1268, file: !27, line: 760, baseType: !1753, size: 4096, align: 128, offset: 22144)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPU", file: !27, line: 314, size: 4096, align: 128, elements: !1754, identifier: "_ZTS3FPU")
!1754 = !{!1755, !1851, !1914}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1753, file: !27, line: 317, baseType: !1756, size: 4096)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 315, size: 4096, elements: !1757, identifier: "_ZTSN3FPUUt_E")
!1757 = !{!1758, !1847}
!1758 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1756, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFSAVE", file: !27, line: 263, size: 1248, elements: !1760, identifier: "_ZTS8FpuFSAVE")
!1760 = !{!1761, !1779, !1780, !1801, !1802, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1759, file: !27, line: 264, baseType: !1762, size: 16)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlWord", file: !27, line: 142, size: 16, elements: !1763, identifier: "_ZTS14FPUControlWord")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1762, file: !27, line: 143, baseType: !28, size: 16)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !27, line: 144, baseType: !1766, size: 16)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !27, line: 144, size: 16, elements: !1767, identifier: "_ZTSN14FPUControlWordUt_E")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1766, file: !27, line: 145, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1766, file: !27, line: 146, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1766, file: !27, line: 147, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1766, file: !27, line: 148, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1766, file: !27, line: 149, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1766, file: !27, line: 150, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1766, file: !27, line: 151, baseType: !28, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1766, file: !27, line: 152, baseType: !39, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !1766, file: !27, line: 153, baseType: !45, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1766, file: !27, line: 154, baseType: !51, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1766, file: !27, line: 155, baseType: !28, size: 3, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1759, file: !27, line: 265, baseType: !28, size: 16, offset: 16)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1759, file: !27, line: 266, baseType: !1781, size: 16, offset: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUStatusWord", file: !27, line: 100, size: 16, elements: !1782, identifier: "_ZTS13FPUStatusWord")
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1781, file: !27, line: 101, baseType: !28, size: 16)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !27, line: 102, baseType: !1785, size: 16)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1781, file: !27, line: 102, size: 16, elements: !1786, identifier: "_ZTSN13FPUStatusWordUt_E")
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1785, file: !27, line: 103, baseType: !28, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1785, file: !27, line: 104, baseType: !28, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1785, file: !27, line: 105, baseType: !28, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1785, file: !27, line: 106, baseType: !28, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1785, file: !27, line: 107, baseType: !28, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1785, file: !27, line: 108, baseType: !28, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1785, file: !27, line: 109, baseType: !28, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1785, file: !27, line: 110, baseType: !28, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "c0", scope: !1785, file: !27, line: 111, baseType: !28, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1785, file: !27, line: 112, baseType: !28, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1785, file: !27, line: 113, baseType: !28, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1785, file: !27, line: 114, baseType: !28, size: 3, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "c3", scope: !1785, file: !27, line: 115, baseType: !28, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1785, file: !27, line: 116, baseType: !28, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1759, file: !27, line: 267, baseType: !28, size: 16, offset: 48)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1759, file: !27, line: 268, baseType: !1803, size: 16, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUTagWord", file: !27, line: 227, size: 16, elements: !1804, identifier: "_ZTS10FPUTagWord")
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1803, file: !27, line: 228, baseType: !28, size: 16)
!1806 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !27, line: 229, baseType: !1807, size: 16)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1803, file: !27, line: 229, size: 16, elements: !1808, identifier: "_ZTSN10FPUTagWordUt_E")
!1808 = !{!1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tag0", scope: !1807, file: !27, line: 230, baseType: !55, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "tag1", scope: !1807, file: !27, line: 231, baseType: !55, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tag2", scope: !1807, file: !27, line: 232, baseType: !55, size: 2, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "tag3", scope: !1807, file: !27, line: 233, baseType: !55, size: 2, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tag4", scope: !1807, file: !27, line: 234, baseType: !55, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tag5", scope: !1807, file: !27, line: 235, baseType: !55, size: 2, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tag6", scope: !1807, file: !27, line: 236, baseType: !55, size: 2, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "tag7", scope: !1807, file: !27, line: 237, baseType: !55, size: 2, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1759, file: !27, line: 269, baseType: !28, size: 16, offset: 80)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1759, file: !27, line: 270, baseType: !8, size: 32, offset: 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1759, file: !27, line: 271, baseType: !1547, size: 16, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1759, file: !27, line: 272, baseType: !28, size: 16, offset: 144)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1759, file: !27, line: 273, baseType: !8, size: 32, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1759, file: !27, line: 274, baseType: !1547, size: 16, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd3", scope: !1759, file: !27, line: 275, baseType: !28, size: 16, offset: 208)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1759, file: !27, line: 276, baseType: !1825, size: 1024, offset: 224)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1826, size: 1024, elements: !1310)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPUStackElem", file: !27, line: 162, size: 128, elements: !1827, identifier: "_ZTS12FPUStackElem")
!1827 = !{!1828, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !27, line: 163, baseType: !1829, size: 80)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !27, line: 163, size: 80, elements: !1830, identifier: "_ZTSN12FPUStackElemUt_E")
!1830 = !{!1831, !1838}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1829, file: !27, line: 164, baseType: !1832, size: 80)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "float80_t", file: !1266, line: 65, size: 80, elements: !1833, identifier: "_ZTS9float80_t")
!1833 = !{!1834}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1266, line: 66, baseType: !1835, size: 80)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 80, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 10)
!1838 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !27, line: 165, baseType: !1839, size: 80)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !27, line: 165, size: 80, elements: !1840, identifier: "_ZTSN12FPUStackElemUt_Ut_E")
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "mmx", scope: !1839, file: !27, line: 166, baseType: !637, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "infinity", scope: !1839, file: !27, line: 167, baseType: !28, size: 16, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1826, file: !27, line: 170, baseType: !1844, size: 48, offset: 80)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 48, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 6)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1756, file: !27, line: 316, baseType: !1848, size: 2848, offset: 1248)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 2848, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 356)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave32", scope: !1753, file: !27, line: 321, baseType: !1852, size: 4096)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 319, size: 4096, elements: !1853, identifier: "_ZTSN3FPUUt0_E")
!1853 = !{!1854, !1910}
!1854 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1852, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE", file: !27, line: 280, size: 3328, elements: !1856, identifier: "_ZTS9FpuFXSAVE")
!1856 = !{!1857, !1858, !1859, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1906, !1907, !1908}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1855, file: !27, line: 281, baseType: !1762, size: 16)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1855, file: !27, line: 282, baseType: !1781, size: 16, offset: 16)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1855, file: !27, line: 283, baseType: !1860, size: 8, offset: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUAbridgedTagWord", file: !27, line: 245, size: 8, elements: !1861, identifier: "_ZTS18FPUAbridgedTagWord")
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1860, file: !27, line: 246, baseType: !62, size: 8)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1860, file: !27, line: 247, baseType: !1864, size: 8)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !27, line: 247, size: 8, elements: !1865, identifier: "_ZTSN18FPUAbridgedTagWordUt_E")
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1864, file: !27, line: 248, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1864, file: !27, line: 249, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1864, file: !27, line: 250, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1864, file: !27, line: 251, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1864, file: !27, line: 252, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1864, file: !27, line: 253, baseType: !61, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1864, file: !27, line: 254, baseType: !61, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1864, file: !27, line: 255, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1855, file: !27, line: 284, baseType: !62, size: 8, offset: 40)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1855, file: !27, line: 285, baseType: !28, size: 16, offset: 48)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1855, file: !27, line: 286, baseType: !8, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1855, file: !27, line: 287, baseType: !1547, size: 16, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd1", scope: !1855, file: !27, line: 288, baseType: !28, size: 16, offset: 112)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1855, file: !27, line: 289, baseType: !8, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1855, file: !27, line: 290, baseType: !1547, size: 16, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd2", scope: !1855, file: !27, line: 291, baseType: !28, size: 16, offset: 176)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1855, file: !27, line: 292, baseType: !1883, size: 32, offset: 192)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "FPUControlStatus", file: !27, line: 188, size: 32, elements: !1884, identifier: "_ZTS16FPUControlStatus")
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !1883, file: !27, line: 189, baseType: !8, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !27, line: 190, baseType: !1887, size: 32)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !27, line: 190, size: 32, elements: !1888, identifier: "_ZTSN16FPUControlStatusUt_E")
!1888 = !{!1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ie", scope: !1887, file: !27, line: 191, baseType: !8, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "de", scope: !1887, file: !27, line: 192, baseType: !8, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ze", scope: !1887, file: !27, line: 193, baseType: !8, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oe", scope: !1887, file: !27, line: 194, baseType: !8, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ue", scope: !1887, file: !27, line: 195, baseType: !8, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pe", scope: !1887, file: !27, line: 196, baseType: !8, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "daz", scope: !1887, file: !27, line: 197, baseType: !8, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "im", scope: !1887, file: !27, line: 198, baseType: !8, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1887, file: !27, line: 199, baseType: !8, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "zm", scope: !1887, file: !27, line: 200, baseType: !8, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "om", scope: !1887, file: !27, line: 201, baseType: !8, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "um", scope: !1887, file: !27, line: 202, baseType: !8, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1887, file: !27, line: 203, baseType: !8, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rn", scope: !1887, file: !27, line: 204, baseType: !8, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !1887, file: !27, line: 205, baseType: !8, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "fz", scope: !1887, file: !27, line: 206, baseType: !8, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd", scope: !1887, file: !27, line: 207, baseType: !8, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1855, file: !27, line: 293, baseType: !1883, size: 32, offset: 224)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1855, file: !27, line: 294, baseType: !1825, size: 1024, offset: 256)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1855, file: !27, line: 295, baseType: !1909, size: 2048, offset: 1280)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1287, size: 2048, elements: !1303)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1852, file: !27, line: 320, baseType: !1911, size: 768, offset: 3328)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !62, size: 768, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave64", scope: !1753, file: !27, line: 325, baseType: !1915, size: 4096)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1753, file: !27, line: 323, size: 4096, elements: !1916, identifier: "_ZTSN3FPUUt1_E")
!1916 = !{!1917, !1931}
!1917 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !1915, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FpuFXSAVE64", file: !27, line: 299, size: 3328, elements: !1919, identifier: "_ZTS11FpuFXSAVE64")
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1918, file: !27, line: 300, baseType: !1762, size: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1918, file: !27, line: 301, baseType: !1781, size: 16, offset: 16)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ftw", scope: !1918, file: !27, line: 302, baseType: !1860, size: 8, offset: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_rsvd0", scope: !1918, file: !27, line: 303, baseType: !62, size: 8, offset: 40)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1918, file: !27, line: 304, baseType: !28, size: 16, offset: 48)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1918, file: !27, line: 305, baseType: !637, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !1918, file: !27, line: 306, baseType: !637, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1918, file: !27, line: 307, baseType: !1883, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1918, file: !27, line: 308, baseType: !1883, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st", scope: !1918, file: !27, line: 309, baseType: !1825, size: 1024, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "xmm", scope: !1918, file: !27, line: 310, baseType: !1909, size: 2048, offset: 1280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_padding0", scope: !1915, file: !27, line: 324, baseType: !1911, size: 768, offset: 3328)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "seg_caches", scope: !1268, file: !27, line: 761, baseType: !1933, size: 768, align: 64, offset: 26240)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentCaches", file: !27, line: 468, size: 768, align: 64, elements: !1934, identifier: "_ZTS13SegmentCaches")
!1934 = !{!1935, !1945, !1946, !1947, !1948, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1933, file: !27, line: 469, baseType: !1936, size: 128)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SegmentShadow", file: !27, line: 88, size: 128, elements: !1937, identifier: "_ZTS13SegmentShadow")
!1937 = !{!1938, !1943, !1944}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1936, file: !27, line: 92, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !27, line: 89, size: 64, elements: !1940, identifier: "_ZTSN13SegmentShadowUt_E")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "dword", scope: !1939, file: !27, line: 90, baseType: !8, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "qword", scope: !1939, file: !27, line: 91, baseType: !637, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1936, file: !27, line: 93, baseType: !8, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !27, line: 94, baseType: !8, size: 32, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1933, file: !27, line: 470, baseType: !1936, size: 128, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1933, file: !27, line: 471, baseType: !1936, size: 128, offset: 256)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1933, file: !27, line: 472, baseType: !1936, size: 128, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1933, file: !27, line: 473, baseType: !1936, size: 128, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gs", scope: !1933, file: !27, line: 474, baseType: !1936, size: 128, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_t", file: !1266, line: 42, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr64_t", file: !1266, line: 41, baseType: !637)
!1952 = !DILocation(line: 54, column: 8, scope: !1261)
!1953 = !DILocation(line: 55, column: 10, scope: !1261)
!1954 = !DILocation(line: 56, column: 10, scope: !1261)
!1955 = !DILocation(line: 57, column: 10, scope: !1261)
!1956 = !DILocation(line: 58, column: 10, scope: !1261)
!1957 = !DILocation(line: 61, column: 9, scope: !1261)
!1958 = !DILocation(line: 62, column: 9, scope: !1261)
!1959 = !DILocation(line: 63, column: 20, scope: !1261)
!1960 = !DILocation(line: 63, column: 24, scope: !1261)
!1961 = !DILocation(line: 63, column: 28, scope: !1261)
!1962 = !DILocation(line: 69, column: 6, scope: !1261)
!1963 = !DILocation(line: 74, column: 20, scope: !1261)
!1964 = !DILocation(line: 74, column: 24, scope: !1261)
!1965 = !DILocation(line: 74, column: 28, scope: !1261)
!1966 = !DILocation(line: 74, column: 33, scope: !1261)
!1967 = !DILocation(line: 75, column: 20, scope: !1261)
!1968 = !DILocation(line: 75, column: 24, scope: !1261)
!1969 = !DILocation(line: 75, column: 28, scope: !1261)
!1970 = !DILocation(line: 75, column: 33, scope: !1261)
!1971 = !DILocation(line: 76, column: 20, scope: !1261)
!1972 = !DILocation(line: 76, column: 24, scope: !1261)
!1973 = !DILocation(line: 76, column: 28, scope: !1261)
!1974 = !DILocation(line: 76, column: 33, scope: !1261)
!1975 = !DILocation(line: 77, column: 20, scope: !1261)
!1976 = !DILocation(line: 77, column: 24, scope: !1261)
!1977 = !DILocation(line: 77, column: 28, scope: !1261)
!1978 = !DILocation(line: 77, column: 33, scope: !1261)
!1979 = !DILocation(line: 78, column: 20, scope: !1261)
!1980 = !DILocation(line: 78, column: 24, scope: !1261)
!1981 = !DILocation(line: 78, column: 28, scope: !1261)
!1982 = !DILocation(line: 78, column: 33, scope: !1261)
!1983 = !DILocation(line: 79, column: 20, scope: !1261)
!1984 = !DILocation(line: 79, column: 24, scope: !1261)
!1985 = !DILocation(line: 79, column: 28, scope: !1261)
!1986 = !DILocation(line: 79, column: 33, scope: !1261)
!1987 = !DILocation(line: 80, column: 20, scope: !1261)
!1988 = !DILocation(line: 80, column: 24, scope: !1261)
!1989 = !DILocation(line: 80, column: 28, scope: !1261)
!1990 = !DILocation(line: 80, column: 33, scope: !1261)
!1991 = !DILocation(line: 81, column: 20, scope: !1261)
!1992 = !DILocation(line: 81, column: 24, scope: !1261)
!1993 = !DILocation(line: 81, column: 28, scope: !1261)
!1994 = !DILocation(line: 81, column: 33, scope: !1261)
!1995 = !DILocation(line: 83, column: 21, scope: !1261)
!1996 = !DILocation(line: 83, column: 25, scope: !1261)
!1997 = !DILocation(line: 83, column: 29, scope: !1261)
!1998 = !DILocation(line: 83, column: 34, scope: !1261)
!1999 = !DILocation(line: 84, column: 21, scope: !1261)
!2000 = !DILocation(line: 84, column: 25, scope: !1261)
!2001 = !DILocation(line: 84, column: 29, scope: !1261)
!2002 = !DILocation(line: 84, column: 34, scope: !1261)
!2003 = !DILocation(line: 85, column: 21, scope: !1261)
!2004 = !DILocation(line: 85, column: 25, scope: !1261)
!2005 = !DILocation(line: 85, column: 29, scope: !1261)
!2006 = !DILocation(line: 85, column: 34, scope: !1261)
!2007 = !DILocation(line: 86, column: 21, scope: !1261)
!2008 = !DILocation(line: 86, column: 25, scope: !1261)
!2009 = !DILocation(line: 86, column: 29, scope: !1261)
!2010 = !DILocation(line: 86, column: 34, scope: !1261)
!2011 = !DILocation(line: 87, column: 21, scope: !1261)
!2012 = !DILocation(line: 87, column: 25, scope: !1261)
!2013 = !DILocation(line: 87, column: 28, scope: !1261)
!2014 = !DILocation(line: 87, column: 33, scope: !1261)
!2015 = !DILocation(line: 88, column: 21, scope: !1261)
!2016 = !DILocation(line: 88, column: 25, scope: !1261)
!2017 = !DILocation(line: 88, column: 28, scope: !1261)
!2018 = !DILocation(line: 88, column: 33, scope: !1261)
!2019 = !DILocation(line: 89, column: 22, scope: !1261)
!2020 = !DILocation(line: 89, column: 26, scope: !1261)
!2021 = !DILocation(line: 89, column: 30, scope: !1261)
!2022 = !DILocation(line: 89, column: 35, scope: !1261)
!2023 = !DILocation(line: 90, column: 22, scope: !1261)
!2024 = !DILocation(line: 90, column: 26, scope: !1261)
!2025 = !DILocation(line: 90, column: 30, scope: !1261)
!2026 = !DILocation(line: 90, column: 35, scope: !1261)
!2027 = !DILocation(line: 91, column: 22, scope: !1261)
!2028 = !DILocation(line: 91, column: 26, scope: !1261)
!2029 = !DILocation(line: 91, column: 30, scope: !1261)
!2030 = !DILocation(line: 91, column: 35, scope: !1261)
!2031 = !DILocation(line: 92, column: 22, scope: !1261)
!2032 = !DILocation(line: 92, column: 26, scope: !1261)
!2033 = !DILocation(line: 92, column: 30, scope: !1261)
!2034 = !DILocation(line: 92, column: 35, scope: !1261)
!2035 = !DILocation(line: 93, column: 22, scope: !1261)
!2036 = !DILocation(line: 93, column: 26, scope: !1261)
!2037 = !DILocation(line: 93, column: 30, scope: !1261)
!2038 = !DILocation(line: 93, column: 35, scope: !1261)
!2039 = !DILocation(line: 94, column: 22, scope: !1261)
!2040 = !DILocation(line: 94, column: 26, scope: !1261)
!2041 = !DILocation(line: 94, column: 30, scope: !1261)
!2042 = !DILocation(line: 94, column: 35, scope: !1261)
!2043 = !DILocation(line: 96, column: 20, scope: !1261)
!2044 = !DILocation(line: 96, column: 24, scope: !1261)
!2045 = !DILocation(line: 96, column: 28, scope: !1261)
!2046 = !DILocation(line: 97, column: 20, scope: !1261)
!2047 = !DILocation(line: 97, column: 24, scope: !1261)
!2048 = !DILocation(line: 97, column: 28, scope: !1261)
!2049 = !DILocation(line: 98, column: 20, scope: !1261)
!2050 = !DILocation(line: 98, column: 24, scope: !1261)
!2051 = !DILocation(line: 98, column: 28, scope: !1261)
!2052 = !DILocation(line: 99, column: 20, scope: !1261)
!2053 = !DILocation(line: 99, column: 24, scope: !1261)
!2054 = !DILocation(line: 99, column: 28, scope: !1261)
!2055 = !DILocation(line: 100, column: 20, scope: !1261)
!2056 = !DILocation(line: 100, column: 24, scope: !1261)
!2057 = !DILocation(line: 100, column: 28, scope: !1261)
!2058 = !DILocation(line: 101, column: 20, scope: !1261)
!2059 = !DILocation(line: 101, column: 24, scope: !1261)
!2060 = !DILocation(line: 101, column: 28, scope: !1261)
!2061 = !DILocation(line: 102, column: 20, scope: !1261)
!2062 = !DILocation(line: 102, column: 24, scope: !1261)
!2063 = !DILocation(line: 102, column: 28, scope: !1261)
!2064 = !DILocation(line: 103, column: 20, scope: !1261)
!2065 = !DILocation(line: 103, column: 24, scope: !1261)
!2066 = !DILocation(line: 103, column: 28, scope: !1261)
!2067 = !DILocation(line: 105, column: 21, scope: !1261)
!2068 = !DILocation(line: 105, column: 25, scope: !1261)
!2069 = !DILocation(line: 105, column: 28, scope: !1261)
!2070 = !DILocation(line: 106, column: 21, scope: !1261)
!2071 = !DILocation(line: 106, column: 25, scope: !1261)
!2072 = !DILocation(line: 106, column: 28, scope: !1261)
!2073 = !DILocation(line: 107, column: 22, scope: !1261)
!2074 = !DILocation(line: 107, column: 26, scope: !1261)
!2075 = !DILocation(line: 107, column: 30, scope: !1261)
!2076 = !DILocation(line: 108, column: 22, scope: !1261)
!2077 = !DILocation(line: 108, column: 26, scope: !1261)
!2078 = !DILocation(line: 108, column: 30, scope: !1261)
!2079 = !DILocation(line: 109, column: 22, scope: !1261)
!2080 = !DILocation(line: 109, column: 26, scope: !1261)
!2081 = !DILocation(line: 109, column: 30, scope: !1261)
!2082 = !DILocation(line: 110, column: 22, scope: !1261)
!2083 = !DILocation(line: 110, column: 26, scope: !1261)
!2084 = !DILocation(line: 110, column: 30, scope: !1261)
!2085 = !DILocation(line: 111, column: 22, scope: !1261)
!2086 = !DILocation(line: 111, column: 26, scope: !1261)
!2087 = !DILocation(line: 111, column: 30, scope: !1261)
!2088 = !DILocation(line: 112, column: 22, scope: !1261)
!2089 = !DILocation(line: 112, column: 26, scope: !1261)
!2090 = !DILocation(line: 112, column: 30, scope: !1261)
!2091 = !DILocation(line: 114, column: 20, scope: !1261)
!2092 = !DILocation(line: 114, column: 24, scope: !1261)
!2093 = !DILocation(line: 114, column: 28, scope: !1261)
!2094 = !DILocation(line: 116, column: 21, scope: !1261)
!2095 = !DILocation(line: 116, column: 25, scope: !1261)
!2096 = !DILocation(line: 116, column: 29, scope: !1261)
!2097 = !DILocation(line: 117, column: 21, scope: !1261)
!2098 = !DILocation(line: 117, column: 25, scope: !1261)
!2099 = !DILocation(line: 117, column: 29, scope: !1261)
!2100 = !DILocation(line: 118, column: 21, scope: !1261)
!2101 = !DILocation(line: 118, column: 25, scope: !1261)
!2102 = !DILocation(line: 118, column: 29, scope: !1261)
!2103 = !DILocation(line: 119, column: 21, scope: !1261)
!2104 = !DILocation(line: 119, column: 25, scope: !1261)
!2105 = !DILocation(line: 119, column: 29, scope: !1261)
!2106 = !DILocation(line: 120, column: 21, scope: !1261)
!2107 = !DILocation(line: 120, column: 25, scope: !1261)
!2108 = !DILocation(line: 120, column: 29, scope: !1261)
!2109 = !DILocation(line: 121, column: 21, scope: !1261)
!2110 = !DILocation(line: 121, column: 25, scope: !1261)
!2111 = !DILocation(line: 121, column: 29, scope: !1261)
!2112 = !DILocation(line: 122, column: 21, scope: !1261)
!2113 = !DILocation(line: 122, column: 25, scope: !1261)
!2114 = !DILocation(line: 122, column: 29, scope: !1261)
!2115 = !DILocation(line: 123, column: 21, scope: !1261)
!2116 = !DILocation(line: 123, column: 25, scope: !1261)
!2117 = !DILocation(line: 123, column: 29, scope: !1261)
!2118 = !DILocation(line: 124, column: 21, scope: !1261)
!2119 = !DILocation(line: 124, column: 25, scope: !1261)
!2120 = !DILocation(line: 124, column: 29, scope: !1261)
!2121 = !DILocation(line: 127, column: 21, scope: !1261)
!2122 = !DILocation(line: 127, column: 25, scope: !1261)
!2123 = !DILocation(line: 127, column: 28, scope: !1261)
!2124 = !DILocation(line: 128, column: 21, scope: !1261)
!2125 = !DILocation(line: 128, column: 25, scope: !1261)
!2126 = !DILocation(line: 128, column: 28, scope: !1261)
!2127 = !DILocation(line: 129, column: 22, scope: !1261)
!2128 = !DILocation(line: 129, column: 26, scope: !1261)
!2129 = !DILocation(line: 129, column: 30, scope: !1261)
!2130 = !DILocation(line: 130, column: 22, scope: !1261)
!2131 = !DILocation(line: 130, column: 26, scope: !1261)
!2132 = !DILocation(line: 130, column: 30, scope: !1261)
!2133 = !DILocation(line: 131, column: 22, scope: !1261)
!2134 = !DILocation(line: 131, column: 26, scope: !1261)
!2135 = !DILocation(line: 131, column: 30, scope: !1261)
!2136 = !DILocation(line: 132, column: 22, scope: !1261)
!2137 = !DILocation(line: 132, column: 26, scope: !1261)
!2138 = !DILocation(line: 132, column: 30, scope: !1261)
!2139 = !DILocation(line: 133, column: 22, scope: !1261)
!2140 = !DILocation(line: 133, column: 26, scope: !1261)
!2141 = !DILocation(line: 133, column: 30, scope: !1261)
!2142 = !DILocation(line: 134, column: 22, scope: !1261)
!2143 = !DILocation(line: 134, column: 26, scope: !1261)
!2144 = !DILocation(line: 134, column: 30, scope: !1261)
!2145 = !DILocation(line: 136, column: 21, scope: !1261)
!2146 = !DILocation(line: 136, column: 25, scope: !1261)
!2147 = !DILocation(line: 136, column: 29, scope: !1261)
!2148 = !DILocation(line: 137, column: 21, scope: !1261)
!2149 = !DILocation(line: 137, column: 25, scope: !1261)
!2150 = !DILocation(line: 137, column: 29, scope: !1261)
!2151 = !DILocation(line: 138, column: 21, scope: !1261)
!2152 = !DILocation(line: 138, column: 25, scope: !1261)
!2153 = !DILocation(line: 138, column: 29, scope: !1261)
!2154 = !DILocation(line: 139, column: 21, scope: !1261)
!2155 = !DILocation(line: 139, column: 25, scope: !1261)
!2156 = !DILocation(line: 139, column: 29, scope: !1261)
!2157 = !DILocation(line: 140, column: 21, scope: !1261)
!2158 = !DILocation(line: 140, column: 25, scope: !1261)
!2159 = !DILocation(line: 140, column: 29, scope: !1261)
!2160 = !DILocation(line: 141, column: 21, scope: !1261)
!2161 = !DILocation(line: 141, column: 25, scope: !1261)
!2162 = !DILocation(line: 141, column: 29, scope: !1261)
!2163 = !DILocation(line: 142, column: 21, scope: !1261)
!2164 = !DILocation(line: 142, column: 25, scope: !1261)
!2165 = !DILocation(line: 142, column: 29, scope: !1261)
!2166 = !DILocation(line: 143, column: 21, scope: !1261)
!2167 = !DILocation(line: 143, column: 25, scope: !1261)
!2168 = !DILocation(line: 143, column: 29, scope: !1261)
!2169 = !DILocation(line: 144, column: 20, scope: !1261)
!2170 = !DILocation(line: 144, column: 24, scope: !1261)
!2171 = !DILocation(line: 144, column: 27, scope: !1261)
!2172 = !DILocation(line: 145, column: 20, scope: !1261)
!2173 = !DILocation(line: 145, column: 24, scope: !1261)
!2174 = !DILocation(line: 145, column: 27, scope: !1261)
!2175 = !DILocation(line: 146, column: 21, scope: !1261)
!2176 = !DILocation(line: 146, column: 25, scope: !1261)
!2177 = !DILocation(line: 146, column: 29, scope: !1261)
!2178 = !DILocation(line: 147, column: 21, scope: !1261)
!2179 = !DILocation(line: 147, column: 25, scope: !1261)
!2180 = !DILocation(line: 147, column: 29, scope: !1261)
!2181 = !DILocation(line: 148, column: 21, scope: !1261)
!2182 = !DILocation(line: 148, column: 25, scope: !1261)
!2183 = !DILocation(line: 148, column: 29, scope: !1261)
!2184 = !DILocation(line: 149, column: 21, scope: !1261)
!2185 = !DILocation(line: 149, column: 25, scope: !1261)
!2186 = !DILocation(line: 149, column: 29, scope: !1261)
!2187 = !DILocation(line: 150, column: 21, scope: !1261)
!2188 = !DILocation(line: 150, column: 25, scope: !1261)
!2189 = !DILocation(line: 150, column: 29, scope: !1261)
!2190 = !DILocation(line: 151, column: 21, scope: !1261)
!2191 = !DILocation(line: 151, column: 25, scope: !1261)
!2192 = !DILocation(line: 151, column: 29, scope: !1261)
!2193 = !DILocation(line: 152, column: 21, scope: !1261)
!2194 = !DILocation(line: 152, column: 25, scope: !1261)
!2195 = !DILocation(line: 152, column: 29, scope: !1261)
!2196 = !DILocation(line: 155, column: 20, scope: !1261)
!2197 = !DILocation(line: 155, column: 24, scope: !1261)
!2198 = !DILocation(line: 155, column: 27, scope: !1261)
!2199 = !DILocation(line: 156, column: 20, scope: !1261)
!2200 = !DILocation(line: 156, column: 24, scope: !1261)
!2201 = !DILocation(line: 156, column: 27, scope: !1261)
!2202 = !DILocation(line: 157, column: 20, scope: !1261)
!2203 = !DILocation(line: 157, column: 24, scope: !1261)
!2204 = !DILocation(line: 157, column: 27, scope: !1261)
!2205 = !DILocation(line: 158, column: 20, scope: !1261)
!2206 = !DILocation(line: 158, column: 24, scope: !1261)
!2207 = !DILocation(line: 158, column: 27, scope: !1261)
!2208 = !DILocation(line: 159, column: 20, scope: !1261)
!2209 = !DILocation(line: 159, column: 24, scope: !1261)
!2210 = !DILocation(line: 159, column: 27, scope: !1261)
!2211 = !DILocation(line: 160, column: 20, scope: !1261)
!2212 = !DILocation(line: 160, column: 24, scope: !1261)
!2213 = !DILocation(line: 160, column: 27, scope: !1261)
!2214 = !DILocation(line: 164, column: 25, scope: !1261)
!2215 = !DILocation(line: 164, column: 30, scope: !1261)
!2216 = !DILocation(line: 164, column: 38, scope: !1261)
!2217 = !DILocation(line: 165, column: 25, scope: !1261)
!2218 = !DILocation(line: 165, column: 30, scope: !1261)
!2219 = !DILocation(line: 165, column: 38, scope: !1261)
!2220 = !DILocation(line: 205, column: 22, scope: !1261)
!2221 = !DILocation(line: 205, column: 16, scope: !1261)
!2222 = !DILocation(line: 205, column: 29, scope: !1261)
!2223 = !DILocation(line: 206, column: 22, scope: !1261)
!2224 = !DILocation(line: 206, column: 16, scope: !1261)
!2225 = !DILocation(line: 206, column: 29, scope: !1261)
!2226 = !DILocation(line: 207, column: 22, scope: !1261)
!2227 = !DILocation(line: 207, column: 16, scope: !1261)
!2228 = !DILocation(line: 207, column: 29, scope: !1261)
!2229 = !DILocation(line: 208, column: 22, scope: !1261)
!2230 = !DILocation(line: 208, column: 16, scope: !1261)
!2231 = !DILocation(line: 208, column: 29, scope: !1261)
!2232 = !DILocation(line: 209, column: 22, scope: !1261)
!2233 = !DILocation(line: 209, column: 16, scope: !1261)
!2234 = !DILocation(line: 209, column: 29, scope: !1261)
!2235 = !DILocation(line: 210, column: 22, scope: !1261)
!2236 = !DILocation(line: 210, column: 16, scope: !1261)
!2237 = !DILocation(line: 210, column: 29, scope: !1261)
!2238 = !DILocation(line: 211, column: 22, scope: !1261)
!2239 = !DILocation(line: 211, column: 16, scope: !1261)
!2240 = !DILocation(line: 211, column: 29, scope: !1261)
!2241 = !DILocation(line: 212, column: 22, scope: !1261)
!2242 = !DILocation(line: 212, column: 16, scope: !1261)
!2243 = !DILocation(line: 212, column: 29, scope: !1261)
!2244 = !DILocation(line: 214, column: 22, scope: !1261)
!2245 = !DILocation(line: 214, column: 16, scope: !1261)
!2246 = !DILocation(line: 214, column: 29, scope: !1261)
!2247 = !DILocation(line: 215, column: 22, scope: !1261)
!2248 = !DILocation(line: 215, column: 16, scope: !1261)
!2249 = !DILocation(line: 215, column: 29, scope: !1261)
!2250 = !DILocation(line: 216, column: 23, scope: !1261)
!2251 = !DILocation(line: 216, column: 17, scope: !1261)
!2252 = !DILocation(line: 216, column: 31, scope: !1261)
!2253 = !DILocation(line: 217, column: 23, scope: !1261)
!2254 = !DILocation(line: 217, column: 17, scope: !1261)
!2255 = !DILocation(line: 217, column: 31, scope: !1261)
!2256 = !DILocation(line: 218, column: 23, scope: !1261)
!2257 = !DILocation(line: 218, column: 17, scope: !1261)
!2258 = !DILocation(line: 218, column: 31, scope: !1261)
!2259 = !DILocation(line: 219, column: 23, scope: !1261)
!2260 = !DILocation(line: 219, column: 17, scope: !1261)
!2261 = !DILocation(line: 219, column: 31, scope: !1261)
!2262 = !DILocation(line: 220, column: 23, scope: !1261)
!2263 = !DILocation(line: 220, column: 17, scope: !1261)
!2264 = !DILocation(line: 220, column: 31, scope: !1261)
!2265 = !DILocation(line: 221, column: 23, scope: !1261)
!2266 = !DILocation(line: 221, column: 17, scope: !1261)
!2267 = !DILocation(line: 221, column: 31, scope: !1261)
!2268 = !DILocation(line: 245, column: 22, scope: !1261)
!2269 = !DILocation(line: 245, column: 16, scope: !1261)
!2270 = !DILocation(line: 245, column: 29, scope: !1261)
!2271 = !DILocation(line: 246, column: 22, scope: !1261)
!2272 = !DILocation(line: 246, column: 16, scope: !1261)
!2273 = !DILocation(line: 246, column: 29, scope: !1261)
!2274 = !DILocation(line: 247, column: 22, scope: !1261)
!2275 = !DILocation(line: 247, column: 16, scope: !1261)
!2276 = !DILocation(line: 247, column: 29, scope: !1261)
!2277 = !DILocation(line: 248, column: 22, scope: !1261)
!2278 = !DILocation(line: 248, column: 16, scope: !1261)
!2279 = !DILocation(line: 248, column: 29, scope: !1261)
!2280 = !DILocation(line: 249, column: 22, scope: !1261)
!2281 = !DILocation(line: 249, column: 16, scope: !1261)
!2282 = !DILocation(line: 249, column: 29, scope: !1261)
!2283 = !DILocation(line: 250, column: 22, scope: !1261)
!2284 = !DILocation(line: 250, column: 16, scope: !1261)
!2285 = !DILocation(line: 250, column: 29, scope: !1261)
!2286 = !DILocation(line: 251, column: 22, scope: !1261)
!2287 = !DILocation(line: 251, column: 16, scope: !1261)
!2288 = !DILocation(line: 251, column: 29, scope: !1261)
!2289 = !DILocation(line: 252, column: 22, scope: !1261)
!2290 = !DILocation(line: 252, column: 16, scope: !1261)
!2291 = !DILocation(line: 252, column: 29, scope: !1261)
!2292 = !DILocation(line: 255, column: 22, scope: !1261)
!2293 = !DILocation(line: 255, column: 16, scope: !1261)
!2294 = !DILocation(line: 255, column: 29, scope: !1261)
!2295 = !DILocation(line: 256, column: 22, scope: !1261)
!2296 = !DILocation(line: 256, column: 16, scope: !1261)
!2297 = !DILocation(line: 256, column: 29, scope: !1261)
!2298 = !DILocation(line: 257, column: 23, scope: !1261)
!2299 = !DILocation(line: 257, column: 17, scope: !1261)
!2300 = !DILocation(line: 257, column: 31, scope: !1261)
!2301 = !DILocation(line: 258, column: 23, scope: !1261)
!2302 = !DILocation(line: 258, column: 17, scope: !1261)
!2303 = !DILocation(line: 258, column: 31, scope: !1261)
!2304 = !DILocation(line: 259, column: 23, scope: !1261)
!2305 = !DILocation(line: 259, column: 17, scope: !1261)
!2306 = !DILocation(line: 259, column: 31, scope: !1261)
!2307 = !DILocation(line: 260, column: 23, scope: !1261)
!2308 = !DILocation(line: 260, column: 17, scope: !1261)
!2309 = !DILocation(line: 260, column: 31, scope: !1261)
!2310 = !DILocation(line: 261, column: 23, scope: !1261)
!2311 = !DILocation(line: 261, column: 17, scope: !1261)
!2312 = !DILocation(line: 261, column: 31, scope: !1261)
!2313 = !DILocation(line: 262, column: 23, scope: !1261)
!2314 = !DILocation(line: 262, column: 17, scope: !1261)
!2315 = !DILocation(line: 262, column: 31, scope: !1261)
!2316 = !DILocation(line: 285, column: 21, scope: !1261)
!2317 = !DILocation(line: 285, column: 24, scope: !1261)
!2318 = !DILocation(line: 285, column: 15, scope: !1261)
!2319 = !DILocation(line: 285, column: 33, scope: !1261)
!2320 = !DILocation(line: 286, column: 21, scope: !1261)
!2321 = !DILocation(line: 286, column: 24, scope: !1261)
!2322 = !DILocation(line: 286, column: 15, scope: !1261)
!2323 = !DILocation(line: 286, column: 33, scope: !1261)
!2324 = !DILocation(line: 287, column: 21, scope: !1261)
!2325 = !DILocation(line: 287, column: 24, scope: !1261)
!2326 = !DILocation(line: 287, column: 15, scope: !1261)
!2327 = !DILocation(line: 287, column: 33, scope: !1261)
!2328 = !DILocation(line: 288, column: 21, scope: !1261)
!2329 = !DILocation(line: 288, column: 24, scope: !1261)
!2330 = !DILocation(line: 288, column: 15, scope: !1261)
!2331 = !DILocation(line: 288, column: 33, scope: !1261)
!2332 = !DILocation(line: 289, column: 21, scope: !1261)
!2333 = !DILocation(line: 289, column: 24, scope: !1261)
!2334 = !DILocation(line: 289, column: 15, scope: !1261)
!2335 = !DILocation(line: 289, column: 33, scope: !1261)
!2336 = !DILocation(line: 290, column: 21, scope: !1261)
!2337 = !DILocation(line: 290, column: 24, scope: !1261)
!2338 = !DILocation(line: 290, column: 15, scope: !1261)
!2339 = !DILocation(line: 290, column: 33, scope: !1261)
!2340 = !DILocation(line: 291, column: 21, scope: !1261)
!2341 = !DILocation(line: 291, column: 24, scope: !1261)
!2342 = !DILocation(line: 291, column: 15, scope: !1261)
!2343 = !DILocation(line: 291, column: 33, scope: !1261)
!2344 = !DILocation(line: 292, column: 21, scope: !1261)
!2345 = !DILocation(line: 292, column: 24, scope: !1261)
!2346 = !DILocation(line: 292, column: 15, scope: !1261)
!2347 = !DILocation(line: 292, column: 33, scope: !1261)
!2348 = !DILocation(line: 318, column: 21, scope: !1261)
!2349 = !DILocation(line: 318, column: 25, scope: !1261)
!2350 = !DILocation(line: 318, column: 15, scope: !1261)
!2351 = !DILocation(line: 318, column: 34, scope: !1261)
!2352 = !DILocation(line: 318, column: 38, scope: !1261)
!2353 = !DILocation(line: 318, column: 45, scope: !1261)
!2354 = !DILocation(line: 319, column: 21, scope: !1261)
!2355 = !DILocation(line: 319, column: 25, scope: !1261)
!2356 = !DILocation(line: 319, column: 15, scope: !1261)
!2357 = !DILocation(line: 319, column: 34, scope: !1261)
!2358 = !DILocation(line: 319, column: 38, scope: !1261)
!2359 = !DILocation(line: 319, column: 45, scope: !1261)
!2360 = !DILocation(line: 320, column: 21, scope: !1261)
!2361 = !DILocation(line: 320, column: 25, scope: !1261)
!2362 = !DILocation(line: 320, column: 15, scope: !1261)
!2363 = !DILocation(line: 320, column: 34, scope: !1261)
!2364 = !DILocation(line: 320, column: 38, scope: !1261)
!2365 = !DILocation(line: 320, column: 45, scope: !1261)
!2366 = !DILocation(line: 321, column: 21, scope: !1261)
!2367 = !DILocation(line: 321, column: 25, scope: !1261)
!2368 = !DILocation(line: 321, column: 15, scope: !1261)
!2369 = !DILocation(line: 321, column: 34, scope: !1261)
!2370 = !DILocation(line: 321, column: 38, scope: !1261)
!2371 = !DILocation(line: 321, column: 45, scope: !1261)
!2372 = !DILocation(line: 322, column: 21, scope: !1261)
!2373 = !DILocation(line: 322, column: 25, scope: !1261)
!2374 = !DILocation(line: 322, column: 15, scope: !1261)
!2375 = !DILocation(line: 322, column: 34, scope: !1261)
!2376 = !DILocation(line: 322, column: 38, scope: !1261)
!2377 = !DILocation(line: 322, column: 45, scope: !1261)
!2378 = !DILocation(line: 323, column: 21, scope: !1261)
!2379 = !DILocation(line: 323, column: 25, scope: !1261)
!2380 = !DILocation(line: 323, column: 15, scope: !1261)
!2381 = !DILocation(line: 323, column: 34, scope: !1261)
!2382 = !DILocation(line: 323, column: 38, scope: !1261)
!2383 = !DILocation(line: 323, column: 45, scope: !1261)
!2384 = !DILocation(line: 324, column: 21, scope: !1261)
!2385 = !DILocation(line: 324, column: 25, scope: !1261)
!2386 = !DILocation(line: 324, column: 15, scope: !1261)
!2387 = !DILocation(line: 324, column: 34, scope: !1261)
!2388 = !DILocation(line: 324, column: 38, scope: !1261)
!2389 = !DILocation(line: 324, column: 45, scope: !1261)
!2390 = !DILocation(line: 325, column: 21, scope: !1261)
!2391 = !DILocation(line: 325, column: 25, scope: !1261)
!2392 = !DILocation(line: 325, column: 15, scope: !1261)
!2393 = !DILocation(line: 325, column: 34, scope: !1261)
!2394 = !DILocation(line: 325, column: 38, scope: !1261)
!2395 = !DILocation(line: 325, column: 45, scope: !1261)
!2396 = !DILocation(line: 328, column: 20, scope: !1261)
!2397 = !DILocation(line: 328, column: 26, scope: !1261)
!2398 = !DILocation(line: 329, column: 20, scope: !1261)
!2399 = !DILocation(line: 329, column: 26, scope: !1261)
!2400 = !DILocation(line: 330, column: 20, scope: !1261)
!2401 = !DILocation(line: 330, column: 26, scope: !1261)
!2402 = !DILocation(line: 331, column: 20, scope: !1261)
!2403 = !DILocation(line: 331, column: 26, scope: !1261)
!2404 = !DILocation(line: 332, column: 20, scope: !1261)
!2405 = !DILocation(line: 332, column: 26, scope: !1261)
!2406 = !DILocation(line: 333, column: 20, scope: !1261)
!2407 = !DILocation(line: 333, column: 26, scope: !1261)
!2408 = !DILocation(line: 334, column: 20, scope: !1261)
!2409 = !DILocation(line: 334, column: 26, scope: !1261)
!2410 = !DILocation(line: 337, column: 9, scope: !1261)
!2411 = !DILocation(line: 338, column: 9, scope: !1261)
!2412 = !DILocation(line: 339, column: 9, scope: !1261)
!2413 = !DILocation(line: 340, column: 9, scope: !1261)
!2414 = !DILocation(line: 341, column: 9, scope: !1261)
!2415 = !DILocation(line: 342, column: 9, scope: !1261)
!2416 = !DILocation(line: 343, column: 9, scope: !1261)
!2417 = !DILocation(line: 344, column: 9, scope: !1261)
!2418 = !DILocation(line: 347, column: 9, scope: !1261)
!2419 = !DILocation(line: 348, column: 9, scope: !1261)
!2420 = !DILocation(line: 349, column: 9, scope: !1261)
!2421 = !DILocation(line: 350, column: 9, scope: !1261)
!2422 = !DILocation(line: 351, column: 9, scope: !1261)
!2423 = !DILocation(line: 353, column: 9, scope: !1261)
!2424 = !DILocation(line: 357, column: 3, scope: !1261)
!2425 = distinct !DISubprogram(name: "__remill_intrinsics", scope: !2426, file: !2426, line: 35, type: !95, isLocal: false, isDefinition: true, scopeLine: 35, flags: DIFlagPrototyped, isOptimized: false, unit: !1, variables: !7)
!2426 = !DIFile(filename: "/home/ubuntu/Github/remill/remill/Arch/Runtime/Intrinsics.cpp", directory: "/home/ubuntu/Github/remill/remill-build/remill/Arch/X86/Runtime")
!2427 = !DILocation(line: 116, column: 1, scope: !2425)
!2428 = !{!2429, !2429, i64 0}
!2429 = !{!"long", !2430, i64 0}
!2430 = !{!"omnipotent char", !2431, i64 0}
!2431 = !{!"Simple C++ TBAA"}
!2432 = !{!2433, !2430, i64 2065}
!2433 = !{!"_ZTS5State", !2430, i64 16, !2434, i64 2064, !2430, i64 2080, !2435, i64 2088, !2437, i64 2112, !2439, i64 2208, !2440, i64 2480, !2441, i64 2608, !2442, i64 2736, !2430, i64 2760, !2430, i64 2768, !2443, i64 3280}
!2434 = !{!"_ZTS10ArithFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15}
!2435 = !{!"_ZTS8Segments", !2436, i64 0, !2430, i64 2, !2436, i64 4, !2430, i64 6, !2436, i64 8, !2430, i64 10, !2436, i64 12, !2430, i64 14, !2436, i64 16, !2430, i64 18, !2436, i64 20, !2430, i64 22}
!2436 = !{!"short", !2430, i64 0}
!2437 = !{!"_ZTS12AddressSpace", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88}
!2438 = !{!"_ZTS3Reg", !2430, i64 0}
!2439 = !{!"_ZTS3GPR", !2429, i64 0, !2438, i64 8, !2429, i64 16, !2438, i64 24, !2429, i64 32, !2438, i64 40, !2429, i64 48, !2438, i64 56, !2429, i64 64, !2438, i64 72, !2429, i64 80, !2438, i64 88, !2429, i64 96, !2438, i64 104, !2429, i64 112, !2438, i64 120, !2429, i64 128, !2438, i64 136, !2429, i64 144, !2438, i64 152, !2429, i64 160, !2438, i64 168, !2429, i64 176, !2438, i64 184, !2429, i64 192, !2438, i64 200, !2429, i64 208, !2438, i64 216, !2429, i64 224, !2438, i64 232, !2429, i64 240, !2438, i64 248, !2429, i64 256, !2438, i64 264}
!2440 = !{!"_ZTS8X87Stack", !2430, i64 0}
!2441 = !{!"_ZTS3MMX", !2430, i64 0}
!2442 = !{!"_ZTS14FPUStatusFlags", !2430, i64 0, !2430, i64 1, !2430, i64 2, !2430, i64 3, !2430, i64 4, !2430, i64 5, !2430, i64 6, !2430, i64 7, !2430, i64 8, !2430, i64 9, !2430, i64 10, !2430, i64 11, !2430, i64 12, !2430, i64 13, !2430, i64 14, !2430, i64 15, !2430, i64 16, !2430, i64 17, !2430, i64 18, !2430, i64 19, !2430, i64 20}
!2443 = !{!"_ZTS13SegmentCaches", !2444, i64 0, !2444, i64 16, !2444, i64 32, !2444, i64 48, !2444, i64 64, !2444, i64 80}
!2444 = !{!"_ZTS13SegmentShadow", !2430, i64 0, !2445, i64 8, !2445, i64 12}
!2445 = !{!"int", !2430, i64 0}
!2446 = !{!2433, !2430, i64 2067}
!2447 = !{!2433, !2430, i64 2069}
!2448 = !{!2433, !2430, i64 2071}
!2449 = !{!2433, !2430, i64 2073}
!2450 = !{!2433, !2430, i64 2077}
!2451 = !{!2430, !2430, i64 0}
!2452 = !{!2453, !2453, i64 0}
!2453 = !{!"double", !2430, i64 0}
!2454 = !{!2445, !2445, i64 0}
!2455 = !{!2456, !2456, i64 0}
!2456 = !{!"float", !2430, i64 0}
!2457 = !{!2458, !2460}
!2458 = distinct !{!2458, !2459, !"ext_6026d0_sin: argument 0"}
!2459 = distinct !{!2459, !"ext_6026d0_sin"}
!2460 = distinct !{!2460, !2459, !"ext_6026d0_sin: argument 1"}
!2461 = !{!2458}
!2462 = !{!2460}
!2463 = !{!2464, !2466}
!2464 = distinct !{!2464, !2465, !"ext_6026d0_sin: argument 0"}
!2465 = distinct !{!2465, !"ext_6026d0_sin"}
!2466 = distinct !{!2466, !2465, !"ext_6026d0_sin: argument 1"}
!2467 = !{!2464}
!2468 = !{!2466}
!2469 = !{!2470, !2472}
!2470 = distinct !{!2470, !2471, !"ext_6026c8_tan: argument 0"}
!2471 = distinct !{!2471, !"ext_6026c8_tan"}
!2472 = distinct !{!2472, !2471, !"ext_6026c8_tan: argument 1"}
!2473 = !{!2470}
!2474 = !{!2472}
!2475 = !{!2476, !2478}
!2476 = distinct !{!2476, !2477, !"ext_6026d0_sin: argument 0"}
!2477 = distinct !{!2477, !"ext_6026d0_sin"}
!2478 = distinct !{!2478, !2477, !"ext_6026d0_sin: argument 1"}
!2479 = !{!2476}
!2480 = !{!2478}
!2481 = !{!2482, !2484}
!2482 = distinct !{!2482, !2483, !"ext_602668_cos: argument 0"}
!2483 = distinct !{!2483, !"ext_602668_cos"}
!2484 = distinct !{!2484, !2483, !"ext_602668_cos: argument 1"}
!2485 = !{!2482}
!2486 = !{!2484}
!2487 = !{!2488, !2490}
!2488 = distinct !{!2488, !2489, !"ext_602668_cos: argument 0"}
!2489 = distinct !{!2489, !"ext_602668_cos"}
!2490 = distinct !{!2490, !2489, !"ext_602668_cos: argument 1"}
!2491 = !{!2488}
!2492 = !{!2490}
!2493 = !{!2494, !2496}
!2494 = distinct !{!2494, !2495, !"ext_6026d0_sin: argument 0"}
!2495 = distinct !{!2495, !"ext_6026d0_sin"}
!2496 = distinct !{!2496, !2495, !"ext_6026d0_sin: argument 1"}
!2497 = !{!2494}
!2498 = !{!2496}
!2499 = !{!2500, !2502}
!2500 = distinct !{!2500, !2501, !"ext_6026d0_sin: argument 0"}
!2501 = distinct !{!2501, !"ext_6026d0_sin"}
!2502 = distinct !{!2502, !2501, !"ext_6026d0_sin: argument 1"}
!2503 = !{!2500}
!2504 = !{!2502}
!2505 = !{!2506, !2508}
!2506 = distinct !{!2506, !2507, !"ext_6026d0_sin: argument 0"}
!2507 = distinct !{!2507, !"ext_6026d0_sin"}
!2508 = distinct !{!2508, !2507, !"ext_6026d0_sin: argument 1"}
!2509 = !{!2506}
!2510 = !{!2508}
!2511 = !{!2436, !2436, i64 0}
